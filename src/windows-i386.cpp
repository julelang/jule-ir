// Auto generated by JuleC.
// JuleC version: jule0.0.13 @master
// Date: 9/6/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer -lws2_32 -lshell32 dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1c4aebe77_Importer{};
struct _1c46218c0_Kind{};
struct _1c4b77c6c_Lookup{};
struct _1ab2aa929_CommonFlag{};
struct _1d9dd25aa_acceptRange;
struct _1c216c5c7_Range16;
struct _1c216ca4a_Range32;
struct _1c216cebd_RangeTable;
struct _1c21923dd_lazyBuff;
struct _205567a7c_DirEntry;
struct _205567c69_Directory;
struct _205572c1e_File;
struct _2055752a4_Status;
struct _1c22b0880_cmdAttrs;
struct _1c2220900_Log;
struct _2039861ab_Token;
struct _20398b546_File;
struct _20398d59d_kindPair;
struct _20399410e_lex;
struct _1c2c4dcbd_floatInfo;
struct _1c2ec0e96_decimalSlice;
struct _1c31725dc_leftCheat;
struct _1c31728ea_decimal;
struct _1c25bc4e9_Const;
struct _1c4a59b93_Ast;
struct _1c4a5a985_Node;
struct _1c4a5ad81_Directive;
struct _1c4a8e337_TypeDecl;
struct _1c4a8e8ed_IdentTypeDecl;
struct _1c4a9004c_SubIdentTypeDecl;
struct _1c4a90404_NamespaceTypeDecl;
struct _1c4a906e0_SptrTypeDecl;
struct _1c4a90adb_SlcTypeDecl;
struct _1c4a90dc7_TupleTypeDecl;
struct _1c4a911b3_PtrTypeDecl;
struct _1c4a91845_ArrTypeDecl;
struct _1c4a92093_MapTypeDecl;
struct _1c4a9244a_RetTypeDecl;
struct _1c4a93858_Expr;
struct _1c4a93b44_RangeExpr;
struct _1c4a941e9_UseExpr;
struct _1c4a944d5_TupleExpr;
struct _1c4a9488c_LitExpr;
struct _1c4a95096_UnsafeExpr;
struct _1c4a95519_IdentExpr;
struct _1c4a95c23_UnaryExpr;
struct _1c4a960ca_VariadicExpr;
struct _1c4a96482_CastExpr;
struct _1c4a96839_NsSelectionExpr;
struct _1c4a96cac_SubIdentExpr;
struct _1c4a97230_BinopExpr;
struct _1c4a9783a_FnCallExpr;
struct _1c4a982b9_FieldExprPair;
struct _1c4a98a17_StructLit;
struct _1c4a98e8a_BraceLit;
struct _1c4a99760_KeyValPair;
struct _1c4a99e47_SliceExpr;
struct _1c4a9a7b6_IndexingExpr;
struct _1c4a9adc1_SlicingExpr;
struct _1c4a9b1ac_Constraint;
struct _1c4a9b630_GenericDecl;
struct _1c4a9b9d7_LabelSt;
struct _1c4a9bd8e_GotoSt;
struct _1c4a9c17a_FallSt;
struct _1c4a9c785_AssignLeft;
struct _1c4a9ccc4_AssignSt;
struct _1c4a9dbb5_Stmt;
struct _1c4a9e2c0_ScopeTree;
struct _1c4a9e996_ParamDecl;
struct _1c4aa0cb6_FnDecl;
struct _1c4aa1c95_VarDecl;
struct _1c4aa214c_RetSt;
struct _1c4aa27ac_Iter;
struct _1c4aa3082_WhileKind;
struct _1c4aa3923_RangeKind;
struct _1c4aa3cca_BreakSt;
struct _1c4aa4182_ContSt;
struct _1c4aa4605_If;
struct _1c4aa49ac_Else;
struct _1c4aa4e30_Conditional;
struct _1c4aa5606_TypeAliasDecl;
struct _1c4aa5a79_Case;
struct _1c4aa6250_MatchCase;
struct _1c4aa69e2_UseDecl;
struct _1c4aa6e65_EnumItemDecl;
struct _1c4aa798d_EnumDecl;
struct _1c4aa8494_TypeEnumItemDecl;
struct _1c4aa8a9e_TypeEnumDecl;
struct _1c4aa8c9c_FieldDecl;
struct _1c4aa9550_StructDecl;
struct _1c4aa9c26_TraitDecl;
struct _1c4aaa331_Impl;
struct _1c4a7e877_Field;
struct _1c4a610c8_Operators;
struct _1c4a86ebc_Struct;
struct _1c4aab068_FieldIns;
struct _1c4aab783_OperandExprModel;
struct _1c4aab970_BinopExprModel;
struct _1c4aabb5c_UnaryExprModel;
struct _1c4aabd49_StructArgExprModel;
struct _1c4aac036_StructLitExprModel;
struct _1c4aac223_AllocStructLitExprModel;
struct _1c4aac410_CastingExprModel;
struct _1c4aac5ec_FnCallExprModel;
struct _1c4aac7d9_SliceExprModel;
struct _1c4aac9c6_IndexingExprModel;
struct _1c4aacbb3_AnonFnExprModel;
struct _1c4aacda0_KeyValPairExprModel;
struct _1c4aad08c_MapExprModel;
struct _1c4aad279_SlicingExprModel;
struct _1c4aad466_TraitSubIdentExprModel;
struct _1c4aad884_StructSubIdentExprModel;
struct _1c4aada71_StructStaticIdentExprModel;
struct _1c4aadc5d_ArrayExprModel;
struct _1c4aade4a_CommonIdentExprModel;
struct _1c4aae137_CommonSubIdentExprModel;
struct _1c4aae324_TupleExprModel;
struct _1c4aae511_BuiltinOutCallExprModel;
struct _1c4aae6ed_BuiltinOutlnCallExprModel;
struct _1c4aae8da_BuiltinCloneCallExprModel;
struct _1c4aaeac7_BuiltinNewCallExprModel;
struct _1c4aaecb4_BuiltinPanicCallExprModel;
struct _1c4aaeea1_BuiltinAssertCallExprModel;
struct _1c4ab018d_BuiltinMakeCallExprModel;
struct _1c4ab037a_BuiltinAppendCallExprModel;
struct _1c4ab0567_BuiltinLenCallExprModel;
struct _1c4ab0754_BuiltinCapCallExprModel;
struct _1c4aad653_BuiltinDeleteCallExprModel;
struct _1c4ab0db4_BuiltinCopyCallExprModel;
struct _1c4ab10a1_BuiltinErrorCallExprModel;
struct _1c4ab128d_SizeofExprModel;
struct _1c4ab147a_AlignofExprModel;
struct _1c4ab1667_RuneExprModel;
struct _1c4ab1854_IntegratedToStrExprModel;
struct _1c4ab1a41_BackendEmitExprModel;
struct _1c4ab1c2d_FreeExprModel;
struct _1c4ab1e1a_RetType;
struct _1c4ab2107_Param;
struct _1c4ab22e4_Fn;
struct _1c4ab2b30_ParamIns;
struct _1c4ab39ee_FnIns;
struct _1c4ab6958_ReferenceStack;
struct _1c4ab7c89_Pass;
struct _1c4abc4ca_symbolBuilder;
struct _1c4ac306e_Trait;
struct _1c4ac4d0c_EnumItem;
struct _1c4ac5802_Enum;
struct _1c4ac6836_TypeEnumItem;
struct _1c4ac6dec_TypeEnum;
struct _1c4ac942c_constraintChecker;
struct _1c4acb363_Impl;
struct _1c4ad13bd_Scope;
struct _1c4ad17b9_If;
struct _1c4ad1aa5_Else;
struct _1c4ad1e29_Conditional;
struct _1c4ad2215_InfIter;
struct _1c4ad2688_WhileIter;
struct _1c4ad306d_RangeIter;
struct _1c4ad3469_ContSt;
struct _1c4ad3821_BreakSt;
struct _1c4ad3b0c_Label;
struct _1c4ad3de8_GotoSt;
struct _1c4ad42a0_Postfix;
struct _1c4ad4723_Assign;
struct _1c4ad4aca_MultiAssign;
struct _1c4ad5119_Match;
struct _1c4ad5b64_Case;
struct _1c4ad6219_FallSt;
struct _1c4ad658d_RetSt;
struct _1c4ad6b98_scopeLabel;
struct _1c4ad711b_scopeGoto;
struct _1c4ad7e30_scopeChecker;
struct _1c4ae8a45_directiveChecker;
struct _1c4aeeb28_ImportInfo;
struct _1c4b02a82_Package;
struct _1c4b07c74_Sema;
struct _1c4b295d1_missingRetChecker;
struct _1c4b2b7e2_IterRelation;
struct _1c4b2c837_Var;
struct _1c4b2d5d5_FuncPattern;
struct _1c45d0a16_typeCompatibilityChecker;
struct _1c45d263e_assignTypeChecker;
struct _1c45d4124_dynamicTypeAnnotation;
struct _1c45d89db_fnCallArgChecker;
struct _1c45db3e5_structLitChecker;
struct _1c45dcec9_rangeChecker;
struct _1c45e0064_retTypeChecker;
struct _1c45e20dd_SymbolTable;
struct _1c45e6e17_Data;
struct _1c45e7e90_Value;
struct _1c45e8985_Eval;
struct _1c461482a_unaryEval;
struct _1c46165b8_binaryEval;
struct _1c47006e6_InsGeneric;
struct _1c4701230_TypeAlias;
struct _1c4621d32_TypeKind;
struct _1c4b610b8_TypeSymbol;
struct _1c4b6197b_Prim;
struct _1c4b65210_Sptr;
struct _1c4b65b6c_Slc;
struct _1c4b66673_Tuple;
struct _1c4b6719b_Map;
struct _1c4b67c90_Arr;
struct _1c4b686ec_Ptr;
struct _1c4b69643_referencer;
struct _1c4b6a523_typeChecker;
struct _1c4b72c34_identTypeLookup;
struct _1a9aa4213_FileInfo;
struct _1a9aecd2d_stmt;
struct _1a9aed658_scopeParser;
struct _1a9b09b3c_exprBuilder;
struct _1a9b16473_assignInfo;
struct _1a9b19ca1_parser;
struct _1a9b2a9c6_typeBuilder;
struct _1c4cd833e_CompileInfo;
struct _1c4cd9692_directiveEval;
struct _1a9a21e2d_JuleImporter;
struct _1c47ecbbc_OrderedDefines;
struct _1a9b2de5d_defineOrderer;
struct _1a9c191e1_liveTable;
struct _1a9c4ede7_scopeDeadCode;
struct _1a9c53d52_exprDeadCode;
struct _1c1e783a0_StrCompExprModel;
struct _1c48999a0_StrAppendExprModel;
struct _1c1deca1c_UnsafeBinopExprModel;
struct _1c48a5deb_UnsafeIndexingExprModel;
struct _1c1dc96db_PushToSliceExprModel;
struct _1c1e2756e_MutSlicingExprModel;
struct _1c1e0ec4e_StrInsertBeginExprModel;
struct _1c485b1c0_scopeOptimizer;
struct _1c485b3ac_exprOptimizer;
struct _1a9b50db4_Optimizer;
struct _1a9c6e213_AnsiEscape;
struct _1a9c706ed_Logger;
struct _1ab264e99_AbsTime;
struct _1ab26563c_Time;
struct _1ab1aea4d_scopeCoder;
struct _1ab1b7e96_exprCoder;
struct _1ab1c7736_deriveCoder;
struct _1ab1c911c_TestCoder;
struct _1ab1cb65d_identCoder;
struct _1ab20e00e_SerializationInfo;
struct _1ab1d4523_traitHash;
struct _1ab26c457_traitCast;
struct _1ab275b58_customType;
struct _1ab2765c6_typeCoder;
struct _1ab27e18e_resultCoder;
struct _1adb93be4_Flag;
struct _1adb97852_Flag;
struct _1adb9b119_Flag;
struct _1adb9e925_Flag;
struct _1adba31dc_Flag;
struct _1ab2abd37_FlagSet;
struct _1ab2ae510_argParser;
struct _1ab26c644_ObjectCoder;
struct _1a9c194dd_ObjectDeadCode;
struct _1c481c00a_IR;
struct _1c4aab255_StructIns;
struct _1c228eead_Cmd;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c45e6e17_Data__jule_tuple_x_1c45e6e17_Data {
	jule::Ptr<_1c45e6e17_Data> __jule_result_arg0;
	jule::Ptr<_1c45e6e17_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1c4aa5a79_Case__jule_tuple_bool {
	jule::Ptr<_1c4aa5a79_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c4aa5a79_Case__jule_tuple_x_1c4aa49ac_Else {
	jule::Slice<jule::Ptr<_1c4aa5a79_Case>> __jule_result_arg0;
	jule::Ptr<_1c4aa49ac_Else> __jule_result_arg1;
};
struct __jule_tuple__1c4a9d984_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool {
	jule::Ptr<_1c4a9ccc4_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1c4a8e337_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c4a9244a_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1c4a9244a_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log {
	jule::Slice<jule::Ptr<_1c4a59b93_Ast>> __jule_result_arg0;
	jule::Slice<_1c2220900_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1c2220900_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1c2220900_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c481c00a_IR__jule_tuple_s_1c2220900_Log {
	jule::Ptr<_1c481c00a_IR> __jule_result_arg0;
	jule::Slice<_1c2220900_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1c2635573_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1c2635573_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1c2635573_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1c2635573_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c45e20dd_SymbolTable__jule_tuple_s_1c2220900_Log {
	jule::Ptr<_1c45e20dd_SymbolTable> __jule_result_arg0;
	jule::Slice<_1c2220900_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c4b02a82_Package__jule_tuple_s_1c2220900_Log {
	jule::Ptr<_1c4b02a82_Package> __jule_result_arg0;
	jule::Slice<_1c2220900_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log {
	jule::Ptr<_1c4a59b93_Ast> __jule_result_arg0;
	jule::Slice<_1c2220900_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_2039861ab_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_2039861ab_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_2039861ab_Token__jule_tuple_sx_2039861ab_Token {
	jule::Slice<jule::Ptr<_2039861ab_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_2039861ab_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_2039861ab_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_2039861ab_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log {
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> __jule_result_arg0;
	jule::Slice<_1c2220900_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _1d9dd25aa_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_1d9dd25aa_acceptRange(void) = default;

	inline bool operator==(_1d9dd25aa_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1d9dd25aa_acceptRange _other) { return !this->operator==(_other); }


};
struct _1c216c5c7_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_1c216c5c7_Range16(void) = default;

	inline bool operator==(_1c216c5c7_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1c216c5c7_Range16 _other) { return !this->operator==(_other); }


};
struct _1c216ca4a_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_1c216ca4a_Range32(void) = default;

	inline bool operator==(_1c216ca4a_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1c216ca4a_Range32 _other) { return !this->operator==(_other); }


};
struct _1c216cebd_RangeTable {
	jule::Slice<_1c216c5c7_Range16> _field_R16;
	jule::Slice<_1c216ca4a_Range32> _field_R32;
	jule::I32 _field_LatinOffset = 0;
	

	_1c216cebd_RangeTable(void) = default;


};
inline jule::U8 _1c2192861_index(_1c21923dd_lazyBuff*, jule::I32);
inline void _1c2192ad6_append(_1c21923dd_lazyBuff*, jule::U8);
inline jule::Str _1c2192d4a_string(_1c21923dd_lazyBuff*);
struct _1c21923dd_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen = 0;
	

	_1c21923dd_lazyBuff(void) = default;


};
struct _205567a7c_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_2055752a4_Status> _field_Stat;
	

	_205567a7c_DirEntry(void) = default;

	inline bool operator==(_205567a7c_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_205567a7c_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_205567a7c_DirEntry>>> static__1c219515a_Read(jule::Str);
inline jule::VoidExceptional static__1c219528c_Create(jule::Str);
inline jule::VoidExceptional static__1c219548a_Remove(jule::Str);
struct _205567c69_Directory {
	

	_205567c69_Directory(void) = default;

	inline bool operator==(_205567c69_Directory _other) { return true; }

	inline bool operator!=(_205567c69_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_205572c1e_File> static__2055730c6_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_205572c1e_File>> static__20557336d_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__205573615_Read(jule::Str);
inline jule::VoidExceptional static__205573967_Write(jule::Str, jule::Slice<jule::U8>, jule::I32);
inline jule::VoidExceptional static__205573cb9_WriteStr(jule::Str, jule::Str*, jule::I32);
inline jule::Exceptional<jule::I32> _205574281_Seek(_205572c1e_File*, jule::I32, jule::I32);
inline jule::Exceptional<jule::I32> _20557458e_WriteStr(_205572c1e_File*, jule::Str*);
inline jule::VoidExceptional _20557476a_Close(_205572c1e_File*);
inline jule::Exceptional<jule::Ptr<_205572c1e_File>> static__2055da083_Open(jule::Str, jule::I32, jule::I32);
inline jule::VoidExceptional static__1d9d9da2c_Remove(jule::Str);
inline jule::Exceptional<jule::I32> _1d9d958e2_Write(_205572c1e_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I32> _1d9dbed6c_Read(_205572c1e_File*, jule::Slice<jule::U8>);
struct _205572c1e_File {
	jule::Uintptr _field_handle = 0;
	

	_205572c1e_File(void) = default;

	inline bool operator==(_205572c1e_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_205572c1e_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _2055756b1_IsDir(_2055752a4_Status*);
inline jule::Bool _205575925_IsReg(_2055752a4_Status*);
inline jule::U32 _205575b89_Size(_2055752a4_Status*);
inline jule::Exceptional<jule::Ptr<_2055752a4_Status>> static__1c2195e08_Of(jule::Str);
struct _2055752a4_Status {
	jule::I32 _field_mode = 0LL;
	jule::U32 _field_size = 0;
	

	_2055752a4_Status(void) = default;

	inline bool operator==(_2055752a4_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_2055752a4_Status _other) { return !this->operator==(_other); }


};
struct _1c22b0880_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	_1c22b0880_cmdAttrs(void) = default;

	inline bool operator==(_1c22b0880_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_1c22b0880_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1c2220900_Log {
	jule::I32 _field_Kind = 0LL;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_1c2220900_Log(void) = default;

	inline bool operator==(_1c2220900_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1c2220900_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _203986563_Prec(_2039861ab_Token*);
struct _2039861ab_Token {
	jule::Ptr<_20398b546_File> _field_File;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U32 _field_Id = 0LLU;
	

	_2039861ab_Token(void) = default;

	inline bool operator==(_2039861ab_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_2039861ab_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _20398b953_IsOk(_20398b546_File*);
inline void _20398bbc8_Fill(_20398b546_File*, jule::Slice<jule::U8>);
inline jule::Str _20398be3c_Dir(_20398b546_File*);
inline jule::Str _20398c1a1_Name(_20398b546_File*);
inline jule::Uintptr _20398c415_Addr(_20398b546_File*);
inline jule::Str _20398c723_GetRow(_20398b546_File*, jule::I32);
struct _20398b546_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_Tokens;
	

	_20398b546_File(void) = default;


};
struct _20398d59d_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U32 _field_id = 0LLU;
	

	_20398d59d_kindPair(void) = default;

	inline bool operator==(_20398d59d_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_20398d59d_kindPair _other) { return !this->operator==(_other); }


};
inline void _2039946a3_pushErr(_20399410e_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _2039949c2_pushErrTok(_20399410e_lex*, jule::Ptr<_2039861ab_Token>*, jule::Str);
inline void _203994b9d_lex(_20399410e_lex*);
inline jule::Str _203994eab_id(_20399410e_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _203995220_resume(_20399410e_lex*);
inline void _203995495_lexLineComment(_20399410e_lex*, jule::Ptr<_2039861ab_Token>*);
inline void _20399571a_lexRangeComment(_20399410e_lex*, jule::Ptr<_2039861ab_Token>*);
inline jule::Str _203995a28_num(_20399410e_lex*, jule::Slice<jule::U8>*);
inline jule::Str _203995d36_escapeSeq(_20399410e_lex*, jule::Slice<jule::U8>*);
inline jule::Str _2039961dd_getRune(_20399410e_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _2039964eb_lexRune(_20399410e_lex*, jule::Slice<jule::U8>*);
inline jule::Str _203996760_lexStr(_20399410e_lex*);
inline jule::Bool _2039969c4_isFirstTokenOfLine(_20399410e_lex*);
inline void _203996ba0_newLine(_20399410e_lex*);
inline jule::Bool _20399719a_isOp(_20399410e_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U32, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _203997552_lexBasicOps(_20399410e_lex*, jule::Slice<jule::U8>, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _203997909_lexId(_20399410e_lex*, jule::Slice<jule::U8>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _203997cb1_lexNum(_20399410e_lex*, jule::Slice<jule::U8>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Ptr<_2039861ab_Token> _203998025_token(_20399410e_lex*);
struct _20399410e_lex {
	jule::I32 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_tokens;
	jule::Ptr<_20398b546_File> _field_file;
	jule::I32 _field_pos = 0;
	jule::I32 _field_column = 0;
	jule::I32 _field_row = 0;
	jule::Slice<_1c2220900_Log> _field_errors;
	

	_20399410e_lex(void) = default;


};
struct _1c2c4dcbd_floatInfo {
	jule::U32 _field_mantbits = 0;
	jule::U32 _field_expbits = 0;
	jule::I32 _field_bias = 0;
	

	_1c2c4dcbd_floatInfo(void) = default;

	inline bool operator==(_1c2c4dcbd_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1c2c4dcbd_floatInfo _other) { return !this->operator==(_other); }


};
struct _1c2ec0e96_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_1c2ec0e96_decimalSlice(void) = default;


};
struct _1c31725dc_leftCheat {
	jule::I32 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_1c31725dc_leftCheat(void) = default;

	inline bool operator==(_1c31725dc_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1c31725dc_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c2a95dbd_set(_1c31728ea_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _1c316ebb1_floatBits(_1c31728ea_decimal*, _1c2c4dcbd_floatInfo*);
inline void _1c3172ad7_assign(_1c31728ea_decimal*, jule::U64);
inline void _1c3172c19_shift(_1c31728ea_decimal*, jule::I32);
inline void _1c3172d4b_roundDown(_1c31728ea_decimal*, jule::I32);
inline void _1c3172e7d_roundUp(_1c31728ea_decimal*, jule::I32);
inline void _1c31730b0_round(_1c31728ea_decimal*, jule::I32);
inline jule::U64 _1c31731e2_roundedInteger(_1c31728ea_decimal*);
struct _1c31728ea_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_1c31728ea_decimal(void) = default;

	inline bool operator==(_1c31728ea_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1c31728ea_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c25bc4e9_Const> static__1c2615e5a_NewI64(jule::I64);
inline jule::Ptr<_1c25bc4e9_Const> static__1c25e7a0d_NewU64(jule::U64);
inline jule::Ptr<_1c25bc4e9_Const> static__1c25eb5d3_NewBool(jule::Bool);
inline jule::Ptr<_1c25bc4e9_Const> static__1c25ed30a_NewStr(jule::Str);
inline jule::Ptr<_1c25bc4e9_Const> static__1c2600395_NewF64(jule::F64);
inline jule::Ptr<_1c25bc4e9_Const> static__1c2636541_NewNil(void);
inline jule::I64 _1c263c811_ReadI64(_1c25bc4e9_Const*);
inline jule::U64 _1c263c943_ReadU64(_1c25bc4e9_Const*);
inline jule::Bool _1c3178060_ReadBool(_1c25bc4e9_Const*);
inline jule::Str _1c3178192_ReadStr(_1c25bc4e9_Const*);
inline jule::F64 _1c31782c4_ReadF64(_1c25bc4e9_Const*);
inline jule::I64 _1c3178406_AsI64(_1c25bc4e9_Const*);
inline jule::U64 _1c3178538_AsU64(_1c25bc4e9_Const*);
inline jule::F64 _1c317866a_AsF64(_1c25bc4e9_Const*);
inline void _1c317879c_SetI64(_1c25bc4e9_Const*, jule::I64);
inline void _1c31788ce_SetU64(_1c25bc4e9_Const*, jule::U64);
inline void _1c3178a11_SetBool(_1c25bc4e9_Const*, jule::Bool);
inline void _1c3178b43_SetStr(_1c25bc4e9_Const*, jule::Str);
inline void _1c3178c75_SetF64(_1c25bc4e9_Const*, jule::F64);
inline void _1c3178da7_SetNil(_1c25bc4e9_Const*);
inline jule::Bool _1c3178ed9_IsI64(_1c25bc4e9_Const*);
inline jule::Bool _1c317911b_IsU64(_1c25bc4e9_Const*);
inline jule::Bool _1c317924d_IsBool(_1c25bc4e9_Const*);
inline jule::Bool _1c3179380_IsStr(_1c25bc4e9_Const*);
inline jule::Bool _1c31794b2_IsF64(_1c25bc4e9_Const*);
inline jule::Bool _1c31795e4_IsNil(_1c25bc4e9_Const*);
inline jule::Bool _1c3179726_AreSameTypes(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c3179858_And(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c317998a_Or(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c3179abc_Eq(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c3179bee_Lt(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c3179d31_LtEq(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c3179e63_Gt(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c317a095_GtEq(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c317a1c7_Add(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c317a309_Sub(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c317a43b_Mul(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c317a56d_Div(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c317a6a0_Mod(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c317a7d2_BitwiseAnd(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c317a914_BitwiseOr(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c317aa46_Xor(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c317ab78_Lshift(_1c25bc4e9_Const*, _1c25bc4e9_Const);
inline jule::Bool _1c317acaa_Rshift(_1c25bc4e9_Const*, _1c25bc4e9_Const);
struct _1c25bc4e9_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_1c25bc4e9_Const(void) = default;

	inline jule::Bool operator==(_1c25bc4e9_Const _other) { return _1c3179abc_Eq(this, _other); }

	inline bool operator!=(_1c25bc4e9_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1c25bc4e9_Const _other) { return _1c3179e63_Gt(this, _other); }

	inline jule::Bool operator>=(_1c25bc4e9_Const _other) { return _1c317a095_GtEq(this, _other); }

	inline jule::Bool operator<(_1c25bc4e9_Const _other) { return _1c3179bee_Lt(this, _other); }

	inline jule::Bool operator<=(_1c25bc4e9_Const _other) { return _1c3179d31_LtEq(this, _other); }


};
struct _1c4a59b93_Ast {
	jule::Ptr<_20398b546_File> _field_File;
	jule::Slice<jule::Ptr<_1c4a5ad81_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1c4aa69e2_UseDecl>> _field_UseDecls;
	jule::Slice<_1c4a5a985_Node> _field_Nodes;
	

	_1c4a59b93_Ast(void) = default;


};
struct _1c4a5a985_Node {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1c4a5a985_Node(void) = default;

	inline bool operator==(_1c4a5a985_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c4a5a985_Node _other) { return !this->operator==(_other); }


};
struct _1c4a5ad81_Directive {
	jule::Ptr<_2039861ab_Token> _field_Tag;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_Args;
	

	_1c4a5ad81_Directive(void) = default;


};
struct _1c4a8e337_TypeDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1c4a8e337_TypeDecl(void) = default;

	inline bool operator==(_1c4a8e337_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c4a8e337_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4a8ec61_IsPrim(_1c4a8e8ed_IdentTypeDecl*);
struct _1c4a8e8ed_IdentTypeDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _field_Generics;
	

	_1c4a8e8ed_IdentTypeDecl(void) = default;


};
struct _1c4a9004c_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1c4a8e8ed_IdentTypeDecl>> _field_Idents;
	

	_1c4a9004c_SubIdentTypeDecl(void) = default;


};
struct _1c4a90404_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_Idents;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Kind;
	

	_1c4a90404_NamespaceTypeDecl(void) = default;


};
struct _1c4a906e0_SptrTypeDecl {
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Elem;
	

	_1c4a906e0_SptrTypeDecl(void) = default;

	inline bool operator==(_1c4a906e0_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c4a906e0_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c4a90adb_SlcTypeDecl {
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Elem;
	

	_1c4a90adb_SlcTypeDecl(void) = default;

	inline bool operator==(_1c4a90adb_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c4a90adb_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c4a90dc7_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _field_Types;
	

	_1c4a90dc7_TupleTypeDecl(void) = default;


};
inline jule::Bool _1c4a91515_IsUnsafe(_1c4a911b3_PtrTypeDecl*);
struct _1c4a911b3_PtrTypeDecl {
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Elem;
	

	_1c4a911b3_PtrTypeDecl(void) = default;

	inline bool operator==(_1c4a911b3_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c4a911b3_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4a91c1e_AutoSized(_1c4a91845_ArrTypeDecl*);
struct _1c4a91845_ArrTypeDecl {
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Elem;
	jule::Ptr<_1c4a93858_Expr> _field_Size;
	

	_1c4a91845_ArrTypeDecl(void) = default;

	inline bool operator==(_1c4a91845_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1c4a91845_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c4a92093_MapTypeDecl {
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Key;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Val;
	

	_1c4a92093_MapTypeDecl(void) = default;

	inline bool operator==(_1c4a92093_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c4a92093_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1c4a9244a_RetTypeDecl {
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_Idents;
	

	_1c4a9244a_RetTypeDecl(void) = default;


};
struct _1c4a93858_Expr {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_2039861ab_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1c4a93858_Expr(void) = default;

	inline bool operator==(_1c4a93858_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c4a93858_Expr _other) { return !this->operator==(_other); }


};
struct _1c4a93b44_RangeExpr {
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	

	_1c4a93b44_RangeExpr(void) = default;

	inline bool operator==(_1c4a93b44_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4a93b44_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1c4a941e9_UseExpr {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	

	_1c4a941e9_UseExpr(void) = default;

	inline bool operator==(_1c4a941e9_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4a941e9_UseExpr _other) { return !this->operator==(_other); }


};
struct _1c4a944d5_TupleExpr {
	jule::Slice<jule::Ptr<_1c4a93858_Expr>> _field_Expr;
	

	_1c4a944d5_TupleExpr(void) = default;


};
inline jule::Bool _1c4a94bde_IsNil(_1c4a9488c_LitExpr*);
struct _1c4a9488c_LitExpr {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Value;
	

	_1c4a9488c_LitExpr(void) = default;

	inline bool operator==(_1c4a9488c_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1c4a9488c_LitExpr _other) { return !this->operator==(_other); }


};
struct _1c4a95096_UnsafeExpr {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	

	_1c4a95096_UnsafeExpr(void) = default;

	inline bool operator==(_1c4a95096_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4a95096_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4a9586b_IsSelf(_1c4a95519_IdentExpr*);
struct _1c4a95519_IdentExpr {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_1c4a95519_IdentExpr(void) = default;

	inline bool operator==(_1c4a95519_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1c4a95519_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1c4a95c23_UnaryExpr {
	jule::Ptr<_2039861ab_Token> _field_Op;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	

	_1c4a95c23_UnaryExpr(void) = default;

	inline bool operator==(_1c4a95c23_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4a95c23_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1c4a960ca_VariadicExpr {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	

	_1c4a960ca_VariadicExpr(void) = default;

	inline bool operator==(_1c4a960ca_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4a960ca_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1c4a96482_CastExpr {
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Kind;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	

	_1c4a96482_CastExpr(void) = default;

	inline bool operator==(_1c4a96482_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4a96482_CastExpr _other) { return !this->operator==(_other); }


};
struct _1c4a96839_NsSelectionExpr {
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_Ns;
	jule::Ptr<_2039861ab_Token> _field_Ident;
	

	_1c4a96839_NsSelectionExpr(void) = default;


};
struct _1c4a96cac_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	jule::Ptr<_2039861ab_Token> _field_Ident;
	

	_1c4a96cac_SubIdentExpr(void) = default;

	inline bool operator==(_1c4a96cac_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c4a96cac_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1c4a97230_BinopExpr {
	jule::Ptr<_1c4a93858_Expr> _field_Left;
	jule::Ptr<_1c4a93858_Expr> _field_Right;
	jule::Ptr<_2039861ab_Token> _field_Op;
	

	_1c4a97230_BinopExpr(void) = default;

	inline bool operator==(_1c4a97230_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c4a97230_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4a97b9d_Unhandled(_1c4a9783a_FnCallExpr*);
inline jule::Bool _1c4a97e12_Ignored(_1c4a9783a_FnCallExpr*);
struct _1c4a9783a_FnCallExpr {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1c4a93858_Expr>> _field_Args;
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_1c4a9783a_FnCallExpr(void) = default;


};
inline jule::Bool _1c4a9861b_IsTargeted(_1c4a982b9_FieldExprPair*);
struct _1c4a982b9_FieldExprPair {
	jule::Ptr<_2039861ab_Token> _field_Field;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	

	_1c4a982b9_FieldExprPair(void) = default;

	inline bool operator==(_1c4a982b9_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4a982b9_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1c4a98a17_StructLit {
	jule::Ptr<_2039861ab_Token> _field_End;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c4a93858_Expr>> _field_Exprs;
	

	_1c4a98a17_StructLit(void) = default;


};
inline jule::Bool _1c4a992dc_IsEmpty(_1c4a98e8a_BraceLit*);
struct _1c4a98e8a_BraceLit {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_2039861ab_Token> _field_End;
	jule::Slice<jule::Ptr<_1c4a93858_Expr>> _field_Exprs;
	

	_1c4a98e8a_BraceLit(void) = default;


};
struct _1c4a99760_KeyValPair {
	jule::Ptr<_1c4a93858_Expr> _field_Key;
	jule::Ptr<_1c4a93858_Expr> _field_Val;
	jule::Ptr<_2039861ab_Token> _field_Colon;
	

	_1c4a99760_KeyValPair(void) = default;

	inline bool operator==(_1c4a99760_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1c4a99760_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4a9a277_IsEmpty(_1c4a99e47_SliceExpr*);
struct _1c4a99e47_SliceExpr {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_2039861ab_Token> _field_End;
	jule::Slice<jule::Ptr<_1c4a93858_Expr>> _field_Exprs;
	

	_1c4a99e47_SliceExpr(void) = default;


};
struct _1c4a9a7b6_IndexingExpr {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_2039861ab_Token> _field_End;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	jule::Ptr<_1c4a93858_Expr> _field_Index;
	

	_1c4a9a7b6_IndexingExpr(void) = default;

	inline bool operator==(_1c4a9a7b6_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1c4a9a7b6_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1c4a9adc1_SlicingExpr {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_2039861ab_Token> _field_End;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	jule::Ptr<_1c4a93858_Expr> _field_Start;
	jule::Ptr<_1c4a93858_Expr> _field_To;
	

	_1c4a9adc1_SlicingExpr(void) = default;

	inline bool operator==(_1c4a9adc1_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1c4a9adc1_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1c4a9b1ac_Constraint {
	jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _field_Mask;
	

	_1c4a9b1ac_Constraint(void) = default;


};
struct _1c4a9b630_GenericDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c4a9b1ac_Constraint> _field_Constraint;
	

	_1c4a9b630_GenericDecl(void) = default;

	inline bool operator==(_1c4a9b630_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1c4a9b630_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1c4a9b9d7_LabelSt {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1c4a9b9d7_LabelSt(void) = default;

	inline bool operator==(_1c4a9b9d7_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c4a9b9d7_LabelSt _other) { return !this->operator==(_other); }


};
struct _1c4a9bd8e_GotoSt {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_2039861ab_Token> _field_Label;
	

	_1c4a9bd8e_GotoSt(void) = default;

	inline bool operator==(_1c4a9bd8e_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c4a9bd8e_GotoSt _other) { return !this->operator==(_other); }


};
struct _1c4a9c17a_FallSt {
	jule::Ptr<_2039861ab_Token> _field_Token;
	

	_1c4a9c17a_FallSt(void) = default;

	inline bool operator==(_1c4a9c17a_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1c4a9c17a_FallSt _other) { return !this->operator==(_other); }


};
struct _1c4a9c785_AssignLeft {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	

	_1c4a9c785_AssignLeft(void) = default;

	inline bool operator==(_1c4a9c785_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4a9c785_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1c4a9ccc4_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_2039861ab_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1c4a9c785_AssignLeft>> _field_Left;
	jule::Ptr<_1c4a93858_Expr> _field_Right;
	

	_1c4a9ccc4_AssignSt(void) = default;


};
struct _1c4a9dbb5_Stmt {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1c4a9dbb5_Stmt(void) = default;

	inline bool operator==(_1c4a9dbb5_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c4a9dbb5_Stmt _other) { return !this->operator==(_other); }


};
struct _1c4a9e2c0_ScopeTree {
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1c4a9dbb5_Stmt> _field_Stmts;
	jule::Ptr<_2039861ab_Token> _field_End;
	

	_1c4a9e2c0_ScopeTree(void) = default;


};
inline jule::Bool _1c4a9ed09_IsSelf(_1c4a9e996_ParamDecl*);
inline jule::Bool _1c4aa006d_IsRef(_1c4a9e996_ParamDecl*);
struct _1c4a9e996_ParamDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_1c4a9e996_ParamDecl(void) = default;

	inline bool operator==(_1c4a9e996_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c4a9e996_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4aa1118_IsAnon(_1c4aa0cb6_FnDecl*);
struct _1c4aa0cb6_FnDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c4a5ad81_Directive>> _field_Directives;
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>> _field_Generics;
	jule::Ptr<_1c4a9244a_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1c4a9e996_ParamDecl>> _field_Params;
	

	_1c4aa0cb6_FnDecl(void) = default;


};
struct _1c4aa1c95_VarDecl {
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_Scope;
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1c4a5ad81_Directive>> _field_Directives;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Kind;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	

	_1c4aa1c95_VarDecl(void) = default;


};
struct _1c4aa214c_RetSt {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	

	_1c4aa214c_RetSt(void) = default;

	inline bool operator==(_1c4aa214c_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4aa214c_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4aa2b0e_IsInf(_1c4aa27ac_Iter*);
struct _1c4aa27ac_Iter {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_Scope;
	

	_1c4aa27ac_Iter(void) = default;

	inline bool operator==(_1c4aa27ac_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c4aa27ac_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4aa33d4_IsWhileNext(_1c4aa3082_WhileKind*);
struct _1c4aa3082_WhileKind {
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_2039861ab_Token> _field_NextToken;
	

	_1c4aa3082_WhileKind(void) = default;

	inline bool operator==(_1c4aa3082_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1c4aa3082_WhileKind _other) { return !this->operator==(_other); }


};
struct _1c4aa3923_RangeKind {
	jule::Ptr<_2039861ab_Token> _field_InToken;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	jule::Ptr<_1c4aa1c95_VarDecl> _field_KeyA;
	jule::Ptr<_1c4aa1c95_VarDecl> _field_KeyB;
	

	_1c4aa3923_RangeKind(void) = default;

	inline bool operator==(_1c4aa3923_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1c4aa3923_RangeKind _other) { return !this->operator==(_other); }


};
struct _1c4aa3cca_BreakSt {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_2039861ab_Token> _field_Label;
	

	_1c4aa3cca_BreakSt(void) = default;

	inline bool operator==(_1c4aa3cca_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c4aa3cca_BreakSt _other) { return !this->operator==(_other); }


};
struct _1c4aa4182_ContSt {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_2039861ab_Token> _field_Label;
	

	_1c4aa4182_ContSt(void) = default;

	inline bool operator==(_1c4aa4182_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1c4aa4182_ContSt _other) { return !this->operator==(_other); }


};
struct _1c4aa4605_If {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_Scope;
	

	_1c4aa4605_If(void) = default;

	inline bool operator==(_1c4aa4605_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c4aa4605_If _other) { return !this->operator==(_other); }


};
struct _1c4aa49ac_Else {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_Scope;
	

	_1c4aa49ac_Else(void) = default;

	inline bool operator==(_1c4aa49ac_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c4aa49ac_Else _other) { return !this->operator==(_other); }


};
struct _1c4aa4e30_Conditional {
	jule::Ptr<_1c4aa4605_If> _field_Head;
	jule::Slice<jule::Ptr<_1c4aa4605_If>> _field_Tail;
	jule::Ptr<_1c4aa49ac_Else> _field_Default;
	

	_1c4aa4e30_Conditional(void) = default;


};
struct _1c4aa5606_TypeAliasDecl {
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Kind;
	

	_1c4aa5606_TypeAliasDecl(void) = default;

	inline bool operator==(_1c4aa5606_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c4aa5606_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1c4aa5a79_Case {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c4a93858_Expr>> _field_Exprs;
	

	_1c4aa5a79_Case(void) = default;


};
struct _1c4aa6250_MatchCase {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_2039861ab_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1c4aa5a79_Case>> _field_Cases;
	jule::Ptr<_1c4aa49ac_Else> _field_Default;
	

	_1c4aa6250_MatchCase(void) = default;


};
struct _1c4aa69e2_UseDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_1c4aa69e2_UseDecl(void) = default;


};
inline jule::Bool _1c4aa72b7_AutoExpr(_1c4aa6e65_EnumItemDecl*);
struct _1c4aa6e65_EnumItemDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	

	_1c4aa6e65_EnumItemDecl(void) = default;

	inline bool operator==(_1c4aa6e65_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4aa6e65_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4aa8021_DefaultTyped(_1c4aa798d_EnumDecl*);
struct _1c4aa798d_EnumDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c4aa6e65_EnumItemDecl>> _field_Items;
	jule::Ptr<_2039861ab_Token> _field_End;
	

	_1c4aa798d_EnumDecl(void) = default;


};
struct _1c4aa8494_TypeEnumItemDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Kind;
	

	_1c4aa8494_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1c4aa8494_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c4aa8494_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1c4aa8a9e_TypeEnumDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c4aa8494_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_2039861ab_Token> _field_End;
	

	_1c4aa8a9e_TypeEnumDecl(void) = default;


};
struct _1c4aa8c9c_FieldDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Kind;
	jule::Ptr<_1c4a93858_Expr> _field_Default;
	

	_1c4aa8c9c_FieldDecl(void) = default;

	inline bool operator==(_1c4aa8c9c_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c4aa8c9c_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1c4aa9550_StructDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_2039861ab_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c4aa8c9c_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1c4a5ad81_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>> _field_Generics;
	

	_1c4aa9550_StructDecl(void) = default;


};
struct _1c4aa9c26_TraitDecl {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_2039861ab_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1c4aa0cb6_FnDecl>> _field_Methods;
	

	_1c4aa9c26_TraitDecl(void) = default;


};
inline jule::Bool _1c4aaa694_IsTraitImpl(_1c4aaa331_Impl*);
inline jule::Bool _1c4aaa908_IsStructImpl(_1c4aaa331_Impl*);
struct _1c4aaa331_Impl {
	jule::Ptr<_2039861ab_Token> _field_End;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Base;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1c4aa0cb6_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1c4aa1c95_VarDecl>> _field_Statics;
	

	_1c4aaa331_Impl(void) = default;


};
inline jule::Ptr<_1c4aab068_FieldIns> _1c4a670bd_instance(jule::Ptr<_1c4a7e877_Field>);
struct _1c4a7e877_Field {
	jule::Ptr<_1c4a86ebc_Struct> _field_Owner;
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c4b610b8_TypeSymbol> _field_Kind;
	jule::Ptr<_1c4a93858_Expr> _field_Default;
	

	_1c4a7e877_Field(void) = default;

	inline bool operator==(_1c4a7e877_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c4a7e877_Field _other) { return !this->operator==(_other); }


};
struct _1c4a610c8_Operators {
	jule::Ptr<_1c4ab39ee_FnIns> _field_Eq;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Gt;
	jule::Ptr<_1c4ab39ee_FnIns> _field_GtEq;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Lt;
	jule::Ptr<_1c4ab39ee_FnIns> _field_LtEq;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Shl;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Shr;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Add;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Sub;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Div;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Mul;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Mod;
	jule::Ptr<_1c4ab39ee_FnIns> _field_BitAnd;
	jule::Ptr<_1c4ab39ee_FnIns> _field_BitOr;
	jule::Ptr<_1c4ab39ee_FnIns> _field_BitXor;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Neg;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Pos;
	jule::Ptr<_1c4ab39ee_FnIns> _field_BitNot;
	jule::Ptr<_1c4ab39ee_FnIns> _field_AddAssign;
	jule::Ptr<_1c4ab39ee_FnIns> _field_SubAssign;
	jule::Ptr<_1c4ab39ee_FnIns> _field_DivAssign;
	jule::Ptr<_1c4ab39ee_FnIns> _field_MulAssign;
	jule::Ptr<_1c4ab39ee_FnIns> _field_ModAssign;
	jule::Ptr<_1c4ab39ee_FnIns> _field_ShlAssign;
	jule::Ptr<_1c4ab39ee_FnIns> _field_ShrAssign;
	jule::Ptr<_1c4ab39ee_FnIns> _field_BitOrAssign;
	jule::Ptr<_1c4ab39ee_FnIns> _field_BitAndAssign;
	jule::Ptr<_1c4ab39ee_FnIns> _field_BitXorAssign;
	

	_1c4a610c8_Operators(void) = default;

	inline bool operator==(_1c4a610c8_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1c4a610c8_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c4aab255_StructIns> _1c4a6ad91_instance(jule::Ptr<_1c4a86ebc_Struct>);
inline jule::Ptr<_1c4aab255_StructIns> _1c4a6baea_appendInstance(_1c4a86ebc_Struct*, jule::Ptr<_1c4aab255_StructIns>*);
inline jule::Ptr<_1c4ab22e4_Fn> _1c4a6ec52_FindMethod(_1c4a86ebc_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4b2c837_Var> _1c4a6e1a2_FindStatic(_1c4a86ebc_Struct*, jule::Str);
inline jule::Ptr<_1c4a7e877_Field> _1c4a7157d_FindField(_1c4a86ebc_Struct*, jule::Str);
inline jule::Bool _1c4a70879_IsImplements(_1c4a86ebc_Struct*, jule::Ptr<_1c4ac306e_Trait>);
inline jule::Bool _1c4a7484a_IsDerives(_1c4a86ebc_Struct*, jule::Str);
inline jule::Bool _1c4a75010_IsUses(_1c4a86ebc_Struct*, jule::Ptr<_1c4a86ebc_Struct>);
inline jule::Bool _1c4a7a4cc_HasRefAccessible(_1c4a86ebc_Struct*);
struct _1c4a86ebc_Struct {
	jule::Ptr<_1c4b07c74_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1c4a86ebc_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1c4a86ebc_Struct>> _field_Uses;
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c4a7e877_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1c4ab22e4_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c4b2c837_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1c4a5ad81_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1c4ac306e_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1c4aab255_StructIns>> _field_Instances;
	

	_1c4a86ebc_Struct(void) = default;


};
struct _1c4aab068_FieldIns {
	jule::Ptr<_1c4a7e877_Field> _field_Decl;
	jule::Ptr<_1c4621d32_TypeKind> _field_Kind;
	jule::Ptr<_1c45e6e17_Data> _field_Default;
	

	_1c4aab068_FieldIns(void) = default;

	inline bool operator==(_1c4aab068_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c4aab068_FieldIns _other) { return !this->operator==(_other); }


};
struct _1c4aab783_OperandExprModel {
	jule::Ptr<_1c4621d32_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_1c4aab783_OperandExprModel(void) = default;

	inline bool operator==(_1c4aab783_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1c4aab783_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aab970_BinopExprModel {
	jule::Ptr<_1c4aab783_OperandExprModel> _field_Left;
	jule::Ptr<_1c4aab783_OperandExprModel> _field_Right;
	jule::Ptr<_2039861ab_Token> _field_Op;
	

	_1c4aab970_BinopExprModel(void) = default;

	inline bool operator==(_1c4aab970_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c4aab970_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aabb5c_UnaryExprModel {
	jule::Ptr<_1c45e6e17_Data> _field_Expr;
	jule::Ptr<_2039861ab_Token> _field_Op;
	

	_1c4aabb5c_UnaryExprModel(void) = default;

	inline bool operator==(_1c4aabb5c_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c4aabb5c_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aabd49_StructArgExprModel {
	jule::Ptr<_1c4aab068_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1c4aabd49_StructArgExprModel(void) = default;

	inline bool operator==(_1c4aabd49_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4aabd49_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aac036_StructLitExprModel {
	jule::Ptr<_1c4aab255_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1c4aabd49_StructArgExprModel>> _field_Args;
	

	_1c4aac036_StructLitExprModel(void) = default;


};
struct _1c4aac223_AllocStructLitExprModel {
	jule::Ptr<_1c4aac036_StructLitExprModel> _field_Lit;
	

	_1c4aac223_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1c4aac223_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1c4aac223_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aac410_CastingExprModel {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c4621d32_TypeKind> _field_Kind;
	jule::Ptr<_1c4621d32_TypeKind> _field_ExprKind;
	

	_1c4aac410_CastingExprModel(void) = default;

	inline bool operator==(_1c4aac410_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1c4aac410_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aac5ec_FnCallExprModel {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1c4ad13bd_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_1c4aac5ec_FnCallExprModel(void) = default;


};
struct _1c4aac7d9_SliceExprModel {
	jule::Ptr<_1c4621d32_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1c4aac7d9_SliceExprModel(void) = default;


};
struct _1c4aac9c6_IndexingExprModel {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_1c45e6e17_Data> _field_Expr;
	jule::Ptr<_1c45e6e17_Data> _field_Index;
	

	_1c4aac9c6_IndexingExprModel(void) = default;

	inline bool operator==(_1c4aac9c6_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1c4aac9c6_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aacbb3_AnonFnExprModel {
	jule::Ptr<_1c4ab39ee_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_1c4aacbb3_AnonFnExprModel(void) = default;

	inline bool operator==(_1c4aacbb3_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1c4aacbb3_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aacda0_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_1c4aacda0_KeyValPairExprModel(void) = default;

	inline bool operator==(_1c4aacda0_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c4aacda0_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aad08c_MapExprModel {
	jule::Ptr<_1c4621d32_TypeKind> _field_KeyKind;
	jule::Ptr<_1c4621d32_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1c4aacda0_KeyValPairExprModel>> _field_Entries;
	

	_1c4aad08c_MapExprModel(void) = default;


};
struct _1c4aad279_SlicingExprModel {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1c4aad279_SlicingExprModel(void) = default;

	inline bool operator==(_1c4aad279_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c4aad279_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aad466_TraitSubIdentExprModel {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c4ab22e4_Fn> _field_Method;
	jule::Ptr<_1c4ac306e_Trait> _field_Trt;
	

	_1c4aad466_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1c4aad466_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1c4aad466_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aad884_StructSubIdentExprModel {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Ptr<_1c45e6e17_Data> _field_Expr;
	jule::Ptr<_1c4ab39ee_FnIns> _field_Method;
	jule::Ptr<_1c4aab068_FieldIns> _field_Field;
	jule::Ptr<_1c4aab255_StructIns> _field_Owner;
	

	_1c4aad884_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1c4aad884_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1c4aad884_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aada71_StructStaticIdentExprModel {
	jule::Ptr<_1c4aab255_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c4ab39ee_FnIns> _field_Method;
	

	_1c4aada71_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1c4aada71_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1c4aada71_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aadc5d_ArrayExprModel {
	jule::Ptr<_1c4b67c90_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1c4aadc5d_ArrayExprModel(void) = default;


};
struct _1c4aade4a_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_1c4aade4a_CommonIdentExprModel(void) = default;

	inline bool operator==(_1c4aade4a_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c4aade4a_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aae137_CommonSubIdentExprModel {
	jule::Ptr<_1c4621d32_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1c4aae137_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1c4aae137_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c4aae137_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aae324_TupleExprModel {
	jule::Slice<jule::Ptr<_1c45e6e17_Data>> _field_Datas;
	

	_1c4aae324_TupleExprModel(void) = default;


};
struct _1c4aae511_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1c4aae511_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1c4aae511_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1c4aae511_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aae6ed_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1c4aae6ed_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1c4aae6ed_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1c4aae6ed_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aae8da_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1c4aae8da_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1c4aae8da_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4aae8da_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aaeac7_BuiltinNewCallExprModel {
	jule::Ptr<_1c4621d32_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_1c4aaeac7_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1c4aaeac7_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1c4aaeac7_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aaecb4_BuiltinPanicCallExprModel {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1c4aaecb4_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1c4aaecb4_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4aaecb4_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aaeea1_BuiltinAssertCallExprModel {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_1c4aaeea1_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1c4aaeea1_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1c4aaeea1_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4ab018d_BuiltinMakeCallExprModel {
	jule::Ptr<_1c4621d32_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_1c4ab018d_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1c4ab018d_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1c4ab018d_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4ab037a_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_1c4ab037a_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1c4ab037a_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1c4ab037a_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4ab0567_BuiltinLenCallExprModel {
	jule::Ptr<_1c45e6e17_Data> _field_Expr;
	

	_1c4ab0567_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_1c4ab0567_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4ab0567_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4ab0754_BuiltinCapCallExprModel {
	jule::Ptr<_1c45e6e17_Data> _field_Expr;
	

	_1c4ab0754_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_1c4ab0754_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4ab0754_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4aad653_BuiltinDeleteCallExprModel {
	jule::Ptr<_1c45e6e17_Data> _field_Dest;
	jule::Ptr<_1c45e6e17_Data> _field_Key;
	

	_1c4aad653_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_1c4aad653_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1c4aad653_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4ab0db4_BuiltinCopyCallExprModel {
	jule::Ptr<_1c45e6e17_Data> _field_Dest;
	jule::Ptr<_1c45e6e17_Data> _field_Src;
	

	_1c4ab0db4_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1c4ab0db4_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1c4ab0db4_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4ab10a1_BuiltinErrorCallExprModel {
	jule::Ptr<_1c4ab39ee_FnIns> _field_Func;
	jule::Ptr<_1c45e6e17_Data> _field_Err;
	

	_1c4ab10a1_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1c4ab10a1_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1c4ab10a1_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1c4ab128d_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1c4ab128d_SizeofExprModel(void) = default;

	inline bool operator==(_1c4ab128d_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4ab128d_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1c4ab147a_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1c4ab147a_AlignofExprModel(void) = default;

	inline bool operator==(_1c4ab147a_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4ab147a_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1c4ab1667_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_1c4ab1667_RuneExprModel(void) = default;

	inline bool operator==(_1c4ab1667_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1c4ab1667_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1c4ab1854_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1c4ab1854_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1c4ab1854_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4ab1854_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1c4ab1a41_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_1c4ab1a41_BackendEmitExprModel(void) = default;


};
struct _1c4ab1c2d_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1c4ab1c2d_FreeExprModel(void) = default;

	inline bool operator==(_1c4ab1c2d_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4ab1c2d_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1c4ab1e1a_RetType {
	jule::Ptr<_1c4b610b8_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_Idents;
	

	_1c4ab1e1a_RetType(void) = default;


};
inline jule::Ptr<_1c4ab2b30_ParamIns> _1c4a69378_instance(jule::Ptr<_1c4ab2107_Param>);
inline jule::Bool _1c4a6c810_IsSelf(_1c4ab2107_Param*);
inline jule::Bool _1c4a71e63_IsRef(_1c4ab2107_Param*);
struct _1c4ab2107_Param {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1c4b610b8_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_1c4ab2107_Param(void) = default;

	inline bool operator==(_1c4ab2107_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c4ab2107_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4a871ed_IsVoid(_1c4ab22e4_Fn*);
inline jule::Bool _1c4a810e8_IsMethod(_1c4ab22e4_Fn*);
inline jule::Bool _1c4a653b8_IsEntryPoint(_1c4ab22e4_Fn*);
inline jule::Bool _1c4a5e4d3_IsInit(_1c4ab22e4_Fn*);
inline jule::Bool _1c4a66595_IsAnon(_1c4ab22e4_Fn*);
inline jule::Bool _1c4a77bc2_AnyVar(_1c4ab22e4_Fn*);
inline jule::Ptr<_1c4ab39ee_FnIns> _1c4a78b7e_instanceForce(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Ptr<_1c4ab39ee_FnIns> _1c4ab24d1_instance(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Ptr<_1c4ab39ee_FnIns> _1c4ab2778_appendInstance(_1c4ab22e4_Fn*, jule::Ptr<_1c4ab39ee_FnIns>*);
struct _1c4ab22e4_Fn {
	jule::Ptr<_1c4b07c74_Sema> _field_sema;
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c4a5ad81_Directive>> _field_Directives;
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>> _field_Generics;
	jule::Ptr<_1c4ab1e1a_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1c4ab2107_Param>> _field_Params;
	jule::Ptr<_1c4a86ebc_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1c4ab39ee_FnIns>> _field_Instances;
	

	_1c4ab22e4_Fn(void) = default;


};
inline jule::Str _1c4ab3009_Str(_1c4ab2b30_ParamIns*);
struct _1c4ab2b30_ParamIns {
	jule::Ptr<_1c4ab2107_Param> _field_Decl;
	jule::Ptr<_1c4621d32_TypeKind> _field_Kind;
	

	_1c4ab2b30_ParamIns(void) = default;

	inline bool operator==(_1c4ab2b30_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c4ab2b30_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1c4ab3d2e_Str(_1c4ab39ee_FnIns*);
inline jule::Bool _1c4ab413c_Equal(jule::Ptr<_1c4ab39ee_FnIns>, jule::Ptr<_1c4621d32_TypeKind>);
inline jule::Bool _1c4ab459e_EqualFn(jule::Ptr<_1c4ab39ee_FnIns>, jule::Ptr<_1c4ab39ee_FnIns>*);
inline jule::Bool _1c4ab48ac_equalTrait(jule::Ptr<_1c4ab39ee_FnIns>, jule::Ptr<_1c4ab39ee_FnIns>*);
inline jule::Slice<jule::Ptr<_1c4621d32_TypeKind>> _1c4ab4b21_Types(_1c4ab39ee_FnIns*);
inline jule::Bool _1c4ab4d85_IsBuiltin(_1c4ab39ee_FnIns*);
inline jule::Bool _1c4ab50e9_IsAnon(_1c4ab39ee_FnIns*);
inline jule::Bool _1c4ab5407_Same(_1c4ab39ee_FnIns*, jule::Ptr<_1c4ab39ee_FnIns>);
inline jule::Str _1c4ab5715_GetKindStr(_1c4ab39ee_FnIns*, jule::Bool);
struct _1c4ab39ee_FnIns {
	jule::Ptr<_1c4aab255_StructIns> _field_Owner;
	jule::Ptr<_1c4ab22e4_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1c47006e6_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>> _field_Params;
	jule::Ptr<_1c4621d32_TypeKind> _field_Result;
	jule::Ptr<_1c4ad13bd_Scope> _field_Scope;
	jule::Ptr<_1c4ab6958_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_1c4ab39ee_FnIns(void) = default;


};
inline jule::Ptr<_1c4ab6958_ReferenceStack> static__1c4ab6bab_new(void);
inline jule::I32 _1c4ab7041_Len(_1c4ab6958_ReferenceStack*);
inline jule::Any _1c4ab734e_At(_1c4ab6958_ReferenceStack*, jule::I32);
inline void _1c4ab75c4_Push(_1c4ab6958_ReferenceStack*, jule::Any);
inline jule::Bool _1acc9391b_Exist(_1c4ab6958_ReferenceStack*, jule::Ptr<_1c4ab39ee_FnIns>);
inline jule::Bool _1acca7413_Exist(_1c4ab6958_ReferenceStack*, jule::Ptr<_1c4b2c837_Var>);
inline jule::Bool _1acd473b5_Exist(_1c4ab6958_ReferenceStack*, jule::Ptr<_1c4aab255_StructIns>);
inline jule::Bool _1ad0b747b_Exist(_1c4ab6958_ReferenceStack*, jule::Ptr<_1c4ac306e_Trait>);
struct _1c4ab6958_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_1c4ab6958_ReferenceStack(void) = default;


};
struct _1c4ab7c89_Pass {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Text;
	

	_1c4ab7c89_Pass(void) = default;

	inline bool operator==(_1c4ab7c89_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1c4ab7c89_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c4abc4ca_symbolBuilder> _1c4abc981_getRoot(jule::Ptr<_1c4abc4ca_symbolBuilder>);
inline void _1c4abcd49_pushErr(_1c4abc4ca_symbolBuilder*, jule::Ptr<_2039861ab_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1c4abd212_pushErrText(_1c4abc4ca_symbolBuilder*, jule::Ptr<_2039861ab_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1c4abd531_pushSuggestion(_1c4abc4ca_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c4abd8d8_checkCppUseDeclPath(_1c4abc4ca_symbolBuilder*, jule::Ptr<_1c4aa69e2_UseDecl>*, jule::Str);
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4abdbb3_buildCppHeaderImport(_1c4abc4ca_symbolBuilder*, jule::Ptr<_1c4aa69e2_UseDecl>*);
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4abdec1_buildStdImport(_1c4abc4ca_symbolBuilder*, jule::Ptr<_1c4aa69e2_UseDecl>*);
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4abe2ce_buildIdentImport(jule::Ptr<_1c4abc4ca_symbolBuilder>, jule::Ptr<_1c4aa69e2_UseDecl>*);
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4abe5dc_buildImport(jule::Ptr<_1c4abc4ca_symbolBuilder>, jule::Ptr<_1c4aa69e2_UseDecl>*);
inline jule::Bool _1c4abe8ea_checkDuplicateUseDecl(_1c4abc4ca_symbolBuilder*, jule::Ptr<_1c4aeeb28_ImportInfo>*);
inline void _1c4abec19_implImportSelections(_1c4abc4ca_symbolBuilder*, jule::Ptr<_1c4aeeb28_ImportInfo>*, jule::Ptr<_1c4aa69e2_UseDecl>*);
inline jule::Str _1c4ac0027_getAsLinkPath(jule::Ptr<_1c4abc4ca_symbolBuilder>, jule::Str);
inline void _1c4ac03e0_pushCycleError(jule::Ptr<_1c4abc4ca_symbolBuilder>, jule::Ptr<_1c4abc4ca_symbolBuilder>*, jule::Str, jule::Str*);
inline void _1c4ac07a8_pushCrossCycleError(jule::Ptr<_1c4abc4ca_symbolBuilder>, jule::Ptr<_1c4abc4ca_symbolBuilder>*, jule::Ptr<_1c4aeeb28_ImportInfo>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _1c4ac0b60_checkImportCycles(jule::Ptr<_1c4abc4ca_symbolBuilder>, jule::Ptr<_1c4aeeb28_ImportInfo>, jule::Ptr<_1c4aa69e2_UseDecl>*);
inline void _1c4ac104a_checkPackageAccessibility(_1c4abc4ca_symbolBuilder*, jule::Ptr<_1c4aa69e2_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1c4ac1413_importPackage(jule::Ptr<_1c4abc4ca_symbolBuilder>, jule::Ptr<_1c4aeeb28_ImportInfo>*, jule::Ptr<_1c4aa69e2_UseDecl>*);
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4ac1721_importUseDecl(jule::Ptr<_1c4abc4ca_symbolBuilder>, jule::Ptr<_1c4aa69e2_UseDecl>*);
inline void _1c4ac18ec_importUseDecls(jule::Ptr<_1c4abc4ca_symbolBuilder>);
inline void _1c4ac1b72_appendNode(_1c4abc4ca_symbolBuilder*, _1c4a5a985_Node*);
inline void _1c4ac1d4d_appendNodes(_1c4abc4ca_symbolBuilder*);
inline void _1c4ac20c3_pushDirectivePass(_1c4abc4ca_symbolBuilder*, jule::Ptr<_1c4a5ad81_Directive>*);
inline void _1c4ac229e_appendTopDirectives(_1c4abc4ca_symbolBuilder*);
inline void _1c4ac247a_build(jule::Ptr<_1c4abc4ca_symbolBuilder>);
struct _1c4abc4ca_symbolBuilder {
	jule::Ptr<_1c4abc4ca_symbolBuilder> _field_owner;
	jule::Trait<_1c4aebe77_Importer> _field_importer;
	jule::Slice<_1c2220900_Log> _field_errors;
	jule::Ptr<_1c4a59b93_Ast> _field_ast;
	jule::Ptr<_1c45e20dd_SymbolTable> _field_table;
	

	_1c4abc4ca_symbolBuilder(void) = default;


};
inline jule::Str _1c4ac346a_Str(_1c4ac306e_Trait*);
inline jule::Bool _1c4ac3778_Equal(jule::Ptr<_1c4ac306e_Trait>, jule::Ptr<_1c4621d32_TypeKind>);
inline jule::Bool _1c4ac3b0d_IsBuiltin(_1c4ac306e_Trait*);
inline jule::Ptr<_1c4ab22e4_Fn> _1c4ac3e1b_FindMethod(_1c4ac306e_Trait*, jule::Str);
inline jule::Bool _1c4ac4229_inherits(jule::Ptr<_1c4ac306e_Trait>, jule::Ptr<_1c4ac306e_Trait>*);
inline jule::Ptr<_1c4ab22e4_Fn> _1c4ac4537_findMethodInherit(_1c4ac306e_Trait*, jule::Str*);
struct _1c4ac306e_Trait {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_1c4b610b8_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1c4ab22e4_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c4a86ebc_Struct>> _field_Implemented;
	

	_1c4ac306e_Trait(void) = default;


};
inline jule::Bool _1c4ac51e7_AutoExpr(_1c4ac4d0c_EnumItem*);
struct _1c4ac4d0c_EnumItem {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c45e7e90_Value> _field_Value;
	

	_1c4ac4d0c_EnumItem(void) = default;

	inline bool operator==(_1c4ac4d0c_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1c4ac4d0c_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1c4ac5b65_Str(_1c4ac5802_Enum*);
inline jule::Bool _1c4ac5e73_Equal(jule::Ptr<_1c4ac5802_Enum>, jule::Ptr<_1c4621d32_TypeKind>);
inline jule::Ptr<_1c4ac4d0c_EnumItem> _1c4ac63b3_FindItem(_1c4ac5802_Enum*, jule::Str);
struct _1c4ac5802_Enum {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1c4b610b8_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c4ac4d0c_EnumItem>> _field_Items;
	

	_1c4ac5802_Enum(void) = default;


};
struct _1c4ac6836_TypeEnumItem {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c4b610b8_TypeSymbol> _field_Kind;
	

	_1c4ac6836_TypeEnumItem(void) = default;

	inline bool operator==(_1c4ac6836_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c4ac6836_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1c4ac722c_Str(_1c4ac6dec_TypeEnum*);
inline jule::Bool _1c4ac753a_Equal(jule::Ptr<_1c4ac6dec_TypeEnum>, jule::Ptr<_1c4621d32_TypeKind>);
inline jule::Ptr<_1c4ac6836_TypeEnumItem> _1c4ac7936_FindItem(_1c4ac6dec_TypeEnum*, jule::Str);
struct _1c4ac6dec_TypeEnum {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c4ac6836_TypeEnumItem>> _field_Items;
	

	_1c4ac6dec_TypeEnum(void) = default;


};
inline jule::Fn<jule::Bool(jule::Ptr<_1c4b07c74_Sema>*,jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>*)> _1c4ac985b_readyFn(jule::Ptr<_1c4ac942c_constraintChecker>);
inline jule::Bool _1c4ac9ac0_readyFi(jule::Ptr<_1c4ac942c_constraintChecker>);
inline jule::Bool _1c4ac9d34_readySi(jule::Ptr<_1c4ac942c_constraintChecker>);
inline jule::Bool _1c4aca098_ready(jule::Ptr<_1c4ac942c_constraintChecker>);
inline jule::Bool _1c4aca30c_check(jule::Ptr<_1c4ac942c_constraintChecker>);
struct _1c4ac942c_constraintChecker {
	jule::Ptr<_1c4b07c74_Sema> _field_s;
	jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1c47006e6_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1c4701230_TypeAlias>> _field_genericsA;
	jule::Ptr<_1c4ab39ee_FnIns> _field_fi;
	jule::Ptr<_1c4aab255_StructIns> _field_si;
	jule::Ptr<_2039861ab_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_1c4ac942c_constraintChecker(void) = default;


};
inline jule::Bool _1c4acb75e_IsTraitImpl(_1c4acb363_Impl*);
inline jule::Bool _1c4acb9c3_IsStructImpl(_1c4acb363_Impl*);
struct _1c4acb363_Impl {
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Base;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1c4ab22e4_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c4b2c837_Var>> _field_Statics;
	

	_1c4acb363_Impl(void) = default;


};
struct _1c4ad13bd_Scope {
	jule::Ptr<_1c4ad13bd_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_1c4ad13bd_Scope(void) = default;


};
struct _1c4ad17b9_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c4ad13bd_Scope> _field_Scope;
	

	_1c4ad17b9_If(void) = default;

	inline bool operator==(_1c4ad17b9_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c4ad17b9_If _other) { return !this->operator==(_other); }


};
struct _1c4ad1aa5_Else {
	jule::Ptr<_1c4ad13bd_Scope> _field_Scope;
	

	_1c4ad1aa5_Else(void) = default;

	inline bool operator==(_1c4ad1aa5_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c4ad1aa5_Else _other) { return !this->operator==(_other); }


};
struct _1c4ad1e29_Conditional {
	jule::Slice<jule::Ptr<_1c4ad17b9_If>> _field_Elifs;
	jule::Ptr<_1c4ad1aa5_Else> _field_Default;
	

	_1c4ad1e29_Conditional(void) = default;


};
struct _1c4ad2215_InfIter {
	jule::Ptr<_1c4ad13bd_Scope> _field_Scope;
	

	_1c4ad2215_InfIter(void) = default;

	inline bool operator==(_1c4ad2215_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c4ad2215_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4ad2a2e_IsWhileNext(_1c4ad2688_WhileIter*);
struct _1c4ad2688_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1c4ad13bd_Scope> _field_Scope;
	

	_1c4ad2688_WhileIter(void) = default;

	inline bool operator==(_1c4ad2688_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c4ad2688_WhileIter _other) { return !this->operator==(_other); }


};
struct _1c4ad306d_RangeIter {
	jule::Ptr<_1c45e6e17_Data> _field_Expr;
	jule::Ptr<_1c4ad13bd_Scope> _field_Scope;
	jule::Ptr<_1c4b2c837_Var> _field_KeyA;
	jule::Ptr<_1c4b2c837_Var> _field_KeyB;
	

	_1c4ad306d_RangeIter(void) = default;

	inline bool operator==(_1c4ad306d_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1c4ad306d_RangeIter _other) { return !this->operator==(_other); }


};
struct _1c4ad3469_ContSt {
	jule::Uintptr _field_It = 0;
	

	_1c4ad3469_ContSt(void) = default;

	inline bool operator==(_1c4ad3469_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1c4ad3469_ContSt _other) { return !this->operator==(_other); }


};
struct _1c4ad3821_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_1c4ad3821_BreakSt(void) = default;

	inline bool operator==(_1c4ad3821_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1c4ad3821_BreakSt _other) { return !this->operator==(_other); }


};
struct _1c4ad3b0c_Label {
	jule::Str _field_Ident;
	

	_1c4ad3b0c_Label(void) = default;

	inline bool operator==(_1c4ad3b0c_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c4ad3b0c_Label _other) { return !this->operator==(_other); }


};
struct _1c4ad3de8_GotoSt {
	jule::Str _field_Ident;
	

	_1c4ad3de8_GotoSt(void) = default;

	inline bool operator==(_1c4ad3de8_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c4ad3de8_GotoSt _other) { return !this->operator==(_other); }


};
struct _1c4ad42a0_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_1c4ad42a0_Postfix(void) = default;

	inline bool operator==(_1c4ad42a0_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c4ad42a0_Postfix _other) { return !this->operator==(_other); }


};
struct _1c4ad4723_Assign {
	jule::Ptr<_1c4aab783_OperandExprModel> _field_L;
	jule::Ptr<_1c4aab783_OperandExprModel> _field_R;
	jule::Ptr<_2039861ab_Token> _field_Op;
	

	_1c4ad4723_Assign(void) = default;

	inline bool operator==(_1c4ad4723_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c4ad4723_Assign _other) { return !this->operator==(_other); }


};
struct _1c4ad4aca_MultiAssign {
	jule::Slice<jule::Ptr<_1c45e6e17_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_1c4ad4aca_MultiAssign(void) = default;


};
inline jule::Bool _1c4ad5625_IsGenericTypeMatch(_1c4ad5119_Match*);
struct _1c4ad5119_Match {
	jule::Ptr<_1c45e6e17_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Slice<jule::Ptr<_1c4ad5b64_Case>> _field_Cases;
	jule::Ptr<_1c4ad5b64_Case> _field_Default;
	

	_1c4ad5119_Match(void) = default;


};
inline jule::Bool _1c4ad5e2d_isDefault(_1c4ad5b64_Case*);
struct _1c4ad5b64_Case {
	jule::Ptr<_1c4ad5119_Match> _field_Owner;
	jule::Ptr<_1c4ad13bd_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1c45e6e17_Data>> _field_Exprs;
	jule::Ptr<_1c4ad5b64_Case> _field_Next;
	

	_1c4ad5b64_Case(void) = default;


};
struct _1c4ad6219_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_1c4ad6219_FallSt(void) = default;

	inline bool operator==(_1c4ad6219_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1c4ad6219_FallSt _other) { return !this->operator==(_other); }


};
struct _1c4ad658d_RetSt {
	jule::Ptr<_1c4ab39ee_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1c4ad658d_RetSt(void) = default;

	inline bool operator==(_1c4ad658d_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c4ad658d_RetSt _other) { return !this->operator==(_other); }


};
struct _1c4ad6b98_scopeLabel {
	jule::Ptr<_2039861ab_Token> _field_token;
	jule::Ptr<_1c4ad3b0c_Label> _field_label;
	jule::I32 _field_pos = 0;
	jule::Ptr<_1c4ad7e30_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_1c4ad6b98_scopeLabel(void) = default;

	inline bool operator==(_1c4ad6b98_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1c4ad6b98_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1c4ad711b_scopeGoto {
	jule::Ptr<_1c4a9bd8e_GotoSt> _field_gt;
	jule::Ptr<_1c4ad7e30_scopeChecker> _field_scope;
	jule::I32 _field_pos = 0;
	

	_1c4ad711b_scopeGoto(void) = default;

	inline bool operator==(_1c4ad711b_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1c4ad711b_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4ad83b4_FindPackage(_1c4ad7e30_scopeChecker*, jule::Str);
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4ad86c2_SelectPackage(_1c4ad7e30_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)>);
inline jule::Ptr<_1c4b2c837_Var> _1c4ad8a79_FindVar(_1c4ad7e30_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4701230_TypeAlias> _1c4ad8e31_FindTypeAlias(_1c4ad7e30_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4a86ebc_Struct> _1c4ad92d8_FindStruct(_1c4ad7e30_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4ab22e4_Fn> _1c4ad9690_FindFn(_1c4ad7e30_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4ac306e_Trait> _1c4ad999d_FindTrait(_1c4ad7e30_scopeChecker*, jule::Str);
inline jule::Ptr<_1c4ac5802_Enum> _1c4ad9cab_FindEnum(_1c4ad7e30_scopeChecker*, jule::Str);
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4ada0b9_FindTypeEnum(_1c4ad7e30_scopeChecker*, jule::Str);
inline jule::Bool _1c4ada3e9_isUnsafe(jule::Ptr<_1c4ad7e30_scopeChecker>);
inline jule::Bool _1c4ada65d_isRoot(_1c4ad7e30_scopeChecker*);
inline void _1c4ada839_stop(_1c4ad7e30_scopeChecker*);
inline jule::Bool _1c4adaa9d_stopped(_1c4ad7e30_scopeChecker*);
inline jule::Bool _1c4adad12_isDeferred(jule::Ptr<_1c4ad7e30_scopeChecker>);
inline jule::Ptr<_1c4ad7e30_scopeChecker> _1c4adb076_getRoot(jule::Ptr<_1c4ad7e30_scopeChecker>);
inline jule::Ptr<_1c4ad7e30_scopeChecker> _1c4adb2da_getHardRoot(jule::Ptr<_1c4ad7e30_scopeChecker>);
inline jule::Ptr<_1c4ad3b0c_Label> _1c4adb5e8_findLabel(_1c4ad7e30_scopeChecker*, jule::Str);
inline jule::Ptr<_1c4ad6b98_scopeLabel> _1c4adb906_findLabelScope(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Str);
inline jule::Ptr<_1c4ad6b98_scopeLabel> _1c4adbc14_findLabelAll(_1c4ad7e30_scopeChecker*, jule::Str);
inline jule::Bool _1c4adc0bb_isDuplicatedIdent(_1c4ad7e30_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1c4adc341_checkVarDecl(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa1c95_VarDecl>);
inline void _1c4adc5b6_checkTypeAliasDecl(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa5606_TypeAliasDecl>);
inline jule::Ptr<_1c4ad13bd_Scope> _1c4adc82a_getChild(_1c4ad7e30_scopeChecker*);
inline void _1c4adcbe3_checkChildSsc(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a9e2c0_ScopeTree>*, jule::Ptr<_1c4ad13bd_Scope>*, jule::Ptr<_1c4ad7e30_scopeChecker>*);
inline jule::Ptr<_1c4ad13bd_Scope> _1c4add09a_checkChildSc(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a9e2c0_ScopeTree>*, jule::Ptr<_1c4ad7e30_scopeChecker>*);
inline jule::Ptr<_1c4ad13bd_Scope> _1c4add3a8_checkChild(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a9e2c0_ScopeTree>*);
inline void _1c4add62d_checkAnonScope(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a9e2c0_ScopeTree>);
inline void _1c4add94c_processErrorCall(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4ab10a1_BuiltinErrorCallExprModel>*, jule::Ptr<_2039861ab_Token>);
inline void _1c4addbc2_checkExpr(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a93858_Expr>);
inline jule::Ptr<_1c4ad17b9_If> _1c4added0_checkIf(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa4605_If>);
inline jule::Ptr<_1c4ad1aa5_Else> _1c4ade2dd_checkElse(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa49ac_Else>);
inline void _1c4ade563_checkConditional(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa4e30_Conditional>);
inline void _1c4ade9c5_checkIterScopeSsc(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Uintptr, jule::Ptr<_1c4a9e2c0_ScopeTree>, jule::Ptr<_1c4ad13bd_Scope>*, jule::Ptr<_1c4ad7e30_scopeChecker>);
inline jule::Ptr<_1c4ad13bd_Scope> _1c4adee26_checkIterScopeSc(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Uintptr, jule::Ptr<_1c4a9e2c0_ScopeTree>, jule::Ptr<_1c4ad7e30_scopeChecker>);
inline jule::Ptr<_1c4ad13bd_Scope> _1c4ae02cd_checkIterScope(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Uintptr, jule::Ptr<_1c4a9e2c0_ScopeTree>*);
inline void _1c4ae0553_checkInfIter(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa27ac_Iter>*);
inline void _1c4ae07c8_checkWhileIter(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa27ac_Iter>*);
inline void _1c4ae0a4d_checkRangeIter(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa27ac_Iter>*);
inline void _1c4ae0cc3_checkIter(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa27ac_Iter>);
inline jule::Bool _1c4ae10d1_checkValidContLabel(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Uintptr);
inline jule::Bool _1c4ae13de_checkValidBreakLabel(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1c4ad3469_ContSt> _1c4ae16ec_checkContValidScope(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa4182_ContSt>);
inline void _1c4ae1972_checkCont(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa4182_ContSt>);
inline void _1c4ae1be7_checkLabel(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a9b9d7_LabelSt>);
inline void _1c4ae1e6c_pushGoto(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a9bd8e_GotoSt>);
inline void _1c4ae21e2_checkPostfix(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a9ccc4_AssignSt>);
inline jule::Bool _1c4ae2500_isNewAssignIdent(_1c4ad7e30_scopeChecker*, jule::Str);
inline jule::Bool _1c4ae2951_checkStructureAssignOp(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aab255_StructIns>*, jule::Ptr<_1c4a9ccc4_AssignSt>*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c4ae2bc6_checkSingleAssign(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a9ccc4_AssignSt>*);
inline void _1c4ae3204_processEndPartOfMultiAssign(_1c4ad7e30_scopeChecker*, jule::Ptr<_1c4ad4aca_MultiAssign>*, jule::Ptr<_1c4a9ccc4_AssignSt>*, jule::Ptr<_1c4a9c785_AssignLeft>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c4ae348a_checkMultiAssign(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a9ccc4_AssignSt>*);
inline void _1c4ae3710_checkAssignSt(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a9ccc4_AssignSt>);
inline jule::Ptr<_1c4ad13bd_Scope> _1c4ae3ab7_checkCaseScope(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4ad5b64_Case>*, jule::Ptr<_1c4a9e2c0_ScopeTree>*);
inline jule::Ptr<_1c4ad5b64_Case> _1c4ae40b2_checkCase(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4ad5119_Match>, jule::I32, jule::Ptr<_1c4aa5a79_Case>, jule::Ptr<_1c45e6e17_Data>);
inline void _1c4ae447a_checkCases(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa6250_MatchCase>*, jule::Ptr<_1c4ad5119_Match>, jule::Ptr<_1c45e6e17_Data>);
inline jule::Ptr<_1c4ad5b64_Case> _1c4ae4832_checkDefault(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4ad5119_Match>, jule::Ptr<_1c4aa49ac_Else>);
inline void _1c4ae4aa7_checkComptimePanic(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4ad13bd_Scope>*);
inline void _1c4ae4dc6_pushTypeMatch(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4ad5119_Match>, jule::Ptr<_1c4aa6250_MatchCase>*);
inline void _1c4ae514b_checkTypeMatch(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa6250_MatchCase>*);
inline void _1c4ae53c1_checkCommonMatch(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa6250_MatchCase>*);
inline void _1c4ae5646_checkMatch(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa6250_MatchCase>);
inline void _1c4ae58bb_checkFall(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a9c17a_FallSt>);
inline jule::Ptr<_1c4ad3821_BreakSt> _1c4ae5bc9_checkBreakWithLabel(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa3cca_BreakSt>);
inline jule::Ptr<_1c4ad3821_BreakSt> _1c4ae5ed7_checkPlainBreak(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa3cca_BreakSt>);
inline void _1c4ae625c_checkBreak(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa3cca_BreakSt>);
inline void _1c4ae64d2_checkRet(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4aa214c_RetSt>);
inline void _1c4ae6757_checkUseExpr(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a941e9_UseExpr>);
inline void _1c4ae69cc_checkNode(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Any*);
inline void _1c4ae6ba8_checkResult(jule::Ptr<_1c4ad7e30_scopeChecker>);
inline void _1c4ae6d84_checkTree(jule::Ptr<_1c4ad7e30_scopeChecker>);
inline void _1c4ae71a3_checkGoto(_1c4ad7e30_scopeChecker*, jule::Ptr<_1c4ad711b_scopeGoto>*, jule::Ptr<_1c4ad6b98_scopeLabel>*);
inline void _1c4ae737e_checkGotos(_1c4ad7e30_scopeChecker*);
inline void _1c4ae755a_checkLabels(_1c4ad7e30_scopeChecker*);
inline void _1c4ae7736_checkVars(_1c4ad7e30_scopeChecker*);
inline void _1c4ae7912_checkAliases(_1c4ad7e30_scopeChecker*);
inline void _1c4ae7c31_check(jule::Ptr<_1c4ad7e30_scopeChecker>, jule::Ptr<_1c4a9e2c0_ScopeTree>*, jule::Ptr<_1c4ad13bd_Scope>*);
inline jule::Ptr<_1c4ad7e30_scopeChecker> _1c4ae7e95_newChildChecker(jule::Ptr<_1c4ad7e30_scopeChecker>);
struct _1c4ad7e30_scopeChecker {
	jule::Ptr<_2039861ab_Token> _field_calledFrom;
	jule::Ptr<_1c4b07c74_Sema> _field_s;
	jule::Ptr<_1c4ab39ee_FnIns> _field_owner;
	jule::Ptr<_1c4ad7e30_scopeChecker> _field_parent;
	jule::I32 _field_childIndex = 0;
	jule::Ptr<_1c45e20dd_SymbolTable> _field_table;
	jule::Ptr<_1c4ad13bd_Scope> _field_scope;
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_tree;
	jule::Ptr<_1c4ab39ee_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1c4ad6b98_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1c4ad711b_scopeGoto>>> _field_gotos;
	jule::I32 _field_i = 0;
	

	_1c4ad7e30_scopeChecker(void) = default;

	inline bool operator==(_1c4ad7e30_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c4ad7e30_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1c4ae8e85_checkCdef(_1c4ae8a45_directiveChecker*, jule::Ptr<_1c4a5ad81_Directive>*);
inline void _1c4ae920a_checkTypedef(_1c4ae8a45_directiveChecker*, jule::Ptr<_1c4a5ad81_Directive>*);
inline void _1c4ae9480_checkDerive(_1c4ae8a45_directiveChecker*, jule::Ptr<_1c4a5ad81_Directive>*);
inline void _1c4ae9705_checkNamespace(_1c4ae8a45_directiveChecker*, jule::Ptr<_1c4a5ad81_Directive>*);
inline void _1c4ae997a_checkDeprecated(_1c4ae8a45_directiveChecker*, jule::Ptr<_1c4a5ad81_Directive>*);
inline void _1c4ae9c00_checkTest(_1c4ae8a45_directiveChecker*, jule::Ptr<_1c4a5ad81_Directive>*);
inline void _1c4ae9e75_checkDirective(_1c4ae8a45_directiveChecker*, jule::Ptr<_1c4a5ad81_Directive>*);
inline void _1c4aea151_check(_1c4ae8a45_directiveChecker*);
struct _1c4ae8a45_directiveChecker {
	jule::Ptr<_1c4b07c74_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>> _field_d;
	jule::Any _field_o;
	

	_1c4ae8a45_directiveChecker(void) = default;

	inline bool operator==(_1c4ae8a45_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1c4ae8a45_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b00145_FindPackage(_1c4aeeb28_ImportInfo*, jule::Str);
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b00453_SelectPackage(_1c4aeeb28_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)>);
inline jule::Ptr<_1c4b2c837_Var> _1c4b0080a_FindVar(_1c4aeeb28_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4701230_TypeAlias> _1c4b00bb2_FindTypeAlias(_1c4aeeb28_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4a86ebc_Struct> _1c4b01069_FindStruct(_1c4aeeb28_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4ab22e4_Fn> _1c4b01421_FindFn(_1c4aeeb28_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4ac306e_Trait> _1c4b0172e_FindTrait(_1c4aeeb28_ImportInfo*, jule::Str);
inline jule::Ptr<_1c4ac5802_Enum> _1c4b01a3c_FindEnum(_1c4aeeb28_ImportInfo*, jule::Str);
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b01d4a_FindTypeEnum(_1c4aeeb28_ImportInfo*, jule::Str);
inline jule::Bool _1c4b021e1_isLookupable(_1c4aeeb28_ImportInfo*, jule::Str);
inline jule::Bool _1c4b024ee_existIdent(_1c4aeeb28_ImportInfo*, jule::Str);
inline jule::Bool _1c4b02785_isAccessibleViaSelection(_1c4aeeb28_ImportInfo*);
struct _1c4aeeb28_ImportInfo {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_Selected;
	jule::Ptr<_1c4b02a82_Package> _field_Package;
	jule::I32 _field_ModId = 0;
	

	_1c4aeeb28_ImportInfo(void) = default;


};
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b0305a_FindPackage(_1c4b02a82_Package*, jule::Str);
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b03368_SelectPackage(_1c4b02a82_Package*, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)>);
inline jule::Ptr<_1c4b2c837_Var> _1c4b03720_FindVar(_1c4b02a82_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4701230_TypeAlias> _1c4b03ac7_FindTypeAlias(_1c4b02a82_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4a86ebc_Struct> _1c4b03e7e_FindStruct(_1c4b02a82_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4ab22e4_Fn> _1c4b04336_FindFn(_1c4b02a82_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4ac306e_Trait> _1c4b04644_FindTrait(_1c4b02a82_Package*, jule::Str);
inline jule::Ptr<_1c4ac5802_Enum> _1c4b04952_FindEnum(_1c4b02a82_Package*, jule::Str);
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b04c60_FindTypeEnum(_1c4b02a82_Package*, jule::Str);
struct _1c4b02a82_Package {
	jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>> _field_Files;
	

	_1c4b02a82_Package(void) = default;


};
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b08291_FindPackage(_1c4b07c74_Sema*, jule::Str);
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b0859e_SelectPackage(_1c4b07c74_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)>);
inline jule::Ptr<_1c4b2c837_Var> _1c4b08956_FindVar(_1c4b07c74_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4701230_TypeAlias> _1c4b08d0d_FindTypeAlias(_1c4b07c74_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4a86ebc_Struct> _1c4b091b5_FindStruct(_1c4b07c74_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4ab22e4_Fn> _1c4b0956c_FindFn(_1c4b07c74_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4ac306e_Trait> _1c4b0987a_FindTrait(_1c4b07c74_Sema*, jule::Str);
inline jule::Ptr<_1c4ac5802_Enum> _1c4b09b88_FindEnum(_1c4b07c74_Sema*, jule::Str);
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b09e96_FindTypeEnum(_1c4b07c74_Sema*, jule::Str);
inline jule::Bool _1c4b0a2e8_isFlag(_1c4b07c74_Sema*, jule::I32);
inline void _1c4b0a56d_setCurrentFile(_1c4b07c74_Sema*, jule::Ptr<_1c45e20dd_SymbolTable>);
inline void _1c4b0a936_pushErr(_1c4b07c74_Sema*, jule::Ptr<_2039861ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c4b0ac55_pushSugggestion(_1c4b07c74_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c4b0b10c_isAccessibleDefine(_1c4b07c74_Sema*, jule::Bool, jule::Ptr<_2039861ab_Token>);
inline jule::Bool _1c4b0b55d_isDuplicatedIdent(_1c4b07c74_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1c4b0b87c_checkDirectives(jule::Ptr<_1c4b07c74_Sema>, jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>*, jule::Any);
inline jule::Bool _1c4b0bccd_checkGenericQuantity(_1c4b07c74_Sema*, jule::I32, jule::I32, jule::Ptr<_2039861ab_Token>);
inline jule::Bool _1c4b0c1a7_isDuplicatedImportSelection(_1c4b07c74_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1c4b0c570_getImportDef(_1c4b07c74_Sema*, jule::Str, jule::Ptr<_1c4aeeb28_ImportInfo>*);
inline jule::Bool _1ac90aa39_checkImportSelection(_1c4b07c74_Sema*, jule::Ptr<_2039861ab_Token>*, jule::Ptr<_1c4b2c837_Var>*);
inline jule::Bool _1ac90e983_checkImportSelection(_1c4b07c74_Sema*, jule::Ptr<_2039861ab_Token>*, jule::Ptr<_1c4701230_TypeAlias>*);
inline jule::Bool _1ac913745_checkImportSelection(_1c4b07c74_Sema*, jule::Ptr<_2039861ab_Token>*, jule::Ptr<_1c4a86ebc_Struct>*);
inline jule::Bool _1ac9178ae_checkImportSelection(_1c4b07c74_Sema*, jule::Ptr<_2039861ab_Token>*, jule::Ptr<_1c4ac306e_Trait>*);
inline jule::Bool _1ac91b671_checkImportSelection(_1c4b07c74_Sema*, jule::Ptr<_2039861ab_Token>*, jule::Ptr<_1c4ac5802_Enum>*);
inline jule::Bool _1ac920543_checkImportSelection(_1c4b07c74_Sema*, jule::Ptr<_2039861ab_Token>*, jule::Ptr<_1c4ac6dec_TypeEnum>*);
inline jule::Bool _1ac924415_checkImportSelection(_1c4b07c74_Sema*, jule::Ptr<_2039861ab_Token>*, jule::Ptr<_1c4ab22e4_Fn>*);
inline jule::Bool _1c4b0cc57_checkImportSelectedSelections(_1c4b07c74_Sema*, jule::Ptr<_1c4aeeb28_ImportInfo>*);
inline jule::Bool _1ac928859_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema*, jule::Slice<jule::Ptr<_1c4b2c837_Var>>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _1ac92bdac_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema*, jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _1ac92c484_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema*, jule::Slice<jule::Ptr<_1c4a86ebc_Struct>>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _1ac9327ca_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema*, jule::Slice<jule::Ptr<_1c4ab22e4_Fn>>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _1ac932db3_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema*, jule::Slice<jule::Ptr<_1c4ac306e_Trait>>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _1ac935a75_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema*, jule::Slice<jule::Ptr<_1c4ac5802_Enum>>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _1ac938737_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema*, jule::Slice<jule::Ptr<_1c4ac6dec_TypeEnum>>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _1c4b0d483_checkImportAllSelections(_1c4b07c74_Sema*, jule::Ptr<_1c4aeeb28_ImportInfo>*);
inline jule::Bool _1c4b0d7a2_checkImportSelections(_1c4b07c74_Sema*, jule::Ptr<_1c4aeeb28_ImportInfo>*);
inline jule::Bool _1c4b0dab0_isUseAliasDuplication(_1c4b07c74_Sema*, jule::Ptr<_1c4aeeb28_ImportInfo>*);
inline jule::Bool _1c4b0ddbd_checkImport(_1c4b07c74_Sema*, jule::Ptr<_1c4aeeb28_ImportInfo>*);
inline void _1c4b0e099_checkImports(_1c4b07c74_Sema*);
inline void _1c4b0e275_implFileImpls(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b0e451_implImpls(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b0e62c_checkEnums(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b0e808_checkFileInherits(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b0e9d4_checkInherits(jule::Ptr<_1c4b07c74_Sema>);
inline _1c4b6a523_typeChecker _1c4b0ee35_typeChecker(jule::Ptr<_1c4b07c74_Sema>, jule::Trait<_1c4b77c6c_Lookup>, jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>, jule::Ptr<_1c4b69643_referencer>);
inline jule::Ptr<_1c4621d32_TypeKind> _1c4b10430_buildTypeWithRefers(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4a8e337_TypeDecl>*, jule::Trait<_1c4b77c6c_Lookup>, jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>, jule::Ptr<_1c4b69643_referencer>);
inline jule::Bool _1c4b1092a_checkTypeWithRefers(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4b610b8_TypeSymbol>*, jule::Trait<_1c4b77c6c_Lookup>, jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>, jule::Ptr<_1c4b69643_referencer>);
inline jule::Ptr<_1c4ac942c_constraintChecker> _1c4b10b8e_constraintChecker(jule::Ptr<_1c4b07c74_Sema>);
inline jule::Bool _1c4b11046_checkType(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4b610b8_TypeSymbol>*, jule::Trait<_1c4b77c6c_Lookup>);
inline jule::Ptr<_1c4621d32_TypeKind> _1c4b11497_buildTypeWithGenerics(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4a8e337_TypeDecl>*, jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>, jule::Ptr<_1c4ab6958_ReferenceStack>);
inline jule::Ptr<_1c4621d32_TypeKind> _1c4b117a5_buildType(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4a8e337_TypeDecl>*);
inline jule::Ptr<_1c4621d32_TypeKind> _1c4b11ab3_selectType(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4a8e337_TypeDecl>*);
inline jule::Ptr<_1c45e8985_Eval> _1c4b12014_evalpd(jule::Ptr<_1c4b07c74_Sema>, jule::Trait<_1c4b77c6c_Lookup>, jule::Ptr<_1c4621d32_TypeKind>, jule::Ptr<_1c4b2c837_Var>);
inline jule::Ptr<_1c45e8985_Eval> _1c4b123bb_evalp(jule::Ptr<_1c4b07c74_Sema>, jule::Trait<_1c4b77c6c_Lookup>, jule::Ptr<_1c4621d32_TypeKind>);
inline jule::Ptr<_1c45e8985_Eval> _1c4b126c9_eval(jule::Ptr<_1c4b07c74_Sema>, jule::Trait<_1c4b77c6c_Lookup>);
inline jule::Bool _1c4b12bc4_checkAssignType(jule::Ptr<_1c4b07c74_Sema>, jule::Bool, jule::Ptr<_1c4621d32_TypeKind>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_2039861ab_Token>);
inline jule::Bool _1c4b13125_checkTypeCompatibility(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4621d32_TypeKind>*, jule::Ptr<_1c4621d32_TypeKind>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Ptr<_1c4621d32_TypeKind> _1c4b13598_buildNonGenericTypeKind(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4a8e337_TypeDecl>*, jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>>*, jule::Slice<jule::Ptr<_1c4621d32_TypeKind>>*);
inline jule::Bool _1c4b13983_buildFnNonGenericTypeKinds(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab39ee_FnIns>*, jule::Slice<jule::Ptr<_1c4621d32_TypeKind>>*);
inline jule::Ptr<_1c4ab39ee_FnIns> _1c4b13ca2_getTraitCheckFnKind(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab22e4_Fn>*);
inline jule::Bool _1c4b14203_checkConstraintsFn(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab39ee_FnIns>*, jule::Ptr<_2039861ab_Token>*, jule::Ptr<_1c4ab39ee_FnIns>);
inline jule::Bool _1c4b14654_checkConstraintsStruct(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4aab255_StructIns>*, jule::Ptr<_2039861ab_Token>*, jule::Ptr<_1c4aab255_StructIns>);
inline jule::Bool _1c4b14a0b_fnEnvironment(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab39ee_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1c4b07c74_Sema>*,jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>*)>);
inline void _1c4b14c81_checkFnParamKind(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab2b30_ParamIns>*);
inline jule::Bool _1c4b1508e_reloadFnInsTypes(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab39ee_FnIns>);
inline jule::Bool _1c4b15512_checkRefValidityForInitExpr(jule::Ptr<_1c4b07c74_Sema>, jule::Bool, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _1c4b15ad9_checkValidityForInitExpr(jule::Ptr<_1c4b07c74_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1c4621d32_TypeKind>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _1c4b15ea2_checkTypeAliasDeclKind(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4701230_TypeAlias>*, jule::Trait<_1c4b77c6c_Lookup>);
inline void _1c4b162c1_checkTypeAliasDecl(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4701230_TypeAlias>*, jule::Trait<_1c4b77c6c_Lookup>);
inline void _1c4b16546_checkTypeAliasDeclDup(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4701230_TypeAlias>*);
inline jule::Bool _1c4b167aa_checkTypeAliasDecls(jule::Ptr<_1c4b07c74_Sema>);
inline void _1ac9be867_checkEnumItemsDup(_1c4b07c74_Sema*, jule::Slice<jule::Ptr<_1c4ac4d0c_EnumItem>>);
inline void _1ac9c9a09_checkEnumItemsDup(_1c4b07c74_Sema*, jule::Slice<jule::Ptr<_1c4ac6836_TypeEnumItem>>);
inline void _1c4b16ca5_checkEnumItemsStr(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ac5802_Enum>*);
inline void _1ac99ed86_checkEnumItemInt(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4ac5802_Enum>*, jule::Ptr<_1c4b6197b_Prim>*, jule::Ptr<_1c4ac4d0c_EnumItem>*, jule::U64*);
inline void _1ac9b2b35_checkEnumItemInt(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4ac5802_Enum>*, jule::Ptr<_1c4b6197b_Prim>*, jule::Ptr<_1c4ac4d0c_EnumItem>*, jule::I64*);
inline void _1ac99b448_checkEnumItemsInt1(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4b6197b_Prim>*, jule::Ptr<_1c4ac5802_Enum>*);
inline void _1ac9a71ac_checkEnumItemsInt1(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4b6197b_Prim>*, jule::Ptr<_1c4ac5802_Enum>*);
inline void _1c4b17855_checkEnumItemsInt(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ac5802_Enum>*);
inline void _1c4b17aca_checkEnumDecl(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ac5802_Enum>*);
inline void _1c4b17d50_checkTypeEnumDecl(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ac6dec_TypeEnum>*);
inline jule::Bool _1c4b180b4_checkEnumDecls(jule::Ptr<_1c4b07c74_Sema>);
inline jule::Bool _1c4b18328_checkTypeEnumDecls(jule::Ptr<_1c4b07c74_Sema>);
inline jule::Bool _1c4b18636_checkDeclGenerics(_1c4b07c74_Sema*, jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>>*);
inline jule::Bool _1c4b18944_checkFnDeclParamsDup(_1c4b07c74_Sema*, jule::Ptr<_1c4ab22e4_Fn>*);
inline jule::Bool _1c4b18c52_checkFnDeclResultDup(_1c4b07c74_Sema*, jule::Ptr<_1c4ab22e4_Fn>*);
inline void _1c4b18ec7_checkFnDeclPrototype(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab22e4_Fn>*);
inline jule::Bool _1c4b19428_catchTraitInheritCycle(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ac306e_Trait>, jule::Ptr<_1c4ac306e_Trait>, jule::Str*);
inline jule::Bool _1c4b19758__checkTraitDeclInherits(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ac306e_Trait>*);
inline void _1c4b199de_checkTraitDeclInherits(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ac306e_Trait>*);
inline void _1c4b19c64_checkTraitDeclMethod(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab22e4_Fn>*);
inline void _1c4b19ed9_checkTraitDeclMethods(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ac306e_Trait>*);
inline void _1c4b1a25e_checkTraitDecl(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ac306e_Trait>*);
inline jule::Bool _1c4b1a4c3_checkTraitDecls(jule::Ptr<_1c4b07c74_Sema>);
inline jule::Bool _1c4b1a87a_checkTraitImplMethods(_1c4b07c74_Sema*, jule::Ptr<_1c4ac306e_Trait>*, jule::Ptr<_1c4acb363_Impl>*);
inline jule::Bool _1c4b1ac32_implToStruct(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4a86ebc_Struct>*, jule::Ptr<_1c4acb363_Impl>*);
inline void _1c4b1aea7_implTrait(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4acb363_Impl>*);
inline void _1c4b1b22c_implStruct(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4acb363_Impl>*);
inline void _1c4b1b4a2_implImpl(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4acb363_Impl>*);
inline void _1c4b1b7c1_checkVarDecl(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4b2c837_Var>*, jule::Trait<_1c4b77c6c_Lookup>);
inline void _1c4b1ba46_checkGlobalVarDecl(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4b2c837_Var>*);
inline jule::Bool _1c4b1bcaa_checkGlobalDecls(jule::Ptr<_1c4b07c74_Sema>);
inline jule::Bool _1c4b1c162_checkStructTraitImpl(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4a86ebc_Struct>*, jule::Ptr<_1c4ac306e_Trait>*);
inline jule::Bool _1c4b1c470_checkStructImpls(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4a86ebc_Struct>*);
inline jule::Bool _1c4b226c8_checkStructFields(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4a86ebc_Struct>*);
inline void _1c4b22860_checkStructDecl(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4a86ebc_Struct>*);
inline jule::Bool _1c4b22ac4_checkStructDecls(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b22d49_checkFnDecl(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab22e4_Fn>*);
inline jule::Bool _1c4b230ad_checkFnDecls(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b23476_pushCycleError(_1c4b07c74_Sema*, jule::Str*, jule::Str*, jule::Str*);
inline jule::Bool _1c4b238c7_checkCrossCycle(_1c4b07c74_Sema*, jule::Ptr<_1c4a86ebc_Struct>*, jule::Ptr<_1c4a86ebc_Struct>*, jule::Str*);
inline jule::Bool _1c4b23d4a_checkStructDeriveIllegalCycles(_1c4b07c74_Sema*, jule::Str, jule::Ptr<_1c4a86ebc_Struct>*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c4b2418b_checkStructInsDeriveClone(_1c4b07c74_Sema*, jule::Ptr<_1c4aab255_StructIns>);
inline void _1c4b24378_checkPackageDecls(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b246b9_checkDataForTypeInference(_1c4b07c74_Sema*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_2039861ab_Token>*);
inline void _1c4b24950_checkVar(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4b2c837_Var>*);
inline void _1c4b24c6e_checkTypeVar(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4b2c837_Var>*, jule::Trait<_1c4b77c6c_Lookup>);
inline void _1c4b24e4a_checkGlobalTypes(jule::Ptr<_1c4b07c74_Sema>);
inline jule::Ptr<_1c4ab39ee_FnIns> _1c4b25302_readyToCheckFn(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4aab255_StructIns>*, jule::Ptr<_1c4ab22e4_Fn>*);
inline void _1c4b25621_checkTypeMethod(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4aab255_StructIns>*, jule::Ptr<_1c4ab22e4_Fn>*);
inline jule::Ptr<_1c4ab39ee_FnIns> _1c4b25a72_checkStructInsOp(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4aab255_StructIns>*, jule::Ptr<_1c4ab22e4_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1c4ab22e4_Fn>)>);
inline jule::Bool _1c4b25e29_checkStructEnv(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4aab255_StructIns>*, jule::Ptr<_2039861ab_Token>);
inline jule::Bool _1c4b262d1_precheckStructIns(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4aab255_StructIns>*, jule::Ptr<_2039861ab_Token>);
inline void _1c4b26556_checkStructIns(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4aab255_StructIns>*);
inline void _1c4b267cb_checkTypeStruct(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4a86ebc_Struct>*);
inline void _1c4b269a7_checkStructTypes(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b26c4e_checkStructInsOperators(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4aab255_StructIns>);
inline void _1c4b26ed5_precheckStructType(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4a86ebc_Struct>*);
inline void _1c4b271b1_precheckStructTypes(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b27436_checkRets(_1c4b07c74_Sema*, jule::Ptr<_1c4ab39ee_FnIns>*);
inline void _1c4b27755_checkFnInsSc(_1c4b07c74_Sema*, jule::Ptr<_1c4ab39ee_FnIns>*, jule::Ptr<_1c4ad7e30_scopeChecker>*);
inline void _1c4b27a74_checkFnInsCaller(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab39ee_FnIns>*, jule::Ptr<_2039861ab_Token>);
inline void _1c4b27ce9_checkFnIns(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab39ee_FnIns>*);
inline void _1c4b2806e_checkTypeFn(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab22e4_Fn>*);
inline void _1c4b282e4_checkTestFn(_1c4b07c74_Sema*, jule::Ptr<_1c4ab39ee_FnIns>*);
inline void _1c4b28569_precheckTypeFn(jule::Ptr<_1c4b07c74_Sema>, jule::Ptr<_1c4ab22e4_Fn>*);
inline void _1c4b28745_precheckFnTypes(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b28921_checkFnTypes(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b28aec_checkPackageTypes(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b28cc8_setFileSemaFields(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b28ea4_setSemaFields(jule::Ptr<_1c4b07c74_Sema>);
inline void _1c4b29229_check(jule::Ptr<_1c4b07c74_Sema>, jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>*);
struct _1c4b07c74_Sema {
	jule::Slice<_1c2220900_Log> _field_errors;
	jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>> _field_files;
	jule::Ptr<_1c45e20dd_SymbolTable> _field_file;
	jule::I32 _field_flags = 0LL;
	

	_1c4b07c74_Sema(void) = default;


};
inline _1c4b295d1_missingRetChecker static__1c4b29999_new(void);
inline jule::Bool _1c4b29c74_checkConditional(_1c4b295d1_missingRetChecker*, jule::Ptr<_1c4ad1e29_Conditional>);
inline jule::Bool _1c4b2a082_checkMatch(_1c4b295d1_missingRetChecker*, jule::Ptr<_1c4ad5119_Match>);
inline jule::Bool _1c4b2a390_checkInfIter(_1c4b295d1_missingRetChecker*, jule::Ptr<_1c4ad2215_InfIter>);
inline jule::Bool _1c4b2a69d_checkScope(_1c4b295d1_missingRetChecker*, jule::Ptr<_1c4ad13bd_Scope>);
inline jule::Bool _1c4b2a9ab_check(_1c4b295d1_missingRetChecker*, jule::Ptr<_1c4ad13bd_Scope>);
struct _1c4b295d1_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_1c4b295d1_missingRetChecker(void) = default;


};
struct _1c4b2b7e2_IterRelation {
	jule::Ptr<_1c4b2c837_Var> _field_Range;
	

	_1c4b2b7e2_IterRelation(void) = default;

	inline bool operator==(_1c4b2b7e2_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1c4b2b7e2_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4b2cc00_IsInitialized(_1c4b2c837_Var*);
inline jule::Bool _1c4b2ce64_IsTypeInferred(_1c4b2c837_Var*);
inline jule::Bool _1c4b2d1c8_untypedConstant(_1c4b2c837_Var*);
struct _1c4b2c837_Var {
	jule::Ptr<_1c4ad13bd_Scope> _field_Scope;
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1c4b610b8_TypeSymbol> _field_Kind;
	jule::Ptr<_1c45e7e90_Value> _field_Value;
	jule::Ptr<_1c4ab6958_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1c4a5ad81_Directive>> _field_Directives;
	jule::Ptr<_1c4b2b7e2_IterRelation> _field_IterRelation;
	jule::I32 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1c4b2c837_Var>> _field_Depends;
	

	_1c4b2c837_Var(void) = default;


};
inline jule::Bool static__1c4b2dc56_Dispose(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b2deed_Str(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b2e33e_logical(jule::Ptr<_1c4ab22e4_Fn>*, jule::Str);
inline jule::Bool static__1c4b2e5d6_Eq(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b2e87d_Gt(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b2eb25_GtEq(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b2edbc_Lt(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b30164_LtEq(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b304a5_result(jule::Ptr<_1c4ab22e4_Fn>*, jule::Str);
inline jule::Bool static__1c4b3074c_Shl(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b309e4_Shr(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b30c8b_Add(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b31033_Sub(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b312ca_Div(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b31572_Mul(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b31819_Mod(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b31ab1_BitAnd(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b31d58_BitOr(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b32100_BitXor(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b32441_unary(jule::Ptr<_1c4ab22e4_Fn>*, jule::Str);
inline jule::Bool static__1c4b326d8_Neg(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b32980_Pos(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b32c27_BitNot(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b33068_assign(jule::Ptr<_1c4ab22e4_Fn>*, jule::Str);
inline jule::Bool static__1c4b33310_AddAssign(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b335a7_SubAssign(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b3384e_DivAssign(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b33ae6_MulAssign(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b33d8d_ModAssign(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b34135_ShlAssign(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b343cc_ShrAssign(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b34674_BitOrAssign(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b3491b_BitAndAssign(jule::Ptr<_1c4ab22e4_Fn>);
inline jule::Bool static__1c4b34bb3_BitXorAssign(jule::Ptr<_1c4ab22e4_Fn>);
struct _1c4b2d5d5_FuncPattern {
	

	_1c4b2d5d5_FuncPattern(void) = default;


};
inline void _1c45d1033_pushErr(_1c45d0a16_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c45d1297_checkTrait(_1c45d0a16_typeCompatibilityChecker*);
inline jule::Bool _1c45d150b_checkPtr(_1c45d0a16_typeCompatibilityChecker*);
inline jule::Bool _1c45d1770_checkPrim(_1c45d0a16_typeCompatibilityChecker*);
inline jule::Bool _1c45d1b27_typeEnum(_1c45d0a16_typeCompatibilityChecker*, jule::Ptr<_1c4ac6dec_TypeEnum>*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d1d8b_checkTypeEnum(_1c45d0a16_typeCompatibilityChecker*);
inline jule::Bool _1c45d2100_check(_1c45d0a16_typeCompatibilityChecker*);
struct _1c45d0a16_typeCompatibilityChecker {
	jule::Ptr<_1c4b07c74_Sema> _field_s;
	jule::Ptr<_1c4621d32_TypeKind> _field_dest;
	jule::Ptr<_1c4621d32_TypeKind> _field_src;
	jule::Ptr<_2039861ab_Token> _field_errorToken;
	

	_1c45d0a16_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1c45d0a16_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1c45d0a16_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1c45d2aa1_pushErr(_1c45d263e_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c45d2d15_checkValidity(_1c45d263e_assignTypeChecker*);
inline jule::Bool _1c45d3079_checkConst(_1c45d263e_assignTypeChecker*);
inline jule::Bool _1c45d32dd_isPrim(_1c45d263e_assignTypeChecker*);
inline jule::Bool _1c45d3552_checkCompatibility(_1c45d263e_assignTypeChecker*);
inline jule::Bool _1c45d37b6_check(_1c45d263e_assignTypeChecker*);
struct _1c45d263e_assignTypeChecker {
	jule::Ptr<_1c4b07c74_Sema> _field_s;
	jule::Ptr<_1c4621d32_TypeKind> _field_dest;
	jule::Ptr<_1c45e6e17_Data> _field_d;
	jule::Ptr<_2039861ab_Token> _field_errorToken;
	

	_1c45d263e_assignTypeChecker(void) = default;

	inline bool operator==(_1c45d263e_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1c45d263e_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1acb5bb58_annotateConstraintElem(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1acb5becc_annotateConstraintElem(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1acb5b6a2_annotateConstraintElem(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1acb6417c_annotateConstraintElem(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d4a09_annotateConstraintMap(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d4d17_annotateConstraintTup(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d5125_annotateConstraintFn(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d5455_annotateConstraintIdent(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d5774_annotateConstraint(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline void _1c45d5a93_pushGeneric(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*, jule::I32);
inline jule::Bool _1c45d5da1_annotatePrim(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d61ae_annotateArr(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d64bc_annotateSlc(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d6874_checkMapKey(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d6b82_annotateMap(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d6e90_annotateFn(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d729d_annotatePtr(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d75ab_annotateSptr(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d78b9_annotateStruct(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d7bc7_annotateAny(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d7ed5_annotateKind(_1c45d4124_dynamicTypeAnnotation*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c45d8249_annotate(_1c45d4124_dynamicTypeAnnotation*);
struct _1c45d4124_dynamicTypeAnnotation {
	jule::Ptr<_1c45e8985_Eval> _field_e;
	jule::Ptr<_1c4ab39ee_FnIns> _field_f;
	jule::Ptr<_1c4ab2b30_ParamIns> _field_p;
	jule::Ptr<_1c45e6e17_Data> _field_a;
	jule::Ptr<_2039861ab_Token> _field_errorToken;
	jule::Ptr<_1c4621d32_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1c4a8e337_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1c4621d32_TypeKind>> _field_ignored;
	

	_1c45d4124_dynamicTypeAnnotation(void) = default;


};
inline void _1c45d903b_pushErrToken(_1c45d89db_fnCallArgChecker*, jule::Ptr<_2039861ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c45d935a_pushErr(_1c45d89db_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>> _1c45d95be_getParams(_1c45d89db_fnCallArgChecker*);
inline jule::Bool _1c45d98cc_checkCounts(_1c45d89db_fnCallArgChecker*, jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>>*);
inline jule::Bool _1c45d9d2d_checkArg(_1c45d89db_fnCallArgChecker*, jule::Ptr<_1c4ab2b30_ParamIns>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Bool _1c45da1d5_push(_1c45d89db_fnCallArgChecker*, jule::Ptr<_1c4ab2b30_ParamIns>*, jule::Ptr<_1c4a93858_Expr>);
inline jule::Bool _1c45da58c_pushVariadic(_1c45d89db_fnCallArgChecker*, jule::Ptr<_1c4ab2b30_ParamIns>*, jule::I32);
inline jule::Bool _1c45da89a_checkArgs(_1c45d89db_fnCallArgChecker*, jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>>*);
inline jule::Bool _1c45dab31_checkDynamicTypeAnnotation(_1c45d89db_fnCallArgChecker*);
inline jule::Bool _1c45dada6_check(_1c45d89db_fnCallArgChecker*);
struct _1c45d89db_fnCallArgChecker {
	jule::Ptr<_1c45e8985_Eval> _field_e;
	jule::Slice<jule::Ptr<_1c4a93858_Expr>> _field_args;
	jule::Ptr<_2039861ab_Token> _field_errorToken;
	jule::Ptr<_1c4ab39ee_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1c4621d32_TypeKind>> _field_ignored;
	

	_1c45d89db_fnCallArgChecker(void) = default;


};
inline void _1c45db901_pushErr(_1c45db3e5_structLitChecker*, jule::Ptr<_2039861ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c45dbc20_pushSugggestion(_1c45db3e5_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1c45dc0d8_pushMatch(_1c45db3e5_structLitChecker*, jule::Ptr<_1c4aab068_FieldIns>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_2039861ab_Token>*);
inline void _1c45dc407_checkPair(_1c45db3e5_structLitChecker*, jule::Ptr<_1c4a982b9_FieldExprPair>*, jule::Slice<jule::Ptr<_1c4a93858_Expr>>*);
inline jule::Bool _1c45dc715_readyExprs(_1c45db3e5_structLitChecker*, jule::Slice<jule::Ptr<_1c4a93858_Expr>>*);
inline void _1c45dc98a_check(_1c45db3e5_structLitChecker*, jule::Slice<jule::Ptr<_1c4a93858_Expr>>*);
struct _1c45db3e5_structLitChecker {
	jule::Ptr<_1c45e8985_Eval> _field_e;
	jule::Ptr<_2039861ab_Token> _field_errorToken;
	jule::Ptr<_1c4aab255_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1c4aabd49_StructArgExprModel>> _field_args;
	

	_1c45db3e5_structLitChecker(void) = default;


};
inline jule::Ptr<_1c4b2c837_Var> _1c45dd46e_buildVar(_1c45dcec9_rangeChecker*, jule::Ptr<_1c4aa1c95_VarDecl>*);
inline void _1c45dd64a_setSizeKey(_1c45dcec9_rangeChecker*);
inline void _1c45dda13_checkRangeExprValidity(_1c45dcec9_rangeChecker*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4b2c837_Var>*, jule::Ptr<_1c4621d32_TypeKind>*);
inline void _1c45ddbde_checkSlice(_1c45dcec9_rangeChecker*);
inline void _1c45dddba_checkArray(_1c45dcec9_rangeChecker*);
inline void _1c45de096_checkMapKeyA(_1c45dcec9_rangeChecker*);
inline void _1c45de272_checkMapKeyB(_1c45dcec9_rangeChecker*);
inline void _1c45de44d_checkMap(_1c45dcec9_rangeChecker*);
inline void _1c45de629_checkStr(_1c45dcec9_rangeChecker*);
inline jule::Bool _1c45de88d_check(_1c45dcec9_rangeChecker*);
struct _1c45dcec9_rangeChecker {
	jule::Ptr<_1c4ad7e30_scopeChecker> _field_sc;
	jule::Ptr<_1c4aa3923_RangeKind> _field_rang;
	jule::Ptr<_1c4ad306d_RangeIter> _field_Kind;
	jule::Ptr<_1c45e6e17_Data> _field_d;
	

	_1c45dcec9_rangeChecker(void) = default;

	inline bool operator==(_1c45dcec9_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1c45dcec9_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1c45e0509_prepareTypes(_1c45e0064_retTypeChecker*);
inline void _1c45e077e_prepareExprs(_1c45e0064_retTypeChecker*, jule::Ptr<_1c4a93858_Expr>*);
inline void _1c45e095a_checkExprs(_1c45e0064_retTypeChecker*);
inline jule::Bool _1c45e0c68_check(_1c45e0064_retTypeChecker*, jule::Ptr<_1c4a93858_Expr>*);
struct _1c45e0064_retTypeChecker {
	jule::Ptr<_1c4ad7e30_scopeChecker> _field_sc;
	jule::Ptr<_1c4ab39ee_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1c4621d32_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1c4a93858_Expr>> _field_exprs;
	jule::Ptr<_2039861ab_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_1c45e0064_retTypeChecker(void) = default;


};
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c45e260a_FindPackage(_1c45e20dd_SymbolTable*, jule::Str);
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c45e2918_SelectPackage(_1c45e20dd_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)>);
inline jule::Ptr<_1c4b2c837_Var> _1c45e2cc0_FindVar(_1c45e20dd_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4701230_TypeAlias> _1c45e3177_FindTypeAlias(_1c45e20dd_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4a86ebc_Struct> _1c45e352e_FindStruct(_1c45e20dd_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4ab22e4_Fn> _1c45e38d6_FindFn(_1c45e20dd_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4ac306e_Trait> _1c45e3be4_FindTrait(_1c45e20dd_SymbolTable*, jule::Str);
inline jule::Ptr<_1c4ac5802_Enum> _1c45e4002_FindEnum(_1c45e20dd_SymbolTable*, jule::Str);
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c45e4310_FindTypeEnum(_1c45e20dd_SymbolTable*, jule::Str);
inline jule::Ptr<_1c4b2c837_Var> _1c45e4882_findVar(_1c45e20dd_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1c4701230_TypeAlias> _1c45e4cd3_findTypeAlias(_1c45e20dd_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1c45e518a_defByIdent(_1c45e20dd_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1c45e55db_isDuplicatedIdent(_1c45e20dd_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1c45e20dd_SymbolTable {
	jule::Ptr<_20398b546_File> _field_File;
	jule::Slice<_1c4ab7c89_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1c4aeeb28_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1c4b2c837_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1c4701230_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1c4a86ebc_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1c4ab22e4_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1c4ac306e_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1c4ac5802_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1c4ac6dec_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1c4acb363_Impl>> _field_Impls;
	

	_1c45e20dd_SymbolTable(void) = default;


};
inline jule::Bool _1c45e7302_IsNil(_1c45e6e17_Data*);
inline jule::Bool _1c45e7566_IsVoid(_1c45e6e17_Data*);
inline jule::Bool _1c45e77ca_IsConst(_1c45e6e17_Data*);
inline jule::Bool _1c45e7ad8_GoodOperand(_1c45e6e17_Data*, jule::Ptr<_1c45e6e17_Data>*);
struct _1c45e6e17_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1c4621d32_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1c25bc4e9_Const> _field_Constant;
	

	_1c45e6e17_Data(void) = default;

	inline bool operator==(_1c45e6e17_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1c45e6e17_Data _other) { return !this->operator==(_other); }


};
struct _1c45e7e90_Value {
	jule::Ptr<_1c4a93858_Expr> _field_Expr;
	jule::Ptr<_1c45e6e17_Data> _field_Data;
	

	_1c45e7e90_Value(void) = default;

	inline bool operator==(_1c45e7e90_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c45e7e90_Value _other) { return !this->operator==(_other); }


};
inline void _1c45e8e91_pushErr(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c45e92b0_pushSugggestion(_1c45e8985_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1c45e948b_allowBuiltin(_1c45e8985_Eval*);
inline void _1c45e9667_disallowBuiltin(_1c45e8985_Eval*);
inline jule::Bool _1c45e98cb_isUnsafe(_1c45e8985_Eval*);
inline jule::Bool _1c45e9b40_isGlobal(_1c45e8985_Eval*);
inline jule::Bool _1c45e9e1a_applyNumericPrefix(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c45ea17e_litNil(_1c45e8985_Eval*);
inline jule::Ptr<_1c45e6e17_Data> _1c45ea48c_litStr(_1c45e8985_Eval*, jule::Ptr<_1c4a9488c_LitExpr>*);
inline jule::Ptr<_1c45e6e17_Data> _1c45ea79a_litBool(_1c45e8985_Eval*, jule::Ptr<_1c4a9488c_LitExpr>*);
inline jule::Ptr<_1c45e6e17_Data> _1c45eaaa8_litRune(_1c45e8985_Eval*, jule::Ptr<_1c4a9488c_LitExpr>*);
inline jule::Ptr<_1c45e6e17_Data> _1c45eadb6_litFloat(_1c45e8985_Eval*, jule::Ptr<_1c4a9488c_LitExpr>*);
inline jule::Ptr<_1c45e6e17_Data> _1c45eb1c4_litInt(_1c45e8985_Eval*, jule::Ptr<_1c4a9488c_LitExpr>*);
inline jule::Ptr<_1c45e6e17_Data> _1c45eb4d2_litNum(_1c45e8985_Eval*, jule::Ptr<_1c4a9488c_LitExpr>*);
inline jule::Ptr<_1c45e6e17_Data> _1c45eb7e0_evalLit(_1c45e8985_Eval*, jule::Ptr<_1c4a9488c_LitExpr>);
inline jule::Any _1c45ebaed_findBuiltins(_1c45e8985_Eval*, jule::Str);
inline jule::Any _1c45ebea5_getDef(_1c45e8985_Eval*, jule::Str, jule::Bool);
inline void _1acc912a9_pushReference(_1c45e8985_Eval*, jule::Ptr<_1c4ab39ee_FnIns>*);
inline void _1acca4d39_pushReference(_1c45e8985_Eval*, jule::Ptr<_1c4b2c837_Var>*);
inline void _1acd44bed_pushReference(_1c45e8985_Eval*, jule::Ptr<_1c4aab255_StructIns>*);
inline jule::Ptr<_1c45e6e17_Data> _1c45ec538__evalEnum(_1c45e8985_Eval*, jule::Ptr<_1c4ac5802_Enum>);
inline jule::Ptr<_1c45e6e17_Data> _1c45ec8e0_evalEnum(_1c45e8985_Eval*, jule::Ptr<_1c4ac5802_Enum>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c45ecbed__evalTypeEnum(_1c45e8985_Eval*, jule::Ptr<_1c4ac6dec_TypeEnum>);
inline jule::Ptr<_1c45e6e17_Data> _1c45ed0a5_evalTypeEnum(_1c45e8985_Eval*, jule::Ptr<_1c4ac6dec_TypeEnum>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c45ed3b3__evalStruct(_1c45e8985_Eval*, jule::Ptr<_1c4aab255_StructIns>);
inline jule::Ptr<_1c45e6e17_Data> _1c45ed76a_evalStruct(_1c45e8985_Eval*, jule::Ptr<_1c4aab255_StructIns>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c45eda78_evalFnIns(_1c45e8985_Eval*, jule::Ptr<_1c4ab39ee_FnIns>);
inline void _1c45edd97_checkDeprecated(_1c45e8985_Eval*, jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c45ee24e_evalFn(_1c45e8985_Eval*, jule::Ptr<_1c4ab22e4_Fn>, jule::Ptr<_2039861ab_Token>);
inline void _1c45ee617_pushIllegalCycleError(_1c45e8985_Eval*, jule::Ptr<_1c4b2c837_Var>*, jule::Ptr<_1c4b2c837_Var>*, jule::Str*);
inline jule::Bool _1c45ee9be_checkCrossCycle(_1c45e8985_Eval*, jule::Ptr<_1c4b2c837_Var>*, jule::Str*);
inline jule::Bool _1c45eed76_checkIllegalCycles(_1c45e8985_Eval*, jule::Ptr<_1c4b2c837_Var>*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c460022d_evalVar(_1c45e8985_Eval*, jule::Ptr<_1c4b2c837_Var>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c46005d5_evalTypeAlias(_1c45e8985_Eval*, jule::Ptr<_1c4701230_TypeAlias>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c460098c_evalDef(_1c45e8985_Eval*, jule::Any, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c4600c9a_evalIdent(_1c45e8985_Eval*, jule::Ptr<_1c4a95519_IdentExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c46010a8_evalUnary(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a95c23_UnaryExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c46013b6_evalVariadic(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a960ca_VariadicExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c46016c4_evalUnsafe(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a95096_UnsafeExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c46019d2_evalArr(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a99e47_SliceExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c4601e33_evalExpSlc(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a99e47_SliceExpr>, jule::Ptr<_1c4621d32_TypeKind>, jule::Any);
inline jule::Ptr<_1c45e6e17_Data> _1c4602241_evalSliceExpr(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a99e47_SliceExpr>);
inline void _1c4602582_checkIntegerIndexingByData(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_2039861ab_Token>);
inline void _1c460295b_indexingPtr(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4a9a7b6_IndexingExpr>*);
inline void _1c4602d24_indexingArr(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4a9a7b6_IndexingExpr>*);
inline void _1c46031dc_indexingSlc(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4a9a7b6_IndexingExpr>*);
inline void _1c46035a5_indexingMap(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4a9a7b6_IndexingExpr>*);
inline void _1c460396d_indexingStr(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4a9a7b6_IndexingExpr>*);
inline void _1c4603d36_toIndexing(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4a9a7b6_IndexingExpr>*);
inline jule::Bool _1c46042a9_pushGenericsFromExprSubIdent(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a96cac_SubIdentExpr>*, jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>*, jule::Ptr<_1c4a93858_Expr>*);
inline jule::Bool _1c4604672_pushGenericsFromData(jule::Ptr<_1c45e8985_Eval>, jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>*, jule::Ptr<_1c4a93858_Expr>*);
inline void _1c46049b3_evalIdentDeclFromIndexing(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4a9a7b6_IndexingExpr>*);
inline jule::Bool _1c4604e25_checkGenericFn(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4ab39ee_FnIns>*, jule::Ptr<_2039861ab_Token>*, jule::Any*);
inline void _1c4605266_evalFnGenericFromIndexing(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4a9a7b6_IndexingExpr>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4605585_evalIndexing(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a9a7b6_IndexingExpr>);
inline __jule_tuple_x_1c45e6e17_Data__jule_tuple_x_1c45e6e17_Data _1c4605893_evalSlicingExprs(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a9adc1_SlicingExpr>*);
inline void _1c4605b18_slicingArr(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c4605ed1_slicingStr(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c4606443_checkSlicing(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4a9adc1_SlicingExpr>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4606751_evalSlicing(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a9adc1_SlicingExpr>);
inline void _1c4606b19_castPtr(_1c45e8985_Eval*, jule::Ptr<_1c4621d32_TypeKind>, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline void _1c4606ed2_castStruct(_1c45e8985_Eval*, jule::Ptr<_1c4621d32_TypeKind>, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline void _1c460739a_castRef(_1c45e8985_Eval*, jule::Ptr<_1c4621d32_TypeKind>, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline void _1c4607763_castSlc(_1c45e8985_Eval*, jule::Ptr<_1c4621d32_TypeKind>, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline void _1c4607a82_castStr(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline void _1c4607e4a_castInt(_1c45e8985_Eval*, jule::Ptr<_1c4621d32_TypeKind>, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline void _1c4608313_castNum(_1c45e8985_Eval*, jule::Ptr<_1c4621d32_TypeKind>, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline void _1c46086cb_castPrim(_1c45e8985_Eval*, jule::Ptr<_1c4621d32_TypeKind>, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline void _1c46089ea_castConstant(_1c45e8985_Eval*, jule::Ptr<_1c4621d32_TypeKind>*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c4608db3_castTypeEnum(_1c45e8985_Eval*, jule::Ptr<_1c4621d32_TypeKind>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_2039861ab_Token>*);
inline void _1c460927b_castTypeEnumT(_1c45e8985_Eval*, jule::Ptr<_1c4621d32_TypeKind>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Ptr<_1c45e6e17_Data> _1c46096cc_evalCastByTypeNData(_1c45e8985_Eval*, jule::Ptr<_1c4621d32_TypeKind>, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c4609b2d_evalCastT(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4621d32_TypeKind>*, jule::Ptr<_1c4a93858_Expr>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4609e3b_evalCast(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a96482_CastExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c460a249_evalNsSelection(_1c45e8985_Eval*, jule::Ptr<_1c4a96839_NsSelectionExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c460a69a_evalStructLitExplicit(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4aab255_StructIns>, jule::Slice<jule::Ptr<_1c4a93858_Expr>>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c460a9a8_evalStructLit(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a98a17_StructLit>);
inline _1c4b6a523_typeChecker _1c460ac1c_typeChecker(_1c45e8985_Eval*);
inline jule::Ptr<_1c45e6e17_Data> _1c460b02a_evalType(_1c45e8985_Eval*, jule::Ptr<_1c4a8e337_TypeDecl>);
inline void _1c460b349_callTypeFn(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c460b668_callBuiltinFn(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c460b9a9_checkFnOfConcurrentCall(_1c45e8985_Eval*, jule::Ptr<_1c4ab39ee_FnIns>*, jule::Ptr<_2039861ab_Token>);
inline void _1c460bda5_processExceptionalHandler(_1c45e8985_Eval*, jule::Ptr<_1c4ab39ee_FnIns>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c460c1d5_callFn(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c460c4e3_evalFnCall(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a9783a_FnCallExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c460c89a_evalEnumStatic(_1c45e8985_Eval*, jule::Ptr<_1c4ac5802_Enum>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c460cc52_evalTypeEnumStatic(_1c45e8985_Eval*, jule::Ptr<_1c4ac6dec_TypeEnum>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c460d109_evalStructStatic(_1c45e8985_Eval*, jule::Ptr<_1c4aab255_StructIns>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c460d55a_evalTraitSubIdent(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_1c4ac306e_Trait>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c460da55_evalStructSubIdent(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_1c4aab255_StructIns>, jule::Ptr<_1c4a96cac_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1c45e6e17_Data> _1c460de0c_evalSliceSubIdent(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c460e2b4_evalArraySubIdent(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c460e5c2_evalIntTypeStatic(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c460e8d0_evalUintTypeStatic(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c460ebdd_evalI8TypeStatic(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c460eeeb_evalI16TypeStatic(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c4610309_evalI32TypeStatic(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c4610617_evalI64TypeStatic(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c4610925_evalU8TypeStatic(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c4610c33_evalU16TypeStatic(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c4611041_evalU32TypeStatic(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c461134e_evalU64TypeStatic(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c461165c_evalF32TypeStatic(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c461196a_evalF64TypeStatic(_1c45e8985_Eval*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c4611d22_evalPrimStatic(_1c45e8985_Eval*, jule::Str, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c45e6e17_Data> _1c46121c9_evalTypeStatic(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_1c4a96cac_SubIdentExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c4612581_evalObjSubIdent(_1c45e8985_Eval*, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_1c4a96cac_SubIdentExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c461288e_evalSubIdent(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a96cac_SubIdentExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c4612b9c_evalTuple(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a944d5_TupleExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c4613054_evalMap(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4b6719b_Map>, jule::Ptr<_1c4a98e8a_BraceLit>);
inline jule::Ptr<_1c45e6e17_Data> _1c4613362_evalBraceLit(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a98e8a_BraceLit>);
inline jule::Ptr<_1c45e6e17_Data> _1c4613670_evalAnonFn(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4aa0cb6_FnDecl>);
inline jule::Ptr<_1c45e6e17_Data> _1c461397d_evalBinop(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a97230_BinopExpr>);
inline jule::Ptr<_1c45e6e17_Data> _1c4613c8b_evalExprKind(jule::Ptr<_1c45e8985_Eval>, jule::Any);
inline jule::Ptr<_1c45e6e17_Data> _1c4614099_eval(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a93858_Expr>);
inline jule::Ptr<_1c45e6e17_Data> _1c46143a7_evalExpr(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_1c4a93858_Expr>);
struct _1c45e8985_Eval {
	jule::Ptr<_1c4b07c74_Sema> _field_s;
	jule::Trait<_1c4b77c6c_Lookup> _field_lookup;
	jule::Ptr<_1c4621d32_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1c4b2c837_Var> _field_owner;
	jule::Ptr<_1c4aab068_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_1c45e8985_Eval(void) = default;

	inline bool operator==(_1c45e8985_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1c45e8985_Eval _other) { return !this->operator==(_other); }


};
inline _1c461482a_unaryEval static__1c4614cd1_new(jule::Ptr<_1c45e8985_Eval>);
inline void _1c4614eac_minus(_1c461482a_unaryEval*);
inline void _1c4615188_plus(_1c461482a_unaryEval*);
inline void _1c4615364_caret(_1c461482a_unaryEval*);
inline void _1c4615540_excl(_1c461482a_unaryEval*);
inline void _1c461571b_star(_1c461482a_unaryEval*);
inline void _1c46158e7_amper(_1c461482a_unaryEval*);
inline void _1c4615ac3_typeDecl(_1c461482a_unaryEval*);
inline void _1c4615c9e_evalData(_1c461482a_unaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c4616079_eval(_1c461482a_unaryEval*, jule::Ptr<_1c4a95c23_UnaryExpr>);
struct _1c461482a_unaryEval {
	jule::Ptr<_1c45e8985_Eval> _field_e;
	jule::Ptr<_1c45e6e17_Data> _field_d;
	jule::Ptr<_1c4a95c23_UnaryExpr> _field_u;
	

	_1c461482a_unaryEval(void) = default;

	inline bool operator==(_1c461482a_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1c461482a_unaryEval _other) { return !this->operator==(_other); }


};
inline _1c46165b8_binaryEval static__1c4616b90_newPlain(jule::Ptr<_1c45e8985_Eval>);
inline _1c46165b8_binaryEval static__1c4616ed1_new(jule::Ptr<_1c45e8985_Eval>, jule::Ptr<_2039861ab_Token>);
inline jule::Bool _1c4617245_checkTypeCompatibility(_1c46165b8_binaryEval*);
inline jule::Bool _1c46174dc_checkStructCommonOperatorCompatibility(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c4617784_evalNil(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c46179e8_evalEnum(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c4617c5c_evalTypeEnum(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c4617ec1_evalSptr(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c4618235_evalPtr(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c4618499_evalArr(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c461870d_evalSlc(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c4618972_evalFn(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c4618bd6_evalStruct(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c4618e4a_evalTrait(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c46191ae_evalAny(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c4619423_evalBool(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c4619687_evalStr(_1c46165b8_binaryEval*);
inline void _1c4619863_setTypeToGreater(_1c46165b8_binaryEval*);
inline void _1c4619aa5_checkModData(_1c46165b8_binaryEval*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c4619c81_mod(_1c46165b8_binaryEval*);
inline jule::Bool _1c461a138_numbersAreCompatibile(_1c46165b8_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1c45e6e17_Data> _1c461a39c_evalFloat(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c461a611_evalInt(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c461a875_evalPrim(_1c46165b8_binaryEval*);
inline void _1c461aa51_checkSpecialCases(_1c46165b8_binaryEval*);
inline jule::Ptr<_1c45e6e17_Data> _1c461acb5_evalOp(_1c46165b8_binaryEval*);
inline void _1c461b03a_evalConst(_1c46165b8_binaryEval*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c461b2b0_checkData(_1c46165b8_binaryEval*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c461b48b_checkDatas(_1c46165b8_binaryEval*);
inline void _1c461b711_setModel(_1c46165b8_binaryEval*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c461b986_postEval(_1c46165b8_binaryEval*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c461bd3d_solveExplicit(_1c46165b8_binaryEval*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c461c14b_eval(_1c46165b8_binaryEval*, jule::Ptr<_1c4a97230_BinopExpr>*);
struct _1c46165b8_binaryEval {
	jule::Ptr<_1c45e8985_Eval> _field_e;
	jule::Ptr<_1c45e6e17_Data> _field_l;
	jule::Ptr<_1c45e6e17_Data> _field_r;
	jule::Ptr<_2039861ab_Token> _field_op;
	

	_1c46165b8_binaryEval(void) = default;

	inline bool operator==(_1c46165b8_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c46165b8_binaryEval _other) { return !this->operator==(_other); }


};
struct _1c47006e6_InsGeneric {
	jule::Ptr<_1c4621d32_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1c4621d32_TypeKind>> _field_Constraint;
	

	_1c47006e6_InsGeneric(void) = default;


};
struct _1c4701230_TypeAlias {
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c4b610b8_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1c4701230_TypeAlias>> _field_Generics;
	

	_1c4701230_TypeAlias(void) = default;


};
inline jule::Str _1c4622272_Str(_1c4621d32_TypeKind*);
inline jule::Bool _1c4622580_Equal(jule::Ptr<_1c4621d32_TypeKind>, jule::Ptr<_1c4621d32_TypeKind>);
inline jule::Bool _1c4b4e6b1_CppLinked(_1c4621d32_TypeKind*);
inline jule::Bool _1c4b4629b_IsNil(_1c4621d32_TypeKind*);
inline jule::Bool _1c4b463cd_Void(_1c4621d32_TypeKind*);
inline jule::Bool _1c4b5cca7_Comparable(_1c4621d32_TypeKind*);
inline jule::Bool _1c4b5cdd9_Mutable(_1c4621d32_TypeKind*);
inline jule::Bool _1c4b5de84_NilCompatible(_1c4621d32_TypeKind*);
inline jule::Bool _1c4b5e0b6_PerformsRC(_1c4621d32_TypeKind*);
inline jule::Bool _1c4b5e1e8_SupportsCloning(_1c4621d32_TypeKind*);
inline jule::Bool _1c4b5e32a_Variadicable(_1c4621d32_TypeKind*);
inline jule::Ptr<_1c4b6197b_Prim> _1c4b5e45c_Prim(_1c4621d32_TypeKind*);
inline jule::Ptr<_1c4b65210_Sptr> _1c4b5e58e_Sptr(_1c4621d32_TypeKind*);
inline jule::Ptr<_1c4b686ec_Ptr> _1c4b5e6c1_Ptr(_1c4621d32_TypeKind*);
inline jule::Ptr<_1c4ac5802_Enum> _1c4b5e803_Enum(_1c4621d32_TypeKind*);
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b5ea23_TypeEnum(_1c4621d32_TypeKind*);
inline jule::Ptr<_1c4b67c90_Arr> _1c4b5ec87_Arr(_1c4621d32_TypeKind*);
inline jule::Ptr<_1c4b65b6c_Slc> _1c4b5eeeb_Slc(_1c4621d32_TypeKind*);
inline jule::Ptr<_1c4ab39ee_FnIns> _1c4b60260_Fn(_1c4621d32_TypeKind*);
inline jule::Ptr<_1c4aab255_StructIns> _1c4b604c4_Struct(_1c4621d32_TypeKind*);
inline jule::Ptr<_1c4ac306e_Trait> _1c4b60738_Trait(_1c4621d32_TypeKind*);
inline jule::Ptr<_1c4b6719b_Map> _1c4b6099c_Map(_1c4621d32_TypeKind*);
inline jule::Ptr<_1c4b66673_Tuple> _1c4b60c11_Tup(_1c4621d32_TypeKind*);
struct _1c4621d32_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1c46218c0_Kind> _field_Kind;
	

	_1c4621d32_TypeKind(void) = default;

	inline bool operator==(_1c4621d32_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c4621d32_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4b614b4_checked(_1c4b610b8_TypeSymbol*);
inline void _1c4b61690_removeKind(_1c4b610b8_TypeSymbol*);
struct _1c4b610b8_TypeSymbol {
	jule::Ptr<_1c4a8e337_TypeDecl> _field_Decl;
	jule::Ptr<_1c4621d32_TypeKind> _field_Kind;
	

	_1c4b610b8_TypeSymbol(void) = default;

	inline bool operator==(_1c4b610b8_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c4b610b8_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1c4b61cde_Str(_1c4b6197b_Prim*);
inline jule::Bool _1c4b620ec_Equal(jule::Ptr<_1c4b6197b_Prim>, jule::Ptr<_1c4621d32_TypeKind>);
inline jule::Bool _1c4b62570_IsConstraint(_1c4b6197b_Prim*);
inline jule::Bool _1c4b627d4_IsI8(_1c4b6197b_Prim*);
inline jule::Bool _1c4b62a48_IsI16(_1c4b6197b_Prim*);
inline jule::Bool _1c4b62cac_IsI32(_1c4b6197b_Prim*);
inline jule::Bool _1c4b63021_IsI64(_1c4b6197b_Prim*);
inline jule::Bool _1c4b63285_IsU8(_1c4b6197b_Prim*);
inline jule::Bool _1c4b634e9_IsU16(_1c4b6197b_Prim*);
inline jule::Bool _1c4b6375d_IsU32(_1c4b6197b_Prim*);
inline jule::Bool _1c4b639c2_IsU64(_1c4b6197b_Prim*);
inline jule::Bool _1c4b63c36_IsF32(_1c4b6197b_Prim*);
inline jule::Bool _1c4b63e9a_IsF64(_1c4b6197b_Prim*);
inline jule::Bool _1c4b6420e_IsInt(_1c4b6197b_Prim*);
inline jule::Bool _1c4b64473_IsUint(_1c4b6197b_Prim*);
inline jule::Bool _1c4b646d7_IsUintptr(_1c4b6197b_Prim*);
inline jule::Bool _1c4b6494b_IsBool(_1c4b6197b_Prim*);
inline jule::Bool _1c4b64bb0_IsStr(_1c4b6197b_Prim*);
inline jule::Bool _1c4b64e24_IsAny(_1c4b6197b_Prim*);
struct _1c4b6197b_Prim {
	jule::Str _field_Kind;
	

	_1c4b6197b_Prim(void) = default;

	inline bool operator==(_1c4b6197b_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c4b6197b_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1c4b65573_Str(_1c4b65210_Sptr*);
inline jule::Bool _1c4b65881_Equal(jule::Ptr<_1c4b65210_Sptr>, jule::Ptr<_1c4621d32_TypeKind>);
struct _1c4b65210_Sptr {
	jule::Ptr<_1c4621d32_TypeKind> _field_Elem;
	

	_1c4b65210_Sptr(void) = default;

	inline bool operator==(_1c4b65210_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c4b65210_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1c4b66101_Str(_1c4b65b6c_Slc*);
inline jule::Bool _1c4b6640e_Equal(jule::Ptr<_1c4b65b6c_Slc>, jule::Ptr<_1c4621d32_TypeKind>);
struct _1c4b65b6c_Slc {
	jule::Ptr<_1c4621d32_TypeKind> _field_Elem;
	

	_1c4b65b6c_Slc(void) = default;

	inline bool operator==(_1c4b65b6c_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c4b65b6c_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1c4b669d6_Str(_1c4b66673_Tuple*);
inline jule::Bool _1c4b66ce4_Equal(jule::Ptr<_1c4b66673_Tuple>, jule::Ptr<_1c4621d32_TypeKind>);
struct _1c4b66673_Tuple {
	jule::Slice<jule::Ptr<_1c4621d32_TypeKind>> _field_Types;
	

	_1c4b66673_Tuple(void) = default;


};
inline jule::Str _1c4b6750e_Str(_1c4b6719b_Map*);
inline jule::Bool _1c4b6781c_Equal(jule::Ptr<_1c4b6719b_Map>, jule::Ptr<_1c4621d32_TypeKind>);
struct _1c4b6719b_Map {
	jule::Ptr<_1c4621d32_TypeKind> _field_Key;
	jule::Ptr<_1c4621d32_TypeKind> _field_Val;
	

	_1c4b6719b_Map(void) = default;

	inline bool operator==(_1c4b6719b_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c4b6719b_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1c4b68103_Str(_1c4b67c90_Arr*);
inline jule::Bool _1c4b68411_Equal(jule::Ptr<_1c4b67c90_Arr>, jule::Ptr<_1c4621d32_TypeKind>);
struct _1c4b67c90_Arr {
	jule::Bool _field_Auto = false;
	jule::I32 _field_N = 0;
	jule::Ptr<_1c4621d32_TypeKind> _field_Elem;
	

	_1c4b67c90_Arr(void) = default;

	inline bool operator==(_1c4b67c90_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c4b67c90_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1c4b68a60_Str(_1c4b686ec_Ptr*);
inline jule::Bool _1c4b68d6d_Equal(jule::Ptr<_1c4b686ec_Ptr>, jule::Ptr<_1c4621d32_TypeKind>);
inline jule::Bool _1c4b691c0_IsUnsafe(_1c4b686ec_Ptr*);
struct _1c4b686ec_Ptr {
	jule::Ptr<_1c4621d32_TypeKind> _field_Elem;
	

	_1c4b686ec_Ptr(void) = default;

	inline bool operator==(_1c4b686ec_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c4b686ec_Ptr _other) { return !this->operator==(_other); }


};
struct _1c4b69643_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1c4b69643_referencer(void) = default;

	inline bool operator==(_1c4b69643_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1c4b69643_referencer _other) { return !this->operator==(_other); }


};
inline void _1c4b6ac2c_pushErr(_1c4b6a523_typeChecker*, jule::Ptr<_2039861ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c4b6ae08_allowBuiltin(_1c4b6a523_typeChecker*);
inline void _1c4b6b0d4_disallowBuiltin(_1c4b6a523_typeChecker*);
inline jule::Ptr<_1c4b6197b_Prim> _1c4b6b3e2_buildPrim(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>*);
inline void _1ad0b2993_pushReference(_1c4b6a523_typeChecker*, jule::Ptr<_1c4aab255_StructIns>*);
inline void _1ad0b5820_pushReference(_1c4b6a523_typeChecker*, jule::Ptr<_1c4ac306e_Trait>*);
inline void _1c4b6b8dc_pushReferenceByKind(_1c4b6a523_typeChecker*, jule::Ptr<_1c4621d32_TypeKind>*);
inline void _1c4b6bca5_pushCycleError(_1c4b6a523_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _1c4b6c15c_checkCrossCycle(_1c4b6a523_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _1c4b6c514_checkIllegalCycles(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1c46218c0_Kind> _1c4b6c8bb_fromTypeAlias(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>*, jule::Ptr<_1c4701230_TypeAlias>*);
inline jule::Ptr<_1c4ac5802_Enum> _1c4b6cc73_fromEnum(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>*, jule::Ptr<_1c4ac5802_Enum>*);
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b6d12a_fromTypeEnum(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>*, jule::Ptr<_1c4ac6dec_TypeEnum>*);
inline jule::Ptr<_1c4ac306e_Trait> _1c4b6d4d2_fromTrait(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>*, jule::Ptr<_1c4ac306e_Trait>*);
inline jule::Bool _1c4b6d889_checkStructIns(_1c4b6a523_typeChecker*, jule::Ptr<_1c4aab255_StructIns>*, jule::Ptr<_2039861ab_Token>*);
inline void _1c4b6db31_appendUsedStructReference(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a86ebc_Struct>*);
inline jule::Ptr<_1c4aab255_StructIns> _1c4b6dee9_buildStructInstance(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>*, jule::Ptr<_1c4a86ebc_Struct>*);
inline jule::Ptr<_1c4aab255_StructIns> _1c4b6e3a1_fromStruct(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>*, jule::Ptr<_1c4a86ebc_Struct>*);
inline jule::Trait<_1c46218c0_Kind> _1c4b6e6ae_getDef(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>*);
inline jule::Trait<_1c46218c0_Kind> _1c4b6e9bc_buildIdent(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>);
inline jule::Trait<_1c46218c0_Kind> _1c4b6ecca_buildSubIdent(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a9004c_SubIdentTypeDecl>);
inline jule::Ptr<_1c4b65210_Sptr> _1c4b700d8_buildSptrFromType(_1c4b6a523_typeChecker*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Ptr<_1c4b65210_Sptr> _1c4b703e6_buildSptr(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a906e0_SptrTypeDecl>);
inline jule::Ptr<_1c4b686ec_Ptr> _1c4b70704_buildPtrFromType(_1c4b6a523_typeChecker*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Ptr<_1c4b686ec_Ptr> _1c4b70a12_buildPtr(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a911b3_PtrTypeDecl>);
inline jule::Ptr<_1c4b65b6c_Slc> _1c4b70d20_buildSlc(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a90adb_SlcTypeDecl>);
inline jule::Ptr<_1c4b67c90_Arr> _1c4b7112d_buildArr(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a91845_ArrTypeDecl>);
inline jule::Ptr<_1c4b6719b_Map> _1c4b7143b_buildMap(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a92093_MapTypeDecl>);
inline jule::Ptr<_1c4b66673_Tuple> _1c4b71749_buildTuple(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a90dc7_TupleTypeDecl>);
inline jule::Bool _1c4b71a57_checkFnTypes(_1c4b6a523_typeChecker*, jule::Ptr<_1c4ab39ee_FnIns>*);
inline jule::Ptr<_1c4ab39ee_FnIns> _1c4b71d65_buildFn(_1c4b6a523_typeChecker*, jule::Ptr<_1c4aa0cb6_FnDecl>);
inline jule::Trait<_1c46218c0_Kind> _1c4b72173_buildByNamespace(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a90404_NamespaceTypeDecl>);
inline jule::Ptr<_1c4621d32_TypeKind> _1c4b72481_build(_1c4b6a523_typeChecker*, jule::Any*);
inline jule::Ptr<_1c4621d32_TypeKind> _1c4b7278e_checkDecl(_1c4b6a523_typeChecker*, jule::Ptr<_1c4a8e337_TypeDecl>*);
inline void _1c4b72a14_check(_1c4b6a523_typeChecker*, jule::Ptr<_1c4b610b8_TypeSymbol>*);
struct _1c4b6a523_typeChecker {
	jule::Ptr<_1c4b07c74_Sema> _field_s;
	jule::Trait<_1c4b77c6c_Lookup> _field_rootLookup;
	jule::Trait<_1c4b77c6c_Lookup> _field_lookup;
	jule::Ptr<_1c4b69643_referencer> _field_referencer;
	jule::Ptr<_1c4ab6958_ReferenceStack> _field_refers;
	jule::Ptr<_2039861ab_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1c4621d32_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1c4701230_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1c4701230_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1c4701230_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_1c4b6a523_typeChecker(void) = default;


};
inline jule::Bool static__1c4b73174_prim(jule::Str*, jule::Ptr<_1c4b6197b_Prim>);
inline jule::Bool static__1c4b734b5_exist(jule::Str*, jule::Ptr<_1c4621d32_TypeKind>*);
struct _1c4b72c34_identTypeLookup {
	

	_1c4b72c34_identTypeLookup(void) = default;

	inline bool operator==(_1c4b72c34_identTypeLookup _other) { return true; }

	inline bool operator!=(_1c4b72c34_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1a9aa4213_FileInfo {
	jule::Ptr<_1c4a59b93_Ast> _field_Ast;
	jule::Slice<_1c2220900_Log> _field_Errors;
	

	_1a9aa4213_FileInfo(void) = default;


};
struct _1a9aecd2d_stmt {
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_1a9aecd2d_stmt(void) = default;


};
inline void _1a9aedcda_stop(_1a9aed658_scopeParser*);
inline jule::Bool _1a9aee04e_stopped(_1a9aed658_scopeParser*);
inline jule::Bool _1a9aee2b3_finished(_1a9aed658_scopeParser*);
inline jule::Bool _1a9aee527_isLastSt(_1a9aed658_scopeParser*);
inline void _1a9aee846_pushErr(_1a9aed658_scopeParser*, jule::Ptr<_2039861ab_Token>, jule::Str);
inline void _1a9aeeb65_pushSuggestion(_1a9aed658_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1a9aeedda_insertAsNext(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1a9aecd2d_stmt> _1a9b0014e_next(_1a9aed658_scopeParser*);
inline jule::Ptr<_1c4a9e2c0_ScopeTree> _1a9b00506_buildScope(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c4aa1c95_VarDecl> _1a9b00814_buildVarSt(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa214c_RetSt> _1a9b00b22_buildRetSt(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4aa27ac_Iter> _1a9b00e30_buildWhileNextIter(_1a9aed658_scopeParser*, jule::Ptr<_1a9aecd2d_stmt>*);
inline jule::Ptr<_1c4aa3082_WhileKind> _1a9b0123d_buildWhileIterKind(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _1a9b0154b_getRangeKindKeysTokens(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa1c95_VarDecl> _1a9b01859_buildRangeKindKey(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Slice<jule::Ptr<_1c4aa1c95_VarDecl>> _1a9b01b67_buildRangeKindKeys(_1a9aed658_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>>*);
inline void _1a9b01ea8_setupRangeKindKeysPlain(_1a9aed658_scopeParser*, jule::Ptr<_1c4aa3923_RangeKind>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b0230a_setupRangeKindKeysExplicit(_1a9aed658_scopeParser*, jule::Ptr<_1c4aa3923_RangeKind>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b0263a_setupRangeKindKeys(_1a9aed658_scopeParser*, jule::Ptr<_1c4aa3923_RangeKind>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa3923_RangeKind> _1a9b02a8b_buildRangeIterKind(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Any _1a9b02e43_buildCommonIterKind(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Ptr<_1c4aa27ac_Iter> _1a9b03251_buildCommonIter(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4aa27ac_Iter> _1a9b0355e_buildIterSt(_1a9aed658_scopeParser*, jule::Ptr<_1a9aecd2d_stmt>*);
inline jule::Ptr<_1c4aa3cca_BreakSt> _1a9b0386c_buildBreakSt(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa4182_ContSt> _1a9b03b7a_buildContSt(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa4605_If> _1a9b03e88_buildIf(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa49ac_Else> _1a9b04296_buildElse(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa4e30_Conditional> _1a9b045a4_buildIfElseChain(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a93858_Expr> _1a9b048b2_buildCoCallSt(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a9bd8e_GotoSt> _1a9b04bc0_buildGotoSt(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a9c17a_FallSt> _1a9b04ecd_buildFallSt(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa5606_TypeAliasDecl> _1a9b052db_buildTypeAliasSt(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b0574d_pushCaseExpr(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>, jule::Ptr<_2039861ab_Token>, jule::Bool, jule::Slice<jule::Ptr<_1c4a93858_Expr>>*);
inline jule::Slice<jule::Ptr<_1c4a93858_Expr>> _1a9b05b9e_buildCaseExprs(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Ptr<_2039861ab_Token>*, jule::Bool);
inline jule::Ptr<_1c4a9e2c0_ScopeTree> _1a9b05eac_buildCaseScope(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline __jule_tuple_x_1c4aa5a79_Case__jule_tuple_bool _1a9b06364_buildCase(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Bool);
inline __jule_tuple_sx_1c4aa5a79_Case__jule_tuple_x_1c4aa49ac_Else _1a9b0671b_buildCases(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>, jule::Bool);
inline jule::Ptr<_1c4aa6250_MatchCase> _1a9b06a29_buildMatchCase(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a9e2c0_ScopeTree> _1a9b06d37_buildScopeSt(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a9b9d7_LabelSt> _1a9b07145_buildLabelSt(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline __jule_tuple__1c4a9d984_StmtData__jule_tuple_bool _1a9b07453_buildIdSt(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1a9b16473_assignInfo> _1a9b07761_buildAssignInfo(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a9c785_AssignLeft> _1a9b07a6e_buildAssignL(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Slice<jule::Ptr<_1c4a9c785_AssignLeft>> _1a9b07d7c_buildAssignLs(_1a9aed658_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>>*);
inline __jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool _1a9b0818a_buildPlainAssign(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline __jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool _1a9b08498_buildDeclAssign(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline __jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool _1a9b087a6_buildAssignSt(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a941e9_UseExpr> _1a9b08ab4_buildUseExpr(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Any _1a9b08dc2_buildSt(_1a9aed658_scopeParser*, jule::Ptr<_1a9aecd2d_stmt>*);
inline void _1a9b091e1_build(_1a9aed658_scopeParser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Ptr<_1c4a9e2c0_ScopeTree>*);
struct _1a9aed658_scopeParser {
	jule::Ptr<_1a9b19ca1_parser> _field_p;
	jule::Ptr<_1c4a9e2c0_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a9aecd2d_stmt>> _field_stmts;
	jule::I32 _field_pos = 0;
	

	_1a9aed658_scopeParser(void) = default;


};
inline void _1a9b0a412_pushErr(_1a9b09b3c_exprBuilder*, jule::Ptr<_2039861ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a9b0a731_pushSuggestion(_1a9b09b3c_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c4a944d5_TupleExpr> _1a9b0aa3e_buildTuple(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>>*);
inline jule::Ptr<_1c4a9488c_LitExpr> _1a9b0ad4c_buildLit(_1a9b09b3c_exprBuilder*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b0b15a_buildPrimitiveType(_1a9b09b3c_exprBuilder*, jule::Ptr<_2039861ab_Token>*);
inline jule::Any _1a9b0b468_buildSingle(_1a9b09b3c_exprBuilder*, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c4a95519_IdentExpr> _1a9b0b776_buildCppLinkedIdent(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a95c23_UnaryExpr> _1a9b0ba84_buildUnary(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a96cac_SubIdentExpr> _1a9b0bd92_buildObjSubIdent(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a96839_NsSelectionExpr> _1a9b0c1a0_buildNsSubIdent(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b0c4ad_buildType(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Any _1a9b0c7bb_buildSubIdent(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a960ca_VariadicExpr> _1a9b0cac9_buildVariadic(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Any _1a9b0cdd7_buildOpRight(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a93b44_RangeExpr> _1a9b0d217_buildBetweenParentheses(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a96482_CastExpr> _1a9b0d536_tryBuildCast(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b0d8ee_pushArg(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_1c4a93858_Expr>>*, jule::Slice<jule::Ptr<_2039861ab_Token>>, jule::Ptr<_2039861ab_Token>);
inline jule::Slice<jule::Ptr<_1c4a93858_Expr>> _1a9b0dc0c_buildArgs(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _1a9b0e01a_buildCallGenerics(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a9783a_FnCallExpr> _1a9b0e46b_buildFnCall(_1a9b09b3c_exprBuilder*, jule::Ptr<_2039861ab_Token>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Any _1a9b0e779_buildParenthesesRange(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a95096_UnsafeExpr> _1a9b0ea87_buildUnsafeExpr(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4aa0cb6_FnDecl> _1a9b0ed95_buildAnonFn(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Any _1a9b101a3_buildUnsafe(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b1056b_pushRangeLitPart(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>, jule::Ptr<_2039861ab_Token>, jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _1a9b1089b_getBraceRangeLitExprParts(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a982b9_FieldExprPair> _1a9b10bba_buildFieldExprPair(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a93858_Expr> _1a9b10ec8_buildStructLitExpr(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Slice<jule::Ptr<_1c4a93858_Expr>> _1a9b112d6_buildStructLitExprs(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a98a17_StructLit> _1a9b11616_buildTypedStructLiteral(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a93858_Expr> _1a9b11935_buildBraceLitPart(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a98e8a_BraceLit> _1a9b11c43_buildBraceLit(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Any _1a9b12051_buildBraceRange(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _1a9b1235e_getEnumerableParts(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a99e47_SliceExpr> _1a9b1266c_buildSlice(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a9a7b6_IndexingExpr> _1a9b12abd_buildIndexing(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>, jule::Slice<jule::Ptr<_2039861ab_Token>>, jule::Ptr<_2039861ab_Token>);
inline jule::Ptr<_1c4a9adc1_SlicingExpr> _1a9b13162_buildSlicing(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Ptr<_2039861ab_Token>*, jule::Ptr<_2039861ab_Token>);
inline jule::Any _1a9b13470_buildBracketRange(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Any _1a9b1377d_buildData(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Any _1a9b13b35_buildBinop(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::I32);
inline jule::Any _1a9b13e43_build(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Any _1a9b14251_buildKind(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a93858_Expr> _1a9b1455e_buildFromTokens(_1a9b09b3c_exprBuilder*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
struct _1a9b09b3c_exprBuilder {
	jule::Ptr<_1a9b19ca1_parser> _field_p;
	

	_1a9b09b3c_exprBuilder(void) = default;

	inline bool operator==(_1a9b09b3c_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1a9b09b3c_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1a9b16473_assignInfo {
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_l;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_r;
	jule::Ptr<_2039861ab_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_1a9b16473_assignInfo(void) = default;


};
inline void _1a9b1a0d1_stop(_1a9b19ca1_parser*);
inline jule::Bool _1a9b1a345_stopped(_1a9b19ca1_parser*);
inline void _1a9b1a70d_pushErr(_1a9b19ca1_parser*, jule::Ptr<_2039861ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a9b1aa2c_pushSuggestion(_1a9b19ca1_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c4a93858_Expr> _1a9b1ad3a_buildExpr(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a5ad81_Directive> _1a9b1b148_buildDirective(_1a9b19ca1_parser*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline void _1a9b1b3bd_pushDirective(_1a9b19ca1_parser*, jule::Ptr<_1c4a5ad81_Directive>);
inline jule::Ptr<_1c4a9e2c0_ScopeTree> _1a9b1b775_buildScope(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Ptr<_2039861ab_Token>);
inline __jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool _1a9b1bbc6__buildType(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::I32*, jule::Bool);
inline __jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool _1a9b1c127_buildType(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_1c4aa5606_TypeAliasDecl> _1a9b1c435_buildTypeAliasDecl(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b1c754_buildVarTypeAndExpr(jule::Ptr<_1a9b19ca1_parser>, jule::Ptr<_1c4aa1c95_VarDecl>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b1ca73_buildVarCommon(jule::Ptr<_1a9b19ca1_parser>, jule::Ptr<_1c4aa1c95_VarDecl>*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline void _1a9b1ce3b_buildVarBegin(_1a9b19ca1_parser*, jule::Ptr<_1c4aa1c95_VarDecl>*, jule::I32*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa1c95_VarDecl> _1a9b1d249_buildVar(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a9b630_GenericDecl> _1a9b1d557_buildGeneric(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>> _1a9b1d90e_buildGenerics(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Ptr<_2039861ab_Token>*);
inline jule::Ptr<_1c4a9e996_ParamDecl> _1a9b1dc1c_buildSelfParam(_1a9b19ca1_parser*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline void _1a9b1e0d5_paramTypeBegin(_1a9b19ca1_parser*, jule::Ptr<_1c4a9e996_ParamDecl>*, jule::I32*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b1e404_buildParamType(jule::Ptr<_1a9b19ca1_parser>, jule::Ptr<_1c4a9e996_ParamDecl>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b1e723_buildParamBody(jule::Ptr<_1a9b19ca1_parser>, jule::Ptr<_1c4a9e996_ParamDecl>*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4a9e996_ParamDecl> _1a9b1ea31_buildParam(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline void _1a9b1eca6_checkParams(_1a9b19ca1_parser*, jule::Slice<jule::Ptr<_1c4a9e996_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1c4a9e996_ParamDecl>> _1a9b2015d_buildParams(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Bool);
inline __jule_tuple_x_1c4a9244a_RetTypeDecl__jule_tuple_bool _1a9b20515_buildMultiRetType(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::I32*);
inline __jule_tuple_x_1c4a9244a_RetTypeDecl__jule_tuple_bool _1a9b208bc_buildRetType(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::I32*);
inline jule::Ptr<_1c4aa0cb6_FnDecl> _1a9b20d1d_buildFnPrototype(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_1c4aa0cb6_FnDecl> _1a9b2126e_buildFn(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_2039861ab_Token>> _1a9b2157c_getUseDeclSelectors(_1a9b19ca1_parser*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline void _1a9b2189b_buildCppUseDecl(_1a9b19ca1_parser*, jule::Ptr<_1c4aa69e2_UseDecl>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b21bba_buildStdUseDecl(_1a9b19ca1_parser*, jule::Ptr<_1c4aa69e2_UseDecl>*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline void _1a9b21ed9_buildIdentUseDecl(_1a9b19ca1_parser*, jule::Ptr<_1c4aa69e2_UseDecl>*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline void _1a9b22308_parseUseDecl(_1a9b19ca1_parser*, jule::Ptr<_1c4aa69e2_UseDecl>*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4aa69e2_UseDecl> _1a9b226b0_buildUseDecl(_1a9b19ca1_parser*, jule::Slice<jule::Ptr<_2039861ab_Token>>, jule::Bool);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b22a67_buildTypeEnumItemKind(jule::Ptr<_1a9b19ca1_parser>, jule::I32*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Slice<jule::Ptr<_1c4aa8494_TypeEnumItemDecl>> _1a9b22d75_buildTypeEnumItems(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa8a9e_TypeEnumDecl> _1a9b23183_buildTypeEnumDecl(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a93858_Expr> _1a9b2353a_buildEnumItemExpr(jule::Ptr<_1a9b19ca1_parser>, jule::I32*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Slice<jule::Ptr<_1c4aa6e65_EnumItemDecl>> _1a9b23848_buildEnumItems(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa798d_EnumDecl> _1a9b23b56_buildEnumDecl(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Any _1a9b23e64_buildNodeEnumDecl(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa8c9c_FieldDecl> _1a9b24272_buildField(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Slice<jule::Ptr<_1c4aa8c9c_FieldDecl>> _1a9b24580_buildStructDeclFields(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4aa9550_StructDecl> _1a9b2488d_buildStructDecl(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b24b13_checkMethodReceiver(_1a9b19ca1_parser*, jule::Ptr<_1c4aa0cb6_FnDecl>*);
inline void _1a9b24e32_buildTraitBody(jule::Ptr<_1a9b19ca1_parser>, jule::Ptr<_1c4aa9c26_TraitDecl>*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4aa9c26_TraitDecl> _1a9b25240_buildTraitDecl(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa0cb6_FnDecl> _1a9b2554d_buildCppLinkFn(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4aa1c95_VarDecl> _1a9b2585b_buildCppLinkVar(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4aa9550_StructDecl> _1a9b25b69_buildCppLinkStruct(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4aa5606_TypeAliasDecl> _1a9b25e77_buildCppLinkTypeAlias(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Ptr<_1c4aa69e2_UseDecl> _1a9b26285_buildCppLinkUse(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Any _1a9b26593_buildCppLink(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aa0cb6_FnDecl> _1a9b268a1_getMethod(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b26bc0_parseImplBody(jule::Ptr<_1a9b19ca1_parser>, jule::Ptr<_1c4aaa331_Impl>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4aaa331_Impl> _1a9b26ecd_buildImpl(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Any _1a9b272db_buildNodeData(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b27561_applyFnMeta(_1a9b19ca1_parser*, jule::Ptr<_1c4aa0cb6_FnDecl>*);
inline void _1a9b277d6_applyMeta(_1a9b19ca1_parser*, _1c4a5a985_Node*);
inline void _1a9b27a5b_pushUseDecl(jule::Ptr<_1a9b19ca1_parser>, jule::Ptr<_1c4aa69e2_UseDecl>*);
inline jule::Bool _1a9b27d69_pushMetaNodes(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline _1c4a5a985_Node _1a9b28177_parseNode(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b283ec_appendNode(jule::Ptr<_1a9b19ca1_parser>, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b2885e_removeRange(_1a9b19ca1_parser*, jule::I32, jule::Str, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Slice<jule::I32>*);
inline void _1a9b28c27_pushWrongOrderCloseErr(_1a9b19ca1_parser*, jule::Ptr<_2039861ab_Token>*, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Slice<jule::I32>*);
inline void _1a9b29189_pushRangeClose(_1a9b19ca1_parser*, jule::Ptr<_2039861ab_Token>, jule::Str, jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Slice<jule::I32>*);
inline void _1a9b2940e_checkRanges(_1a9b19ca1_parser*, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline void _1a9b29684_parse(jule::Ptr<_1a9b19ca1_parser>, jule::Ptr<_20398b546_File>*);
struct _1a9b19ca1_parser {
	jule::Ptr<_1c4a59b93_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1c4a5ad81_Directive>> _field_directives;
	jule::Slice<_1c2220900_Log> _field_errors;
	

	_1a9b19ca1_parser(void) = default;


};
inline void _1a9b2b09d_pushErr(_1a9b2a9c6_typeBuilder*, jule::Ptr<_2039861ab_Token>, jule::Str);
inline void _1a9b2b3bc_pushSuggestion(_1a9b2a9c6_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2b631_buildPrim(_1a9b2a9c6_typeBuilder*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2b895_buildNamespace(_1a9b2a9c6_typeBuilder*);
inline jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _1a9b2bb09_buildGenerics(_1a9b2a9c6_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _1a9b2bd6d_identGenerics(_1a9b2a9c6_typeBuilder*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2c0d2_buildIdent(_1a9b2a9c6_typeBuilder*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2c346_buildCppLink(_1a9b2a9c6_typeBuilder*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2c5aa_buildFn(_1a9b2a9c6_typeBuilder*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2c81e_buildPtr(_1a9b2a9c6_typeBuilder*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2ca83_buildSptr(_1a9b2a9c6_typeBuilder*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2cce7_buildOp(_1a9b2a9c6_typeBuilder*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2d05b_buildSlc(_1a9b2a9c6_typeBuilder*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2d2c0_buildArr(_1a9b2a9c6_typeBuilder*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2d534_buildMap(_1a9b2a9c6_typeBuilder*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2d798_buildEnumerable(_1a9b2a9c6_typeBuilder*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2da0c_step(_1a9b2a9c6_typeBuilder*);
inline __jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool _1a9b2dc71_build(_1a9b2a9c6_typeBuilder*);
struct _1a9b2a9c6_typeBuilder {
	jule::Ptr<_1a9b19ca1_parser> _field_p;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _field_tokens;
	jule::I32* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_1a9b2a9c6_typeBuilder(void) = default;


};
struct _1c4cd833e_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1c4cd833e_CompileInfo(void) = default;

	inline bool operator==(_1c4cd833e_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1c4cd833e_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1c4cd9be2_pushErr(_1c4cd9692_directiveEval*, jule::Ptr<_2039861ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _1c4cda099_splitOperans(_1c4cd9692_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Bool _1c4cda3a7_evalDirectiveIdent(_1c4cd9692_directiveEval*, jule::Str);
inline jule::Bool _1c4cda6b5_evalDirectivePart(_1c4cd9692_directiveEval*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Bool _1c4cda929_eval(_1c4cd9692_directiveEval*);
struct _1c4cd9692_directiveEval {
	jule::Slice<_1c2220900_Log> _field_logs;
	jule::Ptr<_1c4a5ad81_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_1c4cd9692_directiveEval(void) = default;


};
inline jule::Ptr<_1a9a21e2d_JuleImporter> static__1c482c746_New(_1c4cd833e_CompileInfo);
inline jule::Slice<jule::Ptr<_1c4aeeb28_ImportInfo>> _1a9965426_AllPackages(_1a9a21e2d_JuleImporter*);
inline void _1a9980d8c_SetModPath(_1a9a21e2d_JuleImporter*, jule::Str);
inline jule::Str _1a99a351e_GetModPath(_1a9a21e2d_JuleImporter*);
inline jule::Str _1a99b3089_ModById(_1a9a21e2d_JuleImporter*, jule::I32);
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1a9a174b7_GetImport(_1a9a21e2d_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log _1a9a41700_ImportPackage(_1a9a21e2d_JuleImporter*, jule::Str, jule::Bool);
inline void _1a9a485b4_Imported(_1a9a21e2d_JuleImporter*, jule::Ptr<_1c4aeeb28_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1c2220900_Log _1a9a50456_isPassBuildDirectives(_1a9a21e2d_JuleImporter*, jule::Ptr<_1c4a59b93_Ast>*);
struct _1a9a21e2d_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1c4aeeb28_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_1a9a21e2d_JuleImporter(void) = default;


};
struct _1c47ecbbc_OrderedDefines {
	jule::Slice<jule::Ptr<_1c4a86ebc_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1c4b2c837_Var>> _field_Globals;
	

	_1c47ecbbc_OrderedDefines(void) = default;


};
inline jule::Bool _1ad55dc96_isCommonOrdered(jule::Slice<jule::Ptr<_1c4a86ebc_Struct>>, jule::Ptr<_1c4a86ebc_Struct>);
inline jule::Bool _1ad563be1_isCommonOrdered(jule::Slice<jule::Ptr<_1c4b2c837_Var>>, jule::Ptr<_1c4b2c837_Var>);
inline void _1ad55a468_orderCommon(jule::Slice<jule::Ptr<_1c4a86ebc_Struct>>*);
inline void _1ad55bbb7_orderCommon(jule::Slice<jule::Ptr<_1c4b2c837_Var>>*);
inline void static__1a99d2152_orderStructures(jule::Slice<jule::Ptr<_1c4a86ebc_Struct>>*);
inline void static__1a99d4022_orderVars(jule::Slice<jule::Ptr<_1c4b2c837_Var>>*);
struct _1a9b2de5d_defineOrderer {
	

	_1a9b2de5d_defineOrderer(void) = default;

	inline bool operator==(_1a9b2de5d_defineOrderer _other) { return true; }

	inline bool operator!=(_1a9b2de5d_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1a9c191e1_liveTable {
	jule::Slice<jule::Ptr<_1c4b2c837_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1c4ab39ee_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1c4aab255_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1c4ac306e_Trait>> _field_traits;
	

	_1a9c191e1_liveTable(void) = default;


};
inline void _1a9c503c0_optimizeChild(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Ptr<_1c4ad13bd_Scope>*);
inline void _1a9c50667_optimizeBodyChildExceptional(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Ptr<_1c4ad13bd_Scope>*);
inline void _1a9c508ed_optimizeBodyChild(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Ptr<_1c4ad13bd_Scope>*);
inline void _1a9c50b73_optimizeExprModel(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Any*);
inline void _1a9c50d4e_eliminateFollowed(_1a9c4ede7_scopeDeadCode*);
inline void _1a9c510c4_pushGoto(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Ptr<_1c4ad3de8_GotoSt>);
inline void _1a9c51349_pushLabel(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Ptr<_1c4ad3b0c_Label>);
inline void _1a9c515be_optimizeRangeIter(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Ptr<_1c4ad306d_RangeIter>);
inline void _1a9c51844_optimizeWhileIter(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Ptr<_1c4ad2688_WhileIter>);
inline void _1a9c51ab9_optimizeInfIter(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Ptr<_1c4ad2215_InfIter>);
inline void _1a9c51d3e_optimizeConditional(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Ptr<_1c4ad1e29_Conditional>);
inline void _1a9c520b4_optimizeMatch(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Ptr<_1c4ad5119_Match>);
inline void _1a9c52339_optimizeAssign(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Ptr<_1c4ad4723_Assign>);
inline void _1a9c525ae_optimizeMultiAssign(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Ptr<_1c4ad4aca_MultiAssign>);
inline void _1a9c52834_optimizeStmt(jule::Ptr<_1a9c4ede7_scopeDeadCode>, jule::Any);
inline void _1a9c52a10_optimizeStmts(jule::Ptr<_1a9c4ede7_scopeDeadCode>);
struct _1a9c4ede7_scopeDeadCode {
	jule::Ptr<_1a9c4ede7_scopeDeadCode> _field_parent;
	jule::Ptr<_1c4ad13bd_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I32 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1c4ad3b0c_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1c4ad3de8_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_1a9c4ede7_scopeDeadCode(void) = default;

	inline bool operator==(_1a9c4ede7_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1a9c4ede7_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1a9c53d52_exprDeadCode static__1a9c5447e_new(jule::Ptr<_1a9c4ede7_scopeDeadCode>*);
inline void _1a9c54704_binary(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aab970_BinopExprModel>);
inline void _1a9c54979_unary(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aabb5c_UnaryExprModel>);
inline void _1a9c54bee_structureLit(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aac036_StructLitExprModel>);
inline void _1a9c54e74_allocStructure(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aac223_AllocStructLitExprModel>);
inline void _1a9c551e9_casting(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aac410_CastingExprModel>);
inline void _1a9c5546e_args(_1a9c53d52_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1a9c556e4_funcCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aac5ec_FnCallExprModel>);
inline void _1a9c55969_slice(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aac7d9_SliceExprModel>);
inline void _1a9c55bde_array(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aadc5d_ArrayExprModel>);
inline void _1a9c55e64_indexing(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aac9c6_IndexingExprModel>);
inline void _1a9c561d9_anonFunc(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aacbb3_AnonFnExprModel>);
inline void _1a9c5645e_mapExpr(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aad08c_MapExprModel>);
inline void _1a9c566d4_slicing(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aad279_SlicingExprModel>);
inline void _1a9c56959_traitSub(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aad466_TraitSubIdentExprModel>);
inline void _1a9c56bce_structureSub(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aad884_StructSubIdentExprModel>);
inline void _1a9c56e54_commonSub(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aae137_CommonSubIdentExprModel>);
inline void _1a9c571c9_tuple(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aae324_TupleExprModel>);
inline void _1a9c5744e_newCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aaeac7_BuiltinNewCallExprModel>);
inline void _1a9c576c4_outCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aae511_BuiltinOutCallExprModel>);
inline void _1a9c57949_outlnCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aae6ed_BuiltinOutlnCallExprModel>);
inline void _1a9c57bbe_panicCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aaecb4_BuiltinPanicCallExprModel>);
inline void _1a9c57e44_assertCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aaeea1_BuiltinAssertCallExprModel>);
inline void _1a9c581b9_errorCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4ab10a1_BuiltinErrorCallExprModel>);
inline void _1a9c5843e_makeCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4ab018d_BuiltinMakeCallExprModel>);
inline void _1a9c586b4_appendCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4ab037a_BuiltinAppendCallExprModel>);
inline void _1a9c58939_lenCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4ab0567_BuiltinLenCallExprModel>);
inline void _1a9c58bae_capCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4ab0754_BuiltinCapCallExprModel>);
inline void _1a9c58e34_cloneCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aae8da_BuiltinCloneCallExprModel>);
inline void _1a9c591a9_deleteCall(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4aad653_BuiltinDeleteCallExprModel>);
inline void _1a9c5942e_sizeof(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4ab128d_SizeofExprModel>);
inline void _1a9c596a4_alignof(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4ab147a_AlignofExprModel>);
inline void _1a9c59929_integratedToStr(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4ab1854_IntegratedToStrExprModel>);
inline void _1a9c59b9e_free(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4ab1c2d_FreeExprModel>);
inline void _1a9c59e24_backendEmit(_1a9c53d52_exprDeadCode*, jule::Ptr<_1c4ab1a41_BackendEmitExprModel>);
inline void _1a9c5a199_optimize(_1a9c53d52_exprDeadCode*, jule::Any*);
struct _1a9c53d52_exprDeadCode {
	jule::Ptr<_1a9c4ede7_scopeDeadCode> _field_s;
	

	_1a9c53d52_exprDeadCode(void) = default;

	inline bool operator==(_1a9c53d52_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1a9c53d52_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1c1e783a0_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1c25bc4e9_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	_1c1e783a0_StrCompExprModel(void) = default;

	inline bool operator==(_1c1e783a0_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1c1e783a0_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1c48999a0_StrAppendExprModel {
	jule::Any _field_Str = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1c48999a0_StrAppendExprModel(void) = default;

	inline bool operator==(_1c48999a0_StrAppendExprModel _other) {
		return 
			this->_field_Str == _other._field_Str &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c48999a0_StrAppendExprModel _other) { return !this->operator==(_other); }


};
struct _1c1deca1c_UnsafeBinopExprModel {
	jule::Ptr<_1c4aab970_BinopExprModel> _field_Node;
	

	_1c1deca1c_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1c1deca1c_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1c1deca1c_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1c48a5deb_UnsafeIndexingExprModel {
	jule::Ptr<_1c4aac9c6_IndexingExprModel> _field_Node;
	

	_1c48a5deb_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1c48a5deb_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1c48a5deb_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c1dc96db_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1c4aac7d9_SliceExprModel> _field_Elems;
	

	_1c1dc96db_PushToSliceExprModel(void) = default;

	inline bool operator==(_1c1dc96db_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1c1dc96db_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c1e2756e_MutSlicingExprModel {
	jule::Ptr<_2039861ab_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1c1e2756e_MutSlicingExprModel(void) = default;

	inline bool operator==(_1c1e2756e_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c1e2756e_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c1e0ec4e_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1c1e0ec4e_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1c1e0ec4e_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c1e0ec4e_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c485b1c0_scopeOptimizer> static__1c1dc9202_new(jule::Ptr<_1c4ad13bd_Scope>);
inline void _1c1dcb37a_setCurrentStmt(_1c485b1c0_scopeOptimizer*, jule::Any);
inline void _1c1dce9bb_optimizeData(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c45e6e17_Data>);
inline void _1c1ddc91e_optimizeVar(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4b2c837_Var>);
inline void _1c1e19781_optimizeConditional(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad1e29_Conditional>);
inline void _1c1e29076_buildDefaultConstatTrueCase(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad5b64_Case>, jule::I32*, jule::Ptr<_1c4ad5119_Match>*);
inline void _1c1e39691_optimizeMatch(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad5119_Match>);
inline void _1c1e4d012_optimizeRangeIter(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad306d_RangeIter>);
inline void _1c1e5b152_optimizeWhileIter(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad2688_WhileIter>);
inline jule::Bool _1c4881ea4_substr(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad4723_Assign>);
inline jule::Bool _1c48a7084_strInsert(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad4723_Assign>);
inline jule::Bool _1c498a992_strAppend(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad4723_Assign>);
inline jule::Bool _1c499c267_strAssign(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad4723_Assign>);
inline void _1c49b127b_optimizeAssign(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad4723_Assign>);
inline void _1c49c61d6_optimizeMultiAssign(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad4aca_MultiAssign>);
inline void _1c1e2775b_optimizeRet(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad658d_RetSt>);
inline void _1c1dcb4e0_optimizeStmt(_1c485b1c0_scopeOptimizer*, jule::Any);
inline void _1c1dd1616_optimizeChild(_1c485b1c0_scopeOptimizer*, jule::Ptr<_1c4ad13bd_Scope>);
inline void _1c1e1de17_optimize(_1c485b1c0_scopeOptimizer*);
struct _1c485b1c0_scopeOptimizer {
	jule::I32 _field_i = 0;
	jule::Ptr<_1c4ad13bd_Scope> _field_scope;
	

	_1c485b1c0_scopeOptimizer(void) = default;

	inline bool operator==(_1c485b1c0_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1c485b1c0_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1c1e1e434_optimize(jule::Any*);
inline jule::Bool _1c1e824ca_strCond(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aab970_BinopExprModel>);
inline void _1c1dcc29e_binary(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aab970_BinopExprModel>);
inline void _1c1e0498b_unary(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aabb5c_UnaryExprModel>);
inline void _1c1e12d84_structureLit(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aac036_StructLitExprModel>);
inline void _1c1e1dc2a_allocStructure(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aac223_AllocStructLitExprModel>);
inline void _1c1e24a44_casting(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aac410_CastingExprModel>);
inline void _1c1e29ede_args(_1c485b3ac_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1c495c8a9_scope(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4ad13bd_Scope>*);
inline void _1c1dc93de_funcCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aac5ec_FnCallExprModel>);
inline void _1c1dcac1a_slice(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aac7d9_SliceExprModel>);
inline void _1c1dd3c01_array(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aadc5d_ArrayExprModel>);
inline void _1c1e02bed_indexing(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aac9c6_IndexingExprModel>);
inline void _1c1e225be_anonFunc(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aacbb3_AnonFnExprModel>);
inline void _1c1e296a3_mapExpr(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aad08c_MapExprModel>);
inline void _1c1e94c29_slicing(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aad279_SlicingExprModel>);
inline void _1c486e579_traitSub(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aad466_TraitSubIdentExprModel>);
inline void _1c1e8aeea_structureSub(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aad884_StructSubIdentExprModel>);
inline void _1c49c3832_commonSub(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aae137_CommonSubIdentExprModel>);
inline void _1c49c4b96_tuple(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aae324_TupleExprModel>);
inline void _1c49d2753_newCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aaeac7_BuiltinNewCallExprModel>);
inline void _1c49dc8c3_outCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aae511_BuiltinOutCallExprModel>);
inline void _1c1e1aa6d_outlnCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aae6ed_BuiltinOutlnCallExprModel>);
inline void _1c1e5ae21_panicCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aaecb4_BuiltinPanicCallExprModel>);
inline void _1c1e52ed4_assertCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aaeea1_BuiltinAssertCallExprModel>);
inline void _1c1e85d2a_errorCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4ab10a1_BuiltinErrorCallExprModel>);
inline void _1c1e882c2_makeCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4ab018d_BuiltinMakeCallExprModel>);
inline void _1c1e9dbcd_appendCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4ab037a_BuiltinAppendCallExprModel>);
inline void _1c4c216ea_lenCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4ab0567_BuiltinLenCallExprModel>);
inline void _1c4c2182c_capCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4ab0754_BuiltinCapCallExprModel>);
inline void _1c4c2195e_cloneCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aae8da_BuiltinCloneCallExprModel>);
inline void _1c4c21a91_deleteCall(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4aad653_BuiltinDeleteCallExprModel>);
inline void _1c4c21bc3_sizeof(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4ab128d_SizeofExprModel>);
inline void _1c4c21d05_alignof(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4ab147a_AlignofExprModel>);
inline void _1c4c21e37_integratedToStr(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4ab1854_IntegratedToStrExprModel>);
inline void _1c4c22069_free(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4ab1c2d_FreeExprModel>);
inline void _1c4c2219b_backendEmit(_1c485b3ac_exprOptimizer*, jule::Ptr<_1c4ab1a41_BackendEmitExprModel>);
inline void _1c4c222cd_do(_1c485b3ac_exprOptimizer*);
struct _1c485b3ac_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_1c485b3ac_exprOptimizer(void) = default;

	inline bool operator==(_1c485b3ac_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1c485b3ac_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9b50db4_Optimizer> static__1a9b705ba_New(jule::Ptr<_1c481c00a_IR>*);
inline void _1a9b7da3a_optimizeGlobal(_1a9b50db4_Optimizer*, jule::Ptr<_1c4b2c837_Var>*);
inline void _1a9bacb02_optimizeFunction(_1a9b50db4_Optimizer*, jule::Ptr<_1c4ab22e4_Fn>*);
inline void _1a9bbc3d6_optimizeStruct(_1a9b50db4_Optimizer*, jule::Ptr<_1c4a86ebc_Struct>*);
inline void _1a9bc55dc_optimizeGlobals(_1a9b50db4_Optimizer*, jule::Ptr<_1c4b02a82_Package>*);
inline void _1a9bd5333_optimizeFunctions(_1a9b50db4_Optimizer*, jule::Ptr<_1c4b02a82_Package>*);
inline void _1a9bd6a71_optimizeStructs(_1a9b50db4_Optimizer*, jule::Ptr<_1c4b02a82_Package>*);
inline void _1a9b820d2_optimizePackage(_1a9b50db4_Optimizer*, jule::Ptr<_1c4b02a82_Package>*);
inline void _1a9bb093a_Optimize(_1a9b50db4_Optimizer*);
struct _1a9b50db4_Optimizer {
	jule::Ptr<_1c481c00a_IR> _field_ir;
	

	_1a9b50db4_Optimizer(void) = default;

	inline bool operator==(_1a9b50db4_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a9b50db4_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1a9c6d157_Reset(void);
inline void static__1a9c6e400_Print(jule::Str, jule::Str);
struct _1a9c6e213_AnsiEscape {
	

	_1a9c6e213_AnsiEscape(void) = default;

	inline bool operator==(_1a9c6e213_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a9c6e213_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1a9c70984_LogFlat(_1c2220900_Log*);
inline void static__1a9c70b93_LogError(_1c2220900_Log*);
inline void static__1a9c70da2_Log(_1c2220900_Log*);
inline void static__1a9c710b1_PrintLogs(jule::Slice<_1c2220900_Log>*);
struct _1a9c706ed_Logger {
	

	_1a9c706ed_Logger(void) = default;

	inline bool operator==(_1a9c706ed_Logger _other) { return true; }

	inline bool operator!=(_1a9c706ed_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1ab265351_Unix(_1ab264e99_AbsTime*);
struct _1ab264e99_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_1ab264e99_AbsTime(void) = default;

	inline bool operator==(_1ab264e99_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1ab264e99_AbsTime _other) { return !this->operator==(_other); }


};
inline _1ab26563c_Time static__1ab2659d3_Unix(jule::U64);
inline _1ab26563c_Time static__1ab265bd1_Now(void);
inline jule::U64 _1ab266132_Unix(_1ab26563c_Time*);
inline jule::U64 _1ab266396_Day(_1ab26563c_Time*);
inline jule::U64 _1ab26660a_Month(_1ab26563c_Time*);
inline jule::U64 _1ab26686e_Year(_1ab26563c_Time*);
inline jule::U64 _1ab266ad3_Second(_1ab26563c_Time*);
inline jule::U64 _1ab266d47_Minute(_1ab26563c_Time*);
inline jule::U64 _1ab2670ab_Hour(_1ab26563c_Time*);
inline _1ab264e99_AbsTime _1ab267320_Abs(_1ab26563c_Time*);
struct _1ab26563c_Time {
	jule::U64 _field_sec = 0;
	

	_1ab26563c_Time(void) = default;

	inline bool operator==(_1ab26563c_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1ab26563c_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab1aea4d_scopeCoder> static__1ab1b018b_new(jule::Ptr<_1ab26c644_ObjectCoder>*);
inline void _1ad7dc5da_iterHead(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad306d_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1ab1b07c9_rangeIndexIter(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad306d_RangeIter>*);
inline void _1ab1b0a4e_rangeHashmapIter(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad306d_RangeIter>*);
inline void _1ab1b0cc4_ifCase(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad17b9_If>);
inline void _1ab1b1049_conditional(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad1e29_Conditional>);
inline void _1ab1b12be_infIter(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad2215_InfIter>);
inline void _1ab1b1544_whileIter(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad2688_WhileIter>);
inline void _1ab1b17b9_rangeIter(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad306d_RangeIter>);
inline void _1ab1b1a3e_cont(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad3469_ContSt>);
inline void _1ab1b1cb4_label(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad3b0c_Label>);
inline void _1ab1b2039_gotoSt(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad3de8_GotoSt>);
inline void _1ab1b22ae_postfix(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad42a0_Postfix>);
inline void _1ab1b2534_assign(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad4723_Assign>);
inline void _1ab1b27a9_mapLookupAssign(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad4aca_MultiAssign>*);
inline void _1ab1b2a2e_multiAssignTup(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad4aca_MultiAssign>*);
inline void _1ab1b2ca4_multiAssignFn(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad4aca_MultiAssign>*);
inline void _1ab1b3029_multiAssign(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad4aca_MultiAssign>);
inline jule::Fn<void(void)> _1ab1b3337_matchExpr(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad5119_Match>);
inline void _1ab1b3656_case(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad5119_Match>, jule::Ptr<_1c4ad5b64_Case>);
inline void _1ab1b38cb_matchSt(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad5119_Match>);
inline void _1ab1b3b51_fallSt(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad6219_FallSt>);
inline void _1ab1b3dc6_breakSt(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad3821_BreakSt>);
inline void _1ab1b414b_setResult(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad658d_RetSt>);
inline void _1ab1b43c1_retSt(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad658d_RetSt>);
inline void _1ab1b4646_var(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4b2c837_Var>);
inline void _1ab1b48bb_strAppend(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c48999a0_StrAppendExprModel>);
inline void _1ab1b4b41_st(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Any);
inline void _1ab1b4db6_scopeStmts(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad13bd_Scope>*);
inline void _1ab1b513b_scope(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ad13bd_Scope>);
inline void _1ab1b53b1_funcScope(jule::Ptr<_1ab1aea4d_scopeCoder>, jule::Ptr<_1c4ab39ee_FnIns>);
struct _1ab1aea4d_scopeCoder {
	jule::Ptr<_1ab26c644_ObjectCoder> _field_oc;
	

	_1ab1aea4d_scopeCoder(void) = default;

	inline bool operator==(_1ab1aea4d_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ab1aea4d_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab1b7e96_exprCoder> static__1ab1b8392_new(jule::Ptr<_1ab26c644_ObjectCoder>*);
inline void _1ab1b8617_string(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c25bc4e9_Const>*);
inline void _1ab1b888c_boolean(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Bool);
inline void _1ab1b8a68_nilLit(jule::Ptr<_1ab1b7e96_exprCoder>);
inline jule::Bool _1ab1b8d76_ftoaSpecialCases(jule::Ptr<_1ab1b7e96_exprCoder>, jule::F64*);
inline void _1ab1b90eb_float32(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c25bc4e9_Const>*);
inline void _1ab1b9371_float64(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c25bc4e9_Const>*);
inline void _1ab1b95e6_constant(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c25bc4e9_Const>);
inline void _1ab1b99ae_divByZeroBinary(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_2039861ab_Token>*, jule::Ptr<_1c4aab783_OperandExprModel>*, jule::Ptr<_1c4aab783_OperandExprModel>*);
inline void _1ab1b9c34_unsafeBinary(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aab970_BinopExprModel>);
inline void _1ab1b9ea9_binary(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aab970_BinopExprModel>);
inline void _1ab1ba22e_var(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4b2c837_Var>);
inline void _1ab1ba4a4_structureIns(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aab255_StructIns>);
inline void _1ab1ba729_unary(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aabb5c_UnaryExprModel>);
inline void _1ab1ba99e_structureLit(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aac036_StructLitExprModel>);
inline void _1ab1bac24_allocStructure(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aac223_AllocStructLitExprModel>);
inline void _1ab1bae99_possibleRefExpr(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Any);
inline void _1ab1bb362_castTraitFromTrait(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aac410_CastingExprModel>*, jule::Ptr<_1c4ac306e_Trait>, jule::Ptr<_1c4ac306e_Trait>);
inline void _1ab1bb5d7_casting(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aac410_CastingExprModel>);
inline void _1ab1bb85c_models(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Slice<jule::Any>);
inline void _1ab1bbad2_args(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aac5ec_FnCallExprModel>*);
inline void _1ab1bbd57_modelForCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Any);
inline void _1ab1bc0cc_pushCallInf(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aac5ec_FnCallExprModel>*);
inline jule::Bool _1ab1bc3da_isWrapped(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aac5ec_FnCallExprModel>*);
inline void _1ab1bc660_pureFuncCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aac5ec_FnCallExprModel>*);
inline void _1ab1bc8d5_coFuncCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aac5ec_FnCallExprModel>*);
inline void _1ab1bcc04_writeUseExpr(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab39ee_FnIns>*, jule::Ptr<_1c45e6e17_Data>);
inline void _1ab1bce79_funcCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aac5ec_FnCallExprModel>);
inline void _1ab1bd1ee_slice(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aac7d9_SliceExprModel>);
inline void _1ab1bd474_indexing(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aac9c6_IndexingExprModel>);
inline void _1ab1bd6e9_unsafeIndexing(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c48a5deb_UnsafeIndexingExprModel>);
inline void _1ab1bd96e_anonFunc(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aacbb3_AnonFnExprModel>);
inline void _1ab1bdbe4_mapExpr(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aad08c_MapExprModel>);
inline void _1ab1bde69_slicing(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aad279_SlicingExprModel>);
inline void _1ab1be1de_traitSub(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aad466_TraitSubIdentExprModel>);
inline void _1ab1be464_structureSub(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aad884_StructSubIdentExprModel>);
inline void _1ab1be6d9_commonIdent(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aade4a_CommonIdentExprModel>);
inline void _1ab1be95e_commonSub(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aae137_CommonSubIdentExprModel>);
inline void _1ab1bebd4_array(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aadc5d_ArrayExprModel>);
inline void _1ab1bee59_funcInsCommon(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab39ee_FnIns>);
inline void _1ab1c01ce_funcIns(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab39ee_FnIns>);
inline void _1ab1c0454_tuple(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aae324_TupleExprModel>);
inline void _1ab1c06c9_newCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aaeac7_BuiltinNewCallExprModel>);
inline void _1ab1c094e_outCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aae511_BuiltinOutCallExprModel>);
inline void _1ab1c0bc4_outlnCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aae6ed_BuiltinOutlnCallExprModel>);
inline void _1ab1c0e49_panicCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aaecb4_BuiltinPanicCallExprModel>);
inline void _1ab1c11be_assertCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aaeea1_BuiltinAssertCallExprModel>);
inline void _1ab1c1444_errorCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab10a1_BuiltinErrorCallExprModel>);
inline void _1ab1c16b9_copyCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab0db4_BuiltinCopyCallExprModel>);
inline void _1ab1c193e_lenCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab0567_BuiltinLenCallExprModel>);
inline void _1ab1c1bb4_capCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab0754_BuiltinCapCallExprModel>);
inline void _1ab1c1e39_deleteCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aad653_BuiltinDeleteCallExprModel>);
inline void _1ab1c21ae_makeCallSlice(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab018d_BuiltinMakeCallExprModel>*);
inline void _1ab1c2434_makeCallStr(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab018d_BuiltinMakeCallExprModel>*);
inline void _1ab1c26a9_makeCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab018d_BuiltinMakeCallExprModel>);
inline void _1ab1c292e_pushToSlice(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c1dc96db_PushToSliceExprModel>);
inline void _1ab1c2ba4_appendCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab037a_BuiltinAppendCallExprModel>);
inline void _1ab1c2e29_cloneCall(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aae8da_BuiltinCloneCallExprModel>);
inline void _1ab1c319e_sizeof(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab128d_SizeofExprModel>);
inline void _1ab1c3424_alignof(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab147a_AlignofExprModel>);
inline jule::Str _1ab1c3732_runeLit(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab1667_RuneExprModel>);
inline void _1ab1c39a7_structureStatic(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4aada71_StructStaticIdentExprModel>);
inline void _1ab1c3c2c_integratedToStr(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab1854_IntegratedToStrExprModel>);
inline void _1ab1c3ea2_backendEmit(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab1a41_BackendEmitExprModel>);
inline void _1ab1c4227_free(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4ab1c2d_FreeExprModel>);
inline void _1ab1c449c_mutSlicing(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c1e2756e_MutSlicingExprModel>);
inline void _1ab1c4722_strInsertBegin(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c1e0ec4e_StrInsertBeginExprModel>);
inline void _1ab1c4997_strComp(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c1e783a0_StrCompExprModel>);
inline void _1ab1c4c1c_model(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Any);
inline void _1ab1c4e92_initExpr(jule::Ptr<_1ab1b7e96_exprCoder>, jule::Ptr<_1c4621d32_TypeKind>);
struct _1ab1b7e96_exprCoder {
	jule::Ptr<_1ab26c644_ObjectCoder> _field_oc;
	

	_1ab1b7e96_exprCoder(void) = default;

	inline bool operator==(_1ab1b7e96_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ab1b7e96_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab1c7736_deriveCoder> static__1ab1c7b21_new(jule::Ptr<_1ab26c644_ObjectCoder>);
inline jule::Str _1ab1c7e2e_cloneFuncDecl(_1ab1c7736_deriveCoder*, jule::Ptr<_1c4a86ebc_Struct>*);
inline jule::Str _1ab1c823c_cloneFuncDef(_1ab1c7736_deriveCoder*, jule::Ptr<_1c4a86ebc_Struct>*);
struct _1ab1c7736_deriveCoder {
	jule::Ptr<_1ab26c644_ObjectCoder> _field_oc;
	

	_1ab1c7736_deriveCoder(void) = default;

	inline bool operator==(_1ab1c7736_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ab1c7736_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab1c911c_TestCoder> static__1ab1c9590_New(jule::Ptr<_1ab26c644_ObjectCoder>*);
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1ab1c9804_findTestingPackage(jule::Ptr<_1ab1c911c_TestCoder>);
inline void _1ab1c9a79_appendTest(jule::Ptr<_1ab1c911c_TestCoder>, jule::Ptr<_1c4ab39ee_FnIns>);
inline void _1ab1c9cee_appendPackageTests(jule::Ptr<_1ab1c911c_TestCoder>, jule::Ptr<_1c4b02a82_Package>*);
inline jule::Bool _1ab1ca063_readyTestingPackage(jule::Ptr<_1ab1c911c_TestCoder>);
inline void _1ab1ca23e_callTmReset(jule::Ptr<_1ab1c911c_TestCoder>);
inline void _1ab1ca41a_callTmFailed(jule::Ptr<_1ab1c911c_TestCoder>);
inline void _1ab1ca5e6_callTmSkipped(jule::Ptr<_1ab1c911c_TestCoder>);
inline void _1ab1ca7c2_Serialize(jule::Ptr<_1ab1c911c_TestCoder>);
struct _1ab1c911c_TestCoder {
	jule::Ptr<_1c4aab255_StructIns> _field_t;
	jule::Ptr<_1c4ab22e4_Fn> _field_tmReset;
	jule::Ptr<_1c4ab22e4_Fn> _field_tmFailed;
	jule::Ptr<_1c4ab22e4_Fn> _field_tmSkipped;
	jule::Ptr<_1ab26c644_ObjectCoder> _field_oc;
	

	_1ab1c911c_TestCoder(void) = default;

	inline bool operator==(_1ab1c911c_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ab1c911c_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1ab1cbc35_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1ab1cc120_toLocal(jule::I32, jule::I32, jule::Str*);
inline jule::Str static__1ab1cc3b7_func(jule::Ptr<_1c4ab22e4_Fn>*);
inline jule::Str static__1ab1cc65e_funcIns(jule::Ptr<_1c4ab39ee_FnIns>*);
inline jule::Str static__1ab1cc906_traitDecl(jule::Ptr<_1c4ac306e_Trait>);
inline jule::Str static__1ab1ccb9d_param(jule::Ptr<_1c4ab2107_Param>*);
inline jule::Str static__1ab1cce45_structure(jule::Ptr<_1c4a86ebc_Struct>*);
inline jule::Str static__1ab1cd1dc_structureIns(jule::Ptr<_1c4aab255_StructIns>*);
inline jule::Str static__1ab1cd484_field(jule::Ptr<_1c4a7e877_Field>*);
inline jule::Str static__1ab1cd72b_var(jule::Ptr<_1c4b2c837_Var>);
inline jule::Str static__1ab1cd9c3_iterBegin(jule::Uintptr);
inline jule::Str static__1ab1cdc6a_iterEnd(jule::Uintptr);
inline jule::Str static__1ab1ce012_iterNext(jule::Uintptr);
inline jule::Str static__1ab1ce2a9_label(jule::Str*);
inline jule::Str static__1ab1ce551_matchEnd(jule::Uintptr);
inline jule::Str static__1ab1ce7e8_caseBegin(jule::Uintptr);
struct _1ab1cb65d_identCoder {
	

	_1ab1cb65d_identCoder(void) = default;

	inline bool operator==(_1ab1cb65d_identCoder _other) { return true; }

	inline bool operator!=(_1ab1cb65d_identCoder _other) { return !this->operator==(_other); }


};
struct _1ab20e00e_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_1ab20e00e_SerializationInfo(void) = default;

	inline bool operator==(_1ab20e00e_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1ab20e00e_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1ab1d4523_traitHash {
	jule::Ptr<_1c4ac306e_Trait> _field_t;
	jule::Ptr<_1c4aab255_StructIns> _field_s;
	jule::I32 _field_i = 0;
	

	_1ab1d4523_traitHash(void) = default;

	inline bool operator==(_1ab1d4523_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ab1d4523_traitHash _other) { return !this->operator==(_other); }


};
struct _1ab26c457_traitCast {
	jule::Ptr<_1c4ac306e_Trait> _field_t1;
	jule::Ptr<_1c4ac306e_Trait> _field_t2;
	

	_1ab26c457_traitCast(void) = default;

	inline bool operator==(_1ab26c457_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1ab26c457_traitCast _other) { return !this->operator==(_other); }


};
inline jule::Str _1ab275e11_Str(_1ab275b58_customType*);
inline jule::Bool _1ab27621e_Equal(jule::Ptr<_1ab275b58_customType>, jule::Ptr<_1c4621d32_TypeKind>);
struct _1ab275b58_customType {
	jule::Str _field_kind;
	

	_1ab275b58_customType(void) = default;

	inline bool operator==(_1ab275b58_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ab275b58_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab2765c6_typeCoder> static__1ab276b15_new(jule::Ptr<_1ab26c644_ObjectCoder>*);
inline jule::Str _1ab276e23_toType(_1ab2765c6_typeCoder*, jule::Str);
inline jule::Str _1ab277231_prim(_1ab2765c6_typeCoder*, jule::Ptr<_1c4b6197b_Prim>);
inline jule::Str _1ab27753e_tuple(_1ab2765c6_typeCoder*, jule::Ptr<_1c4b66673_Tuple>);
inline jule::Str _1ab27784c_asSptr(_1ab2765c6_typeCoder*, jule::Str);
inline jule::Str _1ab277b5a_asPtr(_1ab2765c6_typeCoder*, jule::Str);
inline jule::Str _1ab277e68_sptr(_1ab2765c6_typeCoder*, jule::Ptr<_1c4b65210_Sptr>);
inline jule::Str _1ab278276_ptr(_1ab2765c6_typeCoder*, jule::Ptr<_1c4b686ec_Ptr>);
inline jule::Str _1ab278584_enumDecl(_1ab2765c6_typeCoder*, jule::Ptr<_1c4ac5802_Enum>);
inline jule::Str _1ab278892_typeEnumDecl(_1ab2765c6_typeCoder*, jule::Ptr<_1c4ac6dec_TypeEnum>);
inline jule::Str _1ab278ba0_asSlice(_1ab2765c6_typeCoder*, jule::Ptr<_1c4621d32_TypeKind>);
inline jule::Str _1ab278ead_slice(_1ab2765c6_typeCoder*, jule::Ptr<_1c4b65b6c_Slc>);
inline jule::Str _1ab2792bb_mapType(_1ab2765c6_typeCoder*, jule::Ptr<_1c4b6719b_Map>);
inline jule::Str _1ab2795c9_traitIdent(_1ab2765c6_typeCoder*, jule::Str);
inline jule::Str _1ab2798d7_traitDecl(_1ab2765c6_typeCoder*, jule::Ptr<_1c4ac306e_Trait>);
inline jule::Str _1ab279be5_structure(_1ab2765c6_typeCoder*, jule::Ptr<_1c4a86ebc_Struct>);
inline jule::Str _1ab27a003_structureIns(_1ab2765c6_typeCoder*, jule::Ptr<_1c4aab255_StructIns>);
inline jule::Str _1ab27a311_array(_1ab2765c6_typeCoder*, jule::Ptr<_1c4b67c90_Arr>);
inline jule::Str _1ab27a92c_paramIns(_1ab2765c6_typeCoder*, jule::Ptr<_1c4ab2b30_ParamIns>*);
inline void _1ab27b059_funcInsResult(_1ab2765c6_typeCoder*, jule::Str*, jule::Ptr<_1c4ab39ee_FnIns>*);
inline jule::Str _1ab27b367_anonFunc(_1ab2765c6_typeCoder*, jule::Ptr<_1c4ab39ee_FnIns>);
inline jule::Str _1ab27b675_func(_1ab2765c6_typeCoder*, jule::Ptr<_1c4ab39ee_FnIns>);
inline jule::Str _1ab27b983_kind(_1ab2765c6_typeCoder*, jule::Ptr<_1c4621d32_TypeKind>);
struct _1ab2765c6_typeCoder {
	jule::Ptr<_1ab26c644_ObjectCoder> _field_oc;
	jule::Ptr<_1ab27e18e_resultCoder> _field_rc;
	

	_1ab2765c6_typeCoder(void) = default;

	inline bool operator==(_1ab2765c6_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1ab2765c6_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab27e18e_resultCoder> static__1ab27e69a_new(jule::Ptr<_1ab2765c6_typeCoder>*);
inline void _1ab27e9b9_ptr(_1ab27e18e_resultCoder*, jule::Str*, jule::Ptr<_1c4b686ec_Ptr>);
inline void _1ab27ecd8_sptr(_1ab27e18e_resultCoder*, jule::Str*, jule::Ptr<_1c4b65210_Sptr>);
inline void _1ab280107_mapType(_1ab27e18e_resultCoder*, jule::Str*, jule::Ptr<_1c4b6719b_Map>);
inline void _1ab280426_slice(_1ab27e18e_resultCoder*, jule::Str*, jule::Ptr<_1c4b65b6c_Slc>);
inline void _1ab280745_arr(_1ab27e18e_resultCoder*, jule::Str*, jule::Ptr<_1c4b67c90_Arr>);
inline void _1ab280a64_func(_1ab27e18e_resultCoder*, jule::Str*, jule::Ptr<_1c4ab39ee_FnIns>);
inline void _1ab280d83_tup(_1ab27e18e_resultCoder*, jule::Str*, jule::Ptr<_1c4b66673_Tuple>);
inline void _1ab2811a2_codeMut(_1ab27e18e_resultCoder*, jule::Str*, jule::Ptr<_1c4621d32_TypeKind>*);
inline void _1ab2814c1_codeMut1(_1ab27e18e_resultCoder*, jule::Str*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Str _1ab28179b_code(_1ab27e18e_resultCoder*, jule::Ptr<_1c4621d32_TypeKind>*);
struct _1ab27e18e_resultCoder {
	jule::Ptr<_1ab2765c6_typeCoder> _field_tc;
	

	_1ab27e18e_resultCoder(void) = default;

	inline bool operator==(_1ab27e18e_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1ab27e18e_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1adb93ed0_Name(_1adb93be4_Flag*);
inline jule::Str _1adb94112_What(_1adb93be4_Flag*);
inline void _1adb94244_Reset(_1adb93be4_Flag*);
inline jule::I32 _1adb94387_Short(_1adb93be4_Flag*);
struct _1adb93be4_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_1adb93be4_Flag(void) = default;

	inline bool operator==(_1adb93be4_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1adb93be4_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1adb973e0_Name(_1adb97852_Flag*);
inline jule::Str _1adb97b3d_What(_1adb97852_Flag*);
inline void _1adb97c70_Reset(_1adb97852_Flag*);
inline jule::I32 _1adb97da2_Short(_1adb97852_Flag*);
struct _1adb97852_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_1adb97852_Flag(void) = default;

	inline bool operator==(_1adb97852_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1adb97852_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1adb9aba7_Name(_1adb9b119_Flag*);
inline jule::Str _1adb9b405_What(_1adb9b119_Flag*);
inline void _1adb9b537_Reset(_1adb9b119_Flag*);
inline jule::I32 _1adb9b669_Short(_1adb9b119_Flag*);
struct _1adb9b119_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_1adb9b119_Flag(void) = default;

	inline bool operator==(_1adb9b119_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1adb9b119_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1adb9e4b3_Name(_1adb9e925_Flag*);
inline jule::Str _1adb9ec11_What(_1adb9e925_Flag*);
inline void _1adb9ed43_Reset(_1adb9e925_Flag*);
inline jule::I32 _1adb9ee75_Short(_1adb9e925_Flag*);
struct _1adb9e925_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_1adb9e925_Flag(void) = default;

	inline bool operator==(_1adb9e925_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1adb9e925_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1adba2c7a_Name(_1adba31dc_Flag*);
inline jule::Str _1adba34c8_What(_1adba31dc_Flag*);
inline void _1adba360a_Reset(_1adba31dc_Flag*);
inline jule::I32 _1adba373c_Short(_1adba31dc_Flag*);
struct _1adba31dc_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_1adba31dc_Flag(void) = default;

	inline bool operator==(_1adba31dc_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1adba31dc_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab2abd37_FlagSet> static__1ab2ac123_New(void);
inline jule::Trait<_1ab2aa929_CommonFlag> _1ab2ac5a7_FindFlag(_1ab2abd37_FlagSet*, jule::Str);
inline jule::Trait<_1ab2aa929_CommonFlag> _1ab2ac8b5_FindFlagShort(_1ab2abd37_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1ab2aa929_CommonFlag>> _1ab2acb29_Flags(_1ab2abd37_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1ab2ace37_Parse(_1ab2abd37_FlagSet*, jule::Slice<jule::Str>);
inline void _1ab2ad113_Reset(_1ab2abd37_FlagSet*);
inline jule::Ptr<_1adba31dc_Flag> _1adc25baa_addFlagCommon(_1ab2abd37_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1adb9e925_Flag> _1adc2e4ee_addFlagCommon(_1ab2abd37_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1adc23b42_AddVar(_1ab2abd37_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1adc2c4b9_AddVar(_1ab2abd37_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1ab2abd37_FlagSet {
	jule::Slice<jule::Trait<_1ab2aa929_CommonFlag>> _field_flags;
	

	_1ab2abd37_FlagSet(void) = default;


};
inline __jule_tuple_i64__jule_tuple_bool _1adbb650d_parseInteger(_1ab2ae510_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>);
inline __jule_tuple_u64__jule_tuple_bool _1adbbe5d2_parseInteger(_1ab2ae510_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>);
inline jule::Str _1ab2aed07_getData(_1ab2ae510_argParser*);
inline jule::VoidExceptional _1ab2b0049_processFlag(_1ab2ae510_argParser*, jule::Trait<_1ab2aa929_CommonFlag>*);
inline jule::VoidExceptional _1ab2b02be_singleDash(_1ab2ae510_argParser*, jule::Str*);
inline jule::VoidExceptional _1ab2b0544_doubleDash(_1ab2ae510_argParser*, jule::Str*);
inline jule::VoidExceptional _1ab2b0720_tryArg(_1ab2ae510_argParser*);
inline jule::VoidExceptional _1ab2b08eb_parse(_1ab2ae510_argParser*);
struct _1ab2ae510_argParser {
	_1ab2abd37_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i = 0;
	

	_1ab2ae510_argParser(void) = default;


};
inline jule::Ptr<_1ab26c644_ObjectCoder> static__1ab1d3a0b_New(jule::Ptr<_1c481c00a_IR>*, _1ab20e00e_SerializationInfo);
inline void _1ab203de4_write(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Str);
inline void _1ab2430ba_addIndent(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab2435d7_doneIndent(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab246b3a_indent(jule::Ptr<_1ab26c644_ObjectCoder>);
inline jule::I32 _1ab24cb1e_findAnyType(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::I32 _1ab2084e2_pushAnyType(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4621d32_TypeKind>*);
inline void _1ab207722_pushResultIns(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ab39ee_FnIns>*);
inline void _1ab245584_pushResult(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ab22e4_Fn>*);
inline jule::I32 _1ab1d427b_findTypeOffsetS(_1ab26c644_ObjectCoder*, jule::Ptr<_1c4ac306e_Trait>, jule::Ptr<_1c4aab255_StructIns>);
inline jule::I32 _1ab26c831_findTypeOffset(_1ab26c644_ObjectCoder*, jule::Ptr<_1c4ac306e_Trait>, jule::Ptr<_1c4621d32_TypeKind>);
inline void _1ab26c963_pushAndWriteMaskMapper(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ac306e_Trait>, jule::Ptr<_1c4ac306e_Trait>);
inline void _1ab26ca95_locInfo(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_2039861ab_Token>*);
inline void _1ab26cbc7_head(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab26cd09_links(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab26ce3b_prepareStructure(_1ab26c644_ObjectCoder*, jule::Ptr<_1c4a86ebc_Struct>*);
inline void _1ab26d06d_prepareStructures(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab26d1a0_iterPackages(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Fn<void(jule::Ptr<_1c4b02a82_Package>*)>);
inline void _1ab26d2d2_buildTraitMap(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab26d414_traitDecls(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab26d546_structurePlainDecl(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4a86ebc_Struct>*);
inline void _1ab26d678_structurePlainDecls(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab26d7aa_fieldDecl(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4aab068_FieldIns>*);
inline void _1ab26d8dc_structureDestructor(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4aab255_StructIns>*);
inline void _1ab26da1e_structureDeriveDefsDecls(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4aab255_StructIns>*);
inline void _1ab26db51_structureOperatorEq(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Str*, jule::Ptr<_1c4aab255_StructIns>*);
inline void _1ab26dc83_structureOperatorNotEq(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Str*, jule::Ptr<_1c4aab255_StructIns>*);
inline void _1ab26ddb5_structureOperator(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Str*, jule::Ptr<_1c4ab39ee_FnIns>*, jule::Str);
inline void _1ab26dee7_structureOperators(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4aab255_StructIns>*);
inline void _1ab26e129_structureInsDecl(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4aab255_StructIns>*);
inline void _1ab26e25b_structureDecl(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4a86ebc_Struct>*);
inline void _1ab26e38d_structureDecls(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab26e4c0_paramsDecls(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>>*);
inline void _1ab26e602_funcHead(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ab39ee_FnIns>*, jule::Bool);
inline void _1ab26e734_funcDeclIns(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ab39ee_FnIns>*, jule::Bool);
inline void _1ab26e866_funcDecl(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ab22e4_Fn>*, jule::Bool);
inline void _1ab26e998_funcDeclTrait(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ac306e_Trait>*, jule::Ptr<_1c4ab22e4_Fn>*, jule::Bool);
inline void _1ab26eaca_funcDecls(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab26ec0c_traitDataTypeMethods(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ac306e_Trait>*, jule::Ptr<_1c4ac306e_Trait>*);
inline void _1ab26ed3e_traitDataTypes(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab26eee8_paramIns(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ab2b30_ParamIns>*);
inline void _1ab27026d_paramsIns(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>>*);
inline void _1ab27058c_varInitExpr(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4b2c837_Var>*, jule::Fn<void(void)>);
inline void _1ab270812_var(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4b2c837_Var>);
inline void _1ab270a87_funcIns(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ab39ee_FnIns>*);
inline void _1ab270d0c_func(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ab22e4_Fn>*);
inline void _1ab27112b_funcTrait(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1ab1d4523_traitHash>*, jule::Ptr<_1c4ab22e4_Fn>*);
inline void _1ab27144a_traitWrapper(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ab22e4_Fn>*, jule::Ptr<_1ab1d4523_traitHash>*);
inline void _1ab271626_traitWrappers(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab271945_traitDataMethods(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4ac306e_Trait>*, jule::Ptr<_1ab1d4523_traitHash>*);
inline void _1ab271c64_traitData(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1ab1d4523_traitHash>*, jule::Ptr<_1c4ac306e_Trait>*);
inline void _1ab271e40_traitDatas(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab27211b_globals(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab2722e7_decls(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab27256c_structureMethods(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4aab255_StructIns>*);
inline void _1ab2727e2_structureDeriveDefs(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4aab255_StructIns>*);
inline void _1ab272a67_structureOstream(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4aab255_StructIns>*);
inline void _1ab272cdc_structureIns(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4aab255_StructIns>*);
inline void _1ab273062_structure(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4a86ebc_Struct>*);
inline void _1ab27323d_structures(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab273419_funcs(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab27368e_pushInit(jule::Ptr<_1ab26c644_ObjectCoder>, jule::Ptr<_1c4b02a82_Package>*);
inline void _1ab27386a_initCaller(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab273a46_end(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab273c22_serializeHead(jule::Ptr<_1ab26c644_ObjectCoder>);
inline void _1ab273ded_Serialize(jule::Ptr<_1ab26c644_ObjectCoder>);
struct _1ab26c644_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_1c481c00a_IR> _field_ir;
	_1ab20e00e_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1ab1d4523_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1c4621d32_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1ab26c457_traitCast> _field_traitCastMap;
	jule::Ptr<_1ab1b7e96_exprCoder> _field_ec;
	jule::Ptr<_1ab1aea4d_scopeCoder> _field_sc;
	jule::Ptr<_1ab2765c6_typeCoder> _field_tc;
	jule::Ptr<_1ab1c7736_deriveCoder> _field_dc;
	jule::I32 _field_headPos = 0;
	jule::I32 _field_declPos = 0;
	

	_1ab26c644_ObjectCoder(void) = default;


};
inline jule::Ptr<_1a9c194dd_ObjectDeadCode> static__1a9c199b6_new(jule::Ptr<_1c481c00a_IR>*);
inline jule::Bool _1ad58aa92_isLive(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c4ac306e_Trait>*);
inline jule::Bool _1ad5907cd_isLive(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c4ab39ee_FnIns>*);
inline jule::Bool _1ad598385_isLive(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c4aab255_StructIns>*);
inline jule::Bool _1ad59dd6e_isLive(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c4b2c837_Var>*);
inline void _1ad58ade4_pushLive(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c4ac306e_Trait>);
inline void _1ad5913c2_pushLive(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c4ab39ee_FnIns>);
inline void _1ad597670_pushLive(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c4aab255_StructIns>);
inline void _1ad59e1c1_pushLive(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c4b2c837_Var>);
inline void _1a9c4bb91_setReferencesAsLive(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c4ab6958_ReferenceStack>*);
inline void _1a9c4be16_inits(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c4b02a82_Package>*);
inline void _1a9c4c18b_collectLivePackage(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c4b02a82_Package>*);
inline void _1a9c4c367_collectLive(jule::Ptr<_1a9c194dd_ObjectDeadCode>);
inline void _1a9c4c5dc_removeDeadGlobals(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c4b2c837_Var>>*);
inline void _1a9c4c862_removeDeadFns(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c4ab22e4_Fn>>*);
inline void _1a9c4cad7_removeDeadStructs(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c4a86ebc_Struct>>*);
inline void _1a9c4cd5c_removeDeadTraits(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c4ac306e_Trait>>*);
inline void _1a9c4d0d2_removeDeadsFile(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c45e20dd_SymbolTable>*);
inline void _1a9c4d357_removeDeadsPackage(jule::Ptr<_1a9c194dd_ObjectDeadCode>, jule::Ptr<_1c4b02a82_Package>*);
inline void _1a9c4d533_removeDeads(jule::Ptr<_1a9c194dd_ObjectDeadCode>);
inline void _1a9c4d70e_elimanate(jule::Ptr<_1a9c194dd_ObjectDeadCode>);
struct _1a9c194dd_ObjectDeadCode {
	_1a9c191e1_liveTable _field_live;
	jule::Ptr<_1c481c00a_IR> _field_ir;
	

	_1a9c194dd_ObjectDeadCode(void) = default;


};
inline __jule_tuple_x_1c481c00a_IR__jule_tuple_s_1c2220900_Log static__1a9abd0b7_Build(jule::Str, jule::I32);
inline void _1a9ac5db1_appendStructs(_1c481c00a_IR*, jule::Ptr<_1c4b02a82_Package>*, jule::Slice<jule::Ptr<_1c4a86ebc_Struct>>*);
inline jule::Slice<jule::Ptr<_1c4a86ebc_Struct>> _1a9ad0195_GetAllStructures(_1c481c00a_IR*);
inline void _1c4824067_appendGlobals(_1c481c00a_IR*, jule::Ptr<_1c4b02a82_Package>*, jule::Slice<jule::Ptr<_1c4b2c837_Var>>*);
inline jule::Slice<jule::Ptr<_1c4b2c837_Var>> _1c47ed838_GetAllGlobals(_1c481c00a_IR*);
inline void _1c48496ec_Order(_1c481c00a_IR*);
struct _1c481c00a_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1c4b02a82_Package> _field_Main;
	jule::Slice<jule::Ptr<_1c4aeeb28_ImportInfo>> _field_Used;
	_1c47ecbbc_OrderedDefines _field_Ordered;
	

	_1c481c00a_IR(void) = default;


};
inline jule::Str _1c4a81549_Str(_1c4aab255_StructIns*);
inline jule::Bool _1c4a8269e_Equal(jule::Ptr<_1c4aab255_StructIns>, jule::Ptr<_1c4621d32_TypeKind>);
inline jule::Bool _1c4a84a03_Same(_1c4aab255_StructIns*, jule::Ptr<_1c4aab255_StructIns>);
inline jule::Ptr<_1c4ab22e4_Fn> _1c4a85d23_FindMethod(_1c4aab255_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4aab068_FieldIns> _1c4a8a861_FindField(_1c4aab255_StructIns*, jule::Str);
inline jule::Ptr<_1c4b2c837_Var> _1c4a8b994_FindStatic(_1c4aab255_StructIns*, jule::Str);
struct _1c4aab255_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1c4a86ebc_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1c47006e6_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1c4aab068_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1c4b2c837_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1c4ab22e4_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1c4ab6958_ReferenceStack> _field_Refers;
	_1c4a610c8_Operators _field_Operators;
	

	_1c4aab255_StructIns(void) = default;


};
inline jule::Ptr<_1c228eead_Cmd> static__1c229040e_New(jule::Str);
inline jule::VoidExceptional _1c22905da_Spawn(_1c228eead_Cmd*);
inline jule::VoidExceptional _1c22907b6_Kill(_1c228eead_Cmd*);
inline jule::Exceptional<jule::I32> _1c2290a2a_Wait(_1c228eead_Cmd*);
inline jule::VoidExceptional _1c22b0c04_spawn(_1c228eead_Cmd*);
inline jule::VoidExceptional _1c22b0dd0_kill(_1c228eead_Cmd*);
inline jule::Exceptional<jule::I32> _1c22b1144_wait(_1c228eead_Cmd*);
struct _1c228eead_Cmd {
	_1c22b0880_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_1c228eead_Cmd(void) = default;


};
inline jule::I32 _20552e89b_DecodeRune(jule::I32, jule::I32);
inline __jule_tuple_i32__jule_tuple_i32 _20552eb43_EncodeRune(jule::I32);
inline jule::Slice<jule::U16> _20552ee62_Encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _205530209_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _205530517_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _20551b0d5_Utf16FromStr(jule::Str);
inline jule::Str _20551eaab_Utf16ToStr(jule::Slice<jule::U16>);
inline jule::Str _20551a0b2_U16PtrToStr(jule::U16*);
inline jule::I32 _2054c35cb_GetLastErrno(void);
inline jule::Uintptr _205551b87_GetStdHandle(jule::Uintptr);
inline jule::Bool _205551e2e_CloseHandle(jule::Uintptr);
inline jule::I32 _205552270_Wstat(jule::U16*, struct _stat*);
inline jule::I32 _20555265a_Wopen(jule::U16*, jule::I32, jule::I32);
inline jule::U32 _205552858_GetLastError(void);
inline jule::U32 _205552b99_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _2055531d8_DeleteFile(jule::U16*);
inline jule::Bool _205553480_CreateDirectory(jule::U16*);
inline jule::Bool _205553727_RemoveDirectory(jule::U16*);
inline jule::U32 _205553bab_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _205553eec_GetConsoleMode(jule::Uintptr, jule::I32*);
inline jule::Bool _2055545b3_SetConsoleMode(jule::Uintptr, jule::I32);
inline jule::Bool _205554aad_WriteConsole(jule::Uintptr, jule::U16*, jule::I32, jule::I32*, void*);
inline jule::Bool _205555042_ReadConsole(jule::Uintptr, jule::U16*, jule::I32, jule::I32*);
inline jule::Uintptr _205555581_FindFirstFile(jule::U16*, WIN32_FIND_DATAW*);
inline jule::I32 _2055558c2_FindNextFile(jule::Uintptr, WIN32_FIND_DATAW*);
inline jule::I32 _205555b69_FindClose(jule::Uintptr);
inline jule::I32 _205557693_Seek(jule::I32, jule::I32, jule::I32);
inline jule::I32 _205557a7d_Read(jule::I32, void*, jule::U32);
inline jule::I32 _205557e02_Close(jule::I32);
inline jule::I32 _2055582dc_Write(jule::I32, void*, jule::U32);
inline void _2055584eb_Exit(jule::I32);
inline jule::Slice<jule::U8> _20556c268_Stobs(jule::Str*);
inline void _205572856_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1d9dd3149_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1d9dd3468_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _1d9dd3710_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::I32 _1d9dd3c4e_RuneLen(jule::I32);
inline jule::I32 _1d9dd416c_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1d9dd44ad_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1d9dd47ee_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I32 _1d9dd4d3d_RuneCountStr(jule::Str);
inline jule::Bool _1d9dd50d5_RuneStart(jule::U8);
inline jule::I32 _1d9e7aa3d_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _1d9e7eaa8_Args(void);
inline jule::Exceptional<jule::Str> _1d9e8002b_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1d9e808de_getwd(void);
inline jule::Bool _1c2101858_IsLetter(jule::I32);
inline jule::Bool _1c216e189_is16(jule::Slice<_1c216c5c7_Range16>, jule::U16);
inline jule::Bool _1c216e4ca_is32(jule::Slice<_1c216ca4a_Range32>, jule::U32);
inline jule::Bool _1c216ec6c_isExcludingLatin(jule::Ptr<_1c216cebd_RangeTable>, jule::I32);
inline jule::Bool _1c2170014_IsUpper(jule::I32);
inline jule::I32 _1c21997ad_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _1c2199934_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _1c2188eea_FindByteStr(jule::Str*, jule::U8);
inline jule::I32 _1c218933b_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _1c2171697_Repeat(jule::Str, jule::I32);
inline jule::Bool _1c2174a52_hasPrefix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _1c2170cd4_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1c21894a1_hasSuffix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _1c2189759_HasSuffix(jule::Str, jule::Str);
inline jule::I32 _1c2189b44_FindAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _1c218a480_FindLastAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _1c218a7c1_FindLast(jule::Str, jule::Str);
inline jule::I32 _1c218ba69_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I32 _1c218c3a5_FindLastByte(jule::Str, jule::U8);
inline jule::I32 _1c218d1b9_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1c218d8e5_Split(jule::Str, jule::Str, jule::I32);
inline jule::Bool _1c218dc36_Contains(jule::Str, jule::Str);
inline jule::Bool _1c218e709_ContainsAny(jule::Str, jule::Str);
inline jule::I32 _1c218ea4a_Count(jule::Str, jule::Str);
inline jule::Str _1c218eece_Replace(jule::Str, jule::Str, jule::Str, jule::I32);
inline void _1c218c042_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1c219108a_TrimLeft(jule::Str, jule::Str);
inline void _1c2191343_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1c21919c5_Trim(jule::Str, jule::Str);
inline jule::Bool _1d9e58246_IsPathSep(jule::U8);
inline jule::Bool _1d9e58378_isSlash(jule::U8);
inline jule::U8 _1d9e584aa_toUpper(jule::U8);
inline jule::I32 _1d9e589c7_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1d9e58c6e_cutPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1d9e59016_fullPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1d9e5938a_abs(jule::Str);
inline jule::Str _1d9e59632_join(jule::Slice<jule::Str>);
inline jule::Str _1c219319c_Clean(jule::Str);
inline jule::Str _1c2193730_FromSlash(jule::Str);
inline jule::Str _1c2193a4e_Join(jule::Slice<jule::Str>);
inline jule::Str _1c2193ce6_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1c219408d_Abs(jule::Str);
inline jule::Str _1c2194335_Base(jule::Str);
inline jule::Str _1c21946a9_Dir(jule::Str);
inline jule::Str _1c2194951_VolumeName(jule::Str);
inline jule::I32 _2054a6bec_getLastFsError(void);
inline jule::Bool _2055d9868_isConsoleHandle(jule::Uintptr);
inline void _1c22b14a7_appendEscapeArg(jule::Str*, jule::Str);
inline jule::Str _1c22b174e_makeCmdLine(jule::Slice<jule::Str>);
inline jule::Exceptional<jule::Slice<jule::U16>> _1c22b1b06_createEnvBlock(jule::Slice<jule::Str>);
inline jule::I32 _1c22b2ad5_processErrorFromCode(jule::I32);
inline jule::I32 _1c22b2ce4_getLastProcessError(void);
inline void _1c22b3597_Exit(jule::I32);
inline jule::Str _1c22b3795_Executable(void);
inline jule::Bool _1c2213519_IsStdHeaderPath(jule::Str);
inline jule::Bool _1c2213739_IsValidHeaderExt(jule::Str);
inline jule::Bool _1c22139d1_IsValidCppExt(jule::Str);
inline jule::Str _1c2220d40_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1c222112b_argToStr(jule::Any);
inline jule::I32 _1c22213c3_findNextFmt(jule::Str);
inline jule::Str _1c2221758_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c22227d1_IsTopDirective(jule::Str);
inline jule::Bool _1c2223c11_IsWindows(jule::Str);
inline jule::Bool _1c2223eb9_IsDarwin(jule::Str);
inline jule::Bool _1c2224261_IsLinux(jule::Str);
inline jule::Bool _1c2224580_IsI386(jule::Str);
inline jule::Bool _1c2224827_IsAmd64(jule::Str);
inline jule::Bool _1c2224abe_IsArm64(jule::Str);
inline jule::Bool _1c2224d66_IsUnix(jule::Str);
inline jule::Bool _1c22251da_Is32Bit(jule::Str);
inline jule::Bool _1c2225482_Is64Bit(jule::Str);
inline void _1c224bb07_init(void);
inline jule::Bool _2039868b5_IsUnaryOp(jule::Str);
inline jule::Bool _203986ba1_IsBinOp(jule::Str);
inline jule::Bool _203987267_IsStr(jule::Str);
inline jule::Bool _20398750e_IsRawStr(jule::Str);
inline jule::Bool _2039877a6_IsRune(jule::Str);
inline jule::Bool _203987dc2_IsBool(jule::Str);
inline jule::Bool _203988169_IsFloat(jule::Str);
inline jule::Bool _203988411_IsNum(jule::Str);
inline jule::Bool _203988950_IsIgnoreIdent(jule::Str);
inline jule::Bool _203988be7_IsAnonIdent(jule::Str);
inline jule::Bool _203989236_IsSpace(jule::I32);
inline jule::Bool _203989687_IsLetter(jule::I32);
inline jule::Bool _203989bc6_IsDecimal(jule::U8);
inline jule::Bool _203989e6d_IsBinary(jule::U8);
inline jule::Bool _20398a215_IsOctal(jule::U8);
inline jule::Bool _20398a4ac_IsHex(jule::U8);
inline jule::Bool _20398a754_IsAssign(jule::U32);
inline jule::Bool _20398a9eb_IsPostfixOp(jule::Str);
inline jule::Bool _20398ac93_IsAssignOp(jule::Str);
inline jule::Ptr<_20398b546_File> _20398ca75_NewFileSet(jule::Str);
inline _1c2220900_Log _20398e318_makeErr(jule::I32, jule::I32, jule::Ptr<_20398b546_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20398e69d_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _20398e9de_floatFmtE(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _20398ed74_floatFmtP(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _2039901b5_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _203990506_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _203990847_floatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _203990c98_floatNum(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _203991040_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _2039912d7_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _203991628_isFloatFmtE(jule::U8, jule::I32);
inline jule::Bool _203991969_isFloatFmtP(jule::U8, jule::I32);
inline jule::Bool _203991caa_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _2039920eb_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _20399243c_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _20399288d_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _203992b35_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _203992e76_hexEscape(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _20399321d_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _2039934d7_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _203993691_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _203993927_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1c2220900_Log> _203998421_Lex(jule::Ptr<_20398b546_File>, jule::I32);
inline jule::I32 _1c312e4ab_LeadingZeros64(jule::U64);
inline jule::I32 _1c31303e1_TrailingZeros(jule::U32);
inline jule::I32 _1c3130cd7_TrailingZeros32(jule::U32);
inline jule::I32 _1c313107e_TrailingZeros64(jule::U64);
inline jule::I32 _1c313668e_Len32(jule::U32);
inline jule::I32 _1c3136936_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1c31375e6_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1c3138c79_Mul64(jule::U64, jule::U64);
inline jule::U32 _1c305b350_F32Bits(jule::F32);
inline jule::F32 _1c305b63b_F32FromBits(jule::U32);
inline jule::U64 _1c305b8d3_F64Bits(jule::F64);
inline jule::F64 _1c305bc02_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1c305e1dd_Frexp(jule::F64);
inline jule::F64 _1c313ca2a_NaN(void);
inline jule::Bool _1c313cb5c_IsNaN(jule::F64);
inline jule::F64 _1c313cc8e_Inf(jule::I32);
inline jule::Bool _1c313cdc1_IsInf(jule::F64, jule::I32);
inline __jule_tuple_f64__jule_tuple_int _1c313d003_normalize(jule::F64);
inline jule::F64 _1c313ddc2_Log(jule::F64);
inline jule::F64 _1c313e4dd_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1c3148162_Modf(jule::F64);
inline jule::F64 _1c31485a2_Log2(jule::F64);
inline jule::Str _1c2ac9b05_FmtFloat(jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _1c2ac226d_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _1c2aeda80_bigFtoa(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _1c2c4dcbd_floatInfo*);
inline jule::Slice<jule::U8> _1c2b6271a_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1c2ec0e96_decimalSlice, jule::I32, jule::U8);
inline void _1c2c2b64c_roundShortest(_1c31728ea_decimal*, jule::U64, jule::I32, _1c2c4dcbd_floatInfo*);
inline jule::Slice<jule::U8> _1c2c4ece1_fmtE(jule::Slice<jule::U8>, jule::Bool, _1c2ec0e96_decimalSlice, jule::I32, jule::U8);
inline jule::Slice<jule::U8> _1c2cd0569_fmtF(jule::Slice<jule::U8>, jule::Bool, _1c2ec0e96_decimalSlice, jule::I32);
inline jule::Slice<jule::U8> _1c2d02921_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I32, _1c2c4dcbd_floatInfo*);
inline jule::Slice<jule::U8> _1c2d83b06_fmtX(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _1c2c4dcbd_floatInfo*);
inline jule::I32 _1c2e4d022_min(jule::I32, jule::I32);
inline jule::I32 _1c2e8b307_max(jule::I32, jule::I32);
inline jule::U8 _1c2e8b637_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1c2635573_ConvError _1c2ede37c_parseUint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::U64> _1c2c52ab3_ParseUint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::I64> _1c2aa8793_ParseInt(jule::Str, jule::I32, jule::I32);
inline __jule_tuple_f64__jule_tuple_bool _1c2b16dc8_eiselLemire64(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1c2d3ec6b_eiselLemire32(jule::U64, jule::I32, jule::Bool);
inline jule::I32 _1c2d3dd58_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1c2d3de8a_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1c2a95b6a_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _1c3170167_atof64exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1c3170299_atof32exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1c2635573_ConvError _1c31703cb_atofHex(jule::Str, _1c2c4dcbd_floatInfo*, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1c2635573_ConvError _1c317061d_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1c2635573_ConvError _1c3170750_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1c2635573_ConvError _1c3170882_parseFloatPrefix(jule::Str, jule::I32);
inline jule::Exceptional<jule::F64> _1c31709b4_ParseFloat(jule::Str, jule::I32);
inline void _1c3170dd2_ryuFtoaFixed32(_1c2ec0e96_decimalSlice*, jule::U32, jule::I32, jule::I32);
inline void _1c3171014_ryuFtoaFixed64(_1c2ec0e96_decimalSlice*, jule::U64, jule::I32, jule::I32);
inline void _1c3171267_formatDecimal(_1c2ec0e96_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I32);
inline void _1c3171399_ryuFtoaShortest(_1c2ec0e96_decimalSlice*, jule::U64, jule::I32, _1c2c4dcbd_floatInfo*);
inline jule::I32 _1c31714cb_mulByLog2Log10(jule::I32);
inline jule::I32 _1c317160d_mulByLog10Log2(jule::I32);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1c3171740_computeBounds(jule::U64, jule::I32, _1c2c4dcbd_floatInfo*);
inline void _1c3171982_ryuDigits(_1c2ec0e96_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1c3171ab4_ryuDigits32(_1c2ec0e96_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I32);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1c3171be6_mult64bitPow10(jule::U32, jule::I32, jule::I32);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1c3171d28_mult128bitPow10(jule::U64, jule::I32, jule::I32);
inline jule::Bool _1c3171e5a_divisibleByPow5(jule::U64, jule::I32);
inline __jule_tuple_u32__jule_tuple_u32 _1c317208c_divmod1e9(jule::U64);
inline void _1c3173456_trim(_1c31728ea_decimal*);
inline void _1c3173588_rightShift(_1c31728ea_decimal*, jule::U32);
inline jule::Bool _1c31736ba_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I32, jule::Str);
inline void _1c31737ec_leftShift(_1c31728ea_decimal*, jule::U32);
inline jule::Bool _1c317392e_shouldRoundUp(_1c31728ea_decimal*, jule::I32);
inline jule::Str _1c31745de_FmtUint(jule::U64, jule::I32);
inline jule::Str _1c3174721_FmtInt(jule::I64, jule::I32);
inline jule::Str _1c3174853_Itoa(jule::I32);
inline jule::Str _1c3174985_small(jule::I32);
inline jule::Bool _1c3174ab7_isPowerOfTwo(jule::I32);
inline __jule_tuple_su8__jule_tuple_str _1c3174be9_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline jule::Str _1c26c8270_RealKindOf(jule::Str);
inline jule::I32 _1c26d71e6_BitsizeOf(jule::Str);
inline jule::Str _1c26ed7d4_IntFromBits(jule::I32);
inline jule::Str _1c26de352_UintFromBits(jule::I32);
inline jule::Str _1c272eda9_FloatFromBits(jule::I32);
inline jule::Bool _1c292c7d2_CheckBitFloat(jule::Str, jule::I32);
inline jule::I32 _1c29370e4_BitsizeOfFloat(jule::F64);
inline jule::I32 _1c29a2181_BitsizeOfInt(jule::I64);
inline jule::I32 _1c2a38cc8_BitsizeOfUint(jule::U64);
inline void _1c2a42232_UpdateTarget(void);
inline void _1c2a4c836_init(void);
inline jule::I64 _1c3174d2b_MinI(jule::Str);
inline jule::I64 _1c3174e5d_MaxI(jule::Str);
inline jule::U64 _1c3175090_MaxU(jule::Str);
inline jule::F64 _1c2a39207_Min(jule::Str);
inline jule::F64 _1c31751c2_Max(jule::Str);
inline jule::Bool _1c31754d0_IsI8Compatible(jule::Str);
inline jule::Bool _1c3175612_IsI16Compatible(jule::Str);
inline jule::Bool _1c3175744_IsI32Compatible(jule::Str);
inline jule::Bool _1c3175876_IsI64Compatible(jule::Str);
inline jule::Bool _1c31759a8_IsU8Compatible(jule::Str);
inline jule::Bool _1c3175ada_IsU16Compatible(jule::Str);
inline jule::Bool _1c3175c1c_IsU32Compatible(jule::Str);
inline jule::Bool _1c3175e5e_IsU64Compatible(jule::Str);
inline jule::Bool _1c3176091_IsF32Compatible(jule::Str);
inline jule::Bool _1c31761c3_IsF64Compatible(jule::Str);
inline jule::Bool _1c3176305_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1c3176437_IsI16Greater(jule::Str);
inline jule::Bool _1c3176569_IsI32Greater(jule::Str);
inline jule::Bool _1c317669b_IsI64Greater(jule::Str);
inline jule::Bool _1c31767cd_IsU16Greater(jule::Str);
inline jule::Bool _1c3176b41_IsU32Greater(jule::Str);
inline jule::Bool _1c3176c73_IsU64Greater(jule::Str);
inline jule::Bool _1c3176da5_IsF32Greater(jule::Str);
inline jule::Bool _1c3176ed7_IsF64Greater(jule::Str);
inline jule::Bool _1c3177119_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1c3177559_IsSigInt(jule::Str);
inline jule::Bool _1c317768b_IsUnsigInt(jule::Str);
inline jule::Bool _1c31777bd_IsInt(jule::Str);
inline jule::Bool _1c3177900_IsFloat(jule::Str);
inline jule::Bool _1c3177a32_IsNum(jule::Str);
inline jule::Bool _1c3177b64_IsSigNum(jule::Str);
inline void _1c317addc_lshiftUnsig(_1c25bc4e9_Const*, _1c25bc4e9_Const*);
inline void _1c317b01e_rshiftUnsig(_1c25bc4e9_Const*, _1c25bc4e9_Const*);
inline jule::Bool _1c4b45d7d_IsAscii(jule::I32);
inline jule::I32 _1c4b46004_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1c4b5d03d_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1c4b5d33a_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1c4b5d5d2_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1c4b5d8e0_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::Slice<jule::U8> _1c4b5dc31_strEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::I32 _1c4c10b90_findFormatPrefix(jule::Slice<jule::U8>*, jule::I32*);
inline jule::Slice<jule::U8> _1c4c16789_getFormatRange(jule::I32*, jule::Slice<jule::U8>*);
inline void _1c4c16a42_FmtByDefault(jule::Str*, jule::Any*);
inline void _1c4c16e1b_applyFmtByDefault(jule::Str*, jule::I32*, jule::Slice<jule::Any>*);
inline void _1c4c17317_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I32*, jule::Slice<jule::Any>*);
inline jule::Str _1c4c17625_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1c4c17e3e_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c4ab5b11_parameterUsesGenerics(jule::Ptr<_1c4ab2b30_ParamIns>*, jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>>*);
inline jule::Ptr<_1c4b610b8_TypeSymbol> _1c4ab80db_buildType(jule::Ptr<_1c4a8e337_TypeDecl>);
inline jule::Ptr<_1c45e7e90_Value> _1c4ab83c7_buildExpr(jule::Ptr<_1c4a93858_Expr>);
inline jule::Ptr<_1c4701230_TypeAlias> _1c4ab866e_buildTypeAlias(jule::Ptr<_1c4aa5606_TypeAliasDecl>);
inline jule::Ptr<_1c4a7e877_Field> _1c4ab898d_buildField(jule::Ptr<_1c4aa8c9c_FieldDecl>);
inline jule::Slice<jule::Ptr<_1c4a7e877_Field>> _1c4ab8c35_buildFields(jule::Slice<jule::Ptr<_1c4aa8c9c_FieldDecl>>*);
inline jule::Ptr<_1c4a86ebc_Struct> _1c4ab8ecc_buildStruct(jule::Ptr<_1c4aa9550_StructDecl>);
inline jule::Ptr<_1c4ab2107_Param> _1c4ab9274_buildParam(jule::Ptr<_1c4a9e996_ParamDecl>);
inline jule::Slice<jule::Ptr<_1c4ab2107_Param>> _1c4ab95e8_buildParams(jule::Slice<jule::Ptr<_1c4a9e996_ParamDecl>>*);
inline jule::Ptr<_1c4ab1e1a_RetType> _1c4ab9890_buildRetType(jule::Ptr<_1c4a9244a_RetTypeDecl>);
inline jule::Ptr<_1c4ab22e4_Fn> _1c4ab9b37_buildFn(jule::Ptr<_1c4aa0cb6_FnDecl>);
inline jule::Slice<jule::Ptr<_1c4ab22e4_Fn>> _1c4ab9dce_buildMethods(jule::Slice<jule::Ptr<_1c4aa0cb6_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1c4b610b8_TypeSymbol>> _1c4aba176_buildTraitInherits(jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>*);
inline jule::Ptr<_1c4ac306e_Trait> _1c4aba41d_buildTrait(jule::Ptr<_1c4aa9c26_TraitDecl>);
inline jule::Ptr<_1c4ac4d0c_EnumItem> _1c4aba6b5_buildEnumItem(jule::Ptr<_1c4aa6e65_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1c4ac4d0c_EnumItem>> _1c4aba95c_buildEnumItems(jule::Slice<jule::Ptr<_1c4aa6e65_EnumItemDecl>>*);
inline jule::Ptr<_1c4ac5802_Enum> _1c4abadad_buildEnum(jule::Ptr<_1c4aa798d_EnumDecl>);
inline jule::Ptr<_1c4ac6836_TypeEnumItem> _1c4abb155_buildTypeEnumItem(jule::Ptr<_1c4aa8494_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1c4ac6836_TypeEnumItem>> _1c4abb3ec_buildTypeEnumItems(jule::Slice<jule::Ptr<_1c4aa8494_TypeEnumItemDecl>>*);
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4abb694_buildTypeEnum(jule::Ptr<_1c4aa8a9e_TypeEnumDecl>);
inline jule::Ptr<_1c4b2c837_Var> _1c4abb93b_buildVar(jule::Ptr<_1c4aa1c95_VarDecl>);
inline jule::Slice<jule::Ptr<_1c4b2c837_Var>> _1c4abbbd3_buildVars(jule::Slice<jule::Ptr<_1c4aa1c95_VarDecl>>);
inline jule::Ptr<_1c4acb363_Impl> _1c4abbe7a_buildImpl(jule::Ptr<_1c4aaa331_Impl>);
inline jule::Bool _1c4aca708_matchConstraint(jule::Str*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c4aca9e4_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1c4ad7e30_scopeChecker> _1c4acd3ed_newScopeCheckerBase(jule::Ptr<_1c4b07c74_Sema>*, jule::Ptr<_1c4ab39ee_FnIns>);
inline jule::Ptr<_1c4ad7e30_scopeChecker> _1c4acd783_newScopeChecker(jule::Ptr<_1c4b07c74_Sema>*, jule::Ptr<_1c4ab39ee_FnIns>);
inline jule::Ptr<_1c4ad6b98_scopeLabel> _1c4acdac4_findLabelParent(jule::Str, jule::Ptr<_1c4ad7e30_scopeChecker>);
inline jule::Bool _1c4acde59_modelIsGotoScope(jule::Any, jule::Ptr<_1c4ad13bd_Scope>*);
inline jule::Bool _1c4ace29a_stmtIsGotoScope(jule::Any*, jule::Ptr<_1c4ad13bd_Scope>*);
inline jule::I32 _1c4ace5db_countMatchType(jule::Ptr<_1c4ad5119_Match>*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Slice<jule::Ptr<_1c45e6e17_Data>> _1c4ace883_getDatasFromTupleData(jule::Ptr<_1c45e6e17_Data>*);
inline jule::Bool _1c4ad01be_checkMut(jule::Ptr<_1c4b07c74_Sema>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline jule::Bool _1c4ad0653_checkAssign(jule::Ptr<_1c4b07c74_Sema>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>, jule::Ptr<_2039861ab_Token>);
inline jule::Bool _1c4ad08ea_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1c4ad0b92_isValidStForNextSt(jule::Any*);
inline jule::Bool _1c4ad0e39_stmtIsDef(jule::Any*);
inline jule::Ptr<_1c4b2c837_Var> _1c4aec340_findVarInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4701230_TypeAlias> _1c4aec76e_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4a86ebc_Struct> _1c4aecb59_findStructInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4ab22e4_Fn> _1c4aed0bb_findFnInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1c4ac306e_Trait> _1c4aed3c9_findTraitInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1c4ac5802_Enum> _1c4aed71a_findEnumInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4aeda5b_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>*, jule::Str);
inline jule::Any _1c4aee056_defByIdentPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1c4b0515b_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1c4b05db5_isValidModelForRef(jule::Any*);
inline _1c2220900_Log _1c4b0635a_compilerErr(jule::Ptr<_2039861ab_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c4b0669b_impIsLookupable(jule::Ptr<_1c4aeeb28_ImportInfo>*, jule::Str);
inline void _1c4b06998_appendRetVars(jule::Slice<jule::Ptr<_1c4b2c837_Var>>*, jule::Ptr<_1c4ab39ee_FnIns>*);
inline void _1c4b06c51_appendParamVars(jule::Slice<jule::Ptr<_1c4b2c837_Var>>*, jule::Ptr<_1c4ab39ee_FnIns>*);
inline void _1c4b0702b_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>*, jule::Ptr<_1c4ab39ee_FnIns>*);
inline jule::Ptr<_1c45e20dd_SymbolTable> _1c4b0737d_findFile(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>*, jule::Ptr<_20398b546_File>*);
inline void _1c4b077e0_pushSugggestion(_1c2220900_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1c4b2ad1e_pushImplemented(jule::Ptr<_1c4ac306e_Trait>, jule::Ptr<_1c4a86ebc_Struct>*);
inline void _1c4b2b0c7_pushImplements(jule::Ptr<_1c4a86ebc_Struct>*, jule::Ptr<_1c4ac306e_Trait>);
inline jule::Bool _1c45ce6e6_traitHasReferenceReceiver(jule::Ptr<_1c4ac306e_Trait>*);
inline jule::Bool _1c45cea48_floatAssignable(jule::Str, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Bool _1c45ced89_sigAssignable(jule::Str, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Bool _1c45d021e_unsigAssignable(jule::Str, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Bool _1c45d0560_intAssignable(jule::Str, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c4621d32_TypeKind> _1c45e0e99_lenKind(void);
inline jule::Ptr<_1c4a5ad81_Directive> _1c461c547_findDirective(jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>*, jule::Str);
inline jule::Any _1c461c8cc_findBuiltinsImport(jule::Str, jule::Ptr<_1c4aeeb28_ImportInfo>);
inline void _1c461cadb_fitBitsize(jule::Ptr<_1c45e6e17_Data>*);
inline void _1c461cdd8_makeStructLitAlloc(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4aac036_StructLitExprModel>*);
inline jule::Ptr<_1c4b2c837_Var> _1c461d229_buildErrorVar(jule::Ptr<_1c4ad13bd_Scope>*, jule::Ptr<_1c4a9783a_FnCallExpr>*);
inline jule::Any _1c461d56a_findBuiltinsSema(jule::Str, jule::Ptr<_1c4b07c74_Sema>);
inline jule::Bool _1c461d812_isOkForShifting(jule::Ptr<_1c45e6e17_Data>*);
inline jule::Bool _1c461dbb9_isInstancedStruct(jule::Ptr<_1c4aab255_StructIns>);
inline jule::Bool _1c461e02c_isPtrArithmeticCompatible(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c461e26e_applyCastKindModel(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4621d32_TypeKind>*);
inline void _1c461e527_applyCastKind(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Ptr<_1c45e6e17_Data> _1c461e725_buildVoidData(void);
inline jule::Str _1c461e9de_checkDataForIntegerIndexing(jule::Ptr<_1c45e6e17_Data>*);
inline void _1c461eca8_applyCastModelByEnum(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4ac5802_Enum>);
inline void _1c4620061_castConstByType(jule::Str*, jule::Ptr<_1c45e6e17_Data>*);
inline void _1c462056c_updateModelToGenericIns(jule::Any*, jule::Ptr<_1c4ab39ee_FnIns>*);
inline jule::Bool _1c46207ae_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1c4a9004c_SubIdentTypeDecl>*);
inline jule::Bool _1c4b738b1_kindUsesGenerics(jule::Ptr<_1c4621d32_TypeKind>*, jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>>*);
inline jule::Bool _1c4b73c46_hasDirective(jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>*, jule::Str);
inline jule::Bool _1c4b73edd_canGetPtr(jule::Ptr<_1c45e6e17_Data>*);
inline jule::Bool _1c4b7430c_isValidForSptrType(jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c4b745a4_isValidForRef(jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Bool _1c4b7486d_isBuiltinStrConvertable(jule::Ptr<_1c4621d32_TypeKind>*);
inline jule::Str _1c4b74ae3_buildLinkPathByTokens(jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4b6197b_Prim> _1c4b74e9a_buildPrimType(jule::Str);
inline jule::Ptr<_1c4a86ebc_Struct> _1c4b75242_getStructFromKind(jule::Ptr<_1c4621d32_TypeKind>);
inline jule::Bool _1c4b754d9_isPrim(jule::Str);
inline void _1c4b75792_applyImplicitCast(jule::Ptr<_1c4621d32_TypeKind>*, jule::Ptr<_1c45e6e17_Data>*);
inline __jule_tuple_x_1c45e20dd_SymbolTable__jule_tuple_s_1c2220900_Log _1c4b7890a_buildSymbols(jule::Ptr<_1c4a59b93_Ast>*, jule::Trait<_1c4aebe77_Importer>*, jule::Ptr<_1c4abc4ca_symbolBuilder>);
inline __jule_tuple_x_1c4b02a82_Package__jule_tuple_s_1c2220900_Log _1c4b78d39_analyzePackage(jule::Slice<jule::Ptr<_1c4a59b93_Ast>>*, jule::Trait<_1c4aebe77_Importer>*, jule::I32*);
inline __jule_tuple_x_1c4b02a82_Package__jule_tuple_s_1c2220900_Log _1c4b79224_AnalyzePackage(jule::Slice<jule::Ptr<_1c4a59b93_Ast>>, jule::Trait<_1c4aebe77_Importer>, jule::I32);
inline jule::Ptr<_1c4ab39ee_FnIns> _1c4b852da_findBuiltinFn(jule::Str);
inline jule::Ptr<_1c4701230_TypeAlias> _1c4b86e24_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1c4b8266c_findBuiltinDef(jule::Str);
inline jule::Any _1c4b8b7ec_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1c4b8a9a5_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1c4b8aad7_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1c4b82a68_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1c45e6e17_Data> _1c4c18071_builtinCallerCommonPlain(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c18329_builtinCallerCommon(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c18714_builtinCallerCommonMut(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c18a55_builtinCallerError(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c18e40_builtinCallerOut(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1932a_builtinCallerOutln(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c19715_builtinCallerNew(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c19b00_builtinCallerPanic(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1a21b_builtinCallerMake(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1a606_builtinCallerAppend(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1aa8a_callerCopySlice(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1b01e_callerCopyStr(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1b409_builtinCallerCopy(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1b74a_callerLenSlice(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1ba8b_callerLenMap(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1bdcc_callerLenArr(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1c21d_callerLenStr(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1c608_builtinCallerLen(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1c949_callerCapSlice(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1cc8a_callerCapStr(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1d175_builtinCallerCap(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1d609_callerDeleteMap(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1d9e4_builtinCallerDelete(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1ddce_builtinCallerClone(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1e495_builtinCallerAssert(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1e808_builtinCallerStdMemSizeOf(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c1ec26_builtinCallerStdMemAlignOf(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c20144_builtinCallerStdMemFree(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c20573_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c20991_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c20dd1_builtinCallerStdDebugOut(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Ptr<_1c45e6e17_Data> _1c4c212bb_builtinCallerStdDebugOutln(jule::Ptr<_1c45e8985_Eval>*, jule::Ptr<_1c4a9783a_FnCallExpr>*, jule::Ptr<_1c45e6e17_Data>*);
inline jule::Bool _1c4ce9707_FindModuleFile(jule::Slice<jule::Ptr<_205567a7c_DirEntry>>*);
inline jule::Str _1c4ce9839_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1c2220900_Log> _1c4ce9a6a_CheckModuleFile(jule::Str);
inline jule::Ptr<_1a9aa4213_FileInfo> _1a9aeac71_ParseFile(jule::Ptr<_20398b546_File>);
inline __jule_tuple_x_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log _1a9aeb304_parseFileset(jule::Ptr<_20398b546_File>);
inline jule::Ptr<_1c4a9e2c0_ScopeTree> _1a9aebc2d_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a9aec019_isSt(jule::Ptr<_2039861ab_Token>, jule::Ptr<_2039861ab_Token>);
inline jule::Bool _1a9aec35a_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::I32*);
inline __jule_tuple_int__jule_tuple_bool _1a9aec6e0_nextStPos(jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::I32);
inline __jule_tuple_sx_2039861ab_Token__jule_tuple_bool _1a9aeca31_skipSt(jule::I32*, jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Slice<jule::Ptr<_1a9aecd2d_stmt>> _1a9aed1c4_splitStmts(jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Bool _1a9b148b1_isTypeOp(jule::Str*);
inline jule::Bool _1a9b14b9c_isTypeRange(jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Slice<jule::Ptr<_2039861ab_Token>> _1a9b14e44_getBlockExpr(jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline __jule_tuple_sx_2039861ab_Token__jule_tuple_sx_2039861ab_Token _1a9b152c9_splitDelim(jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::U32);
inline jule::I32 _1a9b15571_findLowestPrecOp(jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Ptr<_1c4a95519_IdentExpr> _1a9b15818_buildIdentExpr(jule::Ptr<_2039861ab_Token>*);
inline __jule_tuple_sx_2039861ab_Token__jule_tuple_int _1a9b15ab0_getRangeExprTokens(jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Bool _1a9b16819_checkAssignTokens(jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline _1c2220900_Log _1a9b17a3a_makeErr(jule::I32, jule::I32, jule::Ptr<_20398b546_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_2039861ab_Token>> _1a9b18013_range(jule::I32*, jule::Str, jule::Str, jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline __jule_tuple_sx_2039861ab_Token__jule_tuple_sx_2039861ab_Token _1a9b182aa_rangeLast(jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline __jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log _1a9b18695_partsKind(jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::Str, jule::Bool);
inline __jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log _1a9b18a80_parts(jule::Slice<jule::Ptr<_2039861ab_Token>>*, jule::U32, jule::Bool);
inline jule::Str _1a9b18d27_getCloseKindOfBrace(jule::Str);
inline _1c2220900_Log _1a9b19212_compilerErr(jule::Ptr<_2039861ab_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1a9b19641_pushSuggestion(_1c2220900_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a9b198d8_tokstoa(jule::Slice<jule::Ptr<_2039861ab_Token>>*);
inline jule::Bool _1a9b2995e_isPub(jule::Str*);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2a300_buildVoidType(void);
inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2a542_buildPrimType(jule::Ptr<_2039861ab_Token>);
inline __jule_tuple_bool__jule_tuple_bool _1c4cc3813_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1c4cd4ca8_checkArch(jule::Str);
inline jule::Bool _1c4cbda3e_isPassFileAnnotation(jule::Str);
inline void _1c4cd864c_setOsVars(jule::Slice<jule::Str>*);
inline void _1c4cd88a0_setArchVars(jule::Slice<jule::Str>*);
inline void _1c4cd8b58_initVars(jule::Slice<jule::Str>*, _1c4cd833e_CompileInfo*);
inline jule::Slice<jule::U8> _1c4821a59_readBuff(jule::Str);
inline _1c2220900_Log _1c4828cc5_flatCompilerErr(jule::Str);
inline void _1a993ee17_pushPasses(jule::Ptr<_1c4b02a82_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1a9a155c5_getAllUniquePasses(jule::Ptr<_1c4b02a82_Package>*, jule::Slice<jule::Ptr<_1c4aeeb28_ImportInfo>>);
inline _1c4cd833e_CompileInfo _1a9aa2a80_buildCompileInfo(void);
inline void _1a9c4d9c8_EliminateDefines(jule::Ptr<_1c481c00a_IR>*);
inline jule::Ptr<_1c4a5ad81_Directive> _1a9c4dd5d_findDirective(jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>*, jule::Str);
inline jule::Bool _1a9c4e19e_hasDirective(jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>*, jule::Str);
inline void _1a9c52ceb_eliminateDeadCodeOfScope(jule::Ptr<_1c4ad13bd_Scope>);
inline void _1a9c53082_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1c4ab22e4_Fn>>*);
inline void _1a9c532c4_eliminateFunctionsScopePackage(jule::Ptr<_1c4b02a82_Package>*);
inline void _1a9c5356b_eliminateScopePackage(jule::Ptr<_1c4b02a82_Package>*);
inline void _1a9c5377a_EliminateScopes(jule::Ptr<_1c481c00a_IR>*);
inline jule::Bool _1c1e22118_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1c1e63dd5_isConstantValidConditionalCase(jule::Ptr<_1c4ad17b9_If>*);
inline jule::Bool _1c1e83b2a_isUnreachableExpr(jule::Any*);
inline jule::Bool _1c48a93a5_isConstantValidMatchCase(jule::Ptr<_1c4ad5b64_Case>*);
inline jule::Bool _1c1dcc7dd_isUnreachableConditionalCase(jule::Ptr<_1c4ad17b9_If>*);
inline jule::Bool _1c1e1568e_isUnreachableMatchCase(jule::Ptr<_1c4ad5b64_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1c4c22410_checkForBitShiftOpt(jule::Ptr<_1c4aab783_OperandExprModel>*, jule::Ptr<_1c4aab783_OperandExprModel>*);
inline void _1c4c22960_PushOptLevel(jule::I32);
inline void _1a9bd0b47_detectEnabled(void);
inline void _1a9c719da_Throw(jule::Str);
inline jule::U64 _1ab2675c8_unix(void);
inline jule::U64 _1ab2678d6_unixYearToSeconds(jule::U64, jule::Bool*);
inline jule::U64 _1ab267c6b_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1ab1b5713_isCopyOptimizable(jule::Ptr<_1c45e6e17_Data>*);
inline jule::Bool _1ab1b5a98_isIterCopyOptimizable(jule::Ptr<_1c45e6e17_Data>*, jule::Ptr<_1c4b2c837_Var>*);
inline jule::Str _1ab1c52e4_decomposeCommonEsq(jule::U8);
inline jule::Str _1ab1c55d0_sbtoa(jule::U8);
inline jule::Str _1ab1c5877_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1ab1c5b96_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1ab1c5ea4_ftoa(jule::F64, jule::I32);
inline jule::Str _1ab1c624b_itoa(jule::I64);
inline jule::Str _1ab1c64e3_utoa(jule::U64);
inline jule::Bool _1ab1c689a_isForwarded(jule::Ptr<_1c4ad13bd_Scope>*);
inline jule::Bool _1ab1c6b64_isBuiltinCallHasDebuginf(jule::Ptr<_1c4aac5ec_FnCallExprModel>*);
inline jule::Bool _1ab1c6d95_isExprComesFromBind(jule::Ptr<_1c45e6e17_Data>*);
inline jule::Bool _1ab1c713c_isAny(jule::Ptr<_1c4621d32_TypeKind>*);
inline void _1ab274261_iterFiles(jule::Ptr<_1c4b02a82_Package>*, jule::Fn<void(jule::Ptr<_1c45e20dd_SymbolTable>*)>);
inline jule::Str _1ab27454c_concatAllParts(jule::Slice<jule::Ptr<_2039861ab_Token>>);
inline jule::Bool _1ab27488d_containsTraitMethod(jule::Ptr<_1c4ac306e_Trait>*, jule::Str*);
inline void _1ab274b8a_pushMethodsFromInherit(jule::Ptr<_1c4ac306e_Trait>*, jule::Ptr<_1c4ac306e_Trait>*);
inline void _1ab274e65_pushMethodsFromInherits(jule::Ptr<_1c4ac306e_Trait>*, jule::Ptr<_1c4ac306e_Trait>*);
inline jule::Ptr<_1c4a5ad81_Directive> _1ab283182_findDirective(jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>*, jule::Str);
inline jule::Bool _1ab283517_hasDirective(jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>*, jule::Str);
inline jule::Bool _1ab2837ae_shouldInitialized(jule::Ptr<_1c4621d32_TypeKind>*);
inline void _1c2202b57_printErrorMessage(jule::Str);
inline void _1c21e67c7_help(jule::Slice<jule::Str>*);
inline void _1c21e6909_version(jule::Slice<jule::Str>*);
inline void _1c220451b_toolDistos(void);
inline void _1c220464d_toolDistarch(void);
inline void _1c22102e6_tool(jule::Slice<jule::Str>*);
inline void _1c2210428_julenv(jule::Slice<jule::Str>*);
inline void _1c2213294_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1c21de6b0_processCommand(jule::Slice<jule::Str>*);
inline void _1c21de7e2_showInfo(void);
void entry_point(void);
inline void _1c22b3d6c_enableVtp(void);
inline void _1c22b3e9e_init(void);
inline void _1ab28e853_init(void);
inline jule::Ptr<_205572c1e_File> _1ab15c787_openOutput(jule::Str*);
inline void _1ab00e33c_clearObjects(void);
inline void _1ab08b70a_compileIr(jule::Str, jule::Str);
inline jule::Bool _1ab08d432_isCppSourceFile(jule::Str);
inline void _1ab0c55ac_pushCompCmdClang(jule::Str*);
inline void _1a9d0c2c3_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _1ab00b3e4_genCompileCmd(jule::Str, jule::Ptr<_1c481c00a_IR>*);
inline jule::Str _1aa19b057_getCompilePath(void);
inline void _1aa2129d6_applyTargetIndependentOptimizations(jule::Ptr<_1c481c00a_IR>*);
inline void _1aa1a2833_checkCompilerFlag(void);
inline void _1ab29e940_checkTargetArch(jule::Str);
inline void _1ab2a3a32_checkTargetOs(jule::Str);
inline void _1ab285ddd_checkTargetFlag(jule::Str*);
inline void _1a9d09875_checkOptFlag(jule::Str*);
inline void _1a9d099a7_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1ab2b0d4c_checkFlags(jule::Slice<jule::Str>*);
inline void _1ab2b0e7e_setupSemaFlags(jule::I32*);
inline jule::Ptr<_1c481c00a_IR> _1ab2b10b1_buildIr(jule::Slice<jule::Str>*);
inline void _1ab2b11e3_compileCommand(jule::Slice<jule::Str>*);


struct _1c4aebe77_ImporterMptrData {
	void(*_1c4aead99_SetModPath)(jule::Trait<_1c4aebe77_Importer>, jule::Str);
	jule::Str(*_1c4aeb0db_GetModPath)(jule::Trait<_1c4aebe77_Importer>);
	jule::Str(*_1c4aeb3e9_ModById)(jule::Trait<_1c4aebe77_Importer>, jule::I32);
	jule::Ptr<_1c4aeeb28_ImportInfo>(*_1c4aeb707_GetImport)(jule::Trait<_1c4aebe77_Importer>, jule::Str);
	__jule_tuple_sx_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log(*_1c4aebaae_ImportPackage)(jule::Trait<_1c4aebe77_Importer>, jule::Str, jule::Bool);
	void(*_1c4aebd34_Imported)(jule::Trait<_1c4aebe77_Importer>, jule::Ptr<_1c4aeeb28_ImportInfo>);
};

struct _1c46218c0_KindMptrData {
	jule::Str(*_1c47015b5_Str)(jule::Trait<_1c46218c0_Kind>);
	jule::Bool(*_1c462177c_Equal)(jule::Trait<_1c46218c0_Kind>, jule::Ptr<_1c4621d32_TypeKind>);
};

struct _1c4b77c6c_LookupMptrData {
	jule::Ptr<_1c4aeeb28_ImportInfo>(*_1c4b75e24_FindPackage)(jule::Trait<_1c4b77c6c_Lookup>, jule::Str);
	jule::Ptr<_1c4aeeb28_ImportInfo>(*_1c4b76232_SelectPackage)(jule::Trait<_1c4b77c6c_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)>);
	jule::Ptr<_1c4b2c837_Var>(*_1c4b765d9_FindVar)(jule::Trait<_1c4b77c6c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c4701230_TypeAlias>(*_1c4b76991_FindTypeAlias)(jule::Trait<_1c4b77c6c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c4a86ebc_Struct>(*_1c4b76d48_FindStruct)(jule::Trait<_1c4b77c6c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c4ab22e4_Fn>(*_1c4b77200_FindFn)(jule::Trait<_1c4b77c6c_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c4ac306e_Trait>(*_1c4b7750d_FindTrait)(jule::Trait<_1c4b77c6c_Lookup>, jule::Str);
	jule::Ptr<_1c4ac5802_Enum>(*_1c4b7781b_FindEnum)(jule::Trait<_1c4b77c6c_Lookup>, jule::Str);
	jule::Ptr<_1c4ac6dec_TypeEnum>(*_1c4b77b29_FindTypeEnum)(jule::Trait<_1c4b77c6c_Lookup>, jule::Str);
};

struct _1ab2aa929_CommonFlagMptrData {
	jule::Str(*_1ab2aa451_Name)(jule::Trait<_1ab2aa929_CommonFlag>);
	jule::I32(*_1ab2aa583_Short)(jule::Trait<_1ab2aa929_CommonFlag>);
	jule::Str(*_1ab2aa6b5_What)(jule::Trait<_1ab2aa929_CommonFlag>);
	void(*_1ab2aa7e7_Reset)(jule::Trait<_1ab2aa929_CommonFlag>);
};



inline void _1c4aead99_SetModPath_Importer_0(jule::Trait<_1c4aebe77_Importer> _self_, jule::Str _1729_path) {
	_1a9980d8c_SetModPath(_self_.safe_ptr<_1a9a21e2d_JuleImporter>(), _1729_path);
}
inline jule::Str _1c4aeb0db_GetModPath_Importer_0(jule::Trait<_1c4aebe77_Importer> _self_) {
	return _1a99a351e_GetModPath(_self_.safe_ptr<_1a9a21e2d_JuleImporter>());
}
inline jule::Str _1c4aeb3e9_ModById_Importer_0(jule::Trait<_1c4aebe77_Importer> _self_, jule::I32 _2522_id) {
	return _1a99b3089_ModById(_self_.safe_ptr<_1a9a21e2d_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4aeb707_GetImport_Importer_0(jule::Trait<_1c4aebe77_Importer> _self_, jule::Str _3128_path) {
	return _1a9a174b7_GetImport(_self_.safe_ptr<_1a9a21e2d_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log _1c4aebaae_ImportPackage_Importer_0(jule::Trait<_1c4aebe77_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1a9a41700_ImportPackage(_self_.safe_ptr<_1a9a21e2d_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1c4aebd34_Imported_Importer_0(jule::Trait<_1c4aebe77_Importer> _self_, jule::Ptr<_1c4aeeb28_ImportInfo> _4131__0) {
	_1a9a485b4_Imported(_self_.safe_ptr<_1a9a21e2d_JuleImporter>(), _4131__0);
}
inline jule::Str _1c47015b5_Str_Kind_0(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4a81549_Str(_self_.safe_ptr<_1c4aab255_StructIns>());
}
inline jule::Bool _1c462177c_Equal_Kind_0(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4a8269e_Equal(_self_.data.as<_1c4aab255_StructIns>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_1(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4ab3d2e_Str(_self_.safe_ptr<_1c4ab39ee_FnIns>());
}
inline jule::Bool _1c462177c_Equal_Kind_1(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4ab413c_Equal(_self_.data.as<_1c4ab39ee_FnIns>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_2(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4ac346a_Str(_self_.safe_ptr<_1c4ac306e_Trait>());
}
inline jule::Bool _1c462177c_Equal_Kind_2(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4ac3778_Equal(_self_.data.as<_1c4ac306e_Trait>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_3(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4ac5b65_Str(_self_.safe_ptr<_1c4ac5802_Enum>());
}
inline jule::Bool _1c462177c_Equal_Kind_3(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4ac5e73_Equal(_self_.data.as<_1c4ac5802_Enum>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_4(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4ac722c_Str(_self_.safe_ptr<_1c4ac6dec_TypeEnum>());
}
inline jule::Bool _1c462177c_Equal_Kind_4(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4ac753a_Equal(_self_.data.as<_1c4ac6dec_TypeEnum>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_5(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4622272_Str(_self_.safe_ptr<_1c4621d32_TypeKind>());
}
inline jule::Bool _1c462177c_Equal_Kind_5(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4622580_Equal(_self_.data.as<_1c4621d32_TypeKind>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_6(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4b61cde_Str(_self_.safe_ptr<_1c4b6197b_Prim>());
}
inline jule::Bool _1c462177c_Equal_Kind_6(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4b620ec_Equal(_self_.data.as<_1c4b6197b_Prim>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_7(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4b65573_Str(_self_.safe_ptr<_1c4b65210_Sptr>());
}
inline jule::Bool _1c462177c_Equal_Kind_7(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4b65881_Equal(_self_.data.as<_1c4b65210_Sptr>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_8(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4b66101_Str(_self_.safe_ptr<_1c4b65b6c_Slc>());
}
inline jule::Bool _1c462177c_Equal_Kind_8(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4b6640e_Equal(_self_.data.as<_1c4b65b6c_Slc>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_9(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4b669d6_Str(_self_.safe_ptr<_1c4b66673_Tuple>());
}
inline jule::Bool _1c462177c_Equal_Kind_9(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4b66ce4_Equal(_self_.data.as<_1c4b66673_Tuple>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_10(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4b6750e_Str(_self_.safe_ptr<_1c4b6719b_Map>());
}
inline jule::Bool _1c462177c_Equal_Kind_10(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4b6781c_Equal(_self_.data.as<_1c4b6719b_Map>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_11(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4b68103_Str(_self_.safe_ptr<_1c4b67c90_Arr>());
}
inline jule::Bool _1c462177c_Equal_Kind_11(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4b68411_Equal(_self_.data.as<_1c4b67c90_Arr>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_12(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1c4b68a60_Str(_self_.safe_ptr<_1c4b686ec_Ptr>());
}
inline jule::Bool _1c462177c_Equal_Kind_12(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1c4b68d6d_Equal(_self_.data.as<_1c4b686ec_Ptr>(), _5621_other);
}
inline jule::Str _1c47015b5_Str_Kind_13(jule::Trait<_1c46218c0_Kind> _self_) {
	return _1ab275e11_Str(_self_.safe_ptr<_1ab275b58_customType>());
}
inline jule::Bool _1c462177c_Equal_Kind_13(jule::Trait<_1c46218c0_Kind> _self_, jule::Ptr<_1c4621d32_TypeKind> _5621_other) {
	return _1ab27621e_Equal(_self_.data.as<_1ab275b58_customType>(), _5621_other);
}
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b75e24_FindPackage_Lookup_0(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _930_ident) {
	return _1c4ad83b4_FindPackage(_self_.safe_ptr<_1c4ad7e30_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b76232_SelectPackage_Lookup_0(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)> _1332_selector) {
	return _1c4ad86c2_SelectPackage(_self_.safe_ptr<_1c4ad7e30_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_1c4b2c837_Var> _1c4b765d9_FindVar_Lookup_0(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1c4ad8a79_FindVar(_self_.safe_ptr<_1c4ad7e30_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1c4701230_TypeAlias> _1c4b76991_FindTypeAlias_Lookup_0(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1c4ad8e31_FindTypeAlias(_self_.safe_ptr<_1c4ad7e30_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1c4a86ebc_Struct> _1c4b76d48_FindStruct_Lookup_0(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1c4ad92d8_FindStruct(_self_.safe_ptr<_1c4ad7e30_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1c4ab22e4_Fn> _1c4b77200_FindFn_Lookup_0(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1c4ad9690_FindFn(_self_.safe_ptr<_1c4ad7e30_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1c4ac306e_Trait> _1c4b7750d_FindTrait_Lookup_0(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _3328_ident) {
	return _1c4ad999d_FindTrait(_self_.safe_ptr<_1c4ad7e30_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_1c4ac5802_Enum> _1c4b7781b_FindEnum_Lookup_0(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _3727_ident) {
	return _1c4ad9cab_FindEnum(_self_.safe_ptr<_1c4ad7e30_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b77b29_FindTypeEnum_Lookup_0(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _4131_ident) {
	return _1c4ada0b9_FindTypeEnum(_self_.safe_ptr<_1c4ad7e30_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b75e24_FindPackage_Lookup_1(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _930_ident) {
	return _1c4b00145_FindPackage(_self_.safe_ptr<_1c4aeeb28_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b76232_SelectPackage_Lookup_1(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)> _1332_selector) {
	return _1c4b00453_SelectPackage(_self_.safe_ptr<_1c4aeeb28_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_1c4b2c837_Var> _1c4b765d9_FindVar_Lookup_1(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1c4b0080a_FindVar(_self_.safe_ptr<_1c4aeeb28_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1c4701230_TypeAlias> _1c4b76991_FindTypeAlias_Lookup_1(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1c4b00bb2_FindTypeAlias(_self_.safe_ptr<_1c4aeeb28_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1c4a86ebc_Struct> _1c4b76d48_FindStruct_Lookup_1(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1c4b01069_FindStruct(_self_.safe_ptr<_1c4aeeb28_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1c4ab22e4_Fn> _1c4b77200_FindFn_Lookup_1(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1c4b01421_FindFn(_self_.safe_ptr<_1c4aeeb28_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1c4ac306e_Trait> _1c4b7750d_FindTrait_Lookup_1(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _3328_ident) {
	return _1c4b0172e_FindTrait(_self_.safe_ptr<_1c4aeeb28_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_1c4ac5802_Enum> _1c4b7781b_FindEnum_Lookup_1(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _3727_ident) {
	return _1c4b01a3c_FindEnum(_self_.safe_ptr<_1c4aeeb28_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b77b29_FindTypeEnum_Lookup_1(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _4131_ident) {
	return _1c4b01d4a_FindTypeEnum(_self_.safe_ptr<_1c4aeeb28_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b75e24_FindPackage_Lookup_2(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _930_ident) {
	return _1c4b0305a_FindPackage(_self_.safe_ptr<_1c4b02a82_Package>(), _930_ident);
}
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b76232_SelectPackage_Lookup_2(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)> _1332_selector) {
	return _1c4b03368_SelectPackage(_self_.safe_ptr<_1c4b02a82_Package>(), _1332_selector);
}
inline jule::Ptr<_1c4b2c837_Var> _1c4b765d9_FindVar_Lookup_2(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1c4b03720_FindVar(_self_.safe_ptr<_1c4b02a82_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1c4701230_TypeAlias> _1c4b76991_FindTypeAlias_Lookup_2(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1c4b03ac7_FindTypeAlias(_self_.safe_ptr<_1c4b02a82_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1c4a86ebc_Struct> _1c4b76d48_FindStruct_Lookup_2(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1c4b03e7e_FindStruct(_self_.safe_ptr<_1c4b02a82_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1c4ab22e4_Fn> _1c4b77200_FindFn_Lookup_2(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1c4b04336_FindFn(_self_.safe_ptr<_1c4b02a82_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1c4ac306e_Trait> _1c4b7750d_FindTrait_Lookup_2(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _3328_ident) {
	return _1c4b04644_FindTrait(_self_.safe_ptr<_1c4b02a82_Package>(), _3328_ident);
}
inline jule::Ptr<_1c4ac5802_Enum> _1c4b7781b_FindEnum_Lookup_2(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _3727_ident) {
	return _1c4b04952_FindEnum(_self_.safe_ptr<_1c4b02a82_Package>(), _3727_ident);
}
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b77b29_FindTypeEnum_Lookup_2(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _4131_ident) {
	return _1c4b04c60_FindTypeEnum(_self_.safe_ptr<_1c4b02a82_Package>(), _4131_ident);
}
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b75e24_FindPackage_Lookup_3(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _930_ident) {
	return _1c4b08291_FindPackage(_self_.safe_ptr<_1c4b07c74_Sema>(), _930_ident);
}
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b76232_SelectPackage_Lookup_3(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)> _1332_selector) {
	return _1c4b0859e_SelectPackage(_self_.safe_ptr<_1c4b07c74_Sema>(), _1332_selector);
}
inline jule::Ptr<_1c4b2c837_Var> _1c4b765d9_FindVar_Lookup_3(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1c4b08956_FindVar(_self_.safe_ptr<_1c4b07c74_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1c4701230_TypeAlias> _1c4b76991_FindTypeAlias_Lookup_3(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1c4b08d0d_FindTypeAlias(_self_.safe_ptr<_1c4b07c74_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1c4a86ebc_Struct> _1c4b76d48_FindStruct_Lookup_3(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1c4b091b5_FindStruct(_self_.safe_ptr<_1c4b07c74_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1c4ab22e4_Fn> _1c4b77200_FindFn_Lookup_3(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1c4b0956c_FindFn(_self_.safe_ptr<_1c4b07c74_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1c4ac306e_Trait> _1c4b7750d_FindTrait_Lookup_3(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _3328_ident) {
	return _1c4b0987a_FindTrait(_self_.safe_ptr<_1c4b07c74_Sema>(), _3328_ident);
}
inline jule::Ptr<_1c4ac5802_Enum> _1c4b7781b_FindEnum_Lookup_3(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _3727_ident) {
	return _1c4b09b88_FindEnum(_self_.safe_ptr<_1c4b07c74_Sema>(), _3727_ident);
}
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b77b29_FindTypeEnum_Lookup_3(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _4131_ident) {
	return _1c4b09e96_FindTypeEnum(_self_.safe_ptr<_1c4b07c74_Sema>(), _4131_ident);
}
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b75e24_FindPackage_Lookup_4(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _930_ident) {
	return _1c45e260a_FindPackage(_self_.safe_ptr<_1c45e20dd_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b76232_SelectPackage_Lookup_4(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)> _1332_selector) {
	return _1c45e2918_SelectPackage(_self_.safe_ptr<_1c45e20dd_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_1c4b2c837_Var> _1c4b765d9_FindVar_Lookup_4(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1c45e2cc0_FindVar(_self_.safe_ptr<_1c45e20dd_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1c4701230_TypeAlias> _1c4b76991_FindTypeAlias_Lookup_4(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1c45e3177_FindTypeAlias(_self_.safe_ptr<_1c45e20dd_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1c4a86ebc_Struct> _1c4b76d48_FindStruct_Lookup_4(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1c45e352e_FindStruct(_self_.safe_ptr<_1c45e20dd_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1c4ab22e4_Fn> _1c4b77200_FindFn_Lookup_4(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1c45e38d6_FindFn(_self_.safe_ptr<_1c45e20dd_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1c4ac306e_Trait> _1c4b7750d_FindTrait_Lookup_4(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _3328_ident) {
	return _1c45e3be4_FindTrait(_self_.safe_ptr<_1c45e20dd_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_1c4ac5802_Enum> _1c4b7781b_FindEnum_Lookup_4(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _3727_ident) {
	return _1c45e4002_FindEnum(_self_.safe_ptr<_1c45e20dd_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b77b29_FindTypeEnum_Lookup_4(jule::Trait<_1c4b77c6c_Lookup> _self_, jule::Str _4131_ident) {
	return _1c45e4310_FindTypeEnum(_self_.safe_ptr<_1c45e20dd_SymbolTable>(), _4131_ident);
}
inline jule::Str _1ab2aa451_Name_CommonFlag_0(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adb93ed0_Name(_self_.safe_ptr<_1adb93be4_Flag>());
}
inline jule::I32 _1ab2aa583_Short_CommonFlag_0(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adb94387_Short(_self_.safe_ptr<_1adb93be4_Flag>());
}
inline jule::Str _1ab2aa6b5_What_CommonFlag_0(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adb94112_What(_self_.safe_ptr<_1adb93be4_Flag>());
}
inline void _1ab2aa7e7_Reset_CommonFlag_0(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	_1adb94244_Reset(_self_.safe_ptr<_1adb93be4_Flag>());
}
inline jule::Str _1ab2aa451_Name_CommonFlag_1(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adb973e0_Name(_self_.safe_ptr<_1adb97852_Flag>());
}
inline jule::I32 _1ab2aa583_Short_CommonFlag_1(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adb97da2_Short(_self_.safe_ptr<_1adb97852_Flag>());
}
inline jule::Str _1ab2aa6b5_What_CommonFlag_1(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adb97b3d_What(_self_.safe_ptr<_1adb97852_Flag>());
}
inline void _1ab2aa7e7_Reset_CommonFlag_1(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	_1adb97c70_Reset(_self_.safe_ptr<_1adb97852_Flag>());
}
inline jule::Str _1ab2aa451_Name_CommonFlag_2(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adb9aba7_Name(_self_.safe_ptr<_1adb9b119_Flag>());
}
inline jule::I32 _1ab2aa583_Short_CommonFlag_2(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adb9b669_Short(_self_.safe_ptr<_1adb9b119_Flag>());
}
inline jule::Str _1ab2aa6b5_What_CommonFlag_2(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adb9b405_What(_self_.safe_ptr<_1adb9b119_Flag>());
}
inline void _1ab2aa7e7_Reset_CommonFlag_2(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	_1adb9b537_Reset(_self_.safe_ptr<_1adb9b119_Flag>());
}
inline jule::Str _1ab2aa451_Name_CommonFlag_3(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adb9e4b3_Name(_self_.safe_ptr<_1adb9e925_Flag>());
}
inline jule::I32 _1ab2aa583_Short_CommonFlag_3(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adb9ee75_Short(_self_.safe_ptr<_1adb9e925_Flag>());
}
inline jule::Str _1ab2aa6b5_What_CommonFlag_3(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adb9ec11_What(_self_.safe_ptr<_1adb9e925_Flag>());
}
inline void _1ab2aa7e7_Reset_CommonFlag_3(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	_1adb9ed43_Reset(_self_.safe_ptr<_1adb9e925_Flag>());
}
inline jule::Str _1ab2aa451_Name_CommonFlag_4(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adba2c7a_Name(_self_.safe_ptr<_1adba31dc_Flag>());
}
inline jule::I32 _1ab2aa583_Short_CommonFlag_4(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adba373c_Short(_self_.safe_ptr<_1adba31dc_Flag>());
}
inline jule::Str _1ab2aa6b5_What_CommonFlag_4(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	return _1adba34c8_What(_self_.safe_ptr<_1adba31dc_Flag>());
}
inline void _1ab2aa7e7_Reset_CommonFlag_4(jule::Trait<_1ab2aa929_CommonFlag> _self_) {
	_1adba360a_Reset(_self_.safe_ptr<_1adba31dc_Flag>());
}


static _1c4aebe77_ImporterMptrData _1c4aebe77_Importer_mptr_data[] = {
	{
		._1c4aead99_SetModPath=_1c4aead99_SetModPath_Importer_0,
		._1c4aeb0db_GetModPath=_1c4aeb0db_GetModPath_Importer_0,
		._1c4aeb3e9_ModById=_1c4aeb3e9_ModById_Importer_0,
		._1c4aeb707_GetImport=_1c4aeb707_GetImport_Importer_0,
		._1c4aebaae_ImportPackage=_1c4aebaae_ImportPackage_Importer_0,
		._1c4aebd34_Imported=_1c4aebd34_Imported_Importer_0,
	},
};
static _1c46218c0_KindMptrData _1c46218c0_Kind_mptr_data[] = {
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_0,
		._1c462177c_Equal=_1c462177c_Equal_Kind_0,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_1,
		._1c462177c_Equal=_1c462177c_Equal_Kind_1,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_2,
		._1c462177c_Equal=_1c462177c_Equal_Kind_2,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_3,
		._1c462177c_Equal=_1c462177c_Equal_Kind_3,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_4,
		._1c462177c_Equal=_1c462177c_Equal_Kind_4,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_5,
		._1c462177c_Equal=_1c462177c_Equal_Kind_5,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_6,
		._1c462177c_Equal=_1c462177c_Equal_Kind_6,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_7,
		._1c462177c_Equal=_1c462177c_Equal_Kind_7,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_8,
		._1c462177c_Equal=_1c462177c_Equal_Kind_8,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_9,
		._1c462177c_Equal=_1c462177c_Equal_Kind_9,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_10,
		._1c462177c_Equal=_1c462177c_Equal_Kind_10,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_11,
		._1c462177c_Equal=_1c462177c_Equal_Kind_11,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_12,
		._1c462177c_Equal=_1c462177c_Equal_Kind_12,
	},
	{
		._1c47015b5_Str=_1c47015b5_Str_Kind_13,
		._1c462177c_Equal=_1c462177c_Equal_Kind_13,
	},
};
static _1c4b77c6c_LookupMptrData _1c4b77c6c_Lookup_mptr_data[] = {
	{
		._1c4b75e24_FindPackage=_1c4b75e24_FindPackage_Lookup_0,
		._1c4b76232_SelectPackage=_1c4b76232_SelectPackage_Lookup_0,
		._1c4b765d9_FindVar=_1c4b765d9_FindVar_Lookup_0,
		._1c4b76991_FindTypeAlias=_1c4b76991_FindTypeAlias_Lookup_0,
		._1c4b76d48_FindStruct=_1c4b76d48_FindStruct_Lookup_0,
		._1c4b77200_FindFn=_1c4b77200_FindFn_Lookup_0,
		._1c4b7750d_FindTrait=_1c4b7750d_FindTrait_Lookup_0,
		._1c4b7781b_FindEnum=_1c4b7781b_FindEnum_Lookup_0,
		._1c4b77b29_FindTypeEnum=_1c4b77b29_FindTypeEnum_Lookup_0,
	},
	{
		._1c4b75e24_FindPackage=_1c4b75e24_FindPackage_Lookup_1,
		._1c4b76232_SelectPackage=_1c4b76232_SelectPackage_Lookup_1,
		._1c4b765d9_FindVar=_1c4b765d9_FindVar_Lookup_1,
		._1c4b76991_FindTypeAlias=_1c4b76991_FindTypeAlias_Lookup_1,
		._1c4b76d48_FindStruct=_1c4b76d48_FindStruct_Lookup_1,
		._1c4b77200_FindFn=_1c4b77200_FindFn_Lookup_1,
		._1c4b7750d_FindTrait=_1c4b7750d_FindTrait_Lookup_1,
		._1c4b7781b_FindEnum=_1c4b7781b_FindEnum_Lookup_1,
		._1c4b77b29_FindTypeEnum=_1c4b77b29_FindTypeEnum_Lookup_1,
	},
	{
		._1c4b75e24_FindPackage=_1c4b75e24_FindPackage_Lookup_2,
		._1c4b76232_SelectPackage=_1c4b76232_SelectPackage_Lookup_2,
		._1c4b765d9_FindVar=_1c4b765d9_FindVar_Lookup_2,
		._1c4b76991_FindTypeAlias=_1c4b76991_FindTypeAlias_Lookup_2,
		._1c4b76d48_FindStruct=_1c4b76d48_FindStruct_Lookup_2,
		._1c4b77200_FindFn=_1c4b77200_FindFn_Lookup_2,
		._1c4b7750d_FindTrait=_1c4b7750d_FindTrait_Lookup_2,
		._1c4b7781b_FindEnum=_1c4b7781b_FindEnum_Lookup_2,
		._1c4b77b29_FindTypeEnum=_1c4b77b29_FindTypeEnum_Lookup_2,
	},
	{
		._1c4b75e24_FindPackage=_1c4b75e24_FindPackage_Lookup_3,
		._1c4b76232_SelectPackage=_1c4b76232_SelectPackage_Lookup_3,
		._1c4b765d9_FindVar=_1c4b765d9_FindVar_Lookup_3,
		._1c4b76991_FindTypeAlias=_1c4b76991_FindTypeAlias_Lookup_3,
		._1c4b76d48_FindStruct=_1c4b76d48_FindStruct_Lookup_3,
		._1c4b77200_FindFn=_1c4b77200_FindFn_Lookup_3,
		._1c4b7750d_FindTrait=_1c4b7750d_FindTrait_Lookup_3,
		._1c4b7781b_FindEnum=_1c4b7781b_FindEnum_Lookup_3,
		._1c4b77b29_FindTypeEnum=_1c4b77b29_FindTypeEnum_Lookup_3,
	},
	{
		._1c4b75e24_FindPackage=_1c4b75e24_FindPackage_Lookup_4,
		._1c4b76232_SelectPackage=_1c4b76232_SelectPackage_Lookup_4,
		._1c4b765d9_FindVar=_1c4b765d9_FindVar_Lookup_4,
		._1c4b76991_FindTypeAlias=_1c4b76991_FindTypeAlias_Lookup_4,
		._1c4b76d48_FindStruct=_1c4b76d48_FindStruct_Lookup_4,
		._1c4b77200_FindFn=_1c4b77200_FindFn_Lookup_4,
		._1c4b7750d_FindTrait=_1c4b7750d_FindTrait_Lookup_4,
		._1c4b7781b_FindEnum=_1c4b7781b_FindEnum_Lookup_4,
		._1c4b77b29_FindTypeEnum=_1c4b77b29_FindTypeEnum_Lookup_4,
	},
};
static _1ab2aa929_CommonFlagMptrData _1ab2aa929_CommonFlag_mptr_data[] = {
	{
		._1ab2aa451_Name=_1ab2aa451_Name_CommonFlag_0,
		._1ab2aa583_Short=_1ab2aa583_Short_CommonFlag_0,
		._1ab2aa6b5_What=_1ab2aa6b5_What_CommonFlag_0,
		._1ab2aa7e7_Reset=_1ab2aa7e7_Reset_CommonFlag_0,
	},
	{
		._1ab2aa451_Name=_1ab2aa451_Name_CommonFlag_1,
		._1ab2aa583_Short=_1ab2aa583_Short_CommonFlag_1,
		._1ab2aa6b5_What=_1ab2aa6b5_What_CommonFlag_1,
		._1ab2aa7e7_Reset=_1ab2aa7e7_Reset_CommonFlag_1,
	},
	{
		._1ab2aa451_Name=_1ab2aa451_Name_CommonFlag_2,
		._1ab2aa583_Short=_1ab2aa583_Short_CommonFlag_2,
		._1ab2aa6b5_What=_1ab2aa6b5_What_CommonFlag_2,
		._1ab2aa7e7_Reset=_1ab2aa7e7_Reset_CommonFlag_2,
	},
	{
		._1ab2aa451_Name=_1ab2aa451_Name_CommonFlag_3,
		._1ab2aa583_Short=_1ab2aa583_Short_CommonFlag_3,
		._1ab2aa6b5_What=_1ab2aa6b5_What_CommonFlag_3,
		._1ab2aa7e7_Reset=_1ab2aa7e7_Reset_CommonFlag_3,
	},
	{
		._1ab2aa451_Name=_1ab2aa451_Name_CommonFlag_4,
		._1ab2aa583_Short=_1ab2aa583_Short_CommonFlag_4,
		._1ab2aa6b5_What=_1ab2aa6b5_What_CommonFlag_4,
		._1ab2aa7e7_Reset=_1ab2aa7e7_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab39ee_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1c4ab39ee_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4b2c837_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1c4b2c837_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aab255_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1c4aab255_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ac306e_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1c4ac306e_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aaa331_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1c4aaa331_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa5606_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1c4aa5606_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa9550_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1c4aa9550_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa0cb6_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1c4aa0cb6_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa9c26_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1c4aa9c26_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa1c95_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1c4aa1c95_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa798d_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1c4aa798d_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa8a9e_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1c4aa8a9e_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a8e8ed_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1c4a8e8ed_IdentTypeDecl> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad3b0c_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1c4ad3b0c_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad13bd_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1c4ad13bd_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab10a1_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1c4ab10a1_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c45e6e17_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1c45e6e17_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab1a41_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1c4ab1a41_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab037a_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1c4ab037a_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aae8da_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1c4aae8da_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aae511_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1c4aae511_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aae6ed_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1c4aae6ed_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aaecb4_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1c4aaecb4_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aaeea1_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1c4aaeea1_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab0db4_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1c4ab0db4_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aad653_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1c4aad653_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab1c2d_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1c4ab1c2d_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aac5ec_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1c4aac5ec_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad1e29_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1c4ad1e29_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad2215_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1c4ad2215_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa3082_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1c4aa3082_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad2688_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1c4ad2688_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa3923_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1c4aa3923_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad306d_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1c4ad306d_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad3469_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1c4ad3469_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad3de8_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1c4ad3de8_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad42a0_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1c4ad42a0_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad4723_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1c4ad4723_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aac9c6_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1c4aac9c6_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad4aca_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1c4ad4aca_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c25bc4e9_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1c25bc4e9_Const> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad5119_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1c4ad5119_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad6219_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1c4ad6219_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad3821_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1c4ad3821_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ad658d_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1c4ad658d_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a9e2c0_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1c4a9e2c0_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a93858_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1c4a93858_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa4e30_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1c4aa4e30_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa27ac_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1c4aa27ac_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa4182_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1c4aa4182_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a9b9d7_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1c4a9b9d7_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a9bd8e_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1c4a9bd8e_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a9ccc4_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1c4a9ccc4_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa6250_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1c4aa6250_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a9c17a_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1c4a9c17a_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa3cca_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1c4aa3cca_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aa214c_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1c4aa214c_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a941e9_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1c4a941e9_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab22e4_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1c4ab22e4_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a86ebc_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1c4a86ebc_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4701230_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1c4701230_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ac5802_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1c4ac5802_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ac6dec_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1c4ac6dec_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aad466_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1c4aad466_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aad884_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1c4aad884_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aade4a_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1c4aade4a_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aae137_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1c4aae137_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aabb5c_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1c4aabb5c_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type75_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type75_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=__jule_any_type75_eq, .to_str=__jule_any_type75_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type75 && __jule_any_type75_eq(any.data.alloc, (void*)&other); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a91845_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1c4a91845_ArrTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a90adb_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1c4a90adb_SlcTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a911b3_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1c4a911b3_PtrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a906e0_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1c4a906e0_SptrTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a92093_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1c4a92093_MapTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a90dc7_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1c4a90dc7_TupleTypeDecl> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a960ca_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1c4a960ca_VariadicExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aac7d9_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1c4aac7d9_SliceExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a982b9_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1c4a982b9_FieldExprPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a99760_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1c4a99760_KeyValPair> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a95519_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1c4a95519_IdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a944d5_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1c4a944d5_TupleExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aae324_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1c4aae324_TupleExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab1667_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1c4ab1667_RuneExprModel> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4621d32_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1c4621d32_TypeKind> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aadc5d_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1c4aadc5d_ArrayExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a96cac_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1c4a96cac_SubIdentExpr> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a9004c_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1c4a9004c_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a95c23_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1c4a95c23_UnaryExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a8e337_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1c4a8e337_TypeDecl> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a96839_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1c4a96839_NsSelectionExpr> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a90404_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1c4a90404_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aad279_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1c4aad279_SlicingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type99_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type99_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=__jule_any_type99_eq, .to_str=__jule_any_type99_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type99 && __jule_any_type99_eq(any.data.alloc, (void*)&other); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aac410_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1c4aac410_CastingExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a99e47_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1c4a99e47_SliceExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aac036_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1c4aac036_StructLitExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aada71_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1c4aada71_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aad08c_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1c4aad08c_MapExprModel> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aacbb3_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1c4aacbb3_AnonFnExprModel> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a93b44_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1c4a93b44_RangeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a9488c_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1c4a9488c_LitExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a95096_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1c4a95096_UnsafeExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a9a7b6_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1c4a9a7b6_IndexingExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a9adc1_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1c4a9adc1_SlicingExpr> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a96482_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1c4a96482_CastExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a98a17_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1c4a98a17_StructLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a9783a_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1c4a9783a_FnCallExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a98e8a_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1c4a98e8a_BraceLit> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a97230_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1c4a97230_BinopExpr> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type116_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type116_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=__jule_any_type116_eq, .to_str=__jule_any_type116_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type116 && __jule_any_type116_eq(any.data.alloc, (void*)&other); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aab970_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1c4aab970_BinopExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aac223_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1c4aac223_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4aaeac7_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1c4aaeac7_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab018d_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1c4ab018d_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab0567_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1c4ab0567_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab0754_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1c4ab0754_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab128d_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1c4ab128d_SizeofExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab147a_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1c4ab147a_AlignofExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4ab1854_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1c4ab1854_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c1e2756e_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1c1e2756e_MutSlicingExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c1e0ec4e_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1c1e0ec4e_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48999a0_StrAppendExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1c48999a0_StrAppendExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c1dc96db_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1c1dc96db_PushToSliceExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c1e783a0_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1c1e783a0_StrCompExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c1deca1c_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1c1deca1c_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48a5deb_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1c48a5deb_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
void __jule_any_type138_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_any_type138_dealloc, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
void __jule_any_type139_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_any_type139_dealloc, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
void __jule_any_type140_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type140_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_any_type140_dealloc, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type140_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type140 && __jule_any_type140_eq(any.data.alloc, (void*)&other); }
void __jule_any_type141_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type141_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_any_type141_dealloc, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type141_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type141 && __jule_any_type141_eq(any.data.alloc, (void*)&other); }
void __jule_any_type142_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type142_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_any_type142_dealloc, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
jule::Bool __jule_any_type142_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type142 && __jule_any_type142_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _1c22023d7_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1a9d31b11_OutDir = jule::Str("dist", 4);
jule::Str _1ab289045_OutName = jule::Str("ir.cpp", 6);
jule::Str _1ab2a2019_Out = jule::Str();
jule::Str _2037ba70a_Compiler = jule::Str();
jule::Str _2037ba92a_CompilerPath = jule::Str();
jule::Str _2037bab4a_CppStd = jule::Str("cpp17", 5);
jule::Bool _2037bad6a_Shadowing = false;
jule::Bool _2037bb08a_Transpilation = false;
jule::Bool _2037bb2aa_Test = false;
jule::Bool _2037bb552_RC = true;
jule::Bool _2037bb92b_Safety = true;
jule::Bool _2037bbbe5_Production = false;
jule::Uintptr _2055513c3_STDIN = _205551b87_GetStdHandle(static_cast<jule::Uintptr>(4294967286LLU));
jule::Uintptr _20555168c_STDOUT = _205551b87_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));
jule::Uintptr _205551923_STDERR = _205551b87_GetStdHandle(static_cast<jule::Uintptr>(4294967284LLU));
jule::Array<jule::U8,256> _1d9dd2027_first = jule::Array<jule::U8,256>({});
jule::Array<_1d9dd25aa_acceptRange,16> _1d9dd28b8_acceptRanges = jule::Array<_1d9dd25aa_acceptRange,16>({_1d9dd25aa_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1d9dd25aa_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1d9dd25aa_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1d9dd25aa_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1d9dd25aa_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_1c216cebd_RangeTable> _1c210389e__L = jule::new_ptr<_1c216cebd_RangeTable>(_1c216cebd_RangeTable{._field_R16=jule::Slice<_1c216c5c7_Range16>::make({_1c216c5c7_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1c216c5c7_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1c216c5c7_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1c216c5c7_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1c216c5c7_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1c216c5c7_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1c216c5c7_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1c216c5c7_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1c216c5c7_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1c216c5c7_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1c216c5c7_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1c216c5c7_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1c216c5c7_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1c216c5c7_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1c216c5c7_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1c216c5c7_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1c216c5c7_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1c216c5c7_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1c216c5c7_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1c216c5c7_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1c216c5c7_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1c216c5c7_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1c216c5c7_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1c216c5c7_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1c216c5c7_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1c216c5c7_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1c216c5c7_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1c216c5c7_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1c216c5c7_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1c216c5c7_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1c216c5c7_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1c216c5c7_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1c216c5c7_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1c216c5c7_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1c216c5c7_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1c216c5c7_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1c216c5c7_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1c216c5c7_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1c216c5c7_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1c216c5c7_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1c216c5c7_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1c216c5c7_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1c216c5c7_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1c216c5c7_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1c216c5c7_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1c216c5c7_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1c216c5c7_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1c216c5c7_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1c216c5c7_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1c216c5c7_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1c216c5c7_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1c216c5c7_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1c216c5c7_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1c216c5c7_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1c216c5c7_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1c216c5c7_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1c216c5c7_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1c216c5c7_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1c216c5c7_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1c216c5c7_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1c216ca4a_Range32>::make({_1c216ca4a_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1c216ca4a_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1c216ca4a_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1c216ca4a_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1c216ca4a_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1c216ca4a_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1c216ca4a_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1c216ca4a_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1c216ca4a_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1c216ca4a_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1c216ca4a_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1c216ca4a_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1c216ca4a_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1c216ca4a_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1c216ca4a_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1c216ca4a_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1c216ca4a_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1c216ca4a_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1c216ca4a_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1c216ca4a_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1c216ca4a_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1c216ca4a_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1c216ca4a_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1c216ca4a_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1c216ca4a_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1c216ca4a_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1c216ca4a_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1c216ca4a_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1c216ca4a_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1c216ca4a_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1c216ca4a_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1c216cebd_RangeTable> _1c210488e__LU = jule::new_ptr<_1c216cebd_RangeTable>(_1c216cebd_RangeTable{._field_R16=jule::Slice<_1c216c5c7_Range16>::make({_1c216c5c7_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1c216c5c7_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1c216c5c7_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1c216c5c7_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1c216c5c7_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1c216c5c7_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1c216c5c7_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1c216c5c7_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1c216c5c7_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1c216c5c7_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1c216c5c7_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1c216c5c7_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1c216c5c7_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1c216c5c7_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1c216c5c7_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1c216c5c7_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1c216c5c7_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1c216ca4a_Range32>::make({_1c216ca4a_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1c216ca4a_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1c216ca4a_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1c216ca4a_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1c216ca4a_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1c216ca4a_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1c216ca4a_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _1c2166934__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _203805415_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1c22117c0_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1c221341a_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _1c222ac6d_PathStdlib = jule::Str();
jule::Str _1c224a8a3_PathExec = jule::Str();
jule::Str _1c224b695_PathWd = jule::Str();
jule::Str _1c224b80a_PathApi = jule::Str();
jule::Str _1c2269a9d_Os = jule::Str("windows", 7);
jule::Str _1c226b033_Arch = jule::Str("i386", 4);
jule::Array<jule::I32,5> _20397e979_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _20397ec76_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _2039800b7_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _2039806b1_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _2039809ad_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_20398d59d_kindPair,47> _20398d9cc_keywords = jule::Array<_20398d59d_kindPair,47>({_20398d59d_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U32>(1LLU)},_20398d59d_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U32>(6LLU)},_20398d59d_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U32>(6LLU)},_20398d59d_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U32>(6LLU)},_20398d59d_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U32>(9LLU)},_20398d59d_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U32>(4LLU)},_20398d59d_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U32>(10LLU)},_20398d59d_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U32>(12LLU)},_20398d59d_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U32>(13LLU)},_20398d59d_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U32>(14LLU)},_20398d59d_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U32>(15LLU)},_20398d59d_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U32>(16LLU)},_20398d59d_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U32>(17LLU)},_20398d59d_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U32>(19LLU)},_20398d59d_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U32>(21LLU)},_20398d59d_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U32>(23LLU)},_20398d59d_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U32>(24LLU)},_20398d59d_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U32>(25LLU)},_20398d59d_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U32>(26LLU)},_20398d59d_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U32>(27LLU)},_20398d59d_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U32>(28LLU)},_20398d59d_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U32>(29LLU)},_20398d59d_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U32>(30LLU)},_20398d59d_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U32>(31LLU)},_20398d59d_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U32>(32LLU)},_20398d59d_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U32>(33LLU)},_20398d59d_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U32>(34LLU)},_20398d59d_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U32>(35LLU)},_20398d59d_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U32>(36LLU)},_20398d59d_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U32>(37LLU)},_20398d59d_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U32>(39LLU)},_20398d59d_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U32>(40LLU)}});
jule::Array<_20398d59d_kindPair,39> _20398dd1d_basicOps = jule::Array<_20398d59d_kindPair,39>({_20398d59d_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U32>(22LLU)},_20398d59d_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U32>(11LLU)},_20398d59d_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U32>(5LLU)},_20398d59d_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U32>(8LLU)},_20398d59d_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U32>(20LLU)},_20398d59d_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U32>(7LLU)},_20398d59d_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U32>(38LLU)}});
jule::Array<jule::U8,32> _1c312eab6__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1c313017c__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1c2c4dcbd_floatInfo _1c2aa6d79_f32info = _1c2c4dcbd_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1c2c4dcbd_floatInfo _1c2aa72db_f64info = _1c2c4dcbd_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1c2c50e35_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I32> _1c2d0c3cb_powtab = jule::Slice<jule::I32>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1c2da49a1_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1c2dc287b_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1c2e504b9_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1c31725dc_leftCheat> _1c303e8e9_leftCheats = jule::Slice<_1c31725dc_leftCheat>::make({_1c31725dc_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1c31725dc_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1c31725dc_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1c31725dc_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1c31725dc_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1c31725dc_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1c31725dc_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1c31725dc_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1c31725dc_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1c31725dc_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1c31725dc_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1c31725dc_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1c31725dc_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1c31725dc_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1c31725dc_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1c31725dc_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1c31725dc_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1c31725dc_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1c31725dc_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1c31725dc_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1c31725dc_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1c31725dc_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1c31725dc_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1c31725dc_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1c31725dc_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1c31725dc_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1c31725dc_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1c31725dc_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1c31725dc_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1c31725dc_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1c31725dc_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1c31725dc_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1c31725dc_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1c31725dc_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1c31725dc_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1c31725dc_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1c31725dc_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1c31725dc_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1c31725dc_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1c31725dc_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1c31725dc_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1c31725dc_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1c31725dc_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1c31725dc_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1c31725dc_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1c31725dc_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1c31725dc_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1c31725dc_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1c31725dc_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1c31725dc_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1c31725dc_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1c31725dc_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1c31725dc_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1c31725dc_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1c31725dc_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1c31725dc_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1c31725dc_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1c31725dc_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1c31725dc_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1c31725dc_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1c31725dc_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I32 _1c263ebcb_BitSize = 0LL;
jule::Str _1c264154b_SysInt = jule::Str();
jule::Str _1c268ca81_SysUint = jule::Str();
jule::Slice<jule::Str> _1c4ac8b68_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1c1dca19d_Copy = false;
jule::Bool _1c1dcc47a_Deadcode = false;
jule::Bool _1c1de8782_Append = false;
jule::Bool _1c1de97a5_Math = false;
jule::Bool _1c1dea7c8_Access = false;
jule::Bool _1c1deb7eb_Inline = false;
jule::Bool _1c1dec81e_Ptr = false;
jule::Bool _1c1dee986_Cond = false;
jule::Bool _1c1e009a9_Str = false;
jule::Bool _1a9b52778_exprEnabled = false;
jule::Bool _1a9b533e4_scopeEnabled = false;
jule::Array<jule::U64,12> _1ab26452b_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1ab1ae5b9_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_1c216cebd_RangeTable> _1c2112094_Upper = _1c210488e__LU;
jule::Ptr<_1c216cebd_RangeTable> _1c210aa3d_Letter = _1c210389e__L;





std::ostream &operator<<(std::ostream &_Stream, _1d9dd25aa_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c216c5c7_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c216ca4a_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c216cebd_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1c2192861_index(_1c21923dd_lazyBuff* _self_, jule::I32 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _1c2192ad6_append(_1c21923dd_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1c2192d4a_string(_1c21923dd_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1c21923dd_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _205567a7c_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_205567a7c_DirEntry>>> static__1c219515a_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_205567a7c_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _1613_utf16Path = _20551b0d5_Utf16FromStr(_1c2193a4e_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str("*", 1)})));;
	WIN32_FIND_DATAW _1717_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _1813_handle = _205555581_FindFirstFile((&(_1613_utf16Path[0LL])), (&(_1717_data)));;
	if ((_1813_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_205567a7c_DirEntry>>>(jule::Any(), __jule_func_result);;
	};
	for (;;) {
		{
			jule::Ptr<_205567a7c_DirEntry> _2321_entry = jule::new_ptr<_205567a7c_DirEntry>(_205567a7c_DirEntry{._field_Name=_20551a0b2_U16PtrToStr(((jule::U16*)(_1717_data.cFileName))), });;
			_2321_entry.get()._field_Stat=({
				auto except = static__1c2195e08_Of(_1c2193a4e_Join(jule::Slice<jule::Str>::make({_1520_path,_2321_entry.get()._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_205567a7c_DirEntry>>>(except.error);
				} jule::Ptr<_2055752a4_Status>(nullptr);});
			});
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(_2321_entry);;
			if ((_2055558c2_FindNextFile(_1813_handle, (&(_1717_data))) == 0LL)) {
				goto _iter_end_1abaeb599;
			};
		}
	_iter_next_1abaeb599:;
	}
	_iter_end_1abaeb599:;;
	_205555b69_FindClose(_1813_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_205567a7c_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__1c219528c_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _4413_utf16Path = _20551b0d5_Utf16FromStr(_3922_path);;
	if ((!(_205553480_CreateDirectory((&(_4413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_2054a6bec_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1c219548a_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _5413_utf16Path = _20551b0d5_Utf16FromStr(_5322_path);;
	if ((!(_205553727_RemoveDirectory((&(_5413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_2054a6bec_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _205567c69_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_205572c1e_File> static__2055730c6_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_205572c1e_File>(_205572c1e_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_205572c1e_File>> static__20557336d_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_205572c1e_File>>(jule::Any(), ({
		auto except = static__2055da083_Open(_5622_path, static_cast<jule::I32>(770LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_205572c1e_File>>(except.error);
		} jule::Ptr<_205572c1e_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__205573615_Read(jule::Str _6820_path) {
	jule::Ptr<_2055752a4_Status> _6913_s = ({
		auto except = static__1c2195e08_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2055752a4_Status>(nullptr);});
	});;
	if ((!(_205575925_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0));
	};
	if ((_205575b89_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_205572c1e_File> _7917_f = ({
		auto except = static__2055da083_Open(_6820_path, static_cast<jule::I32>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_205572c1e_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _20557476a_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I32>(_205575b89_Size(_6913_s.ptr())), static_cast<jule::I32>(_205575b89_Size(_6913_s.ptr())), 0);;
	jule::I32 _8313_n = ({
		auto except = _1d9dbed6c_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__205573967_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I32 _9246_perm) {
	jule::Ptr<_205572c1e_File> _9317_f = ({
		auto except = static__2055da083_Open(_9221_path, static_cast<jule::I32>(769LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_205572c1e_File>(nullptr);});
	});;
	({
		auto except = _1d9d958e2_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _20557476a_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__205573cb9_WriteStr(jule::Str _9924_path, jule::Str* _9936_data, jule::I32 _9947_perm) {
	({
		auto except = static__205573967_Write(_9924_path, _20556c268_Stobs(_9936_data), _9947_perm);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _205574281_Seek(_205572c1e_File* _self_, jule::I32 _11123_offset, jule::I32 _11136_origin) {
	jule::I32 _11213_pos = _205557693_Seek(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), _11123_offset, static_cast<jule::I32>(_11136_origin));;
	if ((_11213_pos == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_2054a6bec_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I32>(jule::Any(), _11213_pos);;
}



inline jule::Exceptional<jule::I32> _20557458e_WriteStr(_205572c1e_File* _self_, jule::Str* _12028_data) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result = static_cast<jule::I32>(({
		auto except = _1d9d958e2_Write(_self_, _20556c268_Stobs(_12028_data));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I32>(except.error);
		} 0;});
	}));
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional _20557476a_Close(_205572c1e_File* _self_) {
	if ((_205557e02_Close(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_2054a6bec_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_205572c1e_File>> static__2055da083_Open(jule::Str _2120_path, jule::I32 _2131_flag, jule::I32 _2144_mode) {
	jule::Slice<jule::U16> _2213_utf16Path = _20551b0d5_Utf16FromStr(_2120_path);;
	jule::I32 _2313_handle = _20555265a_Wopen((&(_2213_utf16Path[0LL])), static_cast<jule::I32>(_2131_flag), _2144_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_205572c1e_File>>(jule::Any(_2054a6bec_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_205572c1e_File>>(jule::Any(), static__2055730c6_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));;
}



inline jule::VoidExceptional static__1d9d9da2c_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _3513_utf16Path = _20551b0d5_Utf16FromStr(_3422_path);;
	if ((!(_2055531d8_DeleteFile((&(_3513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_2054a6bec_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _1d9d958e2_Write(_205572c1e_File* _self_, jule::Slice<jule::U8> _4924_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_4924_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	if (_2055d9868_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16Buff = _20551b0d5_Utf16FromStr(static_cast<jule::Str>(_4924_buff));;
		jule::Bool _5617_ok = _205554aad_WriteConsole((*(_self_))._field_handle, (&(_5517_utf16Buff[0LL])), static_cast<jule::I32>(_5517_utf16Buff.len()), &(__jule_func_result), nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I32>(jule::Any(_2054a6bec_getLastFsError(), &__jule_any_type0));
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_2055582dc_Write(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_4924_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_4924_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_2054a6bec_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I32> _1d9dbed6c_Read(_205572c1e_File* _self_, jule::Slice<jule::U8> _7927_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_7927_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	if (_2055d9868_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8521_codepage = jule::Slice<jule::U16>::alloc(_7927_buff.len(), _7927_buff.len(), 0);;
		jule::Bool _8617_ok = _205555042_ReadConsole((*(_self_))._field_handle, (&(_8521_codepage[0LL])), static_cast<jule::I32>(_7927_buff.len()), &(__jule_func_result));;
		if ((!(_8617_ok))) {
			return jule::Exceptional<jule::I32>(jule::Any(_2054a6bec_getLastFsError(), &__jule_any_type0));
		};
		jule::Slice<jule::I32> _9117_runes = _205530209_Decode(_8521_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9117_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abb1d038:;
			if (it != expr_end) {
				jule::I32 *_9320_r = it;
				{
					jule::I32 _9421_size = _1d9dd3c4e_RuneLen((*(_9320_r)));;
					if (((__jule_func_result + _9421_size) > _7927_buff.len())) {
						goto _iter_end_1abb1d038;
					};
					_1d9dd416c_EncodeRune(_7927_buff.slice(__jule_func_result), (*(_9320_r)));
					__jule_func_result+=_9421_size;
				}
				_iter_next_1abb1d038:;
				++it;
				goto _iter_begin_1abb1d038;
			}
			_iter_end_1abb1d038:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_205557a7d_Read(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_7927_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_7927_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_2054a6bec_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}







std::ostream &operator<<(std::ostream &_Stream, _205572c1e_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2055756b1_IsDir(_2055752a4_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _205575925_IsReg(_2055752a4_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _205575b89_Size(_2055752a4_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_2055752a4_Status>> static__1c2195e08_Of(jule::Str _1218_path) {
	if (_1218_path.empty()) {
		return jule::Exceptional<jule::Ptr<_2055752a4_Status>>(jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0));
	};
	jule::Slice<jule::U16> _1613_utf16Path = _20551b0d5_Utf16FromStr(_1218_path);;
	struct _stat _1717_handle = (struct _stat){};;
	jule::I32 _1813_code = _205552270_Wstat((&(_1613_utf16Path[0LL])), (&(_1717_handle)));;
	if ((_1813_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2055752a4_Status>>(jule::Any(_2054a6bec_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_2055752a4_Status> _2217_stat = jule::new_ptr<_2055752a4_Status>();;
	_2217_stat.get()._field_size=_1717_handle.st_size;
	if (((_1717_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_1717_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_2055752a4_Status>>(jule::Any(), _2217_stat);;
}







std::ostream &operator<<(std::ostream &_Stream, _2055752a4_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c22b0880_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2220900_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _203986563_Prec(_2039861ab_Token* _self_) {
	if (((*(_self_))._field_Id != static_cast<jule::U32>(7LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1abbe4a8d:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1abbe4b04:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1abbe44a5:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1abbe452c:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1abbe45a4:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1abbe42a7:;
			{
				return 0LLU;;
			}
		}
		_match_end_1abbe3718:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2039861ab_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20398b953_IsOk(_20398b546_File* _self_) {
	({
		auto except = static__1c2195e08_Of((*(_self_))._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} jule::Ptr<_2055752a4_Status>(nullptr);});
	});
	return true;;
}



inline void _20398bbc8_Fill(_20398b546_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*(_self_))._field_Data=_2327_data;
}



inline jule::Str _20398be3c_Dir(_20398b546_File* _self_) {
	return _1c21946a9_Dir((*(_self_))._field_Path);;
}



inline jule::Str _20398c1a1_Name(_20398b546_File* _self_) {
	return _1c2194335_Base((*(_self_))._field_Path);;
}



inline jule::Uintptr _20398c415_Addr(_20398b546_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*(_self_)))))));;
}



inline jule::Str _20398c723_GetRow(_20398b546_File* _self_, jule::I32 _4421_row) {
	jule::I32 _4517_n = 0LL;;
	jule::I32 _4617_lineStart = 0LL;;
	jule::I32 _4717_i = 0LL;;
	for (; (_4717_i < (*(_self_))._field_Data.len()); (_4717_i)++) {
		{
			if (((*(_self_))._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1abbe95ed;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4617_lineStart, _4717_i));;
			};
			_4617_lineStart=static_cast<jule::I32>((_4717_i + 1LL));
		}
	_iter_next_1abbe95ed:;
	}
	_iter_end_1abbe95ed:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _20398b546_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20398d59d_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _2039946a3_pushErr(_20399410e_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_20398e318_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _45826_fmt, _45839_args));;
}



inline void _2039949c2_pushErrTok(_20399410e_lex* _self_, jule::Ptr<_2039861ab_Token>* _46330_token, jule::Str _46345_fmt) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_20398e318_makeErr((*(_46330_token)).get()._field_Row, (*(_46330_token)).get()._field_Column, &((*(_self_))._field_file), _46345_fmt, jule::Slice<jule::Any>()));;
}



inline void _203994b9d_lex(_20399410e_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_203996ba0_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_2039861ab_Token> _47321_token = _203998025_token(_self_);;
			if ((_47321_token.get()._field_Id != static_cast<jule::U32>(0LLU))) {
				(*(_self_))._field_tokens = jule::alloc_for_append((*(_self_))._field_tokens,1);(*(_self_))._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1abc2ccb3:;
	}
	_iter_end_1abc2ccb3:;;
}



inline jule::Str _203994eab_id(_20399410e_lex* _self_, jule::Slice<jule::U8>* _48222_ln) {
	if (((*(_48222_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _48614_r = 0;;
	jule::I32 _48621_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3149_DecodeRune((*(_48222_ln)));
		_48614_r = __jule_assign_result.__jule_result_arg0;
		_48621_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_48614_r != '_') && (!(_203989687_IsLetter(_48614_r))))) {
		return jule::Str();;
	};
	while ((_48621_i < (*(_48222_ln)).len())) {
		{
			jule::I32 _49218_pr = 0;;
			jule::I32 _49222_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3149_DecodeRune((*(_48222_ln)).slice(_48621_i));
				_49218_pr = __jule_assign_result.__jule_result_arg0;
				_49222_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_49218_pr != '_') && (!(_203989bc6_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_203989687_IsLetter(_49218_pr))))) {
				(*(_self_))._field_pos+=_48621_i;
				return static_cast<jule::Str>((*(_48222_ln)).slice(0LL, _48621_i));;
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1abc3104c:;
	}
	_iter_end_1abc3104c:;;
	(*(_self_))._field_pos+=(*(_48222_ln)).len();
	return static_cast<jule::Str>((*(_48222_ln)));;
}



inline jule::Slice<jule::U8> _203995220_resume(_20399410e_lex* _self_) {
	jule::I32 _50717_i = (*(_self_))._field_pos;;
	for (; (_50717_i < (*(_self_))._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_50717_i]);;
			if (_203989236_IsSpace(_50917_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1abc3597a:;
						{
							_203996ba0_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1abc3545d:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1abc30eb4:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1abc3533c:;
				};
				goto _iter_next_1abc33b76;
			};
			jule::I32 _52421_j = _50717_i;;
			for (; (_52421_j < (*(_self_))._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1abc34759;
					};
				}
			_iter_next_1abc34759:;
			}
			_iter_end_1abc34759:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_50717_i, _52421_j);;
		}
	_iter_next_1abc33b76:;
	}
	_iter_end_1abc33b76:;;
	return nullptr;;
}



inline void _203995495_lexLineComment(_20399410e_lex* _self_, jule::Ptr<_2039861ab_Token>* _53538_token) {
	jule::I32 _53613_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53917_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1abc38153;
			};
		}
	_iter_next_1abc38153:;
	}
	_iter_end_1abc38153:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*(_53538_token)).get()._field_Id=static_cast<jule::U32>(18LLU);
		(*(_53538_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_53613_start, (*(_self_))._field_pos));
	};
}



inline void _20399571a_lexRangeComment(_20399410e_lex* _self_, jule::Ptr<_2039861ab_Token>* _55039_token) {
	jule::I32 _55113_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _55417_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1abc3b453;
			};
			if ((_55417_r == '\n')) {
				_203996ba0_newLine(_self_);
				goto _iter_next_1abc3b453;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*(_55039_token)).get()._field_Id=static_cast<jule::U32>(18LLU);
					(*(_55039_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_55113_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1abc3b453:;
	}
	_iter_end_1abc3b453:;;
	_2039946a3_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _203995a28_num(_20399410e_lex* _self_, jule::Slice<jule::U8>* _57823_txt) {
	jule::Str __jule_func_result;
	if (((*(_57823_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_203992b35_hexNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_20399288d_octalNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_2039912d7_binaryNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_203991040_commonNum(_57823_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _203995d36_escapeSeq(_20399410e_lex* _self_, jule::Slice<jule::U8>* _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if (((*(_60029_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_60029_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1abc4b056:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_60029_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1abc4acae:;
			{
				_60117_seq=_20399321d_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1abc4ad25:;
			{
				_60117_seq=_2039934d7_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1abc4ad8b:;
			{
				_60117_seq=_203993691_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1abc45605:;
			{
				_60117_seq=_203993927_byteEscape(_60029_txt);
			}
		}
		_match_end_1abc45c43:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*(_self_))._field_pos)++;
		_2039946a3_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_60117_seq.len();
	return _60117_seq;;
}



inline jule::Str _2039961dd_getRune(_20399410e_lex* _self_, jule::Slice<jule::U8>* _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && ((*(_63027_txt))[0LL] == '\\'))) {
		return _203995d36_escapeSeq(_self_, _63027_txt);;
	};
	jule::I32 _63414_r = 0;;
	jule::I32 _63417_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3149_DecodeRune((*(_63027_txt)));
		_63414_r = __jule_assign_result.__jule_result_arg0;
		_63417_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);;
}



inline jule::Str _2039964eb_lexRune(_20399410e_lex* _self_, jule::Slice<jule::U8>* _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I32 _64217_n = 0LL;;
	jule::I32 _64317_i = 1LL;;
	for (; (_64317_i < (*(_63927_txt)).len()); (_64317_i)++) {
		{
			if (((*(_63927_txt))[_64317_i] == '\r')) {
				goto _iter_next_1abc52007;
			};
			if (((*(_63927_txt))[_64317_i] == '\n')) {
				_2039946a3_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_203996ba0_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _65517_part = (*(_63927_txt)).slice(_64317_i);;
			jule::Str _65617_r = _2039961dd_getRune(_self_, &(_65517_part), false);;
			_64017_run+=_65617_r;
			(*(_self_))._field_column+=_1d9dd4d3d_RuneCountStr(_65617_r);
			if (_65617_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1abc52007;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1abc52007:;
	}
	_iter_end_1abc52007:;;
	if ((_64217_n == 0LL)) {
		_2039946a3_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_2039946a3_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _64017_run;;
}



inline jule::Str _203996760_lexStr(_20399410e_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	(_67917_s).append(_68013_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1abc5876c;
			};
			if ((_68717_ch == '\n')) {
				_203996ba0_newLine(_self_);
				if ((!(_68213_raw))) {
					_2039946a3_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69921_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _70017_r = _2039961dd_getRune(_self_, &(_69921_part), _68213_raw);;
			_67917_s+=_70017_r;
			(*(_self_))._field_column+=_1d9dd4d3d_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1abc5876c;
			};
		}
	_iter_next_1abc5876c:;
	}
	_iter_end_1abc5876c:;;
	return _67917_s;;
}



inline jule::Bool _2039969c4_isFirstTokenOfLine(_20399410e_lex* _self_) {
	return ((*(_self_))._field_column == 1LL);;
}



inline void _203996ba0_newLine(_20399410e_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _20399719a_isOp(_20399410e_lex* _self_, jule::Slice<jule::U8>* _72024_txt, jule::Str _72037_kind, jule::U32 _72048_id, jule::Ptr<_2039861ab_Token>* _72066_t) {
	if ((!(_20398e69d_bytesHasPrefix(_72024_txt, _72037_kind)))) {
		return false;;
	};
	(*(_72066_t)).get()._field_Kind=_72037_kind;
	(*(_72066_t)).get()._field_Id=_72048_id;
	(*(_self_))._field_pos+=_72037_kind.len();
	return true;;
}



inline jule::Bool _203997552_lexBasicOps(_20399410e_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_2039861ab_Token>* _73048_tok) {
	{
		auto expr = &(_20398dd1d_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc5ea70:;
		if (it != expr_end) {
			_20398d59d_kindPair *_73116_pair = it;
			{
				if (_20399719a_isOp(_self_, &(_73030_txt), (*(_73116_pair))._field_kind, (*(_73116_pair))._field_id, _73048_tok)) {
					return true;;
				};
			}
			_iter_next_1abc5ea70:;
			++it;
			goto _iter_begin_1abc5ea70;
		}
		_iter_end_1abc5ea70:;
	};
	return false;;
}



inline jule::Bool _203997909_lexId(_20399410e_lex* _self_, jule::Slice<jule::U8>* _74025_txt, jule::Ptr<_2039861ab_Token>* _74043_t) {
	jule::Str _74113_lex = _203994eab_id(_self_, _74025_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	(*(_74043_t)).get()._field_Kind=_74113_lex;
	(*(_74043_t)).get()._field_Id=static_cast<jule::U32>(2LLU);
	return true;;
}



inline jule::Bool _203997cb1_lexNum(_20399410e_lex* _self_, jule::Slice<jule::U8>* _75026_txt, jule::Ptr<_2039861ab_Token>* _75044_t) {
	jule::Str _75113_lex = _203995a28_num(_self_, _75026_txt);;
	if (_75113_lex.empty()) {
		return false;;
	};
	(*(_75044_t)).get()._field_Kind=_75113_lex;
	(*(_75044_t)).get()._field_Id=static_cast<jule::U32>(6LLU);
	return true;;
}



inline jule::Ptr<_2039861ab_Token> _203998025_token(_20399410e_lex* _self_) {
	jule::Ptr<_2039861ab_Token> _76217_t = jule::new_ptr<_2039861ab_Token>(_2039861ab_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _203995220_resume(_self_);;
	if ((_76713_txt == nullptr)) {
		return _76217_t;;
	};
	_76217_t.get()._field_Column=(*(_self_))._field_column;
	_76217_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_203997cb1_lexNum(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_1abc65a98:;
			{
				goto _match_end_1abc64e93;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1abc66307:;
			{
				_76217_t.get()._field_Kind=_2039964eb_lexRune(_self_, &(_76713_txt));
				_76217_t.get()._field_Id=static_cast<jule::U32>(6LLU);
				return _76217_t;;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1abc6636d:;
			{
				_76217_t.get()._field_Kind=_203996760_lexStr(_self_);
				_76217_t.get()._field_Id=static_cast<jule::U32>(6LLU);
				return _76217_t;;
			}
		}
		else if (_20398e69d_bytesHasPrefix(&(_76713_txt), jule::Str("//", 2))) {
			_case_begin_1abc6659e:;
			{
				_203995495_lexLineComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_20398e69d_bytesHasPrefix(&(_76713_txt), jule::Str("/*", 2))) {
			_case_begin_1abc66615:;
			{
				_20399571a_lexRangeComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_20399719a_isOp(_self_, &(_76713_txt), jule::Str("(", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _20399719a_isOp(_self_, &(_76713_txt), jule::Str(")", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _20399719a_isOp(_self_, &(_76713_txt), jule::Str("{", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _20399719a_isOp(_self_, &(_76713_txt), jule::Str("}", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _20399719a_isOp(_self_, &(_76713_txt), jule::Str("[", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _20399719a_isOp(_self_, &(_76713_txt), jule::Str("]", 1), static_cast<jule::U32>(3LLU), &(_76217_t)) || _203997552_lexBasicOps(_self_, _76713_txt, &(_76217_t))) {
			_case_begin_1abc6667b:;
			{
				goto _match_end_1abc64e93;
			}
		}
		else if (_203997909_lexId(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_1abc6505e:;
			{
				{
					auto expr = &(_20398d9cc_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc6b73b:;
					if (it != expr_end) {
						_20398d59d_kindPair *_80520_pair = it;
						{
							if (((*(_80520_pair))._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=(*(_80520_pair))._field_id;
								goto _iter_end_1abc6b73b;
							};
						}
						_iter_next_1abc6b73b:;
						++it;
						goto _iter_begin_1abc6b73b;
					}
					_iter_end_1abc6b73b:;
				};
			}
		}
		else {
			_case_begin_1abc64ee8:;
			{
				jule::I32 _81218_r = 0;;
				jule::I32 _81221_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3149_DecodeRune(_76713_txt);
					_81218_r = __jule_assign_result.__jule_result_arg0;
					_81221_sz = __jule_assign_result.__jule_result_arg1;
				});
				_2039946a3_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_81218_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_81221_sz;
				return _76217_t;;
			}
		}
		_match_end_1abc64e93:;
	};
	(*(_self_))._field_column+=_1d9dd4d3d_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _20399410e_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c4dcbd_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c2ec0e96_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c31725dc_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c2a95dbd_set(_1c31728ea_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _23417_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1ac290941:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1ac2909b8:;
			{
				(*(_self_))._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1ac2907cb:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1ac292b1e:;
					{
						goto _iter_next_1ac2923e3;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1ac292b96:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1ac2923e3;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1ac292c1d:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1ac2923e3;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23322_s[_23417_i];
							((*(_self_))._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1ac2923e3;
					}
				}
				_match_end_1ac2929ed:;
			};
			goto _iter_end_1ac2923e3;
		}
	_iter_next_1ac2923e3:;
	}
	_iter_end_1ac2923e3:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1c2e8b637_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1ac29a341;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I32>((((_30721_e * 10LL) + static_cast<jule::I32>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1ac29a341:;
		}
		_iter_end_1ac29a341:;;
		(*(_self_))._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1c316ebb1_floatBits(_1c31728ea_decimal* _self_, _1c2c4dcbd_floatInfo* _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _35421_n = 0LL;;
			if (((*(_self_))._field_dp >= _1c2d0c3cb_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1c2d0c3cb_powtab[(*(_self_))._field_dp];
			};
			_1c3172c19_shift(_self_, static_cast<jule::I32>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1ac2a1bd8:;
	}
	_iter_end_1ac2a1bd8:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _36421_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1c2d0c3cb_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1c2d0c3cb_powtab[(-((*(_self_))._field_dp))];
			};
			_1c3172c19_shift(_self_, _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1ac2a2c1c:;
	}
	_iter_end_1ac2a2c1c:;;
	(_32817_exp)--;
	if ((_32817_exp < ((*(_32729_flt))._field_bias + 1LL))) {
		jule::I32 _38117_n = (((*(_32729_flt))._field_bias + 1LL) - _32817_exp);;
		_1c3172c19_shift(_self_, static_cast<jule::I32>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1c3172c19_shift(_self_, static_cast<jule::I32>(static_cast<jule::I32>((1LL + (*(_32729_flt))._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1c31731e2_roundedInteger(_self_));
	if ((_32917_mant == (2LLU << (*(_32729_flt))._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << (*(_32729_flt))._field_mantbits)) == 0LLU)) {
		_32817_exp=(*(_32729_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I32>(static_cast<jule::I32>((((static_cast<jule::U32>(1LLU) << (*(_32729_flt))._field_expbits) - 1LLU) + static_cast<jule::U32>((*(_32729_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << (*(_32729_flt))._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - (*(_32729_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) << (*(_32729_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_41717_bits|=((1LLU << (*(_32729_flt))._field_mantbits) << (*(_32729_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1c3172ad7_assign(_1c31728ea_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I32 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1ac2b01be:;
	}
	_iter_end_1ac2b01be:;;
	(*(_self_))._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_33117_buf[_33417_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1ac2b0b3c:;
	}
	_iter_end_1ac2b0b3c:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1c3173456_trim(_self_);
}



inline void _1c3172c19_shift(_1c31728ea_decimal* _self_, jule::I32 _35528_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1ac2b2c1b:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1ac2b2c93:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1c31737ec_leftShift(_self_, 60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1ac2b39ec:;
				}
				_iter_end_1ac2b39ec:;;
				_1c31737ec_leftShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1ac2b2d1a:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1c3173588_rightShift(_self_, 60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1ac2b3964:;
				}
				_iter_end_1ac2b3964:;;
				_1c3173588_rightShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>((-(_35528_k)))));
			}
		}
		_match_end_1ac2b2aea:;
	};
}



inline void _1c3172d4b_roundDown(_1c31728ea_decimal* _self_, jule::I32 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_37528_nd;
	_1c3173456_trim(_self_);
}



inline void _1c3172e7d_roundUp(_1c31728ea_decimal* _self_, jule::I32 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*(_self_))._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*(_self_))._field_d[_39017_i])++;
				(*(_self_))._field_nd=static_cast<jule::I32>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1ac2b7638:;
	}
	_iter_end_1ac2b7638:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1c31730b0_round(_1c31728ea_decimal* _self_, jule::I32 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1c317392e_shouldRoundUp(_self_, _41124_nd)) {
		_1c3172e7d_roundUp(_self_, _41124_nd);
	} else {
		_1c3172d4b_roundDown(_self_, _41124_nd);
	};
}



inline jule::U64 _1c31731e2_roundedInteger(_1c31728ea_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*(_self_))._field_dp) && (_42817_i < (*(_self_))._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_42817_i] - '0'))));
		}
	_iter_next_1ac2ba2a6:;
	}
	_iter_end_1ac2ba2a6:;;
	for (; (_42817_i < (*(_self_))._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1ac2bbe9a:;
	}
	_iter_end_1ac2bbe9a:;;
	if (_1c317392e_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c31728ea_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c25bc4e9_Const> static__1c2615e5a_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1c25bc4e9_Const>(_1c25bc4e9_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1c25bc4e9_Const> static__1c25e7a0d_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1c25bc4e9_Const>(_1c25bc4e9_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1c25bc4e9_Const> static__1c25eb5d3_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1c25bc4e9_Const>(_1c25bc4e9_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1c25bc4e9_Const> static__1c25ed30a_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1c25bc4e9_Const>(_1c25bc4e9_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1c25bc4e9_Const> static__1c2600395_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1c25bc4e9_Const>(_1c25bc4e9_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1c25bc4e9_Const> static__1c2636541_NewNil(void) {
	return jule::new_ptr<_1c25bc4e9_Const>(_1c25bc4e9_Const{._field_data=nullptr});;
}



inline jule::I64 _1c263c811_ReadI64(_1c25bc4e9_Const* _self_) {
	if ((!(_1c3178ed9_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _1c263c943_ReadU64(_1c25bc4e9_Const* _self_) {
	if ((!(_1c317911b_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _1c3178060_ReadBool(_1c25bc4e9_Const* _self_) {
	if ((!(_1c317924d_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1c3178192_ReadStr(_1c25bc4e9_Const* _self_) {
	if ((!(_1c3179380_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1c31782c4_ReadF64(_1c25bc4e9_Const* _self_) {
	if ((!(_1c31794b2_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _1c3178406_AsI64(_1c25bc4e9_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac34d25c:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ac34d2c3:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ac34cbc9:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1ac34cadb:;
			{
				return 0LL;;
			}
		}
		_match_end_1ac34ca86:;
	};
}



inline jule::U64 _1c3178538_AsU64(_1c25bc4e9_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ac34eb87:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac34ebed:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ac34e703:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1ac34d3a0:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ac34d34a:;
	};
}



inline jule::F64 _1c317866a_AsF64(_1c25bc4e9_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ac3515b2:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac351628:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ac35112d:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1ac34ecca:;
			{
				return 0LL;;
			}
		}
		_match_end_1ac34ec75:;
	};
}



inline void _1c317879c_SetI64(_1c25bc4e9_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _1c31788ce_SetU64(_1c25bc4e9_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _1c3178a11_SetBool(_1c25bc4e9_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _1c3178b43_SetStr(_1c25bc4e9_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _1c3178c75_SetF64(_1c25bc4e9_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline void _1c3178da7_SetNil(_1c25bc4e9_Const* _self_) {
	(*(_self_))._field_data=nullptr;
}



inline jule::Bool _1c3178ed9_IsI64(_1c25bc4e9_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac354ecd:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac355253:;
			{
				return false;;
			}
		}
		_match_end_1ac3551ed:;
	};
}



inline jule::Bool _1c317911b_IsU64(_1c25bc4e9_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ac355b05:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac355473:;
			{
				return false;;
			}
		}
		_match_end_1ac355330:;
	};
}



inline jule::Bool _1c317924d_IsBool(_1c25bc4e9_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ac355d8b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac356551:;
			{
				return false;;
			}
		}
		_match_end_1ac3564eb:;
	};
}



inline jule::Bool _1c3179380_IsStr(_1c25bc4e9_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ac35684d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac357013:;
			{
				return false;;
			}
		}
		_match_end_1ac356ead:;
	};
}



inline jule::Bool _1c31794b2_IsF64(_1c25bc4e9_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ac357310:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac3579c5:;
			{
				return false;;
			}
		}
		_match_end_1ac357970:;
	};
}



inline jule::Bool _1c31795e4_IsNil(_1c25bc4e9_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1c3179726_AreSameTypes(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _21327_x) {
	{
		
		if ((_1c3178ed9_IsI64(_self_) == _1c3178ed9_IsI64(&_21327_x))) {
			_case_begin_1ac359576:;
			{
				return true;;
			}
		}
		else if ((_1c317911b_IsU64(_self_) == _1c317911b_IsU64(&_21327_x))) {
			_case_begin_1ac358d7d:;
			{
				return true;;
			}
		}
		else if ((_1c31794b2_IsF64(_self_) == _1c31794b2_IsF64(&_21327_x))) {
			_case_begin_1ac358e05:;
			{
				return true;;
			}
		}
		else if ((_1c317924d_IsBool(_self_) == _1c317924d_IsBool(&_21327_x))) {
			_case_begin_1ac358e7c:;
			{
				return true;;
			}
		}
		else if ((_1c3179380_IsStr(_self_) == _1c3179380_IsStr(&_21327_x))) {
			_case_begin_1ac359004:;
			{
				return true;;
			}
		}
		else if ((_1c31795e4_IsNil(_self_) == _1c31795e4_IsNil(&_21327_x))) {
			_case_begin_1ac359257:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac358d06:;
			{
				return false;;
			}
		}
		_match_end_1ac358c3a:;
	};
}



inline jule::Bool _1c3179858_And(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _23818_x) {
	{
		
		if ((_1c317924d_IsBool(_self_) && _1c317924d_IsBool(&_23818_x))) {
			_case_begin_1ac35c777:;
			{
				return (_1c3178060_ReadBool(_self_) && _1c3178060_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1ac35c07e:;
			{
				return false;;
			}
		}
		_match_end_1ac35bd81:;
	};
}



inline jule::Bool _1c317998a_Or(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _24917_x) {
	{
		
		if ((_1c317924d_IsBool(_self_) && _1c317924d_IsBool(&_24917_x))) {
			_case_begin_1ac35dadb:;
			{
				return (_1c3178060_ReadBool(_self_) || _1c3178060_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1ac35d437:;
			{
				return false;;
			}
		}
		_match_end_1ac35caa7:;
	};
}



inline jule::Bool _1c3179abc_Eq(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _26017_x) {
	{
		
		if (_1c31795e4_IsNil(_self_)) {
			_case_begin_1ac35eeb6:;
			{
				return _1c31795e4_IsNil(&_26017_x);;
			}
		}
		else if (_1c317924d_IsBool(_self_)) {
			_case_begin_1ac35e823:;
			{
				return (_1c317924d_IsBool(&_26017_x) && (_1c3178060_ReadBool(_self_) == _1c3178060_ReadBool(&_26017_x)));;
			}
		}
		else if (_1c3179380_IsStr(_self_)) {
			_case_begin_1ac35e889:;
			{
				return (_1c3179380_IsStr(&_26017_x) && (_1c3178192_ReadStr(_self_) == _1c3178192_ReadStr(&_26017_x)));;
			}
		}
		else if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac35e911:;
			{
				return (_1c263c811_ReadI64(_self_) == _1c3178406_AsI64(&_26017_x));;
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac35e988:;
			{
				return (_1c263c943_ReadU64(_self_) == _1c3178538_AsU64(&_26017_x));;
			}
		}
		else if (_1c31794b2_IsF64(_self_)) {
			_case_begin_1ac35ebb9:;
			{
				return (_1c31782c4_ReadF64(_self_) == _1c317866a_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1ac35e7ac:;
			{
				return false;;
			}
		}
		_match_end_1ac35de0a:;
	};
}



inline jule::Bool _1c3179bee_Lt(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _28717_x) {
	{
		
		if (_1c3179380_IsStr(_self_)) {
			_case_begin_1ac363cab:;
			{
				return (_1c3179380_IsStr(&_28717_x) && (_1c3178192_ReadStr(_self_) < _1c3178192_ReadStr(&_28717_x)));;
			}
		}
		else if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac36366d:;
			{
				return (_1c263c811_ReadI64(_self_) < _1c3178406_AsI64(&_28717_x));;
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac3636d4:;
			{
				return (_1c263c943_ReadU64(_self_) < _1c3178538_AsU64(&_28717_x));;
			}
		}
		else if (_1c31794b2_IsF64(_self_)) {
			_case_begin_1ac36374a:;
			{
				return (_1c31782c4_ReadF64(_self_) < _1c317866a_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1ac3602e6:;
			{
				return false;;
			}
		}
		_match_end_1ac36022a:;
	};
}



inline jule::Bool _1c3179d31_LtEq(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _31019_x) {
	{
		
		if (_1c3179380_IsStr(_self_)) {
			_case_begin_1ac366ab1:;
			{
				return (_1c3179380_IsStr(&_31019_x) && (_1c3178192_ReadStr(_self_) <= _1c3178192_ReadStr(&_31019_x)));;
			}
		}
		else if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac366473:;
			{
				return (_1c263c811_ReadI64(_self_) <= _1c3178406_AsI64(&_31019_x));;
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac3664d9:;
			{
				return (_1c263c943_ReadU64(_self_) <= _1c3178538_AsU64(&_31019_x));;
			}
		}
		else if (_1c31794b2_IsF64(_self_)) {
			_case_begin_1ac366550:;
			{
				return (_1c31782c4_ReadF64(_self_) <= _1c317866a_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1ac364031:;
			{
				return false;;
			}
		}
		_match_end_1ac363e65:;
	};
}



inline jule::Bool _1c3179e63_Gt(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _33317_x) {
	{
		
		if (_1c3179380_IsStr(_self_)) {
			_case_begin_1ac3698b6:;
			{
				return (_1c3179380_IsStr(&_33317_x) && (_1c3178192_ReadStr(_self_) > _1c3178192_ReadStr(&_33317_x)));;
			}
		}
		else if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac369278:;
			{
				return (_1c263c811_ReadI64(_self_) > _1c3178406_AsI64(&_33317_x));;
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac3692de:;
			{
				return (_1c263c943_ReadU64(_self_) > _1c3178538_AsU64(&_33317_x));;
			}
		}
		else if (_1c31794b2_IsF64(_self_)) {
			_case_begin_1ac369355:;
			{
				return (_1c31782c4_ReadF64(_self_) > _1c317866a_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1ac366d36:;
			{
				return false;;
			}
		}
		_match_end_1ac366c6a:;
	};
}



inline jule::Bool _1c317a095_GtEq(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _35619_x) {
	{
		
		if (_1c3179380_IsStr(_self_)) {
			_case_begin_1ac36c6bb:;
			{
				return (_1c3179380_IsStr(&_35619_x) && (_1c3178192_ReadStr(_self_) >= _1c3178192_ReadStr(&_35619_x)));;
			}
		}
		else if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac36c07d:;
			{
				return (_1c263c811_ReadI64(_self_) >= _1c3178406_AsI64(&_35619_x));;
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac36c0e4:;
			{
				return (_1c263c943_ReadU64(_self_) >= _1c3178538_AsU64(&_35619_x));;
			}
		}
		else if (_1c31794b2_IsF64(_self_)) {
			_case_begin_1ac36c15a:;
			{
				return (_1c31782c4_ReadF64(_self_) >= _1c317866a_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1ac369b3b:;
			{
				return false;;
			}
		}
		_match_end_1ac369a70:;
	};
}



inline jule::Bool _1c317a1c7_Add(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _37722_x) {
	{
		
		if (_1c3179380_IsStr(_self_)) {
			_case_begin_1ac3704c1:;
			{
				if ((!(_1c3179380_IsStr(&_37722_x)))) {
					return false;;
				};
				_1c3178b43_SetStr(_self_, (_1c3178192_ReadStr(_self_) + _1c3178192_ReadStr(&_37722_x)));
			}
		}
		else if (_1c31794b2_IsF64(_self_)) {
			_case_begin_1ac36ed83:;
			{
				_1c3178c75_SetF64(_self_, static_cast<jule::F64>((_1c31782c4_ReadF64(_self_) + _1c317866a_AsF64(&_37722_x))));
			}
		}
		else if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac36ede9:;
			{
				if (_1c31794b2_IsF64(&_37722_x)) {
					_1c3178c75_SetF64(_self_, static_cast<jule::F64>((_1c317866a_AsF64(_self_) + _1c31782c4_ReadF64(&_37722_x))));
				} else {
					_1c317879c_SetI64(_self_, static_cast<jule::I64>((_1c263c811_ReadI64(_self_) + _1c3178406_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac36ee60:;
			{
				if (_1c31794b2_IsF64(&_37722_x)) {
					_1c3178c75_SetF64(_self_, static_cast<jule::F64>((_1c317866a_AsF64(_self_) + _1c31782c4_ReadF64(&_37722_x))));
				} else {
					_1c31788ce_SetU64(_self_, static_cast<jule::U64>((_1c263c943_ReadU64(_self_) + _1c3178538_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1ac36c941:;
			{
				return false;;
			}
		}
		_match_end_1ac36c875:;
	};
	return true;;
}



inline jule::Bool _1c317a309_Sub(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _40622_x) {
	{
		
		if (_1c31794b2_IsF64(_self_)) {
			_case_begin_1ac375905:;
			{
				_1c3178c75_SetF64(_self_, static_cast<jule::F64>((_1c31782c4_ReadF64(_self_) - _1c317866a_AsF64(&_40622_x))));
			}
		}
		else if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac37522e:;
			{
				if (_1c31794b2_IsF64(&_40622_x)) {
					_1c3178c75_SetF64(_self_, static_cast<jule::F64>((_1c317866a_AsF64(_self_) - _1c31782c4_ReadF64(&_40622_x))));
				} else {
					_1c317879c_SetI64(_self_, static_cast<jule::I64>((_1c263c811_ReadI64(_self_) - _1c3178406_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac375295:;
			{
				if (_1c31794b2_IsF64(&_40622_x)) {
					_1c3178c75_SetF64(_self_, static_cast<jule::F64>((_1c317866a_AsF64(_self_) - _1c31782c4_ReadF64(&_40622_x))));
				} else {
					_1c31788ce_SetU64(_self_, static_cast<jule::U64>((_1c263c943_ReadU64(_self_) - _1c3178538_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1ac3751b8:;
			{
				return false;;
			}
		}
		_match_end_1ac374915:;
	};
	return true;;
}



inline jule::Bool _1c317a43b_Mul(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _43022_x) {
	{
		
		if (_1c31794b2_IsF64(_self_)) {
			_case_begin_1ac379d8d:;
			{
				_1c3178c75_SetF64(_self_, static_cast<jule::F64>((_1c31782c4_ReadF64(_self_) * _1c317866a_AsF64(&_43022_x))));
			}
		}
		else if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac3796b7:;
			{
				if (_1c31794b2_IsF64(&_43022_x)) {
					_1c3178c75_SetF64(_self_, static_cast<jule::F64>((_1c317866a_AsF64(_self_) * _1c31782c4_ReadF64(&_43022_x))));
				} else {
					_1c317879c_SetI64(_self_, static_cast<jule::I64>((_1c263c811_ReadI64(_self_) * _1c3178406_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac37972d:;
			{
				if (_1c31794b2_IsF64(&_43022_x)) {
					_1c3178c75_SetF64(_self_, static_cast<jule::F64>((_1c317866a_AsF64(_self_) * _1c31782c4_ReadF64(&_43022_x))));
				} else {
					_1c31788ce_SetU64(_self_, static_cast<jule::U64>((_1c263c943_ReadU64(_self_) * _1c3178538_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1ac379651:;
			{
				return false;;
			}
		}
		_match_end_1ac378c5a:;
	};
	return true;;
}



inline jule::Bool _1c317a56d_Div(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _45822_x) {
	{
		
		if (_1c31794b2_IsF64(_self_)) {
			_case_begin_1ac37e326:;
			{
				jule::F64 _46117_l = _1c317866a_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1c3178c75_SetF64(_self_, static_cast<jule::F64>(jule::div(_1c31782c4_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac37db50:;
			{
				jule::F64 _46717_l = _1c317866a_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1c3178c75_SetF64(_self_, static_cast<jule::F64>(jule::div(_1c317866a_AsF64(_self_),_46717_l)));
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac37dbb6:;
			{
				jule::F64 _47317_l = _1c317866a_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1c3178c75_SetF64(_self_, static_cast<jule::F64>(jule::div(_1c317866a_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1ac37dad9:;
			{
				return false;;
			}
		}
		_match_end_1ac37d1e3:;
	};
	return true;;
}



inline jule::Bool _1c317a6a0_Mod(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _48722_x) {
	{
		
		if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac38379d:;
			{
				jule::I64 _49017_l = _1c3178406_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1c317879c_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1c263c811_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac3830d8:;
			{
				jule::U64 _49617_l = _1c3178538_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1c31788ce_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1c263c943_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1ac383072:;
			{
				return false;;
			}
		}
		_match_end_1ac382eea:;
	};
	return true;;
}



inline jule::Bool _1c317a7d2_BitwiseAnd(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _50929_x) {
	{
		
		if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac3868c2:;
			{
				_1c317879c_SetI64(_self_, static_cast<jule::I64>((_1c263c811_ReadI64(_self_) & _1c3178406_AsI64(&_50929_x))));
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac38620c:;
			{
				_1c31788ce_SetU64(_self_, static_cast<jule::U64>((_1c263c943_ReadU64(_self_) & _1c3178538_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1ac386196:;
			{
				return false;;
			}
		}
		_match_end_1ac38611e:;
	};
	return true;;
}



inline jule::Bool _1c317a914_BitwiseOr(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _52328_x) {
	{
		
		if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac38894b:;
			{
				_1c317879c_SetI64(_self_, static_cast<jule::I64>((_1c263c811_ReadI64(_self_) | _1c3178406_AsI64(&_52328_x))));
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac388286:;
			{
				_1c31788ce_SetU64(_self_, static_cast<jule::U64>((_1c263c943_ReadU64(_self_) | _1c3178538_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1ac388220:;
			{
				return false;;
			}
		}
		_match_end_1ac388154:;
	};
	return true;;
}



inline jule::Bool _1c317aa46_Xor(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _53722_x) {
	{
		
		if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac38a9c5:;
			{
				_1c317879c_SetI64(_self_, static_cast<jule::I64>((_1c263c811_ReadI64(_self_) ^ _1c3178406_AsI64(&_53722_x))));
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac38a310:;
			{
				_1c31788ce_SetU64(_self_, static_cast<jule::U64>((_1c263c943_ReadU64(_self_) ^ _1c3178538_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1ac38a299:;
			{
				return false;;
			}
		}
		_match_end_1ac38a1cd:;
	};
	return true;;
}



inline jule::Bool _1c317ab78_Lshift(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _55125_x) {
	{
		
		if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac38ca4e:;
			{
				jule::I64 _55417_l = _1c3178406_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1c3178538_AsU64(&_55125_x);;
					_1c317879c_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1c317addc_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac38c389:;
			{
				_1c317addc_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1ac38c323:;
			{
				return false;;
			}
		}
		_match_end_1ac38c257:;
	};
	return true;;
}



inline jule::Bool _1c317acaa_Rshift(_1c25bc4e9_Const* _self_, _1c25bc4e9_Const _57125_x) {
	{
		
		if (_1c3178ed9_IsI64(_self_)) {
			_case_begin_1ac3903ae:;
			{
				jule::I64 _57417_l = _1c3178406_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1c3178538_AsU64(&_57125_x);;
					_1c317879c_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1c317b01e_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1c317911b_IsU64(_self_)) {
			_case_begin_1ac38ebe9:;
			{
				_1c317b01e_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1ac38eb83:;
			{
				return false;;
			}
		}
		_match_end_1ac38eab7:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c25bc4e9_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a59b93_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a5a985_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a5ad81_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a8e337_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4a8ec61_IsPrim(_1c4a8e8ed_IdentTypeDecl* _self_) {
	return ((*(_self_))._field_Token.get()._field_Id == static_cast<jule::U32>(1LLU));;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a8e8ed_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9004c_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a90404_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a906e0_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a90adb_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a90dc7_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4a91515_IsUnsafe(_1c4a911b3_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a911b3_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4a91c1e_AutoSized(_1c4a91845_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a91845_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a92093_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9244a_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a93858_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a93b44_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a941e9_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a944d5_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4a94bde_IsNil(_1c4a9488c_LitExpr* _self_) {
	return (*(_self_))._field_Value.equal("nil", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9488c_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a95096_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4a9586b_IsSelf(_1c4a95519_IdentExpr* _self_) {
	return (*(_self_))._field_Ident.equal("self", 4);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a95519_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a95c23_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a960ca_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a96482_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a96839_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a96cac_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a97230_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4a97b9d_Unhandled(_1c4a9783a_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1c4a97e12_Ignored(_1c4a9783a_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9783a_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4a9861b_IsTargeted(_1c4a982b9_FieldExprPair* _self_) {
	return ((*(_self_))._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a982b9_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a98a17_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4a992dc_IsEmpty(_1c4a98e8a_BraceLit* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a98e8a_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a99760_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4a9a277_IsEmpty(_1c4a99e47_SliceExpr* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a99e47_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9a7b6_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9adc1_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9b1ac_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9b630_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9b9d7_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9bd8e_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9c17a_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9c785_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9ccc4_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9dbb5_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9e2c0_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4a9ed09_IsSelf(_1c4a9e996_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1c4aa006d_IsRef(_1c4a9e996_ParamDecl* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a9e996_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4aa1118_IsAnon(_1c4aa0cb6_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa0cb6_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa1c95_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa214c_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4aa2b0e_IsInf(_1c4aa27ac_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa27ac_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4aa33d4_IsWhileNext(_1c4aa3082_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa3082_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa3923_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa3cca_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa4182_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa4605_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa49ac_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa4e30_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa5606_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa5a79_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa6250_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa69e2_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4aa72b7_AutoExpr(_1c4aa6e65_EnumItemDecl* _self_) {
	return ((*(_self_))._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa6e65_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4aa8021_DefaultTyped(_1c4aa798d_EnumDecl* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa798d_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa8494_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa8a9e_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa8c9c_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa9550_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aa9c26_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4aaa694_IsTraitImpl(_1c4aaa331_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1c4aaa908_IsStructImpl(_1c4aaa331_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aaa331_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c4aab068_FieldIns> _1c4a670bd_instance(jule::Ptr<_1c4a7e877_Field> _self_) {
	return jule::new_ptr<_1c4aab068_FieldIns>(_1c4aab068_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a7e877_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a610c8_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c4aab255_StructIns> _1c4a6ad91_instance(jule::Ptr<_1c4a86ebc_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1c4aab255_StructIns> _9917_ins = jule::new_ptr<_1c4aab255_StructIns>(_1c4aab255_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1c4aab068_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1c4b2c837_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1c4ab6bab_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac64ba55:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_1c4b2c837_Var>((*(_10621_s))));;
			}
			_iter_next_1ac64ba55:;
			++it;
			goto _iter_begin_1ac64ba55;
		}
		_iter_end_1ac64ba55:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac64ceb8:;
		if (it != expr_end) {
			jule::Ptr<_1c4a7e877_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1c4a670bd_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1c4b5cdd9_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1ac64ceb8:;
			++it;
			goto _iter_begin_1ac64ceb8;
		}
		_iter_end_1ac64ceb8:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1c4ab22e4_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac650350:;
			if (it != expr_end) {
				jule::Ptr<_1c4ab22e4_Fn> _12125_f = *it;
				{
					jule::Ptr<_1c4ab22e4_Fn> _12225_fins = jule::new_ptr<_1c4ab22e4_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1ac650350:;
				++it;
				goto _iter_begin_1ac650350;
			}
			_iter_end_1ac650350:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_1c4aab255_StructIns> _1c4a6baea_appendInstance(_1c4a86ebc_Struct* _self_, jule::Ptr<_1c4aab255_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6526a4:;
		if (it != expr_end) {
			jule::Ptr<_1c4aab255_StructIns> _13921_ains = *it;
			{
				if (_1c4a84a03_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_1ac6526a4:;
			++it;
			goto _iter_begin_1ac6526a4;
		}
		_iter_end_1ac6526a4:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_13338_ins)));;
	return nullptr;;
}



inline jule::Ptr<_1c4ab22e4_Fn> _1c4a6ec52_FindMethod(_1c4a86ebc_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac653ab2:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1ac653ab2:;
			++it;
			goto _iter_begin_1ac653ab2;
		}
		_iter_end_1ac653ab2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4b2c837_Var> _1c4a6e1a2_FindStatic(_1c4a86ebc_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac654c7d:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1ac654c7d:;
			++it;
			goto _iter_begin_1ac654c7d;
		}
		_iter_end_1ac654c7d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4a7e877_Field> _1c4a7157d_FindField(_1c4a86ebc_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac655b5d:;
		if (it != expr_end) {
			jule::Ptr<_1c4a7e877_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1ac655b5d:;
			++it;
			goto _iter_begin_1ac655b5d;
		}
		_iter_end_1ac655b5d:;
	};
	return nullptr;;
}



inline jule::Bool _1c4a70879_IsImplements(_1c4a86ebc_Struct* _self_, jule::Ptr<_1c4ac306e_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac656a3d:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac306e_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_1ac656a3d:;
			++it;
			goto _iter_begin_1ac656a3d;
		}
		_iter_end_1ac656a3d:;
	};
	return false;;
}



inline jule::Bool _1c4a7484a_IsDerives(_1c4a86ebc_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac65709e:;
		if (it != expr_end) {
			jule::Ptr<_1c4a5ad81_Directive> *_19416_d = it;
			{
				if ((*(_19416_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1ac65709e:;
			++it;
			goto _iter_begin_1ac65709e;
		}
		_iter_end_1ac65709e:;
	};
	return false;;
}



inline jule::Bool _1c4a75010_IsUses(_1c4a86ebc_Struct* _self_, jule::Ptr<_1c4a86ebc_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac659733:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_1ac659e81:;
				}
				_iter_end_1ac659e81:;;
			}
			_iter_next_1ac659733:;
			++it;
			goto _iter_begin_1ac659733;
		}
		_iter_end_1ac659733:;
	};
	return false;;
}



inline jule::Bool _1c4a7a4cc_HasRefAccessible(_1c4a86ebc_Struct* _self_) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac65a14b:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> *_21616_m = it;
			{
				if ((((*(_21616_m)).get()._field_Params.len() > 0LL) && _1c4a71e63_IsRef((*(_21616_m)).get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_1ac65a14b:;
			++it;
			goto _iter_begin_1ac65a14b;
		}
		_iter_end_1ac65a14b:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4a86ebc_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aab068_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aab783_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aab970_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aabb5c_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aabd49_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aac036_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aac223_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aac410_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aac5ec_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aac7d9_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aac9c6_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aacbb3_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aacda0_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aad08c_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aad279_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aad466_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aad884_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aada71_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aadc5d_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aade4a_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aae137_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aae324_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aae511_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aae6ed_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aae8da_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aaeac7_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aaecb4_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aaeea1_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab018d_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab037a_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab0567_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab0754_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aad653_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab0db4_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab10a1_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab128d_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab147a_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab1667_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab1854_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab1a41_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab1c2d_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab1e1a_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c4ab2b30_ParamIns> _1c4a69378_instance(jule::Ptr<_1c4ab2107_Param> _self_) {
	return jule::new_ptr<_1c4ab2b30_ParamIns>(_1c4ab2b30_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1c4a6c810_IsSelf(_1c4ab2107_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1c4a71e63_IsRef(_1c4ab2107_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab2107_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4a871ed_IsVoid(_1c4ab22e4_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1c4a810e8_IsMethod(_1c4ab22e4_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1c4a653b8_IsEntryPoint(_1c4ab22e4_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1c4a5e4d3_IsInit(_1c4ab22e4_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1c4a66595_IsAnon(_1c4ab22e4_Fn* _self_) {
	return _203988be7_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1c4a77bc2_AnyVar(_1c4ab22e4_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1c4ab39ee_FnIns> _1c4a78b7e_instanceForce(jule::Ptr<_1c4ab22e4_Fn> _self_) {
	jule::Ptr<_1c4ab39ee_FnIns> _10017_ins = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1c4ad13bd_Scope>(), ._field_Refers=static__1c4ab6bab_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac66ddb8:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab2107_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1c4a69378_instance(_10721_p));;
			}
			_iter_next_1ac66ddb8:;
			++it;
			goto _iter_begin_1ac66ddb8;
		}
		_iter_end_1ac66ddb8:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_1c4ab39ee_FnIns> _1c4ab24d1_instance(jule::Ptr<_1c4ab22e4_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1c4a78b7e_instanceForce(_self_);;
}



inline jule::Ptr<_1c4ab39ee_FnIns> _1c4ab2778_appendInstance(_1c4ab22e4_Fn* _self_, jule::Ptr<_1c4ab39ee_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac672b9c:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab39ee_FnIns> _14421_ains = *it;
			{
				if (_1c4ab5407_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_1ac672b9c:;
			++it;
			goto _iter_begin_1ac672b9c;
		}
		_iter_end_1ac672b9c:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab22e4_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c4ab3009_Str(_1c4ab2b30_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		(_16617_s).append("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		(_16617_s).append("&_:", 3);
	};
	if (_1c4a6c810_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1c4a71e63_IsRef((*(_self_))._field_Decl.ptr())) {
			(_16617_s).append("&", 1);
		};
		(_16617_s).append("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		(_16617_s).append("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_1c4622272_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab2b30_ParamIns _Src) {
	_Stream << _1c4ab3009_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c4ab3d2e_Str(_1c4ab39ee_FnIns* _self_) {
	;
	return _1c4ab5715_GetKindStr(_self_, false);;
}



inline jule::Bool _1c4ab413c_Equal(jule::Ptr<_1c4ab39ee_FnIns> _self_, jule::Ptr<_1c4621d32_TypeKind> _21721_other) {
	jule::Ptr<_1c4ab39ee_FnIns> _21813_f = _1c4b60260_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _1c4ab459e_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _1c4ab459e_EqualFn(jule::Ptr<_1c4ab39ee_FnIns> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1c4a871ed_IsVoid(_self_.get()._field_Decl.ptr()) != _1c4a871ed_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1c4ab2b30_ParamIns>,jule::Ptr<_1c4ab2b30_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1c4ab2b30_ParamIns>,jule::Ptr<_1c4ab2b30_ParamIns>)>([=](jule::Ptr<_1c4ab2b30_ParamIns> _23830_p1, jule::Ptr<_1c4ab2b30_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1c4a6c810_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1c4a6c810_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1c4a71e63_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1c4a71e63_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1c4622580_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I32 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1ac680e30:;
	}
	_iter_end_1ac680e30:;;
	if ((!(_1c4a871ed_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1c4622580_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1c4ab48ac_equalTrait(jule::Ptr<_1c4ab39ee_FnIns> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _28727_other) {
	if ((_self_.get()._field_Decl.get()._field_Public != (*(_28727_other)).get()._field_Decl.get()._field_Public)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Ident != (*(_28727_other)).get()._field_Decl.get()._field_Ident)) {
		return false;;
	};
	if ((!(_1c4ab459e_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c4621d32_TypeKind>> _1c4ab4b21_Types(_1c4ab39ee_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1ac685187:;
			{
				return nullptr;;
			}
		}
		else if ((_1c4b60c11_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1ac6851ed:;
			{
				return jule::Slice<jule::Ptr<_1c4621d32_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1ac685121:;
			{
				return _1c4b60c11_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1ac685099:;
	};
}



inline jule::Bool _1c4ab4d85_IsBuiltin(_1c4ab39ee_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1c4ab50e9_IsAnon(_1c4ab39ee_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1c4a66595_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1c4ab5407_Same(_1c4ab39ee_FnIns* _self_, jule::Ptr<_1c4ab39ee_FnIns> _33019_f) {
	if ((((*(_self_))._field_Decl != _33019_f.get()._field_Decl) || (_33019_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac68893d:;
		if (it != expr_end) {
			jule::I32 _33513_i = it - expr->begin();
			jule::Ptr<_1c47006e6_InsGeneric> *_33516_g = it;
			{
				if ((!(_1c4622580_Equal((*(_33516_g)).get()._field_Kind, _33019_f.get()._field_Generics[_33513_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1ac68893d:;
			++it;
			_33513_i++;
			goto _iter_begin_1ac68893d;
		}
		_iter_end_1ac68893d:;
	};
	return true;;
}



inline jule::Str _1c4ab5715_GetKindStr(_1c4ab39ee_FnIns* _self_, jule::Bool _34625_ident) {
	jule::Str _34717_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		(_34717_s).append("unsafe ", 7);
	};
	(_34717_s).append("fn", 2);
	if ((_34625_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34717_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	(_34717_s).append("(", 1);
	jule::I32 _36013_n = (*(_self_))._field_Params.len();;
	if ((_36013_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac68c6bc:;
			if (it != expr_end) {
				jule::Ptr<_1c4ab2b30_ParamIns> *_36220_p = it;
				{
					_34717_s+=_1c4ab3009_Str((*(_36220_p)).ptr());
					(_34717_s).append(",", 1);
				}
				_iter_next_1ac68c6bc:;
				++it;
				goto _iter_begin_1ac68c6bc;
			}
			_iter_end_1ac68c6bc:;
		};
		(_34717_s).mut_slice(0LL, (_34717_s.len() - 1LL));;
	};
	(_34717_s).append(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		(_34717_s).append("!", 1);
	};
	if ((!(_1c4a871ed_IsVoid((*(_self_))._field_Decl.ptr())))) {
		(_34717_s).append(":", 1);
		_34717_s+=_1c4622272_Str((*(_self_))._field_Result.ptr());
	};
	return _34717_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab39ee_FnIns _Src) {
	_Stream << _1c4ab3d2e_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c4ab6958_ReferenceStack> static__1c4ab6bab_new(void) {
	return jule::new_ptr<_1c4ab6958_ReferenceStack>(_1c4ab6958_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I32 _1c4ab7041_Len(_1c4ab6958_ReferenceStack* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1c4ab734e_At(_1c4ab6958_ReferenceStack* _self_, jule::I32 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1c4ab75c4_Push(_1c4ab6958_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*(_self_))._field_buffer = jule::alloc_for_append((*(_self_))._field_buffer,1);(*(_self_))._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _1acc9391b_Exist(_1c4ab6958_ReferenceStack* _self_, jule::Ptr<_1c4ab39ee_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc94c2a:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1acc94c2a:;
			++it;
			goto _iter_begin_1acc94c2a;
		}
		_iter_end_1acc94c2a:;
	};
	return false;;
}

inline jule::Bool _1acca7413_Exist(_1c4ab6958_ReferenceStack* _self_, jule::Ptr<_1c4b2c837_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acca86cd:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1acca86cd:;
			++it;
			goto _iter_begin_1acca86cd;
		}
		_iter_end_1acca86cd:;
	};
	return false;;
}

inline jule::Bool _1acd473b5_Exist(_1c4ab6958_ReferenceStack* _self_, jule::Ptr<_1c4aab255_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd486c4:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1acd486c4:;
			++it;
			goto _iter_begin_1acd486c4;
		}
		_iter_end_1acd486c4:;
	};
	return false;;
}

inline jule::Bool _1ad0b747b_Exist(_1c4ab6958_ReferenceStack* _self_, jule::Ptr<_1c4ac306e_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0b86ad:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ad0b86ad:;
			++it;
			goto _iter_begin_1ad0b86ad;
		}
		_iter_end_1ad0b86ad:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab6958_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ab7c89_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c4abc4ca_symbolBuilder> _1c4abc981_getRoot(jule::Ptr<_1c4abc4ca_symbolBuilder> _self_) {
	jule::Ptr<_1c4abc4ca_symbolBuilder> _32517_root = _self_;;
	while ((_32517_root.get()._field_owner != nullptr)) {
		{
			_32517_root=_32517_root.get()._field_owner;
		}
	_iter_next_1ac6a5e33:;
	}
	_iter_end_1ac6a5e33:;;
	return _32517_root;;
}



inline void _1c4abcd49_pushErr(_1c4abc4ca_symbolBuilder* _self_, jule::Ptr<_2039861ab_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1c4b0635a_compilerErr(_33227_token, true, _33242_fmt, _33255_args));;
}



inline void _1c4abd212_pushErrText(_1c4abc4ca_symbolBuilder* _self_, jule::Ptr<_2039861ab_Token>* _33631_token, jule::Str _33646_fmt, jule::Slice<jule::Any> _33659_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1c4b0635a_compilerErr(_33631_token, false, _33646_fmt, _33659_args));;
}



inline void _1c4abd531_pushSuggestion(_1c4abc4ca_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1c4b077e0_pushSugggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1c4abd8d8_checkCppUseDeclPath(_1c4abc4ca_symbolBuilder* _self_, jule::Ptr<_1c4aa69e2_UseDecl>* _34539_decl, jule::Str _34555_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _1c2193ce6_Ext(_34555_path);;
	if (((!(_1c2213739_IsValidHeaderExt(_34613_ext))) && (!(_1c22139d1_IsValidCppExt(_34613_ext))))) {
		_1c4abcd49_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2055752a4_Status> _35313_info = ({
		auto except = static__1c2195e08_Of(_34555_path);
		(except.ok()) ? (except.result) : ({{
			_1c4abcd49_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_2055752a4_Status>(nullptr);});
	});;
	if (_2055756b1_IsDir(_35313_info.ptr())) {
		_1c4abcd49_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4abdbb3_buildCppHeaderImport(_1c4abc4ca_symbolBuilder* _self_, jule::Ptr<_1c4aa69e2_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*(_36544_decl)).get()._field_LinkPath;;
	if ((!(_1c2213519_IsStdHeaderPath((*(_36544_decl)).get()._field_LinkPath)))) {
		_36617_path=_1c2193a4e_Join(jule::Slice<jule::Str>::make({_20398be3c_Dir((*(_36544_decl)).get()._field_Token.get()._field_File.ptr()),(*(_36544_decl)).get()._field_LinkPath}));
		jule::Bool _37021_ok = _1c4abd8d8_checkCppUseDeclPath(_self_, _36544_decl, _36617_path);;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c219408d_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_1c4abcd49_pushErr(_self_, &((*(_36544_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_36544_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_1c4aeeb28_ImportInfo>(_1c4aeeb28_ImportInfo{._field_Token=(*(_36544_decl)).get()._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*(_36544_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4abdec1_buildStdImport(_1c4abc4ca_symbolBuilder* _self_, jule::Ptr<_1c4aa69e2_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*(_39338_decl)).get()._field_LinkPath.slice(5LL);;
	_39417_path=_1c218eece_Replace(_39417_path, jule::Str("::", 2), static_cast<jule::Str>(92LL), -1LL);
	_39417_path=_1c2193a4e_Join(jule::Slice<jule::Str>::make({_1c222ac6d_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c219408d_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_1c4abcd49_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2055752a4_Status> _40413_info = ({
		auto except = static__1c2195e08_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_1c4abcd49_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_2055752a4_Status>(nullptr);});
	});;
	if ((!(_2055756b1_IsDir(_40413_info.ptr())))) {
		_1c4abcd49_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _41413_i = (_1c218a7c1_FindLast((*(_39338_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*(_39338_decl)).get()._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_1c4aeeb28_ImportInfo>(_1c4aeeb28_ImportInfo{._field_Token=(*(_39338_decl)).get()._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*(_39338_decl)).get()._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*(_39338_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=(*(_39338_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1c4b02a82_Package>(_1c4b02a82_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4abe2ce_buildIdentImport(jule::Ptr<_1c4abc4ca_symbolBuilder> _self_, jule::Ptr<_1c4aa69e2_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _1c4aebe77_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c4aeb0db_GetModPath(_self_.get()._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_1c4abcd49_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1c4abd531_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*(_43241_decl)).get()._field_LinkPath;;
	_44017_path=_1c218eece_Replace(_44017_path, jule::Str("::", 2), static_cast<jule::Str>(92LL), -1LL);
	_44017_path=_1c2193a4e_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c219408d_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_1c4abcd49_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2055752a4_Status> _45113_info = ({
		auto except = static__1c2195e08_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_1c4abcd49_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_2055752a4_Status>(nullptr);});
	});;
	if ((!(_2055756b1_IsDir(_45113_info.ptr())))) {
		_1c4abcd49_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _46113_i = (_1c218a7c1_FindLast((*(_43241_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*(_43241_decl)).get()._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_1c4aeeb28_ImportInfo>(_1c4aeeb28_ImportInfo{._field_Token=(*(_43241_decl)).get()._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*(_43241_decl)).get()._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*(_43241_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=(*(_43241_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1c4b02a82_Package>(_1c4b02a82_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4abe5dc_buildImport(jule::Ptr<_1c4abc4ca_symbolBuilder> _self_, jule::Ptr<_1c4aa69e2_UseDecl>* _47936_decl) {
	{
		
		if ((*(_47936_decl)).get()._field_CppLinked) {
			_case_begin_1ac6bd456:;
			{
				return _1c4abdbb3_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*(_47936_decl)).get()._field_Std) {
			_case_begin_1ac6bd698:;
			{
				return _1c4abdec1_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1ac6bcc5d:;
			{
				return _1c4abe2ce_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1ac6bcb92:;
	};
}



inline jule::Bool _1c4abe8ea_checkDuplicateUseDecl(_1c4abc4ca_symbolBuilder* _self_, jule::Ptr<_1c4aeeb28_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4aeeb28_ImportInfo> _49213_lpkg = _1c45e2918_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)>([=](jule::Ptr<_1c4aeeb28_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*(_49041_pkg)).get()._field_Path == _49248_spkg.get()._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1c4abcd49_pushErr(_self_, &((*(_49041_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_49041_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_1c4abd531_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1c4abec19_implImportSelections(_1c4abc4ca_symbolBuilder* _self_, jule::Ptr<_1c4aeeb28_ImportInfo>* _50444_imp, jule::Ptr<_1c4aa69e2_UseDecl>* _50467_decl) {
	(*(_50444_imp)).get()._field_Selected=(*(_50467_decl)).get()._field_Selected;
	{
		auto expr = &((*(_50444_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6c202b:;
		if (it != expr_end) {
			jule::Ptr<_2039861ab_Token> _50616_item = *it;
			{
				{
					auto expr = &((*(_50444_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac6c2768:;
					if (it != expr_end) {
						jule::Ptr<_2039861ab_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1ac6c2768;
							} else if ((_50616_item.get()._field_Kind == _50720_citem.get()._field_Kind)) {
								_1c4abcd49_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_50616_item.get()._field_Kind, &__jule_any_type5)}));
								_1c4abd531_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1ac6c2768;
							};
						}
						_iter_next_1ac6c2768:;
						++it;
						goto _iter_begin_1ac6c2768;
					}
					_iter_end_1ac6c2768:;
				};
			}
			_iter_next_1ac6c202b:;
			++it;
			goto _iter_begin_1ac6c202b;
		}
		_iter_end_1ac6c202b:;
	};
}



inline jule::Str _1c4ac0027_getAsLinkPath(jule::Ptr<_1c4abc4ca_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_1c2170cd4_HasPrefix(_51937_path, _1c222ac6d_PathStdlib)) {
		(_51937_path).mut_slice(_1c222ac6d_PathStdlib.len());;
		return (jule::Str("std", 3) + _1c218eece_Replace(_51937_path, static_cast<jule::Str>(92LL), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c219408d_Abs(_1c4aebe77_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c4aeb0db_GetModPath(_self_.get()._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 92LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _1c218eece_Replace(_51937_path, static_cast<jule::Str>(92LL), jule::Str("::", 2), -1LL);;
}



inline void _1c4ac03e0_pushCycleError(jule::Ptr<_1c4abc4ca_symbolBuilder> _self_, jule::Ptr<_1c4abc4ca_symbolBuilder>* _53335_sb, jule::Str _53355_path, jule::Str* _53371_message) {
	;
	jule::Str _53513_refersTo = _1c2220d40_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1c4ac0027_getAsLinkPath(_self_, _20398be3c_Dir((*(_53335_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_1c4ac0027_getAsLinkPath(_self_, _53355_path), &__jule_any_type5)}));;
	((*(_53371_message))).buffer.insert(0, (((_1c2171697_Repeat(jule::Str(" ", 1), 7LL) + _53513_refersTo) + jule::Str("\n", 1))));;
}



inline void _1c4ac07a8_pushCrossCycleError(jule::Ptr<_1c4abc4ca_symbolBuilder> _self_, jule::Ptr<_1c4abc4ca_symbolBuilder>* _54240_target, jule::Ptr<_1c4aeeb28_ImportInfo>* _54265_imp, jule::Ptr<_2039861ab_Token>* _54284_errorToken) {
	jule::Str _54317_message = jule::Str();;
	_1c4ac03e0_pushCycleError(_self_, &(_self_), (*(_54265_imp)).get()._field_Path, &(_54317_message));
	jule::Ptr<_1c4abc4ca_symbolBuilder> _54717_owner = _self_.get()._field_owner;;
	jule::Ptr<_1c4abc4ca_symbolBuilder> _54817_old = _self_;;
	while ((_54717_owner.get()._field_owner != nullptr)) {
		{
			_1c4ac03e0_pushCycleError(_self_, &(_54817_old.get()._field_owner), _20398be3c_Dir(_54817_old.get()._field_table.get()._field_File.ptr()), &(_54317_message));
			if ((_54717_owner.get()._field_owner == (*(_54240_target)))) {
				_1c4ac03e0_pushCycleError(_self_, _54240_target, _20398be3c_Dir(_54717_owner.get()._field_table.get()._field_File.ptr()), &(_54317_message));
				goto _iter_end_1ac6ca100;
			};
			_54817_old=_54717_owner;
			_54717_owner=_54717_owner.get()._field_owner;
		}
	_iter_next_1ac6ca100:;
	}
	_iter_end_1ac6ca100:;;
	_1c4abcd49_pushErr(_self_.ptr(), _54284_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_54317_message, &__jule_any_type5)}));
}



inline jule::Bool _1c4ac0b60_checkImportCycles(jule::Ptr<_1c4abc4ca_symbolBuilder> _self_, jule::Ptr<_1c4aeeb28_ImportInfo> _56537_imp, jule::Ptr<_1c4aa69e2_UseDecl>* _56556_decl) {
	if ((_56537_imp.get()._field_Path == _20398be3c_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1c4abcd49_pushErr(_self_.ptr(), &((*(_56556_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1c4ac0027_getAsLinkPath(_self_, _56537_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_20398be3c_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_1c4ac07a8_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_1c4abc4ca_symbolBuilder> _58017_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_20398be3c_Dir(_58017_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_1c4ac07a8_pushCrossCycleError(_self_, &(_58017_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	if ((_58017_owner.get()._field_owner != nullptr)) {
		_58017_owner=_58017_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _1c4ac104a_checkPackageAccessibility(_1c4abc4ca_symbolBuilder* _self_, jule::Ptr<_1c4aa69e2_UseDecl>* _60145_decl, jule::Str* _60162_mod, jule::Str* _60173_path) {
	if (((_1c4aebe77_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1c4aeb0db_GetModPath((*(_self_))._field_importer) != (*(_60162_mod))) && _1c218dc36_Contains((*(_60173_path)), jule::Str("internal", 8)))) {
		_1c4abcd49_pushErr(_self_, &((*(_60145_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c4ac1413_importPackage(jule::Ptr<_1c4abc4ca_symbolBuilder> _self_, jule::Ptr<_1c4aeeb28_ImportInfo>* _60738_imp, jule::Ptr<_1c4aa69e2_UseDecl>* _60761_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_60738_imp)).get()._field_CppLinked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4aeeb28_ImportInfo> _61217_port = _1c4aebe77_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c4aeb707_GetImport(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path);;
	if ((_61217_port != nullptr)) {
		(*(_60738_imp)).get()._field_Package=_61217_port.get()._field_Package;
		(*(_60738_imp)).get()._field_Duplicate=true;
		jule::Str _61717_oldMod = _1c4aebe77_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c4aeb0db_GetModPath(_self_.get()._field_importer);;
		_1c4aebe77_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c4aead99_SetModPath(_self_.get()._field_importer, _1c4aebe77_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c4aeb3e9_ModById(_self_.get()._field_importer, (*(_60738_imp)).get()._field_ModId));
		_1c4ac104a_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_61717_oldMod), &(_61217_port.get()._field_Path));
		_1c4aebe77_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c4aead99_SetModPath(_self_.get()._field_importer, _61717_oldMod);
	} else {
		if ((!(_1c4ac0b60_checkImportCycles(_self_, (*(_60738_imp)), _60761_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _62617_oldMod = _1c4aebe77_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c4aeb0db_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1c4aebe77_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c4aead99_SetModPath(_self_.get()._field_importer, _62617_oldMod);
		});;
		if ((*(_60738_imp)).get()._field_Std) {
			_1c4aebe77_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c4aead99_SetModPath(_self_.get()._field_importer, _1c222ac6d_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1c4a59b93_Ast>> _63122_asts;;
		jule::Slice<_1c2220900_Log> _63132_errors;;
		({
			__jule_tuple_sx_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log __jule_assign_result = _1c4aebe77_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c4aebaae_ImportPackage(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path, (!((*(_60738_imp)).get()._field_Std)));
			_63122_asts = __jule_assign_result.__jule_result_arg0;
			_63132_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63132_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_63132_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1c4ac104a_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_62617_oldMod), &((*(_60738_imp)).get()._field_Path));
		{
			auto expr = &(_63122_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac6d8edd:;
			if (it != expr_end) {
				jule::Ptr<_1c4a59b93_Ast> _63925_ast = *it;
				{
					jule::Ptr<_1c45e20dd_SymbolTable> _64025_table = nullptr;;
					({
						__jule_tuple_x_1c45e20dd_SymbolTable__jule_tuple_s_1c2220900_Log __jule_assign_result = _1c4b7890a_buildSymbols(&(_63925_ast), &(_self_.get()._field_importer), _self_);
						_64025_table = __jule_assign_result.__jule_result_arg0;
						_63132_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63132_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_63132_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*(_60738_imp)).get()._field_Package.get()._field_Files = jule::alloc_for_append((*(_60738_imp)).get()._field_Package.get()._field_Files,1);(*(_60738_imp)).get()._field_Package.get()._field_Files.__push(_64025_table);;
				}
				_iter_next_1ac6d8edd:;
				++it;
				goto _iter_begin_1ac6d8edd;
			}
			_iter_end_1ac6d8edd:;
		};
	};
	_1c4abec19_implImportSelections(_self_.ptr(), _60738_imp, _60761_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4ac1721_importUseDecl(jule::Ptr<_1c4abc4ca_symbolBuilder> _self_, jule::Ptr<_1c4aa69e2_UseDecl>* _65438_decl) {
	jule::Ptr<_1c4aeeb28_ImportInfo> _65517_imp = _1c4abe5dc_buildImport(_self_, _65438_decl);;
	if ((_65517_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66117_ok = _1c4abe8ea_checkDuplicateUseDecl(_self_.ptr(), &(_65517_imp));;
	if ((!(_66117_ok))) {
		return nullptr;;
	};
	_66117_ok=_1c4ac1413_importPackage(_self_, &(_65517_imp), _65438_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_65517_imp);;
	if (_66117_ok) {
		_1c4aebe77_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c4aebd34_Imported(_self_.get()._field_importer, _65517_imp);
		return _65517_imp;;
	};
	return nullptr;;
}



inline void _1c4ac18ec_importUseDecls(jule::Ptr<_1c4abc4ca_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6dd71d:;
		if (it != expr_end) {
			jule::Ptr<_1c4aa69e2_UseDecl> _67621_decl = *it;
			{
				_1c4ac1721_importUseDecl(_self_, &(_67621_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1ac6dd71d;
				};
			}
			_iter_next_1ac6dd71d:;
			++it;
			goto _iter_begin_1ac6dd71d;
		}
		_iter_end_1ac6dd71d:;
	};
}



inline void _1c4ac1b72_appendNode(_1c4abc4ca_symbolBuilder* _self_, _1c4a5a985_Node* _68534_node) {
	{
		auto &_match_expr{ (*(_68534_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ac6de246:;
			{
				(*(_self_))._field_table.get()._field_Impls = jule::alloc_for_append((*(_self_))._field_table.get()._field_Impls,1);(*(_self_))._field_table.get()._field_Impls.__push(_1c4abbe7a_buildImpl((*(_68534_node))._field_Data.cast_ptr<_1c4aaa331_Impl>(&__jule_any_type11)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ac6e0115:;
			{
				jule::Ptr<_1c4701230_TypeAlias> _69021_ta = _1c4ab866e_buildTypeAlias((*(_68534_node))._field_Data.cast_ptr<_1c4aa5606_TypeAliasDecl>(&__jule_any_type12));;
				(*(_self_))._field_table.get()._field_TypeAliases = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeAliases,1);(*(_self_))._field_table.get()._field_TypeAliases.__push(_69021_ta);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ac6e017b:;
			{
				jule::Ptr<_1c4a86ebc_Struct> _69321_srct = _1c4ab8ecc_buildStruct((*(_68534_node))._field_Data.cast_ptr<_1c4aa9550_StructDecl>(&__jule_any_type13));;
				(*(_self_))._field_table.get()._field_Structs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Structs,1);(*(_self_))._field_table.get()._field_Structs.__push(_69321_srct);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac6e01e2:;
			{
				jule::Ptr<_1c4ab22e4_Fn> _69621_f = _1c4ab9b37_buildFn((*(_68534_node))._field_Data.cast_ptr<_1c4aa0cb6_FnDecl>(&__jule_any_type14));;
				(*(_self_))._field_table.get()._field_Funcs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Funcs,1);(*(_self_))._field_table.get()._field_Funcs.__push(_69621_f);;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ac6e092e:;
			{
				jule::Ptr<_1c4ac306e_Trait> _69921_t = _1c4aba41d_buildTrait((*(_68534_node))._field_Data.cast_ptr<_1c4aa9c26_TraitDecl>(&__jule_any_type15));;
				(*(_self_))._field_table.get()._field_Traits = jule::alloc_for_append((*(_self_))._field_table.get()._field_Traits,1);(*(_self_))._field_table.get()._field_Traits.__push(_69921_t);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ac6e0995:;
			{
				jule::Ptr<_1c4b2c837_Var> _70221_v = _1c4abb93b_buildVar((*(_68534_node))._field_Data.cast_ptr<_1c4aa1c95_VarDecl>(&__jule_any_type16));;
				(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_70221_v);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ac6e0a0b:;
			{
				jule::Ptr<_1c4ac5802_Enum> _70521_e = _1c4abadad_buildEnum((*(_68534_node))._field_Data.cast_ptr<_1c4aa798d_EnumDecl>(&__jule_any_type17));;
				(*(_self_))._field_table.get()._field_Enums = jule::alloc_for_append((*(_self_))._field_table.get()._field_Enums,1);(*(_self_))._field_table.get()._field_Enums.__push(_70521_e);;
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1ac6e0a72:;
			{
				jule::Ptr<_1c4ac6dec_TypeEnum> _70821_e = _1c4abb694_buildTypeEnum((*(_68534_node))._field_Data.cast_ptr<_1c4aa8a9e_TypeEnumDecl>(&__jule_any_type18));;
				(*(_self_))._field_table.get()._field_TypeEnums = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeEnums,1);(*(_self_))._field_table.get()._field_TypeEnums.__push(_70821_e);;
			}
		}
		else {
			_case_begin_1ac6e0005:;
			{
				_1c4abcd49_pushErr(_self_, &((*(_68534_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac6deea0:;
	};
}



inline void _1c4ac1d4d_appendNodes(_1c4abc4ca_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6ecc6b:;
		if (it != expr_end) {
			_1c4a5a985_Node _71621_node = *it;
			{
				_1c4ac1b72_appendNode(_self_, &(_71621_node));
			}
			_iter_next_1ac6ecc6b:;
			++it;
			goto _iter_begin_1ac6ecc6b;
		}
		_iter_end_1ac6ecc6b:;
	};
}



inline void _1c4ac20c3_pushDirectivePass(_1c4abc4ca_symbolBuilder* _self_, jule::Ptr<_1c4a5ad81_Directive>* _72141_d) {
	if (((*(_72141_d)).get()._field_Args.len() == 0LL)) {
		_1c4abcd49_pushErr(_self_, &((*(_72141_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_72141_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_2039861ab_Token> _72617_arg = (*(_72141_d)).get()._field_Args[1LL];;
		_1c4abcd49_pushErr(_self_, &(_72617_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_72141_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_2039861ab_Token> _73013_arg = (*(_72141_d)).get()._field_Args[0LL];;
	if ((_73013_arg.get()._field_Id != static_cast<jule::U32>(6LLU))) {
		_1c4abcd49_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_73013_arg.get()._field_Kind[0LL] != '\"')) {
		_1c4abcd49_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_self_))._field_table.get()._field_Passes = jule::alloc_for_append((*(_self_))._field_table.get()._field_Passes,1);(*(_self_))._field_table.get()._field_Passes.__push(_1c4ab7c89_Pass{._field_Token=(*(_72141_d)).get()._field_Tag, ._field_Text=_73013_arg.get()._field_Kind.slice(1LL, (_73013_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1c4ac229e_appendTopDirectives(_1c4abc4ca_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7017ec:;
		if (it != expr_end) {
			jule::Ptr<_1c4a5ad81_Directive> _74821_d = *it;
			{
				{
					auto &_match_expr{ _74821_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1ac704a20:;
						{
							_1c4ac20c3_pushDirectivePass(_self_, &(_74821_d));
						}
					}
					_match_end_1ac704998:;
				};
			}
			_iter_next_1ac7017ec:;
			++it;
			goto _iter_begin_1ac7017ec;
		}
		_iter_end_1ac7017ec:;
	};
}



inline void _1c4ac247a_build(jule::Ptr<_1c4abc4ca_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1c45e20dd_SymbolTable>(_1c45e20dd_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1c4ac229e_appendTopDirectives(_self_.ptr());
	_1c4ac18ec_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1c4ac1d4d_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c4abc4ca_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c4ac346a_Str(_1c4ac306e_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c4ac3778_Equal(jule::Ptr<_1c4ac306e_Trait> _self_, jule::Ptr<_1c4621d32_TypeKind> _2621_other) {
	jule::Ptr<_1c4ac306e_Trait> _2713_trt = _1c4b60738_Trait(_2621_other.ptr());;
	return (_self_ == _2713_trt);;
}



inline jule::Bool _1c4ac3b0d_IsBuiltin(_1c4ac306e_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_1c4ab22e4_Fn> _1c4ac3e1b_FindMethod(_1c4ac306e_Trait* _self_, jule::Str _4029_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac70875a:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_Ident == _4029_ident)) {
					return _4121_f;;
				};
			}
			_iter_next_1ac70875a:;
			++it;
			goto _iter_begin_1ac70875a;
		}
		_iter_end_1ac70875a:;
	};
	return _1c4ac4537_findMethodInherit(_self_, &(_4029_ident));;
}



inline jule::Bool _1c4ac4229_inherits(jule::Ptr<_1c4ac306e_Trait> _self_, jule::Ptr<_1c4ac306e_Trait>* _4929_t) {
	if ((_self_ == (*(_4929_t)))) {
		return true;;
	};
	{
		auto expr = &(_self_.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac709c45:;
		if (it != expr_end) {
			jule::Ptr<_1c4b610b8_TypeSymbol> _5321_i = *it;
			{
				if (_1c4ac4229_inherits(_1c4b60738_Trait(_5321_i.get()._field_Kind.ptr()), _4929_t)) {
					return true;;
				};
			}
			_iter_next_1ac709c45:;
			++it;
			goto _iter_begin_1ac709c45;
		}
		_iter_end_1ac709c45:;
	};
	return false;;
}



inline jule::Ptr<_1c4ab22e4_Fn> _1c4ac4537_findMethodInherit(_1c4ac306e_Trait* _self_, jule::Str* _6137_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac70adcd:;
		if (it != expr_end) {
			jule::Ptr<_1c4b610b8_TypeSymbol> _6221_i = *it;
			{
				if ((_6221_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1ac70adcd;
				};
				jule::Ptr<_1c4ac306e_Trait> _6621_t = _1c4b60738_Trait(_6221_i.get()._field_Kind.ptr());;
				if ((_6621_t != nullptr)) {
					jule::Ptr<_1c4ab22e4_Fn> _6825_f2 = _1c4ac3e1b_FindMethod(_6621_t.ptr(), (*(_6137_ident)));;
					if ((_6825_f2 != nullptr)) {
						return _6825_f2;;
					};
				};
			}
			_iter_next_1ac70adcd:;
			++it;
			goto _iter_begin_1ac70adcd;
		}
		_iter_end_1ac70adcd:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ac306e_Trait _Src) {
	_Stream << _1c4ac346a_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1c4ac51e7_AutoExpr(_1c4ac4d0c_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ac4d0c_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c4ac5b65_Str(_1c4ac5802_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c4ac5e73_Equal(jule::Ptr<_1c4ac5802_Enum> _self_, jule::Ptr<_1c4621d32_TypeKind> _3821_other) {
	jule::Ptr<_1c4ac5802_Enum> _3913_enm = _1c4b5e803_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1c4ac4d0c_EnumItem> _1c4ac63b3_FindItem(_1c4ac5802_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac70e8b5:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac4d0c_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1ac70e8b5:;
			++it;
			goto _iter_begin_1ac70e8b5;
		}
		_iter_end_1ac70e8b5:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ac5802_Enum _Src) {
	_Stream << _1c4ac5b65_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ac6836_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c4ac722c_Str(_1c4ac6dec_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c4ac753a_Equal(jule::Ptr<_1c4ac6dec_TypeEnum> _self_, jule::Ptr<_1c4621d32_TypeKind> _8021_other) {
	jule::Ptr<_1c4ac6dec_TypeEnum> _8113_tenm = _1c4b5ea23_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1c4ac6836_TypeEnumItem> _1c4ac7936_FindItem(_1c4ac6dec_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac711983:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac6836_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1ac711983:;
			++it;
			goto _iter_begin_1ac711983;
		}
		_iter_end_1ac711983:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ac6dec_TypeEnum _Src) {
	_Stream << _1c4ac722c_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1c4b07c74_Sema>*,jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>*)> _1c4ac985b_readyFn(jule::Ptr<_1c4ac942c_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1c4b07c74_Sema>*,jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>*)>([=](jule::Ptr<_1c4b07c74_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac71dbd2:;
			if (it != expr_end) {
				jule::I32 _6418_i = it - expr->begin();
				jule::Ptr<_1c4a9b630_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1c47006e6_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1ac71dbd2;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1c4621d32_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac720ba1:;
						if (it != expr_end) {
							jule::Ptr<_1c4a8e337_TypeDecl> _7029_mask = *it;
							{
								jule::I32 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_1c4621d32_TypeKind> _7229_kind = _1c4b10430_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1c4b77c6c_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type19) {
											_case_begin_1ac722da1:;
											{
												jule::Ptr<_1c4a8e8ed_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1c4a8e8ed_IdentTypeDecl>(&__jule_any_type19);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1c4aca9e4_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1ac722d4b:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1ac720ba1:;
							++it;
							goto _iter_begin_1ac720ba1;
						}
						_iter_end_1ac720ba1:;
					};
				}
				_iter_next_1ac71dbd2:;
				++it;
				_6418_i++;
				goto _iter_begin_1ac71dbd2;
			}
			_iter_end_1ac71dbd2:;
		};
		return true;;
	});;
}



inline jule::Bool _1c4ac9ac0_readyFi(jule::Ptr<_1c4ac942c_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1c4b14a0b_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _1c4ac985b_readyFn(_self_)));;
}



inline jule::Bool _1c4ac9d34_readySi(jule::Ptr<_1c4ac942c_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1c4ac985b_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _1c4aca098_ready(jule::Ptr<_1c4ac942c_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1c4ac9ac0_readyFi(_self_);;
	};
	return _1c4ac9d34_readySi(_self_);;
}



inline jule::Bool _1c4aca30c_check(jule::Ptr<_1c4ac942c_constraintChecker> _self_) {
	if ((!(_1c4aca098_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac729a89:;
		if (it != expr_end) {
			jule::I32 _11914_i = it - expr->begin();
			jule::Ptr<_1c47006e6_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1ac729a89;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac72a6b1:;
					if (it != expr_end) {
						jule::Ptr<_1c4621d32_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1c4b6197b_Prim> _12425_prim = _1c4b5e45c_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1c4b62570_IsConstraint(_12425_prim.ptr()))) {
								if (_1c4aca708_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1ac729a89;
								};
								goto _iter_next_1ac72a6b1;
							};
							if (_1c4622580_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1ac729a89;
							};
						}
						_iter_next_1ac72a6b1:;
						++it;
						goto _iter_begin_1ac72a6b1;
					}
					_iter_end_1ac72a6b1:;
				};
				_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1ac729a89:;
			++it;
			_11914_i++;
			goto _iter_begin_1ac729a89;
		}
		_iter_end_1ac729a89:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ac942c_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4acb75e_IsTraitImpl(_1c4acb363_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1c4acb9c3_IsStructImpl(_1c4acb363_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4acb363_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad13bd_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad17b9_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad1aa5_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad1e29_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad2215_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4ad2a2e_IsWhileNext(_1c4ad2688_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad2688_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad306d_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad3469_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad3821_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad3b0c_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad3de8_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad42a0_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad4723_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad4aca_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4ad5625_IsGenericTypeMatch(_1c4ad5119_Match* _self_) {
	return (((*(_self_))._field_TypeMatch && ((*(_self_))._field_Expr != nullptr)) && (*(_self_))._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad5119_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4ad5e2d_isDefault(_1c4ad5b64_Case* _self_) {
	return ((*(_self_))._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad5b64_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad6219_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad658d_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad6b98_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad711b_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4ad83b4_FindPackage(_1c4ad7e30_scopeChecker* _self_, jule::Str _45430_ident) {
	return _1c4b08291_FindPackage((*(_self_))._field_s.ptr(), _45430_ident);;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4ad86c2_SelectPackage(_1c4ad7e30_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)> _46432_selector) {
	return _1c4b0859e_SelectPackage((*(_self_))._field_s.ptr(), _46432_selector);;
}



inline jule::Ptr<_1c4b2c837_Var> _1c4ad8a79_FindVar(_1c4ad7e30_scopeChecker* _self_, jule::Str _47526_ident, jule::Bool _47538_cpp_linked) {
	;
	jule::Ptr<_1c4b2c837_Var> _47817_v = _1c45e4882_findVar((*(_self_))._field_table.ptr(), _47526_ident, _47538_cpp_linked, true);;
	if ((_47817_v != nullptr)) {
		return _47817_v;;
	};
	jule::Ptr<_1c4ad7e30_scopeChecker> _48317_parent = (*(_self_))._field_parent;;
	while ((_48317_parent != nullptr)) {
		{
			_47817_v=_1c45e4882_findVar(_48317_parent.get()._field_table.ptr(), _47526_ident, _47538_cpp_linked, true);
			if ((_47817_v != nullptr)) {
				return _47817_v;;
			};
			_48317_parent=_48317_parent.get()._field_parent;
		}
	_iter_next_1ac754476:;
	}
	_iter_end_1ac754476:;;
	return _1c4b08956_FindVar((*(_self_))._field_s.ptr(), _47526_ident, _47538_cpp_linked);;
}



inline jule::Ptr<_1c4701230_TypeAlias> _1c4ad8e31_FindTypeAlias(_1c4ad7e30_scopeChecker* _self_, jule::Str _50232_ident, jule::Bool _50244_cppLinked) {
	;
	jule::Ptr<_1c4701230_TypeAlias> _50517_ta = _1c45e4cd3_findTypeAlias((*(_self_))._field_table.ptr(), _50232_ident, _50244_cppLinked, true);;
	if ((_50517_ta != nullptr)) {
		return _50517_ta;;
	};
	jule::Ptr<_1c4ad7e30_scopeChecker> _51017_parent = (*(_self_))._field_parent;;
	while ((_51017_parent != nullptr)) {
		{
			_50517_ta=_1c45e4cd3_findTypeAlias(_51017_parent.get()._field_table.ptr(), _50232_ident, _50244_cppLinked, true);
			if ((_50517_ta != nullptr)) {
				return _50517_ta;;
			};
			_51017_parent=_51017_parent.get()._field_parent;
		}
	_iter_next_1ac7570d3:;
	}
	_iter_end_1ac7570d3:;;
	return _1c4b08d0d_FindTypeAlias((*(_self_))._field_s.ptr(), _50232_ident, _50244_cppLinked);;
}



inline jule::Ptr<_1c4a86ebc_Struct> _1c4ad92d8_FindStruct(_1c4ad7e30_scopeChecker* _self_, jule::Str _52729_ident, jule::Bool _52741_cppLinked) {
	return _1c4b091b5_FindStruct((*(_self_))._field_s.ptr(), _52729_ident, _52741_cppLinked);;
}



inline jule::Ptr<_1c4ab22e4_Fn> _1c4ad9690_FindFn(_1c4ad7e30_scopeChecker* _self_, jule::Str _53625_ident, jule::Bool _53637_cppLinked) {
	return _1c4b0956c_FindFn((*(_self_))._field_s.ptr(), _53625_ident, _53637_cppLinked);;
}



inline jule::Ptr<_1c4ac306e_Trait> _1c4ad999d_FindTrait(_1c4ad7e30_scopeChecker* _self_, jule::Str _54528_ident) {
	return _1c4b0987a_FindTrait((*(_self_))._field_s.ptr(), _54528_ident);;
}



inline jule::Ptr<_1c4ac5802_Enum> _1c4ad9cab_FindEnum(_1c4ad7e30_scopeChecker* _self_, jule::Str _55427_ident) {
	return _1c4b09b88_FindEnum((*(_self_))._field_s.ptr(), _55427_ident);;
}



inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4ada0b9_FindTypeEnum(_1c4ad7e30_scopeChecker* _self_, jule::Str _56331_ident) {
	return _1c4b09e96_FindTypeEnum((*(_self_))._field_s.ptr(), _56331_ident);;
}



inline jule::Bool _1c4ada3e9_isUnsafe(jule::Ptr<_1c4ad7e30_scopeChecker> _self_) {
	jule::Ptr<_1c4ad7e30_scopeChecker> _57117_scope = _self_;;
	_julec_label_iter:;
	if (_57117_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_57117_scope.get()._field_parent != nullptr)) {
		_57117_scope=_57117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1c4ada65d_isRoot(_1c4ad7e30_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1c4ada839_stop(_1c4ad7e30_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1c4adaa9d_stopped(_1c4ad7e30_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1c4adad12_isDeferred(jule::Ptr<_1c4ad7e30_scopeChecker> _self_) {
	jule::Ptr<_1c4ad7e30_scopeChecker> _60417_scope = _self_;;
	_julec_label_iter:;
	if (_60417_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_60417_scope.get()._field_parent != nullptr)) {
		_60417_scope=_60417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1c4ad7e30_scopeChecker> _1c4adb076_getRoot(jule::Ptr<_1c4ad7e30_scopeChecker> _self_) {
	jule::Ptr<_1c4ad7e30_scopeChecker> _62217_root = _self_;;
	while (((_62217_root.get()._field_parent != nullptr) && (_62217_root.get()._field_owner == nullptr))) {
		{
			_62217_root=_62217_root.get()._field_parent;
		}
	_iter_next_1ac76152c:;
	}
	_iter_end_1ac76152c:;;
	return _62217_root;;
}



inline jule::Ptr<_1c4ad7e30_scopeChecker> _1c4adb2da_getHardRoot(jule::Ptr<_1c4ad7e30_scopeChecker> _self_) {
	jule::Ptr<_1c4ad7e30_scopeChecker> _63217_root = _self_;;
	while ((_63217_root.get()._field_parent != nullptr)) {
		{
			_63217_root=_63217_root.get()._field_parent;
		}
	_iter_next_1ac76274d:;
	}
	_iter_end_1ac76274d:;;
	return _63217_root;;
}



inline jule::Ptr<_1c4ad3b0c_Label> _1c4adb5e8_findLabel(_1c4ad7e30_scopeChecker* _self_, jule::Str _64228_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac763287:;
		if (it != expr_end) {
			jule::Any _64321_st = *it;
			{
				{
					auto &_match_expr{ _64321_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1ac763c9e:;
						{
							jule::Ptr<_1c4ad3b0c_Label> _64625_label = _64321_st.cast_ptr<_1c4ad3b0c_Label>(&__jule_any_type20);;
							if ((_64625_label.get()._field_Ident == _64228_ident)) {
								return _64625_label;;
							};
						}
					}
					_match_end_1ac763ba0:;
				};
			}
			_iter_next_1ac763287:;
			++it;
			goto _iter_begin_1ac763287;
		}
		_iter_end_1ac763287:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ad6b98_scopeLabel> _1c4adb906_findLabelScope(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Str _65834_ident) {
	jule::Ptr<_1c4ad6b98_scopeLabel> _65917_label = _1c4adbc14_findLabelAll(_self_.ptr(), _65834_ident);;
	if (((_65917_label != nullptr) && (_65917_label.get()._field_scope == _self_))) {
		return _65917_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ad6b98_scopeLabel> _1c4adbc14_findLabelAll(_1c4ad7e30_scopeChecker* _self_, jule::Str _67031_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac765ed2:;
		if (it != expr_end) {
			jule::Ptr<_1c4ad6b98_scopeLabel> _67121_lbl = *it;
			{
				if ((_67121_lbl.get()._field_label.get()._field_Ident == _67031_ident)) {
					return _67121_lbl;;
				};
			}
			_iter_next_1ac765ed2:;
			++it;
			goto _iter_begin_1ac765ed2;
		}
		_iter_end_1ac765ed2:;
	};
	return nullptr;;
}



inline jule::Bool _1c4adc0bb_isDuplicatedIdent(_1c4ad7e30_scopeChecker* _self_, jule::Uintptr _68236_itself, jule::Str _68253_ident) {
	jule::Ptr<_1c4b2c837_Var> _68313_v = _1c4ad8a79_FindVar(_self_, _68253_ident, false);;
	if (((_68313_v != nullptr) && (static_cast<jule::Uintptr>(_68313_v) != _68236_itself))) {
		if ((_68313_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_1c4b0a2e8_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1c4701230_TypeAlias> _69113_ta = _1c4ad8e31_FindTypeAlias(_self_, _68253_ident, false);;
	if (((_69113_ta != nullptr) && (static_cast<jule::Uintptr>(_69113_ta) != _68236_itself))) {
		if ((_69113_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_69113_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_1c4b0a2e8_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1c4adc341_checkVarDecl(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa1c95_VarDecl> _70236_decl) {
	jule::Ptr<_1c4b2c837_Var> _70317_v = _1c4abb93b_buildVar(_70236_decl);;
	_70317_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70317_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_70317_v, &__jule_any_type8));;
	});;
	if (_1c4adc0bb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70317_v)), _70317_v.get()._field_Ident)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _70317_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_70317_v.get()._field_Ident, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1c4ada839_stop(_self_.ptr());
		return;;
	};
	_1c4b1b7c1_checkVarDecl(_self_.get()._field_s, &(_70317_v), jule::Trait<_1c4b77c6c_Lookup>(_self_, 0));
	if (((!(_1c4b2ce64_IsTypeInferred(_70317_v.ptr()))) && ((_70317_v.get()._field_Kind == nullptr) || (_70317_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1c4b24c6e_checkTypeVar(_self_.get()._field_s, &(_70317_v), jule::Trait<_1c4b77c6c_Lookup>(_self_, 0));
}



inline void _1c4adc5b6_checkTypeAliasDecl(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa5606_TypeAliasDecl> _72642_decl) {
	jule::Ptr<_1c4701230_TypeAlias> _72717_ta = _1c4ab866e_buildTypeAlias(_72642_decl);;
	if (_1c4adc0bb_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72717_ta)), _72717_ta.get()._field_Ident)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _72717_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_72717_ta.get()._field_Ident, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1c4ada839_stop(_self_.ptr());
		return;;
	};
	_1c4b162c1_checkTypeAliasDecl(_self_.get()._field_s, &(_72717_ta), jule::Trait<_1c4b77c6c_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72717_ta);;
	if ((_72717_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1c4ada839_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1c4ad13bd_Scope> _1c4adc82a_getChild(_1c4ad7e30_scopeChecker* _self_) {
	return jule::new_ptr<_1c4ad13bd_Scope>(_1c4ad13bd_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1c4adcbe3_checkChildSsc(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a9e2c0_ScopeTree>* _75038_tree, jule::Ptr<_1c4ad13bd_Scope>* _75061_s, jule::Ptr<_1c4ad7e30_scopeChecker>* _75077_ssc) {
	(*(_75077_ssc)).get()._field_parent=_self_;
	_1c4ae7c31_check((*(_75077_ssc)), _75038_tree, _75061_s);
}



inline jule::Ptr<_1c4ad13bd_Scope> _1c4add09a_checkChildSc(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a9e2c0_ScopeTree>* _75537_tree, jule::Ptr<_1c4ad7e30_scopeChecker>* _75560_ssc) {
	jule::Ptr<_1c4ad13bd_Scope> _75617_s = _1c4adc82a_getChild(_self_.ptr());;
	_1c4adcbe3_checkChildSsc(_self_, _75537_tree, &(_75617_s), _75560_ssc);
	return _75617_s;;
}



inline jule::Ptr<_1c4ad13bd_Scope> _1c4add3a8_checkChild(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a9e2c0_ScopeTree>* _76135_tree) {
	jule::Ptr<_1c4ad7e30_scopeChecker> _76217_ssc = _1c4ae7e95_newChildChecker(_self_);;
	return _1c4add09a_checkChildSc(_self_, _76135_tree, &(_76217_ssc));;
}



inline void _1c4add62d_checkAnonScope(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a9e2c0_ScopeTree> _76638_tree) {
	jule::Ptr<_1c4ad13bd_Scope> _76717_s = _1c4add3a8_checkChild(_self_, &(_76638_tree));;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_76717_s, &__jule_any_type21));;
}



inline void _1c4add94c_processErrorCall(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4ab10a1_BuiltinErrorCallExprModel>* _77141_m, jule::Ptr<_2039861ab_Token> _77172_err) {
	if (_1c4adad12_isDeferred(_self_)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _77172_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c4ad7e30_scopeChecker> _77617_root = _1c4adb076_getRoot(_self_);;
	if ((!(_77617_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _77172_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1c4b0ac55_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_77141_m)).get()._field_Func=_77617_root.get()._field_owner;
}



inline void _1c4addbc2_checkExpr(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a93858_Expr> _78433_expr) {
	jule::Ptr<_1c45e8985_Eval> _78517_eval = _1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0));;
	_78517_eval.get()._field_ignored=true;
	jule::Ptr<_1c45e6e17_Data> _78717_d = _1c46143a7_evalExpr(_78517_eval, _78433_expr);;
	if ((_78717_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78717_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ac77ba20:;
			{
				jule::Ptr<_1c4ab10a1_BuiltinErrorCallExprModel> _79421_m = _78717_d.get()._field_Model.cast_ptr<_1c4ab10a1_BuiltinErrorCallExprModel>(&__jule_any_type22);;
				_1c4add94c_processErrorCall(_self_, &(_79421_m), _78433_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type23));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1ac77bc2e:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type23));;
			}
		}
		else {
			_case_begin_1ac77bb74:;
			{
				_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _78433_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac77b987:;
	};
}



inline jule::Ptr<_1c4ad17b9_If> _1c4added0_checkIf(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa4605_If> _81431_i) {
	jule::Ptr<_1c4ad13bd_Scope> _81517_s = _1c4add3a8_checkChild(_self_, &(_81431_i.get()._field_Scope));;
	jule::Ptr<_1c45e6e17_Data> _81717_d = _1c46143a7_evalExpr(_1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0)), _81431_i.get()._field_Expr);;
	if ((_81717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c4b6197b_Prim> _82217_prim = _1c4b5e45c_Prim(_81717_d.get()._field_Kind.ptr());;
	if (((_82217_prim == nullptr) || (!(_1c4b6494b_IsBool(_82217_prim.ptr()))))) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _81431_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c4ad17b9_If>(_1c4ad17b9_If{._field_Expr=_81717_d.get()._field_Model, ._field_Scope=_81517_s});;
}



inline jule::Ptr<_1c4ad1aa5_Else> _1c4ade2dd_checkElse(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa49ac_Else> _83433_e) {
	return jule::new_ptr<_1c4ad1aa5_Else>(_1c4ad1aa5_Else{._field_Scope=_1c4add3a8_checkChild(_self_, &(_83433_e.get()._field_Scope))});;
}



inline void _1c4ade563_checkConditional(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa4e30_Conditional> _84040_conditional) {
	jule::Ptr<_1c4ad1e29_Conditional> _84117_c = jule::new_ptr<_1c4ad1e29_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_84117_c, &__jule_any_type35));;
	_84117_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1c4ad17b9_If>>::alloc(0LL, (_84040_conditional.get()._field_Tail.len() + 1LL));
	_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1c4added0_checkIf(_self_, _84040_conditional.get()._field_Head));;
	{
		auto expr = &(_84040_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7860bd:;
		if (it != expr_end) {
			jule::Ptr<_1c4aa4605_If> _84721_elif = *it;
			{
				_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1c4added0_checkIf(_self_, _84721_elif));;
			}
			_iter_next_1ac7860bd:;
			++it;
			goto _iter_begin_1ac7860bd;
		}
		_iter_end_1ac7860bd:;
	};
	if ((_84040_conditional.get()._field_Default != nullptr)) {
		_84117_c.get()._field_Default=_1c4ade2dd_checkElse(_self_, _84040_conditional.get()._field_Default);
	};
}



inline void _1c4ade9c5_checkIterScopeSsc(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Uintptr _85637_it, jule::Ptr<_1c4a9e2c0_ScopeTree> _85654_tree, jule::Ptr<_1c4ad13bd_Scope>* _85677_s, jule::Ptr<_1c4ad7e30_scopeChecker> _85692_ssc) {
	_85692_ssc.get()._field_it=_85637_it;
	_1c4adcbe3_checkChildSsc(_self_, &(_85654_tree), _85677_s, &(_85692_ssc));
}



inline jule::Ptr<_1c4ad13bd_Scope> _1c4adee26_checkIterScopeSc(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Uintptr _86136_it, jule::Ptr<_1c4a9e2c0_ScopeTree> _86153_tree, jule::Ptr<_1c4ad7e30_scopeChecker> _86175_ssc) {
	jule::Ptr<_1c4ad13bd_Scope> _86217_scope = _1c4adc82a_getChild(_self_.ptr());;
	_1c4ade9c5_checkIterScopeSsc(_self_, _86136_it, _86153_tree, &(_86217_scope), _86175_ssc);
	return _86217_scope;;
}



inline jule::Ptr<_1c4ad13bd_Scope> _1c4ae02cd_checkIterScope(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Uintptr _86734_it, jule::Ptr<_1c4a9e2c0_ScopeTree>* _86752_tree) {
	jule::Ptr<_1c4ad7e30_scopeChecker> _86817_ssc = _1c4ae7e95_newChildChecker(_self_);;
	return _1c4adee26_checkIterScopeSc(_self_, _86734_it, (*(_86752_tree)), _86817_ssc);;
}



inline void _1c4ae0553_checkInfIter(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa27ac_Iter>* _87237_it) {
	jule::Ptr<_1c4ad2215_InfIter> _87317_kind = jule::new_ptr<_1c4ad2215_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_87317_kind, &__jule_any_type36));;
	_87317_kind.get()._field_Scope=_1c4ae02cd_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87317_kind)), &((*(_87237_it)).get()._field_Scope));
}



inline void _1c4ae07c8_checkWhileIter(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa27ac_Iter>* _87839_it) {
	jule::Ptr<_1c4aa3082_WhileKind> _87917_wh = (*(_87839_it)).get()._field_Kind.cast_ptr<_1c4aa3082_WhileKind>(&__jule_any_type37);;
	if (((_87917_wh.get()._field_Expr == nullptr) && (_87917_wh.get()._field_Next == nullptr))) {
		_1c4ae0553_checkInfIter(_self_, _87839_it);
		return;;
	};
	jule::Ptr<_1c4ad2688_WhileIter> _88517_kind = jule::new_ptr<_1c4ad2688_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_88517_kind, &__jule_any_type38));;
	_88517_kind.get()._field_Scope=_1c4ae02cd_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88517_kind)), &((*(_87839_it)).get()._field_Scope));
	if ((_87917_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1c45e6e17_Data> _89021_d = _1c46143a7_evalExpr(_1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0)), _87917_wh.get()._field_Expr);;
		if ((_89021_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1c4b6197b_Prim> _89517_prim = _1c4b5e45c_Prim(_89021_d.get()._field_Kind.ptr());;
		if ((_89517_prim == nullptr)) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), (*(_87839_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1c4b6494b_IsBool(_89517_prim.ptr())))) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), (*(_87839_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_88517_kind.get()._field_Expr=_89021_d.get()._field_Model;
	};
	if (_1c4aa33d4_IsWhileNext(_87917_wh.ptr())) {
		if ((!(_1c4ad08ea_isValidAstStForNextSt(&(_87917_wh.get()._field_Next))))) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _91517_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1c4ae69cc_checkNode(_self_, &(_87917_wh.get()._field_Next));
		if ((_91517_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91825_st = _self_.get()._field_scope.get()._field_Stmts[_91517_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _91517_n);
			if ((!(_1c4ad0b92_isValidStForNextSt(&(_91825_st))))) {
				_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_88517_kind.get()._field_Next=_91825_st;
		};
	};
}



inline void _1c4ae0a4d_checkRangeIter(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa27ac_Iter>* _92839_it) {
	jule::Ptr<_1c4aa3923_RangeKind> _92917_rang = (*(_92839_it)).get()._field_Kind.cast_ptr<_1c4aa3923_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1c45e6e17_Data> _93117_d = _1c46143a7_evalExpr(_1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0)), _92917_rang.get()._field_Expr);;
	if ((_93117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1c4ad306d_RangeIter> _93617_kind = jule::new_ptr<_1c4ad306d_RangeIter>(_1c4ad306d_RangeIter{._field_Expr=_93117_d, });;
	_1c45dcec9_rangeChecker _94017_rc = _1c45dcec9_rangeChecker{._field_sc=_self_, ._field_rang=_92917_rang, ._field_Kind=_93617_kind, ._field_d=_93117_d};;
	jule::Bool _94613_ok = _1c45de88d_check(&_94017_rc);;
	if ((!(_94613_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_93617_kind, &__jule_any_type40));;
	jule::Ptr<_1c4ad7e30_scopeChecker> _95317_ssc = _1c4ae7e95_newChildChecker(_self_);;
	jule::Ptr<_1c4ad13bd_Scope> _95417_scope = _1c4adc82a_getChild(_self_.ptr());;
	if ((_93617_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1c4b0a2e8_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1c4adc0bb_isDuplicatedIdent(_self_.ptr(), 0LLU, _93617_kind.get()._field_KeyA.get()._field_Ident))) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1c4b0ac55_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyA.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyA);;
	};
	if ((_93617_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1c4b0a2e8_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1c4adc0bb_isDuplicatedIdent(_self_.ptr(), 0LLU, _93617_kind.get()._field_KeyB.get()._field_Ident))) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1c4b0ac55_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyB.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyB);;
	};
	_1c4ade9c5_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93617_kind)), (*(_92839_it)).get()._field_Scope, &(_95417_scope), _95317_ssc);
	_93617_kind.get()._field_Scope=_95417_scope;
}



inline void _1c4ae0cc3_checkIter(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa27ac_Iter> _97833_it) {
	if (_1c4aa2b0e_IsInf(_97833_it.ptr())) {
		_1c4ae0553_checkInfIter(_self_, &(_97833_it));
		return;;
	};
	{
		auto &_match_expr{ _97833_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ac7a0eea:;
			{
				_1c4ae07c8_checkWhileIter(_self_, &(_97833_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ac7a1b77:;
			{
				_1c4ae0a4d_checkRangeIter(_self_, &(_97833_it));
			}
		}
		else {
			_case_begin_1ac7a0dc9:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1ac7a0d74:;
	};
}



inline jule::Bool _1c4ae10d1_checkValidContLabel(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Uintptr _99439_it) {
	jule::Ptr<_1c4ad7e30_scopeChecker> _99517_scope = _self_;;
	_julec_label_iter:;
	if ((_99517_scope.get()._field_it == _99439_it)) {
		return true;;
	};
	if ((_99517_scope.get()._field_parent != nullptr)) {
		_99517_scope=_99517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1c4ae13de_checkValidBreakLabel(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Uintptr _101040_ptr) {
	jule::Ptr<_1c4ad7e30_scopeChecker> _101117_scope = _self_;;
	_julec_label_iter:;
	if ((_101117_scope.get()._field_it == _101040_ptr)) {
		return true;;
	};
	if ((_101117_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _101917_mtch = static_cast<jule::Uintptr>(((_1c4ad5b64_Case*)(_101117_scope.get()._field_cse))->_field_Owner);;
		if ((_101917_mtch == _101040_ptr)) {
			return true;;
		};
	};
	if ((_101117_scope.get()._field_parent != nullptr)) {
		_101117_scope=_101117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1c4ad3469_ContSt> _1c4ae16ec_checkContValidScope(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa4182_ContSt> _103339_c) {
	if (_1c4adad12_isDeferred(_self_)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_103339_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1c4ad3469_ContSt>();;
	};
	jule::Ptr<_1c4ad7e30_scopeChecker> _104317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104317_scope.get()._field_it == 0LLU) && (_104317_scope.get()._field_parent != nullptr)) && (_104317_scope.get()._field_owner == nullptr))) {
			_case_begin_1ac7a8c7d:;
			{
				_104317_scope=_104317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104317_scope.get()._field_it != 0LLU)) {
			_case_begin_1ac7a8d05:;
			{
				return jule::new_ptr<_1c4ad3469_ContSt>(_1c4ad3469_ContSt{._field_It=_104317_scope.get()._field_it});;
			}
		}
		_match_end_1ac7a8bc3:;
	};
	_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1c4ae1972_checkCont(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa4182_ContSt> _105729_c) {
	jule::Ptr<_1c4ad3469_ContSt> _105817_cont = _1c4ae16ec_checkContValidScope(_self_, _105729_c);;
	if ((_105817_cont == nullptr)) {
		return;;
	};
	if ((_105729_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1c4ad6b98_scopeLabel> _106421_label = _1c4acdac4_findLabelParent(_105729_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_106421_label == nullptr)) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_106421_label.get()._field_used=true;
		if (((_106421_label.get()._field_pos + 1LL) >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I32 _107717_i = (_106421_label.get()._field_pos + 1LL);;
		if ((_107717_i >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _108125_st = _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_107717_i];;
			{
				auto &_match_expr{ _108125_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1ac7b0999:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1c4ad2215_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1ac7b234c:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1c4ad306d_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1ac7b23b3:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1c4ad2688_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1ac7b21c6:;
					{
						_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1ac7b2171:;
			};
		};
	};
	if ((_105817_cont.get()._field_It != 0LLU)) {
		if ((!(_1c4ae10d1_checkValidContLabel(_self_, _105817_cont.get()._field_It)))) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_105817_cont, &__jule_any_type41));;
}



inline void _1c4ae1be7_checkLabel(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a9b9d7_LabelSt> _110434_l) {
	if ((_1c4adb5e8_findLabel(_self_.ptr(), _110434_l.get()._field_Ident) != nullptr)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _110434_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_110434_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1c4ad3b0c_Label> _111017_label = jule::new_ptr<_1c4ad3b0c_Label>(_1c4ad3b0c_Label{._field_Ident=_110434_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_111017_label, &__jule_any_type20));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1c4ad6b98_scopeLabel>>::make({jule::new_ptr<_1c4ad6b98_scopeLabel>(_1c4ad6b98_scopeLabel{._field_token=_110434_l.get()._field_Token, ._field_label=_111017_label, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1c4ae1e6c_pushGoto(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a9bd8e_GotoSt> _112332_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1c4ad3de8_GotoSt>(_1c4ad3de8_GotoSt{._field_Ident=_112332_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type42));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1c4ad711b_scopeGoto>>::make({jule::new_ptr<_1c4ad711b_scopeGoto>(_1c4ad711b_scopeGoto{._field_gt=_112332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1c4ae21e2_checkPostfix(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a9ccc4_AssignSt> _113536_a) {
	if ((_113536_a.get()._field_Left.len() > 1LL)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4a93858_Expr> _114117_expr = _113536_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1c45e6e17_Data> _114217_d = _1c46143a7_evalExpr(_1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0)), _114117_expr);;
	if ((_114217_d == nullptr)) {
		return;;
	};
	_1c4ad0653_checkAssign(&(_self_.get()._field_s), &(_114217_d), nullptr, _113536_a.get()._field_Setter);
	if ((_1c4b5e6c1_Ptr(_114217_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c4b686ec_Ptr> _115021_ptr = _1c4b5e6c1_Ptr(_114217_d.get()._field_Kind.ptr());;
		if (_1c4b691c0_IsUnsafe(_115021_ptr.ptr())) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_1c4b5e45c_Prim(_114217_d.get()._field_Kind.ptr()) == nullptr) || (!(_1c3177a32_IsNum(_1c4b5e45c_Prim(_114217_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1c4ad42a0_Postfix>(_1c4ad42a0_Postfix{._field_Expr=_114217_d.get()._field_Model, ._field_Op=_113536_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type43));;
}



inline jule::Bool _1c4ae2500_isNewAssignIdent(_1c4ad7e30_scopeChecker* _self_, jule::Str _116835_ident) {
	if ((_203988950_IsIgnoreIdent(_116835_ident) || _116835_ident.empty())) {
		return false;;
	};
	return (_1c45e518a_defByIdent((*(_self_))._field_table.ptr(), _116835_ident, false) == nullptr);;
}



inline jule::Bool _1c4ae2951_checkStructureAssignOp(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aab255_StructIns>* _117547_s, jule::Ptr<_1c4a9ccc4_AssignSt>* _117567_a, jule::Ptr<_1c45e6e17_Data>* _117586_r) {
	jule::Ptr<_1c4ab39ee_FnIns> _117817_overload = nullptr;;
	{
		auto &_match_expr{ (*(_117567_a)).get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1ac7c4062:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1ac7c53c6:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1ac7c543c:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1ac7c54a3:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1ac7c44a2:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1ac7c4518:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1ac7c457e:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1ac7c45e5:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1ac7c5690:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1ac7c5706:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1ac7c443b:;
			{
				_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), (*(_117567_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_117567_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4a81549_Str((*(_117547_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1ac7c3da8:;
	};
	if ((_117817_overload == nullptr)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), (*(_117567_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_117567_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4a81549_Str((*(_117547_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1c4ab2b30_ParamIns> _121017_p = _117817_overload.get()._field_Params[1LL];;
	return _1c4b12bc4_checkAssignType(_self_.get()._field_s, _121017_p.get()._field_Decl.get()._field_Reference, &(_121017_p.get()._field_Kind), _117586_r, (*(_117567_a)).get()._field_Setter);;
}



inline void _1c4ae2bc6_checkSingleAssign(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a9ccc4_AssignSt>* _121442_a) {
	jule::Ptr<_1c45e6e17_Data> _121517_l = nullptr;;
	if ((!(_203988950_IsIgnoreIdent((*(_121442_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1c4a93858_Expr> _121821_expr = (*(_121442_a)).get()._field_Left[0LL].get()._field_Expr;;
		_121517_l=_1c46143a7_evalExpr(_1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0)), _121821_expr);
		if ((_121517_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c45e8985_Eval> _122517_eval = nullptr;;
	if ((_121517_l != nullptr)) {
		_122517_eval=_1c4b123bb_evalp(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0), _121517_l.get()._field_Kind);
	} else {
		_122517_eval=_1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0));
	};
	_122517_eval.get()._field_unsafety=_1c4ada3e9_isUnsafe(_self_);
	jule::Ptr<_1c45e6e17_Data> _123217_r = _1c46143a7_evalExpr(_122517_eval, (*(_121442_a)).get()._field_Right);;
	if ((_123217_r == nullptr)) {
		return;;
	};
	if ((_121517_l == nullptr)) {
		if (_1c4b463cd_Void(_123217_r.get()._field_Kind.ptr())) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), (*(_121442_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_123217_r, &__jule_any_type23));;
		return;;
	};
	if ((!(_1c4ad0653_checkAssign(&(_self_.get()._field_s), &(_121517_l), _123217_r, (*(_121442_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_1c4b60c11_Tup(_123217_r.get()._field_Kind.ptr()) != nullptr)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), (*(_121442_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4aab783_OperandExprModel> _125417_lm = jule::new_ptr<_1c4aab783_OperandExprModel>(_1c4aab783_OperandExprModel{._field_Kind=_121517_l.get()._field_Kind, ._field_Model=_121517_l.get()._field_Model});;
	jule::Ptr<_1c4aab783_OperandExprModel> _125817_rm = jule::new_ptr<_1c4aab783_OperandExprModel>(_1c4aab783_OperandExprModel{._field_Kind=_123217_r.get()._field_Kind, ._field_Model=_123217_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1c4ad4723_Assign>(_1c4ad4723_Assign{._field_L=_125417_lm, ._field_R=_125817_rm, ._field_Op=(*(_121442_a)).get()._field_Setter}), &__jule_any_type44));;
	if ((!(*(_121442_a)).get()._field_Setter.get()._field_Kind.equal("=", 1))) {
		jule::Ptr<_1c4aab255_StructIns> _126521_strct = _1c4b604c4_Struct(_121517_l.get()._field_Kind.ptr());;
		if ((_126521_strct != nullptr)) {
			_1c4ae2951_checkStructureAssignOp(_self_, &(_126521_strct), _121442_a, &(_123217_r));
			return;;
		};
		(*(_121442_a)).get()._field_Setter.get()._field_Kind=(*(_121442_a)).get()._field_Setter.get()._field_Kind.slice(0LL, ((*(_121442_a)).get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1c46165b8_binaryEval _127221_solver = static__1c4616ed1_new(_122517_eval, (*(_121442_a)).get()._field_Setter);;
		_123217_r=_1c461bd3d_solveExplicit(&_127221_solver, &(_121517_l), &(_123217_r));
		if ((_123217_r == nullptr)) {
			return;;
		};
		((*(_121442_a)).get()._field_Setter.get()._field_Kind).append("=", 1);
		return;;
	};
	_1c45d263e_assignTypeChecker _128117_checker = _1c45d263e_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121517_l.get()._field_Kind, ._field_d=_123217_r, ._field_errorToken=(*(_121442_a)).get()._field_Setter};;
	if (_1c45d37b6_check(&_128117_checker)) {
		_125817_rm.get()._field_Model=_123217_r.get()._field_Model;
		_125417_lm.get()._field_Model=_121517_l.get()._field_Model;
	};
}



inline void _1c4ae3204_processEndPartOfMultiAssign(_1c4ad7e30_scopeChecker* _self_, jule::Ptr<_1c4ad4aca_MultiAssign>* _129351_st, jule::Ptr<_1c4a9ccc4_AssignSt>* _129414_a, jule::Ptr<_1c4a9c785_AssignLeft>* _129433_lexpr, jule::Ptr<_1c45e6e17_Data>* _129458_l, jule::Ptr<_1c45e6e17_Data>* _129473_r) {
	if (((!((*(_129433_lexpr)).get()._field_Reference)) && _203988950_IsIgnoreIdent((*(_129433_lexpr)).get()._field_Ident))) {
		if (_1c4b463cd_Void((*(_129473_r)).get()._field_Kind.ptr())) {
			_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_129414_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push(nullptr);;
		return;;
	};
	if (((*(_129414_a)).get()._field_Declarative && ((*(_129433_lexpr)).get()._field_Reference || _1c4ae2500_isNewAssignIdent(_self_, (*(_129433_lexpr)).get()._field_Ident)))) {
		if (_1c4adc0bb_isDuplicatedIdent(_self_, 0LLU, (*(_129433_lexpr)).get()._field_Ident)) {
			_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_129433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_1c4b0ac55_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1c4ada839_stop(_self_);
			return;;
		};
		if (_203988950_IsIgnoreIdent((*(_129433_lexpr)).get()._field_Ident)) {
			_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c4b2c837_Var> _131521_v = jule::new_ptr<_1c4b2c837_Var>(_1c4b2c837_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_129433_lexpr)).get()._field_Token, ._field_Ident=(*(_129433_lexpr)).get()._field_Ident, ._field_Mutable=(*(_129433_lexpr)).get()._field_Mutable, ._field_Reference=(*(_129433_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_1c45e7e90_Value>(_1c45e7e90_Value{._field_Expr=(*(_129414_a)).get()._field_Right, ._field_Data=(*(_129473_r))}), });;
		_1c4b24950_checkVar((*(_self_))._field_s, &(_131521_v));
		_131521_v.get()._field_Value=nullptr;
		(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push(jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=_131521_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_131521_v.get()._field_Mutable, ._field_Reference=_131521_v.get()._field_Reference, ._field_Lvalue=(!(_131521_v.get()._field_Constant)), ._field_Model=jule::Any(_131521_v, &__jule_any_type8), }));;
		(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_131521_v);;
		(*(_self_))._field_scope.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_scope.get()._field_Stmts,1);(*(_self_))._field_scope.get()._field_Stmts.__push(jule::Any(_131521_v, &__jule_any_type8));;
		return;;
	};
	if (((*(_129433_lexpr)).get()._field_Mutable || (*(_129433_lexpr)).get()._field_Reference)) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_129433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1c4ad0653_checkAssign(&((*(_self_))._field_s), _129458_l, (*(_129473_r)), (*(_129414_a)).get()._field_Setter)))) {
		return;;
	};
	;
	_1c4b15ad9_checkValidityForInitExpr((*(_self_))._field_s, (*(_129458_l)).get()._field_Mutable, false, &((*(_129458_l)).get()._field_Kind), _129473_r, &((*(_129414_a)).get()._field_Setter));
	_1c45d263e_assignTypeChecker _135817_checker = _1c45d263e_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_129458_l)).get()._field_Kind, ._field_d=(*(_129473_r)), ._field_errorToken=(*(_129414_a)).get()._field_Setter};;
	_1c45d37b6_check(&_135817_checker);
	(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push((*(_129458_l)));;
}



inline void _1c4ae348a_checkMultiAssign(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a9ccc4_AssignSt>* _136841_a) {
	jule::Ptr<_1c45e6e17_Data> _136917_rd = _1c46143a7_evalExpr(_1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0)), (*(_136841_a)).get()._field_Right);;
	if ((_136917_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c45e6e17_Data>> _137317_right = _1c4ace883_getDatasFromTupleData(&(_136917_rd));;
	if ((_137317_right.len() == 1LL)) {
		{
			auto &_match_expr{ _137317_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1ac7e5e74:;
				{
					jule::Ptr<_1c4aac9c6_IndexingExprModel> _137725_iem = _137317_right[0LL].get()._field_Model.cast_ptr<_1c4aac9c6_IndexingExprModel>(&__jule_any_type45);;
					if ((_1c4b6099c_Map(_137725_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_137317_right=jule::Slice<jule::Ptr<_1c45e6e17_Data>>::make({jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=_1c4b6099c_Map(_137725_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_1ac7e5e1e:;
		};
	};
	{
		
		if (((*(_136841_a)).get()._field_Left.len() > _137317_right.len())) {
			_case_begin_1ac7e62a4:;
			{
				_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), (*(_136841_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_136841_a)).get()._field_Left.len() < _137317_right.len())) {
			_case_begin_1ac7e631a:;
			{
				_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), (*(_136841_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ac7e8152:;
	};
	jule::Ptr<_1c4ad4aca_MultiAssign> _139617_st = jule::new_ptr<_1c4ad4aca_MultiAssign>(_1c4ad4aca_MultiAssign{._field_R=_136917_rd.get()._field_Model});;
	{
		auto expr = &((*(_136841_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7ea484:;
		if (it != expr_end) {
			jule::I32 _139913_i = it - expr->begin();
			{
				jule::Ptr<_1c4a9c785_AssignLeft> _140021_lexpr = (*(_136841_a)).get()._field_Left[_139913_i];;
				jule::Ptr<_1c45e6e17_Data> _140121_l = nullptr;;
				if (((!(_203988950_IsIgnoreIdent(_140021_lexpr.get()._field_Ident))) && ((!((*(_136841_a)).get()._field_Declarative)) || (!(_1c4ae2500_isNewAssignIdent(_self_.ptr(), _140021_lexpr.get()._field_Ident)))))) {
					_140121_l=_1c46143a7_evalExpr(_1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0)), _140021_lexpr.get()._field_Expr);
					if ((_140121_l == nullptr)) {
						goto _iter_next_1ac7ea484;
					};
				};
				jule::Ptr<_1c45e6e17_Data> _140921_r = _137317_right[_139913_i];;
				_1c4ae3204_processEndPartOfMultiAssign(_self_.ptr(), &(_139617_st), _136841_a, &(_140021_lexpr), &(_140121_l), &(_140921_r));
			}
			_iter_next_1ac7ea484:;
			++it;
			_139913_i++;
			goto _iter_begin_1ac7ea484;
		}
		_iter_end_1ac7ea484:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_139617_st, &__jule_any_type46));;
}



inline void _1c4ae3710_checkAssignSt(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a9ccc4_AssignSt> _141537_a) {
	{
		
		if (_20398a9eb_IsPostfixOp(_141537_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1ac7ee510:;
			{
				_1c4ae21e2_checkPostfix(_self_, _141537_a);
			}
		}
		else if (((_141537_a.get()._field_Left.len() == 1LL) && (!(_141537_a.get()._field_Declarative)))) {
			_case_begin_1ac7ee213:;
			{
				_1c4ae2bc6_checkSingleAssign(_self_, &(_141537_a));
			}
		}
		else {
			_case_begin_1ac7edb2a:;
			{
				_1c4ae348a_checkMultiAssign(_self_, &(_141537_a));
			}
		}
		_match_end_1ac7eda5e:;
	};
}



inline jule::Ptr<_1c4ad13bd_Scope> _1c4ae3ab7_checkCaseScope(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4ad5b64_Case>* _142635_c, jule::Ptr<_1c4a9e2c0_ScopeTree>* _142650_tree) {
	jule::Ptr<_1c4ad7e30_scopeChecker> _142717_ssc = _1c4ae7e95_newChildChecker(_self_);;
	_142717_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_142635_c))));
	return _1c4add09a_checkChildSc(_self_, _142650_tree, &(_142717_ssc));;
}



inline jule::Ptr<_1c4ad5b64_Case> _1c4ae40b2_checkCase(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4ad5119_Match> _143233_m, jule::I32 _143244_i, jule::Ptr<_1c4aa5a79_Case> _143256_c, jule::Ptr<_1c45e6e17_Data> _143275_expr) {
	jule::Ptr<_1c4ad5b64_Case> _143317_case = _143233_m.get()._field_Cases[_143244_i];;
	_143317_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1c45e6e17_Data>>::alloc(0LL, _143256_c.get()._field_Exprs.len());
	jule::Bool _143517_genericMatched = false;;
	jule::Ptr<_1c45e8985_Eval> _143617_eval = _1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0));;
	{
		auto expr = &(_143256_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac803ec6:;
		if (it != expr_end) {
			jule::Ptr<_1c4a93858_Expr> _143721_e = *it;
			{
				jule::Ptr<_1c45e6e17_Data> _143821_d = _1c4613c8b_evalExprKind(_143617_eval, _143721_e.get()._field_Kind);;
				if ((_143821_d == nullptr)) {
					goto _iter_next_1ac803ec6;
				};
				if (_143233_m.get()._field_TypeMatch) {
					_143317_case.get()._field_Exprs = jule::alloc_for_append(_143317_case.get()._field_Exprs,1);_143317_case.get()._field_Exprs.__push(_143821_d);;
					if ((_1c4ace5db_countMatchType(&(_143233_m), &(_143821_d.get()._field_Kind)) > 1LL)) {
						_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _143721_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_143821_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_143275_expr.get()._field_Kind.get()._field_Generic) {
						_143517_genericMatched=(_143517_genericMatched || _1c4622580_Equal(_143275_expr.get()._field_Kind, _143821_d.get()._field_Kind));
					} else {
						if ((_1c4b5ea23_TypeEnum(_143275_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1c4b13125_checkTypeCompatibility(_self_.get()._field_s, &(_143275_expr.get()._field_Kind), &(_143821_d.get()._field_Kind), &(_143721_e.get()._field_Token));
						} else {
							jule::Ptr<_1c4ac306e_Trait> _145329_trt = _1c4b60738_Trait(_143275_expr.get()._field_Kind.ptr());;
							if ((_145329_trt != nullptr)) {
								_1c4b13125_checkTypeCompatibility(_self_.get()._field_s, &(_143275_expr.get()._field_Kind), &(_143821_d.get()._field_Kind), &(_143721_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1ac803ec6;
				};
				if (_143821_d.get()._field_Decl) {
					_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _143721_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1c4b0ac55_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1ac803ec6;
				};
				_143317_case.get()._field_Exprs = jule::alloc_for_append(_143317_case.get()._field_Exprs,1);_143317_case.get()._field_Exprs.__push(_143821_d);;
				_1c45d263e_assignTypeChecker _147121_checker = _1c45d263e_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_143275_expr.get()._field_Kind, ._field_d=_143821_d, ._field_errorToken=_143721_e.get()._field_Token};;
				_1c45d37b6_check(&_147121_checker);
			}
			_iter_next_1ac803ec6:;
			++it;
			goto _iter_begin_1ac803ec6;
		}
		_iter_end_1ac803ec6:;
	};
	if ((((!(_143233_m.get()._field_TypeMatch)) || (!(_143275_expr.get()._field_Kind.get()._field_Generic))) || _143517_genericMatched)) {
		_143317_case.get()._field_Scope=_1c4ae3ab7_checkCaseScope(_self_, &(_143317_case), &(_143256_c.get()._field_Scope));
	};
	return _143317_case;;
}



inline void _1c4ae447a_checkCases(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa6250_MatchCase>* _148535_m, jule::Ptr<_1c4ad5119_Match> _148554_rm, jule::Ptr<_1c45e6e17_Data> _148570_expr) {
	_148554_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1c4ad5b64_Case>>::alloc(0LL, (*(_148535_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_148535_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac80c3db:;
		if (it != expr_end) {
			jule::I32 _148713_i = it - expr->begin();
			{
				jule::Ptr<_1c4ad5b64_Case> _148821_case = jule::new_ptr<_1c4ad5b64_Case>(_1c4ad5b64_Case{._field_Owner=_148554_rm, });;
				if ((_148713_i > 0LL)) {
					_148554_rm.get()._field_Cases[(_148713_i - 1LL)].get()._field_Next=_148821_case;
				};
				_148554_rm.get()._field_Cases = jule::alloc_for_append(_148554_rm.get()._field_Cases,1);_148554_rm.get()._field_Cases.__push(_148821_case);;
			}
			_iter_next_1ac80c3db:;
			++it;
			_148713_i++;
			goto _iter_begin_1ac80c3db;
		}
		_iter_end_1ac80c3db:;
	};
	if (((_148554_rm.get()._field_Default != nullptr) && ((*(_148535_m)).get()._field_Cases.len() > 0LL))) {
		_148554_rm.get()._field_Cases[(_148554_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_148554_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_148535_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8108a6:;
		if (it != expr_end) {
			jule::I32 _150114_i = it - expr->begin();
			jule::Ptr<_1c4aa5a79_Case> _150121_c = *it;
			{
				_1c4ae40b2_checkCase(_self_, _148554_rm, _150114_i, _150121_c, _148570_expr);
			}
			_iter_next_1ac8108a6:;
			++it;
			_150114_i++;
			goto _iter_begin_1ac8108a6;
		}
		_iter_end_1ac8108a6:;
	};
}



inline jule::Ptr<_1c4ad5b64_Case> _1c4ae4832_checkDefault(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4ad5119_Match> _150636_m, jule::Ptr<_1c4aa49ac_Else> _150651_d) {
	jule::Ptr<_1c4ad5b64_Case> _150717_def = jule::new_ptr<_1c4ad5b64_Case>(_1c4ad5b64_Case{._field_Owner=_150636_m, });;
	_150717_def.get()._field_Scope=_1c4ae3ab7_checkCaseScope(_self_, &(_150717_def), &(_150651_d.get()._field_Scope));
	return _150717_def;;
}



inline void _1c4ae4aa7_checkComptimePanic(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4ad13bd_Scope>* _151439_s) {
	if (((*(_151439_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _151913_stmt = (*(_151439_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _151913_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac813a74:;
			{
				jule::Ptr<_1c45e6e17_Data> _152217_d = _151913_stmt.cast_ptr<_1c45e6e17_Data>(&__jule_any_type23);;
				{
					auto &_match_expr{ _152217_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1ac814855:;
						{
							jule::Ptr<_1c4aaecb4_BuiltinPanicCallExprModel> _152521_m = _152217_d.get()._field_Model.cast_ptr<_1c4aaecb4_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ _152521_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type47) {
									_case_begin_1ac8157e0:;
									{
										jule::Ptr<_1c25bc4e9_Const> _152825_c = _152521_m.get()._field_Expr.cast_ptr<_1c25bc4e9_Const>(&__jule_any_type47);;
										if (_1c3179380_IsStr(_152825_c.ptr())) {
											jule::Ptr<_1c4ad7e30_scopeChecker> _153033_root = _1c4adb2da_getHardRoot(_self_);;
											_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _153033_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1c3178192_ReadStr(_152825_c.ptr()), &__jule_any_type5)}));
										};
									}
								}
								_match_end_1ac8155d1:;
							};
						}
					}
					_match_end_1ac814459:;
				};
			}
		}
		_match_end_1ac813a1e:;
	};
}



inline void _1c4ae4dc6_pushTypeMatch(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4ad5119_Match> _153837_tm, jule::Ptr<_1c4aa6250_MatchCase>* _153854_m) {
	if (_153837_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto expr = &(_153837_tm.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac814c84:;
			if (it != expr_end) {
				jule::Ptr<_1c4ad5b64_Case> _154225_c = *it;
				{
					if ((_154225_c.get()._field_Scope != nullptr)) {
						_1c4ae4aa7_checkComptimePanic(_self_, &(_154225_c.get()._field_Scope));
						_153837_tm.get()._field_Default=_154225_c;
						_153837_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1ac814c84:;
				++it;
				goto _iter_begin_1ac814c84;
			}
			_iter_end_1ac814c84:;
		};
		if (((*(_153854_m)).get()._field_Default != nullptr)) {
			_153837_tm.get()._field_Cases=nullptr;
			_153837_tm.get()._field_Default=_1c4ae4832_checkDefault(_self_, _153837_tm, (*(_153854_m)).get()._field_Default);
			if ((_153837_tm.get()._field_Default != nullptr)) {
				_1c4ae4aa7_checkComptimePanic(_self_, &(_153837_tm.get()._field_Default.get()._field_Scope));
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_153837_tm, &__jule_any_type48));;
}



inline void _1c4ae514b_checkTypeMatch(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa6250_MatchCase>* _156239_m) {
	jule::Ptr<_1c45e6e17_Data> _156317_d = _1c4614099_eval(_1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0)), (*(_156239_m)).get()._field_Expr);;
	if ((_156317_d == nullptr)) {
		return;;
	};
	if (((!(_156317_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1c4b5e45c_Prim(_156317_d.get()._field_Kind.ptr()) != nullptr) && _1c4b64e24_IsAny(_1c4b5e45c_Prim(_156317_d.get()._field_Kind.ptr()).ptr())) || (_1c4b60738_Trait(_156317_d.get()._field_Kind.ptr()) != nullptr)) || (_1c4b5ea23_TypeEnum(_156317_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), (*(_156239_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4ad5119_Match> _157417_tm = jule::new_ptr<_1c4ad5119_Match>(_1c4ad5119_Match{._field_Expr=_156317_d, ._field_TypeMatch=true, });;
	if (((!(_157417_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && ((*(_156239_m)).get()._field_Default != nullptr))) {
		_157417_tm.get()._field_Default=_1c4ae4832_checkDefault(_self_, _157417_tm, (*(_156239_m)).get()._field_Default);
	};
	_1c4ae447a_checkCases(_self_, _156239_m, _157417_tm, _156317_d);
	_1c4ae4dc6_pushTypeMatch(_self_, _157417_tm, _156239_m);
}



inline void _1c4ae53c1_checkCommonMatch(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa6250_MatchCase>* _158741_m) {
	jule::Ptr<_1c45e6e17_Data> _158817_d = nullptr;;
	if (((*(_158741_m)).get()._field_Expr == nullptr)) {
		_158817_d=jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1c25eb5d3_NewBool(true)});
		_158817_d.get()._field_Model=jule::Any(_158817_d.get()._field_Constant, &__jule_any_type47);
	} else {
		_158817_d=_1c46143a7_evalExpr(_1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0)), (*(_158741_m)).get()._field_Expr);
		if ((_158817_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c4ad5119_Match> _160217_mc = jule::new_ptr<_1c4ad5119_Match>(_1c4ad5119_Match{._field_Expr=_158817_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_160217_mc, &__jule_any_type48));;
	if (((*(_158741_m)).get()._field_Default != nullptr)) {
		_160217_mc.get()._field_Default=_1c4ae4832_checkDefault(_self_, _160217_mc, (*(_158741_m)).get()._field_Default);
	};
	_1c4ae447a_checkCases(_self_, _158741_m, _160217_mc, _158817_d);
}



inline void _1c4ae5646_checkMatch(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa6250_MatchCase> _161434_m) {
	if (_161434_m.get()._field_TypeMatch) {
		_1c4ae514b_checkTypeMatch(_self_, &(_161434_m));
		return;;
	};
	_1c4ae53c1_checkCommonMatch(_self_, &(_161434_m));
}



inline void _1c4ae58bb_checkFall(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a9c17a_FallSt> _162229_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1c4adad12_isDeferred(_self_))) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _162229_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1c4ad5b64_Case* _163017_case = ((_1c4ad5b64_Case*)(_self_.get()._field_cse));;
	if ((_163017_case->_field_Next == nullptr)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _162229_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1c4b0ac55_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1c4ad6219_FallSt>(_1c4ad6219_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_163017_case->_field_Next))}), &__jule_any_type49));;
}



inline jule::Ptr<_1c4ad3821_BreakSt> _1c4ae5bc9_checkBreakWithLabel(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa3cca_BreakSt> _164239_b) {
	jule::Ptr<_1c4ad3821_BreakSt> _164317_brk = _1c4ae5ed7_checkPlainBreak(_self_, _164239_b);;
	if ((_164317_brk == nullptr)) {
		return nullptr;;
	};
	_164317_brk.get()._field_It=0LLU;
	_164317_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1c4ad6b98_scopeLabel> _165317_label = _1c4acdac4_findLabelParent(_164239_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_165317_label == nullptr)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_165317_label.get()._field_used=true;
	if (((_165317_label.get()._field_pos + 1LL) >= _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _166613_i = (_165317_label.get()._field_pos + 1LL);;
	if ((_166613_i >= _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _167021_st = _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_166613_i];;
		{
			auto &_match_expr{ _167021_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1ac82eb5b:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1c4ad2215_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1ac831784:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1c4ad306d_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1ac8317ea:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1c4ad2688_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1ac831872:;
				{
					_164317_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1c4ad5119_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1ac83160d:;
				{
					_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1ac8315a8:;
		};
	};
	if ((_164317_brk.get()._field_It != 0LLU)) {
		if ((!(_1c4ae13de_checkValidBreakLabel(_self_, _164317_brk.get()._field_It)))) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_164317_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1c4ae13de_checkValidBreakLabel(_self_, _164317_brk.get()._field_Mtch)))) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _164317_brk;;
}



inline jule::Ptr<_1c4ad3821_BreakSt> _1c4ae5ed7_checkPlainBreak(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa3cca_BreakSt> _170035_b) {
	if (_1c4adad12_isDeferred(_self_)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _170035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4ad7e30_scopeChecker> _170617_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_170617_scope.get()._field_it == 0LLU) && (_170617_scope.get()._field_cse == 0LLU)) && (_170617_scope.get()._field_parent != nullptr)) && (_170617_scope.get()._field_owner == nullptr))) {
			_case_begin_1ac837878:;
			{
				_170617_scope=_170617_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_170617_scope.get()._field_it != 0LLU)) {
			_case_begin_1ac837900:;
			{
				return jule::new_ptr<_1c4ad3821_BreakSt>(_1c4ad3821_BreakSt{._field_It=_170617_scope.get()._field_it, });;
			}
		}
		else if ((_170617_scope.get()._field_cse != 0LLU)) {
			_case_begin_1ac837977:;
			{
				return jule::new_ptr<_1c4ad3821_BreakSt>(_1c4ad3821_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1c4ad5b64_Case*)(_170617_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1ac8377ac:;
	};
	_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _170035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1c4ae625c_checkBreak(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa3cca_BreakSt> _172230_b) {
	if ((_172230_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1c4ad3821_BreakSt> _172421_brk = _1c4ae5bc9_checkBreakWithLabel(_self_, _172230_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172421_brk, &__jule_any_type50));;
		return;;
	};
	jule::Ptr<_1c4ad3821_BreakSt> _172917_brk = _1c4ae5ed7_checkPlainBreak(_self_, _172230_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172917_brk, &__jule_any_type50));;
}



inline void _1c4ae64d2_checkRet(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4aa214c_RetSt> _173332_r) {
	if (_1c4adad12_isDeferred(_self_)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _173332_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c4ad658d_RetSt> _173817_rt = jule::new_ptr<_1c4ad658d_RetSt>(_1c4ad658d_RetSt{._field_Func=_1c4adb076_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_173817_rt, &__jule_any_type51));;
	jule::Ptr<_1c45e0064_retTypeChecker> _174317_rtc = jule::new_ptr<_1c45e0064_retTypeChecker>(_1c45e0064_retTypeChecker{._field_sc=_self_, ._field_f=_173817_rt.get()._field_Func, ._field_errorToken=_173332_r.get()._field_Token, });;
	jule::Bool _174813_ok = _1c45e0c68_check(_174317_rtc.ptr(), &(_173332_r.get()._field_Expr));;
	if ((!(_174813_ok))) {
		return;;
	};
	if ((_173332_r.get()._field_Expr != nullptr)) {
		_173817_rt.get()._field_Expr=_174317_rtc.get()._field_model;
	};
}



inline void _1c4ae6757_checkUseExpr(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a941e9_UseExpr> _175832_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1c4adad12_isDeferred(_self_)) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1c4ae69cc_checkNode(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Any* _177434_node) {
	{
		auto &_match_expr{ (*(_177434_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ac844bd7:;
			{
				_1c4add62d_checkAnonScope(_self_, (*(_177434_node)).cast_ptr<_1c4a9e2c0_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ac8445ee:;
			{
				_1c4adc341_checkVarDecl(_self_, (*(_177434_node)).cast_ptr<_1c4aa1c95_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ac8449ea:;
			{
				_1c4adc5b6_checkTypeAliasDecl(_self_, (*(_177434_node)).cast_ptr<_1c4aa5606_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ac844d19:;
			{
				_1c4addbc2_checkExpr(_self_, (*(_177434_node)).cast_ptr<_1c4a93858_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1ac844d80:;
			{
				_1c4ade563_checkConditional(_self_, (*(_177434_node)).cast_ptr<_1c4aa4e30_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1ac845039:;
			{
				_1c4ae0cc3_checkIter(_self_, (*(_177434_node)).cast_ptr<_1c4aa27ac_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1ac8450a0:;
			{
				_1c4ae1972_checkCont(_self_, (*(_177434_node)).cast_ptr<_1c4aa4182_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1ac845116:;
			{
				_1c4ae1be7_checkLabel(_self_, (*(_177434_node)).cast_ptr<_1c4a9b9d7_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ac84517c:;
			{
				_1c4ae1e6c_pushGoto(_self_, (*(_177434_node)).cast_ptr<_1c4a9bd8e_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ac8451e3:;
			{
				_1c4ae3710_checkAssignSt(_self_, (*(_177434_node)).cast_ptr<_1c4a9ccc4_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1ac845259:;
			{
				_1c4ae5646_checkMatch(_self_, (*(_177434_node)).cast_ptr<_1c4aa6250_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1ac8452c0:;
			{
				_1c4ae58bb_checkFall(_self_, (*(_177434_node)).cast_ptr<_1c4a9c17a_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1ac845336:;
			{
				_1c4ae625c_checkBreak(_self_, (*(_177434_node)).cast_ptr<_1c4aa3cca_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ac84539c:;
			{
				_1c4ae64d2_checkRet(_self_, (*(_177434_node)).cast_ptr<_1c4aa214c_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac845413:;
			{
				_1c4ae6757_checkUseExpr(_self_, (*(_177434_node)).cast_ptr<_1c4a941e9_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1ac844775:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1ac844698:;
	};
}



inline void _1c4ae6ba8_checkResult(jule::Ptr<_1c4ad7e30_scopeChecker> _self_) {
	_1c4a9dbb5_Stmt _181217_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _181217_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ac84d7d4:;
			{
				jule::Ptr<_1c4a941e9_UseExpr> _181521_ue = _181217_stmt._field_Data.cast_ptr<_1c4a941e9_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_1c45e6e17_Data> _181621_d = _1c46143a7_evalExpr(_1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0)), _181521_ue.get()._field_Expr);;
				if ((_181621_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_181621_d, &__jule_any_type23));;
				jule::Ptr<_1c45e0064_retTypeChecker> _182121_rtc = jule::new_ptr<_1c45e0064_retTypeChecker>(_1c45e0064_retTypeChecker{._field_sc=_self_, ._field_types=_1c4ab4b21_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_181521_ue.get()._field_Expr.get()._field_Token, });;
				_1c45e0c68_check(_182121_rtc.ptr(), &(_181521_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ac84d00e:;
			{
				jule::Ptr<_1c4a93858_Expr> _182821_expr = _181217_stmt._field_Data.cast_ptr<_1c4a93858_Expr>(&__jule_any_type53);;
				jule::Ptr<_1c45e6e17_Data> _182921_d = _1c46143a7_evalExpr(_1c4b126c9_eval(_self_.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>(_self_, 0)), _182821_expr);;
				if ((_182921_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _182921_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1ac85806e:;
						{
							jule::Ptr<_1c4ab10a1_BuiltinErrorCallExprModel> _183525_m = _182921_d.get()._field_Model.cast_ptr<_1c4ab10a1_BuiltinErrorCallExprModel>(&__jule_any_type22);;
							_1c4add94c_processErrorCall(_self_, &(_183525_m), _182821_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_182921_d, &__jule_any_type23));;
						}
					}
					else {
						_case_begin_1ac857b62:;
						{
							return;;
						}
					}
					_match_end_1ac857953:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1ac84d075:;
			{
				_1c4ae69cc_checkNode(_self_, &(_181217_stmt._field_Data));
			}
		}
		else {
			_case_begin_1ac84ce98:;
			{
				_1c4ae69cc_checkNode(_self_, &(_181217_stmt._field_Data));
				return;;
			}
		}
		_match_end_1ac84cd22:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1c4ae6d84_checkTree(jule::Ptr<_1c4ad7e30_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I32 _185717_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_185717_n)--;
	};
	for (; (_self_.get()._field_i < _185717_n); (_self_.get()._field_i)++) {
		{
			_1c4a9dbb5_Stmt _186521_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1c4ae69cc_checkNode(_self_, &(_186521_stmt._field_Data));
			if (_1c4adaa9d_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1ac85a626:;
	}
	_iter_end_1ac85a626:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1c4ae6ba8_checkResult(_self_);
	};
}



inline void _1c4ae71a3_checkGoto(_1c4ad7e30_scopeChecker* _self_, jule::Ptr<_1c4ad711b_scopeGoto>* _187633_gt, jule::Ptr<_1c4ad6b98_scopeLabel>* _187654_label) {
	jule::Ptr<_1c4ad7e30_scopeChecker> _187717_gtsc = (*(_187633_gt)).get()._field_scope;;
	while (((_187717_gtsc.get()._field_childIndex - 1LL) > (*(_187654_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_187717_gtsc=_187717_gtsc.get()._field_parent;
		}
	_iter_next_1ac85dc12:;
	}
	_iter_end_1ac85dc12:;;
	jule::I32 _188217_n = 0LL;;
	if ((_187717_gtsc.get()._field_scope == (*(_187654_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_187633_gt)).get()._field_pos > (*(_187654_label)).get()._field_pos)) {
			return;;
		};
		_188217_n=(*(_187633_gt)).get()._field_pos;
	};
	jule::I32 _189517_i = ((*(_187654_label)).get()._field_pos - 1LL);;
	if ((_188217_n == 0LL)) {
		{
			auto expr = &((*(_187654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac861242:;
			if (it != expr_end) {
				jule::I32 _189817_j = it - expr->begin();
				jule::Any _189820_stmt = *it;
				{
					if (_1c4ace29a_stmtIsGotoScope(&(_189820_stmt), &(_187717_gtsc.get()._field_scope))) {
						_188217_n=_189817_j;
						goto _iter_end_1ac861242;
					};
				}
				_iter_next_1ac861242:;
				++it;
				_189817_j++;
				goto _iter_begin_1ac861242;
			}
			_iter_end_1ac861242:;
		};
	};
	for (; (_189517_i >= _188217_n); (_189517_i)--) {
		{
			jule::Any _190821_stmt = (*(_187654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_189517_i];;
			if (_1c4ad0e39_stmtIsDef(&(_190821_stmt))) {
				_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_187633_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_187633_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1ac862133:;
	}
	_iter_end_1ac862133:;;
}



inline void _1c4ae737e_checkGotos(_1c4ad7e30_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac861a7d:;
		if (it != expr_end) {
			jule::Ptr<_1c4ad711b_scopeGoto> _191721_gt = *it;
			{
				jule::Ptr<_1c4ad6b98_scopeLabel> _191821_label = _1c4adbc14_findLabelAll(_self_, _191721_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_191821_label == nullptr)) {
					_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), _191721_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_191721_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1ac861a7d;
				};
				_191821_label.get()._field_used=true;
				_1c4ae71a3_checkGoto(_self_, &(_191721_gt), &(_191821_label));
			}
			_iter_next_1ac861a7d:;
			++it;
			goto _iter_begin_1ac861a7d;
		}
		_iter_end_1ac861a7d:;
	};
}



inline void _1c4ae755a_checkLabels(_1c4ad7e30_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac866225:;
		if (it != expr_end) {
			jule::Ptr<_1c4ad6b98_scopeLabel> _193016_l = *it;
			{
				if ((!(_193016_l.get()._field_used))) {
					_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), _193016_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_193016_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1ac866225:;
			++it;
			goto _iter_begin_1ac866225;
		}
		_iter_end_1ac866225:;
	};
}



inline void _1c4ae7736_checkVars(_1c4ad7e30_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac866654:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> _193816_v = *it;
			{
				if (((((!(_193816_v.get()._field_Used)) && (!(_203988950_IsIgnoreIdent(_193816_v.get()._field_Ident)))) && (!(_203988be7_IsAnonIdent(_193816_v.get()._field_Ident)))) && (!_193816_v.get()._field_Ident.equal("self", 4)))) {
					_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), _193816_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_193816_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1ac866654:;
			++it;
			goto _iter_begin_1ac866654;
		}
		_iter_end_1ac866654:;
	};
}



inline void _1c4ae7912_checkAliases(_1c4ad7e30_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac869679:;
		if (it != expr_end) {
			jule::Ptr<_1c4701230_TypeAlias> _194616_a = *it;
			{
				if ((((!(_194616_a.get()._field_Used)) && (!(_203988950_IsIgnoreIdent(_194616_a.get()._field_Ident)))) && (!(_203988be7_IsAnonIdent(_194616_a.get()._field_Ident))))) {
					_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), _194616_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_194616_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1ac869679:;
			++it;
			goto _iter_begin_1ac869679;
		}
		_iter_end_1ac869679:;
	};
}



inline void _1c4ae7c31_check(jule::Ptr<_1c4ad7e30_scopeChecker> _self_, jule::Ptr<_1c4a9e2c0_ScopeTree>* _195430_tree, jule::Ptr<_1c4ad13bd_Scope>* _195453_s) {
	(*(_195453_s)).get()._field_Deferred=(*(_195430_tree)).get()._field_Deferred;
	(*(_195453_s)).get()._field_Unsafety=(*(_195430_tree)).get()._field_Unsafety;
	jule::I32 _195813_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_195430_tree));
	_self_.get()._field_scope=(*(_195453_s));
	_1c4ae6d84_checkTree(_self_);
	if ((_195813_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1c4ae7736_checkVars(_self_.ptr());
		_1c4ae7912_checkAliases(_self_.ptr());
		if (_1c4ada65d_isRoot(_self_.ptr())) {
			_1c4ae737e_checkGotos(_self_.ptr());
			_1c4ae755a_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1c4ad7e30_scopeChecker> _1c4ae7e95_newChildChecker(jule::Ptr<_1c4ad7e30_scopeChecker> _self_) {
	jule::Ptr<_1c4ad7e30_scopeChecker> _197817_base = _1c4acd3ed_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_197817_base.get()._field_parent=_self_;
	_197817_base.get()._field_labels=_self_.get()._field_labels;
	_197817_base.get()._field_gotos=_self_.get()._field_gotos;
	_197817_base.get()._field_childIndex=static_cast<jule::I32>((_self_.get()._field_childIndex + 1LL));
	return _197817_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ad7e30_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1c4ae8e85_checkCdef(_1c4ae8a45_directiveChecker* _self_, jule::Ptr<_1c4a5ad81_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac8707d4:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1c4ab22e4_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					goto _match_end_1ac870a15;
				};
				goto _case_begin_1ac870a6a;
			}
		}
		else {
			_case_begin_1ac870a6a:;
			{
				_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ac870a15:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c4ae920a_checkTypedef(_1c4ae8a45_directiveChecker* _self_, jule::Ptr<_1c4a5ad81_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ac872eac:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1c4a86ebc_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					goto _match_end_1ac8731cc;
				};
				goto _case_begin_1ac873232;
			}
		}
		else {
			_case_begin_1ac873232:;
			{
				_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ac8731cc:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c4ae9480_checkDerive(_1c4ae8a45_directiveChecker* _self_, jule::Ptr<_1c4a5ad81_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ac8756a7:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1c4a86ebc_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					goto _match_end_1ac8758c7;
				};
				goto _case_begin_1ac87592c;
			}
		}
		else {
			_case_begin_1ac87592c:;
			{
				_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac8758c7:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1c4b0ac55_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1ac879414:;
		}
		else {
			_case_begin_1ac8765ba:;
			{
				_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ac87904b:;
	};
}



inline void _1c4ae9705_checkNamespace(_1c4ae8a45_directiveChecker* _self_, jule::Ptr<_1c4a5ad81_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ac879348:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1c4a86ebc_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac87a921:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1c4ab22e4_Fn>(&__jule_any_type65).get()._field_CppLinked))) {
					_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac87a987:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8).get()._field_CppLinked))) {
					_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1ac87a866:;
			{
				_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ac87a811:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_2039861ab_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U32>(6LLU))) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ac883eac:;
			{
				if ((_1c461c547_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1c4a5ad81_Directive> _11625_typedef = jule::new_ptr<_1c4a5ad81_Directive>(_1c4a5ad81_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*(_self_))._field_d))=jule::append((*((*(_self_))._field_d)),jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1ac883a5b:;
	};
}



inline void _1c4ae997a_checkDeprecated(_1c4ae8a45_directiveChecker* _self_, jule::Ptr<_1c4a5ad81_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ac884155:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1c4a86ebc_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac886212:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1c4ab22e4_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac886278:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8).get()._field_CppLinked) {
					_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1ac885ac4:;
			{
				_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ac88592b:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_2039861ab_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U32>(6LLU))) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1c4ae9c00_checkTest(_1c4ae8a45_directiveChecker* _self_, jule::Ptr<_1c4a5ad81_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ac88d9cd:;
			{
				jule::Ptr<_1c4ab22e4_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_1c4ab22e4_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1c4a5e4d3_IsInit(_16717_f.ptr())))) && (!(_1c4a653b8_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1ac88e2d6;
				};
				if (_1c4a810e8_IsMethod(_16717_f.ptr())) {
					_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1ac88e2d6;
				};
				goto _case_begin_1ac88e429;
			}
		}
		else {
			_case_begin_1ac88e429:;
			{
				_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ac88e2d6:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c4ae9e75_checkDirective(_1c4ae8a45_directiveChecker* _self_, jule::Ptr<_1c4a5ad81_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1ac89320d:;
			{
				_1c4ae8e85_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1ac893274:;
			{
				_1c4ae920a_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1ac8932da:;
			{
				_1c4ae9480_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1ac893351:;
			{
				_1c4ae9705_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1ac893e34:;
			{
				_1c4ae997a_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1ac893e9a:;
			{
				_1c4ae9c00_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1ac894011:;
			{
				_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1ac893197:;
			{
				_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ac893142:;
	};
}



inline void _1c4aea151_check(_1c4ae8a45_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac896574:;
		if (it != expr_end) {
			jule::Ptr<_1c4a5ad81_Directive> _20821_d = *it;
			{
				_1c4ae9e75_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1ac896574:;
			++it;
			goto _iter_begin_1ac896574;
		}
		_iter_end_1ac896574:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ae8a45_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b00145_FindPackage(_1c4aeeb28_ImportInfo* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b00453_SelectPackage(_1c4aeeb28_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1c4b2c837_Var> _1c4b0080a_FindVar(_1c4aeeb28_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_1c4b021e1_isLookupable(_self_, _19226_ident)))) {
		return nullptr;;
	};
	return _1c4aec340_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _19226_ident, false);;
}



inline jule::Ptr<_1c4701230_TypeAlias> _1c4b00bb2_FindTypeAlias(_1c4aeeb28_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_1c4b021e1_isLookupable(_self_, _20432_ident)))) {
		return nullptr;;
	};
	return _1c4aec76e_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20432_ident, false);;
}



inline jule::Ptr<_1c4a86ebc_Struct> _1c4b01069_FindStruct(_1c4aeeb28_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_1c4b021e1_isLookupable(_self_, _21629_ident)))) {
		return nullptr;;
	};
	return _1c4aecb59_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21629_ident, false);;
}



inline jule::Ptr<_1c4ab22e4_Fn> _1c4b01421_FindFn(_1c4aeeb28_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_1c4b021e1_isLookupable(_self_, _22825_ident)))) {
		return nullptr;;
	};
	return _1c4aed0bb_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22825_ident, false);;
}



inline jule::Ptr<_1c4ac306e_Trait> _1c4b0172e_FindTrait(_1c4aeeb28_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_1c4b021e1_isLookupable(_self_, _23928_ident)))) {
		return nullptr;;
	};
	return _1c4aed3c9_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23928_ident);;
}



inline jule::Ptr<_1c4ac5802_Enum> _1c4b01a3c_FindEnum(_1c4aeeb28_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_1c4b021e1_isLookupable(_self_, _25027_ident)))) {
		return nullptr;;
	};
	return _1c4aed71a_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25027_ident);;
}



inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b01d4a_FindTypeEnum(_1c4aeeb28_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_1c4b021e1_isLookupable(_self_, _26131_ident)))) {
		return nullptr;;
	};
	return _1c4aeda5b_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _26131_ident);;
}



inline jule::Bool _1c4b021e1_isLookupable(_1c4aeeb28_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*(_self_))._field_CppLinked) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1c4b024ee_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1c4b024ee_existIdent(_self_, _27027_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1c4b024ee_existIdent(_1c4aeeb28_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8ab842:;
		if (it != expr_end) {
			jule::Ptr<_2039861ab_Token> *_29116_sident = it;
			{
				if (((*(_29116_sident)).get()._field_Kind == _29025_ident)) {
					return true;;
				};
			}
			_iter_next_1ac8ab842:;
			++it;
			goto _iter_begin_1ac8ab842;
		}
		_iter_end_1ac8ab842:;
	};
	return false;;
}



inline jule::Bool _1c4b02785_isAccessibleViaSelection(_1c4aeeb28_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1c4b024ee_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aeeb28_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b0305a_FindPackage(_1c4b02a82_Package* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b03368_SelectPackage(_1c4b02a82_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1c4b2c837_Var> _1c4b03720_FindVar(_1c4b02a82_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _1c4aec340_findVarInPackage(&((*(_self_))._field_Files), _32026_ident, _32038_cpp_linked);;
}



inline jule::Ptr<_1c4701230_TypeAlias> _1c4b03ac7_FindTypeAlias(_1c4b02a82_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _1c4aec76e_findTypeAliasInPackage(&((*(_self_))._field_Files), _32632_ident, _32644_cpp_linked);;
}



inline jule::Ptr<_1c4a86ebc_Struct> _1c4b03e7e_FindStruct(_1c4b02a82_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _1c4aecb59_findStructInPackage(&((*(_self_))._field_Files), _33229_ident, _33241_cpp_linked);;
}



inline jule::Ptr<_1c4ab22e4_Fn> _1c4b04336_FindFn(_1c4b02a82_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _1c4aed0bb_findFnInPackage(&((*(_self_))._field_Files), _33825_ident, _33837_cpp_linked);;
}



inline jule::Ptr<_1c4ac306e_Trait> _1c4b04644_FindTrait(_1c4b02a82_Package* _self_, jule::Str _34428_ident) {
	return _1c4aed3c9_findTraitInPackage(&((*(_self_))._field_Files), _34428_ident);;
}



inline jule::Ptr<_1c4ac5802_Enum> _1c4b04952_FindEnum(_1c4b02a82_Package* _self_, jule::Str _35027_ident) {
	return _1c4aed71a_findEnumInPackage(&((*(_self_))._field_Files), _35027_ident);;
}



inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b04c60_FindTypeEnum(_1c4b02a82_Package* _self_, jule::Str _35631_ident) {
	return _1c4aeda5b_findTypeEnumInPackage(&((*(_self_))._field_Files), _35631_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b02a82_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b08291_FindPackage(_1c4b07c74_Sema* _self_, jule::Str _22330_ident) {
	return _1c45e260a_FindPackage((*(_self_))._field_file.ptr(), _22330_ident);;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c4b0859e_SelectPackage(_1c4b07c74_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)> _23332_selector) {
	return _1c45e2918_SelectPackage((*(_self_))._field_file.ptr(), _23332_selector);;
}



inline jule::Ptr<_1c4b2c837_Var> _1c4b08956_FindVar(_1c4b07c74_Sema* _self_, jule::Str _24326_ident, jule::Bool _24338_cpp_linked) {
	jule::Ptr<_1c4b2c837_Var> _24517_v = _1c4aec340_findVarInPackage(&((*(_self_))._field_files), _24326_ident, _24338_cpp_linked);;
	if ((_24517_v != nullptr)) {
		return _24517_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8d4925:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _25121_imp = *it;
			{
				if ((!(_1c4b0669b_impIsLookupable(&(_25121_imp), _24326_ident)))) {
					goto _iter_next_1ac8d4925;
				};
				_24517_v=_1c4b0080a_FindVar(_25121_imp.ptr(), _24326_ident, _24338_cpp_linked);
				if (((_24517_v != nullptr) && _1c4b0b10c_isAccessibleDefine(_self_, _24517_v.get()._field_Public, _24517_v.get()._field_Token))) {
					return _24517_v;;
				};
			}
			_iter_next_1ac8d4925:;
			++it;
			goto _iter_begin_1ac8d4925;
		}
		_iter_end_1ac8d4925:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4701230_TypeAlias> _1c4b08d0d_FindTypeAlias(_1c4b07c74_Sema* _self_, jule::Str _27032_ident, jule::Bool _27044_cpp_linked) {
	jule::Ptr<_1c4701230_TypeAlias> _27217_ta = _1c4aec76e_findTypeAliasInPackage(&((*(_self_))._field_files), _27032_ident, _27044_cpp_linked);;
	if ((_27217_ta != nullptr)) {
		return _27217_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8d71a8:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _27821_imp = *it;
			{
				if ((!(_1c4b0669b_impIsLookupable(&(_27821_imp), _27032_ident)))) {
					goto _iter_next_1ac8d71a8;
				};
				_27217_ta=_1c4b00bb2_FindTypeAlias(_27821_imp.ptr(), _27032_ident, _27044_cpp_linked);
				if (((_27217_ta != nullptr) && _1c4b0b10c_isAccessibleDefine(_self_, _27217_ta.get()._field_Public, _27217_ta.get()._field_Token))) {
					return _27217_ta;;
				};
			}
			_iter_next_1ac8d71a8:;
			++it;
			goto _iter_begin_1ac8d71a8;
		}
		_iter_end_1ac8d71a8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4a86ebc_Struct> _1c4b091b5_FindStruct(_1c4b07c74_Sema* _self_, jule::Str _29729_ident, jule::Bool _29741_cppLinked) {
	jule::Ptr<_1c4a86ebc_Struct> _29917_s = _1c4aecb59_findStructInPackage(&((*(_self_))._field_files), _29729_ident, _29741_cppLinked);;
	if ((_29917_s != nullptr)) {
		return _29917_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8d993b:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _30421_imp = *it;
			{
				if ((!(_1c4b0669b_impIsLookupable(&(_30421_imp), _29729_ident)))) {
					goto _iter_next_1ac8d993b;
				};
				_29917_s=_1c4b01069_FindStruct(_30421_imp.ptr(), _29729_ident, _29741_cppLinked);
				if (((_29917_s != nullptr) && _1c4b0b10c_isAccessibleDefine(_self_, _29917_s.get()._field_Public, _29917_s.get()._field_Token))) {
					return _29917_s;;
				};
			}
			_iter_next_1ac8d993b:;
			++it;
			goto _iter_begin_1ac8d993b;
		}
		_iter_end_1ac8d993b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ab22e4_Fn> _1c4b0956c_FindFn(_1c4b07c74_Sema* _self_, jule::Str _32225_ident, jule::Bool _32237_cpp_linked) {
	jule::Ptr<_1c4ab22e4_Fn> _32417_f = _1c4aed0bb_findFnInPackage(&((*(_self_))._field_files), _32225_ident, _32237_cpp_linked);;
	if ((_32417_f != nullptr)) {
		return _32417_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8dc1be:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1c4b0669b_impIsLookupable(&(_33021_imp), _32225_ident)))) {
					goto _iter_next_1ac8dc1be;
				};
				_32417_f=_1c4b01421_FindFn(_33021_imp.ptr(), _32225_ident, _32237_cpp_linked);
				if (((_32417_f != nullptr) && _1c4b0b10c_isAccessibleDefine(_self_, _32417_f.get()._field_Public, _32417_f.get()._field_Token))) {
					return _32417_f;;
				};
			}
			_iter_next_1ac8dc1be:;
			++it;
			goto _iter_begin_1ac8dc1be;
		}
		_iter_end_1ac8dc1be:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ac306e_Trait> _1c4b0987a_FindTrait(_1c4b07c74_Sema* _self_, jule::Str _34928_ident) {
	jule::Ptr<_1c4ac306e_Trait> _35117_t = _1c4aed3c9_findTraitInPackage(&((*(_self_))._field_files), _34928_ident);;
	if ((_35117_t != nullptr)) {
		return _35117_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8deab7:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _35721_imp = *it;
			{
				if ((!(_1c4b0669b_impIsLookupable(&(_35721_imp), _34928_ident)))) {
					goto _iter_next_1ac8deab7;
				};
				_35117_t=_1c4b0172e_FindTrait(_35721_imp.ptr(), _34928_ident);
				if (((_35117_t != nullptr) && _1c4b0b10c_isAccessibleDefine(_self_, _35117_t.get()._field_Public, _35117_t.get()._field_Token))) {
					return _35117_t;;
				};
			}
			_iter_next_1ac8deab7:;
			++it;
			goto _iter_begin_1ac8deab7;
		}
		_iter_end_1ac8deab7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ac5802_Enum> _1c4b09b88_FindEnum(_1c4b07c74_Sema* _self_, jule::Str _37627_ident) {
	jule::Ptr<_1c4ac5802_Enum> _37817_e = _1c4aed71a_findEnumInPackage(&((*(_self_))._field_files), _37627_ident);;
	if ((_37817_e != nullptr)) {
		return _37817_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8e20e7:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _38421_imp = *it;
			{
				if ((!(_1c4b0669b_impIsLookupable(&(_38421_imp), _37627_ident)))) {
					goto _iter_next_1ac8e20e7;
				};
				_37817_e=_1c4b01a3c_FindEnum(_38421_imp.ptr(), _37627_ident);
				if (((_37817_e != nullptr) && _1c4b0b10c_isAccessibleDefine(_self_, _37817_e.get()._field_Public, _37817_e.get()._field_Token))) {
					return _37817_e;;
				};
			}
			_iter_next_1ac8e20e7:;
			++it;
			goto _iter_begin_1ac8e20e7;
		}
		_iter_end_1ac8e20e7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b09e96_FindTypeEnum(_1c4b07c74_Sema* _self_, jule::Str _40331_ident) {
	jule::Ptr<_1c4ac6dec_TypeEnum> _40517_e = _1c4aeda5b_findTypeEnumInPackage(&((*(_self_))._field_files), _40331_ident);;
	if ((_40517_e != nullptr)) {
		return _40517_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8e4627:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _41121_imp = *it;
			{
				if ((!(_1c4b0669b_impIsLookupable(&(_41121_imp), _40331_ident)))) {
					goto _iter_next_1ac8e4627;
				};
				_40517_e=_1c4b01d4a_FindTypeEnum(_41121_imp.ptr(), _40331_ident);
				if (((_40517_e != nullptr) && _1c4b0b10c_isAccessibleDefine(_self_, _40517_e.get()._field_Public, _40517_e.get()._field_Token))) {
					return _40517_e;;
				};
			}
			_iter_next_1ac8e4627:;
			++it;
			goto _iter_begin_1ac8e4627;
		}
		_iter_end_1ac8e4627:;
	};
	return nullptr;;
}



inline jule::Bool _1c4b0a2e8_isFlag(_1c4b07c74_Sema* _self_, jule::I32 _42721_flags) {
	return (((*(_self_))._field_flags & _42721_flags) == _42721_flags);;
}



inline void _1c4b0a56d_setCurrentFile(_1c4b07c74_Sema* _self_, jule::Ptr<_1c45e20dd_SymbolTable> _42937_f) {
	(*(_self_))._field_file=_42937_f;
}



inline void _1c4b0a936_pushErr(_1c4b07c74_Sema* _self_, jule::Ptr<_2039861ab_Token> _43126_token, jule::Str _43141_fmt, jule::Slice<jule::Any> _43154_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1c4b0635a_compilerErr(&(_43126_token), true, _43141_fmt, _43154_args));;
}



inline void _1c4b0ac55_pushSugggestion(_1c4b07c74_Sema* _self_, jule::Str _43634_fmt, jule::Slice<jule::Any> _43647_args) {
	{
		_1c4b077e0_pushSugggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _43634_fmt, _43647_args);
	};
}



inline jule::Bool _1c4b0b10c_isAccessibleDefine(_1c4b07c74_Sema* _self_, jule::Bool _44133_public, jule::Ptr<_2039861ab_Token> _44147_token) {
	return ((_44133_public || (_44147_token.get()._field_File == nullptr)) || (_20398be3c_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _20398be3c_Dir(_44147_token.get()._field_File.ptr())));;
}



inline jule::Bool _1c4b0b55d_isDuplicatedIdent(_1c4b07c74_Sema* _self_, jule::Uintptr _44832_itself, jule::Str _44849_ident, jule::Bool _44861_cpp_linked) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8ea96e:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> *_44916_f = it;
			{
				if (_1c45e55db_isDuplicatedIdent((*(_44916_f)).ptr(), _44832_itself, _44849_ident, _44861_cpp_linked)) {
					return true;;
				};
				{
					auto expr = &((*(_44916_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac8eb7c7:;
					if (it != expr_end) {
						jule::Ptr<_1c4aeeb28_ImportInfo> *_45420_imp = it;
						{
							{
								auto expr = &((*(_45420_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac8ec09c:;
								if (it != expr_end) {
									jule::Ptr<_2039861ab_Token> *_45524_selected = it;
									{
										if (((*(_45524_selected)).get()._field_Kind == _44849_ident)) {
											return true;;
										};
									}
									_iter_next_1ac8ec09c:;
									++it;
									goto _iter_begin_1ac8ec09c;
								}
								_iter_end_1ac8ec09c:;
							};
						}
						_iter_next_1ac8eb7c7:;
						++it;
						goto _iter_begin_1ac8eb7c7;
					}
					_iter_end_1ac8eb7c7:;
				};
			}
			_iter_next_1ac8ea96e:;
			++it;
			goto _iter_begin_1ac8ea96e;
		}
		_iter_end_1ac8ea96e:;
	};
	return false;;
}



inline void _1c4b0b87c_checkDirectives(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>* _46540_d, jule::Any _46566_o) {
	_1c4ae8a45_directiveChecker _46617_dc = _1c4ae8a45_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>>)((&((*(_46540_d)))))), ._field_o=_46566_o};;
	_1c4aea151_check(&_46617_dc);
}



inline jule::Bool _1c4b0bccd_checkGenericQuantity(_1c4b07c74_Sema* _self_, jule::I32 _47439_required, jule::I32 _47454_given, jule::Ptr<_2039861ab_Token> _47466_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_47439_required == 0LL) && (_47454_given > 0LL))) {
			_case_begin_1ac8eec70:;
			{
				_1c4b0a936_pushErr(_self_, _47466_token, jule::Str("define not has generics", 23), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_47439_required > 0LL) && (_47454_given == 0LL))) {
			_case_begin_1ac8ee588:;
			{
				_1c4b0a936_pushErr(_self_, _47466_token, jule::Str("define has generics", 19), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required < _47454_given)) {
			_case_begin_1ac8ee5ee:;
			{
				_1c4b0a936_pushErr(_self_, _47466_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required > _47454_given)) {
			_case_begin_1ac8ee676:;
			{
				_1c4b0a936_pushErr(_self_, _47466_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac8ee522:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac8ee456:;
	};
}



inline jule::Bool _1c4b0c1a7_isDuplicatedImportSelection(_1c4b07c74_Sema* _self_, jule::Uintptr _49342_itself, jule::Str _49359_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac90105c:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> *_49416_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_49416_imp))) == _49342_itself)) {
					goto _iter_end_1ac90105c;
				};
				if (_1c4b024ee_existIdent((*(_49416_imp)).ptr(), _49359_ident)) {
					return true;;
				};
			}
			_iter_next_1ac90105c:;
			++it;
			goto _iter_begin_1ac90105c;
		}
		_iter_end_1ac90105c:;
	};
	return false;;
}



inline jule::Any _1c4b0c570_getImportDef(_1c4b07c74_Sema* _self_, jule::Str _50627_ident, jule::Ptr<_1c4aeeb28_ImportInfo>* _50644_imp) {
	if ((_1c4b82a68_findPackageBuiltinDef((*(_50644_imp)).get()._field_LinkPath, _50627_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_50644_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9040a4:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _51021_f = *it;
			{
				;
				jule::Any _51321_def = _1c45e518a_defByIdent(_51021_f.ptr(), _50627_ident, false);;
				if ((_51321_def != nullptr)) {
					return _51321_def;;
				};
			}
			_iter_next_1ac9040a4:;
			++it;
			goto _iter_begin_1ac9040a4;
		}
		_iter_end_1ac9040a4:;
	};
	return nullptr;;
}



inline jule::Bool _1ac90aa39_checkImportSelection(_1c4b07c74_Sema* _self_, jule::Ptr<_2039861ab_Token>* _52143_ident, jule::Ptr<_1c4b2c837_Var>* _52159_s) {
	if ((!(_1c4b0b10c_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c4aee056_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac90e983_checkImportSelection(_1c4b07c74_Sema* _self_, jule::Ptr<_2039861ab_Token>* _52143_ident, jule::Ptr<_1c4701230_TypeAlias>* _52159_s) {
	if ((!(_1c4b0b10c_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c4aee056_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac913745_checkImportSelection(_1c4b07c74_Sema* _self_, jule::Ptr<_2039861ab_Token>* _52143_ident, jule::Ptr<_1c4a86ebc_Struct>* _52159_s) {
	if ((!(_1c4b0b10c_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c4aee056_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac9178ae_checkImportSelection(_1c4b07c74_Sema* _self_, jule::Ptr<_2039861ab_Token>* _52143_ident, jule::Ptr<_1c4ac306e_Trait>* _52159_s) {
	if ((!(_1c4b0b10c_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c4aee056_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac91b671_checkImportSelection(_1c4b07c74_Sema* _self_, jule::Ptr<_2039861ab_Token>* _52143_ident, jule::Ptr<_1c4ac5802_Enum>* _52159_s) {
	if ((!(_1c4b0b10c_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c4aee056_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac920543_checkImportSelection(_1c4b07c74_Sema* _self_, jule::Ptr<_2039861ab_Token>* _52143_ident, jule::Ptr<_1c4ac6dec_TypeEnum>* _52159_s) {
	if ((!(_1c4b0b10c_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c4aee056_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ac924415_checkImportSelection(_1c4b07c74_Sema* _self_, jule::Ptr<_2039861ab_Token>* _52143_ident, jule::Ptr<_1c4ab22e4_Fn>* _52159_s) {
	if ((!(_1c4b0b10c_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c4aee056_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1c4b0a936_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1c4b0cc57_checkImportSelectedSelections(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4aeeb28_ImportInfo>* _53553_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_53553_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9063d6:;
		if (it != expr_end) {
			jule::Ptr<_2039861ab_Token> _53716_ident = *it;
			{
				if (_53716_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_1ac9063d6;
				};
				if (_1c4b0c1a7_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_53553_imp)))), _53716_ident.get()._field_Kind)) {
					_1c4b0a936_pushErr(_self_, _53716_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type5)}));
					_1c4b0ac55_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ac9063d6;
				};
				jule::Any _54921_def = _1c4b0c570_getImportDef(_self_, _53716_ident.get()._field_Kind, _53553_imp);;
				{
					auto &_match_expr{ _54921_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1ac9095e8:;
						{
							goto _iter_next_1ac9063d6;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ac906ace:;
						{
							jule::Ptr<_1c4b2c837_Var> _55525_v = _54921_def.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8);;
							__jule_func_result=(_1ac90aa39_checkImportSelection(_self_, &(_53716_ident), &(_55525_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1ac908c46:;
						{
							jule::Ptr<_1c4701230_TypeAlias> _55825_ta = _54921_def.cast_ptr<_1c4701230_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1ac90e983_checkImportSelection(_self_, &(_53716_ident), &(_55825_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1ac908cac:;
						{
							jule::Ptr<_1c4a86ebc_Struct> _56125_s = _54921_def.cast_ptr<_1c4a86ebc_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1ac913745_checkImportSelection(_self_, &(_53716_ident), &(_56125_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1ac909807:;
						{
							jule::Ptr<_1c4ac306e_Trait> _56425_t = _54921_def.cast_ptr<_1c4ac306e_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1ac9178ae_checkImportSelection(_self_, &(_53716_ident), &(_56425_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1ac90986d:;
						{
							jule::Ptr<_1c4ac5802_Enum> _56725_e = _54921_def.cast_ptr<_1c4ac5802_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1ac91b671_checkImportSelection(_self_, &(_53716_ident), &(_56725_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1ac9098d4:;
						{
							jule::Ptr<_1c4ac6dec_TypeEnum> _57025_e = _54921_def.cast_ptr<_1c4ac6dec_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1ac920543_checkImportSelection(_self_, &(_53716_ident), &(_57025_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1ac90994a:;
						{
							jule::Ptr<_1c4ab22e4_Fn> _57325_f = _54921_def.cast_ptr<_1c4ab22e4_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1ac924415_checkImportSelection(_self_, &(_53716_ident), &(_57325_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1ac908a37:;
						{
							_1c4b0a936_pushErr(_self_, _53716_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1ac9063d6;
						}
					}
					_match_end_1ac9089d2:;
				};
			}
			_iter_next_1ac9063d6:;
			++it;
			goto _iter_begin_1ac9063d6;
		}
		_iter_end_1ac9063d6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac928859_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema* _self_, jule::Slice<jule::Ptr<_1c4b2c837_Var>>* _58462_s, jule::Ptr<_2039861ab_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac92a52b:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ac90aa39_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ac92a52b:;
			++it;
			goto _iter_begin_1ac92a52b;
		}
		_iter_end_1ac92a52b:;
	};
	return _58517_ok;;
}

inline jule::Bool _1ac92bdac_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema* _self_, jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>* _58462_s, jule::Ptr<_2039861ab_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac92d243:;
		if (it != expr_end) {
			jule::Ptr<_1c4701230_TypeAlias> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ac90e983_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ac92d243:;
			++it;
			goto _iter_begin_1ac92d243;
		}
		_iter_end_1ac92d243:;
	};
	return _58517_ok;;
}

inline jule::Bool _1ac92c484_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema* _self_, jule::Slice<jule::Ptr<_1c4a86ebc_Struct>>* _58462_s, jule::Ptr<_2039861ab_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac930e49:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ac913745_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ac930e49:;
			++it;
			goto _iter_begin_1ac930e49;
		}
		_iter_end_1ac930e49:;
	};
	return _58517_ok;;
}

inline jule::Bool _1ac9327ca_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema* _self_, jule::Slice<jule::Ptr<_1c4ab22e4_Fn>>* _58462_s, jule::Ptr<_2039861ab_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac933b72:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ac924415_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ac933b72:;
			++it;
			goto _iter_begin_1ac933b72;
		}
		_iter_end_1ac933b72:;
	};
	return _58517_ok;;
}

inline jule::Bool _1ac932db3_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema* _self_, jule::Slice<jule::Ptr<_1c4ac306e_Trait>>* _58462_s, jule::Ptr<_2039861ab_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac936834:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac306e_Trait> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ac9178ae_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ac936834:;
			++it;
			goto _iter_begin_1ac936834;
		}
		_iter_end_1ac936834:;
	};
	return _58517_ok;;
}

inline jule::Bool _1ac935a75_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema* _self_, jule::Slice<jule::Ptr<_1c4ac5802_Enum>>* _58462_s, jule::Ptr<_2039861ab_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9394e6:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac5802_Enum> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ac91b671_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ac9394e6:;
			++it;
			goto _iter_begin_1ac9394e6;
		}
		_iter_end_1ac9394e6:;
	};
	return _58517_ok;;
}

inline jule::Bool _1ac938737_checkImportsAllSelectionsFromCollection(_1c4b07c74_Sema* _self_, jule::Slice<jule::Ptr<_1c4ac6dec_TypeEnum>>* _58462_s, jule::Ptr<_2039861ab_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac93c241:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac6dec_TypeEnum> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ac920543_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ac93c241:;
			++it;
			goto _iter_begin_1ac93c241;
		}
		_iter_end_1ac93c241:;
	};
	return _58517_ok;;
}



inline jule::Bool _1c4b0d483_checkImportAllSelections(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4aeeb28_ImportInfo>* _59444_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_59444_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac909b6a:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> *_59616_file = it;
			{
				__jule_func_result=(_1ac928859_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Vars), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac92bdac_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_TypeAliases), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac92c484_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Structs), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac9327ca_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Funcs), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac932db3_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Traits), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac935a75_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Enums), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ac938737_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_TypeEnums), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1ac909b6a:;
			++it;
			goto _iter_begin_1ac909b6a;
		}
		_iter_end_1ac909b6a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4b0d7a2_checkImportSelections(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4aeeb28_ImportInfo>* _60845_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_60845_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1c4b0cc57_checkImportSelectedSelections(_self_, _60845_imp);
		return __jule_func_result;;
	} else if ((*(_60845_imp)).get()._field_ImportAll) {
		__jule_func_result = _1c4b0d483_checkImportAllSelections(_self_, _60845_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c4b0dab0_isUseAliasDuplication(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4aeeb28_ImportInfo>* _61741_imp) {
	if (((*(_61741_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac93eb39:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _62221_imp2 = *it;
			{
				if ((_62221_imp2 == (*(_61741_imp)))) {
					goto _iter_end_1ac93eb39;
				};
				if ((_62221_imp2.get()._field_Alias == (*(_61741_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_62221_imp2.get()._field_Ident == _62221_imp2.get()._field_LinkPath) && (_62221_imp2.get()._field_Ident == (*(_61741_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1ac93eb39:;
			++it;
			goto _iter_begin_1ac93eb39;
		}
		_iter_end_1ac93eb39:;
	};
	return false;;
}



inline jule::Bool _1c4b0ddbd_checkImport(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4aeeb28_ImportInfo>* _63735_imp) {
	if (((*(_63735_imp)).get()._field_CppLinked || ((*(_63735_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1c4b0dab0_isUseAliasDuplication(_self_, _63735_imp)) {
		_1c4b0a936_pushErr(_self_, (*(_63735_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_63735_imp)).get()._field_Alias, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_63735_imp)).get()._field_Duplicate))) {
		jule::Ptr<_1c4b07c74_Sema> _64821_sema = jule::new_ptr<_1c4b07c74_Sema>(_1c4b07c74_Sema{._field_flags=(*(_self_))._field_flags});;
		_1c4b29229_check(_64821_sema, &((*(_63735_imp)).get()._field_Package.get()._field_Files));
		if ((_64821_sema.get()._field_errors.len() != 0LL)) {
			(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_64821_sema.get()._field_errors);
			_64821_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1c4b0d7a2_checkImportSelections(_self_, _63735_imp);;
}



inline void _1c4b0e099_checkImports(_1c4b07c74_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac943522:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _66221_file = *it;
			{
				_1c4b0a56d_setCurrentFile(_self_, _66221_file);
				{
					auto expr = &(_66221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9460d5:;
					if (it != expr_end) {
						jule::Ptr<_1c4aeeb28_ImportInfo> _66425_imp = *it;
						{
							jule::Bool _66521_ok = _1c4b0ddbd_checkImport(_self_, &(_66425_imp));;
							if ((!(_66521_ok))) {
								return;;
							};
						}
						_iter_next_1ac9460d5:;
						++it;
						goto _iter_begin_1ac9460d5;
					}
					_iter_end_1ac9460d5:;
				};
			}
			_iter_next_1ac943522:;
			++it;
			goto _iter_begin_1ac943522;
		}
		_iter_end_1ac943522:;
	};
}



inline void _1c4b0e275_implFileImpls(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac945aeb:;
		if (it != expr_end) {
			jule::Ptr<_1c4acb363_Impl> _67521_imp = *it;
			{
				_1c4b1b4a2_implImpl(_self_, &(_67521_imp));
			}
			_iter_next_1ac945aeb:;
			++it;
			goto _iter_begin_1ac945aeb;
		}
		_iter_end_1ac945aeb:;
	};
}



inline void _1c4b0e451_implImpls(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac947aa9:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _68121_file = *it;
			{
				_1c4b0a56d_setCurrentFile(_self_.ptr(), _68121_file);
				_1c4b0e275_implFileImpls(_self_);
			}
			_iter_next_1ac947aa9:;
			++it;
			goto _iter_begin_1ac947aa9;
		}
		_iter_end_1ac947aa9:;
	};
}



inline void _1c4b0e62c_checkEnums(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac948b21:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _68821_file = *it;
			{
				_1c4b0a56d_setCurrentFile(_self_.ptr(), _68821_file);
				_1c4b180b4_checkEnumDecls(_self_);
			}
			_iter_next_1ac948b21:;
			++it;
			goto _iter_begin_1ac948b21;
		}
		_iter_end_1ac948b21:;
	};
}



inline void _1c4b0e808_checkFileInherits(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9498ad:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac306e_Trait> _69521_t = *it;
			{
				jule::Bool _69617_ok = _1c4b19758__checkTraitDeclInherits(_self_, &(_69521_t));;
				if ((!(_69617_ok))) {
					return;;
				};
			}
			_iter_next_1ac9498ad:;
			++it;
			goto _iter_begin_1ac9498ad;
		}
		_iter_end_1ac9498ad:;
	};
}



inline void _1c4b0e9d4_checkInherits(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac949cdc:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _70421_file = *it;
			{
				_1c4b0a56d_setCurrentFile(_self_.ptr(), _70421_file);
				_1c4b0e808_checkFileInherits(_self_);
			}
			_iter_next_1ac949cdc:;
			++it;
			goto _iter_begin_1ac949cdc;
		}
		_iter_end_1ac949cdc:;
	};
}



inline _1c4b6a523_typeChecker _1c4b0ee35_typeChecker(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Trait<_1c4b77c6c_Lookup> _71035_l, jule::Slice<jule::Ptr<_1c4701230_TypeAlias>> _71050_generics, jule::Ptr<_1c4b69643_referencer> _71113_referencer) {
	_1c4b6a523_typeChecker _71217_tc = _1c4b6a523_typeChecker{._field_s=_self_, ._field_rootLookup=_71035_l, ._field_lookup=_71035_l, ._field_referencer=_71113_referencer, ._field_useGenerics=_71050_generics, };;
	{
		auto &_match_expr{ _71035_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ac94c64c:;
			{
				jule::Ptr<_1c4ad7e30_scopeChecker> _72121_hard = _1c4adb2da_getHardRoot(_71035_l.cast_ptr<_1c4ad7e30_scopeChecker>(0));;
				_71217_tc._field_refers=_72121_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1ac94c55e:;
	};
	if (((_71113_referencer != nullptr) && (_71113_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _71113_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1ac94d9e4:;
				{
					_71217_tc._field_ownerAlias=_71113_referencer.get()._field_owner.cast_ptr<_1c4701230_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1ac94d98e:;
		};
	};
	return _71217_tc;;
}



inline jule::Ptr<_1c4621d32_TypeKind> _1c4b10430_buildTypeWithRefers(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4a8e337_TypeDecl>* _73744_t, jule::Trait<_1c4b77c6c_Lookup> _73767_l, jule::Slice<jule::Ptr<_1c4701230_TypeAlias>> _73813_generics, jule::Ptr<_1c4b69643_referencer> _73841_referencer) {
	return ({ auto _wrap_copy = _1c4b0ee35_typeChecker(_self_, _73767_l, _73813_generics, _73841_referencer); _1c4b7278e_checkDecl(&_wrap_copy, _73744_t); });;
}



inline jule::Bool _1c4b1092a_checkTypeWithRefers(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4b610b8_TypeSymbol>* _74444_t, jule::Trait<_1c4b77c6c_Lookup> _74464_l, jule::Slice<jule::Ptr<_1c4701230_TypeAlias>> _74513_generics, jule::Ptr<_1c4b69643_referencer> _74541_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1c4b614b4_checked((*(_74444_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_74444_t)).get()._field_Kind=_1c4b10430_buildTypeWithRefers(_self_, &((*(_74444_t)).get()._field_Decl), _74464_l, _74513_generics, _74541_referencer);
	__jule_func_result = _1c4b614b4_checked((*(_74444_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1c4ac942c_constraintChecker> _1c4b10b8e_constraintChecker(jule::Ptr<_1c4b07c74_Sema> _self_) {
	return jule::new_ptr<_1c4ac942c_constraintChecker>(_1c4ac942c_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1c4b11046_checkType(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4b610b8_TypeSymbol>* _75934_t, jule::Trait<_1c4b77c6c_Lookup> _75954_l) {
	return _1c4b1092a_checkTypeWithRefers(_self_, _75934_t, _75954_l, nullptr, nullptr);;
}



inline jule::Ptr<_1c4621d32_TypeKind> _1c4b11497_buildTypeWithGenerics(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4a8e337_TypeDecl>* _76546_t, jule::Slice<jule::Ptr<_1c4701230_TypeAlias>> _76613_generics, jule::Ptr<_1c4ab6958_ReferenceStack> _76641_refers) {
	jule::Ptr<_1c4b6a523_typeChecker> _76717_tc = jule::new_ptr<_1c4b6a523_typeChecker>(_1c4b6a523_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c4b77c6c_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c4b77c6c_Lookup>(_self_, 3), ._field_refers=_76641_refers, ._field_useGenerics=_76613_generics, });;
	return _1c4b7278e_checkDecl(_76717_tc.ptr(), _76546_t);;
}



inline jule::Ptr<_1c4621d32_TypeKind> _1c4b117a5_buildType(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4a8e337_TypeDecl>* _77834_t) {
	return _1c4b11497_buildTypeWithGenerics(_self_, _77834_t, nullptr, nullptr);;
}



inline jule::Ptr<_1c4621d32_TypeKind> _1c4b11ab3_selectType(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4a8e337_TypeDecl>* _78335_t) {
	jule::Ptr<_1c4b6a523_typeChecker> _78417_tc = jule::new_ptr<_1c4b6a523_typeChecker>(_1c4b6a523_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c4b77c6c_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c4b77c6c_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1c4b7278e_checkDecl(_78417_tc.ptr(), _78335_t);;
}



inline jule::Ptr<_1c45e8985_Eval> _1c4b12014_evalpd(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Trait<_1c4b77c6c_Lookup> _79530_l, jule::Ptr<_1c4621d32_TypeKind> _79545_p, jule::Ptr<_1c4b2c837_Var> _79563_owner) {
	jule::Ptr<_1c45e8985_Eval> _79617_e = jule::new_ptr<_1c45e8985_Eval>(_1c45e8985_Eval{._field_s=_self_, ._field_lookup=_79530_l, ._field_owner=_79563_owner, });;
	{
		auto &_match_expr{ _79530_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ac956b84:;
			{
				_79617_e.get()._field_unsafety=_1c4ada3e9_isUnsafe(_79530_l.cast_ptr<_1c4ad7e30_scopeChecker>(0));
			}
		}
		_match_end_1ac956b1d:;
	};
	_79617_e.get()._field_prefix=_79545_p;
	return _79617_e;;
}



inline jule::Ptr<_1c45e8985_Eval> _1c4b123bb_evalp(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Trait<_1c4b77c6c_Lookup> _81029_l, jule::Ptr<_1c4621d32_TypeKind> _81044_p) {
	return _1c4b12014_evalpd(_self_, _81029_l, _81044_p, nullptr);;
}



inline jule::Ptr<_1c45e8985_Eval> _1c4b126c9_eval(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Trait<_1c4b77c6c_Lookup> _81528_l) {
	return _1c4b123bb_evalp(_self_, _81528_l, nullptr);;
}



inline jule::Bool _1c4b12bc4_checkAssignType(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Bool _81935_destIsRef, jule::Ptr<_1c4621d32_TypeKind>* _81957_dest, jule::Ptr<_1c45e6e17_Data>* _82014_d, jule::Ptr<_2039861ab_Token> _82028_errorToken) {
	if ((*(_82014_d)).get()._field_Decl) {
		_1c4b0a936_pushErr(_self_.ptr(), _82028_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_81935_destIsRef) {
		if ((!(_1c4622580_Equal((*(_81957_dest)), (*(_82014_d)).get()._field_Kind)))) {
			_1c4b0a936_pushErr(_self_.ptr(), _82028_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_81957_dest)).ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str((*(_82014_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_1c45d263e_assignTypeChecker> _83121_atc = jule::new_ptr<_1c45d263e_assignTypeChecker>(_1c45d263e_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_81957_dest)), ._field_d=(*(_82014_d)), ._field_errorToken=_82028_errorToken});;
		jule::Bool _83717_ok = _1c45d37b6_check(_83121_atc.ptr());;
		if ((!(_83717_ok))) {
			return false;;
		};
	};
	if (((!(_1c45e77ca_IsConst((*(_82014_d)).ptr()))) || (_1c4b5e45c_Prim((*(_81957_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _84717_kind = _1c4b5e45c_Prim((*(_81957_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_1c3177559_IsSigInt(_84717_kind)) {
			_case_begin_1ac95d1a7:;
			{
				_1c317879c_SetI64((*(_82014_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c3178406_AsI64((*(_82014_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1c317768b_IsUnsigInt(_84717_kind)) {
			_case_begin_1ac95d22e:;
			{
				_1c31788ce_SetU64((*(_82014_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c3178538_AsU64((*(_82014_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1c3177900_IsFloat(_84717_kind)) {
			_case_begin_1ac95d2a6:;
			{
				_1c3178c75_SetF64((*(_82014_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1c317866a_AsF64((*(_82014_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1ac95d0db:;
	};
	return true;;
}



inline jule::Bool _1c4b13125_checkTypeCompatibility(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4621d32_TypeKind>* _86147_dest, jule::Ptr<_1c4621d32_TypeKind>* _86214_src, jule::Ptr<_2039861ab_Token>* _86235_errorToken) {
	if (((*(_86214_src)) == nullptr)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_86235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_86147_dest)).ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str((*(_86214_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_1c4b60c11_Tup((*(_86214_src)).ptr()) != nullptr)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_86235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_86147_dest)).ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str((*(_86214_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_1c45d0a16_typeCompatibilityChecker _87617_tcc = _1c45d0a16_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_86147_dest)), ._field_src=(*(_86214_src)), ._field_errorToken=(*(_86235_errorToken))};;
	if (_1c45d2100_check(&_87617_tcc)) {
		return true;;
	};
	_1c4b0a936_pushErr(_self_.ptr(), (*(_86235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_86147_dest)).ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str((*(_86214_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_1c4621d32_TypeKind> _1c4b13598_buildNonGenericTypeKind(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4a8e337_TypeDecl>* _89748_ast, jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>>* _89814_generics, jule::Slice<jule::Ptr<_1c4621d32_TypeKind>>* _89850_ignored) {
	jule::Ptr<_1c4b6a523_typeChecker> _89917_tc = jule::new_ptr<_1c4b6a523_typeChecker>(_1c4b6a523_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c4b77c6c_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c4b77c6c_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_89814_generics)), ._field_ignoredGenerics=(&((*(_89850_ignored)))), });;
	return _1c4b7278e_checkDecl(_89917_tc.ptr(), _89748_ast);;
}



inline jule::Bool _1c4b13983_buildFnNonGenericTypeKinds(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _90951_f, jule::Slice<jule::Ptr<_1c4621d32_TypeKind>>* _90967_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>> _91117_generics = nullptr;;
	if (_1c4a810e8_IsMethod((*(_90951_f)).get()._field_Decl.ptr())) {
		_91117_generics=jule::append((*(_90951_f)).get()._field_Decl.get()._field_Generics,(*(_90951_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_91117_generics=(*(_90951_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_90951_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac966ca4:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab2b30_ParamIns> _91821_p = *it;
			{
				if ((!(_1c4a6c810_IsSelf(_91821_p.get()._field_Decl.ptr())))) {
					_91821_p.get()._field_Kind=_1c4b13598_buildNonGenericTypeKind(_self_, &(_91821_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_91117_generics), _90967_ignored);
					__jule_func_result=(__jule_func_result && (_91821_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1ac966ca4:;
			++it;
			goto _iter_begin_1ac966ca4;
		}
		_iter_end_1ac966ca4:;
	};
	if ((!(_1c4a871ed_IsVoid((*(_90951_f)).get()._field_Decl.ptr())))) {
		(*(_90951_f)).get()._field_Result=_1c4b13598_buildNonGenericTypeKind(_self_, &((*(_90951_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_91117_generics), _90967_ignored);
		__jule_func_result=(__jule_func_result && ((*(_90951_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c4ab39ee_FnIns> _1c4b13ca2_getTraitCheckFnKind(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab22e4_Fn>* _93144_f) {
	if (((*(_93144_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_93144_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_1c4ab39ee_FnIns> _93517_ins = _1c4a78b7e_instanceForce((*(_93144_f)));;
	jule::Ptr<_1c4b6a523_typeChecker> _93717_tc = jule::new_ptr<_1c4b6a523_typeChecker>(_1c4b6a523_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c4b77c6c_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c4b77c6c_Lookup>(_self_, 3), });;
	{
		auto expr = &(_93517_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac96b4c3:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab2b30_ParamIns> _94221_p = *it;
			{
				if ((!(_1c4a6c810_IsSelf(_94221_p.get()._field_Decl.ptr())))) {
					_94221_p.get()._field_Kind=_1c4b7278e_checkDecl(_93717_tc.ptr(), &(_94221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1ac96b4c3:;
			++it;
			goto _iter_begin_1ac96b4c3;
		}
		_iter_end_1ac96b4c3:;
	};
	if ((!(_1c4a871ed_IsVoid((*(_93144_f)).ptr())))) {
		_93517_ins.get()._field_Result=_1c4b7278e_checkDecl(_93717_tc.ptr(), &((*(_93144_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _93517_ins;;
}



inline jule::Bool _1c4b14203_checkConstraintsFn(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _95443_f, jule::Ptr<_2039861ab_Token>* _95459_et, jule::Ptr<_1c4ab39ee_FnIns> _95475_exist) {
	jule::Ptr<_1c4ac942c_constraintChecker> _95517_cc = _1c4b10b8e_constraintChecker(_self_);;
	_95517_cc.get()._field_et=(*(_95459_et));
	_95517_cc.get()._field_fi=(*(_95443_f));
	if ((_95475_exist != nullptr)) {
		{
			auto expr = &(_95475_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac96e7c3:;
			if (it != expr_end) {
				jule::I32 _95918_i = it - expr->begin();
				jule::Ptr<_1c47006e6_InsGeneric> _95925_g = *it;
				{
					(*(_95443_f)).get()._field_Generics[_95918_i].get()._field_Constraint=_95925_g.get()._field_Constraint;
				}
				_iter_next_1ac96e7c3:;
				++it;
				_95918_i++;
				goto _iter_begin_1ac96e7c3;
			}
			_iter_end_1ac96e7c3:;
		};
	} else {
		_95517_cc.get()._field_uniq=true;
	};
	return _1c4aca30c_check(_95517_cc);;
}



inline jule::Bool _1c4b14654_checkConstraintsStruct(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4aab255_StructIns>* _96847_s, jule::Ptr<_2039861ab_Token>* _96867_et, jule::Ptr<_1c4aab255_StructIns> _96883_exist) {
	jule::Ptr<_1c4ac942c_constraintChecker> _96917_cc = _1c4b10b8e_constraintChecker(_self_);;
	_96917_cc.get()._field_et=(*(_96867_et));
	_96917_cc.get()._field_si=(*(_96847_s));
	if ((_96883_exist != nullptr)) {
		{
			auto expr = &(_96883_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac972232:;
			if (it != expr_end) {
				jule::I32 _97318_i = it - expr->begin();
				jule::Ptr<_1c47006e6_InsGeneric> _97325_g = *it;
				{
					(*(_96847_s)).get()._field_Generics[_97318_i].get()._field_Constraint=_97325_g.get()._field_Constraint;
				}
				_iter_next_1ac972232:;
				++it;
				_97318_i++;
				goto _iter_begin_1ac972232;
			}
			_iter_end_1ac972232:;
		};
	} else {
		_96917_cc.get()._field_uniq=true;
	};
	return _1c4aca30c_check(_96917_cc);;
}



inline jule::Bool _1c4b14a0b_fnEnvironment(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _98538_f, jule::Fn<jule::Bool(jule::Ptr<_1c4b07c74_Sema>*,jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>*)> _98549_algo) {
	jule::Ptr<_1c4b07c74_Sema> _98617_sema = (*(_98538_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1c45e20dd_SymbolTable> _98717_old = (*(_98538_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1c4b0a56d_setCurrentFile((*(_98538_f)).get()._field_Decl.get()._field_sema.ptr(), _98717_old);
	});;
	jule::Ptr<_1c45e20dd_SymbolTable> _98917_file = _1c4b0737d_findFile(&((*(_98538_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_98538_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_98917_file != nullptr)) {
		_1c4b0a56d_setCurrentFile((*(_98538_f)).get()._field_Decl.get()._field_sema.ptr(), _98917_file);
	};
	jule::I32 _99417_size = (*(_98538_f)).get()._field_Generics.len();;
	if ((((*(_98538_f)).get()._field_Decl != nullptr) && ((*(_98538_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_99417_size+=(*(_98538_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1c4701230_TypeAlias>> _99917_generics = jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>::alloc(0LL, _99417_size);;
	_1c4b0702b_appendGenericTypeAliases(&(_99917_generics), _98538_f);
	jule::Bool _100213_ok = _98549_algo(&(_98617_sema), &(_99917_generics));;
	if ((_98617_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_98617_sema.get()._field_errors);
		_98617_sema.get()._field_errors=nullptr;
	};
	return _100213_ok;;
}



inline void _1c4b14c81_checkFnParamKind(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab2b30_ParamIns>* _101241_p) {
	(*(_101241_p)).get()._field_Kind.get()._field_Variadic=(*(_101241_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_101241_p)).get()._field_Decl.get()._field_Reference && (!(_1c4b745a4_isValidForRef(&((*(_101241_p)).get()._field_Kind)))))) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_101241_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_101241_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _1c4b1508e_reloadFnInsTypes(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab39ee_FnIns> _101940_f) {
	if ((_1c4ab4d85_IsBuiltin(_101940_f.ptr()) || _1c4ab50e9_IsAnon(_101940_f.ptr()))) {
		return true;;
	};
	return _1c4b14a0b_fnEnvironment(_self_, &(_101940_f), jule::Fn<jule::Bool(jule::Ptr<_1c4b07c74_Sema>*,jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>*)>([=](jule::Ptr<_1c4b07c74_Sema>* _102343_sema, jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>* _102361_generics) mutable -> jule::Bool {
		jule::Bool _102421_ok = true;;
		{
			auto expr = &(_101940_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac97d0b7:;
			if (it != expr_end) {
				jule::Ptr<_1c4ab2b30_ParamIns> _102525_p = *it;
				{
					if (_1c4a6c810_IsSelf(_102525_p.get()._field_Decl.ptr())) {
						if (_1c4a71e63_IsRef(_102525_p.get()._field_Decl.ptr())) {
							_102525_p.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1c4b65210_Sptr>(_1c4b65210_Sptr{._field_Elem=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_101940_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_102525_p.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_101940_f.get()._field_Owner, 0)});
						};
					} else {
						_102525_p.get()._field_Kind=_1c4b11497_buildTypeWithGenerics((*(_102343_sema)), &(_102525_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_102361_generics)), _101940_f.get()._field_Refers);
						if ((_102525_p.get()._field_Kind != nullptr)) {
							_1c4b14c81_checkFnParamKind(_self_, &(_102525_p));
						} else {
							_102421_ok=false;
						};
					};
				}
				_iter_next_1ac97d0b7:;
				++it;
				goto _iter_begin_1ac97d0b7;
			}
			_iter_end_1ac97d0b7:;
		};
		if ((!(_1c4a871ed_IsVoid(_101940_f.get()._field_Decl.ptr())))) {
			_101940_f.get()._field_Result=_1c4b11497_buildTypeWithGenerics((*(_102343_sema)), &(_101940_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_102361_generics)), _101940_f.get()._field_Refers);
			_102421_ok=((_101940_f.get()._field_Result != nullptr) && _102421_ok);
		};
		return _102421_ok;;
	}));;
}



inline jule::Bool _1c4b15512_checkRefValidityForInitExpr(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Bool _105547_leftMut, jule::Ptr<_1c45e6e17_Data>* _105567_d, jule::Ptr<_2039861ab_Token>* _105582_errorToken) {
	{
		auto &_match_expr{ (*(_105567_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac983540:;
			{
				goto _match_end_1ac9829a1;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ac9835a6:;
			{
				jule::Ptr<_1c4aad466_TraitSubIdentExprModel> _106021_model = (*(_105567_d)).get()._field_Model.cast_ptr<_1c4aad466_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_1c4b05db5_isValidModelForRef(&(_106021_model.get()._field_Expr))))) {
					_1c4b0a936_pushErr(_self_.ptr(), (*(_105582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_106021_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ac983386:;
			{
				jule::Ptr<_1c4aad884_StructSubIdentExprModel> _106621_model = (*(_105567_d)).get()._field_Model.cast_ptr<_1c4aad884_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_1c4b05db5_isValidModelForRef(&(_106621_model.get()._field_Expr.get()._field_Model))))) {
					_1c4b0a936_pushErr(_self_.ptr(), (*(_105582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_106621_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1ac9833ec:;
			{
				_1c4b0a936_pushErr(_self_.ptr(), (*(_105582_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ac983463:;
			{
				jule::Ptr<_1c4aabb5c_UnaryExprModel> _107621_unary = (*(_105567_d)).get()._field_Model.cast_ptr<_1c4aabb5c_UnaryExprModel>(&__jule_any_type74);;
				if (_107621_unary.get()._field_Op.get()._field_Kind.equal("*", 1)) {
					if ((!(_1c4b05db5_isValidModelForRef(&((*(_105567_d)).get()._field_Model))))) {
						_1c4b0a936_pushErr(_self_.ptr(), (*(_105582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1ac9829a1;
				};
				goto _case_begin_1ac982a06;
			}
		}
		else {
			_case_begin_1ac982a06:;
			{
				_1c4b0a936_pushErr(_self_.ptr(), (*(_105582_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ac9829a1:;
	};
	if ((_105547_leftMut && (!((*(_105567_d)).get()._field_Mutable)))) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_105582_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1c4b15ad9_checkValidityForInitExpr(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Bool _109644_leftMut, jule::Bool _109659_leftRef, jule::Ptr<_1c4621d32_TypeKind>* _109710_leftKind, jule::Ptr<_1c45e6e17_Data>* _109736_d, jule::Ptr<_2039861ab_Token>* _109751_errorToken) {
	if (((_109644_leftMut && (!((*(_109736_d)).get()._field_Mutable))) && _1c4b5cdd9_Mutable((*(_109736_d)).get()._field_Kind.ptr()))) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_109751_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_109736_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	if (_109659_leftRef) {
		if ((!(_1c4b15512_checkRefValidityForInitExpr(_self_, _109644_leftMut, _109736_d, _109751_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1c45d263e_assignTypeChecker> _110717_atc = jule::new_ptr<_1c45d263e_assignTypeChecker>(_1c45d263e_assignTypeChecker{._field_s=_self_, ._field_d=(*(_109736_d)), ._field_errorToken=(*(_109751_errorToken))});;
	return _1c45d2d15_checkValidity(_110717_atc.ptr());;
}



inline jule::Bool _1c4b15ea2_checkTypeAliasDeclKind(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4701230_TypeAlias>* _111547_ta, jule::Trait<_1c4b77c6c_Lookup> _111567_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c45e20dd_SymbolTable> _111617_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1c4b0a56d_setCurrentFile(_self_.ptr(), _111617_old);
	});;
	if (((*(_111547_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_1c45e20dd_SymbolTable> _112121_file = _1c4b0737d_findFile(&(_self_.get()._field_files), &((*(_111547_ta)).get()._field_Token.get()._field_File));;
		if ((_112121_file != nullptr)) {
			_1c4b0a56d_setCurrentFile(_self_.ptr(), _112121_file);
		};
	};
	__jule_func_result=_1c4b1092a_checkTypeWithRefers(_self_, &((*(_111547_ta)).get()._field_Kind), _111567_l, nullptr, jule::new_ptr<_1c4b69643_referencer>(_1c4b69643_referencer{._field_ident=(*(_111547_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_111547_ta)), &__jule_any_type67), ._field_refs=(&((*(_111547_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_1c4b5ec87_Arr((*(_111547_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1c4b5ec87_Arr((*(_111547_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_111547_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1c4b162c1_checkTypeAliasDecl(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4701230_TypeAlias>* _113843_ta, jule::Trait<_1c4b77c6c_Lookup> _113863_l) {
	if (_203988950_IsIgnoreIdent((*(_113843_ta)).get()._field_Ident)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_113843_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1c4b15ea2_checkTypeAliasDeclKind(_self_, _113843_ta, _113863_l);
}



inline void _1c4b16546_checkTypeAliasDeclDup(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4701230_TypeAlias>* _114646_ta) {
	if (_203988950_IsIgnoreIdent((*(_114646_ta)).get()._field_Ident)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_114646_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1c4b0b55d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_114646_ta)))), (*(_114646_ta)).get()._field_Ident, (*(_114646_ta)).get()._field_CppLinked)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_114646_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_114646_ta)).get()._field_Ident, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c4b15ea2_checkTypeAliasDeclKind(_self_, _114646_ta, jule::Trait<_1c4b77c6c_Lookup>(_self_, 3));
}



inline jule::Bool _1c4b167aa_checkTypeAliasDecls(jule::Ptr<_1c4b07c74_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac994cc1:;
		if (it != expr_end) {
			jule::Ptr<_1c4701230_TypeAlias> _115921_ta = *it;
			{
				_1c4b16546_checkTypeAliasDeclDup(_self_, &(_115921_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac994cc1:;
			++it;
			goto _iter_begin_1ac994cc1;
		}
		_iter_end_1ac994cc1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac9be867_checkEnumItemsDup(_1c4b07c74_Sema* _self_, jule::Slice<jule::Ptr<_1c4ac4d0c_EnumItem>> _117039_items) {
	{
		auto expr = &(_117039_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9c0acc:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac4d0c_EnumItem> *_117116_item = it;
			{
				if ((*(_117116_item)).get()._field_Ident.empty()) {
					goto _iter_next_1ac9c0acc;
				} else if (_203988950_IsIgnoreIdent((*(_117116_item)).get()._field_Ident)) {
					_1c4b0a936_pushErr(_self_, (*(_117116_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_117039_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac9c1858:;
						if (it != expr_end) {
							jule::Ptr<_1c4ac4d0c_EnumItem> *_117724_citem = it;
							{
								if (((*(_117116_item)) == (*(_117724_citem)))) {
									goto _iter_end_1ac9c1858;
								} else if (((*(_117116_item)).get()._field_Ident == (*(_117724_citem)).get()._field_Ident)) {
									_1c4b0a936_pushErr(_self_, (*(_117116_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_117116_item)).get()._field_Ident, &__jule_any_type5)}));
									_1c4b0ac55_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ac9c1858;
								};
							}
							_iter_next_1ac9c1858:;
							++it;
							goto _iter_begin_1ac9c1858;
						}
						_iter_end_1ac9c1858:;
					};
				};
			}
			_iter_next_1ac9c0acc:;
			++it;
			goto _iter_begin_1ac9c0acc;
		}
		_iter_end_1ac9c0acc:;
	};
}

inline void _1ac9c9a09_checkEnumItemsDup(_1c4b07c74_Sema* _self_, jule::Slice<jule::Ptr<_1c4ac6836_TypeEnumItem>> _117039_items) {
	{
		auto expr = &(_117039_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9cac2a:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac6836_TypeEnumItem> *_117116_item = it;
			{
				if ((*(_117116_item)).get()._field_Ident.empty()) {
					goto _iter_next_1ac9cac2a;
				} else if (_203988950_IsIgnoreIdent((*(_117116_item)).get()._field_Ident)) {
					_1c4b0a936_pushErr(_self_, (*(_117116_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_117039_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac9cb9a6:;
						if (it != expr_end) {
							jule::Ptr<_1c4ac6836_TypeEnumItem> *_117724_citem = it;
							{
								if (((*(_117116_item)) == (*(_117724_citem)))) {
									goto _iter_end_1ac9cb9a6;
								} else if (((*(_117116_item)).get()._field_Ident == (*(_117724_citem)).get()._field_Ident)) {
									_1c4b0a936_pushErr(_self_, (*(_117116_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_117116_item)).get()._field_Ident, &__jule_any_type5)}));
									_1c4b0ac55_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ac9cb9a6;
								};
							}
							_iter_next_1ac9cb9a6:;
							++it;
							goto _iter_begin_1ac9cb9a6;
						}
						_iter_end_1ac9cb9a6:;
					};
				};
			}
			_iter_next_1ac9cac2a:;
			++it;
			goto _iter_begin_1ac9cac2a;
		}
		_iter_end_1ac9cac2a:;
	};
}



inline void _1c4b16ca5_checkEnumItemsStr(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ac5802_Enum>* _119042_e) {
	jule::Ptr<_1c45e8985_Eval> _119117_eval = _1c4b126c9_eval(_self_, jule::Trait<_1c4b77c6c_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_119042_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac99680b:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac4d0c_EnumItem> _119221_item = *it;
			{
				if (_1c4ac51e7_AutoExpr(_119221_item.ptr())) {
					_119221_item.get()._field_Value=jule::new_ptr<_1c45e7e90_Value>(_1c45e7e90_Value{._field_Data=jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Constant=static__1c25ed30a_NewStr(_119221_item.get()._field_Ident)})});
					_119221_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_119221_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
				} else {
					jule::Ptr<_1c45e6e17_Data> _120125_d = _1c46143a7_evalExpr(_119117_eval, _119221_item.get()._field_Value.get()._field_Expr);;
					if ((_120125_d == nullptr)) {
						goto _iter_next_1ac99680b;
					};
					if ((!(_1c45e77ca_IsConst(_120125_d.ptr())))) {
						_1c4b0a936_pushErr(_self_.ptr(), _119221_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1c4b12bc4_checkAssignType(_self_, false, &((*(_119042_e)).get()._field_Kind.get()._field_Kind), &(_120125_d), _119221_item.get()._field_Token);
					_119221_item.get()._field_Value.get()._field_Data=_120125_d;
				};
			}
			_iter_next_1ac99680b:;
			++it;
			goto _iter_begin_1ac99680b;
		}
		_iter_end_1ac99680b:;
	};
}



inline void _1ac99ed86_checkEnumItemInt(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c45e8985_Eval>* _121646_eval, jule::Ptr<_1c4ac5802_Enum>* _121664_e, jule::Ptr<_1c4b6197b_Prim>* _121675_prim, jule::Ptr<_1c4ac4d0c_EnumItem>* _121693_item, jule::U64* _1216115_n) {
	if (_1c4ac51e7_AutoExpr((*(_121693_item)).ptr())) {
		(*(_121693_item)).get()._field_Value=jule::new_ptr<_1c45e7e90_Value>(_1c45e7e90_Value{._field_Data=jule::new_ptr<_1c45e6e17_Data>()});
		{
			
{
				_case_begin_1ac9a295a:;
				{
					(*(_121693_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1c25e7a0d_NewU64((*(_1216115_n)));
				}
			}
			_match_end_1ac9a230b:;
		};
		(*(_121693_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_121693_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
	} else {
		jule::Ptr<_1c45e6e17_Data> _123121_d = _1c46143a7_evalExpr((*(_121646_eval)), (*(_121693_item)).get()._field_Value.get()._field_Expr);;
		if ((_123121_d == nullptr)) {
			return;;
		};
		if ((!(_1c45e77ca_IsConst(_123121_d.ptr())))) {
			_1c4b0a936_pushErr(_self_.ptr(), (*(_121693_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1c4b12bc4_checkAssignType(_self_, false, &((*(_121664_e)).get()._field_Kind.get()._field_Kind), &(_123121_d), (*(_121693_item)).get()._field_Token);
		(*(_121693_item)).get()._field_Value.get()._field_Data=_123121_d;
		{
			
{
				_case_begin_1ac9a5d15:;
				{
					(*(_1216115_n))=static_cast<jule::U64>(_1c263c943_ReadU64((*(_121693_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ac9a5aa1:;
		};
	};
}

inline void _1ac9b2b35_checkEnumItemInt(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c45e8985_Eval>* _121646_eval, jule::Ptr<_1c4ac5802_Enum>* _121664_e, jule::Ptr<_1c4b6197b_Prim>* _121675_prim, jule::Ptr<_1c4ac4d0c_EnumItem>* _121693_item, jule::I64* _1216115_n) {
	if (_1c4ac51e7_AutoExpr((*(_121693_item)).ptr())) {
		(*(_121693_item)).get()._field_Value=jule::new_ptr<_1c45e7e90_Value>(_1c45e7e90_Value{._field_Data=jule::new_ptr<_1c45e6e17_Data>()});
		{
			
{
				_case_begin_1ac9b563d:;
				{
					(*(_121693_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1c2615e5a_NewI64((*(_1216115_n)));
				}
			}
			_match_end_1ac9b5066:;
		};
		(*(_121693_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_121693_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
	} else {
		jule::Ptr<_1c45e6e17_Data> _123121_d = _1c46143a7_evalExpr((*(_121646_eval)), (*(_121693_item)).get()._field_Value.get()._field_Expr);;
		if ((_123121_d == nullptr)) {
			return;;
		};
		if ((!(_1c45e77ca_IsConst(_123121_d.ptr())))) {
			_1c4b0a936_pushErr(_self_.ptr(), (*(_121693_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1c4b12bc4_checkAssignType(_self_, false, &((*(_121664_e)).get()._field_Kind.get()._field_Kind), &(_123121_d), (*(_121693_item)).get()._field_Token);
		(*(_121693_item)).get()._field_Value.get()._field_Data=_123121_d;
		{
			
{
				_case_begin_1ac9b8bb3:;
				{
					(*(_1216115_n))=static_cast<jule::I64>(_1c263c811_ReadI64((*(_121693_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ac9b89c6:;
		};
	};
}



inline void _1ac99b448_checkEnumItemsInt1(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4b6197b_Prim>* _125144_prim, jule::Ptr<_1c4ac5802_Enum>* _125162_e) {
	jule::U64 _125217_max = 0LLU;;
	{
		
{
			_case_begin_1ac99d1e7:;
			{
				_125217_max=static_cast<jule::U64>(_1c3175090_MaxU(_1c4b61cde_Str((*(_125144_prim)).ptr())));
			}
		}
		_match_end_1ac99ce61:;
	};
	jule::Ptr<_1c45e8985_Eval> _126217_eval = _1c4b126c9_eval(_self_, jule::Trait<_1c4b77c6c_Lookup>(_self_, 3));;
	jule::U64 _126317_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1c4ac4d0c_EnumItem> _126417_first = (*(_125162_e)).get()._field_Items[0LL];;
	_1ac99ed86_checkEnumItemInt(_self_, &(_126217_eval), _125162_e, _125144_prim, &(_126417_first), &(_126317_n));
	if ((_126417_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ac9a65a7:;
				{
					_126317_n=static_cast<jule::U64>(_1c3178538_AsU64(_126417_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ac9a01b6:;
		};
	};
	{
		auto expr = (*(_125162_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac9a5ed0:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac4d0c_EnumItem> _127621_item = *it;
			{
				if (((_1c4ac51e7_AutoExpr(_127621_item.ptr()) && (_126317_n > 0LLU)) && ((_125217_max - _126317_n) <= 0LLU))) {
					_1c4b0a936_pushErr(_self_.ptr(), _127621_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ac9a5ed0;
				};
				(_126317_n)++;
				_1ac99ed86_checkEnumItemInt(_self_, &(_126217_eval), _125162_e, _125144_prim, &(_127621_item), &(_126317_n));
			}
			_iter_next_1ac9a5ed0:;
			++it;
			goto _iter_begin_1ac9a5ed0;
		}
		_iter_end_1ac9a5ed0:;
	};
}

inline void _1ac9a71ac_checkEnumItemsInt1(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4b6197b_Prim>* _125144_prim, jule::Ptr<_1c4ac5802_Enum>* _125162_e) {
	jule::I64 _125217_max = 0LL;;
	{
		
{
			_case_begin_1ac9aadb4:;
			{
				_125217_max=static_cast<jule::I64>(_1c3174e5d_MaxI(_1c4b61cde_Str((*(_125144_prim)).ptr())));
			}
		}
		_match_end_1ac9aabd8:;
	};
	jule::Ptr<_1c45e8985_Eval> _126217_eval = _1c4b126c9_eval(_self_, jule::Trait<_1c4b77c6c_Lookup>(_self_, 3));;
	jule::I64 _126317_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1c4ac4d0c_EnumItem> _126417_first = (*(_125162_e)).get()._field_Items[0LL];;
	_1ac9b2b35_checkEnumItemInt(_self_, &(_126217_eval), _125162_e, _125144_prim, &(_126417_first), &(_126317_n));
	if ((_126417_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ac9b4d02:;
				{
					_126317_n=static_cast<jule::I64>(_1c3178406_AsI64(_126417_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ac9b2e65:;
		};
	};
	{
		auto expr = (*(_125162_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac9b9ec2:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac4d0c_EnumItem> _127621_item = *it;
			{
				if (((_1c4ac51e7_AutoExpr(_127621_item.ptr()) && (_126317_n > 0LL)) && ((_125217_max - _126317_n) <= 0LL))) {
					_1c4b0a936_pushErr(_self_.ptr(), _127621_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ac9b9ec2;
				};
				(_126317_n)++;
				_1ac9b2b35_checkEnumItemInt(_self_, &(_126217_eval), _125162_e, _125144_prim, &(_127621_item), &(_126317_n));
			}
			_iter_next_1ac9b9ec2:;
			++it;
			goto _iter_begin_1ac9b9ec2;
		}
		_iter_end_1ac9b9ec2:;
	};
}



inline void _1c4b17855_checkEnumItemsInt(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ac5802_Enum>* _128642_e) {
	jule::Ptr<_1c4b6197b_Prim> _128713_prim = _1c4b5e45c_Prim((*(_128642_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_1c3177559_IsSigInt(_128713_prim.get()._field_Kind)) {
			_case_begin_1ac9a8a0a:;
			{
				_1ac9a71ac_checkEnumItemsInt1(_self_, &(_128713_prim), _128642_e);
			}
		}
		else {
			_case_begin_1ac99abea:;
			{
				_1ac99b448_checkEnumItemsInt1(_self_, &(_128713_prim), _128642_e);
			}
		}
		_match_end_1ac99ab95:;
	};
}



inline void _1c4b17aca_checkEnumDecl(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ac5802_Enum>* _129638_e) {
	if (_203988950_IsIgnoreIdent((*(_129638_e)).get()._field_Ident)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_129638_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c4b0b55d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_129638_e)))), (*(_129638_e)).get()._field_Ident, false)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_129638_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_129638_e)).get()._field_Ident, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_129638_e)).get()._field_Items.len() == 0LL)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_129638_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_129638_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1ac9be867_checkEnumItemsDup(_self_.ptr(), (*(_129638_e)).get()._field_Items);
	if (((*(_129638_e)).get()._field_Kind != nullptr)) {
		if ((!(_1c4b11046_checkType(_self_, &((*(_129638_e)).get()._field_Kind), jule::Trait<_1c4b77c6c_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_129638_e)).get()._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1c4b6197b_Prim> _132417_t = _1c4b5e45c_Prim((*(_129638_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_132417_t == nullptr)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_129638_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1c4b64bb0_IsStr(_132417_t.ptr())) {
			_case_begin_1ac9c598e:;
			{
				_1c4b16ca5_checkEnumItemsStr(_self_, _129638_e);
			}
		}
		else if (_1c31777bd_IsInt(_1c4b61cde_Str(_132417_t.ptr()))) {
			_case_begin_1ac9c5692:;
			{
				_1c4b17855_checkEnumItemsInt(_self_, _129638_e);
			}
		}
		else {
			_case_begin_1ac9c4bbe:;
			{
				_1c4b0a936_pushErr(_self_.ptr(), (*(_129638_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac9c4b69:;
	};
}



inline void _1c4b17d50_checkTypeEnumDecl(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ac6dec_TypeEnum>* _134142_e) {
	if (_203988950_IsIgnoreIdent((*(_134142_e)).get()._field_Ident)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_134142_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c4b0b55d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_134142_e)))), (*(_134142_e)).get()._field_Ident, false)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_134142_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_134142_e)).get()._field_Ident, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_134142_e)).get()._field_Items.len() == 0LL)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_134142_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_134142_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1ac9c9a09_checkEnumItemsDup(_self_.ptr(), (*(_134142_e)).get()._field_Items);
	{
		auto expr = &((*(_134142_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9c7177:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac6836_TypeEnumItem> _135521_item = *it;
			{
				if ((_135521_item.get()._field_Kind == nullptr)) {
					_1c4b0a936_pushErr(_self_.ptr(), _135521_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1ac9c7177;
				};
				jule::Bool _136017_ok = _1c4b11046_checkType(_self_, &(_135521_item.get()._field_Kind), jule::Trait<_1c4b77c6c_Lookup>(_self_, 3));;
				if ((!(_136017_ok))) {
					goto _iter_next_1ac9c7177;
				};
				jule::Ptr<_1c4b6197b_Prim> _136417_p = _1c4b5e45c_Prim(_135521_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_136417_p != nullptr) && _1c4b64e24_IsAny(_136417_p.ptr()))) {
					_1c4b0a936_pushErr(_self_.ptr(), _135521_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ac9c7177:;
			++it;
			goto _iter_begin_1ac9c7177;
		}
		_iter_end_1ac9c7177:;
	};
	if (((*(_134142_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1c4ac6836_TypeEnumItem> _137021_item = (*(_134142_e)).get()._field_Items[0LL];;
		_1c4621d32_TypeKind _137117_tk = _1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>((*(_134142_e)), 4)};;
		if (((_137021_item.get()._field_Kind.get()._field_Kind != nullptr) && _1c4622580_Equal(_137021_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1c4621d32_TypeKind>)((&(_137117_tk))))))) {
			_1c4b0a936_pushErr(_self_.ptr(), _137021_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1c4ac722c_Str((*(_134142_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _1c4b180b4_checkEnumDecls(jule::Ptr<_1c4b07c74_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d3ae0:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac5802_Enum> _138221_e = *it;
			{
				_1c4b17aca_checkEnumDecl(_self_, &(_138221_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac9d3ae0:;
			++it;
			goto _iter_begin_1ac9d3ae0;
		}
		_iter_end_1ac9d3ae0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c4b18328_checkTypeEnumDecls(jule::Ptr<_1c4b07c74_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d500e:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac6dec_TypeEnum> _139421_e = *it;
			{
				_1c4b17d50_checkTypeEnumDecl(_self_, &(_139421_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac9d500e:;
			++it;
			goto _iter_begin_1ac9d500e;
		}
		_iter_end_1ac9d500e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c4b18636_checkDeclGenerics(_1c4b07c74_Sema* _self_, jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>>* _140437_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _140437_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9d65e8:;
		if (it != expr_end) {
			jule::I32 _140613_i = it - expr->begin();
			jule::Ptr<_1c4a9b630_GenericDecl> *_140616_g = it;
			{
				if (_203988950_IsIgnoreIdent((*(_140616_g)).get()._field_Ident)) {
					_1c4b0a936_pushErr(_self_, (*(_140616_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ac9d65e8;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _140437_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9d7d25:;
					if (it != expr_end) {
						jule::I32 _141517_j = it - expr->begin();
						jule::Ptr<_1c4a9b630_GenericDecl> *_141520_ct = it;
						{
							{
								
								if ((_141517_j >= _140613_i)) {
									_case_begin_1ac9d8c49:;
									{
										goto _iter_end_1ac9d7d25;
									}
								}
								else if (((*(_140616_g)).get()._field_Ident == (*(_141520_ct)).get()._field_Ident)) {
									_case_begin_1ac9d8cc1:;
									{
										_1c4b0a936_pushErr(_self_, (*(_140616_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_140616_g)).get()._field_Ident, &__jule_any_type5)}));
										_1c4b0ac55_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1ac9d7d25;
									}
								}
								_match_end_1ac9d8b39:;
							};
						}
						_iter_next_1ac9d7d25:;
						++it;
						_141517_j++;
						goto _iter_begin_1ac9d7d25;
					}
					_iter_end_1ac9d7d25:;
				};
			}
			_iter_next_1ac9d65e8:;
			++it;
			_140613_i++;
			goto _iter_begin_1ac9d65e8;
		}
		_iter_end_1ac9d65e8:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4b18944_checkFnDeclParamsDup(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4ab22e4_Fn>* _143140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_143140_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9db059:;
		if (it != expr_end) {
			jule::I32 _143413_i = it - expr->begin();
			jule::Ptr<_1c4ab2107_Param> *_143416_p = it;
			{
				{
					auto expr = &((*(_143140_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9dbbd6:;
					if (it != expr_end) {
						jule::Ptr<_1c4a9b630_GenericDecl> *_143620_g = it;
						{
							if (((*(_143416_p)).get()._field_Ident == (*(_143620_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_1c4b0a936_pushErr(_self_, (*(_143416_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_143416_p)).get()._field_Ident, &__jule_any_type5)}));
								_1c4b0ac55_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1ac9db059;
							};
						}
						_iter_next_1ac9dbbd6:;
						++it;
						goto _iter_begin_1ac9dbbd6;
					}
					_iter_end_1ac9dbbd6:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_143140_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9dc6cb:;
					if (it != expr_end) {
						jule::I32 _144617_j = it - expr->begin();
						jule::Ptr<_1c4ab2107_Param> *_144620_jp = it;
						{
							{
								
								if ((_144617_j >= _143413_i)) {
									_case_begin_1ac9de304:;
									{
										goto _iter_end_1ac9dc6cb;
									}
								}
								else if (_203988950_IsIgnoreIdent((*(_143416_p)).get()._field_Ident) || _203988950_IsIgnoreIdent((*(_144620_jp)).get()._field_Ident) || _203988be7_IsAnonIdent((*(_143416_p)).get()._field_Ident) || _203988be7_IsAnonIdent((*(_144620_jp)).get()._field_Ident)) {
									_case_begin_1ac9de37b:;
									{
										goto _iter_end_1ac9dc6cb;
									}
								}
								else if (((*(_143416_p)).get()._field_Ident == (*(_144620_jp)).get()._field_Ident)) {
									_case_begin_1ac9de403:;
									{
										__jule_func_result=false;
										_1c4b0a936_pushErr(_self_, (*(_143416_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_143416_p)).get()._field_Ident, &__jule_any_type5)}));
										_1c4b0ac55_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1ac9db059;
									}
								}
								_match_end_1ac9de1d3:;
							};
						}
						_iter_next_1ac9dc6cb:;
						++it;
						_144617_j++;
						goto _iter_begin_1ac9dc6cb;
					}
					_iter_end_1ac9dc6cb:;
				};
			}
			_iter_next_1ac9db059:;
			++it;
			_143413_i++;
			goto _iter_begin_1ac9db059;
		}
		_iter_end_1ac9db059:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4b18c52_checkFnDeclResultDup(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4ab22e4_Fn>* _146840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1c4a871ed_IsVoid((*(_146840_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_146840_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9e235c:;
		if (it != expr_end) {
			jule::I32 _147513_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> *_147516_v = it;
			{
				if ((_203988950_IsIgnoreIdent((*(_147516_v)).get()._field_Kind) || _203988be7_IsAnonIdent((*(_147516_v)).get()._field_Kind))) {
					goto _iter_next_1ac9e235c;
				};
				{
					auto expr = &((*(_146840_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9e389c:;
					if (it != expr_end) {
						jule::Ptr<_1c4a9b630_GenericDecl> *_148020_g = it;
						{
							if (((*(_147516_v)).get()._field_Kind == (*(_148020_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1ac9e389c:;
						++it;
						goto _iter_begin_1ac9e389c;
					}
					_iter_end_1ac9e389c:;
				};
				{
					auto expr = &((*(_146840_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9e4aac:;
					if (it != expr_end) {
						jule::Ptr<_1c4ab2107_Param> *_148620_p = it;
						{
							if (((*(_147516_v)).get()._field_Kind == (*(_148620_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1ac9e4aac:;
						++it;
						goto _iter_begin_1ac9e4aac;
					}
					_iter_end_1ac9e4aac:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_146840_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9e5cbc:;
					if (it != expr_end) {
						jule::I32 _149417_j = it - expr->begin();
						jule::Ptr<_2039861ab_Token> *_149420_jv = it;
						{
							{
								
								if ((_149417_j >= _147513_i)) {
									_case_begin_1ac9e69c1:;
									{
										goto _iter_end_1ac9e5cbc;
									}
								}
								else if (((*(_149420_jv)).get()._field_Kind == (*(_147516_v)).get()._field_Kind)) {
									_case_begin_1ac9e6a48:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1ac9e68b1:;
							};
						}
						_iter_next_1ac9e5cbc:;
						++it;
						_149417_j++;
						goto _iter_begin_1ac9e5cbc;
					}
					_iter_end_1ac9e5cbc:;
				};
				goto _iter_next_1ac9e235c;
				_julec_label_exist:;
				_1c4b0a936_pushErr(_self_, (*(_147516_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_147516_v)).get()._field_Kind, &__jule_any_type5)}));
				_1c4b0ac55_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1ac9e235c:;
			++it;
			_147513_i++;
			goto _iter_begin_1ac9e235c;
		}
		_iter_end_1ac9e235c:;
	};
	return __jule_func_result;;
}



inline void _1c4b18ec7_checkFnDeclPrototype(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab22e4_Fn>* _151545_f) {
	if (((*(_151545_f)).get()._field_Exceptional && (*(_151545_f)).get()._field_CppLinked)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_151545_f)).get()._field_Token, jule::Str("cpp-linked defines cannot be exceptional", 40), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_151545_f)).get()._field_Exceptional) {
		if (_1c4a653b8_IsEntryPoint((*(_151545_f)).ptr())) {
			_1c4b0a936_pushErr(_self_.ptr(), (*(_151545_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1c4a5e4d3_IsInit((*(_151545_f)).ptr())) {
			_1c4b0a936_pushErr(_self_.ptr(), (*(_151545_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1c4b18636_checkDeclGenerics(_self_.ptr(), &((*(_151545_f)).get()._field_Generics))))) {
			_case_begin_1ac9e9b28:;
		}
		else if ((!(_1c4b18944_checkFnDeclParamsDup(_self_.ptr(), _151545_f)))) {
			_case_begin_1ac9e9b8e:;
		}
		else if ((!(_1c4b18c52_checkFnDeclResultDup(_self_.ptr(), _151545_f)))) {
			_case_begin_1ac9eaec0:;
		}
		_match_end_1ac9e9a18:;
	};
}



inline jule::Bool _1c4b19428_catchTraitInheritCycle(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ac306e_Trait> _153642_t1, jule::Ptr<_1c4ac306e_Trait> _153658_t2, jule::Str* _153675_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &(_153658_t2.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9ecac6:;
		if (it != expr_end) {
			jule::Ptr<_1c4b610b8_TypeSymbol> _153821_i = *it;
			{
				if ((_153821_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1ac9ecac6;
				};
				jule::Ptr<_1c4ac306e_Trait> _154221_t3 = _1c4b60738_Trait(_153821_i.get()._field_Kind.ptr());;
				if ((_153642_t1 == _154221_t3)) {
					_1c4b23476_pushCycleError(_self_.ptr(), &(_153658_t2.get()._field_Ident), &(_154221_t3.get()._field_Ident), _153675_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1c4b19428_catchTraitInheritCycle(_self_, _153642_t1, _154221_t3, _153675_message)))) {
					_1c4b23476_pushCycleError(_self_.ptr(), &(_153658_t2.get()._field_Ident), &(_154221_t3.get()._field_Ident), _153675_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac9ecac6:;
			++it;
			goto _iter_begin_1ac9ecac6;
		}
		_iter_end_1ac9ecac6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4b19758__checkTraitDeclInherits(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ac306e_Trait>* _155548_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_155548_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca00964:;
		if (it != expr_end) {
			jule::I32 _155714_i = it - expr->begin();
			jule::Ptr<_1c4b610b8_TypeSymbol> _155721_it = *it;
			{
				if ((!(_1c4b11046_checkType(_self_, &(_155721_it), jule::Trait<_1c4b77c6c_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1aca00964;
				};
				jule::Ptr<_1c4ac306e_Trait> _156221_t2 = _1c4b60738_Trait(_155721_it.get()._field_Kind.ptr());;
				if ((_156221_t2 == nullptr)) {
					_1c4b0a936_pushErr(_self_.ptr(), _155721_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*(_155548_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_1c4622272_Str(_155721_it.get()._field_Kind.ptr()), &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1aca00964;
				};
				{
					auto expr = &((*(_155548_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aca024d2:;
					if (it != expr_end) {
						jule::I32 _156817_j = it - expr->begin();
						jule::Ptr<_1c4b610b8_TypeSymbol> _156820_it2 = *it;
						{
							if ((_156817_j >= _155714_i)) {
								goto _iter_end_1aca024d2;
							};
							if (((_156820_it2.get()._field_Kind != nullptr) && _1c4622580_Equal(_155721_it.get()._field_Kind, _156820_it2.get()._field_Kind))) {
								_1c4b0a936_pushErr(_self_.ptr(), _155721_it.get()._field_Decl.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_156221_t2.get()._field_Ident, &__jule_any_type5)}));
								__jule_func_result=false;
								goto _iter_end_1aca024d2;
							};
						}
						_iter_next_1aca024d2:;
						++it;
						_156817_j++;
						goto _iter_begin_1aca024d2;
					}
					_iter_end_1aca024d2:;
				};
				if (((*(_155548_t)) == _156221_t2)) {
					_1c4b0a936_pushErr(_self_.ptr(), _155721_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_155548_t)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				} else {
					jule::Str _158225_message = jule::Str();;
					__jule_func_result=(__jule_func_result && _1c4b19428_catchTraitInheritCycle(_self_, (*(_155548_t)), _156221_t2, &(_158225_message)));
					if ((_158225_message.len() > 0LL)) {
						jule::Str _158529_errMsg = _158225_message;;
						_158225_message=jule::Str();
						_1c4b23476_pushCycleError(_self_.ptr(), &((*(_155548_t)).get()._field_Ident), &(_156221_t2.get()._field_Ident), &(_158225_message));
						_158529_errMsg+=_158225_message;
						_1c4b0a936_pushErr(_self_.ptr(), _155721_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_158529_errMsg, &__jule_any_type5)}));
					};
				};
			}
			_iter_next_1aca00964:;
			++it;
			_155714_i++;
			goto _iter_begin_1aca00964;
		}
		_iter_end_1aca00964:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1c4b199de_checkTraitDeclInherits(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ac306e_Trait>* _159647_t) {
	{
		auto expr = &((*(_159647_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca013b0:;
		if (it != expr_end) {
			jule::I32 _159714_i = it - expr->begin();
			jule::Ptr<_1c4b610b8_TypeSymbol> _159721_it = *it;
			{
				jule::Ptr<_1c4ac306e_Trait> _159821_t1 = _1c4b60738_Trait(_159721_it.get()._field_Kind.ptr());;
				{
					auto expr = &((*(_159647_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aca098a2:;
					if (it != expr_end) {
						jule::I32 _159918_j = it - expr->begin();
						jule::Ptr<_1c4b610b8_TypeSymbol> _159925_it2 = *it;
						{
							if ((_159918_j == _159714_i)) {
								goto _iter_next_1aca098a2;
							};
							jule::Ptr<_1c4ac306e_Trait> _160325_t2 = _1c4b60738_Trait(_159925_it2.get()._field_Kind.ptr());;
							{
								auto expr = &(_159821_t1.get()._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aca0ad59:;
								if (it != expr_end) {
									jule::Ptr<_1c4ab22e4_Fn> _160429_t1m = *it;
									{
										jule::Ptr<_1c4ab22e4_Fn> _160529_t2m = _1c4ac3e1b_FindMethod(_160325_t2.ptr(), _160429_t1m.get()._field_Ident);;
										if ((_160529_t2m == nullptr)) {
											goto _iter_next_1aca0ad59;
										};
										jule::Ptr<_1c4ab39ee_FnIns> _160925_t1f = _1c4b13ca2_getTraitCheckFnKind(_self_, &(_160429_t1m));;
										jule::Ptr<_1c4ab39ee_FnIns> _161025_t2f = _1c4b13ca2_getTraitCheckFnKind(_self_, &(_160529_t2m));;
										if ((!(_1c4ab48ac_equalTrait(_160925_t1f, &(_161025_t2f))))) {
											_1c4b0a936_pushErr(_self_.ptr(), _159721_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*(_159647_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_160325_t2.get()._field_Ident, &__jule_any_type5),jule::Any(_1c4ab5715_GetKindStr(_160925_t1f.ptr(), true), &__jule_any_type5),jule::Any(_1c4ab5715_GetKindStr(_161025_t2f.ptr(), true), &__jule_any_type5)}));
											return;;
										};
									}
									_iter_next_1aca0ad59:;
									++it;
									goto _iter_begin_1aca0ad59;
								}
								_iter_end_1aca0ad59:;
							};
						}
						_iter_next_1aca098a2:;
						++it;
						_159918_j++;
						goto _iter_begin_1aca098a2;
					}
					_iter_end_1aca098a2:;
				};
			}
			_iter_next_1aca013b0:;
			++it;
			_159714_i++;
			goto _iter_begin_1aca013b0;
		}
		_iter_end_1aca013b0:;
	};
}



inline void _1c4b19c64_checkTraitDeclMethod(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab22e4_Fn>* _162145_f) {
	if (_203988950_IsIgnoreIdent((*(_162145_f)).get()._field_Ident)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_162145_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	(*(_162145_f)).get()._field_sema=_self_;
	_1c4b18ec7_checkFnDeclPrototype(_self_, _162145_f);
	jule::Ptr<_1c4ab39ee_FnIns> _162717_ins = _1c4ab24d1_instance((*(_162145_f)));;
	_1c4b1508e_reloadFnInsTypes(_self_, _162717_ins);
	_162717_ins.get()._field_reloaded=true;
	_1c4ab2778_appendInstance((*(_162145_f)).ptr(), &(_162717_ins));
}



inline void _1c4b19ed9_checkTraitDeclMethods(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ac306e_Trait>* _163346_t) {
	{
		auto expr = &((*(_163346_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca10ca4:;
		if (it != expr_end) {
			jule::I32 _163414_i = it - expr->begin();
			jule::Ptr<_1c4ab22e4_Fn> _163421_f = *it;
			{
				_1c4b19c64_checkTraitDeclMethod(_self_, &(_163421_f));
				(*(_163346_t)).get()._field_Mutable=((*(_163346_t)).get()._field_Mutable || _163421_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1c4ac4537_findMethodInherit((*(_163346_t)).ptr(), &(_163421_f.get()._field_Ident)) != nullptr)) {
					_1c4b0a936_pushErr(_self_.ptr(), _163421_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_163421_f.get()._field_Ident, &__jule_any_type5)}));
					_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1aca10ca4;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_163346_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aca13c63:;
					if (it != expr_end) {
						jule::I32 _165117_j = it - expr->begin();
						jule::Ptr<_1c4ab22e4_Fn> _165120_jf = *it;
						{
							{
								
								if ((_165117_j >= _163414_i)) {
									_case_begin_1aca14b54:;
									{
										goto _iter_end_1aca13c63;
									}
								}
								else if ((_163421_f.get()._field_Ident == _165120_jf.get()._field_Ident)) {
									_case_begin_1aca14bcb:;
									{
										_1c4b0a936_pushErr(_self_.ptr(), _163421_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_163421_f.get()._field_Ident, &__jule_any_type5)}));
										_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1aca13c63;
									}
								}
								_match_end_1aca14a44:;
							};
						}
						_iter_next_1aca13c63:;
						++it;
						_165117_j++;
						goto _iter_begin_1aca13c63;
					}
					_iter_end_1aca13c63:;
				};
			}
			_iter_next_1aca10ca4:;
			++it;
			_163414_i++;
			goto _iter_begin_1aca10ca4;
		}
		_iter_end_1aca10ca4:;
	};
}



inline void _1c4b1a25e_checkTraitDecl(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ac306e_Trait>* _167039_t) {
	if (_203988950_IsIgnoreIdent((*(_167039_t)).get()._field_Ident)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_167039_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c4b0b55d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_167039_t)))), (*(_167039_t)).get()._field_Ident, false)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_167039_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_167039_t)).get()._field_Ident, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c4b199de_checkTraitDeclInherits(_self_, _167039_t);
	_1c4b19ed9_checkTraitDeclMethods(_self_, _167039_t);
}



inline jule::Bool _1c4b1a4c3_checkTraitDecls(jule::Ptr<_1c4b07c74_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca18d34:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac306e_Trait> _168421_t = *it;
			{
				_1c4b1a25e_checkTraitDecl(_self_, &(_168421_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aca18d34:;
			++it;
			goto _iter_begin_1aca18d34;
		}
		_iter_end_1aca18d34:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c4b1a87a_checkTraitImplMethods(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4ac306e_Trait>* _169445_base, jule::Ptr<_1c4acb363_Impl>* _169460_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_169460_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca1a7d6:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> *_169616_f = it;
			{
				if ((_1c4ac3e1b_FindMethod((*(_169445_base)).ptr(), (*(_169616_f)).get()._field_Ident) == nullptr)) {
					_1c4b0a936_pushErr(_self_, (*(_169616_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_169445_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_169616_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1aca1a7d6:;
			++it;
			goto _iter_begin_1aca1a7d6;
		}
		_iter_end_1aca1a7d6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4b1ac32_implToStruct(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4a86ebc_Struct>* _170537_dest, jule::Ptr<_1c4acb363_Impl>* _170557_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_170557_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca1ca2a:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _170921_f = *it;
			{
				if (((_1c4a6ec52_FindMethod((*(_170537_dest)).ptr(), _170921_f.get()._field_Ident, _170921_f.get()._field_Statically) != nullptr) || (_1c4a7157d_FindField((*(_170537_dest)).ptr(), _170921_f.get()._field_Ident) != nullptr))) {
					_1c4b0a936_pushErr(_self_.ptr(), _170921_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_170537_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_170921_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1aca1ca2a;
				};
				if ((((*(_170537_dest)).get()._field_Generics.len() > 0LL) && (_170921_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_170921_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aca20038:;
						if (it != expr_end) {
							jule::Ptr<_1c4a9b630_GenericDecl> _171724_fg = *it;
							{
								{
									auto expr = &((*(_170537_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1aca2081e:;
									if (it != expr_end) {
										jule::Ptr<_1c4a9b630_GenericDecl> _171828_dg = *it;
										{
											if ((_171724_fg.get()._field_Ident == _171828_dg.get()._field_Ident)) {
												_1c4b0a936_pushErr(_self_.ptr(), _171724_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1aca2081e:;
										++it;
										goto _iter_begin_1aca2081e;
									}
									_iter_end_1aca2081e:;
								};
							}
							_iter_next_1aca20038:;
							++it;
							goto _iter_begin_1aca20038;
						}
						_iter_end_1aca20038:;
					};
				};
				_1c4b0b87c_checkDirectives(_self_, &(_170921_f.get()._field_Directives), jule::Any(_170921_f, &__jule_any_type65));
				_170921_f.get()._field_sema=_self_;
				_170921_f.get()._field_Owner=(*(_170537_dest));
				(*(_170537_dest)).get()._field_Methods = jule::alloc_for_append((*(_170537_dest)).get()._field_Methods,1);(*(_170537_dest)).get()._field_Methods.__push(_170921_f);;
			}
			_iter_next_1aca1ca2a:;
			++it;
			goto _iter_begin_1aca1ca2a;
		}
		_iter_end_1aca1ca2a:;
	};
	{
		auto expr = &((*(_170557_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca23091:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> _173421_v = *it;
			{
				;
				if (((_1c4a6ec52_FindMethod((*(_170537_dest)).ptr(), _173421_v.get()._field_Ident, true) != nullptr) || (_1c4a6e1a2_FindStatic((*(_170537_dest)).ptr(), _173421_v.get()._field_Ident) != nullptr))) {
					_1c4b0a936_pushErr(_self_.ptr(), _173421_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_170537_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_173421_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1aca23091;
				};
				(*(_170537_dest)).get()._field_Statics = jule::alloc_for_append((*(_170537_dest)).get()._field_Statics,1);(*(_170537_dest)).get()._field_Statics.__push(_173421_v);;
			}
			_iter_next_1aca23091:;
			++it;
			goto _iter_begin_1aca23091;
		}
		_iter_end_1aca23091:;
	};
	return __jule_func_result;;
}



inline void _1c4b1aea7_implTrait(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4acb363_Impl>* _174734_decl) {
	jule::Ptr<_1c4621d32_TypeKind> _174817_base_t = _1c4b11ab3_selectType(_self_, &((*(_174734_decl)).get()._field_Base));;
	if ((_174817_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1c4ac306e_Trait> _175217_base = _1c4b60738_Trait(_174817_base_t.ptr());;
	if ((_175217_base == nullptr)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_174734_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_174817_base_t.ptr()), &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4621d32_TypeKind> _175917_destT = _1c4b11ab3_selectType(_self_, &((*(_174734_decl)).get()._field_Dest));;
	if ((_175917_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1c4aab255_StructIns> _176317_destS = _1c4b604c4_Struct(_175917_destT.ptr());;
	if ((_176317_destS == nullptr)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_174734_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_175917_destT.ptr()), &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4a86ebc_Struct> _177017_dest = _176317_destS.get()._field_Decl;;
	if ((_20398be3c_Dir(_177017_dest.get()._field_Token.get()._field_File.ptr()) != _20398be3c_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_174734_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1c4b2ad1e_pushImplemented(_175217_base, &(_177017_dest));
	_1c4b2b0c7_pushImplements(&(_177017_dest), _175217_base);
	if (((*(_174734_decl)).get()._field_Statics.len() > 0LL)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_174734_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1c4b1a87a_checkTraitImplMethods(_self_.ptr(), &(_175217_base), _174734_decl)))) {
			_case_begin_1aca2bd69:;
			{
				return;;
			}
		}
		else if ((!(_1c4b1ac32_implToStruct(_self_, &(_177017_dest), _174734_decl)))) {
			_case_begin_1aca2bde1:;
			{
				return;;
			}
		}
		_match_end_1aca2a5a4:;
	};
}



inline void _1c4b1b22c_implStruct(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4acb363_Impl>* _179235_decl) {
	jule::Ptr<_1c4621d32_TypeKind> _179317_destT = _1c4b11ab3_selectType(_self_, &((*(_179235_decl)).get()._field_Dest));;
	if ((_179317_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1c4aab255_StructIns> _179717_destS = _1c4b604c4_Struct(_179317_destT.ptr());;
	if ((_179717_destS == nullptr)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_179235_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_179317_destT.ptr()), &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4a86ebc_Struct> _180417_dest = _179717_destS.get()._field_Decl;;
	if ((_20398be3c_Dir(_180417_dest.get()._field_Token.get()._field_File.ptr()) != _20398be3c_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_179235_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1c4b1ac32_implToStruct(_self_, &(_180417_dest), _179235_decl)))) {
			_case_begin_1aca31698:;
			{
				return;;
			}
		}
		_match_end_1aca2e003:;
	};
}



inline void _1c4b1b4a2_implImpl(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4acb363_Impl>* _181733_decl) {
	{
		
		if (_1c4acb75e_IsTraitImpl((*(_181733_decl)).ptr())) {
			_case_begin_1aca3228c:;
			{
				_1c4b1aea7_implTrait(_self_, _181733_decl);
			}
		}
		else if (_1c4acb9c3_IsStructImpl((*(_181733_decl)).ptr())) {
			_case_begin_1aca32314:;
			{
				_1c4b1b22c_implStruct(_self_, _181733_decl);
			}
		}
		_match_end_1aca3217c:;
	};
}



inline void _1c4b1b7c1_checkVarDecl(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4b2c837_Var>* _182837_decl, jule::Trait<_1c4b77c6c_Lookup> _182853_l) {
	if (_203988950_IsIgnoreIdent((*(_182837_decl)).get()._field_Ident)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_182837_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1c4b2ce64_IsTypeInferred((*(_182837_decl)).ptr())) {
		if ((!(_1c4b2cc00_IsInitialized((*(_182837_decl)).ptr())))) {
			_1c4b0a936_pushErr(_self_.ptr(), (*(_182837_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1c4b11046_checkType(_self_, &((*(_182837_decl)).get()._field_Kind), _182853_l);
	};
	if (((*(_182837_decl)).get()._field_Constant && (*(_182837_decl)).get()._field_Reference)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_182837_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_1c4b2cc00_IsInitialized((*(_182837_decl)).ptr())))) {
		if ((*(_182837_decl)).get()._field_Constant) {
			_1c4b0a936_pushErr(_self_.ptr(), (*(_182837_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_182837_decl)).get()._field_Statically) {
			_1c4b0a936_pushErr(_self_.ptr(), (*(_182837_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_182837_decl)).get()._field_Reference) {
			_1c4b0a936_pushErr(_self_.ptr(), (*(_182837_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1c4b1ba46_checkGlobalVarDecl(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4b2c837_Var>* _186043_decl) {
	if (_1c4b0b55d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_186043_decl)))), (*(_186043_decl)).get()._field_Ident, (*(_186043_decl)).get()._field_CppLinked)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_186043_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_186043_decl)).get()._field_Ident, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_186043_decl)).get()._field_CppLinked && (*(_186043_decl)).get()._field_Constant)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_186043_decl)).get()._field_Token, jule::Str("cpp linked variables cannot be constant", 39), jule::Slice<jule::Any>());
	};
	if ((((!((*(_186043_decl)).get()._field_CppLinked)) && (!((*(_186043_decl)).get()._field_Constant))) && (!((*(_186043_decl)).get()._field_Statically)))) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_186043_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1c4b0b87c_checkDirectives(_self_, &((*(_186043_decl)).get()._field_Directives), jule::Any((*(_186043_decl)), &__jule_any_type8));
	_1c4b1b7c1_checkVarDecl(_self_, _186043_decl, jule::Trait<_1c4b77c6c_Lookup>(_self_, 3));
}



inline jule::Bool _1c4b1bcaa_checkGlobalDecls(jule::Ptr<_1c4b07c74_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca3b7e6:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> _187821_decl = *it;
			{
				_1c4b1ba46_checkGlobalVarDecl(_self_, &(_187821_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aca3b7e6:;
			++it;
			goto _iter_begin_1aca3b7e6;
		}
		_iter_end_1aca3b7e6:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c4b1c162_checkStructTraitImpl(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4a86ebc_Struct>* _188845_strct, jule::Ptr<_1c4ac306e_Trait>* _188866_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_188866_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca3d045:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _188921_tf = *it;
			{
				jule::Bool _189021_exist = false;;
				jule::Ptr<_1c4ab22e4_Fn> _189121_sf = _1c4a6ec52_FindMethod((*(_188845_strct)).ptr(), _188921_tf.get()._field_Ident, _188921_tf.get()._field_Statically);;
				jule::Ptr<_1c4ab39ee_FnIns> _189217_tfK = _1c4b13ca2_getTraitCheckFnKind(_self_, &(_188921_tf));;
				if ((_189121_sf != nullptr)) {
					jule::Ptr<_1c4ab39ee_FnIns> _189425_sfK = _1c4b13ca2_getTraitCheckFnKind(_self_, &(_189121_sf));;
					_189021_exist=_1c4ab48ac_equalTrait(_189217_tfK, &(_189425_sfK));
				};
				if (_189021_exist) {
					jule::Ptr<_1c4a5ad81_Directive> _189821_d = _1c461c547_findDirective(&(_189121_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_189821_d != nullptr)) {
						_1c4b0a936_pushErr(_self_.ptr(), _189821_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1c4b0a936_pushErr(_self_.ptr(), (*(_188845_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_188866_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_1c4ab5715_GetKindStr(_189217_tfK.ptr(), true), &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1aca3d045:;
			++it;
			goto _iter_begin_1aca3d045;
		}
		_iter_end_1aca3d045:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4b1c470_checkStructImpls(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4a86ebc_Struct>* _191241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_191241_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca43336:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac306e_Trait> _191421_trt = *it;
			{
				__jule_func_result=(_1c4b1c162_checkStructTraitImpl(_self_, _191241_s, &(_191421_trt)) && __jule_func_result);
			}
			_iter_next_1aca43336:;
			++it;
			goto _iter_begin_1aca43336;
		}
		_iter_end_1aca43336:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c4b226c8_checkStructFields(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4a86ebc_Struct>* _192042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_192042_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca44678:;
		if (it != expr_end) {
			jule::Ptr<_1c4a7e877_Field> _192221_f = *it;
			{
				_192221_f.get()._field_Owner=(*(_192042_st));
				{
					auto expr = &((*(_192042_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aca451c3:;
					if (it != expr_end) {
						jule::Ptr<_1c4a7e877_Field> _192420_cf = *it;
						{
							if ((_192221_f == _192420_cf)) {
								goto _iter_end_1aca451c3;
							} else if ((_192221_f.get()._field_Ident == _192420_cf.get()._field_Ident)) {
								_1c4b0a936_pushErr(_self_.ptr(), _192221_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_192221_f.get()._field_Ident, &__jule_any_type5)}));
								_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1aca451c3:;
						++it;
						goto _iter_begin_1aca451c3;
					}
					_iter_end_1aca451c3:;
				};
			}
			_iter_next_1aca44678:;
			++it;
			goto _iter_begin_1aca44678;
		}
		_iter_end_1aca44678:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1c4b22860_checkStructDecl(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4a86ebc_Struct>* _193740_s) {
	if (_203988950_IsIgnoreIdent((*(_193740_s)).get()._field_Ident)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_193740_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c4b0b55d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_193740_s)))), (*(_193740_s)).get()._field_Ident, (*(_193740_s)).get()._field_CppLinked)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_193740_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_193740_s)).get()._field_Ident, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c4b0b87c_checkDirectives(_self_, &((*(_193740_s)).get()._field_Directives), jule::Any((*(_193740_s)), &__jule_any_type66));
	{
		
		if ((!(_1c4b18636_checkDeclGenerics(_self_.ptr(), &((*(_193740_s)).get()._field_Generics))))) {
			_case_begin_1aca4703d:;
		}
		else if ((!(_1c4b226c8_checkStructFields(_self_, _193740_s)))) {
			_case_begin_1aca48d64:;
		}
		else if ((!(_1c4b1c470_checkStructImpls(_self_, _193740_s)))) {
			_case_begin_1aca48ddb:;
		}
		_match_end_1aca48c54:;
	};
}



inline jule::Bool _1c4b22ac4_checkStructDecls(jule::Ptr<_1c4b07c74_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca4a20b:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> _195621_s = *it;
			{
				_1c4b22860_checkStructDecl(_self_, &(_195621_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aca4a20b:;
			++it;
			goto _iter_begin_1aca4a20b;
		}
		_iter_end_1aca4a20b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c4b22d49_checkFnDecl(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab22e4_Fn>* _196636_f) {
	if (_203988950_IsIgnoreIdent((*(_196636_f)).get()._field_Ident)) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_196636_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1c4b0b87c_checkDirectives(_self_, &((*(_196636_f)).get()._field_Directives), jule::Any((*(_196636_f)), &__jule_any_type65));
	(*(_196636_f)).get()._field_sema=_self_;
	_1c4b18ec7_checkFnDeclPrototype(_self_, _196636_f);
	if (_1c4b0b55d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_196636_f)))), (*(_196636_f)).get()._field_Ident, (*(_196636_f)).get()._field_CppLinked)) {
		if ((*(_196636_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_1c4ab22e4_Fn> _197821_init = _1c4b0956c_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_197821_init != nullptr)) {
				return;;
			};
		};
		_1c4b0a936_pushErr(_self_.ptr(), (*(_196636_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_196636_f)).get()._field_Ident, &__jule_any_type5)}));
		_1c4b0ac55_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c4b230ad_checkFnDecls(jule::Ptr<_1c4b07c74_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca4ee14:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _199021_f = *it;
			{
				_1c4b22d49_checkFnDecl(_self_, &(_199021_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aca4ee14:;
			++it;
			goto _iter_begin_1aca4ee14;
		}
		_iter_end_1aca4ee14:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c4b23476_pushCycleError(_1c4b07c74_Sema* _self_, jule::Str* _200030_st1, jule::Str* _200041_st2, jule::Str* _200056_message) {
	;
	jule::Str _200213_refers_to = _1c2220d40_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_200030_st1)), &__jule_any_type5),jule::Any((*(_200041_st2)), &__jule_any_type5)}));;
	((*(_200056_message))).buffer.insert(0, (((_1c2171697_Repeat(jule::Str(" ", 1), 7LL) + _200213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c4b238c7_checkCrossCycle(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4a86ebc_Struct>* _200631_st1, jule::Ptr<_1c4a86ebc_Struct>* _200646_st2, jule::Str* _200665_message) {
	{
		auto expr = &((*(_200646_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca52e8e:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> *_200716_u = it;
			{
				if (((*(_200716_u)) == (*(_200631_st1)))) {
					_1c4b23476_pushCycleError(_self_, &((*(_200646_st2)).get()._field_Ident), &((*(_200716_u)).get()._field_Ident), _200665_message);
					return false;;
				};
				if ((!(_1c4b238c7_checkCrossCycle(_self_, _200631_st1, _200716_u, _200665_message)))) {
					_1c4b23476_pushCycleError(_self_, &((*(_200646_st2)).get()._field_Ident), &((*(_200716_u)).get()._field_Ident), _200665_message);
					return false;;
				};
			}
			_iter_next_1aca52e8e:;
			++it;
			goto _iter_begin_1aca52e8e;
		}
		_iter_end_1aca52e8e:;
	};
	return true;;
}



inline jule::Bool _1c4b23d4a_checkStructDeriveIllegalCycles(_1c4b07c74_Sema* _self_, jule::Str _202049_derive, jule::Ptr<_1c4a86ebc_Struct>* _202063_st1, jule::Ptr<_1c4621d32_TypeKind>* _202082_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4a86ebc_Struct> _202117_st2 = _1c4b75242_getStructFromKind((*(_202082_k)));;
	if ((_202117_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_202063_st1)) == _202117_st2)) {
		_1c4b0a936_pushErr(_self_, (*(_202063_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_202049_derive, &__jule_any_type5),jule::Any((*(_202063_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _203317_message = jule::Str();;
	if ((!(_1c4b238c7_checkCrossCycle(_self_, _202063_st1, &(_202117_st2), &(_203317_message))))) {
		jule::Str _203521_errMsg = _203317_message;;
		_203317_message=jule::Str();
		_1c4b23476_pushCycleError(_self_, &((*(_202063_st1)).get()._field_Ident), &(_202117_st2.get()._field_Ident), &(_203317_message));
		_203521_errMsg+=_203317_message;
		_1c4b0a936_pushErr(_self_, (*(_202063_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_202049_derive, &__jule_any_type5),jule::Any(_203521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c4b2418b_checkStructInsDeriveClone(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4aab255_StructIns> _204548_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1c4a7484a_IsDerives(_204548_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_204548_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca58c97:;
		if (it != expr_end) {
			jule::Ptr<_1c4aab068_FieldIns> _204921_f = *it;
			{
				if ((_204921_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1aca58c97;
				};
				if ((!(_1c4b5e1e8_SupportsCloning(_204921_f.get()._field_Kind.ptr())))) {
					_1c4b0a936_pushErr(_self_, _204548_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_204921_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1c4b23d4a_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_204548_st.get()._field_Decl), &(_204921_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aca58c97:;
			++it;
			goto _iter_begin_1aca58c97;
		}
		_iter_end_1aca58c97:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c4b24378_checkPackageDecls(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca5b827:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _206721_f = *it;
			{
				_1c4b0a56d_setCurrentFile(_self_.ptr(), _206721_f);
				if ((!(_1c4b18328_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1c4b167aa_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aca5b827:;
			++it;
			goto _iter_begin_1aca5b827;
		}
		_iter_end_1aca5b827:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca5bad0:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _207721_f = *it;
			{
				_1c4b0a56d_setCurrentFile(_self_.ptr(), _207721_f);
				if ((!(_1c4b1a4c3_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aca5bad0:;
			++it;
			goto _iter_begin_1aca5bad0;
		}
		_iter_end_1aca5bad0:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca5ca8c:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _208421_f = *it;
			{
				_1c4b0a56d_setCurrentFile(_self_.ptr(), _208421_f);
				if ((!(_1c4b1bcaa_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aca5ca8c:;
			++it;
			goto _iter_begin_1aca5ca8c;
		}
		_iter_end_1aca5ca8c:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca5e3c9:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _209121_f = *it;
			{
				_1c4b0a56d_setCurrentFile(_self_.ptr(), _209121_f);
				{
					
					if ((!(_1c4b230ad_checkFnDecls(_self_)))) {
						_case_begin_1aca60078:;
					}
					else if ((!(_1c4b22ac4_checkStructDecls(_self_)))) {
						_case_begin_1aca600de:;
					}
					else {
						_case_begin_1aca60012:;
						{
							goto _iter_next_1aca5e3c9;
						}
					}
					_match_end_1aca5ee9b:;
				};
				return;;
			}
			_iter_next_1aca5e3c9:;
			++it;
			goto _iter_begin_1aca5e3c9;
		}
		_iter_end_1aca5e3c9:;
	};
}



inline void _1c4b246b9_checkDataForTypeInference(_1c4b07c74_Sema* _self_, jule::Ptr<_1c45e6e17_Data>* _210345_d, jule::Ptr<_2039861ab_Token>* _210356_err_token) {
	{
		
		if (_1c45e7302_IsNil((*(_210345_d)).ptr())) {
			_case_begin_1aca61013:;
			{
				_1c4b0a936_pushErr(_self_, (*(_210356_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1c45e7566_IsVoid((*(_210345_d)).ptr())) {
			_case_begin_1aca6108a:;
			{
				_1c4b0a936_pushErr(_self_, (*(_210356_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_210345_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_1aca61112:;
			{
				_1c4b0a936_pushErr(_self_, (*(_210356_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aca60de2:;
	};
}



inline void _1c4b24950_checkVar(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4b2c837_Var>* _211433_v) {
	if ((*(_211433_v)).get()._field_CppLinked) {
		return;;
	};
	if (_1c4b2ce64_IsTypeInferred((*(_211433_v)).ptr())) {
		(*(_211433_v)).get()._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=(*(_211433_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_1c4b246b9_checkDataForTypeInference(_self_.ptr(), &((*(_211433_v)).get()._field_Value.get()._field_Data), &((*(_211433_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_1c4b15ad9_checkValidityForInitExpr(_self_, (*(_211433_v)).get()._field_Mutable, (*(_211433_v)).get()._field_Reference, &((*(_211433_v)).get()._field_Kind.get()._field_Kind), &((*(_211433_v)).get()._field_Value.get()._field_Data), &((*(_211433_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_1c4b67c90_Arr> _213121_arr = _1c4b5ec87_Arr((*(_211433_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_213121_arr != nullptr)) {
			if (_213121_arr.get()._field_Auto) {
				jule::Ptr<_1c4b67c90_Arr> _213425_dataArr = _1c4b5ec87_Arr((*(_211433_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_213425_dataArr != nullptr)) {
					_213121_arr.get()._field_N=_213425_dataArr.get()._field_N;
				};
			};
		};
		if (_1c4b12bc4_checkAssignType(_self_, (*(_211433_v)).get()._field_Reference, &((*(_211433_v)).get()._field_Kind.get()._field_Kind), &((*(_211433_v)).get()._field_Value.get()._field_Data), (*(_211433_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1c4b15ad9_checkValidityForInitExpr(_self_, (*(_211433_v)).get()._field_Mutable, (*(_211433_v)).get()._field_Reference, &((*(_211433_v)).get()._field_Kind.get()._field_Kind), &((*(_211433_v)).get()._field_Value.get()._field_Data), &((*(_211433_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_211433_v)).get()._field_Reference && (!(_1c4b745a4_isValidForRef(&((*(_211433_v)).get()._field_Kind.get()._field_Kind)))))) {
		_1c4b0a936_pushErr(_self_.ptr(), (*(_211433_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_211433_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_211433_v)).get()._field_Constant) {
		if ((!(_1c45e77ca_IsConst((*(_211433_v)).get()._field_Value.get()._field_Data.ptr())))) {
			_1c4b0a936_pushErr(_self_.ptr(), (*(_211433_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*(_211433_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1c4b60c11_Tup((*(_211433_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_211433_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1c4b24c6e_checkTypeVar(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4b2c837_Var>* _216937_decl, jule::Trait<_1c4b77c6c_Lookup> _216953_l) {
	if (((*(_216937_decl)).get()._field_CppLinked || (!(_1c4b2cc00_IsInitialized((*(_216937_decl)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1c45e8985_Eval> _217417_eval = nullptr;;
	if (((*(_216937_decl)).get()._field_Kind != nullptr)) {
		_217417_eval=_1c4b12014_evalpd(_self_, _216953_l, (*(_216937_decl)).get()._field_Kind.get()._field_Kind, (*(_216937_decl)));
	} else {
		_217417_eval=_1c4b12014_evalpd(_self_, _216953_l, nullptr, (*(_216937_decl)));
	};
	_217417_eval.get()._field_immutable=(!((*(_216937_decl)).get()._field_Mutable));
	(*(_216937_decl)).get()._field_Value.get()._field_Data=_1c46143a7_evalExpr(_217417_eval, (*(_216937_decl)).get()._field_Value.get()._field_Expr);
	if (((*(_216937_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1c4b24950_checkVar(_self_, _216937_decl);
}



inline void _1c4b24e4a_checkGlobalTypes(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca6ebc0:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> _219021_decl = *it;
			{
				if (((_1c4b2cc00_IsInitialized(_219021_decl.ptr()) && (_219021_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1c4b2ce64_IsTypeInferred(_219021_decl.ptr()) && (_219021_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1c4b24c6e_checkTypeVar(_self_, &(_219021_decl), jule::Trait<_1c4b77c6c_Lookup>(_self_, 3));
				};
			}
			_iter_next_1aca6ebc0:;
			++it;
			goto _iter_begin_1aca6ebc0;
		}
		_iter_end_1aca6ebc0:;
	};
}



inline jule::Ptr<_1c4ab39ee_FnIns> _1c4b25302_readyToCheckFn(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4aab255_StructIns>* _220139_s, jule::Ptr<_1c4ab22e4_Fn>* _220159_f) {
	jule::Ptr<_1c4ab39ee_FnIns> _220217_ins = _1c4ab24d1_instance((*(_220159_f)));;
	if (((*(_220159_f)).get()._field_Instances.len() != 0LL)) {
		return _220217_ins;;
	};
	_220217_ins.get()._field_Owner=(*(_220139_s));
	_1c4ab2778_appendInstance((*(_220159_f)).ptr(), &(_220217_ins));
	_220217_ins.get()._field_reloaded=true;
	if (_1c4b1508e_reloadFnInsTypes(_self_, _220217_ins)) {
		return _220217_ins;;
	};
	return nullptr;;
}



inline void _1c4b25621_checkTypeMethod(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4aab255_StructIns>* _221540_s, jule::Ptr<_1c4ab22e4_Fn>* _221560_f) {
	if (((*(_221560_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1c4ab39ee_FnIns> _222017_ins = (*(_221560_f)).get()._field_Instances[0LL];;
	if ((_222017_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1c4b27ce9_checkFnIns(_self_, &(_222017_ins));
}



inline jule::Ptr<_1c4ab39ee_FnIns> _1c4b25a72_checkStructInsOp(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4aab255_StructIns>* _222841_s, jule::Ptr<_1c4ab22e4_Fn>* _222861_f, jule::Fn<jule::Bool(jule::Ptr<_1c4ab22e4_Fn>)> _222869_p) {
	if (((((*(_222861_f)) == nullptr) || ((*(_222861_f)).get()._field_Generics.len() > 0LL)) || (!(_222869_p((*(_222861_f))))))) {
		return nullptr;;
	};
	return (*(_222861_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _1c4b25e29_checkStructEnv(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4aab255_StructIns>* _223839_s, jule::Ptr<_2039861ab_Token> _223858_errorToken) {
	jule::Bool __jule_func_result = false;
	_1c4b6a523_typeChecker _223917_tc = _1c4b6a523_typeChecker{._field_s=(*(_223839_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1c4b77c6c_Lookup>((*(_223839_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1c4b77c6c_Lookup>((*(_223839_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1c4b69643_referencer>(_1c4b69643_referencer{._field_ident=(*(_223839_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_223839_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_223839_s)).get()._field_Refers, };;
	if (((*(_223839_s)).get()._field_Generics.len() > 0LL)) {
		_223917_tc._field_useGenerics=jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>::alloc(0LL, (*(_223839_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_223839_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aca78811:;
			if (it != expr_end) {
				jule::I32 _225218_i = it - expr->begin();
				jule::Ptr<_1c47006e6_InsGeneric> _225225_g = *it;
				{
					jule::Ptr<_1c4a9b630_GenericDecl> _225325_decl = (*(_223839_s)).get()._field_Decl.get()._field_Generics[_225218_i];;
					_223917_tc._field_useGenerics = jule::alloc_for_append(_223917_tc._field_useGenerics,1);_223917_tc._field_useGenerics.__push(jule::new_ptr<_1c4701230_TypeAlias>(_1c4701230_TypeAlias{._field_Token=_225325_decl.get()._field_Token, ._field_Ident=_225325_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=_225225_g.get()._field_Kind}), }));;
				}
				_iter_next_1aca78811:;
				++it;
				_225218_i++;
				goto _iter_begin_1aca78811;
			}
			_iter_end_1aca78811:;
		};
	};
	jule::Ptr<_1c45e20dd_SymbolTable> _226217_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1c4b0a56d_setCurrentFile(_self_.ptr(), _226217_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_223839_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1c45e20dd_SymbolTable> _226621_file = _1c4b0737d_findFile(&(_self_.get()._field_files), &((*(_223839_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_226621_file != nullptr)) {
			_1c4b0a56d_setCurrentFile(_self_.ptr(), _226621_file);
		};
	};
	if (((*(_223839_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1c4ac942c_constraintChecker> _227321_cc = _1c4b10b8e_constraintChecker(_self_);;
		_227321_cc.get()._field_et=_223858_errorToken;
		_227321_cc.get()._field_si=(*(_223839_s));
		_227321_cc.get()._field_genericsA=_223917_tc._field_useGenerics;
		_227321_cc.get()._field_uniq=true;
		if ((!(_1c4aca30c_check(_227321_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_223839_s)).get()._field_Statics.len() > 0LL)) {
		jule::I32 _228621_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_223917_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_223839_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aca808d4:;
			if (it != expr_end) {
				jule::Ptr<_1c4b2c837_Var> _228825_v = *it;
				{
					_1c4b1b7c1_checkVarDecl(_self_, &(_228825_v), jule::Trait<_1c4b77c6c_Lookup>(_self_, 3));
					_1c4b24c6e_checkTypeVar(_self_, &(_228825_v), jule::Trait<_1c4b77c6c_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _228621_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1aca808d4:;
				++it;
				goto _iter_begin_1aca808d4;
			}
			_iter_end_1aca808d4:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_223917_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1c45e8985_Eval> _229917_eval = _1c4b126c9_eval(_self_, jule::Trait<_1c4b77c6c_Lookup>(_self_, 3));;
	(*(_223839_s)).get()._field_Comparable=(!((*(_223839_s)).get()._field_Decl.get()._field_CppLinked));
	{
		auto expr = &((*(_223839_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca832ee:;
		if (it != expr_end) {
			jule::Ptr<_1c4aab068_FieldIns> _230121_f = *it;
			{
				jule::Ptr<_1c4621d32_TypeKind> _230221_kind = _1c4b7278e_checkDecl(&_223917_tc, &(_230121_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_230221_kind != nullptr) && __jule_func_result);
				if ((_230221_kind == nullptr)) {
					if (((_self_ != (*(_223839_s)).get()._field_Decl.get()._field_sema) && ((*(_223839_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_223839_s)).get()._field_Decl.get()._field_sema.get()._field_errors);
						(*(_223839_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1aca832ee;
				};
				_230121_f.get()._field_Kind=_230221_kind;
				(*(_223839_s)).get()._field_Mutable=((*(_223839_s)).get()._field_Mutable || ((!(_230121_f.get()._field_Decl.get()._field_Mutable)) && _1c4b5cdd9_Mutable(_230121_f.get()._field_Kind.ptr())));
				(*(_223839_s)).get()._field_Comparable=((*(_223839_s)).get()._field_Comparable && _1c4b5cca7_Comparable(_230121_f.get()._field_Kind.ptr()));
				_1c4b2418b_checkStructInsDeriveClone(_self_.ptr(), (*(_223839_s)));
				if ((_230121_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1aca832ee;
				};
				_229917_eval.get()._field_prefix=_230121_f.get()._field_Kind;
				_229917_eval.get()._field_field=_230121_f;
				_230121_f.get()._field_Default=_1c46143a7_evalExpr(_229917_eval, _230121_f.get()._field_Decl.get()._field_Default);
				if ((_230121_f.get()._field_Default == nullptr)) {
					goto _iter_next_1aca832ee;
				};
				;
				_1c4b12bc4_checkAssignType(_self_, false, &(_230121_f.get()._field_Kind), &(_230121_f.get()._field_Default), _230121_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1aca832ee:;
			++it;
			goto _iter_begin_1aca832ee;
		}
		_iter_end_1aca832ee:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4b262d1_precheckStructIns(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4aab255_StructIns>* _233642_s, jule::Ptr<_2039861ab_Token> _233661_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1c4b25e29_checkStructEnv(_self_, _233642_s, _233661_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_233642_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca8a68b:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _234121_f = *it;
			{
				if ((_234121_f.get()._field_Generics.len() == 0LL)) {
					if ((_1c4b25302_readyToCheckFn(_self_, _233642_s, &(_234121_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1aca8a68b:;
			++it;
			goto _iter_begin_1aca8a68b;
		}
		_iter_end_1aca8a68b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c4b26556_checkStructIns(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4aab255_StructIns>* _235139_s) {
	{
		auto expr = &((*(_235139_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca8bed9:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _235221_f = *it;
			{
				_1c4b25621_checkTypeMethod(_self_, _235139_s, &(_235221_f));
			}
			_iter_next_1aca8bed9:;
			++it;
			goto _iter_begin_1aca8bed9;
		}
		_iter_end_1aca8bed9:;
	};
}



inline void _1c4b267cb_checkTypeStruct(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4a86ebc_Struct>* _235740_s) {
	if ((*(_235740_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_235740_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_235740_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca8d837:;
		if (it != expr_end) {
			jule::Ptr<_1c4aab255_StructIns> _237021_ins = *it;
			{
				_1c4b26556_checkStructIns(_self_, &(_237021_ins));
			}
			_iter_next_1aca8d837:;
			++it;
			goto _iter_begin_1aca8d837;
		}
		_iter_end_1aca8d837:;
	};
}



inline void _1c4b269a7_checkStructTypes(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca8e3e8:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> _237621_s = *it;
			{
				_1c4b267cb_checkTypeStruct(_self_, &(_237621_s));
			}
			_iter_next_1aca8e3e8:;
			++it;
			goto _iter_begin_1aca8e3e8;
		}
		_iter_end_1aca8e3e8:;
	};
}



inline void _1c4b26c4e_checkStructInsOperators(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4aab255_StructIns> _238147_s) {
	{
		auto expr = &(_238147_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca90240:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _238221_m = *it;
			{
				{
					auto &_match_expr{ _238221_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1aca90e99:;
						{
							_238147_s.get()._field_Operators._field_Eq=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b2e5d6_Eq);
							_238147_s.get()._field_Comparable=(_238147_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1aca91010:;
						{
							_238147_s.get()._field_Operators._field_Gt=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b2e87d_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1aca91076:;
						{
							_238147_s.get()._field_Operators._field_GtEq=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b2eb25_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1aca910ed:;
						{
							_238147_s.get()._field_Operators._field_Lt=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b2edbc_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1aca91175:;
						{
							_238147_s.get()._field_Operators._field_LtEq=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b30164_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1aca911ec:;
						{
							_238147_s.get()._field_Operators._field_Shl=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b3074c_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1aca91274:;
						{
							_238147_s.get()._field_Operators._field_Shr=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b309e4_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1aca912eb:;
						{
							_238147_s.get()._field_Operators._field_Add=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b30c8b_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1aca91373:;
						{
							_238147_s.get()._field_Operators._field_Sub=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b31033_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1aca913ea:;
						{
							_238147_s.get()._field_Operators._field_Div=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b312ca_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1aca91472:;
						{
							_238147_s.get()._field_Operators._field_Mul=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b31572_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1aca914e9:;
						{
							_238147_s.get()._field_Operators._field_Mod=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b31819_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1aca91571:;
						{
							_238147_s.get()._field_Operators._field_BitAnd=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b31ab1_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1aca915e8:;
						{
							_238147_s.get()._field_Operators._field_BitOr=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b31d58_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1aca91670:;
						{
							_238147_s.get()._field_Operators._field_BitXor=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b32100_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1aca916e7:;
						{
							_238147_s.get()._field_Operators._field_Neg=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b326d8_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1aca9176e:;
						{
							_238147_s.get()._field_Operators._field_Pos=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b32980_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1aca917e6:;
						{
							_238147_s.get()._field_Operators._field_BitNot=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b32c27_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1aca9186d:;
						{
							_238147_s.get()._field_Operators._field_AddAssign=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b33310_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1aca918e5:;
						{
							_238147_s.get()._field_Operators._field_SubAssign=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b335a7_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1aca9196c:;
						{
							_238147_s.get()._field_Operators._field_DivAssign=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b3384e_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1aca919e4:;
						{
							_238147_s.get()._field_Operators._field_MulAssign=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b33ae6_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1aca91a6b:;
						{
							_238147_s.get()._field_Operators._field_ModAssign=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b33d8d_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1aca91ae3:;
						{
							_238147_s.get()._field_Operators._field_ShlAssign=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b34135_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1aca91b6a:;
						{
							_238147_s.get()._field_Operators._field_ShrAssign=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b343cc_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1aca91be2:;
						{
							_238147_s.get()._field_Operators._field_BitOrAssign=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b34674_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1aca91c69:;
						{
							_238147_s.get()._field_Operators._field_BitAndAssign=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b3491b_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1aca91ce1:;
						{
							_238147_s.get()._field_Operators._field_BitXorAssign=_1c4b25a72_checkStructInsOp(_self_, &(_238147_s), &(_238221_m), static__1c4b34bb3_BitXorAssign);
						}
					}
					_match_end_1aca90a7b:;
				};
			}
			_iter_next_1aca90240:;
			++it;
			goto _iter_begin_1aca90240;
		}
		_iter_end_1aca90240:;
	};
}



inline void _1c4b26ed5_precheckStructType(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4a86ebc_Struct>* _244543_s) {
	if ((*(_244543_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_244543_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_244543_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1c4aab255_StructIns> _245621_ins = _1c4a6ad91_instance((*(_244543_s)));;
		_245621_ins.get()._field_Checked=true;
		_1c4a6baea_appendInstance((*(_244543_s)).ptr(), &(_245621_ins));
		_1c4b262d1_precheckStructIns(_self_, &(_245621_ins), nullptr);
	};
	_1c4b26c4e_checkStructInsOperators(_self_, (*(_244543_s)).get()._field_Instances[0LL]);
}



inline void _1c4b271b1_precheckStructTypes(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acaa41cc:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> _246621_s = *it;
			{
				_1c4b26ed5_precheckStructType(_self_, &(_246621_s));
			}
			_iter_next_1acaa41cc:;
			++it;
			goto _iter_begin_1acaa41cc;
		}
		_iter_end_1acaa41cc:;
	};
}



inline void _1c4b27436_checkRets(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4ab39ee_FnIns>* _247133_f) {
	if (_1c4a871ed_IsVoid((*(_247133_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_1c4b295d1_missingRetChecker _247513_mrc = static__1c4b29999_new();;
	jule::Bool _247613_ok = _1c4b2a9ab_check(&_247513_mrc, (*(_247133_f)).get()._field_Scope);;
	if ((!(_247613_ok))) {
		_1c4b0a936_pushErr(_self_, (*(_247133_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1c4b27755_checkFnInsSc(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4ab39ee_FnIns>* _248236_f, jule::Ptr<_1c4ad7e30_scopeChecker>* _248252_sc) {
	_1c4b06998_appendRetVars(&((*(_248252_sc)).get()._field_table.get()._field_Vars), _248236_f);
	_1c4b06c51_appendParamVars(&((*(_248252_sc)).get()._field_table.get()._field_Vars), _248236_f);
	_1c4b0702b_appendGenericTypeAliases(&((*(_248252_sc)).get()._field_table.get()._field_TypeAliases), _248236_f);
	_1c4ae7c31_check((*(_248252_sc)), &((*(_248236_f)).get()._field_Decl.get()._field_Scope), &((*(_248236_f)).get()._field_Scope));
	if ((!(_1c4adaa9d_stopped((*(_248252_sc)).ptr())))) {
		_1c4b27436_checkRets(_self_, _248236_f);
	};
}



inline void _1c4b27a74_checkFnInsCaller(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _249541_f, jule::Ptr<_2039861ab_Token> _249556_caller) {
	if ((*(_249541_f)).get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1c45e20dd_SymbolTable> _250017_old = (*(_249541_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1c4b0a56d_setCurrentFile((*(_249541_f)).get()._field_Decl.get()._field_sema.ptr(), _250017_old);
	});;
	jule::Ptr<_1c45e20dd_SymbolTable> _250217_file = _1c4b0737d_findFile(&((*(_249541_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_249541_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_250217_file != nullptr)) {
		_1c4b0a56d_setCurrentFile((*(_249541_f)).get()._field_Decl.get()._field_sema.ptr(), _250217_file);
	};
	jule::Ptr<_1c4ad7e30_scopeChecker> _250717_sc = _1c4acd783_newScopeChecker(&((*(_249541_f)).get()._field_Decl.get()._field_sema), (*(_249541_f)));;
	_250717_sc.get()._field_calledFrom=_249556_caller;
	_1c4b27755_checkFnInsSc(_self_.ptr(), _249541_f, &(_250717_sc));
	if (((*(_249541_f)).get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_249541_f)).get()._field_Decl.get()._field_sema.get()._field_errors);
		(*(_249541_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1c4b27ce9_checkFnIns(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _251735_f) {
	_1c4b27a74_checkFnInsCaller(_self_, _251735_f, nullptr);
}



inline void _1c4b2806e_checkTypeFn(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab22e4_Fn>* _252136_f) {
	if ((*(_252136_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_252136_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_252136_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acaae69e:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab39ee_FnIns> _253121_ins = *it;
			{
				_1c4b27ce9_checkFnIns(_self_, &(_253121_ins));
			}
			_iter_next_1acaae69e:;
			++it;
			goto _iter_begin_1acaae69e;
		}
		_iter_end_1acaae69e:;
	};
}



inline void _1c4b282e4_checkTestFn(_1c4b07c74_Sema* _self_, jule::Ptr<_1c4ab39ee_FnIns>* _253635_f) {
	if ((*(_253635_f)).get()._field_Decl.get()._field_Public) {
		_1c4b0a936_pushErr(_self_, (*(_253635_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1c4b0ac55_pushSugggestion(_self_, jule::Str("remove \"pub\" modifier", 21), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_253635_f)).get()._field_Decl.get()._field_Unsafety || (!(_1c4a871ed_IsVoid((*(_253635_f)).get()._field_Decl.ptr())))) || ((*(_253635_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_253635_f)).get()._field_Params.len() != 1LL)) || (*(_253635_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_253635_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_1c4b0a936_pushErr(_self_, (*(_253635_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c4b0ac55_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4b65210_Sptr> _255417_sptr = _1c4b5e58e_Sptr((*(_253635_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_255417_sptr == nullptr)) {
		_1c4b0a936_pushErr(_self_, (*(_253635_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c4b0ac55_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4aab255_StructIns> _256113_s = _1c4b604c4_Struct(_255417_sptr.get()._field_Elem.ptr());;
	if (((_256113_s == nullptr) || (!(_1c4b0515b_isStdPackage(_256113_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_1c4b0a936_pushErr(_self_, (*(_253635_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c4b0ac55_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c4b28569_precheckTypeFn(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Ptr<_1c4ab22e4_Fn>* _256939_f) {
	if ((*(_256939_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_256939_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_256939_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1c4ab39ee_FnIns> _258021_ins = _1c4a78b7e_instanceForce((*(_256939_f)));;
		(*(_256939_f)).get()._field_Instances = jule::alloc_for_append((*(_256939_f)).get()._field_Instances,1);(*(_256939_f)).get()._field_Instances.__push(_258021_ins);;
		jule::Bool _258217_ok = _1c4b1508e_reloadFnInsTypes(_self_, _258021_ins);;
		_258021_ins.get()._field_reloaded=true;
		if ((_258217_ok && _1c4b73c46_hasDirective(&((*(_256939_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_1c4b282e4_checkTestFn(_self_.ptr(), &(_258021_ins));
		};
	};
}



inline void _1c4b28745_precheckFnTypes(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acaba1b0:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac306e_Trait> _259321_decl = *it;
			{
				{
					auto expr = &(_259321_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acabaa1d:;
					if (it != expr_end) {
						jule::Ptr<_1c4ab22e4_Fn> _259425_m = *it;
						{
							_1c4b28569_precheckTypeFn(_self_, &(_259425_m));
						}
						_iter_next_1acabaa1d:;
						++it;
						goto _iter_begin_1acabaa1d;
					}
					_iter_end_1acabaa1d:;
				};
			}
			_iter_next_1acaba1b0:;
			++it;
			goto _iter_begin_1acaba1b0;
		}
		_iter_end_1acaba1b0:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acaba6dd:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _259821_decl = *it;
			{
				_1c4b28569_precheckTypeFn(_self_, &(_259821_decl));
			}
			_iter_next_1acaba6dd:;
			++it;
			goto _iter_begin_1acaba6dd;
		}
		_iter_end_1acaba6dd:;
	};
}



inline void _1c4b28921_checkFnTypes(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acabbce9:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _260521_decl = *it;
			{
				_1c4b2806e_checkTypeFn(_self_, &(_260521_decl));
			}
			_iter_next_1acabbce9:;
			++it;
			goto _iter_begin_1acabbce9;
		}
		_iter_end_1acabbce9:;
	};
}



inline void _1c4b28aec_checkPackageTypes(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acabca0e:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _261321_f = *it;
			{
				_1c4b0a56d_setCurrentFile(_self_.ptr(), _261321_f);
				_1c4b24e4a_checkGlobalTypes(_self_);
				_1c4b28745_precheckFnTypes(_self_);
				_1c4b271b1_precheckStructTypes(_self_);
			}
			_iter_next_1acabca0e:;
			++it;
			goto _iter_begin_1acabca0e;
		}
		_iter_end_1acabca0e:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acabe2d5:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _262421_f = *it;
			{
				_1c4b0a56d_setCurrentFile(_self_.ptr(), _262421_f);
				_1c4b28921_checkFnTypes(_self_);
				_1c4b269a7_checkStructTypes(_self_);
			}
			_iter_next_1acabe2d5:;
			++it;
			goto _iter_begin_1acabe2d5;
		}
		_iter_end_1acabe2d5:;
	};
}



inline void _1c4b28cc8_setFileSemaFields(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acabe8bd:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _263221_f = *it;
			{
				_263221_f.get()._field_sema=_self_;
			}
			_iter_next_1acabe8bd:;
			++it;
			goto _iter_begin_1acabe8bd;
		}
		_iter_end_1acabe8bd:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac08ad:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> _263521_st = *it;
			{
				_263521_st.get()._field_sema=_self_;
			}
			_iter_next_1acac08ad:;
			++it;
			goto _iter_begin_1acac08ad;
		}
		_iter_end_1acac08ad:;
	};
}



inline void _1c4b28ea4_setSemaFields(jule::Ptr<_1c4b07c74_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac13e7:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _264121_file = *it;
			{
				_1c4b0a56d_setCurrentFile(_self_.ptr(), _264121_file);
				_1c4b28cc8_setFileSemaFields(_self_);
			}
			_iter_next_1acac13e7:;
			++it;
			goto _iter_begin_1acac13e7;
		}
		_iter_end_1acac13e7:;
	};
}



inline void _1c4b29229_check(jule::Ptr<_1c4b07c74_Sema> _self_, jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>* _264730_files) {
	_self_.get()._field_files=(*(_264730_files));
	_1c4b0e099_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c4b28ea4_setSemaFields(_self_);
	_1c4b0e62c_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c4b0e9d4_checkInherits(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c4b0e451_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c4b24378_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c4b28aec_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b07c74_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1c4b295d1_missingRetChecker static__1c4b29999_new(void) {
	return _1c4b295d1_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1c4b29c74_checkConditional(_1c4b295d1_missingRetChecker* _self_, jule::Ptr<_1c4ad1e29_Conditional> _269535_c) {
	{
		auto expr = &(_269535_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac64eb:;
		if (it != expr_end) {
			jule::Ptr<_1c4ad17b9_If> _269621_elif = *it;
			{
				if ((_269621_elif == nullptr)) {
					return false;;
				};
				if ((!(_1c4b2a69d_checkScope(_self_, _269621_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1acac64eb:;
			++it;
			goto _iter_begin_1acac64eb;
		}
		_iter_end_1acac64eb:;
	};
	return ((_269535_c.get()._field_Default != nullptr) && _1c4b2a69d_checkScope(_self_, _269535_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1c4b2a082_checkMatch(_1c4b295d1_missingRetChecker* _self_, jule::Ptr<_1c4ad5119_Match> _270729_m) {
	{
		auto expr = &(_270729_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acac81e0:;
		if (it != expr_end) {
			jule::Ptr<_1c4ad5b64_Case> _270821_c = *it;
			{
				if ((_270821_c == nullptr)) {
					return false;;
				};
				jule::I32 _271217_n = (*(_self_))._field_breaked.len();;
				jule::Bool _271317_ok = _1c4b2a69d_checkScope(_self_, _270821_c.get()._field_Scope);;
				{
					
					if ((_271217_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1acac9d3a:;
						{
							return false;;
						}
					}
					else if ((!(_271317_ok))) {
						_case_begin_1acac9da1:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1acac9e28;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1acac9e28:;
						{
							(*(_self_))._field_falled=false;
							if ((_270821_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1acac81e0;
						}
					}
					_match_end_1acac9cd5:;
				};
			}
			_iter_next_1acac81e0:;
			++it;
			goto _iter_begin_1acac81e0;
		}
		_iter_end_1acac81e0:;
	};
	return ((_270729_m.get()._field_Default != nullptr) && _1c4b2a69d_checkScope(_self_, _270729_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1c4b2a390_checkInfIter(_1c4b295d1_missingRetChecker* _self_, jule::Ptr<_1c4ad2215_InfIter> _273331_it) {
	jule::I32 _273413_n = (*(_self_))._field_breaked.len();;
	if (_1c4b2a69d_checkScope(_self_, _273331_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _273413_n);
		return true;;
	};
	if ((_273413_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _274017_itaddr = static_cast<jule::Uintptr>(_273331_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_273413_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1acacdb52:;
			if (it != expr_end) {
				jule::Uintptr _274120_addr = *it;
				{
					if ((_274017_itaddr == _274120_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _273413_n);
						return false;;
					};
				}
				_iter_next_1acacdb52:;
				++it;
				goto _iter_begin_1acacdb52;
			}
			_iter_end_1acacdb52:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _273413_n);
	};
	return true;;
}



inline jule::Bool _1c4b2a69d_checkScope(_1c4b295d1_missingRetChecker* _self_, jule::Ptr<_1c4ad13bd_Scope> _275229_s) {
	if ((_275229_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_275229_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acad0714:;
		if (it != expr_end) {
			jule::Any _275621_st = *it;
			{
				{
					auto &_match_expr{ _275621_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1acad0e51:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1acad0eea:;
						{
							jule::Uintptr _276221_addr = _275621_st.cast_ptr<_1c4ad3821_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_276221_addr != 0LLU)) {
								(*(_self_))._field_breaked = jule::alloc_for_append((*(_self_))._field_breaked,1);(*(_self_))._field_breaked.__push(_276221_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1acad1061:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1acad10c7:;
						{
							if (_1c4b2a390_checkInfIter(_self_, _275621_st.cast_ptr<_1c4ad2215_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1acad113d:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1acad11a4:;
						{
							if (_1c4b2a69d_checkScope(_self_, _275621_st.cast_ptr<_1c4ad13bd_Scope>(&__jule_any_type21))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1acad121a:;
						{
							{
								auto &_match_expr{ _275621_st.cast_ptr<_1c45e6e17_Data>(&__jule_any_type23).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type22) {
									_case_begin_1acad4b47:;
									{
										return true;;
									}
								}
								_match_end_1acad488e:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1acad1292:;
						{
							if (_1c4b29c74_checkConditional(_self_, _275621_st.cast_ptr<_1c4ad1e29_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1acad1319:;
						{
							if (_1c4b2a082_checkMatch(_self_, _275621_st.cast_ptr<_1c4ad5119_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_1acad0ca8:;
				};
			}
			_iter_next_1acad0714:;
			++it;
			goto _iter_begin_1acad0714;
		}
		_iter_end_1acad0714:;
	};
	return false;;
}



inline jule::Bool _1c4b2a9ab_check(_1c4b295d1_missingRetChecker* _self_, jule::Ptr<_1c4ad13bd_Scope> _279824_s) {
	return _1c4b2a69d_checkScope(_self_, _279824_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b295d1_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b2b7e2_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4b2cc00_IsInitialized(_1c4b2c837_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1c4b2ce64_IsTypeInferred(_1c4b2c837_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1c4b2d1c8_untypedConstant(_1c4b2c837_Var* _self_) {
	return (_1c4b2ce64_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b2c837_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c4b2dc56_Dispose(jule::Ptr<_1c4ab22e4_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1c4a871ed_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1c4a71e63_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1c4b2deed_Str(jule::Ptr<_1c4ab22e4_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1c4a871ed_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1c4a71e63_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1c4ab39ee_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1c4b6197b_Prim> _3913_prim = _1c4b5e45c_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1c4b64bb0_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1c4b2e33e_logical(jule::Ptr<_1c4ab22e4_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _1c4a871ed_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _1c4a71e63_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1c4ab39ee_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_1c4b6197b_Prim> _6413_prim = _1c4b5e45c_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1c4b6494b_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1c4b604c4_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1c4b2e5d6_Eq(jule::Ptr<_1c4ab22e4_Fn> _7218_f) {
	return static__1c4b2e33e_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__1c4b2e87d_Gt(jule::Ptr<_1c4ab22e4_Fn> _7718_f) {
	return static__1c4b2e33e_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__1c4b2eb25_GtEq(jule::Ptr<_1c4ab22e4_Fn> _8220_f) {
	return static__1c4b2e33e_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__1c4b2edbc_Lt(jule::Ptr<_1c4ab22e4_Fn> _8718_f) {
	return static__1c4b2e33e_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__1c4b30164_LtEq(jule::Ptr<_1c4ab22e4_Fn> _9220_f) {
	return static__1c4b2e33e_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__1c4b304a5_result(jule::Ptr<_1c4ab22e4_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _1c4a871ed_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _1c4a71e63_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1c4ab39ee_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_1c4b604c4_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1c4b3074c_Shl(jule::Ptr<_1c4ab22e4_Fn> _11819_f) {
	return static__1c4b304a5_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__1c4b309e4_Shr(jule::Ptr<_1c4ab22e4_Fn> _12319_f) {
	return static__1c4b304a5_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__1c4b30c8b_Add(jule::Ptr<_1c4ab22e4_Fn> _12819_f) {
	return static__1c4b304a5_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__1c4b31033_Sub(jule::Ptr<_1c4ab22e4_Fn> _13319_f) {
	return static__1c4b304a5_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__1c4b312ca_Div(jule::Ptr<_1c4ab22e4_Fn> _13819_f) {
	return static__1c4b304a5_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__1c4b31572_Mul(jule::Ptr<_1c4ab22e4_Fn> _14319_f) {
	return static__1c4b304a5_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__1c4b31819_Mod(jule::Ptr<_1c4ab22e4_Fn> _14819_f) {
	return static__1c4b304a5_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__1c4b31ab1_BitAnd(jule::Ptr<_1c4ab22e4_Fn> _15322_f) {
	return static__1c4b304a5_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1c4b31d58_BitOr(jule::Ptr<_1c4ab22e4_Fn> _15821_f) {
	return static__1c4b304a5_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__1c4b32100_BitXor(jule::Ptr<_1c4ab22e4_Fn> _16322_f) {
	return static__1c4b304a5_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__1c4b32441_unary(jule::Ptr<_1c4ab22e4_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _1c4a871ed_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _1c4a71e63_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1c4ab39ee_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_1c4b604c4_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1c4b326d8_Neg(jule::Ptr<_1c4ab22e4_Fn> _18719_f) {
	return static__1c4b32441_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__1c4b32980_Pos(jule::Ptr<_1c4ab22e4_Fn> _19219_f) {
	return static__1c4b32441_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__1c4b32c27_BitNot(jule::Ptr<_1c4ab22e4_Fn> _19722_f) {
	return static__1c4b32441_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__1c4b33068_assign(jule::Ptr<_1c4ab22e4_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_1c4a871ed_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _1c4a71e63_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1c4b33310_AddAssign(jule::Ptr<_1c4ab22e4_Fn> _22125_f) {
	return static__1c4b33068_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1c4b335a7_SubAssign(jule::Ptr<_1c4ab22e4_Fn> _22625_f) {
	return static__1c4b33068_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1c4b3384e_DivAssign(jule::Ptr<_1c4ab22e4_Fn> _23125_f) {
	return static__1c4b33068_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1c4b33ae6_MulAssign(jule::Ptr<_1c4ab22e4_Fn> _23625_f) {
	return static__1c4b33068_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1c4b33d8d_ModAssign(jule::Ptr<_1c4ab22e4_Fn> _24125_f) {
	return static__1c4b33068_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1c4b34135_ShlAssign(jule::Ptr<_1c4ab22e4_Fn> _24625_f) {
	return static__1c4b33068_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1c4b343cc_ShrAssign(jule::Ptr<_1c4ab22e4_Fn> _25125_f) {
	return static__1c4b33068_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1c4b34674_BitOrAssign(jule::Ptr<_1c4ab22e4_Fn> _25627_f) {
	return static__1c4b33068_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1c4b3491b_BitAndAssign(jule::Ptr<_1c4ab22e4_Fn> _26128_f) {
	return static__1c4b33068_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1c4b34bb3_BitXorAssign(jule::Ptr<_1c4ab22e4_Fn> _26628_f) {
	return static__1c4b33068_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b2d5d5_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1c45d1033_pushErr(_1c45d0a16_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _1c45d1297_checkTrait(_1c45d0a16_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c4b4629b_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4ac306e_Trait> _12517_trt = _1c4b60738_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1c4b5e58e_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1acb228ee:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_1c4b5e58e_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_1c4b604c4_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1acb2226c;
			}
		}
		else if ((_1c4b604c4_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1acb2226c:;
			{
				jule::Ptr<_1c4aab255_StructIns> _13617_s = _1c4b604c4_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1c4a70879_IsImplements(_13617_s.get()._field_Decl.ptr(), _12517_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _1c45ce6e6_traitHasReferenceReceiver(&(_12517_trt)))) {
					_1c45d1033_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c4b60738_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1acb222d3:;
			{
				jule::Ptr<_1c4ac306e_Trait> _14621_base = _1c4b60738_Trait((*(_self_))._field_src.ptr());;
				if ((_12517_trt == _14621_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_lookup:;
				{
					auto expr = &(_14621_base.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb268ae:;
					if (it != expr_end) {
						jule::Ptr<_1c4a86ebc_Struct> _15120_s1 = *it;
						{
							{
								auto expr = &(_12517_trt.get()._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1acb2753b:;
								if (it != expr_end) {
									jule::Ptr<_1c4a86ebc_Struct> _15224_s2 = *it;
									{
										if ((_15120_s1 == _15224_s2)) {
											goto _iter_next_1acb268ae;
										};
									}
									_iter_next_1acb2753b:;
									++it;
									goto _iter_begin_1acb2753b;
								}
								_iter_end_1acb2753b:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1acb268ae:;
						++it;
						goto _iter_begin_1acb268ae;
					}
					_iter_end_1acb268ae:;
				};
				{
					auto expr = &(_14621_base.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb27b8a:;
					if (it != expr_end) {
						jule::Ptr<_1c4ab22e4_Fn> _15925_m1 = *it;
						{
							jule::Ptr<_1c4ab22e4_Fn> _16025_m2 = _1c4ac3e1b_FindMethod(_12517_trt.ptr(), _15925_m1.get()._field_Ident);;
							if ((_16025_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1c4ab39ee_FnIns> _16421_m1k = _1c4b13ca2_getTraitCheckFnKind((*(_self_))._field_s, &(_15925_m1));;
							jule::Ptr<_1c4ab39ee_FnIns> _16521_m2k = _1c4b13ca2_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m2));;
							if ((!(_1c4ab48ac_equalTrait(_16421_m1k, &(_16521_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1acb27b8a:;
						++it;
						goto _iter_begin_1acb27b8a;
					}
					_iter_end_1acb27b8a:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1acb22206:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1acb22190:;
	};
}



inline jule::Bool _1c45d150b_checkPtr(_1c45d0a16_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c4b4629b_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4b686ec_Ptr> _18017_dest = _1c4b5e6c1_Ptr((*(_self_))._field_dest.ptr());;
	if (_1c4b691c0_IsUnsafe(_18017_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1c4622580_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1c45d1770_checkPrim(_1c45d0a16_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1c4b6197b_Prim> _18917_prim = _1c4b5e45c_Prim((*(_self_))._field_dest.ptr());;
		if (((_18917_prim != nullptr) && _1c4b64e24_IsAny(_18917_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1c4622580_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1c45d1b27_typeEnum(_1c45d0a16_typeCompatibilityChecker* _self_, jule::Ptr<_1c4ac6dec_TypeEnum>* _19728_e, jule::Ptr<_1c4621d32_TypeKind>* _19747_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_19728_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb2d9a4:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac6836_TypeEnumItem> _19821_item = *it;
			{
				if (_1c4622580_Equal(_19821_item.get()._field_Kind.get()._field_Kind, (*(_19747_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1c4ac6dec_TypeEnum> _20221_ke = _1c4b5ea23_TypeEnum(_19821_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_20221_ke == nullptr)) {
					goto _iter_next_1acb2d9a4;
				};
				if (_1c45d1b27_typeEnum(_self_, &(_20221_ke), _19747_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1acb2d9a4:;
			++it;
			goto _iter_begin_1acb2d9a4;
		}
		_iter_end_1acb2d9a4:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c45d1d8b_checkTypeEnum(_1c45d0a16_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c4622580_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4ac6dec_TypeEnum> _21717_e = _1c4b5ea23_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1c45d1b27_typeEnum(_self_, &(_21717_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1c45d2100_check(_1c45d0a16_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1c4b5e6c1_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1c45d150b_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1c4b5de84_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1c4b4629b_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1c4b5e45c_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1acb3358b:;
			{
				__jule_func_result = _1c45d1770_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1c4b5ea23_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1acb33976:;
			{
				__jule_func_result = _1c45d1d8b_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1c4b60738_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1acb339dc:;
			{
				__jule_func_result = _1c45d1297_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1acb32997:;
			{
				__jule_func_result = _1c4622580_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1acb32689:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c45d0a16_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1c45d2aa1_pushErr(_1c45d263e_assignTypeChecker* _self_, jule::Str _25326_fmt, jule::Slice<jule::Any> _25339_args) {
	_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25326_fmt, _25339_args);
}



inline jule::Bool _1c45d2d15_checkValidity(_1c45d263e_assignTypeChecker* _self_) {
	jule::Bool _25817_valid = true;;
	{
		
		if ((_1c4b60260_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb3656c:;
			{
				jule::Ptr<_1c4ab39ee_FnIns> _26117_f = _1c4b60260_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1c4ab4d85_IsBuiltin(_26117_f.ptr())) {
						_case_begin_1acb37ae0:;
						{
							_1c45d2aa1_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (_26117_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1acb37b67:;
						{
							_1c45d2aa1_pushErr(_self_, jule::Str("cpp-linked functions cannot use as anonymous function", 53), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((!(_26117_f.get()._field_Decl.get()._field_Statically)) && _1c4a810e8_IsMethod(_26117_f.get()._field_Decl.ptr()))) {
						_case_begin_1acb37bde:;
						{
							_1c45d2aa1_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((_26117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_26117_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1acb37c66:;
						{
							_1c45d2aa1_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1c4b0ac55_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					_match_end_1acb37a13:;
				};
			}
		}
		else if ((_1c4b60c11_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb365e4:;
			{
				_1c45d2aa1_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25817_valid=false;
			}
		}
		_match_end_1acb364b2:;
	};
	return _25817_valid;;
}



inline jule::Bool _1c45d3079_checkConst(_1c45d263e_assignTypeChecker* _self_) {
	if (((((!(_1c45e77ca_IsConst((*(_self_))._field_d.ptr()))) || (_1c4b5e45c_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1c4b5e45c_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1c3177a32_IsNum(_1c4b5e45c_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type47_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _29813_kind = _1c4b5e45c_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1c3177900_IsFloat(_29813_kind)) {
			_case_begin_1acb401be:;
			{
				if ((!(_1c45cea48_floatAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_1c45d2aa1_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else if (_1c31777bd_IsInt(_29813_kind)) {
			_case_begin_1acb3ea4d:;
			{
				if ((!(_1c45d0560_intAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_1c45d2aa1_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else {
			_case_begin_1acb3e9d7:;
			{
				return false;;
			}
		}
		_match_end_1acb3e971:;
	};
	return true;;
}



inline jule::Bool _1c45d32dd_isPrim(_1c45d263e_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1c4b4e6b1_CppLinked((*(_self_))._field_dest.ptr()) || _1c4b4e6b1_CppLinked((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1c4b5e45c_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1c4b5e45c_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1c45d3552_checkCompatibility(_1c45d263e_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1acb44217:;
			{
				return false;;
			}
		}
		else if ((!(_1c45d2d15_checkValidity(_self_)))) {
			_case_begin_1acb4428e:;
			{
				return false;;
			}
		}
		else if (_1c45d3079_checkConst(_self_)) {
			_case_begin_1acb44316:;
			{
				return true;;
			}
		}
		else if ((_1c4b5e803_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb4438d:;
			{
				jule::Ptr<_1c4621d32_TypeKind> _34221_dkind = (*(_self_))._field_dest;;
				if ((_1c4b5e803_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34221_dkind=_1c4b5e803_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1c4b5e45c_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1acb440c4;
				};
				if (_1c3176305_TypesAreCompatible(_1c4b5e45c_Prim(_1c4b5e803_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _1c4b5e45c_Prim(_34221_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1c45d32dd_isPrim(_self_)) {
			_case_begin_1acb44415:;
			{
				jule::Ptr<_1c4b6197b_Prim> _35217_dest = _1c4b5e45c_Prim((*(_self_))._field_dest.ptr());;
				if (_1c4b64e24_IsAny(_35217_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1c4b6197b_Prim> _35621_src = _1c4b5e45c_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1c3176305_TypesAreCompatible(_35217_dest.get()._field_Kind, _35621_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1acb440c4:;
	};
	return _1c4b13125_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1c45d37b6_check(_1c45d263e_assignTypeChecker* _self_) {
	jule::Bool _36513_ok = _1c45d3552_checkCompatibility(_self_);;
	if ((_36513_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1c4b75792_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36513_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c45d263e_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1acb5bb58_annotateConstraintElem(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1acb5d242:;
			{
				jule::Ptr<_1c4621d32_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1acb5e056:;
						{
							_38821_elem=_1c4b5ec87_Arr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1acb5dac2:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1c4a91845_ArrTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _1c45d5774_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1acb5d187:;
	};
	return false;;
}

inline jule::Bool _1acb5becc_annotateConstraintElem(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1acb616da:;
			{
				jule::Ptr<_1c4621d32_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1acb62587:;
						{
							_38821_elem=_1c4b5eeeb_Slc((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1acb6206a:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1c4a90adb_SlcTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _1c45d5774_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1acb61630:;
	};
	return false;;
}

inline jule::Bool _1acb5b6a2_annotateConstraintElem(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1acb64b83:;
			{
				jule::Ptr<_1c4621d32_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1acb65a96:;
						{
							_38821_elem=_1c4b5e6c1_Ptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1acb65513:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1c4a911b3_PtrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1c45d5774_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1acb64ac8:;
	};
	return false;;
}

inline jule::Bool _1acb6417c_annotateConstraintElem(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1acb67d0c:;
			{
				jule::Ptr<_1c4621d32_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1acb68c97:;
						{
							_38821_elem=_1c4b5e58e_Sptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1acb6868c:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1c4a906e0_SptrTypeDecl>(&__jule_any_type79).get()._field_Elem;
				return _1c45d5774_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1acb67c52:;
	};
	return false;;
}



inline jule::Bool _1c45d4a09_annotateConstraintMap(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _40545_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1acb4bb48:;
			{
				jule::Ptr<_1c4b6719b_Map> _40821_m = _1c4b6099c_Map((*(_40545_k)).ptr());;
				jule::Ptr<_1c4a92093_MapTypeDecl> _40921_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1c4a92093_MapTypeDecl>(&__jule_any_type80);;
				(*(_self_))._field_c=_40921_m2.get()._field_Key;
				if ((!(_1c45d5774_annotateConstraint(_self_, &(_40821_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_40921_m2.get()._field_Val;
				__jule_func_result = _1c45d5774_annotateConstraint(_self_, &(_40821_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1acb4bac1:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c45d4d17_annotateConstraintTup(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _42045_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1acb4e2cc:;
			{
				jule::Ptr<_1c4a90dc7_TupleTypeDecl> _42321_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1c4a90dc7_TupleTypeDecl>(&__jule_any_type81);;
				jule::Ptr<_1c4b66673_Tuple> _42421_tup2 = _1c4b60c11_Tup((*(_42045_k)).ptr());;
				{
					auto expr = &(_42421_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb506a7:;
					if (it != expr_end) {
						jule::Ptr<_1c4621d32_TypeKind> _42525_t2 = *it;
						{
							{
								auto expr = &(_42321_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1acb50e6b:;
								if (it != expr_end) {
									jule::Ptr<_1c4a8e337_TypeDecl> _42629_t = *it;
									{
										(*(_self_))._field_c=_42629_t;
										if (_1c45d5774_annotateConstraint(_self_, &(_42525_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1acb50e6b:;
									++it;
									goto _iter_begin_1acb50e6b;
								}
								_iter_end_1acb50e6b:;
							};
						}
						_iter_next_1acb506a7:;
						++it;
						goto _iter_begin_1acb506a7;
					}
					_iter_end_1acb506a7:;
				};
			}
		}
		_match_end_1acb4c0bb:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c45d5125_annotateConstraintFn(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _43744_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1acb50b80:;
			{
				jule::Ptr<_1c4aa0cb6_FnDecl> _44021_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1c4aa0cb6_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1c4ab39ee_FnIns> _44121_f = _1c4b60260_Fn((*(_43744_k)).ptr());;
				{
					auto expr = &(_44121_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb5308e:;
					if (it != expr_end) {
						jule::I32 _44218_i = it - expr->begin();
						jule::Ptr<_1c4ab2b30_ParamIns> _44225_fp = *it;
						{
							(*(_self_))._field_c=_44021_pf.get()._field_Params[_44218_i].get()._field_Kind;
							if (_1c45d5774_annotateConstraint(_self_, &(_44225_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1acb5308e:;
						++it;
						_44218_i++;
						goto _iter_begin_1acb5308e;
					}
					_iter_end_1acb5308e:;
				};
				if ((_44021_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_44021_pf.get()._field_Result.get()._field_Kind;
					if (_1c45d5774_annotateConstraint(_self_, &(_44121_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1acb4e651:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c45d5455_annotateConstraintIdent(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _45847_k) {
	jule::Ptr<_1c4a8e8ed_IdentTypeDecl> _45917_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1c4a8e8ed_IdentTypeDecl>(&__jule_any_type19);;
	jule::Ptr<_1c4aab255_StructIns> _46017_s = _1c4b604c4_Struct((*(_45847_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb559dc:;
		if (it != expr_end) {
			jule::I32 _46113_i = it - expr->begin();
			jule::Ptr<_1c4a9b630_GenericDecl> _46116_g = *it;
			{
				if ((_46116_g.get()._field_Ident == _45917_ident.get()._field_Ident)) {
					jule::Ptr<_1c47006e6_InsGeneric> _46325_fg = (*(_self_))._field_f.get()._field_Generics[_46113_i];;
					if ((_46325_fg != nullptr)) {
						return false;;
					};
					_1c45d5a93_pushGeneric(_self_, _45847_k, _46113_i);
					return true;;
				};
				if ((_46017_s == nullptr)) {
					goto _iter_next_1acb559dc;
				};
				jule::Ptr<_1c4a8e337_TypeDecl> _47321_c = (*(_self_))._field_c;;
				{
					auto expr = &(_45917_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb57cdb:;
					if (it != expr_end) {
						jule::Ptr<_1c4a8e337_TypeDecl> _47425_ig = *it;
						{
							(*(_self_))._field_c=_47425_ig;
							{
								auto expr = &(_46017_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1acb5934d:;
								if (it != expr_end) {
									jule::Ptr<_1c47006e6_InsGeneric> _47629_sg = *it;
									{
										if (_1c45d5774_annotateConstraint(_self_, &(_47629_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1acb5934d:;
									++it;
									goto _iter_begin_1acb5934d;
								}
								_iter_end_1acb5934d:;
							};
						}
						_iter_next_1acb57cdb:;
						++it;
						goto _iter_begin_1acb57cdb;
					}
					_iter_end_1acb57cdb:;
				};
				(*(_self_))._field_c=_47321_c;
			}
			_iter_next_1acb559dc:;
			++it;
			_46113_i++;
			goto _iter_begin_1acb559dc;
		}
		_iter_end_1acb559dc:;
	};
	return false;;
}



inline jule::Bool _1c45d5774_annotateConstraint(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _48742_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1acb596d3:;
			{
				return _1c45d5455_annotateConstraintIdent(_self_, _48742_k);;
			}
		}
		_match_end_1acb58e41:;
	};
	{
		
		if ((_1c4b5ec87_Arr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1acb56955:;
			{
				return _1acb5bb58_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1c4b5eeeb_Slc((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1acb5abe0:;
			{
				return _1acb5becc_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1c4b5e6c1_Ptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1acb5ac56:;
			{
				return _1acb5b6a2_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1c4b5e58e_Sptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1acb5ad55:;
			{
				return _1acb6417c_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1c4b6099c_Map((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1acb5adbb:;
			{
				return _1c45d4a09_annotateConstraintMap(_self_, _48742_k);;
			}
		}
		else if ((_1c4b60260_Fn((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1acb5a31b:;
			{
				return _1c45d5125_annotateConstraintFn(_self_, _48742_k);;
			}
		}
		else if ((_1c4b60c11_Tup((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1acb5a382:;
			{
				return _1c45d4d17_annotateConstraintTup(_self_, _48742_k);;
			}
		}
		else {
			_case_begin_1acb5ab24:;
			{
				return false;;
			}
		}
		_match_end_1acb5aabe:;
	};
}



inline void _1c45d5a93_pushGeneric(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _51235_k, jule::I32 _51249_i) {
	(*(_self_))._field_f.get()._field_Generics[_51249_i]=jule::new_ptr<_1c47006e6_InsGeneric>(_1c47006e6_InsGeneric{._field_Kind=(*(_51235_k)), });
	jule::Ptr<_1c4a9b630_GenericDecl> _51417_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_51249_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb6b64b:;
		if (it != expr_end) {
			jule::Ptr<_1c4621d32_TypeKind> _51521_ignored = *it;
			{
				if ((_51417_gd.get()._field_Ident == _1c4622272_Str(_51521_ignored.ptr()))) {
					_51521_ignored.get()._field_Kind=(*(_51235_k)).get()._field_Kind;
				};
			}
			_iter_next_1acb6b64b:;
			++it;
			goto _iter_begin_1acb6b64b;
		}
		_iter_end_1acb6b64b:;
	};
	if (((_51417_gd.get()._field_Constraint == nullptr) || (_51417_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_51417_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1c45d5774_annotateConstraint(_self_, _51235_k);
}



inline jule::Bool _1c45d5da1_annotatePrim(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _52743_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1c45d7bc7_annotateAny(_self_, _52743_k);
	return __jule_func_result;;
}



inline jule::Bool _1c45d61ae_annotateArr(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4b67c90_Arr> _53217_parr = _1c4b5ec87_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53217_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4b67c90_Arr> _53617_arr = _1c4b5ec87_Arr((*(_53142_k)).ptr());;
	(*(_self_))._field_k=(&(_53217_parr.get()._field_Elem));
	__jule_func_result = _1c45d7ed5_annotateKind(_self_, &(_53617_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c45d64bc_annotateSlc(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _54142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4b65b6c_Slc> _54217_pslc = _1c4b5eeeb_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54217_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4b65b6c_Slc> _54617_slc = _1c4b5eeeb_Slc((*(_54142_k)).ptr());;
	(*(_self_))._field_k=(&(_54217_pslc.get()._field_Elem));
	__jule_func_result = _1c45d7ed5_annotateKind(_self_, &(_54617_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c45d6874_checkMapKey(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _55141_k, jule::Ptr<_1c4621d32_TypeKind>* _55161_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4621d32_TypeKind>* _55217_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55141_k;
	__jule_func_result=_1c45d7ed5_annotateKind(_self_, _55161_ck);
	(*(_self_))._field_k=_55217_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c45d6b82_annotateMap(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _55942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4b6719b_Map> _56017_pmap = _1c4b6099c_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56017_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4b6719b_Map> _56417_m = _1c4b6099c_Map((*(_55942_k)).ptr());;
	__jule_func_result = (_1c45d6874_checkMapKey(_self_, (&(_56017_pmap.get()._field_Key)), &(_56417_m.get()._field_Key)) && _1c45d6874_checkMapKey(_self_, (&(_56017_pmap.get()._field_Val)), &(_56417_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1c45d6e90_annotateFn(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _56941_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4ab39ee_FnIns> _57017_pf = _1c4b60260_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57017_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4ab39ee_FnIns> _57417_f = _1c4b60260_Fn((*(_56941_k)).ptr());;
	{
		
		if ((_57017_pf.get()._field_Params.len() != _57417_f.get()._field_Params.len())) {
			_case_begin_1acb77745:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1c4a871ed_IsVoid(_57017_pf.get()._field_Decl.ptr()) != _1c4a871ed_IsVoid(_57417_f.get()._field_Decl.ptr()))) {
			_case_begin_1acb777bc:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1acb776bd:;
	};
	__jule_func_result=true;
	jule::Ptr<_1c4621d32_TypeKind>* _58317_old = (*(_self_))._field_k;;
	{
		auto expr = &(_57417_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb7903d:;
		if (it != expr_end) {
			jule::I32 _58414_i = it - expr->begin();
			jule::Ptr<_1c4ab2b30_ParamIns> _58421_fp = *it;
			{
				(*(_self_))._field_k=(&(_57017_pf.get()._field_Params[_58414_i].get()._field_Kind));
				__jule_func_result=(_1c45d7ed5_annotateKind(_self_, &(_58421_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_1acb7903d:;
			++it;
			_58414_i++;
			goto _iter_begin_1acb7903d;
		}
		_iter_end_1acb7903d:;
	};
	if ((!(_1c4a871ed_IsVoid(_57017_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_57017_pf.get()._field_Result));
		__jule_func_result=(_1c45d7ed5_annotateKind(_self_, &(_57417_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c45d729d_annotatePtr(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _59842_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4b686ec_Ptr> _59917_pptr = _1c4b5e6c1_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_59917_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4b686ec_Ptr> _60317_ptr = _1c4b5e6c1_Ptr((*(_59842_k)).ptr());;
	(*(_self_))._field_k=(&(_59917_pptr.get()._field_Elem));
	__jule_func_result = _1c45d7ed5_annotateKind(_self_, &(_60317_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c45d75ab_annotateSptr(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _60843_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4b65210_Sptr> _60917_ssptr = _1c4b5e58e_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_60917_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4b65210_Sptr> _61317_sptr = _1c4b5e58e_Sptr((*(_60843_k)).ptr());;
	(*(_self_))._field_k=(&(_60917_ssptr.get()._field_Elem));
	__jule_func_result = _1c45d7ed5_annotateKind(_self_, &(_61317_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c45d78b9_annotateStruct(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _61845_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4aab255_StructIns> _61917_s = _1c4b604c4_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_61917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4aab255_StructIns> _62317_s2 = _1c4b604c4_Struct((*(_61845_k)).ptr());;
	if ((_61917_s.get()._field_Generics.len() != _62317_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_61917_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb818d6:;
		if (it != expr_end) {
			jule::I32 _62714_i = it - expr->begin();
			jule::Ptr<_1c47006e6_InsGeneric> _62721_g = *it;
			{
				jule::Ptr<_1c47006e6_InsGeneric> _62821_g2 = _62317_s2.get()._field_Generics[_62714_i];;
				if (_1c4622580_Equal(_62721_g.get()._field_Kind, _62821_g2.get()._field_Kind)) {
					goto _iter_next_1acb818d6;
				};
				(*(_self_))._field_k=(&(_62721_g.get()._field_Kind));
				if ((!(_1c45d7ed5_annotateKind(_self_, &(_62821_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1acb818d6:;
			++it;
			_62714_i++;
			goto _iter_begin_1acb818d6;
		}
		_iter_end_1acb818d6:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c45d7bc7_annotateAny(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _64042_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64113_kind = _1c4622272_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb8492d:;
		if (it != expr_end) {
			jule::I32 _64213_i = it - expr->begin();
			jule::Ptr<_1c4a9b630_GenericDecl> _64216_g = *it;
			{
				if ((_64113_kind != _64216_g.get()._field_Ident)) {
					goto _iter_next_1acb8492d;
				};
				jule::Ptr<_1c47006e6_InsGeneric> _64617_t = (*(_self_))._field_f.get()._field_Generics[_64213_i];;
				{
					
					if ((_64617_t == nullptr) || (_64617_t.get()._field_Kind == nullptr)) {
						_case_begin_1acb86413:;
						{
							_1c45d5a93_pushGeneric(_self_, _64042_k, _64213_i);
						}
					}
					else if ((!(_1c4622580_Equal(_64617_t.get()._field_Kind, (*(_64042_k)))))) {
						_case_begin_1acb86479:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1acb862c0:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_64042_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1acb8492d:;
			++it;
			_64213_i++;
			goto _iter_begin_1acb8492d;
		}
		_iter_end_1acb8492d:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c45d7ed5_annotateKind(_1c45d4124_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4621d32_TypeKind>* _66143_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1c45d7bc7_annotateAny(_self_, _66143_k)) {
			_case_begin_1acb88921:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c4b5e45c_Prim((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1acb88987:;
			{
				__jule_func_result = _1c45d5da1_annotatePrim(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4b5ec87_Arr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1acb889ed:;
			{
				__jule_func_result = _1c45d61ae_annotateArr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4b5eeeb_Slc((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1acb88a64:;
			{
				__jule_func_result = _1c45d64bc_annotateSlc(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4b6099c_Map((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1acb88cd9:;
			{
				__jule_func_result = _1c45d6b82_annotateMap(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4b60260_Fn((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1acb88d50:;
			{
				__jule_func_result = _1c45d6e90_annotateFn(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4b5e6c1_Ptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1acb88db6:;
			{
				__jule_func_result = _1c45d729d_annotatePtr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4b5e58e_Sptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1acb88e2c:;
			{
				__jule_func_result = _1c45d75ab_annotateSptr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4b604c4_Struct((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1acb89180:;
			{
				__jule_func_result = _1c45d78b9_annotateStruct(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1acb888aa:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1acb88855:;
	};
}



inline jule::Bool _1c45d8249_annotate(_1c45d4124_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _1c45d7ed5_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c45d4124_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1c45d903b_pushErrToken(_1c45d89db_fnCallArgChecker* _self_, jule::Ptr<_2039861ab_Token> _70631_token, jule::Str _70646_fmt, jule::Slice<jule::Any> _70659_args) {
	_1c4b0a936_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _70631_token, _70646_fmt, _70659_args);
}



inline void _1c45d935a_pushErr(_1c45d89db_fnCallArgChecker* _self_, jule::Str _71026_fmt, jule::Slice<jule::Any> _71039_args) {
	_1c45d903b_pushErrToken(_self_, (*(_self_))._field_errorToken, _71026_fmt, _71039_args);
}



inline jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>> _1c45d95be_getParams(_1c45d89db_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1c4a6c810_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _1c45d98cc_checkCounts(_1c45d89db_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>>* _72331_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _72417_n = (*(_72331_params)).len();;
	if (((_72417_n > 0LL) && _1c4a6c810_IsSelf((*(_72331_params))[0LL].get()._field_Decl.ptr()))) {
		(_72417_n)--;
	};
	jule::I32 _72917_diff = (_72417_n - (*(_self_))._field_args.len());;
	jule::Str _73017_log = jule::Str();;
	{
		
		if ((_72917_diff == 0LL)) {
			_case_begin_1acb948d8:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72417_n > 0LL) && (*(_72331_params))[(_72417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1acb951ad:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72917_diff < 0LL) || (_72917_diff > (*(_72331_params)).len()))) {
			_case_begin_1acb94cd4:;
			{
				_73017_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1acb94c6d:;
			{
				_73017_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_1acb94c07:;
	};
	jule::Str _74117_err = (*(_self_))._field_f.get()._field_Decl.get()._field_Ident;;
	(_74117_err).append("\n       wanted (", 16);
	{
		auto expr = _72331_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb92e25:;
		if (it != expr_end) {
			jule::I32 _74313_i = it - expr->begin();
			jule::Ptr<_1c4ab2b30_ParamIns> *_74316_p = it;
			{
				_74117_err+=_1c4622272_Str((*(_74316_p)).get()._field_Kind.ptr());
				if ((((*(_72331_params)).len() - _74313_i) > 1LL)) {
					(_74117_err).append(", ", 2);
				};
			}
			_iter_next_1acb92e25:;
			++it;
			_74313_i++;
			goto _iter_begin_1acb92e25;
		}
		_iter_end_1acb92e25:;
	};
	(_74117_err).append(")", 1);
	_1c45d935a_pushErr(_self_, _73017_log, jule::Slice<jule::Any>::make({jule::Any(_74117_err, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c45d9d2d_checkArg(_1c45d89db_fnCallArgChecker* _self_, jule::Ptr<_1c4ab2b30_ParamIns>* _75432_p, jule::Ptr<_1c45e6e17_Data>* _75451_arg, jule::Ptr<_2039861ab_Token>* _75468_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1c4ab5b11_parameterUsesGenerics(_75432_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=(!((*(_75432_p)).get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_1c45d4124_dynamicTypeAnnotation _75825_dta = _1c45d4124_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75432_p)), ._field_a=(*(_75451_arg)), ._field_errorToken=(*(_75468_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1c45d8249_annotate(&_75825_dta);
		};
		if ((!(__jule_func_result))) {
			_1c45d903b_pushErrToken(_self_, (*(_75468_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1c4b15ad9_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Mutable, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, _75468_errorToken)) {
		_1c4b12bc4_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, (*(_75468_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c45da1d5_push(_1c45d89db_fnCallArgChecker* _self_, jule::Ptr<_1c4ab2b30_ParamIns>* _78228_p, jule::Ptr<_1c4a93858_Expr> _78246_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4621d32_TypeKind> _78317_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _78413_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_78228_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_78228_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_78228_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_1c45e6e17_Data> _79217_d = _1c4613c8b_evalExprKind((*(_self_))._field_e, _78246_arg.get()._field_Kind);;
	(*(_self_))._field_e.get()._field_prefix=_78317_old;
	(*(_self_))._field_e.get()._field_immutable=_78413_oldImmut;
	if ((_79217_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1c45d9d2d_checkArg(_self_, _78228_p, &(_79217_d), &(_78246_arg.get()._field_Token));
	(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_79217_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _1c45da58c_pushVariadic(_1c45d89db_fnCallArgChecker* _self_, jule::Ptr<_1c4ab2b30_ParamIns>* _80636_p, jule::I32 _80654_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _80817_variadiced = false;;
	jule::Bool _80913_more = ((_80654_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1c4aac7d9_SliceExprModel> _81017_model = jule::new_ptr<_1c4aac7d9_SliceExprModel>(_1c4aac7d9_SliceExprModel{._field_ElemKind=(*(_80636_p)).get()._field_Kind, });;
	jule::Ptr<_1c4621d32_TypeKind> _81417_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _81913_variadic = (*(_80636_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_80636_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_80636_p)).get()._field_Kind.get()._field_Variadic=_81913_variadic;
	});;
	for (; (_80654_i < (*(_self_))._field_args.len()); (_80654_i)++) {
		{
			jule::Ptr<_1c4a93858_Expr> _82621_arg = (*(_self_))._field_args[_80654_i];;
			{
				auto &_match_expr{ _82621_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type82) {
					_case_begin_1acba5575:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1c4b65b6c_Slc>(_1c4b65b6c_Slc{._field_Elem=(*(_80636_p)).get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1acba5d5b:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_80636_p)).get()._field_Kind;
					}
				}
				_match_end_1acba5d06:;
			};
			jule::Ptr<_1c45e6e17_Data> _83921_d = _1c4614099_eval((*(_self_))._field_e, _82621_arg);;
			if ((_83921_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1acba49d6;
			};
			if (_83921_d.get()._field_Kind.get()._field_Variadic) {
				_80817_variadiced=true;
				(*(_80636_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1c45d9d2d_checkArg(_self_, _80636_p, &(_83921_d), &(_82621_arg.get()._field_Token)));
				{
					auto &_match_expr{ _83921_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1acba7ec3:;
						{
							_81017_model=_83921_d.get()._field_Model.cast_ptr<_1c4aac7d9_SliceExprModel>(&__jule_any_type83);
							_81017_model.get()._field_ElemKind=(*(_80636_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_1acba8c4e:;
						{
							_81017_model=nullptr;
							(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_83921_d.get()._field_Model);;
						}
					}
					_match_end_1acba8d3c:;
				};
				(_80654_i)++;
				goto _iter_end_1acba49d6;
			};
			__jule_func_result=(__jule_func_result && _1c45d9d2d_checkArg(_self_, _80636_p, &(_83921_d), &(_82621_arg.get()._field_Token)));
			_81017_model.get()._field_Elems = jule::alloc_for_append(_81017_model.get()._field_Elems,1);_81017_model.get()._field_Elems.__push(_83921_d.get()._field_Model);;
		}
	_iter_next_1acba49d6:;
	}
	_iter_end_1acba49d6:;;
	(*(_self_))._field_e.get()._field_prefix=_81417_old;
	if ((_80817_variadiced && _80913_more)) {
		_1c45d903b_pushErrToken(_self_, (*(_self_))._field_args[_80654_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81017_model != nullptr)) {
		(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(jule::Any(_81017_model, &__jule_any_type83));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c45da89a_checkArgs(_1c45d89db_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>>* _88233_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88313_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I32 _88717_i = 0LL;;
	if ((((*(_88233_params)).len() > 0LL) && _1c4a6c810_IsSelf((*(_88233_params))[0LL].get()._field_Decl.ptr()))) {
		(_88717_i)++;
	};
	_julec_label_iter:;
	while ((_88717_i < (*(_88233_params)).len())) {
		{
			jule::Ptr<_1c4ab2b30_ParamIns> _89421_p = (*(_88233_params))[_88717_i];;
			{
				
				if (_89421_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1acbb00da:;
					{
						__jule_func_result=(_1c45da58c_pushVariadic(_self_, &(_89421_p), _88717_i) && __jule_func_result);
						goto _iter_end_1acbad68d;
					}
				}
				else if (((*(_self_))._field_args.len() <= _88717_i)) {
					_case_begin_1acbae815:;
					{
						__jule_func_result=false;
						goto _iter_end_1acbad68d;
					}
				}
				else {
					_case_begin_1acbaec44:;
					{
						__jule_func_result=(_1c45da1d5_push(_self_, &(_89421_p), (*(_self_))._field_args[_88717_i]) && __jule_func_result);
					}
				}
				_match_end_1acbaebcd:;
			};
			(_88717_i)++;
		}
	_iter_next_1acbad68d:;
	}
	_iter_end_1acbad68d:;;
	(*(_self_))._field_e.get()._field_arg=_88313_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c45dab31_checkDynamicTypeAnnotation(_1c45d89db_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbb2065:;
		if (it != expr_end) {
			jule::Ptr<_1c47006e6_InsGeneric> _91416_g = *it;
			{
				if ((_91416_g == nullptr)) {
					_1c45d935a_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1acbb2065:;
			++it;
			goto _iter_begin_1acbb2065;
		}
		_iter_end_1acbb2065:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c45dada6_check(_1c45d89db_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>> _92417_params = _1c45d95be_getParams(_self_);;
	__jule_func_result=_1c45d98cc_checkCounts(_self_, &(_92417_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1c45da89a_checkArgs(_self_, &(_92417_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1c45dab31_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c45d89db_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1c45db901_pushErr(_1c45db3e5_structLitChecker* _self_, jule::Ptr<_2039861ab_Token> _94526_token, jule::Str _94541_fmt, jule::Slice<jule::Any> _94554_args) {
	_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), _94526_token, _94541_fmt, _94554_args);
}



inline void _1c45dbc20_pushSugggestion(_1c45db3e5_structLitChecker* _self_, jule::Str _95034_fmt, jule::Slice<jule::Any> _95047_args) {
	_1c45e92b0_pushSugggestion((*(_self_))._field_e.ptr(), _95034_fmt, _95047_args);
}



inline void _1c45dc0d8_pushMatch(_1c45db3e5_structLitChecker* _self_, jule::Ptr<_1c4aab068_FieldIns>* _95433_f, jule::Ptr<_1c45e6e17_Data>* _95452_d, jule::Ptr<_2039861ab_Token>* _95467_errorToken) {
	;
	if (_1c4b15ad9_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (!((*(_self_))._field_e.get()._field_immutable)), false, &((*(_95433_f)).get()._field_Kind), _95452_d, _95467_errorToken)) {
		_1c4b12bc4_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_95433_f)).get()._field_Kind), _95452_d, (*(_95467_errorToken)));
	};
	(*(_self_))._field_args = jule::alloc_for_append((*(_self_))._field_args,1);(*(_self_))._field_args.__push(jule::new_ptr<_1c4aabd49_StructArgExprModel>(_1c4aabd49_StructArgExprModel{._field_Field=(*(_95433_f)), ._field_Expr=(*(_95452_d)).get()._field_Model}));;
}



inline void _1c45dc407_checkPair(_1c45db3e5_structLitChecker* _self_, jule::Ptr<_1c4a982b9_FieldExprPair>* _96733_pair, jule::Slice<jule::Ptr<_1c4a93858_Expr>>* _96760_exprs) {
	jule::Ptr<_1c4aab068_FieldIns> _96917_f = _1c4a8a861_FindField((*(_self_))._field_s.ptr(), (*(_96733_pair)).get()._field_Field.get()._field_Kind);;
	if ((_96917_f == nullptr)) {
		_1c45db901_pushErr(_self_, (*(_96733_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_96733_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _96917_f.get()._field_Decl.get()._field_Public, _96917_f.get()._field_Decl.get()._field_Token)))) {
		_1c45db901_pushErr(_self_, (*(_96733_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_96733_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_1c45dbc20_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _96760_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbbb734:;
		if (it != expr_end) {
			jule::Ptr<_1c4a93858_Expr> _98121_expr = *it;
			{
				{
					auto &_match_expr{ _98121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1acbbc0a3:;
						{
							jule::Ptr<_1c4a982b9_FieldExprPair> _98425_dpair = _98121_expr.get()._field_Kind.cast_ptr<_1c4a982b9_FieldExprPair>(&__jule_any_type84);;
							{
								
								if (((*(_96733_pair)) == _98425_dpair)) {
									_case_begin_1acbbd02c:;
									{
										goto _iter_end_1acbbb734;
									}
								}
								else if (((*(_96733_pair)).get()._field_Field.get()._field_Kind == _98425_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1acbbd0a4:;
									{
										_1c45db901_pushErr(_self_, (*(_96733_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_96733_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_1acbbb734;
									}
								}
								_match_end_1acbbce72:;
							};
						}
					}
					_match_end_1acbbbde9:;
				};
			}
			_iter_next_1acbbb734:;
			++it;
			goto _iter_begin_1acbbb734;
		}
		_iter_end_1acbbb734:;
	};
	jule::Ptr<_1c4621d32_TypeKind> _99517_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_99517_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_96917_f.get()._field_Kind;
	jule::Ptr<_1c45e6e17_Data> _99917_d = _1c4613c8b_evalExprKind((*(_self_))._field_e, (*(_96733_pair)).get()._field_Expr.get()._field_Kind);;
	if ((_99917_d == nullptr)) {
		return;;
	};
	_1c45dc0d8_pushMatch(_self_, &(_96917_f), &(_99917_d), &((*(_96733_pair)).get()._field_Field));
}



inline jule::Bool _1c45dc715_readyExprs(_1c45db3e5_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c4a93858_Expr>>* _100634_exprs) {
	jule::Bool _100717_ok = true;;
	{
		auto expr = _100634_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbc17b1:;
		if (it != expr_end) {
			jule::I32 _100814_i = it - expr->begin();
			jule::Ptr<_1c4a93858_Expr> _100821_expr = *it;
			{
				{
					auto &_match_expr{ _100821_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1acbc2509:;
						{
							jule::Ptr<_1c4a99760_KeyValPair> _101125_pair = _100821_expr.get()._field_Kind.cast_ptr<_1c4a99760_KeyValPair>(&__jule_any_type85);;
							{
								auto &_match_expr{ _101125_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type86) {
									_case_begin_1acbc4044:;
									{
										goto _match_end_1acbc32a7;
									}
								}
								else {
									_case_begin_1acbc352c:;
									{
										_1c45db901_pushErr(_self_, _101125_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_100717_ok=false;
										goto _iter_next_1acbc17b1;
									}
								}
								_match_end_1acbc32a7:;
							};
							(*(_100634_exprs))[_100814_i].get()._field_Kind=jule::Any(jule::new_ptr<_1c4a982b9_FieldExprPair>(_1c4a982b9_FieldExprPair{._field_Field=_101125_pair.get()._field_Key.get()._field_Token, ._field_Expr=_101125_pair.get()._field_Val}), &__jule_any_type84);
						}
					}
					_match_end_1acbc2350:;
				};
			}
			_iter_next_1acbc17b1:;
			++it;
			_100814_i++;
			goto _iter_begin_1acbc17b1;
		}
		_iter_end_1acbc17b1:;
	};
	return _100717_ok;;
}



inline void _1c45dc98a_check(_1c45db3e5_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c4a93858_Expr>>* _103029_exprs) {
	if (((*(_103029_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1c45dc715_readyExprs(_self_, _103029_exprs)))) {
		return;;
	};
	jule::Bool _103717_paired = false;;
	{
		auto expr = _103029_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbc2295:;
		if (it != expr_end) {
			jule::I32 _103814_i = it - expr->begin();
			jule::Ptr<_1c4a93858_Expr> _103821_expr = *it;
			{
				{
					auto &_match_expr{ _103821_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1acbcabd8:;
						{
							jule::Ptr<_1c4a982b9_FieldExprPair> _104125_pair = _103821_expr.get()._field_Kind.cast_ptr<_1c4a982b9_FieldExprPair>(&__jule_any_type84);;
							if (((_103814_i > 0LL) && (!(_103717_paired)))) {
								_1c45db901_pushErr(_self_, _104125_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103717_paired=true;
							_1c45dc407_checkPair(_self_, &(_104125_pair), _103029_exprs);
						}
					}
					else {
						_case_begin_1acbc6552:;
						{
							if (_103717_paired) {
								_1c45db901_pushErr(_self_, _103821_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_103814_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_1c45db901_pushErr(_self_, _103821_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1acbc2295;
							};
							jule::Ptr<_1c4aab068_FieldIns> _105625_field = (*(_self_))._field_s.get()._field_Fields[_103814_i];;
							if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _105625_field.get()._field_Decl.get()._field_Public, _105625_field.get()._field_Decl.get()._field_Token)))) {
								_1c45db901_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1c45dbc20_pushSugggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1c4621d32_TypeKind> _106425_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_106425_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_105625_field.get()._field_Kind;
							jule::Ptr<_1c45e6e17_Data> _106825_d = _1c4613c8b_evalExprKind((*(_self_))._field_e, _103821_expr.get()._field_Kind);;
							if ((_106825_d == nullptr)) {
								goto _iter_next_1acbc2295;
							};
							_1c45dc0d8_pushMatch(_self_, &(_105625_field), &(_106825_d), &(_103821_expr.get()._field_Token));
						}
					}
					_match_end_1acbc63cb:;
				};
			}
			_iter_next_1acbc2295:;
			++it;
			_103814_i++;
			goto _iter_begin_1acbc2295;
		}
		_iter_end_1acbc2295:;
	};
	if ((!(_103717_paired))) {
		jule::I32 _107917_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I32 _108021_diff = (_107917_n - (*(_103029_exprs)).len());;
		{
			
			if ((_108021_diff <= 0LL)) {
				_case_begin_1acbcda98:;
				{
					return;;
				}
			}
			_match_end_1acbcd977:;
		};
		jule::Str _108621_idents = jule::Str();;
		for (; (_108021_diff > 0LL); (_108021_diff)--) {
			{
				_108621_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_107917_n - _108021_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1acbce48e:;
		}
		_iter_end_1acbce48e:;;
		(_108621_idents).mut_slice(2LL);;
		_1c45db901_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_108621_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c45db3e5_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c4b2c837_Var> _1c45dd46e_buildVar(_1c45dcec9_rangeChecker* _self_, jule::Ptr<_1c4aa1c95_VarDecl>* _110528_decl) {
	jule::Ptr<_1c4b2c837_Var> _110617_v = _1c4abb93b_buildVar((*(_110528_decl)));;
	return _110617_v;;
}



inline void _1c45dd64a_setSizeKey(_1c45dcec9_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _203988950_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_1c45dd46e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acbd2e54:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1c4b2b7e2_IterRelation>(_1c4b2b7e2_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1acbd2dee:;
	};
}



inline void _1c45dda13_checkRangeExprValidity(_1c45dcec9_rangeChecker* _self_, jule::Ptr<_1c45e6e17_Data>* _113646_d, jule::Ptr<_1c4b2c837_Var>* _113657_key, jule::Ptr<_1c4621d32_TypeKind>* _113673_k) {
	jule::Bool _113717__mut = (*(_113657_key)).get()._field_Mutable;;
	if ((_113717__mut && (!(_1c4b5cdd9_Mutable((*(_113673_k)).ptr()))))) {
		_113717__mut=false;
	};
	_1c4b15ad9_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _113717__mut, (*(_113657_key)).get()._field_Reference, &((*(_113657_key)).get()._field_Kind.get()._field_Kind), _113646_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _1c45ddbde_checkSlice(_1c45dcec9_rangeChecker* _self_) {
	_1c45dd64a_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _203988950_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c4b65b6c_Slc> _115517_slc = _1c4b5eeeb_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1c45dd46e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=_115517_slc.get()._field_Elem});
	_1c45dda13_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_115517_slc.get()._field_Elem));
}



inline void _1c45dddba_checkArray(_1c45dcec9_rangeChecker* _self_) {
	_1c45dd64a_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _203988950_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c4b67c90_Arr> _116817_arr = _1c4b5ec87_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1c45dd46e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=_116817_arr.get()._field_Elem});
	_1c45dda13_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_116817_arr.get()._field_Elem));
}



inline void _1c45de096_checkMapKeyA(_1c45dcec9_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _203988950_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c4b6719b_Map> _118017_m = _1c4b6099c_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_1c45dd46e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=_118017_m.get()._field_Key});
	jule::Ptr<_1c45e6e17_Data> _118417_d = jule::new_ptr<_1c45e6e17_Data>((*((*(_self_))._field_d)));;
	_118417_d.get()._field_Kind=_118017_m.get()._field_Key;
	_1c45dda13_checkRangeExprValidity(_self_, &(_118417_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_118017_m.get()._field_Key));
}



inline void _1c45de272_checkMapKeyB(_1c45dcec9_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _203988950_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c4b6719b_Map> _119517_m = _1c4b6099c_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1c45dd46e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=_119517_m.get()._field_Val});
	jule::Ptr<_1c45e6e17_Data> _119917_d = jule::new_ptr<_1c45e6e17_Data>((*((*(_self_))._field_d)));;
	_119917_d.get()._field_Kind=_119517_m.get()._field_Val;
	_1c45dda13_checkRangeExprValidity(_self_, &(_119917_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_119517_m.get()._field_Val));
}



inline void _1c45de44d_checkMap(_1c45dcec9_rangeChecker* _self_) {
	_1c45de096_checkMapKeyA(_self_);
	_1c45de272_checkMapKeyB(_self_);
}



inline void _1c45de629_checkStr(_1c45dcec9_rangeChecker* _self_) {
	_1c45dd64a_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _203988950_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1c45dd46e_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1c45de88d_check(_1c45dcec9_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1acbe5b6a:;
		}
		else if ((_1c4b5eeeb_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acbe5560:;
			{
				_1c45ddbde_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1c4b5ec87_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acbe55c6:;
			{
				_1c45dddba_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1c4b6099c_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acbe563c:;
			{
				_1c45de44d_checkMap(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1acbe54e9:;
			{
				jule::Ptr<_1c4b6197b_Prim> _123717_prim = _1c4b5e45c_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_123717_prim != nullptr) && _1c4b64bb0_IsStr(_123717_prim.ptr()))) {
					_1c45de629_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1acbe542d:;
	};
	_1c4b0a936_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c45dcec9_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1c45e0509_prepareTypes(_1c45e0064_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1c4ab4b21_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1c45e077e_prepareExprs(_1c45e0064_retTypeChecker* _self_, jule::Ptr<_1c4a93858_Expr>* _126536_e) {
	if (((*(_126536_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_126536_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1acbeab92:;
			{
				(*(_self_))._field_exprs=(*(_126536_e)).get()._field_Kind.cast_ptr<_1c4a944d5_TupleExpr>(&__jule_any_type87).get()._field_Expr;
			}
		}
		else {
			_case_begin_1acbead90:;
			{
				(*(_self_))._field_exprs = jule::alloc_for_append((*(_self_))._field_exprs,1);(*(_self_))._field_exprs.__push((*(_126536_e)));;
			}
		}
		_match_end_1acbea9c7:;
	};
}



inline void _1c45e095a_checkExprs(_1c45e0064_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c45e6e17_Data>> _128117_datas = jule::Slice<jule::Ptr<_1c45e6e17_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbec80e:;
		if (it != expr_end) {
			jule::I32 _128214_i = it - expr->begin();
			jule::Ptr<_1c4a93858_Expr> _128221_expr = *it;
			{
				if ((_128214_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1acbec80e;
				};
				jule::Ptr<_1c4621d32_TypeKind> _128721_t = (*(_self_))._field_types[_128214_i];;
				jule::Ptr<_1c45e6e17_Data> _128921_d = _1c46143a7_evalExpr(_1c4b123bb_evalp((*(_self_))._field_sc.get()._field_s, jule::Trait<_1c4b77c6c_Lookup>((*(_self_))._field_sc, 0), _128721_t), _128221_expr);;
				if ((_128921_d == nullptr)) {
					goto _iter_next_1acbec80e;
				};
				_128117_datas = jule::alloc_for_append(_128117_datas,1);_128117_datas.__push(_128921_d);;
				if (((!(_128921_d.get()._field_Mutable)) && _1c4b5cdd9_Mutable(_128921_d.get()._field_Kind.ptr()))) {
					_1c4b0a936_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1c45d263e_assignTypeChecker _130121_ac = _1c45d263e_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_128721_t, ._field_d=_128921_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1c45d37b6_check(&_130121_ac);
			}
			_iter_next_1acbec80e:;
			++it;
			_128214_i++;
			goto _iter_begin_1acbec80e;
		}
		_iter_end_1acbec80e:;
	};
	if ((_128117_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1c4aae324_TupleExprModel>(_1c4aae324_TupleExprModel{._field_Datas=_128117_datas}), &__jule_any_type88);
	} else if ((_128117_datas.len() == 1LL)) {
		(*(_self_))._field_model=_128117_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1c45e0c68_check(_1c45e0064_retTypeChecker* _self_, jule::Ptr<_1c4a93858_Expr>* _132029_e) {
	_1c45e0509_prepareTypes(_self_);
	_1c45e077e_prepareExprs(_self_, _132029_e);
	jule::I32 _132413_n = (*(_self_))._field_exprs.len();;
	if (((_132413_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1c4a77bc2_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_1c4b0a936_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_132413_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1c4a871ed_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_1c4b0a936_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_132413_n > (*(_self_))._field_types.len())) {
		_1c4b0a936_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_132413_n < (*(_self_))._field_types.len())) {
		_1c4b0a936_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1c45e095a_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c45e0064_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c45e260a_FindPackage(_1c45e20dd_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc08a29:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;;
				};
			}
			_iter_next_1acc08a29:;
			++it;
			goto _iter_begin_1acc08a29;
		}
		_iter_end_1acc08a29:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1c45e2918_SelectPackage(_1c45e20dd_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc09aa2:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;;
				};
			}
			_iter_next_1acc09aa2:;
			++it;
			goto _iter_begin_1acc09aa2;
		}
		_iter_end_1acc09aa2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4b2c837_Var> _1c45e2cc0_FindVar(_1c45e20dd_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _1c45e4882_findVar(_self_, _5226_ident, _5238_cppLinked, false);;
}



inline jule::Ptr<_1c4701230_TypeAlias> _1c45e3177_FindTypeAlias(_1c45e20dd_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _1c45e4cd3_findTypeAlias(_self_, _5832_ident, _5844_cppLinked, false);;
}



inline jule::Ptr<_1c4a86ebc_Struct> _1c45e352e_FindStruct(_1c45e20dd_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc0c2d0:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;;
				};
			}
			_iter_next_1acc0c2d0:;
			++it;
			goto _iter_begin_1acc0c2d0;
		}
		_iter_end_1acc0c2d0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ab22e4_Fn> _1c45e38d6_FindFn(_1c45e20dd_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc0d6cc:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;;
				};
			}
			_iter_next_1acc0d6cc:;
			++it;
			goto _iter_begin_1acc0d6cc;
		}
		_iter_end_1acc0d6cc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ac306e_Trait> _1c45e3be4_FindTrait(_1c45e20dd_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc0e898:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac306e_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;;
				};
			}
			_iter_next_1acc0e898:;
			++it;
			goto _iter_begin_1acc0e898;
		}
		_iter_end_1acc0e898:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ac5802_Enum> _1c45e4002_FindEnum(_1c45e20dd_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc10778:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac5802_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1acc10778:;
			++it;
			goto _iter_begin_1acc10778;
		}
		_iter_end_1acc10778:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c45e4310_FindTypeEnum(_1c45e20dd_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc11658:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac6dec_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;;
				};
			}
			_iter_next_1acc11658:;
			++it;
			goto _iter_begin_1acc11658;
		}
		_iter_end_1acc11658:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4b2c837_Var> _1c45e4882_findVar(_1c45e20dd_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I32 _12121_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1c4b2c837_Var> _12325_v = (*(_self_))._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;;
				};
			}
		_iter_next_1acc13627:;
		}
		_iter_end_1acc13627:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acc13193:;
			if (it != expr_end) {
				jule::Ptr<_1c4b2c837_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;;
					};
				}
				_iter_next_1acc13193:;
				++it;
				goto _iter_begin_1acc13193;
			}
			_iter_end_1acc13193:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1c4701230_TypeAlias> _1c45e4cd3_findTypeAlias(_1c45e20dd_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I32 _14021_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1c4701230_TypeAlias> _14225_ta = (*(_self_))._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;;
				};
			}
		_iter_next_1acc1674b:;
		}
		_iter_end_1acc1674b:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acc162b7:;
			if (it != expr_end) {
				jule::Ptr<_1c4701230_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;;
					};
				}
				_iter_next_1acc162b7:;
				++it;
				goto _iter_begin_1acc162b7;
			}
			_iter_end_1acc162b7:;
		};
	};
	return nullptr;;
}



inline jule::Any _1c45e518a_defByIdent(_1c45e20dd_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc18a06:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v, &__jule_any_type8);;
				};
			}
			_iter_next_1acc18a06:;
			++it;
			goto _iter_begin_1acc18a06;
		}
		_iter_end_1acc18a06:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc18066:;
		if (it != expr_end) {
			jule::Ptr<_1c4701230_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta, &__jule_any_type67);;
				};
			}
			_iter_next_1acc18066:;
			++it;
			goto _iter_begin_1acc18066;
		}
		_iter_end_1acc18066:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc198a3:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s, &__jule_any_type66);;
				};
			}
			_iter_next_1acc198a3:;
			++it;
			goto _iter_begin_1acc198a3;
		}
		_iter_end_1acc198a3:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc1b08b:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f, &__jule_any_type65);;
				};
			}
			_iter_next_1acc1b08b:;
			++it;
			goto _iter_begin_1acc1b08b;
		}
		_iter_end_1acc1b08b:;
	};
	if (_15941_cppLinked) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc1c4ee:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac306e_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t, &__jule_any_type10);;
				};
			}
			_iter_next_1acc1c4ee:;
			++it;
			goto _iter_begin_1acc1c4ee;
		}
		_iter_end_1acc1c4ee:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc1d27a:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac5802_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e, &__jule_any_type68);;
				};
			}
			_iter_next_1acc1d27a:;
			++it;
			goto _iter_begin_1acc1d27a;
		}
		_iter_end_1acc1d27a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc1db2c:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac6dec_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te, &__jule_any_type69);;
				};
			}
			_iter_next_1acc1db2c:;
			++it;
			goto _iter_begin_1acc1db2c;
		}
		_iter_end_1acc1db2c:;
	};
	return nullptr;;
}



inline jule::Bool _1c45e55db_isDuplicatedIdent(_1c45e20dd_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc1e8a8:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> *_21316_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21316_v))) != _21232_itself) && ((*(_21316_v)).get()._field_Ident == _21249_ident)) && ((*(_21316_v)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1acc1e8a8:;
			++it;
			goto _iter_begin_1acc1e8a8;
		}
		_iter_end_1acc1e8a8:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc1e864:;
		if (it != expr_end) {
			jule::Ptr<_1c4701230_TypeAlias> *_21916_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21916_ta))) != _21232_itself) && ((*(_21916_ta)).get()._field_Ident == _21249_ident)) && ((*(_21916_ta)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1acc1e864:;
			++it;
			goto _iter_begin_1acc1e864;
		}
		_iter_end_1acc1e864:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc20876:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> *_22516_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22516_s))) != _21232_itself) && ((*(_22516_s)).get()._field_Ident == _21249_ident)) && ((*(_22516_s)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1acc20876:;
			++it;
			goto _iter_begin_1acc20876;
		}
		_iter_end_1acc20876:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc21ec6:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> *_23116_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_23116_f))) != _21232_itself) && ((*(_23116_f)).get()._field_Ident == _21249_ident)) && ((*(_23116_f)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1acc21ec6:;
			++it;
			goto _iter_begin_1acc21ec6;
		}
		_iter_end_1acc21ec6:;
	};
	if (_21261_cppLinked) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc2443a:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac306e_Trait> *_24116_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24116_t))) != _21232_itself) && ((*(_24116_t)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1acc2443a:;
			++it;
			goto _iter_begin_1acc2443a;
		}
		_iter_end_1acc2443a:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc24a12:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac5802_Enum> *_24716_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24716_e))) != _21232_itself) && ((*(_24716_e)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1acc24a12:;
			++it;
			goto _iter_begin_1acc24a12;
		}
		_iter_end_1acc24a12:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc25c11:;
		if (it != expr_end) {
			jule::Ptr<_1c4ac6dec_TypeEnum> *_25316_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25316_te))) != _21232_itself) && ((*(_25316_te)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1acc25c11:;
			++it;
			goto _iter_begin_1acc25c11;
		}
		_iter_end_1acc25c11:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c45e20dd_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c45e7302_IsNil(_1c45e6e17_Data* _self_) {
	return _1c4b4629b_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1c45e7566_IsVoid(_1c45e6e17_Data* _self_) {
	return _1c4b463cd_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1c45e77ca_IsConst(_1c45e6e17_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1c45e7ad8_GoodOperand(_1c45e6e17_Data* _self_, jule::Ptr<_1c45e6e17_Data>* _10031_other) {
	if ((_1c4b5ea23_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1c4b5e45c_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_1c4b64e24_IsAny(_1c4b5e45c_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_1c4b60738_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_1c4b4629b_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1c45e6e17_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c45e7e90_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1c45e8e91_pushErr(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _1c45e92b0_pushSugggestion(_1c45e8985_Eval* _self_, jule::Str _13634_fmt, jule::Slice<jule::Any> _13647_args) {
	_1c4b0ac55_pushSugggestion((*(_self_))._field_s.ptr(), _13634_fmt, _13647_args);
}



inline void _1c45e948b_allowBuiltin(_1c45e8985_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1c45e9667_disallowBuiltin(_1c45e8985_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1c45e98cb_isUnsafe(_1c45e8985_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1c45e9b40_isGlobal(_1c45e8985_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1acc55449:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1acc54855:;
			{
				return false;;
			}
		}
		_match_end_1acc54dc7:;
	};
}



inline jule::Bool _1c45e9e1a_applyNumericPrefix(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_1c45e77ca_IsConst((*(_16342_d)).ptr())))) || (_1c4b5e45c_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1c4b6197b_Prim> _17013_prim = _1c4b5e45c_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1c3177900_IsFloat(_1c4b61cde_Str(_17013_prim.ptr()))) {
			_case_begin_1acc57638:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>((*((*(_self_))._field_prefix)));
				_1c3178c75_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1c317866a_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1c3177559_IsSigInt(_1c4b61cde_Str(_17013_prim.ptr()))) {
			_case_begin_1acc5769e:;
			{
				if ((!(_1c45ced89_sigAssignable(_1c4b61cde_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>((*((*(_self_))._field_prefix)));
				_1c317879c_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c3178406_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1c317768b_IsUnsigInt(_1c4b61cde_Str(_17013_prim.ptr()))) {
			_case_begin_1acc57715:;
			{
				if ((!(_1c45d021e_unsigAssignable(_1c4b61cde_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>((*((*(_self_))._field_prefix)));
				_1c31788ce_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c3178538_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_1acc57418:;
	};
	return true;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45ea17e_litNil(_1c45e8985_Eval* _self_) {
	jule::Ptr<_1c25bc4e9_Const> _20217_constant = static__1c2636541_NewNil();;
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type47), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45ea48c_litStr(_1c45e8985_Eval* _self_, jule::Ptr<_1c4a9488c_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_20398750e_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_1c4b5d03d_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_1c4b5d33a_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_1c25bc4e9_Const> _21817_constant = static__1c25ed30a_NewStr(_21217_s);;
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type47), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45ea79a_litBool(_1c45e8985_Eval* _self_, jule::Ptr<_1c4a9488c_LitExpr>* _23023_l) {
	jule::Ptr<_1c25bc4e9_Const> _23117_constant = static__1c25eb5d3_NewBool((*(_23023_l)).get()._field_Value.equal("true", 4));;
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_23117_constant, &__jule_any_type47), ._field_Constant=_23117_constant});;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45eaaa8_litRune(_1c45e8985_Eval* _self_, jule::Ptr<_1c4a9488c_LitExpr>* _24223_l) {
	;
	;
	jule::Str _24713_lt = (*(_24223_l)).get()._field_Value.slice(1LL, ((*(_24223_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24813_r = _1c4b46004_ToRune(static_cast<jule::Slice<jule::U8>>(_24713_lt));;
	jule::Ptr<_1c45e6e17_Data> _24917_data = jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Constant=static__1c2615e5a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24813_r)))});;
	jule::Bool _25313_isAscii = _1c4b45d7d_IsAscii(_24813_r);;
	if (_25313_isAscii) {
		_24917_data.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24917_data.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24917_data.get()._field_Mutable=true;
	_24917_data.get()._field_Model=jule::Any(jule::new_ptr<_1c4ab1667_RuneExprModel>(_1c4ab1667_RuneExprModel{._field_Code=_24813_r}), &__jule_any_type89);
	_24917_data.get()._field_IsRune=true;
	_24917_data.get()._field_untyped=true;
	return _24917_data;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45eadb6_litFloat(_1c45e8985_Eval* _self_, jule::Ptr<_1c4a9488c_LitExpr>* _27124_l) {
	;
	jule::F64 _27313_f = ({
		auto except = _1c31709b4_ParseFloat((*(_27124_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1c25bc4e9_Const> _27417_constant = static__1c2600395_NewF64(_27313_f);;
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_27417_constant, &__jule_any_type47), ._field_Constant=_27417_constant});;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45eb1c4_litInt(_1c45e8985_Eval* _self_, jule::Ptr<_1c4a9488c_LitExpr>* _28626_l) {
	;
	jule::Str _28917_lit = (*(_28626_l)).get()._field_Value;;
	jule::I32 _29017_base = 0LL;;
	{
		
		if (_1c2170cd4_HasPrefix(_28917_lit, jule::Str("0x", 2))) {
			_case_begin_1acc68dca:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=16LLU;
			}
		}
		else if (_1c2170cd4_HasPrefix(_28917_lit, jule::Str("0b", 2))) {
			_case_begin_1acc68e41:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=2LLU;
			}
		}
		else if (_1c2170cd4_HasPrefix(_28917_lit, jule::Str("0o", 2))) {
			_case_begin_1acc68ade:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=8LLU;
			}
		}
		else if (((_28917_lit[0LL] == '0') && (_28917_lit.len() > 1LL))) {
			_case_begin_1acc68b55:;
			{
				(_28917_lit).mut_slice(1LL);;
				_29017_base=8LLU;
			}
		}
		else {
			_case_begin_1acc68a78:;
			{
				_29017_base=10LLU;
			}
		}
		_match_end_1acc68a12:;
	};
	jule::Ptr<_1c45e6e17_Data> _31017_d = jule::new_ptr<_1c45e6e17_Data>();;
	jule::Bool _31217_ok = true;;
	jule::I64 _31313_sig = ({
		auto except = _1c2aa8793_ParseInt(_28917_lit, _29017_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_31217_ok=false;

			0LL;
		});
	});;
	if (_31217_ok) {
		_31017_d.get()._field_Constant=static__1c2615e5a_NewI64(_31313_sig);
		_31017_d.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _32317_unsig = ({
			auto except = _1c2c52ab3_ParseUint(_28917_lit, _29017_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1c45e8e91_pushErr(_self_, (*(_28626_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1c45e92b0_pushSugggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_31017_d.get()._field_Constant=static__1c25e7a0d_NewU64(_32317_unsig);
		_31017_d.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_31017_d.get()._field_Model=jule::Any(_31017_d.get()._field_Constant, &__jule_any_type47);
	if ((!(_1c45e9e1a_applyNumericPrefix(_self_, &(_31017_d))))) {
		_1c461cadb_fitBitsize(&(_31017_d));
	};
	_31017_d.get()._field_Mutable=true;
	_31017_d.get()._field_untyped=true;
	return _31017_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45eb4d2_litNum(_1c45e8985_Eval* _self_, jule::Ptr<_1c4a9488c_LitExpr>* _34626_l) {
	{
		
		if (_203988169_IsFloat((*(_34626_l)).get()._field_Value)) {
			_case_begin_1acc71de4:;
			{
				return _1c45eadb6_litFloat(_self_, _34626_l);;
			}
		}
		else {
			_case_begin_1acc716eb:;
			{
				return _1c45eb1c4_litInt(_self_, _34626_l);;
			}
		}
		_match_end_1acc71630:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c45eb7e0_evalLit(_1c45e8985_Eval* _self_, jule::Ptr<_1c4a9488c_LitExpr> _35526_lit) {
	{
		
		if (_1c4a94bde_IsNil(_35526_lit.ptr())) {
			_case_begin_1acc73005:;
			{
				return _1c45ea17e_litNil(_self_);;
			}
		}
		else if (_203987267_IsStr(_35526_lit.get()._field_Value)) {
			_case_begin_1acc7292d:;
			{
				return _1c45ea48c_litStr(_self_, &(_35526_lit));;
			}
		}
		else if (_203987dc2_IsBool(_35526_lit.get()._field_Value)) {
			_case_begin_1acc729a5:;
			{
				return _1c45ea79a_litBool(_self_, &(_35526_lit));;
			}
		}
		else if (_2039877a6_IsRune(_35526_lit.get()._field_Value)) {
			_case_begin_1acc72a2c:;
			{
				return _1c45eaaa8_litRune(_self_, &(_35526_lit));;
			}
		}
		else if (_203988411_IsNum(_35526_lit.get()._field_Value)) {
			_case_begin_1acc72c2a:;
			{
				return _1c45eb4d2_litNum(_self_, &(_35526_lit));;
			}
		}
		else {
			_case_begin_1acc72444:;
			{
				return nullptr;;
			}
		}
		_match_end_1acc72378:;
	};
}



inline jule::Any _1c45ebaed_findBuiltins(_1c45e8985_Eval* _self_, jule::Str _37231_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1acc79b88:;
			{
				jule::Any _37521_def = _1c461c8cc_findBuiltinsImport(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1c4aeeb28_ImportInfo>(1));;
				if ((_37521_def != nullptr)) {
					return _37521_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1acc7a10b:;
			{
				jule::Any _38021_def = _1c461d56a_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1c4b07c74_Sema>(3));;
				if ((_38021_def != nullptr)) {
					return _38021_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1acc7a172:;
			{
				jule::Any _38521_def = _1c461d56a_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1c4ad7e30_scopeChecker>(0).get()._field_s);;
				if ((_38521_def != nullptr)) {
					return _38521_def;;
				};
			}
		}
		_match_end_1acc79b33:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1c4b8266c_findBuiltinDef(_37231_ident);;
}



inline jule::Any _1c45ebea5_getDef(_1c45e8985_Eval* _self_, jule::Str _39625_ident, jule::Bool _39637_cppLinked) {
	jule::Ptr<_1c4b2c837_Var> _40117_v = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b765d9_FindVar((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40117_v != nullptr)) {
		return jule::Any(_40117_v, &__jule_any_type8);;
	};
	jule::Ptr<_1c4701230_TypeAlias> _40617_ta = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b76991_FindTypeAlias((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40617_ta != nullptr)) {
		return jule::Any(_40617_ta, &__jule_any_type67);;
	};
	if ((!(_39637_cppLinked))) {
		jule::Ptr<_1c4ac5802_Enum> _41221_enm = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b7781b_FindEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41221_enm != nullptr)) {
			return jule::Any(_41221_enm, &__jule_any_type68);;
		};
		jule::Ptr<_1c4ac6dec_TypeEnum> _41721_tenm = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b77b29_FindTypeEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41721_tenm != nullptr)) {
			return jule::Any(_41721_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_1c4ab22e4_Fn> _42317_f = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b77200_FindFn((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42317_f != nullptr)) {
		return jule::Any(_42317_f, &__jule_any_type65);;
	};
	jule::Ptr<_1c4a86ebc_Struct> _42817_s = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b76d48_FindStruct((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42817_s != nullptr)) {
		return jule::Any(_42817_s, &__jule_any_type66);;
	};
	return _1c45ebaed_findBuiltins(_self_, _39625_ident);;
}



inline void _1acc912a9_pushReference(_1c45e8985_Eval* _self_, jule::Ptr<_1c4ab39ee_FnIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1acc959ea:;
			{
				jule::Ptr<_1c4ad7e30_scopeChecker> _43921_sc = _1c4adb2da_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c4ad7e30_scopeChecker>(0));;
				if ((!(_1acc9391b_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1c4ab75c4_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1acc92662:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_1acc9391b_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1c4ab75c4_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1acc9260c:;
	};
}

inline void _1acca4d39_pushReference(_1c45e8985_Eval* _self_, jule::Ptr<_1c4b2c837_Var>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1acca9349:;
			{
				jule::Ptr<_1c4ad7e30_scopeChecker> _43921_sc = _1c4adb2da_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c4ad7e30_scopeChecker>(0));;
				if ((!(_1acca7413_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1c4ab75c4_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1acca6159:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_1acca7413_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1c4ab75c4_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1acca6104:;
	};
}

inline void _1acd44bed_pushReference(_1c45e8985_Eval* _self_, jule::Ptr<_1c4aab255_StructIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1acd45d86:;
			{
				jule::Ptr<_1c4ad7e30_scopeChecker> _43921_sc = _1c4adb2da_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c4ad7e30_scopeChecker>(0));;
				if ((!(_1acd473b5_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1c4ab75c4_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1acd4610b:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_1acd473b5_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1c4ab75c4_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1acd460a6:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c45ec538__evalEnum(_1c45e8985_Eval* _self_, jule::Ptr<_1c4ac5802_Enum> _45028_enm) {
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_45028_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45ec8e0_evalEnum(_1c45e8985_Eval* _self_, jule::Ptr<_1c4ac5802_Enum> _45931_enm, jule::Ptr<_2039861ab_Token> _45943_errorToken) {
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), _45931_enm.get()._field_Public, _45931_enm.get()._field_Token)))) {
		_1c45e8e91_pushErr(_self_, _45943_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_45931_enm.get()._field_Ident, &__jule_any_type5)}));
		_1c45e92b0_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c45ec538__evalEnum(_self_, _45931_enm);;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45ecbed__evalTypeEnum(_1c45e8985_Eval* _self_, jule::Ptr<_1c4ac6dec_TypeEnum> _46832_enm) {
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_46832_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45ed0a5_evalTypeEnum(_1c45e8985_Eval* _self_, jule::Ptr<_1c4ac6dec_TypeEnum> _47735_enm, jule::Ptr<_2039861ab_Token> _47751_errorToken) {
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), _47735_enm.get()._field_Public, _47735_enm.get()._field_Token)))) {
		_1c45e8e91_pushErr(_self_, _47751_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_47735_enm.get()._field_Ident, &__jule_any_type5)}));
		_1c45e92b0_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c45ecbed__evalTypeEnum(_self_, _47735_enm);;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45ed3b3__evalStruct(_1c45e8985_Eval* _self_, jule::Ptr<_1c4aab255_StructIns> _48630_s) {
	jule::Ptr<_1c45e6e17_Data> _48717_d = jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_48630_s, 0)}), ._field_Model=jule::Any(_48630_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_48630_s.get()._field_Decl != nullptr) && _48630_s.get()._field_Decl.get()._field_CppLinked)) {
		_48717_d.get()._field_Kind.get()._field_CppIdent=_48630_s.get()._field_Decl.get()._field_Ident;
	};
	return _48717_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45ed76a_evalStruct(_1c45e8985_Eval* _self_, jule::Ptr<_1c4aab255_StructIns> _50033_s, jule::Ptr<_2039861ab_Token> _50048_errorToken) {
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), _50033_s.get()._field_Decl.get()._field_Public, _50033_s.get()._field_Decl.get()._field_Token)))) {
		_1c45e8e91_pushErr(_self_, _50048_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_50033_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_1c45e92b0_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c45edd97_checkDeprecated(_self_, &(_50033_s.get()._field_Decl.get()._field_Directives), _50048_errorToken);
	return _1c45ed3b3__evalStruct(_self_, _50033_s);;
}



inline jule::Ptr<_1c45e6e17_Data> _1c45eda78_evalFnIns(_1c45e8985_Eval* _self_, jule::Ptr<_1c4ab39ee_FnIns> _51028_f) {
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_51028_f, 1)}), ._field_Model=jule::Any(_51028_f, &__jule_any_type7), });;
}



inline void _1c45edd97_checkDeprecated(_1c45e8985_Eval* _self_, jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>* _51939_directives, jule::Ptr<_2039861ab_Token> _51970_tok) {
	if (_1c45e98cb_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1c4a5ad81_Directive> _52413_d = _1c461c547_findDirective(_51939_directives, jule::Str("deprecated", 10));;
	if ((_52413_d != nullptr)) {
		if ((_52413_d.get()._field_Args.len() == 0LL)) {
			_1c45e8e91_pushErr(_self_, _51970_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_1c45e8e91_pushErr(_self_, _51970_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_52413_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_1c45e92b0_pushSugggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c45ee24e_evalFn(_1c45e8985_Eval* _self_, jule::Ptr<_1c4ab22e4_Fn> _53529_f, jule::Ptr<_2039861ab_Token> _53537_errorToken) {
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), _53529_f.get()._field_Public, _53529_f.get()._field_Token)))) {
		_1c45e8e91_pushErr(_self_, _53537_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_53529_f.get()._field_Ident, &__jule_any_type5)}));
		_1c45e92b0_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c45edd97_checkDeprecated(_self_, &(_53529_f.get()._field_Directives), _53537_errorToken);
	jule::Ptr<_1c4ab39ee_FnIns> _54417_ins = _1c4ab24d1_instance(_53529_f);;
	_1acc912a9_pushReference(_self_, &(_54417_ins));
	return _1c45eda78_evalFnIns(_self_, _54417_ins);;
}



inline void _1c45ee617_pushIllegalCycleError(_1c45e8985_Eval* _self_, jule::Ptr<_1c4b2c837_Var>* _54941_v1, jule::Ptr<_1c4b2c837_Var>* _54952_v2, jule::Str* _54967_message) {
	;
	jule::Str _55113_refers_to = _1c2220d40_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_54941_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_54952_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_54967_message))).buffer.insert(0, (((_1c2171697_Repeat(jule::Str(" ", 1), 7LL) + _55113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c45ee9be_checkCrossCycle(_1c45e8985_Eval* _self_, jule::Ptr<_1c4b2c837_Var>* _55535_v, jule::Str* _55549_message) {
	{
		auto expr = &((*(_55535_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc988dd:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> *_55616_d = it;
			{
				if (((*(_55616_d)) == (*(_self_))._field_owner)) {
					_1c45ee617_pushIllegalCycleError(_self_, _55535_v, _55616_d, _55549_message);
					return false;;
				};
				if ((!(_1c45ee9be_checkCrossCycle(_self_, _55616_d, _55549_message)))) {
					_1c45ee617_pushIllegalCycleError(_self_, _55535_v, _55616_d, _55549_message);
					return false;;
				};
			}
			_iter_next_1acc988dd:;
			++it;
			goto _iter_begin_1acc988dd;
		}
		_iter_end_1acc988dd:;
	};
	return true;;
}



inline jule::Bool _1c45eed76_checkIllegalCycles(_1c45e8985_Eval* _self_, jule::Ptr<_1c4b2c837_Var>* _57442_v, jule::Ptr<_2039861ab_Token> _57451_decl_token) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_owner == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_57442_v)))) {
		_1c45e8e91_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _58617_message = jule::Str();;
	if ((!(_1c45ee9be_checkCrossCycle(_self_, _57442_v, &(_58617_message))))) {
		jule::Str _58921_errMsg = _58617_message;;
		_58617_message=jule::Str();
		_1c45ee617_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _57442_v, &(_58617_message));
		_58921_errMsg+=_58617_message;
		_1c45e8e91_pushErr(_self_, _57451_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_58921_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*(_self_))._field_owner.get()._field_Depends = jule::alloc_for_append((*(_self_))._field_owner.get()._field_Depends,1);(*(_self_))._field_owner.get()._field_Depends.__push((*(_57442_v)));;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c460022d_evalVar(_1c45e8985_Eval* _self_, jule::Ptr<_1c4b2c837_Var> _60130_v, jule::Ptr<_2039861ab_Token> _60139_errorToken) {
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), _60130_v.get()._field_Public, _60130_v.get()._field_Token)))) {
		_1c45e8e91_pushErr(_self_, _60139_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_60130_v.get()._field_Ident, &__jule_any_type5)}));
		_1c45e92b0_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c45edd97_checkDeprecated(_self_, &(_60130_v.get()._field_Directives), _60139_errorToken);
	_60130_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1acca0c25:;
			{
				jule::Bool _61517_ok = _1c45eed76_checkIllegalCycles(_self_, &(_60130_v), _60139_errorToken);;
				if ((!(_61517_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1acca0cd0:;
			{
				if (((!(_60130_v.get()._field_Reference)) || _1c45e98cb_isUnsafe(_self_))) {
					goto _match_end_1acca0bc0;
				};
				jule::Ptr<_1c4ad7e30_scopeChecker> _62321_s = (*(_self_))._field_lookup.cast_ptr<_1c4ad7e30_scopeChecker>(0);;
				while (((_62321_s.get()._field_owner == nullptr) && (_62321_s.get()._field_parent != nullptr))) {
					{
						_62321_s=_62321_s.get()._field_parent;
					}
				_iter_next_1acca2cb0:;
				}
				_iter_end_1acca2cb0:;;
				if ((((_62321_s.get()._field_owner != nullptr) && _62321_s.get()._field_owner.get()._field_Anon) && (_60130_v.get()._field_Scope != _62321_s.get()._field_owner.get()._field_Scope))) {
					_1c45e8e91_pushErr(_self_, _60139_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_60130_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_1acca0bc0:;
	};
	if ((_60130_v.get()._field_Scope == nullptr)) {
		_1acca4d39_pushReference(_self_, &(_60130_v));
	};
	if (((!(_60130_v.get()._field_CppLinked)) && ((_60130_v.get()._field_Value == nullptr) || (_60130_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_60130_v.get()._field_Constant) {
			_1c4b24c6e_checkTypeVar((*(_self_))._field_s, &(_60130_v), jule::Trait<_1c4b77c6c_Lookup>((*(_self_))._field_s, 3));
			if ((_60130_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;;
			};
		};
	};
	if (((_60130_v.get()._field_Kind == nullptr) || (_60130_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_60130_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1c4b24c6e_checkTypeVar((*(_self_))._field_s, &(_60130_v), (*(_self_))._field_lookup);
		if (((_60130_v.get()._field_Kind == nullptr) || (_60130_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_1c45e6e17_Data> _66617_d = jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=_60130_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_60130_v.get()._field_Mutable, ._field_Reference=_60130_v.get()._field_Reference, ._field_Lvalue=(!(_60130_v.get()._field_Constant)), ._field_Model=jule::Any(_60130_v, &__jule_any_type8), });;
	if ((((!(_60130_v.get()._field_CppLinked)) && _1c4b2cc00_IsInitialized(_60130_v.ptr())) && (_60130_v.get()._field_Value.get()._field_Data != nullptr))) {
		_66617_d.get()._field_IsRune=_60130_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_60130_v.get()._field_Constant && (_60130_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_66617_d.get()._field_Constant=jule::new_ptr<_1c25bc4e9_Const>((*(_60130_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_66617_d.get()._field_Model=jule::Any(_66617_d.get()._field_Constant, &__jule_any_type47);
		if (_1c4b2d1c8_untypedConstant(_60130_v.ptr())) {
			_1c45e9e1a_applyNumericPrefix(_self_, &(_66617_d));
			_66617_d.get()._field_untyped=true;
		};
	};
	return _66617_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c46005d5_evalTypeAlias(_1c45e8985_Eval* _self_, jule::Ptr<_1c4701230_TypeAlias> _69036_ta, jule::Ptr<_2039861ab_Token> _69052_errorToken) {
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), _69036_ta.get()._field_Public, _69036_ta.get()._field_Token)))) {
		_1c45e8e91_pushErr(_self_, _69052_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_69036_ta.get()._field_Ident, &__jule_any_type5)}));
		_1c45e92b0_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_69036_ta.get()._field_Used=true;
	jule::Trait<_1c46218c0_Kind> _69917_kind = _69036_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1c45e6e17_Data> _70017_d = nullptr;;
	{
		auto &_match_expr{ _69917_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1accb5e5a:;
			{
				_70017_d=_1c45ed3b3__evalStruct(_self_, _69917_kind.cast_ptr<_1c4aab255_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1accb4a3b:;
			{
				_70017_d=_1c45ec538__evalEnum(_self_, _69917_kind.cast_ptr<_1c4ac5802_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1accb4aa2:;
			{
				_70017_d=_1c45ecbed__evalTypeEnum(_self_, _69917_kind.cast_ptr<_1c4ac6dec_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1accb491a:;
			{
				_70017_d=jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=_69036_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_69036_ta.get()._field_CppLinked) {
					_70017_d.get()._field_Kind.get()._field_CppIdent=_69036_ta.get()._field_Ident;
				} else {
					_70017_d.get()._field_Kind.get()._field_CppIdent=_69036_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_70017_d.get()._field_Model=jule::Any(_70017_d.get()._field_Kind, &__jule_any_type90);
			}
		}
		_match_end_1accb48b5:;
	};
	_70017_d.get()._field_Kind.get()._field_Generic=_69036_ta.get()._field_Generic;
	return _70017_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c460098c_evalDef(_1c45e8985_Eval* _self_, jule::Any _72630_def, jule::Ptr<_2039861ab_Token> _72640_ident) {
	{
		auto &_match_expr{ _72630_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1accb86dd:;
			{
				return _1c460022d_evalVar(_self_, _72630_def.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1accb8754:;
			{
				return _1c45ec8e0_evalEnum(_self_, _72630_def.cast_ptr<_1c4ac5802_Enum>(&__jule_any_type68), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1accb87ba:;
			{
				return _1c45ed0a5_evalTypeEnum(_self_, _72630_def.cast_ptr<_1c4ac6dec_TypeEnum>(&__jule_any_type69), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1accb8842:;
			{
				return _1c45ed76a_evalStruct(_self_, _1c4a6ad91_instance(_72630_def.cast_ptr<_1c4a86ebc_Struct>(&__jule_any_type66)), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1accb88a8:;
			{
				jule::Ptr<_1c4ab22e4_Fn> _73721_f = _72630_def.cast_ptr<_1c4ab22e4_Fn>(&__jule_any_type65);;
				if ((!_73721_f.get()._field_Ident.equal("init", 4))) {
					return _1c45ee24e_evalFn(_self_, _73721_f, _72640_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1accb891e:;
			{
				return _1c45eda78_evalFnIns(_self_, _72630_def.cast_ptr<_1c4ab39ee_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1accb8996:;
			{
				return _1c46005d5_evalTypeAlias(_self_, _72630_def.cast_ptr<_1c4701230_TypeAlias>(&__jule_any_type67), _72640_ident);;
			}
		}
		_match_end_1accb8600:;
	};
	_1c45e8e91_pushErr(_self_, _72640_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_72640_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4600c9a_evalIdent(_1c45e8985_Eval* _self_, jule::Ptr<_1c4a95519_IdentExpr> _75028_ident) {
	jule::Any _75117_def = _1c45ebea5_getDef(_self_, _75028_ident.get()._field_Ident, _75028_ident.get()._field_CppLinked);;
	return _1c460098c_evalDef(_self_, _75117_def, _75028_ident.get()._field_Token);;
}



inline jule::Ptr<_1c45e6e17_Data> _1c46010a8_evalUnary(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a95c23_UnaryExpr> _75533_u) {
	_1c461482a_unaryEval _75617_unary = static__1c4614cd1_new(_self_);;
	return _1c4616079_eval(&_75617_unary, _75533_u);;
}



inline jule::Ptr<_1c45e6e17_Data> _1c46013b6_evalVariadic(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a960ca_VariadicExpr> _76036_v) {
	if ((_76036_v.get()._field_Expr == nullptr)) {
		_1c45e8e91_pushErr(_self_.ptr(), _76036_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4621d32_TypeKind> _76617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_76617_prefix;
	});;
	jule::Ptr<_1c45e6e17_Data> _77017_d = _1c4613c8b_evalExprKind(_self_, _76036_v.get()._field_Expr.get()._field_Kind);;
	if ((_77017_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c4b5e32a_Variadicable(_77017_d.get()._field_Kind.ptr())))) {
		_1c45e8e91_pushErr(_self_.ptr(), _76036_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_77017_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4b65b6c_Slc> _78013_slc = _1c4b5eeeb_Slc(_77017_d.get()._field_Kind.ptr());;
	_77017_d.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_CppIdent=_78013_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_78013_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_78013_slc.get()._field_Elem.get()._field_Kind});
	return _77017_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c46016c4_evalUnsafe(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a95096_UnsafeExpr> _79034_u) {
	jule::Bool _79113_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1c45e6e17_Data> _79317_d = _1c4613c8b_evalExprKind(_self_, _79034_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_79113_unsafety;
	return _79317_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c46019d2_evalArr(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a99e47_SliceExpr> _79831_s) {
	jule::Ptr<_1c4b67c90_Arr> _80017_pt = _1c4b5ec87_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1c4b67c90_Arr> _80217_arr = jule::new_ptr<_1c4b67c90_Arr>(_1c4b67c90_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_80017_pt.get()._field_Elem});;
	jule::Bool _80817_filled = false;;
	if ((_79831_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79831_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1accc74cc:;
				{
					if ((_79831_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1c4a960ca_VariadicExpr>(&__jule_any_type82).get()._field_Expr != nullptr)) {
						goto _match_end_1accc7477;
					};
					if (_80017_pt.get()._field_Auto) {
						_1c45e8e91_pushErr(_self_.ptr(), _79831_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_80817_filled=true;
					_79831_s.get()._field_Exprs=_79831_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1accc7477:;
		};
	};
	_80217_arr.get()._field_N=static_cast<jule::I32>(_79831_s.get()._field_Exprs.len());
	if ((!(_80017_pt.get()._field_Auto))) {
		if ((_80217_arr.get()._field_N > _80017_pt.get()._field_N)) {
			_1c45e8e91_pushErr(_self_.ptr(), _79831_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_80217_arr.get()._field_N < _80017_pt.get()._field_N)) {
			_80217_arr.get()._field_N=_80017_pt.get()._field_N;
		};
	};
	jule::Ptr<_1c4aadc5d_ArrayExprModel> _83717_model = jule::new_ptr<_1c4aadc5d_ArrayExprModel>(_1c4aadc5d_ArrayExprModel{._field_Kind=_80217_arr, });;
	if (_80817_filled) {
		_83717_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_83717_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _79831_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1c4621d32_TypeKind> _84617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_80217_arr.get()._field_Elem;
	{
		auto expr = &(_79831_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acccc009:;
		if (it != expr_end) {
			jule::Ptr<_1c4a93858_Expr> _84821_elem = *it;
			{
				jule::Ptr<_1c45e6e17_Data> _84921_d = _1c4613c8b_evalExprKind(_self_, _84821_elem.get()._field_Kind);;
				if ((_84921_d == nullptr)) {
					goto _iter_next_1acccc009;
				};
				_1c4b12bc4_checkAssignType(_self_.get()._field_s, false, &(_80217_arr.get()._field_Elem), &(_84921_d), _79831_s.get()._field_Token);
				_83717_model.get()._field_Elems = jule::alloc_for_append(_83717_model.get()._field_Elems,1);_83717_model.get()._field_Elems.__push(_84921_d.get()._field_Model);;
			}
			_iter_next_1acccc009:;
			++it;
			goto _iter_begin_1acccc009;
		}
		_iter_end_1acccc009:;
	};
	_self_.get()._field_prefix=_84617_prefix;
	if (_80817_filled) {
		_83717_model.get()._field_Elems = jule::alloc_for_append(_83717_model.get()._field_Elems,1);_83717_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_80217_arr, 11)}), ._field_Mutable=true, ._field_Model=jule::Any(_83717_model, &__jule_any_type91), });;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4601e33_evalExpSlc(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a99e47_SliceExpr> _87334_s, jule::Ptr<_1c4621d32_TypeKind> _87353_t, jule::Any _87371_first) {
	jule::Ptr<_1c4b65b6c_Slc> _87417_slc = jule::new_ptr<_1c4b65b6c_Slc>(_1c4b65b6c_Slc{._field_Elem=_87353_t});;
	jule::I32 _87817_i = 0LL;;
	jule::Ptr<_1c4aac7d9_SliceExprModel> _87917_model = jule::new_ptr<_1c4aac7d9_SliceExprModel>(_1c4aac7d9_SliceExprModel{._field_ElemKind=_87353_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _87334_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_87371_first != nullptr)) {
		_87917_model.get()._field_Elems = jule::alloc_for_append(_87917_model.get()._field_Elems,1);_87917_model.get()._field_Elems.__push(_87371_first);;
		_87817_i=1LL;
	};
	jule::Ptr<_1c4621d32_TypeKind> _88817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_87417_slc.get()._field_Elem;
	{
		auto expr = _87334_s.get()._field_Exprs.slice(_87817_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1accd2be1:;
		if (it != expr_end) {
			jule::Ptr<_1c4a93858_Expr> _89021_elem = *it;
			{
				jule::Ptr<_1c45e6e17_Data> _89121_d = _1c4613c8b_evalExprKind(_self_, _89021_elem.get()._field_Kind);;
				if ((_89121_d == nullptr)) {
					goto _iter_next_1accd2be1;
				};
				_1c4b12bc4_checkAssignType(_self_.get()._field_s, false, &(_87417_slc.get()._field_Elem), &(_89121_d), _87334_s.get()._field_Token);
				_87917_model.get()._field_Elems = jule::alloc_for_append(_87917_model.get()._field_Elems,1);_87917_model.get()._field_Elems.__push(_89121_d.get()._field_Model);;
			}
			_iter_next_1accd2be1:;
			++it;
			goto _iter_begin_1accd2be1;
		}
		_iter_end_1accd2be1:;
	};
	_self_.get()._field_prefix=_88817_prefix;
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_87417_slc, 8)}), ._field_Mutable=true, ._field_Model=jule::Any(_87917_model, &__jule_any_type83), });;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4602241_evalSliceExpr(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a99e47_SliceExpr> _90937_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1c4b5ec87_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1accd582b:;
				{
					return _1c46019d2_evalArr(_self_, _90937_s);;
				}
			}
			else if ((_1c4b5eeeb_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1accd58a3:;
				{
					jule::Ptr<_1c4b65b6c_Slc> _91525_pt = _1c4b5eeeb_Slc(_self_.get()._field_prefix.ptr());;
					return _1c4601e33_evalExpSlc(_self_, _90937_s, _91525_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_1accd571b:;
		};
	};
	jule::Ptr<_1c4621d32_TypeKind> _92017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_90937_s.get()._field_Exprs.len() == 0LL)) {
		_1c45e8e91_pushErr(_self_.ptr(), _90937_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c45e6e17_Data> _92817_firstElem = _1c4613c8b_evalExprKind(_self_, _90937_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_92817_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c45e6e17_Data> _93317_d = _1c4601e33_evalExpSlc(_self_, _90937_s, _92817_firstElem.get()._field_Kind, _92817_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_92017_prefix;
	return _93317_d;;
}



inline void _1c4602582_checkIntegerIndexingByData(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data>* _93950_d, jule::Ptr<_2039861ab_Token> _93960_token) {
	jule::Str _94013_err_key = _1c461e9de_checkDataForIntegerIndexing(_93950_d);;
	{
		auto &_match_expr{ _94013_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1accda798:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1accdac82:;
			{
				_1c45e8e91_pushErr(_self_, _93960_token, _94013_err_key, jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_93950_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1accdab1c:;
			{
				_1c45e8e91_pushErr(_self_, _93960_token, _94013_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1accdaa40:;
	};
}



inline void _1c460295b_indexingPtr(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data>* _95135_d, jule::Ptr<_1c45e6e17_Data>* _95150_index, jule::Ptr<_1c4a9a7b6_IndexingExpr>* _95165_i) {
	_1c4602582_checkIntegerIndexingByData(_self_, _95150_index, (*(_95165_i)).get()._field_Token);
	jule::Ptr<_1c4b686ec_Ptr> _95417_ptr = _1c4b5e6c1_Ptr((*(_95135_d)).get()._field_Kind.ptr());;
	{
		
		if (_1c4b691c0_IsUnsafe(_95417_ptr.ptr())) {
			_case_begin_1accdd416:;
			{
				_1c45e8e91_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1c45e98cb_isUnsafe(_self_)))) {
			_case_begin_1accdd47c:;
			{
				_1c45e8e91_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1accdd2e5:;
	};
	(*(_95135_d)).get()._field_Kind=_95417_ptr.get()._field_Elem;
}



inline void _1c4602d24_indexingArr(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data>* _96635_d, jule::Ptr<_1c45e6e17_Data>* _96650_index, jule::Ptr<_1c4a9a7b6_IndexingExpr>* _96665_i) {
	jule::Ptr<_1c4b67c90_Arr> _96717_arr = _1c4b5ec87_Arr((*(_96635_d)).get()._field_Kind.ptr());;
	(*(_96635_d)).get()._field_Kind=_96717_arr.get()._field_Elem;
	_1c4602582_checkIntegerIndexingByData(_self_, _96650_index, (*(_96665_i)).get()._field_Token);
	if ((_1c45e77ca_IsConst((*(_96650_index)).ptr()) && (_1c317866a_AsF64((*(_96650_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_96717_arr.get()._field_N)))) {
		_1c45e8e91_pushErr(_self_, (*(_96665_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1c46031dc_indexingSlc(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data>* _97535_d, jule::Ptr<_1c45e6e17_Data>* _97550_index, jule::Ptr<_1c4a9a7b6_IndexingExpr>* _97565_i) {
	jule::Ptr<_1c4b65b6c_Slc> _97617_slc = _1c4b5eeeb_Slc((*(_97535_d)).get()._field_Kind.ptr());;
	(*(_97535_d)).get()._field_Kind=_97617_slc.get()._field_Elem;
	_1c4602582_checkIntegerIndexingByData(_self_, _97550_index, (*(_97565_i)).get()._field_Token);
	if ((!(_1c45e77ca_IsConst((*(_97550_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_97535_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1acce3b47:;
			{
				jule::Ptr<_1c4aac7d9_SliceExprModel> _98621_m = (*(_97535_d)).get()._field_Model.cast_ptr<_1c4aac7d9_SliceExprModel>(&__jule_any_type83);;
				jule::F64 _98717_indx = _1c317866a_AsF64((*(_97550_index)).get()._field_Constant.ptr());;
				if ((_98717_indx >= static_cast<jule::F64>(_98621_m.get()._field_Elems.len()))) {
					_1c45e8e91_pushErr(_self_, (*(_97565_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_97535_d)).get()._field_Model=_98621_m.get()._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_98717_indx))];
					(*(_97535_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_1acce3aae:;
	};
}



inline void _1c46035a5_indexingMap(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data>* _99735_d, jule::Ptr<_1c45e6e17_Data>* _99750_index, jule::Ptr<_1c4a9a7b6_IndexingExpr>* _99769_i) {
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1c4b6719b_Map> _100117_m = _1c4b6099c_Map((*(_99735_d)).get()._field_Kind.ptr());;
	_1c45d263e_assignTypeChecker _100217_atc = _1c45d263e_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_100117_m.get()._field_Key, ._field_d=(*(_99750_index)), ._field_errorToken=(*(_99769_i)).get()._field_Token};;
	_1c45d37b6_check(&_100217_atc);
	(*(_99735_d)).get()._field_Kind=_100117_m.get()._field_Val;
}



inline void _1c460396d_indexingStr(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data>* _101235_d, jule::Ptr<_1c45e6e17_Data>* _101250_index, jule::Ptr<_1c4a9a7b6_IndexingExpr>* _101265_i) {
	;
	(*(_101235_d)).get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("u8", 2)), 6)});
	if (((*(_101250_index)) == nullptr)) {
		return;;
	};
	_1c4602582_checkIntegerIndexingByData(_self_, _101250_index, (*(_101265_i)).get()._field_Token);
	if ((!(_1c45e77ca_IsConst((*(_101250_index)).ptr())))) {
		(*(_101235_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_1c45e77ca_IsConst((*(_101235_d)).ptr())) {
		jule::Ptr<_2039861ab_Token> _102817_errorToken = (*(_101265_i)).get()._field_Token;;
		jule::I64 _102917_j = _1c3178406_AsI64((*(_101250_index)).get()._field_Constant.ptr());;
		jule::Str _103017_s = _1c3178192_ReadStr((*(_101235_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I32>(_102917_j) >= _103017_s.len())) {
			_1c45e8e91_pushErr(_self_, _102817_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1c31788ce_SetU64((*(_101235_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_103017_s[static_cast<jule::I32>(_102917_j)])));
		};
	};
}



inline void _1c4603d36_toIndexing(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data>* _103934_d, jule::Ptr<_1c45e6e17_Data>* _103949_index, jule::Ptr<_1c4a9a7b6_IndexingExpr>* _103968_i) {
	{
		
		if ((_1c4b5e6c1_Ptr((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acced6bd:;
			{
				_1c460295b_indexingPtr(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1c4b5ec87_Arr((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acced745:;
			{
				_1c4602d24_indexingArr(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1c4b5eeeb_Slc((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acced7bc:;
			{
				_1c46031dc_indexingSlc(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1c4b6099c_Map((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acced844:;
			{
				_1c46035a5_indexingMap(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1c4b5e45c_Prim((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acced8bb:;
			{
				jule::Ptr<_1c4b6197b_Prim> _105417_prim = _1c4b5e45c_Prim((*(_103934_d)).get()._field_Kind.ptr());;
				{
					
					if (_1c4b64bb0_IsStr(_105417_prim.ptr())) {
						_case_begin_1acd026c2:;
						{
							_1c460396d_indexingStr(_self_, _103934_d, _103949_index, _103968_i);
							return;;
						}
					}
					_match_end_1acd02628:;
				};
			}
		}
		_match_end_1acced57a:;
	};
	_1c45e8e91_pushErr(_self_, (*(_103968_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_103934_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _1c46042a9_pushGenericsFromExprSubIdent(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a96cac_SubIdentExpr>* _106453_sexpr, jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>* _106514_generics, jule::Ptr<_1c4a93858_Expr>* _106542_expr) {
	jule::Ptr<_1c4a9004c_SubIdentTypeDecl> _106617_t = jule::new_ptr<_1c4a9004c_SubIdentTypeDecl>();;
	if ((!(_1c46207ae_pushSubIdentFromExpr(jule::Any((*(_106453_sexpr)), &__jule_any_type92), &(_106617_t))))) {
		_1c45e8e91_pushErr(_self_.ptr(), (*(_106542_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	(*(_106514_generics)) = jule::alloc_for_append((*(_106514_generics)),1);(*(_106514_generics)).__push(jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Kind=jule::Any(_106617_t, &__jule_any_type93)}));;
	return true;;
}



inline jule::Bool _1c4604672_pushGenericsFromData(jule::Ptr<_1c45e8985_Eval> _self_, jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>* _107545_generics, jule::Ptr<_1c4a93858_Expr>* _107573_expr) {
	{
		auto &_match_expr{ (*(_107573_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1acd064d9:;
			{
				jule::Ptr<_1c4a95c23_UnaryExpr> _107821_u = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1c4a95c23_UnaryExpr>(&__jule_any_type94);;
				{
					auto &_match_expr{ _107821_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_1acd06bc1:;
						{
							jule::Ptr<_1c4a911b3_PtrTypeDecl> _108125_kind = jule::new_ptr<_1c4a911b3_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _108225__generics = jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>::alloc(0LL, 1LL);;
							_1c4604672_pushGenericsFromData(_self_, &(_108225__generics), &(_107821_u.get()._field_Expr));
							_108125_kind.get()._field_Elem=_108225__generics[0LL];
							(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=(*(_107573_expr)).get()._field_Token, ._field_Kind=jule::Any(_108125_kind, &__jule_any_type78)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_1acd07d15:;
						{
							jule::Ptr<_1c4a906e0_SptrTypeDecl> _109025_kind = jule::new_ptr<_1c4a906e0_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _109125__generics = jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>::alloc(0LL, 1LL);;
							_1c4604672_pushGenericsFromData(_self_, &(_109125__generics), &(_107821_u.get()._field_Expr));
							_109025_kind.get()._field_Elem=_109125__generics[0LL];
							(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=(*(_107573_expr)).get()._field_Token, ._field_Kind=jule::Any(_109025_kind, &__jule_any_type79)}));;
						}
					}
					else {
						_case_begin_1acd073b9:;
						{
							_1c45e8e91_pushErr(_self_.ptr(), _107821_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1acd07144:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1acd06550:;
			{
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push((*(_107573_expr)).get()._field_Kind.cast_ptr<_1c4a8e337_TypeDecl>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1acd06330:;
			{
				jule::Ptr<_1c4a96cac_SubIdentExpr> _110521_sexpr = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1c4a96cac_SubIdentExpr>(&__jule_any_type92);;
				return _1c46042a9_pushGenericsFromExprSubIdent(_self_, &(_110521_sexpr), _107545_generics, _107573_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1acd06396:;
			{
				jule::Ptr<_1c4a95519_IdentExpr> _110821_ident = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1c4a95519_IdentExpr>(&__jule_any_type86);;
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1c4a8e8ed_IdentTypeDecl>(_1c4a8e8ed_IdentTypeDecl{._field_Token=_110821_ident.get()._field_Token, ._field_Ident=_110821_ident.get()._field_Ident, ._field_CppLinked=_110821_ident.get()._field_CppLinked, }), &__jule_any_type19)}));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1acd0640c:;
			{
				{
					auto expr = &((*(_107573_expr)).get()._field_Kind.cast_ptr<_1c4a944d5_TupleExpr>(&__jule_any_type87).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acd0d06d:;
					if (it != expr_end) {
						jule::Ptr<_1c4a93858_Expr> _111725_texpr = *it;
						{
							if ((!(_1c4604672_pushGenericsFromData(_self_, _107545_generics, &(_111725_texpr))))) {
								return false;;
							};
						}
						_iter_next_1acd0d06d:;
						++it;
						goto _iter_begin_1acd0d06d;
					}
					_iter_end_1acd0d06d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1acd059b1:;
			{
				jule::Ptr<_1c4a96839_NsSelectionExpr> _112321_ns = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1c4a96839_NsSelectionExpr>(&__jule_any_type96);;
				jule::Ptr<_1c4a8e8ed_IdentTypeDecl> _112421_decl = jule::new_ptr<_1c4a8e8ed_IdentTypeDecl>(_1c4a8e8ed_IdentTypeDecl{._field_Token=_112321_ns.get()._field_Ident, ._field_Ident=_112321_ns.get()._field_Ident.get()._field_Kind, });;
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_112421_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1c4a90404_NamespaceTypeDecl>(_1c4a90404_NamespaceTypeDecl{._field_Idents=_112321_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_112421_decl.get()._field_Token, ._field_Kind=jule::Any(_112421_decl, &__jule_any_type19)})}), &__jule_any_type97)}));;
			}
		}
		else {
			_case_begin_1acd05939:;
			{
				_1c45e8e91_pushErr(_self_.ptr(), (*(_107573_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1acd058d4:;
	};
	return true;;
}



inline void _1c46049b3_evalIdentDeclFromIndexing(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c45e6e17_Data>* _114550_d, jule::Ptr<_1c4a9a7b6_IndexingExpr>* _114565_i) {
	jule::Ptr<_1c4aab255_StructIns> _114617_s = _1c4b604c4_Struct((*(_114550_d)).get()._field_Kind.ptr());;
	if ((_114617_s == nullptr)) {
		_1c45e8e91_pushErr(_self_.ptr(), (*(_114565_i)).get()._field_Expr.get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_114550_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_114550_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c4a8e8ed_IdentTypeDecl> _115317_decl = nullptr;;
	{
		auto &_match_expr{ (*(_114565_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1acd1324e:;
			{
				jule::Ptr<_1c4a95519_IdentExpr> _115621_expr = (*(_114565_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1c4a95519_IdentExpr>(&__jule_any_type86);;
				_115317_decl=jule::new_ptr<_1c4a8e8ed_IdentTypeDecl>(_1c4a8e8ed_IdentTypeDecl{._field_Token=_115621_expr.get()._field_Token, ._field_Ident=_115621_expr.get()._field_Ident, ._field_CppLinked=_115621_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1acd142b6:;
			{
				jule::Ptr<_1c4a96839_NsSelectionExpr> _116321_expr = (*(_114565_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1c4a96839_NsSelectionExpr>(&__jule_any_type96);;
				_115317_decl=jule::new_ptr<_1c4a8e8ed_IdentTypeDecl>(_1c4a8e8ed_IdentTypeDecl{._field_Token=_116321_expr.get()._field_Ident, ._field_Ident=_116321_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1acd1364a:;
			{
				_1c45e8e91_pushErr(_self_.ptr(), (*(_114565_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_114550_d))=nullptr;
				return;;
			}
		}
		_match_end_1acd135e5:;
	};
	if ((!(_1c4604672_pushGenericsFromData(_self_, &(_115317_decl.get()._field_Generics), &((*(_114565_i)).get()._field_Index))))) {
		(*(_114550_d))=nullptr;
		return;;
	};
	_114617_s=({ auto _wrap_copy = _1c460ac1c_typeChecker(_self_.ptr()); _1c4b6e3a1_fromStruct(&_wrap_copy, &(_115317_decl), &(_114617_s.get()._field_Decl)); });
	if ((_114617_s == nullptr)) {
		(*(_114550_d))=nullptr;
		return;;
	};
	(*(_114550_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1c46218c0_Kind>(_114617_s, 0);
}



inline jule::Bool _1c4604e25_checkGenericFn(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _118839_f, jule::Ptr<_2039861ab_Token>* _118855_et, jule::Any* _118872_model) {
	jule::Bool _118913_ok = _1c4b1508e_reloadFnInsTypes(_self_.get()._field_s, (*(_118839_f)));;
	(*(_118839_f)).get()._field_reloaded=true;
	if ((!(_118913_ok))) {
		return false;;
	};
	jule::Ptr<_1c4ab39ee_FnIns> _119417_existInstance = _1c4ab2778_appendInstance((*(_118839_f)).get()._field_Decl.ptr(), _118839_f);;
	if ((!(_1c4b14203_checkConstraintsFn(_self_.get()._field_s, _118839_f, _118855_et, _119417_existInstance)))) {
		return false;;
	};
	if ((_119417_existInstance != nullptr)) {
		(*(_118839_f))=_119417_existInstance;
		_1c462056c_updateModelToGenericIns(_118872_model, &(_119417_existInstance));
	} else {
		_1c4b27a74_checkFnInsCaller(_self_.get()._field_s, _118839_f, (*(_118855_et)));
	};
	return true;;
}



inline void _1c4605266_evalFnGenericFromIndexing(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c45e6e17_Data>* _121350_d, jule::Ptr<_1c4a9a7b6_IndexingExpr>* _121365_i) {
	jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _121417_generics = jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1c4604672_pushGenericsFromData(_self_, &(_121417_generics), &((*(_121365_i)).get()._field_Index))))) {
		(*(_121350_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c4ab39ee_FnIns> _122017_f = _1c4b60260_Fn((*(_121350_d)).get()._field_Kind.ptr());;
	jule::I32 _122117_genericsLen = 0LL;;
	if ((_122017_f.get()._field_Decl != nullptr)) {
		_122117_genericsLen=static_cast<jule::I32>(_122017_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1c4b0bccd_checkGenericQuantity(_self_.get()._field_s.ptr(), _122117_genericsLen, static_cast<jule::I32>(_121417_generics.len()), (*(_121365_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_121350_d))=nullptr;
		return;;
	};
	_122017_f.get()._field_Generics=jule::Slice<jule::Ptr<_1c47006e6_InsGeneric>>::alloc(0LL, _122017_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_121417_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1d655:;
		if (it != expr_end) {
			jule::Ptr<_1c4a8e337_TypeDecl> _123221_g = *it;
			{
				jule::Ptr<_1c45e6e17_Data> _123321_k = _1c460b02a_evalType(_self_.ptr(), _123221_g);;
				if ((_123321_k == nullptr)) {
					(*(_121350_d))=nullptr;
					return;;
				};
				_122017_f.get()._field_Generics = jule::alloc_for_append(_122017_f.get()._field_Generics,1);_122017_f.get()._field_Generics.__push(jule::new_ptr<_1c47006e6_InsGeneric>(_1c47006e6_InsGeneric{._field_Kind=_123321_k.get()._field_Kind, }));;
			}
			_iter_next_1acd1d655:;
			++it;
			goto _iter_begin_1acd1d655;
		}
		_iter_end_1acd1d655:;
	};
	if (_1c4ab4d85_IsBuiltin(_122017_f.ptr())) {
		return;;
	};
	if (_1c4604e25_checkGenericFn(_self_, &(_122017_f), &((*(_121365_i)).get()._field_Expr.get()._field_Token), &((*(_121350_d)).get()._field_Model))) {
		(*(_121350_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1c46218c0_Kind>(_122017_f, 1);
	} else {
		(*(_121350_d))=nullptr;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4605585_evalIndexing(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a9a7b6_IndexingExpr> _125236_i) {
	jule::Ptr<_1c4621d32_TypeKind> _125317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_125317_prefix;
	});;
	jule::Ptr<_1c45e6e17_Data> _125717_d = _1c4613c8b_evalExprKind(_self_, _125236_i.get()._field_Expr.get()._field_Kind);;
	if ((_125717_d == nullptr)) {
		return nullptr;;
	};
	if (_125717_d.get()._field_Decl) {
		_1c46049b3_evalIdentDeclFromIndexing(_self_, &(_125717_d), &(_125236_i));
		return _125717_d;;
	};
	if ((_1c4b60260_Fn(_125717_d.get()._field_Kind.ptr()) != nullptr)) {
		_1c4605266_evalFnGenericFromIndexing(_self_, &(_125717_d), &(_125236_i));
		return _125717_d;;
	};
	_1c45e6e17_Data _127317_old_d = (*(_125717_d));;
	jule::Ptr<_1c45e6e17_Data> _127517_index = _1c4613c8b_evalExprKind(_self_, _125236_i.get()._field_Index.get()._field_Kind);;
	if ((_127517_index == nullptr)) {
		return nullptr;;
	};
	_125717_d.get()._field_Decl=false;
	_1c4603d36_toIndexing(_self_.ptr(), &(_125717_d), &(_127517_index), &(_125236_i));
	if (_1c45e77ca_IsConst(_125717_d.ptr())) {
		_125717_d.get()._field_Decl=false;
		_125717_d.get()._field_Model=jule::Any(_125717_d.get()._field_Constant, &__jule_any_type47);
	} else if (_125717_d.get()._field_Decl) {
		_125717_d.get()._field_Decl=false;
	} else {
		_125717_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4aac9c6_IndexingExprModel>(_1c4aac9c6_IndexingExprModel{._field_Token=_125236_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1c45e6e17_Data>(_127317_old_d), ._field_Index=_127517_index}), &__jule_any_type45);
	};
	return _125717_d;;
}



inline __jule_tuple_x_1c45e6e17_Data__jule_tuple_x_1c45e6e17_Data _1c4605893_evalSlicingExprs(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a9adc1_SlicingExpr>* _130641_s) {
	__jule_tuple_x_1c45e6e17_Data__jule_tuple_x_1c45e6e17_Data __jule_func_result;
	jule::Ptr<_1c4621d32_TypeKind> _130717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_130717_prefix;
	});;
	jule::Ptr<_1c45e6e17_Data> _131117_l = nullptr;;
	jule::Ptr<_1c45e6e17_Data> _131217_r = nullptr;;
	if (((*(_130641_s)).get()._field_Start != nullptr)) {
		_131117_l=_1c4613c8b_evalExprKind(_self_, (*(_130641_s)).get()._field_Start.get()._field_Kind);
		if ((_131117_l != nullptr)) {
			_1c4602582_checkIntegerIndexingByData(_self_.ptr(), &(_131117_l), (*(_130641_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_131117_l=jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1c2615e5a_NewI64(0LL)});
		_131117_l.get()._field_Model=jule::Any(_131117_l.get()._field_Constant, &__jule_any_type47);
	};
	if (((*(_130641_s)).get()._field_To != nullptr)) {
		_131217_r=_1c4613c8b_evalExprKind(_self_, (*(_130641_s)).get()._field_To.get()._field_Kind);
		if ((_131217_r != nullptr)) {
			_1c4602582_checkIntegerIndexingByData(_self_.ptr(), &(_131217_r), (*(_130641_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _131117_l;
	__jule_func_result.__jule_result_arg1 = _131217_r;
	return __jule_func_result;;
}



inline void _1c4605b18_slicingArr(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data>* _134130_d) {
	jule::Ptr<_1c4621d32_TypeKind> _134217_elemType = _1c4b5ec87_Arr((*(_134130_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_134130_d)).get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1c4b65b6c_Slc>(_1c4b65b6c_Slc{._field_Elem=_134217_elemType}), 8)});
	(*(_134130_d)).get()._field_Lvalue=false;
	(*(_134130_d)).get()._field_Mutable=((*(_134130_d)).get()._field_Mutable || (!(_1c4b5cdd9_Mutable(_134217_elemType.ptr()))));
}



inline void _1c4605ed1_slicingStr(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data>* _135630_d, jule::Ptr<_1c45e6e17_Data>* _135641_l, jule::Ptr<_1c45e6e17_Data>* _135652_r) {
	(*(_135630_d)).get()._field_Lvalue=false;
	(*(_135630_d)).get()._field_Mutable=true;
	if ((!(_1c45e77ca_IsConst((*(_135630_d)).ptr())))) {
		return;;
	};
	if ((((*(_135641_l)) == nullptr) || ((*(_135652_r)) == nullptr))) {
		(*(_135630_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_1c45e77ca_IsConst((*(_135641_l)).ptr()) && _1c45e77ca_IsConst((*(_135652_r)).ptr()))) {
		jule::I64 _136917_left = _1c3178406_AsI64((*(_135641_l)).get()._field_Constant.ptr());;
		if ((_136917_left < 0LL)) {
			return;;
		};
		jule::Str _137417_s = _1c3178192_ReadStr((*(_135630_d)).get()._field_Constant.ptr());;
		jule::I64 _137521_right = 0LL;;
		if (((*(_135652_r)) == nullptr)) {
			_137521_right=static_cast<jule::I64>(static_cast<jule::I64>(_137417_s.len()));
		} else {
			_137521_right=static_cast<jule::I64>(_1c3178406_AsI64((*(_135652_r)).get()._field_Constant.ptr()));
		};
		if ((_136917_left > _137521_right)) {
			return;;
		};
		_1c3178b43_SetStr((*(_135630_d)).get()._field_Constant.ptr(), _137417_s.slice(static_cast<jule::I32>(_136917_left), static_cast<jule::I32>(_137521_right)));
		(*(_135630_d)).get()._field_Decl=true;
	} else {
		(*(_135630_d)).get()._field_Constant=nullptr;
	};
}



inline void _1c4606443_checkSlicing(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data>* _139236_d, jule::Ptr<_1c45e6e17_Data>* _139247_l, jule::Ptr<_1c45e6e17_Data>* _139258_r, jule::Ptr<_1c4a9adc1_SlicingExpr>* _139269_s) {
	{
		
		if ((_1c4b5ec87_Arr((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acd35073:;
			{
				_1c4605b18_slicingArr(_self_, _139236_d);
				return;;
			}
		}
		else if ((_1c4b5eeeb_Slc((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acd350ea:;
			{
				return;;
			}
		}
		else if ((_1c4b5e45c_Prim((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acd35172:;
			{
				jule::Ptr<_1c4b6197b_Prim> _140017_prim = _1c4b5e45c_Prim((*(_139236_d)).get()._field_Kind.ptr());;
				{
					
					if (_1c4b64bb0_IsStr(_140017_prim.ptr())) {
						_case_begin_1acd3755e:;
						{
							_1c4605ed1_slicingStr(_self_, _139236_d, _139247_l, _139258_r);
							return;;
						}
					}
					_match_end_1acd374b5:;
				};
			}
		}
		_match_end_1acd34e52:;
	};
	_1c45e8e91_pushErr(_self_, (*(_139269_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_139236_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_1c45e6e17_Data> _1c4606751_evalSlicing(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a9adc1_SlicingExpr> _141135_s) {
	jule::Ptr<_1c45e6e17_Data> _141217_d = _1c4613c8b_evalExprKind(_self_, _141135_s.get()._field_Expr.get()._field_Kind);;
	if ((_141217_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c45e6e17_Data> _141718_l;;
	jule::Ptr<_1c45e6e17_Data> _141725_r;;
	({
		__jule_tuple_x_1c45e6e17_Data__jule_tuple_x_1c45e6e17_Data __jule_assign_result = _1c4605893_evalSlicingExprs(_self_, &(_141135_s));
		_141718_l = __jule_assign_result.__jule_result_arg0;
		_141725_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_141718_l == nullptr)) {
		return _141217_d;;
	};
	_141217_d.get()._field_Decl=false;
	_1c4606443_checkSlicing(_self_.ptr(), &(_141217_d), &(_141718_l), &(_141725_r), &(_141135_s));
	if (_1c45e77ca_IsConst(_141217_d.ptr())) {
		_141217_d.get()._field_Decl=false;
		_141217_d.get()._field_Model=jule::Any(_141217_d.get()._field_Constant, &__jule_any_type47);
	} else if (_141217_d.get()._field_Decl) {
		_141217_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1c4aad279_SlicingExprModel> _143521_model = jule::new_ptr<_1c4aad279_SlicingExprModel>(_1c4aad279_SlicingExprModel{._field_Token=_141135_s.get()._field_Token, ._field_Expr=_141217_d.get()._field_Model, ._field_Left=_141718_l.get()._field_Model, });;
		if ((_141725_r != nullptr)) {
			_143521_model.get()._field_Right=_141725_r.get()._field_Model;
		};
		_141217_d.get()._field_Model=jule::Any(_143521_model, &__jule_any_type98);
	};
	return _141217_d;;
}



inline void _1c4606b19_castPtr(_1c45e8985_Eval* _self_, jule::Ptr<_1c4621d32_TypeKind> _144830_t, jule::Ptr<_1c45e6e17_Data> _144848_d, jule::Ptr<_2039861ab_Token> _144858_errorToken) {
	_144848_d.get()._field_Constant=nullptr;
	jule::Ptr<_1c4b65210_Sptr> _145013_sptr = _1c4b5e58e_Sptr(_144848_d.get()._field_Kind.ptr());;
	if ((_145013_sptr != nullptr)) {
		if ((!(_1c4622580_Equal(_1c4b5e6c1_Ptr(_144830_t.ptr()).get()._field_Elem, _145013_sptr.get()._field_Elem)))) {
			_1c45e8e91_pushErr(_self_, _144858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_144848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_144830_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_1c45e98cb_isUnsafe(_self_)))) {
		_1c45e8e91_pushErr(_self_, _144858_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4b6197b_Prim> _146313_prim = _1c4b5e45c_Prim(_144848_d.get()._field_Kind.ptr());;
	if (((_1c4b5e6c1_Ptr(_144848_d.get()._field_Kind.ptr()) == nullptr) && ((_146313_prim == nullptr) || (!(_1c31777bd_IsInt(_1c4b61cde_Str(_146313_prim.ptr()))))))) {
		_1c45e8e91_pushErr(_self_, _144858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_144848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_144830_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1c4606ed2_castStruct(_1c45e8985_Eval* _self_, jule::Ptr<_1c4621d32_TypeKind> _146933_t, jule::Ptr<_1c45e6e17_Data> _146951_d, jule::Ptr<_2039861ab_Token> _146961_errorToken) {
	_146951_d.get()._field_Constant=nullptr;
	jule::Ptr<_1c4ac306e_Trait> _147117_tr = _1c4b60738_Trait(_146951_d.get()._field_Kind.ptr());;
	if ((_147117_tr == nullptr)) {
		_1c45e8e91_pushErr(_self_, _146961_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_146951_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_146933_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1c4aab255_StructIns> _147717_s = _1c4b604c4_Struct(_146933_t.ptr());;
	_1acd44bed_pushReference(_self_, &(_147717_s));
	if ((!(_1c4a70879_IsImplements(_147717_s.get()._field_Decl.ptr(), _147117_tr)))) {
		_1c45e8e91_pushErr(_self_, _146961_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_146951_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_146933_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1c460739a_castRef(_1c45e8985_Eval* _self_, jule::Ptr<_1c4621d32_TypeKind> _148530_t, jule::Ptr<_1c45e6e17_Data> _148548_d, jule::Ptr<_2039861ab_Token> _148558_errorToken) {
	_148548_d.get()._field_Constant=nullptr;
	jule::Ptr<_1c4b65210_Sptr> _148717_sptr = _1c4b5e58e_Sptr(_148530_t.ptr());;
	jule::Ptr<_1c4b686ec_Ptr> _148917_ptr = _1c4b5e6c1_Ptr(_148548_d.get()._field_Kind.ptr());;
	if (((_148917_ptr != nullptr) && _1c4622580_Equal(_148717_sptr.get()._field_Elem, _148917_ptr.get()._field_Elem))) {
		if ((!(_1c45e98cb_isUnsafe(_self_)))) {
			_1c45e8e91_pushErr(_self_, _148558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1c4b604c4_Struct(_148717_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1c4606ed2_castStruct(_self_, _148717_sptr.get()._field_Elem, _148548_d, _148558_errorToken);
		return;;
	};
	_1c45e8e91_pushErr(_self_, _148558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_148548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_148530_t.ptr()), &__jule_any_type5)}));
}



inline void _1c4607763_castSlc(_1c45e8985_Eval* _self_, jule::Ptr<_1c4621d32_TypeKind> _150730_t, jule::Ptr<_1c45e6e17_Data> _150748_d, jule::Ptr<_2039861ab_Token> _150758_errorToken) {
	_150748_d.get()._field_Constant=nullptr;
	if ((_1c4b5e803_Enum(_150748_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1c4b5e45c_Prim(_1c4b5e803_Enum(_150748_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1c4b64bb0_IsStr(_1c4b5e45c_Prim(_1c4b5e803_Enum(_150748_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1c45e8e91_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_150730_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_1c4b5e45c_Prim(_150748_d.get()._field_Kind.ptr()) == nullptr) || (!(_1c4b64bb0_IsStr(_1c4b5e45c_Prim(_150748_d.get()._field_Kind.ptr()).ptr()))))) {
		_1c45e8e91_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_150730_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_150730_t=_1c4b5eeeb_Slc(_150730_t.ptr()).get()._field_Elem;
	jule::Ptr<_1c4b6197b_Prim> _152013_prim = _1c4b5e45c_Prim(_150730_t.ptr());;
	if (((_152013_prim == nullptr) || ((!(_1c4b63285_IsU8(_152013_prim.ptr()))) && (!(_1c4b62cac_IsI32(_152013_prim.ptr())))))) {
		_1c45e8e91_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_150730_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1c4607a82_castStr(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data> _152630_d, jule::Ptr<_2039861ab_Token> _152640_errorToken) {
	_152630_d.get()._field_Constant=nullptr;
	if ((_1c4b5e803_Enum(_152630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c4ac5802_Enum> _152921_e = _1c4b5e803_Enum(_152630_d.get()._field_Kind.ptr());;
		if (((_1c4b5e45c_Prim(_152921_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1c4b64bb0_IsStr(_1c4b5e45c_Prim(_152921_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1c4b5e45c_Prim(_152630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c4b6197b_Prim> _153617_prim = _1c4b5e45c_Prim(_152630_d.get()._field_Kind.ptr());;
		if (((!(_1c4b63285_IsU8(_153617_prim.ptr()))) && (!(_1c4b62cac_IsI32(_153617_prim.ptr()))))) {
			_1c45e8e91_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1c4622272_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1c4b5eeeb_Slc(_152630_d.get()._field_Kind.ptr()) == nullptr)) {
		_1c45e8e91_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1c4622272_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1c4621d32_TypeKind> _154817_t = _1c4b5eeeb_Slc(_152630_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1c4b6197b_Prim> _154913_prim = _1c4b5e45c_Prim(_154817_t.ptr());;
	if (((_154913_prim == nullptr) || ((!(_1c4b63285_IsU8(_154913_prim.ptr()))) && (!(_1c4b62cac_IsI32(_154913_prim.ptr())))))) {
		_1c45e8e91_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1c4622272_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline void _1c4607e4a_castInt(_1c45e8985_Eval* _self_, jule::Ptr<_1c4621d32_TypeKind> _155530_t, jule::Ptr<_1c45e6e17_Data> _155548_d, jule::Ptr<_2039861ab_Token> _155558_errorToken) {
	if (_1c45e77ca_IsConst(_155548_d.ptr())) {
		jule::Ptr<_1c4b6197b_Prim> _155717_prim = _1c4b5e45c_Prim(_155530_t.ptr());;
		{
			
			if (_1c3177559_IsSigInt(_155717_prim.get()._field_Kind)) {
				_case_begin_1acd5e245:;
				{
					_1c317879c_SetI64(_155548_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1c3178406_AsI64(_155548_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1c317768b_IsUnsigInt(_155717_prim.get()._field_Kind)) {
				_case_begin_1acd5e2bc:;
				{
					_1c31788ce_SetU64(_155548_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1c3178538_AsU64(_155548_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1acd5e18a:;
		};
	} else {
		_155548_d.get()._field_Constant=nullptr;
	};
	if ((_1c4b5e803_Enum(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c4ac5802_Enum> _156917_e = _1c4b5e803_Enum(_155548_d.get()._field_Kind.ptr());;
		if (_1c3177a32_IsNum(_1c4622272_Str(_156917_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1c4b5e58e_Sptr(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c4b6197b_Prim> _157617_prim = _1c4b5e45c_Prim(_155530_t.ptr());;
		if ((!(_1c4b646d7_IsUintptr(_157617_prim.ptr())))) {
			_1c45e8e91_pushErr(_self_, _155558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_155548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_155530_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1c4b5e6c1_Ptr(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c4b6197b_Prim> _158317_prim = _1c4b5e45c_Prim(_155530_t.ptr());;
		if (_1c4b646d7_IsUintptr(_158317_prim.ptr())) {
		} else if ((!(_1c45e98cb_isUnsafe(_self_)))) {
			_1c45e8e91_pushErr(_self_, _155558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1c4b6197b_Prim> _159213_prim = _1c4b5e45c_Prim(_155548_d.get()._field_Kind.ptr());;
	if (((_159213_prim != nullptr) && _1c3177a32_IsNum(_1c4b61cde_Str(_159213_prim.ptr())))) {
		return;;
	};
	_1c45e8e91_pushErr(_self_, _155558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_155548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_155530_t.ptr()), &__jule_any_type5)}));
}



inline void _1c4608313_castNum(_1c45e8985_Eval* _self_, jule::Ptr<_1c4621d32_TypeKind> _160030_t, jule::Ptr<_1c45e6e17_Data> _160048_d, jule::Ptr<_2039861ab_Token> _160058_errorToken) {
	if (_1c45e77ca_IsConst(_160048_d.ptr())) {
		jule::Ptr<_1c4b6197b_Prim> _160217_prim = _1c4b5e45c_Prim(_160030_t.ptr());;
		{
			
			if (_1c3177900_IsFloat(_160217_prim.get()._field_Kind)) {
				_case_begin_1acd67b88:;
				{
					_1c3178c75_SetF64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1c317866a_AsF64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1c3177559_IsSigInt(_160217_prim.get()._field_Kind)) {
				_case_begin_1acd67c10:;
				{
					_1c317879c_SetI64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1c3178406_AsI64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1c317768b_IsUnsigInt(_160217_prim.get()._field_Kind)) {
				_case_begin_1acd67c87:;
				{
					_1c31788ce_SetU64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1c3178538_AsU64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1acd67abc:;
		};
	} else {
		_160048_d.get()._field_Constant=nullptr;
	};
	if ((_1c4b5e803_Enum(_160048_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c4ac5802_Enum> _161617_e = _1c4b5e803_Enum(_160048_d.get()._field_Kind.ptr());;
		if (_1c3177a32_IsNum(_1c4622272_Str(_161617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c4b6197b_Prim> _162213_prim = _1c4b5e45c_Prim(_160048_d.get()._field_Kind.ptr());;
	if (((_162213_prim != nullptr) && _1c3177a32_IsNum(_1c4b61cde_Str(_162213_prim.ptr())))) {
		return;;
	};
	_1c45e8e91_pushErr(_self_, _160058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_160048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_160030_t.ptr()), &__jule_any_type5)}));
}



inline void _1c46086cb_castPrim(_1c45e8985_Eval* _self_, jule::Ptr<_1c4621d32_TypeKind> _163031_t, jule::Ptr<_1c45e6e17_Data> _163049_d, jule::Ptr<_2039861ab_Token> _163059_errorToken) {
	jule::Ptr<_1c4b6197b_Prim> _163113_prim = _1c4b5e45c_Prim(_163031_t.ptr());;
	{
		
		if (_1c4b64e24_IsAny(_163113_prim.ptr())) {
			_case_begin_1acd6d5a6:;
			{
				_163049_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1c4b64bb0_IsStr(_163113_prim.ptr())) {
			_case_begin_1acd6db17:;
			{
				_1c4607a82_castStr(_self_, _163049_d, _163059_errorToken);
			}
		}
		else if (_1c31777bd_IsInt(_1c4b61cde_Str(_163113_prim.ptr()))) {
			_case_begin_1acd6db7d:;
			{
				_1c4607e4a_castInt(_self_, _163031_t, _163049_d, _163059_errorToken);
			}
		}
		else if (_1c3177a32_IsNum(_1c4b61cde_Str(_163113_prim.ptr()))) {
			_case_begin_1acd6dc05:;
			{
				_1c4608313_castNum(_self_, _163031_t, _163049_d, _163059_errorToken);
			}
		}
		else {
			_case_begin_1acd6daa1:;
			{
				_1c45e8e91_pushErr(_self_, _163059_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_163031_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_1acd6da3a:;
	};
}



inline void _1c46089ea_castConstant(_1c45e8985_Eval* _self_, jule::Ptr<_1c4621d32_TypeKind>* _164736_t, jule::Ptr<_1c45e6e17_Data>* _164755_d) {
	if ((((*(_164755_d)) == nullptr) || (!(_1c45e77ca_IsConst((*(_164755_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1c4b6197b_Prim> _165113_prim = _1c4b5e45c_Prim((*(_164736_t)).ptr());;
	_1c4620061_castConstByType(&(_165113_prim.get()._field_Kind), _164755_d);
	(*(_164755_d)).get()._field_Model=jule::Any((*(_164755_d)).get()._field_Constant, &__jule_any_type47);
}



inline void _1c4608db3_castTypeEnum(_1c45e8985_Eval* _self_, jule::Ptr<_1c4621d32_TypeKind>* _165636_t, jule::Ptr<_1c45e6e17_Data>* _165655_d, jule::Ptr<_2039861ab_Token>* _165670_errorToken) {
	jule::I32 _165713_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1c4b13125_checkTypeCompatibility((*(_self_))._field_s, &((*(_165655_d)).get()._field_Kind), _165636_t, _165670_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _165713_n);
		_1c45e8e91_pushErr(_self_, (*(_165670_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_165655_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str((*(_165636_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_165655_d)).get()._field_Constant=nullptr;
}



inline void _1c460927b_castTypeEnumT(_1c45e8985_Eval* _self_, jule::Ptr<_1c4621d32_TypeKind>* _166537_t, jule::Ptr<_1c45e6e17_Data>* _166556_d, jule::Ptr<_2039861ab_Token>* _166571_errorToken) {
	jule::I32 _166613_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1c4b13125_checkTypeCompatibility((*(_self_))._field_s, _166537_t, &((*(_166556_d)).get()._field_Kind), _166571_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _166613_n);
		_1c45e8e91_pushErr(_self_, (*(_166571_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_166556_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str((*(_166537_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_166556_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_1c45e6e17_Data> _1c46096cc_evalCastByTypeNData(_1c45e8985_Eval* _self_, jule::Ptr<_1c4621d32_TypeKind> _167442_t, jule::Ptr<_1c45e6e17_Data> _167460_d, jule::Ptr<_2039861ab_Token> _167474_errorToken) {
	if (((_167460_d != nullptr) && _167460_d.get()._field_Decl)) {
		_1c45e8e91_pushErr(_self_, _167474_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1c45e7302_IsNil(_167460_d.ptr())) {
			_case_begin_1acd79c99:;
			{
				if ((!(_1c4b5de84_NilCompatible(_167442_t.ptr())))) {
					_1c45e8e91_pushErr(_self_, _167474_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_1c4622272_Str(_167442_t.ptr()), &__jule_any_type5)}));
				};
				_167460_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1c4b5e45c_Prim(_167460_d.get()._field_Kind.ptr()) != nullptr) && _1c4b64e24_IsAny(_1c4b5e45c_Prim(_167460_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1acd7943b:;
			{
				if ((_1c4b5e803_Enum(_167442_t.ptr()) != nullptr)) {
					_1c45e8e91_pushErr(_self_, _167474_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1c45e92b0_pushSugggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1c4b5ea23_TypeEnum(_167442_t.ptr()) != nullptr)) {
					_1c45e8e91_pushErr(_self_, _167474_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_167460_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1c4b5ea23_TypeEnum(_167460_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acd791b6:;
			{
				_1c4608db3_castTypeEnum(_self_, &(_167442_t), &(_167460_d), &(_167474_errorToken));
			}
		}
		else if ((_1c4b5ea23_TypeEnum(_167442_t.ptr()) != nullptr)) {
			_case_begin_1acd7922c:;
			{
				_1c460927b_castTypeEnumT(_self_, &(_167442_t), &(_167460_d), &(_167474_errorToken));
			}
		}
		else if ((_1c4b5e6c1_Ptr(_167442_t.ptr()) != nullptr)) {
			_case_begin_1acd79293:;
			{
				_1c4606b19_castPtr(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1c4b5e58e_Sptr(_167442_t.ptr()) != nullptr)) {
			_case_begin_1acd79ddc:;
			{
				_1c460739a_castRef(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1c4b5eeeb_Slc(_167442_t.ptr()) != nullptr)) {
			_case_begin_1acd79e53:;
			{
				_1c4607763_castSlc(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1c4b604c4_Struct(_167442_t.ptr()) != nullptr)) {
			_case_begin_1acd79eb9:;
			{
				_1c4606ed2_castStruct(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1c4b5e45c_Prim(_167442_t.ptr()) != nullptr)) {
			_case_begin_1acd7a041:;
			{
				_1c46086cb_castPrim(_self_, _167442_t, _167460_d, _167474_errorToken);
				_1c46089ea_castConstant(_self_, &(_167442_t), &(_167460_d));
			}
		}
		else {
			_case_begin_1acd79095:;
			{
				_1c45e8e91_pushErr(_self_, _167474_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_167442_t.ptr()), &__jule_any_type5)}));
				_167460_d=nullptr;
			}
		}
		_match_end_1acd79040:;
	};
	if ((_167460_d == nullptr)) {
		return nullptr;;
	};
	_167460_d.get()._field_Mutable=(_167460_d.get()._field_Mutable || ((!(_1c4b5cdd9_Mutable(_167460_d.get()._field_Kind.ptr()))) && _1c4b5cdd9_Mutable(_167442_t.ptr())));
	_167460_d.get()._field_Lvalue=false;
	_167460_d.get()._field_Decl=false;
	if (((_1c4b5e803_Enum(_167460_d.get()._field_Kind.ptr()) == nullptr) || (!(_1c4622580_Equal(_1c4b5e803_Enum(_167460_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _167442_t))))) {
		_1c461e527_applyCastKind(&(_167460_d), &(_167442_t));
		_167460_d.get()._field_Model.cast_ptr<_1c4aac410_CastingExprModel>(&__jule_any_type100).get()._field_Token=_167474_errorToken;
	} else {
		_167460_d.get()._field_Kind=_167442_t;
	};
	_167460_d.get()._field_untyped=false;
	if (_1c45e77ca_IsConst(_167460_d.ptr())) {
		_167460_d.get()._field_Constant.get()._field_Kind=_1c4b5e45c_Prim(_167442_t.ptr()).get()._field_Kind;
	};
	return _167460_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4609b2d_evalCastT(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4621d32_TypeKind>* _173934_t, jule::Ptr<_1c4a93858_Expr>* _173953_e, jule::Ptr<_2039861ab_Token>* _173968_et) {
	jule::Ptr<_1c4621d32_TypeKind> _174017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_174017_prefix;
	});;
	if ((_1c4b5eeeb_Slc((*(_173934_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_173953_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1acd87900:;
				{
					_self_.get()._field_prefix=(*(_173934_t));
				}
			}
			_match_end_1acd87856:;
		};
	};
	jule::Ptr<_1c45e6e17_Data> _174917_d = _1c4613c8b_evalExprKind(_self_, (*(_173953_e)).get()._field_Kind);;
	if (((_174917_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _174917_d;;
	};
	return _1c46096cc_evalCastByTypeNData(_self_.ptr(), (*(_173934_t)), _174917_d, (*(_173968_et)));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4609e3b_evalCast(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a96482_CastExpr> _175632_c) {
	jule::Ptr<_1c4b610b8_TypeSymbol> _175717_t = _1c4ab80db_buildType(_175632_c.get()._field_Kind);;
	jule::Bool _175813_ok = _1c4b11046_checkType(_self_.get()._field_s, &(_175717_t), _self_.get()._field_lookup);;
	if ((!(_175813_ok))) {
		return nullptr;;
	};
	return _1c4609b2d_evalCastT(_self_, &(_175717_t.get()._field_Kind), &(_175632_c.get()._field_Expr), &(_175632_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c460a249_evalNsSelection(_1c45e8985_Eval* _self_, jule::Ptr<_1c4a96839_NsSelectionExpr> _176534_s) {
	jule::Str _176613_path = _1c4b74ae3_buildLinkPathByTokens(&(_176534_s.get()._field_Ns));;
	jule::Ptr<_1c4aeeb28_ImportInfo> _176717_imp = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b76232_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)>([=](jule::Ptr<_1c4aeeb28_ImportInfo> _176752_imp) mutable -> jule::Bool {
		if (((_176534_s.get()._field_Ns.len() == 1LL) && (_176752_imp.get()._field_Alias == _176613_path))) {
			return true;;
		};
		return ((_176752_imp.get()._field_LinkPath == _176613_path) && _1c4b02785_isAccessibleViaSelection(_176752_imp.ptr()));;
	}));;
	if ((_176717_imp == nullptr)) {
		_1c45e8e91_pushErr(_self_, _176534_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_176613_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_1c4b77c6c_Lookup> _177917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1c4b77c6c_Lookup>(_176717_imp, 1);
	;
	_1c45e9667_disallowBuiltin(_self_);
	jule::Any _178417_def = _1c45ebea5_getDef(_self_, _176534_s.get()._field_Ident.get()._field_Kind, false);;
	_1c45e948b_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_177917_lookup;
	jule::Ptr<_1c45e6e17_Data> _178717_d = _1c460098c_evalDef(_self_, _178417_def, _176534_s.get()._field_Ident);;
	return _178717_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c460a69a_evalStructLitExplicit(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4aab255_StructIns> _179145_s, jule::Slice<jule::Ptr<_1c4a93858_Expr>> _179213_exprs, jule::Ptr<_2039861ab_Token> _179233_errorToken) {
	jule::Bool _179313_ok = _1c4b0bccd_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_179145_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_179145_s.get()._field_Generics.len()), _179233_errorToken);;
	if ((!(_179313_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _179145_s.get()._field_Decl))) {
		_1c45e8e91_pushErr(_self_.ptr(), _179233_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_179145_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_1acd44bed_pushReference(_self_.ptr(), &(_179145_s));
	_1c45edd97_checkDeprecated(_self_.ptr(), &(_179145_s.get()._field_Decl.get()._field_Directives), _179233_errorToken);
	_1c45db3e5_structLitChecker _180617_slc = _1c45db3e5_structLitChecker{._field_e=_self_, ._field_errorToken=_179233_errorToken, ._field_s=_179145_s, };;
	_1c45dc98a_check(&_180617_slc, &(_179213_exprs));
	jule::Ptr<_1c45e6e17_Data> _181317_d = jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_179145_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1c4aac036_StructLitExprModel>(_1c4aac036_StructLitExprModel{._field_Strct=_179145_s, ._field_Args=_180617_slc._field_args}), &__jule_any_type102), });;
	if (_179145_s.get()._field_Decl.get()._field_CppLinked) {
		_181317_d.get()._field_Kind.get()._field_CppIdent=_179145_s.get()._field_Decl.get()._field_Ident;
	};
	return _181317_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c460a9a8_evalStructLit(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a98a17_StructLit> _182937_lit) {
	jule::Ptr<_1c4b610b8_TypeSymbol> _183017_t = _1c4ab80db_buildType(_182937_lit.get()._field_Kind);;
	jule::Bool _183113_ok = _1c4b11046_checkType(_self_.get()._field_s, &(_183017_t), _self_.get()._field_lookup);;
	if ((!(_183113_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1c4aab255_StructIns> _183617_s = _1c4b604c4_Struct(_183017_t.get()._field_Kind.ptr());;
	if ((_183617_s == nullptr)) {
		if ((_1c4b5e58e_Sptr(_183017_t.get()._field_Kind.ptr()) != nullptr)) {
			_183617_s=_1c4b604c4_Struct(_1c4b5e58e_Sptr(_183017_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_183617_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1c45e8e91_pushErr(_self_.ptr(), _182937_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_1c45e6e17_Data> _184917_d = _1c460a69a_evalStructLitExplicit(_self_, _183617_s, _182937_lit.get()._field_Exprs, _182937_lit.get()._field_Kind.get()._field_Token);;
	if ((_1c4b5e58e_Sptr(_183017_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c4aac036_StructLitExprModel> _185121_model = _184917_d.get()._field_Model.cast_ptr<_1c4aac036_StructLitExprModel>(&__jule_any_type102);;
		_1c461cdd8_makeStructLitAlloc(&(_184917_d), &(_185121_model));
	};
	return _184917_d;;
}



inline _1c4b6a523_typeChecker _1c460ac1c_typeChecker(_1c45e8985_Eval* _self_) {
	return _1c4b0ee35_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1c45e6e17_Data> _1c460b02a_evalType(_1c45e8985_Eval* _self_, jule::Ptr<_1c4a8e337_TypeDecl> _186131_t) {
	jule::Ptr<_1c4b610b8_TypeSymbol> _186217_tk = _1c4ab80db_buildType(_186131_t);;
	jule::Bool _186313_ok = _1c4b11046_checkType((*(_self_))._field_s, &(_186217_tk), (*(_self_))._field_lookup);;
	if ((!(_186313_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=_186217_tk.get()._field_Kind, ._field_Model=jule::Any(_186217_tk.get()._field_Kind, &__jule_any_type90), ._field_Decl=true, });;
}



inline void _1c460b349_callTypeFn(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a9783a_FnCallExpr>* _187435_fc, jule::Ptr<_1c45e6e17_Data>* _187457_d) {
	if (((*(_187435_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_187435_fc)).get()._field_Args.len() > 1LL)) {
		_1c45e8e91_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_187457_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_187435_fc)).get()._field_IsCo) {
		_1c45e8e91_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_187457_d))=nullptr;
		return;;
	} else if (((*(_187435_fc)).get()._field_Exception != nullptr)) {
		_1c45e8e91_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_187457_d))=nullptr;
		return;;
	};
	if (((*(_187435_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1c4a93858_Expr> _189021_arg = (*(_187435_fc)).get()._field_Args[0LL];;
		(*(_187457_d))=_1c4609b2d_evalCastT(_self_, &((*(_187457_d)).get()._field_Kind), &(_189021_arg), &(_189021_arg.get()._field_Token));
		return;;
	};
	if (((*(_187457_d)) != nullptr)) {
		(*(_187457_d)).get()._field_Decl=false;
	};
}



inline void _1c460b668_callBuiltinFn(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a9783a_FnCallExpr>* _190038_fc, jule::Ptr<_1c45e6e17_Data>* _190060_d) {
	(*(_190060_d))=_1c4b60260_Fn((*(_190060_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _190038_fc, _190060_d);
	if (((*(_190060_d)) == nullptr)) {
		return;;
	};
	(*(_190060_d)).get()._field_Mutable=true;
}



inline void _1c460b9a9_checkFnOfConcurrentCall(_1c45e8985_Eval* _self_, jule::Ptr<_1c4ab39ee_FnIns>* _190843_f, jule::Ptr<_2039861ab_Token> _190854_errorToken) {
	if (_1c45e98cb_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_190843_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acda727c:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab2b30_ParamIns> *_191216_p = it;
			{
				if (_1c4a6c810_IsSelf((*(_191216_p)).get()._field_Decl.ptr())) {
					if ((!(_1c4a71e63_IsRef((*(_191216_p)).get()._field_Decl.ptr())))) {
						_1c45e8e91_pushErr(_self_, _190854_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1c45e92b0_pushSugggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_191216_p)).get()._field_Decl.get()._field_Reference) {
					_1c45e8e91_pushErr(_self_, _190854_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1c45e92b0_pushSugggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1acda727c:;
			++it;
			goto _iter_begin_1acda727c;
		}
		_iter_end_1acda727c:;
	};
}



inline void _1c460bda5_processExceptionalHandler(_1c45e8985_Eval* _self_, jule::Ptr<_1c4ab39ee_FnIns>* _192749_f, jule::Ptr<_1c4a9783a_FnCallExpr>* _192765_fc, jule::Ptr<_1c45e6e17_Data>* _192787_d) {
	jule::Bool _192813_resultNeeded = ((!(_1c4a871ed_IsVoid((*(_192749_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1c4ad7e30_scopeChecker> _192917_csc = nullptr;;
	jule::Ptr<_1c4ad13bd_Scope> _193017_ch = nullptr;;
	jule::Ptr<_1c4aac5ec_FnCallExprModel> _193217_model = (*(_192787_d)).get()._field_Model.cast_ptr<_1c4aac5ec_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1c4ad7e30_scopeChecker> _193617_sc = (*(_self_))._field_lookup.cast_ptr<_1c4ad7e30_scopeChecker>(0);;
	_192917_csc=_1c4ae7e95_newChildChecker(_193617_sc);
	if (_192813_resultNeeded) {
		_192917_csc.get()._field_result=(*(_192749_f));
	};
	_193017_ch=_1c4adc82a_getChild(_193617_sc.ptr());
	(*(_192765_fc)).get()._field_Exception.get()._field_Parent=_193617_sc.get()._field_tree;
	_192917_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_192917_csc.get()._field_table.get()._field_Vars,1);_192917_csc.get()._field_table.get()._field_Vars.__push(_1c461d229_buildErrorVar(&(_193017_ch), _192765_fc));;
	_1c4adcbe3_checkChildSsc(_193617_sc, &((*(_192765_fc)).get()._field_Exception), &(_193017_ch), &(_192917_csc));
	_193217_model.get()._field_Assigned=_192813_resultNeeded;
	_193217_model.get()._field_Except=_193017_ch;
	if ((_192813_resultNeeded && (_192917_csc.get()._field_result != nullptr))) {
		_1c45e8e91_pushErr(_self_, (*(_192765_fc)).get()._field_Token, jule::Str("assignments requires expression", 31), jule::Slice<jule::Any>());
	};
}



inline void _1c460c1d5_callFn(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a9783a_FnCallExpr>* _195431_fc, jule::Ptr<_1c45e6e17_Data>* _195453_d) {
	jule::Ptr<_1c4ab39ee_FnIns> _195517_f = _1c4b60260_Fn((*(_195453_d)).get()._field_Kind.ptr());;
	if (_1c4ab4d85_IsBuiltin(_195517_f.ptr())) {
		_1c460b668_callBuiltinFn(_self_, _195431_fc, _195453_d);
		return;;
	};
	if ((_1c45e9b40_isGlobal(_self_.ptr()) && _195517_f.get()._field_Decl.get()._field_Exceptional)) {
		_1c45e8e91_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1c45e92b0_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_195453_d))=nullptr;
		return;;
	};
	if (((!(_1c4a810e8_IsMethod(_195517_f.get()._field_Decl.ptr()))) && _1c4b73c46_hasDirective(&(_195517_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_1c45e8e91_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_195453_d))=nullptr;
		return;;
	};
	if (((((!((*(_195453_d)).get()._field_Mutable)) && _1c4a810e8_IsMethod(_195517_f.get()._field_Decl.ptr())) && (!(_195517_f.get()._field_Decl.get()._field_Statically))) && _195517_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1c45e8e91_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	} else if (((!(_1c45e98cb_isUnsafe(_self_.ptr()))) && _195517_f.get()._field_Decl.get()._field_Unsafety)) {
		_1c45e8e91_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _197917_dynamicAnnotation = (((_195517_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_195517_f.get()._field_Generics.len() == 0LL)) && (_195517_f.get()._field_Params.len() > 0LL));;
	if (_197917_dynamicAnnotation) {
		_195517_f.get()._field_Generics=jule::Slice<jule::Ptr<_1c47006e6_InsGeneric>>::alloc(_195517_f.get()._field_Decl.get()._field_Generics.len(), _195517_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_195517_f.get()._field_Generics.len() != _195517_f.get()._field_Decl.get()._field_Generics.len())) {
		_1c4b0bccd_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_195517_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_195517_f.get()._field_Generics.len()), (*(_195431_fc)).get()._field_Token);
		(*(_195453_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c4b07c74_Sema> _198817_old = _self_.get()._field_s;;
	if ((_195517_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_195517_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_198817_old != _self_.get()._field_s)) {
			_198817_old.get()._field_errors=jule::append(_198817_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_198817_old;
	});;
	_1c45d89db_fnCallArgChecker _200117_fcac = _1c45d89db_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_195431_fc)).get()._field_Args, ._field_errorToken=(*(_195431_fc)).get()._field_Token, ._field_dynamicAnnotation=_197917_dynamicAnnotation, };;
	if ((!(_197917_dynamicAnnotation))) {
		if ((!(_195517_f.get()._field_reloaded))) {
			jule::Bool _201021_ok = _1c4b1508e_reloadFnInsTypes(_self_.get()._field_s, _195517_f);;
			_195517_f.get()._field_reloaded=true;
			if ((!(_201021_ok))) {
				(*(_195453_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1c4ab39ee_FnIns> _201721_existInstance = _1c4ab2778_appendInstance(_195517_f.get()._field_Decl.ptr(), &(_195517_f));;
		if ((_201721_existInstance != nullptr)) {
			_195517_f=_201721_existInstance;
		};
	} else if ((!(_1c4b13983_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_195517_f), &(_200117_fcac._field_ignored))))) {
		(*(_195453_d))=nullptr;
		return;;
	};
	_200117_fcac._field_f=_195517_f;
	jule::Bool _202817_ok = false;;
	if ((_195517_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1c4b07c74_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1c4b07c74_Sema> _1___jule_assign_arg = _198817_old;
			_198817_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_202817_ok=_1c45dada6_check(&_200117_fcac);
		({
			jule::Ptr<_1c4b07c74_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1c4b07c74_Sema> _1___jule_assign_arg = _198817_old;
			_198817_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_202817_ok=_1c45dada6_check(&_200117_fcac);
	};
	if (_197917_dynamicAnnotation) {
		if ((!(_202817_ok))) {
			(*(_195453_d))=nullptr;
			return;;
		};
		if ((!(_1c4604e25_checkGenericFn(_self_, &(_195517_f), &((*(_195431_fc)).get()._field_Token), &((*(_195453_d)).get()._field_Model))))) {
			(*(_195453_d))=nullptr;
			return;;
		};
	};
	jule::Any _204817_callModel = (*(_195453_d)).get()._field_Model;;
	if (_1c4a871ed_IsVoid(_195517_f.get()._field_Decl.ptr())) {
		(*(_195453_d))=_1c461e725_buildVoidData();
	} else {
		(*(_195453_d)).get()._field_Kind=_195517_f.get()._field_Result;
		(*(_195453_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_1c4aac5ec_FnCallExprModel> _205717_model = jule::new_ptr<_1c4aac5ec_FnCallExprModel>(_1c4aac5ec_FnCallExprModel{._field_Token=(*(_195431_fc)).get()._field_Token, ._field_Func=_195517_f, ._field_IsCo=(*(_195431_fc)).get()._field_IsCo, ._field_Expr=_204817_callModel, ._field_Args=_200117_fcac._field_argModels, });;
	(*(_195453_d)).get()._field_Model=jule::Any(_205717_model, &__jule_any_type34);
	(*(_195453_d)).get()._field_Mutable=true;
	if (_195517_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_195431_fc)).get()._field_IsCo) {
			_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1c4b0ac55_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1c4a97b9d_Unhandled((*(_195431_fc)).ptr())) {
				_case_begin_1acdc4970:;
				{
					_1c45e8e91_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1c45e92b0_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1c4a97e12_Ignored((*(_195431_fc)).ptr())) {
				_case_begin_1acdc450d:;
				{
					goto _match_end_1acdc35d9;
				}
			}
			else {
				_case_begin_1acdc3650:;
				{
					_1c460bda5_processExceptionalHandler(_self_.ptr(), &(_195517_f), _195431_fc, _195453_d);
				}
			}
			_match_end_1acdc35d9:;
		};
	} else if ((!(_1c4a97b9d_Unhandled((*(_195431_fc)).ptr())))) {
		_1c45e8e91_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_195431_fc)).get()._field_IsCo) {
		_1c460b9a9_checkFnOfConcurrentCall(_self_.ptr(), &(_205717_model.get()._field_Func), (*(_195431_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c460c4e3_evalFnCall(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a9783a_FnCallExpr> _209234_fc) {
	jule::Ptr<_1c4621d32_TypeKind> _209317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_209317_prefix;
	});;
	{
		auto &_match_expr{ _209234_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1acdc74ab:;
			{
				if (_209234_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _1c4c18a55_builtinCallerError(&(_self_), &(_209234_fc));;
				};
			}
		}
		_match_end_1acdc7456:;
	};
	jule::Ptr<_1c45e6e17_Data> _210617_d = _1c4613c8b_evalExprKind(_self_, _209234_fc.get()._field_Expr.get()._field_Kind);;
	if ((_210617_d == nullptr)) {
		return nullptr;;
	};
	if (_210617_d.get()._field_Decl) {
		_1c460b349_callTypeFn(_self_, &(_209234_fc), &(_210617_d));
		return _210617_d;;
	};
	if ((_1c4b60260_Fn(_210617_d.get()._field_Kind.ptr()) == nullptr)) {
		_1c45e8e91_pushErr(_self_.ptr(), _209234_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c460c1d5_callFn(_self_, &(_209234_fc), &(_210617_d));
	return _210617_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c460c89a_evalEnumStatic(_1c45e8985_Eval* _self_, jule::Ptr<_1c4ac5802_Enum> _212537_enm, jule::Ptr<_2039861ab_Token> _212549_ident) {
	jule::Ptr<_1c45e6e17_Data> _212617_d = jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_212537_enm, 3)}), });;
	jule::Ptr<_1c4ac4d0c_EnumItem> _213217_item = _1c4ac63b3_FindItem(_212537_enm.ptr(), _212549_ident.get()._field_Kind);;
	if ((_213217_item == nullptr)) {
		_1c45e8e91_pushErr(_self_, _212549_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_212537_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_212549_ident.get()._field_Kind, &__jule_any_type5)}));
	} else {
		_212617_d.get()._field_Constant=jule::new_ptr<_1c25bc4e9_Const>((*(_213217_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_212617_d.get()._field_Model=jule::Any(_212617_d.get()._field_Constant, &__jule_any_type47);
		_1c461eca8_applyCastModelByEnum(&(_212617_d), _212537_enm);
	};
	return _212617_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c460cc52_evalTypeEnumStatic(_1c45e8985_Eval* _self_, jule::Ptr<_1c4ac6dec_TypeEnum> _214441_enm, jule::Ptr<_2039861ab_Token> _214457_ident) {
	jule::Ptr<_1c4ac6836_TypeEnumItem> _214517_item = _1c4ac7936_FindItem(_214441_enm.ptr(), _214457_ident.get()._field_Kind);;
	if ((_214517_item == nullptr)) {
		_1c45e8e91_pushErr(_self_, _214457_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_214441_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_214457_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_1c4b5e803_Enum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acdd5167:;
			{
				return _1c45ec538__evalEnum(_self_, _1c4b5e803_Enum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1c4b5ea23_TypeEnum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acdd580a:;
			{
				return _1c45ecbed__evalTypeEnum(_self_, _1c4b5ea23_TypeEnum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1c4b604c4_Struct(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acdd4b8e:;
			{
				return _1c45ed3b3__evalStruct(_self_, _1c4b604c4_Struct(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1acdcda01:;
			{
				jule::Ptr<_1c45e6e17_Data> _215821_d = jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=_214517_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_215821_d.get()._field_Model=jule::Any(_215821_d.get()._field_Kind, &__jule_any_type90);
				return _215821_d;;
			}
		}
		_match_end_1acdd4a07:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c460d109_evalStructStatic(_1c45e8985_Eval* _self_, jule::Ptr<_1c4aab255_StructIns> _216739_s, jule::Ptr<_2039861ab_Token> _216754_ident) {
	jule::Ptr<_1c45e6e17_Data> _216817_d = jule::new_ptr<_1c45e6e17_Data>();;
	;
	jule::Ptr<_1c4ab22e4_Fn> _217217_method = _1c4a85d23_FindMethod(_216739_s.ptr(), _216754_ident.get()._field_Kind, true);;
	if ((_217217_method != nullptr)) {
		if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), _217217_method.get()._field_Public, _217217_method.get()._field_Token)))) {
			_1c45e8e91_pushErr(_self_, _216754_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_216754_ident.get()._field_Kind, &__jule_any_type5)}));
			_1c45e92b0_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c4ab39ee_FnIns> _217921_ins = _1c4ab24d1_instance(_217217_method);;
		_217921_ins.get()._field_Owner=_216739_s;
		_1acc912a9_pushReference(_self_, &(_217921_ins));
		_216817_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4aada71_StructStaticIdentExprModel>(_1c4aada71_StructStaticIdentExprModel{._field_Structure=_216739_s, ._field_Expr=_216817_d.get()._field_Model, ._field_Method=_217921_ins}), &__jule_any_type103);
		_216817_d.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_217921_ins, 1)});
		return _216817_d;;
	};
	jule::Ptr<_1c4b2c837_Var> _219317_sttc = _1c4a8b994_FindStatic(_216739_s.ptr(), _216754_ident.get()._field_Kind);;
	if ((_219317_sttc != nullptr)) {
		return _1c460022d_evalVar(_self_, _219317_sttc, _216754_ident);;
	};
	_1c45e8e91_pushErr(_self_, _216754_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_216739_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_216754_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c460d55a_evalTraitSubIdent(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data> _220240_d, jule::Ptr<_1c4ac306e_Trait> _220254_trt, jule::Ptr<_2039861ab_Token> _220271_ident) {
	jule::Ptr<_1c4ab22e4_Fn> _220317_f = _1c4ac3e1b_FindMethod(_220254_trt.ptr(), _220271_ident.get()._field_Kind);;
	if ((_220317_f == nullptr)) {
		_1c45e8e91_pushErr(_self_, _220271_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_220254_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_220271_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4ab24d1_instance(_220317_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1c4aad466_TraitSubIdentExprModel>(_1c4aad466_TraitSubIdentExprModel{._field_Token=_220271_ident, ._field_Expr=_220240_d.get()._field_Model, ._field_Method=_220317_f, ._field_Trt=_220254_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_1c45e6e17_Data> _1c460da55_evalStructSubIdent(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data> _222141_d, jule::Ptr<_1c4aab255_StructIns> _222155_s, jule::Ptr<_1c4a96cac_SubIdentExpr> _222174_si, jule::Bool _222193_ref) {
	jule::Ptr<_1c4aab068_FieldIns> _222217_f = _1c4a8a861_FindField(_222155_s.ptr(), _222174_si.get()._field_Ident.get()._field_Kind);;
	if ((_222217_f != nullptr)) {
		if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), _222217_f.get()._field_Decl.get()._field_Public, _222217_f.get()._field_Decl.get()._field_Token)))) {
			_1c45e8e91_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_222217_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_1c45e92b0_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c4aad884_StructSubIdentExprModel> _222921_model = jule::new_ptr<_1c4aad884_StructSubIdentExprModel>(_1c4aad884_StructSubIdentExprModel{._field_Token=_222174_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1c45e6e17_Data>((*(_222141_d))), ._field_Field=_222217_f, ._field_Owner=_222155_s});;
		_222141_d.get()._field_Model=jule::Any(_222921_model, &__jule_any_type71);
		_222141_d.get()._field_Kind=_222217_f.get()._field_Kind;
		_222141_d.get()._field_Lvalue=true;
		if ((_222217_f.get()._field_Decl.get()._field_Mutable && (!(_222141_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*(_self_))._field_lookup };
				
				if (_match_expr.type_is(true, 0)) {
					_case_begin_1acde5b5b:;
					{
						jule::Ptr<_1c4ad7e30_scopeChecker> _224325_scope = _1c4adb076_getRoot((*(_self_))._field_lookup.cast_ptr<_1c4ad7e30_scopeChecker>(0));;
						_222141_d.get()._field_Mutable=((_224325_scope.get()._field_owner != nullptr) && (_224325_scope.get()._field_owner.get()._field_Owner == _222155_s));
					}
				}
				_match_end_1acde5b06:;
			};
		};
		return _222141_d;;
	};
	;
	jule::Ptr<_1c4ab22e4_Fn> _225217_m = _1c4a85d23_FindMethod(_222155_s.ptr(), _222174_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_225217_m == nullptr)) {
		_1c45e8e91_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_222155_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_222174_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), _225217_m.get()._field_Public, _225217_m.get()._field_Token)))) {
		_1c45e8e91_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_225217_m.get()._field_Ident, &__jule_any_type5)}));
		_1c45e92b0_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
	};
	if ((_1c4a71e63_IsRef(_225217_m.get()._field_Params[0LL].ptr()) && (!(_222193_ref)))) {
		_1c45e8e91_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1c45edd97_checkDeprecated(_self_, &(_225217_m.get()._field_Directives), _222174_si.get()._field_Ident);
	jule::Ptr<_1c4ab39ee_FnIns> _226817_ins = _1c4ab24d1_instance(_225217_m);;
	_226817_ins.get()._field_Owner=_222155_s;
	_1acc912a9_pushReference(_self_, &(_226817_ins));
	jule::Ptr<_1c45e6e17_Data> _227117_model = jule::new_ptr<_1c45e6e17_Data>((*(_222141_d)));;
	_222141_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4aad884_StructSubIdentExprModel>(_1c4aad884_StructSubIdentExprModel{._field_Token=_222174_si.get()._field_Ident, ._field_Expr=_227117_model, ._field_Method=_226817_ins, ._field_Owner=_222155_s}), &__jule_any_type71);
	_222141_d.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_226817_ins, 1)});
	return _222141_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c460de0c_evalSliceSubIdent(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data> _228240_d, jule::Ptr<_2039861ab_Token> _228254_ident) {
	{
		auto &_match_expr{ _228254_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1acdedc52:;
			{
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_Params=jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>>::make({jule::new_ptr<_1c4ab2b30_ParamIns>(_1c4ab2b30_ParamIns{._field_Decl=jule::new_ptr<_1c4ab2107_Param>(_1c4ab2107_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1c4ab2b30_ParamIns>(_1c4ab2b30_ParamIns{._field_Decl=jule::new_ptr<_1c4ab2107_Param>(_1c4ab2107_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c18714_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_228240_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1c4aae137_CommonSubIdentExprModel>(_1c4aae137_CommonSubIdentExprModel{._field_ExprKind=_228240_d.get()._field_Kind, ._field_Expr=_228240_d.get()._field_Model, ._field_Token=_228254_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1acdee02c:;
			{
				_1c45e8e91_pushErr(_self_, _228254_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_228240_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_228254_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1acdedcda:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c460e2b4_evalArraySubIdent(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data> _231940_d, jule::Ptr<_2039861ab_Token> _231954_ident) {
	{
		auto &_match_expr{ _231954_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ace00292:;
			{
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_Params=jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>>::make({jule::new_ptr<_1c4ab2b30_ParamIns>(_1c4ab2b30_ParamIns{._field_Decl=jule::new_ptr<_1c4ab2107_Param>(_1c4ab2107_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1c4ab2b30_ParamIns>(_1c4ab2b30_ParamIns{._field_Decl=jule::new_ptr<_1c4ab2107_Param>(_1c4ab2107_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c18714_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_231940_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1c4aae137_CommonSubIdentExprModel>(_1c4aae137_CommonSubIdentExprModel{._field_ExprKind=_231940_d.get()._field_Kind, ._field_Expr=_231940_d.get()._field_Model, ._field_Token=_231954_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1ace022b6:;
			{
				_1c45e8e91_pushErr(_self_, _231954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_231940_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_231954_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace0221c:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c460e5c2_evalIntTypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _235636_ident) {
	;
	{
		auto &_match_expr{ _235636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ace06551:;
			{
				jule::Ptr<_1c25bc4e9_Const> _236021_c = static__1c2615e5a_NewI64(static_cast<jule::I64>(_1c3174e5d_MaxI(jule::Str("int", 3))));;
				_236021_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236021_c, &__jule_any_type47), ._field_Constant=_236021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ace065b7:;
			{
				jule::Ptr<_1c25bc4e9_Const> _236821_c = static__1c2615e5a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1c2a39207_Min(jule::Str("int", 3)))));;
				_236821_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236821_c, &__jule_any_type47), ._field_Constant=_236821_c});;
			}
		}
		else {
			_case_begin_1ace05808:;
			{
				_1c45e8e91_pushErr(_self_, _235636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_235636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace05660:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c460e8d0_evalUintTypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _238137_ident) {
	;
	{
		auto &_match_expr{ _238137_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ace06672:;
			{
				jule::Ptr<_1c25bc4e9_Const> _238521_c = static__1c25e7a0d_NewU64(static_cast<jule::U64>(_1c3175090_MaxU(jule::Str("uint", 4))));;
				_238521_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=jule::Any(_238521_c, &__jule_any_type47), ._field_Constant=_238521_c});;
			}
		}
		else {
			_case_begin_1ace09367:;
			{
				_1c45e8e91_pushErr(_self_, _238137_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_238137_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace091be:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c460ebdd_evalI8TypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _239835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _239835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ace0b48a:;
			{
				jule::Ptr<_1c25bc4e9_Const> _240421_c = static__1c2615e5a_NewI64(127LL);;
				_240421_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_240421_c, &__jule_any_type47), ._field_Constant=_240421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ace0cee7:;
			{
				jule::Ptr<_1c25bc4e9_Const> _241221_c = static__1c2615e5a_NewI64(-128LL);;
				_241221_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_241221_c, &__jule_any_type47), ._field_Constant=_241221_c});;
			}
		}
		else {
			_case_begin_1ace0c238:;
			{
				_1c45e8e91_pushErr(_self_, _239835_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_239835_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace0ae4b:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c460eeeb_evalI16TypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _242536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ace11e41:;
			{
				jule::Ptr<_1c25bc4e9_Const> _243121_c = static__1c2615e5a_NewI64(32767LL);;
				_243121_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243121_c, &__jule_any_type47), ._field_Constant=_243121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ace11ea7:;
			{
				jule::Ptr<_1c25bc4e9_Const> _243921_c = static__1c2615e5a_NewI64(-32768LL);;
				_243921_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243921_c, &__jule_any_type47), ._field_Constant=_243921_c});;
			}
		}
		else {
			_case_begin_1ace11281:;
			{
				_1c45e8e91_pushErr(_self_, _242536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_242536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace11182:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4610309_evalI32TypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _245236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ace15d8a:;
			{
				jule::Ptr<_1c25bc4e9_Const> _245821_c = static__1c2615e5a_NewI64(2147483647LL);;
				_245821_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_245821_c, &__jule_any_type47), ._field_Constant=_245821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ace15e01:;
			{
				jule::Ptr<_1c25bc4e9_Const> _246621_c = static__1c2615e5a_NewI64(-2147483648LL);;
				_246621_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_246621_c, &__jule_any_type47), ._field_Constant=_246621_c});;
			}
		}
		else {
			_case_begin_1ace151ca:;
			{
				_1c45e8e91_pushErr(_self_, _245236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_245236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace150cb:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4610617_evalI64TypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _247936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _247936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ace19cd4:;
			{
				jule::Ptr<_1c25bc4e9_Const> _248521_c = static__1c2615e5a_NewI64(jule::MAX_I64);;
				_248521_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_248521_c, &__jule_any_type47), ._field_Constant=_248521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ace19d4a:;
			{
				jule::Ptr<_1c25bc4e9_Const> _249321_c = static__1c2615e5a_NewI64(jule::MIN_I64);;
				_249321_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_249321_c, &__jule_any_type47), ._field_Constant=_249321_c});;
			}
		}
		else {
			_case_begin_1ace19124:;
			{
				_1c45e8e91_pushErr(_self_, _247936_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_247936_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace19025:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4610925_evalU8TypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _250635_ident) {
	;
	;
	{
		auto &_match_expr{ _250635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ace1ce2a:;
			{
				jule::Ptr<_1c25bc4e9_Const> _251121_c = static__1c25e7a0d_NewU64(255LLU);;
				_251121_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=jule::Any(_251121_c, &__jule_any_type47), ._field_Constant=_251121_c});;
			}
		}
		else {
			_case_begin_1ace1c7a9:;
			{
				_1c45e8e91_pushErr(_self_, _250635_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_250635_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace1c9eb:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4610c33_evalU16TypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _252436_ident) {
	;
	;
	{
		auto &_match_expr{ _252436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ace208ab:;
			{
				jule::Ptr<_1c25bc4e9_Const> _252921_c = static__1c25e7a0d_NewU64(65535LLU);;
				_252921_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=jule::Any(_252921_c, &__jule_any_type47), ._field_Constant=_252921_c});;
			}
		}
		else {
			_case_begin_1ace2023a:;
			{
				_1c45e8e91_pushErr(_self_, _252436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_252436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace2047c:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4611041_evalU32TypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _254236_ident) {
	;
	;
	{
		auto &_match_expr{ _254236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ace2333c:;
			{
				jule::Ptr<_1c25bc4e9_Const> _254721_c = static__1c25e7a0d_NewU64(4294967295LLU);;
				_254721_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=jule::Any(_254721_c, &__jule_any_type47), ._field_Constant=_254721_c});;
			}
		}
		else {
			_case_begin_1ace22bbb:;
			{
				_1c45e8e91_pushErr(_self_, _254236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_254236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace22e0d:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c461134e_evalU64TypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _256036_ident) {
	;
	;
	{
		auto &_match_expr{ _256036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ace25cbd:;
			{
				jule::Ptr<_1c25bc4e9_Const> _256521_c = static__1c25e7a0d_NewU64(jule::MAX_U64);;
				_256521_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=jule::Any(_256521_c, &__jule_any_type47), ._field_Constant=_256521_c});;
			}
		}
		else {
			_case_begin_1ace2564c:;
			{
				_1c45e8e91_pushErr(_self_, _256036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_256036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace2588e:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c461165c_evalF32TypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _257836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ace2885e:;
			{
				jule::Ptr<_1c25bc4e9_Const> _258521_c = static__1c2600395_NewF64(340282346638528860000000000000000000000.0);;
				_258521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_258521_c, &__jule_any_type47), ._field_Constant=_258521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ace29860:;
			{
				jule::Ptr<_1c25bc4e9_Const> _259321_c = static__1c2600395_NewF64(-340282346638528860000000000000000000000.0);;
				_259321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_259321_c, &__jule_any_type47), ._field_Constant=_259321_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1ace298c6:;
			{
				jule::Ptr<_1c25bc4e9_Const> _260121_c = static__1c2600395_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_260121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_260121_c, &__jule_any_type47), ._field_Constant=_260121_c});;
			}
		}
		else {
			_case_begin_1ace28ae5:;
			{
				_1c45e8e91_pushErr(_self_, _257836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type99),jule::Any(_257836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace28a90:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c461196a_evalF64TypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_2039861ab_Token> _261436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ace2dbc7:;
			{
				jule::Ptr<_1c25bc4e9_Const> _262121_c = static__1c2600395_NewF64(jule::MAX_F64);;
				_262121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262121_c, &__jule_any_type47), ._field_Constant=_262121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ace2ebc8:;
			{
				jule::Ptr<_1c25bc4e9_Const> _262921_c = static__1c2600395_NewF64(jule::MIN_F64);;
				_262921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262921_c, &__jule_any_type47), ._field_Constant=_262921_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1ace2ec3e:;
			{
				jule::Ptr<_1c25bc4e9_Const> _263721_c = static__1c2600395_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_263721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_263721_c, &__jule_any_type47), ._field_Constant=_263721_c});;
			}
		}
		else {
			_case_begin_1ace2de5d:;
			{
				_1c45e8e91_pushErr(_self_, _261436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type99),jule::Any(_261436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace2de08:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4611d22_evalPrimStatic(_1c45e8985_Eval* _self_, jule::Str _265033_kind, jule::Ptr<_2039861ab_Token> _265044_ident) {
	{
		auto &_match_expr{ _265033_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ace32b21:;
			{
				return _1c460e5c2_evalIntTypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ace34062:;
			{
				return _1c460e8d0_evalUintTypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ace340c8:;
			{
				return _1c460ebdd_evalI8TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ace334c3:;
			{
				return _1c460eeeb_evalI16TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ace33539:;
			{
				return _1c4610309_evalI32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ace335a0:;
			{
				return _1c4610617_evalI64TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ace33616:;
			{
				return _1c4610925_evalU8TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ace3413e:;
			{
				return _1c4610c33_evalU16TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ace341a5:;
			{
				return _1c4611041_evalU32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ace3421b:;
			{
				return _1c461134e_evalU64TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ace34282:;
			{
				return _1c461165c_evalF32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ace342e8:;
			{
				return _1c461196a_evalF64TypeStatic(_self_, _265044_ident);;
			}
		}
		else {
			_case_begin_1ace2ee09:;
			{
				_1c45e8e91_pushErr(_self_, _265044_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_265033_kind, &__jule_any_type5),jule::Any(_265044_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace2eda4:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c46121c9_evalTypeStatic(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data> _268237_d, jule::Ptr<_1c4a96cac_SubIdentExpr> _268251_si) {
	{
		
		if ((_1c4b5e45c_Prim(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace39232:;
			{
				return _1c4611d22_evalPrimStatic(_self_, _1c4b61cde_Str(_1c4b5e45c_Prim(_268237_d.get()._field_Kind.ptr()).ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_1c4b5e803_Enum(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace39298:;
			{
				return _1c460c89a_evalEnumStatic(_self_, _1c4b5e803_Enum(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_1c4b5ea23_TypeEnum(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace390ab:;
			{
				return _1c460cc52_evalTypeEnumStatic(_self_, _1c4b5ea23_TypeEnum(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_1c4b604c4_Struct(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace39122:;
			{
				return _1c460d109_evalStructStatic(_self_, _1c4b604c4_Struct(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1ace38286:;
			{
				_1c45e8e91_pushErr(_self_, _268251_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_268237_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ace381ba:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4612581_evalObjSubIdent(_1c45e8985_Eval* _self_, jule::Ptr<_1c45e6e17_Data> _269838_d, jule::Ptr<_1c4a96cac_SubIdentExpr> _269852_si) {
	if (_203988950_IsIgnoreIdent(_269852_si.get()._field_Ident.get()._field_Kind)) {
		_1c45e8e91_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4621d32_TypeKind> _270417_kind = _269838_d.get()._field_Kind;;
	{
		
		if ((_1c4b5e6c1_Ptr(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace3db1b:;
			{
				jule::Ptr<_1c4b686ec_Ptr> _270717_ptr = _1c4b5e6c1_Ptr(_269838_d.get()._field_Kind.ptr());;
				if (_1c4b691c0_IsUnsafe(_270717_ptr.ptr())) {
					goto _match_end_1ace3d9ea;
				};
				if (((!(_269852_si.get()._field_IsSelf)) && (!(_1c45e98cb_isUnsafe(_self_))))) {
					_1c45e8e91_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_270417_kind=_1c4b5e6c1_Ptr(_269838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1c4b5e58e_Sptr(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace3db82:;
			{
				_270417_kind=_1c4b5e58e_Sptr(_269838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1ace3d9ea:;
	};
	{
		
		if ((_1c4b60738_Trait(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace414d1:;
			{
				return _1c460d55a_evalTraitSubIdent(_self_, _269838_d, _1c4b60738_Trait(_269838_d.get()._field_Kind.ptr()), _269852_si.get()._field_Ident);;
			}
		}
		else if ((_1c4b604c4_Struct(_270417_kind.ptr()) != nullptr)) {
			_case_begin_1ace41558:;
			{
				jule::Ptr<_1c4aab255_StructIns> _272317_s = _1c4b604c4_Struct(_270417_kind.ptr());;
				if (_1c461dbb9_isInstancedStruct(_272317_s)) {
					jule::Bool _272525_usedReferenceElem = (_1c4b5e58e_Sptr(_269838_d.get()._field_Kind.ptr()) != nullptr);;
					return _1c460da55_evalStructSubIdent(_self_, _269838_d, _1c4b604c4_Struct(_270417_kind.ptr()), _269852_si, _272525_usedReferenceElem);;
				};
			}
		}
		else if ((_1c4b5eeeb_Slc(_270417_kind.ptr()) != nullptr)) {
			_case_begin_1ace415d0:;
			{
				return _1c460de0c_evalSliceSubIdent(_self_, _269838_d, _269852_si.get()._field_Ident);;
			}
		}
		else if ((_1c4b5ec87_Arr(_270417_kind.ptr()) != nullptr)) {
			_case_begin_1ace41657:;
			{
				return _1c460e2b4_evalArraySubIdent(_self_, _269838_d, _269852_si.get()._field_Ident);;
			}
		}
		_match_end_1ace41404:;
	};
	_1c45e8e91_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_269838_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c461288e_evalSubIdent(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a96cac_SubIdentExpr> _273736_si) {
	jule::Ptr<_1c4621d32_TypeKind> _273817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_273817_prefix;
	});;
	jule::Ptr<_1c45e6e17_Data> _274217_d = _1c4613c8b_evalExprKind(_self_, _273736_si.get()._field_Expr.get()._field_Kind);;
	if ((_274217_d == nullptr)) {
		return nullptr;;
	};
	if (_274217_d.get()._field_Decl) {
		return _1c46121c9_evalTypeStatic(_self_.ptr(), _274217_d, _273736_si);;
	};
	return _1c4612581_evalObjSubIdent(_self_.ptr(), _274217_d, _273736_si);;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4612b9c_evalTuple(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a944d5_TupleExpr> _275433_tup) {
	jule::Ptr<_1c4b66673_Tuple> _275517_tupT = jule::new_ptr<_1c4b66673_Tuple>();;
	_275517_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1c4621d32_TypeKind>>::alloc(0LL, _275433_tup.get()._field_Expr.len());
	jule::Ptr<_1c4aae324_TupleExprModel> _275817_model = jule::new_ptr<_1c4aae324_TupleExprModel>(_1c4aae324_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1c45e6e17_Data>>::alloc(0LL, _275433_tup.get()._field_Expr.len())});;
	jule::Bool _276217_ok = true;;
	{
		auto expr = &(_275433_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace4a276:;
		if (it != expr_end) {
			jule::Ptr<_1c4a93858_Expr> _276321_expr = *it;
			{
				jule::Ptr<_1c45e6e17_Data> _276421_d = _1c4613c8b_evalExprKind(_self_, _276321_expr.get()._field_Kind);;
				if ((_276421_d == nullptr)) {
					_276217_ok=false;
					goto _iter_next_1ace4a276;
				};
				_275517_tupT.get()._field_Types = jule::alloc_for_append(_275517_tupT.get()._field_Types,1);_275517_tupT.get()._field_Types.__push(_276421_d.get()._field_Kind);;
				_275817_model.get()._field_Datas = jule::alloc_for_append(_275817_model.get()._field_Datas,1);_275817_model.get()._field_Datas.__push(_276421_d);;
			}
			_iter_next_1ace4a276:;
			++it;
			goto _iter_begin_1ace4a276;
		}
		_iter_end_1ace4a276:;
	};
	if ((!(_276217_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_275517_tupT, 9)}), ._field_Model=jule::Any(_275817_model, &__jule_any_type88), });;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4613054_evalMap(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4b6719b_Map> _278331_m, jule::Ptr<_1c4a98e8a_BraceLit> _278344_lit) {
	jule::Ptr<_1c4aad08c_MapExprModel> _278417_model = jule::new_ptr<_1c4aad08c_MapExprModel>(_1c4aad08c_MapExprModel{._field_KeyKind=_278331_m.get()._field_Key, ._field_ValKind=_278331_m.get()._field_Val, });;
	{
		auto expr = &(_278344_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace4d312:;
		if (it != expr_end) {
			jule::Ptr<_1c4a93858_Expr> _278921_expr = *it;
			{
				{
					auto &_match_expr{ _278921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1ace4da2c:;
						{
							goto _match_end_1ace4dac6;
						}
					}
					else {
						_case_begin_1ace4dc5d:;
						{
							_1c45e8e91_pushErr(_self_.ptr(), _278344_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ace4dac6:;
				};
				jule::Ptr<_1c4a99760_KeyValPair> _279921_pair = _278921_expr.get()._field_Kind.cast_ptr<_1c4a99760_KeyValPair>(&__jule_any_type85);;
				jule::Ptr<_1c45e6e17_Data> _280121_key = _1c4613c8b_evalExprKind(_self_, _279921_pair.get()._field_Key.get()._field_Kind);;
				if ((_280121_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1c45e6e17_Data> _280621_val = _1c4613c8b_evalExprKind(_self_, _279921_pair.get()._field_Val.get()._field_Kind);;
				if ((_280621_val == nullptr)) {
					return nullptr;;
				};
				_1c4b12bc4_checkAssignType(_self_.get()._field_s, false, &(_278331_m.get()._field_Key), &(_280121_key), _279921_pair.get()._field_Colon);
				_1c4b12bc4_checkAssignType(_self_.get()._field_s, false, &(_278331_m.get()._field_Val), &(_280621_val), _279921_pair.get()._field_Colon);
				_278417_model.get()._field_Entries = jule::alloc_for_append(_278417_model.get()._field_Entries,1);_278417_model.get()._field_Entries.__push(jule::new_ptr<_1c4aacda0_KeyValPairExprModel>(_1c4aacda0_KeyValPairExprModel{._field_Key=_280121_key.get()._field_Model, ._field_Val=_280621_val.get()._field_Model}));;
			}
			_iter_next_1ace4d312:;
			++it;
			goto _iter_begin_1ace4d312;
		}
		_iter_end_1ace4d312:;
	};
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_278331_m, 10)}), ._field_Mutable=true, ._field_Model=jule::Any(_278417_model, &__jule_any_type104), });;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4613362_evalBraceLit(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a98e8a_BraceLit> _282736_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1ace5358c:;
			{
				_1c45e8e91_pushErr(_self_.ptr(), _282736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c4b6099c_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ace53d62:;
			{
				return _1c4613054_evalMap(_self_, _1c4b6099c_Map(_self_.get()._field_prefix.ptr()), _282736_lit);;
			}
		}
		else if ((_1c4b604c4_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ace53dc8:;
			{
				return _1c460a69a_evalStructLitExplicit(_self_, _1c4b604c4_Struct(_self_.get()._field_prefix.ptr()), _282736_lit.get()._field_Exprs, _282736_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1ace531d5:;
			{
				_1c45e8e91_pushErr(_self_.ptr(), _282736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ace53119:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4613670_evalAnonFn(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4aa0cb6_FnDecl> _284234_decl) {
	_1c4b6a523_typeChecker _284317_tc = _1c4b6a523_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1c4ab39ee_FnIns> _284817_ins = _1c4b71d65_buildFn(&_284317_tc, _284234_decl);;
	if ((_284817_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ace57926:;
			{
				jule::Ptr<_1c4ad7e30_scopeChecker> _285421_sc = _self_.get()._field_lookup.cast_ptr<_1c4ad7e30_scopeChecker>(0);;
				jule::Ptr<_1c4ad7e30_scopeChecker> _285521_scc = _1c4ae7e95_newChildChecker(_285421_sc);;
				_285521_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c4ad6b98_scopeLabel>>>(nullptr);
				_285521_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c4ad711b_scopeGoto>>>(nullptr);
				_285521_scc.get()._field_owner=nullptr;
				_285521_scc.get()._field_childIndex=0LL;
				_285521_scc.get()._field_it=0LLU;
				_285521_scc.get()._field_cse=0LLU;
				_285521_scc.get()._field_owner=_284817_ins;
				_1c4b27755_checkFnInsSc(_self_.get()._field_s.ptr(), &(_284817_ins), &(_285521_scc));
			}
		}
		else {
			_case_begin_1ace577c2:;
			{
				_1c4b27ce9_checkFnIns(_self_.get()._field_s, &(_284817_ins));
			}
		}
		_match_end_1ace5776c:;
	};
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_284817_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1c4aacbb3_AnonFnExprModel>(_1c4aacbb3_AnonFnExprModel{._field_Func=_284817_ins, ._field_Global=_1c45e9b40_isGlobal(_self_.ptr())}), &__jule_any_type105), });;
}



inline jule::Ptr<_1c45e6e17_Data> _1c461397d_evalBinop(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a97230_BinopExpr> _287733_op) {
	_1c46165b8_binaryEval _287817_bs = static__1c4616b90_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1c4b6197b_Prim> _288117_prim = _1c4b5e45c_Prim(_self_.get()._field_prefix.ptr());;
		if (((_288117_prim == nullptr) || (!(_1c3177a32_IsNum(_1c4b61cde_Str(_288117_prim.ptr())))))) {
			jule::Ptr<_1c4621d32_TypeKind> _288325_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288325_prefix;
			});;
			return _1c461c14b_eval(&_287817_bs, &(_287733_op));;
		};
	};
	return _1c461c14b_eval(&_287817_bs, &(_287733_op));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4613c8b_evalExprKind(jule::Ptr<_1c45e8985_Eval> _self_, jule::Any _289236_kind) {
	{
		auto &_match_expr{ _289236_kind };
		
		if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ace5bb8e:;
			{
				jule::Ptr<_1c4a93b44_RangeExpr> _289521_e = _289236_kind.cast_ptr<_1c4a93b44_RangeExpr>(&__jule_any_type106);;
				return _1c4613c8b_evalExprKind(_self_, _289521_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ace5e983:;
			{
				return _1c45eb7e0_evalLit(_self_.ptr(), _289236_kind.cast_ptr<_1c4a9488c_LitExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ace5e9e9:;
			{
				return _1c4600c9a_evalIdent(_self_.ptr(), _289236_kind.cast_ptr<_1c4a95519_IdentExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ace5e510:;
			{
				return _1c46010a8_evalUnary(_self_, _289236_kind.cast_ptr<_1c4a95c23_UnaryExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1ace5e576:;
			{
				return _1c46013b6_evalVariadic(_self_, _289236_kind.cast_ptr<_1c4a960ca_VariadicExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ace5e5ed:;
			{
				return _1c46016c4_evalUnsafe(_self_, _289236_kind.cast_ptr<_1c4a95096_UnsafeExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ace5e675:;
			{
				return _1c4602241_evalSliceExpr(_self_, _289236_kind.cast_ptr<_1c4a99e47_SliceExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ace5ea71:;
			{
				return _1c4605585_evalIndexing(_self_, _289236_kind.cast_ptr<_1c4a9a7b6_IndexingExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ace5eae8:;
			{
				return _1c4606751_evalSlicing(_self_, _289236_kind.cast_ptr<_1c4a9adc1_SlicingExpr>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ace5eb70:;
			{
				return _1c4609e3b_evalCast(_self_, _289236_kind.cast_ptr<_1c4a96482_CastExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ace5ebe7:;
			{
				return _1c460a249_evalNsSelection(_self_.ptr(), _289236_kind.cast_ptr<_1c4a96839_NsSelectionExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ace5ec6e:;
			{
				return _1c460a9a8_evalStructLit(_self_, _289236_kind.cast_ptr<_1c4a98a17_StructLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ace5ece6:;
			{
				return _1c460b02a_evalType(_self_.ptr(), _289236_kind.cast_ptr<_1c4a8e337_TypeDecl>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ace5ed6d:;
			{
				return _1c460c4e3_evalFnCall(_self_, _289236_kind.cast_ptr<_1c4a9783a_FnCallExpr>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ace5ede5:;
			{
				return _1c461288e_evalSubIdent(_self_, _289236_kind.cast_ptr<_1c4a96cac_SubIdentExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ace5ee6c:;
			{
				return _1c4612b9c_evalTuple(_self_, _289236_kind.cast_ptr<_1c4a944d5_TupleExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ace5eee4:;
			{
				return _1c4613362_evalBraceLit(_self_, _289236_kind.cast_ptr<_1c4a98e8a_BraceLit>(&__jule_any_type114));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ace6006b:;
			{
				return _1c4613670_evalAnonFn(_self_, _289236_kind.cast_ptr<_1c4aa0cb6_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ace600e3:;
			{
				return _1c461397d_evalBinop(_self_, _289236_kind.cast_ptr<_1c4a97230_BinopExpr>(&__jule_any_type115));;
			}
		}
		else {
			_case_begin_1ace5e3ab:;
			{
				return nullptr;;
			}
		}
		_match_end_1ace5e2bd:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4614099_eval(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a93858_Expr> _294028_expr) {
	jule::Ptr<_1c45e6e17_Data> _294117_d = _1c4613c8b_evalExprKind(_self_, _294028_expr.get()._field_Kind);;
	if (((_294117_d == nullptr) || (_294117_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1c4b60260_Fn(_294117_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace694b5:;
			{
				jule::Ptr<_1c4ab39ee_FnIns> _294821_f = _1c4b60260_Fn(_294117_d.get()._field_Kind.ptr());;
				if (_1c4ab4d85_IsBuiltin(_294821_f.ptr())) {
					goto _match_end_1ace69383;
				};
				if ((_294821_f.get()._field_Generics.len() != _294821_f.get()._field_Decl.get()._field_Generics.len())) {
					_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _294028_expr.get()._field_Token, jule::Str("define has generics", 19), jule::Slice<jule::Any>());
				};
				if (((!(_294821_f.get()._field_Decl.get()._field_Statically)) && _1c4a810e8_IsMethod(_294821_f.get()._field_Decl.ptr()))) {
					_1c4b0a936_pushErr(_self_.get()._field_s.ptr(), _294028_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1ace69383:;
	};
	return _294117_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c46143a7_evalExpr(jule::Ptr<_1c45e8985_Eval> _self_, jule::Ptr<_1c4a93858_Expr> _296632_expr) {
	jule::Ptr<_1c45e6e17_Data> _296717_d = _1c4614099_eval(_self_, _296632_expr);;
	{
		
		if ((_296717_d == nullptr)) {
			_case_begin_1ace6ce8b:;
			{
				return nullptr;;
			}
		}
		else if (_296717_d.get()._field_Decl) {
			_case_begin_1ace6d013:;
			{
				_1c45e8e91_pushErr(_self_.ptr(), _296632_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ace6cdc0:;
			{
				return _296717_d;;
			}
		}
		_match_end_1ace6cd59:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c45e8985_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1c461482a_unaryEval static__1c4614cd1_new(jule::Ptr<_1c45e8985_Eval> _298723_e) {
	return _1c461482a_unaryEval{._field_e=_298723_e, };;
}



inline void _1c4614eac_minus(_1c461482a_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1ace6e9b5:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c4b5e45c_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace6e685:;
			{
				if ((!(_1c3177a32_IsNum(_1c4622272_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c4b604c4_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace6e6eb:;
			{
				if ((_1c4b604c4_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ace6e61e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ace6e4dc:;
	};
	if (_1c45e77ca_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1c31794b2_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ace73029:;
				{
					_1c3178c75_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1c31782c4_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c3178ed9_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ace730a1:;
				{
					_1c317879c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1c263c811_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c317911b_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ace73128:;
				{
					_1c317879c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1c3178406_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1ace72e3b:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4aabb5c_UnaryExprModel>(_1c4aabb5c_UnaryExprModel{._field_Expr=jule::new_ptr<_1c45e6e17_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1c4615188_plus(_1c461482a_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1ace77407:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c4b5e45c_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace770c7:;
			{
				if ((!(_1c3177a32_IsNum(_1c4622272_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c4b604c4_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace7713d:;
			{
				if ((_1c4b604c4_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ace77061:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ace76e95:;
	};
	if (_1c45e77ca_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1c31794b2_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ace7a96b:;
				{
					_1c3178c75_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1c31782c4_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c3178ed9_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ace7a9e3:;
				{
					_1c317879c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1c263c811_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c317911b_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ace7aa6a:;
				{
					_1c317879c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1c3178406_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1ace7a87d:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4aabb5c_UnaryExprModel>(_1c4aabb5c_UnaryExprModel{._field_Expr=jule::new_ptr<_1c45e6e17_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1c4615364_caret(_1c461482a_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1ace7ed49:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c4b5e45c_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace7ea19:;
			{
				if ((!(_1c31777bd_IsInt(_1c4622272_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c4b604c4_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace7ea80:;
			{
				if ((_1c4b604c4_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ace7e9a3:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ace7e8d7:;
	};
	if (_1c45e77ca_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1c3178ed9_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ace8339c:;
				{
					_1c317879c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1c263c811_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c317911b_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ace83424:;
				{
					_1c31788ce_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1c263c943_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1ace832c0:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4aabb5c_UnaryExprModel>(_1c4aabb5c_UnaryExprModel{._field_Expr=jule::new_ptr<_1c45e6e17_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1c4615540_excl(_1c461482a_unaryEval* _self_) {
	jule::Ptr<_1c4b6197b_Prim> _310613_t = _1c4b5e45c_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_310613_t == nullptr) || (!(_1c4b6494b_IsBool(_310613_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	if (_1c45e77ca_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1c317924d_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ace87abb:;
				{
					_1c3178a11_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_1c3178060_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1ace879bc:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4aabb5c_UnaryExprModel>(_1c4aabb5c_UnaryExprModel{._field_Expr=jule::new_ptr<_1c45e6e17_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1c461571b_star(_1c461482a_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4aabb5c_UnaryExprModel>(_1c4aabb5c_UnaryExprModel{._field_Expr=jule::new_ptr<_1c45e6e17_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_1c4b5e6c1_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace8a96a:;
			{
				if ((!(_1c45e98cb_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c4b686ec_Ptr> _313821_t = _1c4b5e6c1_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1c4b691c0_IsUnsafe(_313821_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_313821_t.get()._field_Elem;
			}
		}
		else if ((_1c4b5e58e_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ace8a63a:;
			{
				(*(_self_))._field_d.get()._field_Kind=_1c4b5e58e_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1ace8a5c4:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ace8a55d:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _1c46158e7_amper(_1c461482a_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ace90299:;
			{
				jule::Ptr<_1c4aac036_StructLitExprModel> _315821_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_1c4aac036_StructLitExprModel>(&__jule_any_type102);;
				_1c461cdd8_makeStructLitAlloc(&((*(_self_))._field_d), &(_315821_lit));
			}
		}
		else {
			_case_begin_1ace8eb8e:;
			{
				{
					
					if (_1c4b73edd_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1ace907d8:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1c4b686ec_Ptr>(_1c4b686ec_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 12)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4aabb5c_UnaryExprModel>(_1c4aabb5c_UnaryExprModel{._field_Expr=jule::new_ptr<_1c45e6e17_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_1ace90233:;
						{
							(*(_self_))._field_d=nullptr;
						}
					}
					_match_end_1ace90167:;
				};
			}
		}
		_match_end_1ace8eb17:;
	};
	if (((*(_self_))._field_d != nullptr)) {
		(*(_self_))._field_d.get()._field_Constant=nullptr;
		(*(_self_))._field_d.get()._field_Lvalue=false;
	};
}



inline void _1c4615ac3_typeDecl(_1c461482a_unaryEval* _self_) {
	_1c4b6a523_typeChecker _318217_tc = _1c4b6a523_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ace93841:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b70704_buildPtrFromType(&_318217_tc, &((*(_self_))._field_d.get()._field_Kind)), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ace95e1a:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b700d8_buildSptrFromType(&_318217_tc, &((*(_self_))._field_d.get()._field_Kind)), 7)});
			}
		}
		else {
			_case_begin_1ace947dc:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ace94787:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _1c4615c9e_evalData(_1c461482a_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1ace9826e:;
			{
				jule::Ptr<_1c4621d32_TypeKind> _320521_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_1c4613c8b_evalExprKind((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr.get()._field_Kind);
				(*(_self_))._field_e.get()._field_prefix=_320521_prefix;
			}
		}
		else {
			_case_begin_1ace97d40:;
			{
				(*(_self_))._field_d=_1c4613c8b_evalExprKind((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1ace97cda:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4616079_eval(_1c461482a_unaryEval* _self_, jule::Ptr<_1c4a95c23_UnaryExpr> _321427_u) {
	(*(_self_))._field_u=_321427_u;
	_1c4615c9e_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_1c4615ac3_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1c4621d32_TypeKind> _322513_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ace9c40a:;
			{
				_1c4614eac_minus(_self_);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ace9bdee:;
			{
				_1c4615188_plus(_self_);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ace9be65:;
			{
				_1c4615364_caret(_self_);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ace9becb:;
			{
				_1c4615540_excl(_self_);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ace9c042:;
			{
				_1c461571b_star(_self_);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ace9c5a3:;
			{
				_1c46158e7_amper(_self_);
			}
		}
		else {
			_case_begin_1ace9bd88:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1ace9babe:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ace9c62a:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str(_322513_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_1c45e77ca_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1ace9e3b8:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type47);
			}
		}
		_match_end_1ace9e363:;
	};
	(*(_self_))._field_d.get()._field_Mutable=true;
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c461482a_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1c46165b8_binaryEval static__1c4616b90_newPlain(jule::Ptr<_1c45e8985_Eval> _326328_e) {
	return _1c46165b8_binaryEval{._field_e=_326328_e, };;
}



inline _1c46165b8_binaryEval static__1c4616ed1_new(jule::Ptr<_1c45e8985_Eval> _326923_e, jule::Ptr<_2039861ab_Token> _326937_op) {
	return _1c46165b8_binaryEval{._field_e=_326923_e, ._field_op=_326937_op};;
}



inline jule::Bool _1c4617245_checkTypeCompatibility(_1c46165b8_binaryEval* _self_) {
	return _1c4b13125_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1c46174dc_checkStructCommonOperatorCompatibility(_1c46165b8_binaryEval* _self_) {
	jule::Ptr<_1c4ab39ee_FnIns> _328317_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1acea3543:;
			{
				_328317_overload=_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1acea4c1a:;
			{
				_328317_overload=_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1acea4c81:;
			{
				_328317_overload=_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1acea3a0a:;
			{
				_328317_overload=_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1acea3a71:;
			{
				_328317_overload=_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1acea3ad7:;
			{
				_328317_overload=_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1acea3b4d:;
			{
				_328317_overload=_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1acea4d2a:;
			{
				_328317_overload=_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1acea4d91:;
			{
				_328317_overload=_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1acea4e07:;
			{
				_328317_overload=_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1acea3994:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1acea391c:;
	};
	if ((_328317_overload == nullptr)) {
		_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1c4ab2b30_ParamIns> _331517_p = _328317_overload.get()._field_Params[1LL];;
	return _1c4b12bc4_checkAssignType((*(_self_))._field_e.get()._field_s, _331517_p.get()._field_Decl.get()._field_Reference, &(_331517_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4617784_evalNil(_1c46165b8_binaryEval* _self_) {
	if ((!(_1c4b5de84_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type116),jule::Any(_1c4622272_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1acead790:;
			{
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1acead916:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type116)}));
				return nullptr;;
			}
		}
		_match_end_1acead8a0:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c46179e8_evalEnum(_1c46165b8_binaryEval* _self_) {
	jule::Ptr<_1c4ac5802_Enum> _334017_enm = _1c4b5e803_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aceb0b7c:;
			{
				jule::Ptr<_1c4621d32_TypeKind> _334421_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_1c4b5e803_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_334421_rkind=_1c4b5e803_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1c4b13125_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_334017_enm.get()._field_Kind.get()._field_Kind), &(_334421_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1aceb0b27:;
	};
	if (((_1c4b5e803_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_334017_enm != _1c4b5e803_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1aceb04c8:;
			{
				if ((!(_1c3177a32_IsNum(_1c4622272_Str(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1aceb5c81:;
			{
				jule::Ptr<_1c4ac4d0c_EnumItem> _337817_first = _334017_enm.get()._field_Items[0LL];;
				{
					
					if (_1c3178ed9_IsI64(_337817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1aceb8a42:;
						{
							if ((_1c263c811_ReadI64(_337817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else if (_1c317911b_IsU64(_337817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1aceb806e:;
						{
							if ((_1c263c943_ReadU64(_337817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else {
						_case_begin_1aceb869b:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3391:17"));;
						}
					}
					_match_end_1aceb8635:;
				};
				_julec_label_err:;
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_1c45e92b0_pushSugggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_next:;
				goto _case_begin_1aceb5ce7;
			}
		}
		else if (_match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1aceb5ce7:;
			{
				if (((_1c4b5e45c_Prim(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1c31777bd_IsInt(_1c4b61cde_Str(_1c4b5e45c_Prim(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1aceb4d7e:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1aceb4c91:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4617c5c_evalTypeEnum(_1c46165b8_binaryEval* _self_) {
	jule::Ptr<_1c4ac6dec_TypeEnum> _341117_enm = _1c4b5ea23_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_1c4617245_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1acec0e78:;
			{
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1acec0a38:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4ac722c_Str(_341117_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1acec0708:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4617ec1_evalSptr(_1c46165b8_binaryEval* _self_) {
	if ((!(_1c4617245_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1acec2a29:;
			{
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1acec2166:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1acec2111:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4618235_evalPtr(_1c46165b8_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1acec3c8e:;
			{
				if ((!(_1c4617245_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1acec5983:;
			{
				if ((_1c4b5e6c1_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1c45e6e17_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_1c45e6e17_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_1c4b691c0_IsUnsafe(_1c4b5e6c1_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_1c461e02c_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1acec4289:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1acec482d:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4618499_evalArr(_1c46165b8_binaryEval* _self_) {
	if ((!(_1c4617245_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aceca8ab:;
			{
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1aceca988:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1acec6335:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c461870d_evalSlc(_1c46165b8_binaryEval* _self_) {
	if ((!(_1c4617245_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1acecc9e0:;
			{
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1acecc12c:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1acecc0c7:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4618972_evalFn(_1c46165b8_binaryEval* _self_) {
	if ((!(_1c4617245_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aceccd0e:;
			{
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1acece261:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1acece20b:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4618bd6_evalStruct(_1c46165b8_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1aced13ea:;
			{
				if ((_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1aced1461:;
			{
				if ((_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1aced1a7c:;
			{
				if ((_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1aced1ae3:;
			{
				if ((_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aced1b59:;
			{
				if ((!(_1c4617245_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1aced1928:;
	};
	if ((!(_1c46174dc_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4618e4a_evalTrait(_1c46165b8_binaryEval* _self_) {
	if ((!(_1c4617245_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aceda976:;
			{
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1acedaa97:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1aceda7bc:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c46191ae_evalAny(_1c46165b8_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1acedc77a:;
			{
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1acedc1e7:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type99)}));
				return nullptr;;
			}
		}
		_match_end_1acedaca6:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4619423_evalBool(_1c46165b8_binaryEval* _self_) {
	if ((!(_1c4617245_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1acede529:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1aceddb66:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1aceddb11:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4619687_evalStr(_1c46165b8_binaryEval* _self_) {
	jule::Str _365317_rk = _1c4622272_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_365317_rk.equal("str", 3))) {
		_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_365317_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1acee29a0:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1acee35e9:;
			{
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1acee1097:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type99)}));
				return nullptr;;
			}
		}
		_match_end_1acee25d7:;
	};
}



inline void _1c4619863_setTypeToGreater(_1c46165b8_binaryEval* _self_) {
	jule::Ptr<_1c4b6197b_Prim> _368013_lp = _1c4b5e45c_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1c4b6197b_Prim> _368113_rp = _1c4b5e45c_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_1c45e77ca_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1c45e77ca_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_368113_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1c45e77ca_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_368013_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1c45e77ca_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_368113_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1c3177119_IsGreater(_368113_rp.get()._field_Kind, _368013_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1c45e77ca_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_368113_rp.get()._field_Kind;
		};
	};
}



inline void _1c4619aa5_checkModData(_1c46165b8_binaryEval* _self_, jule::Ptr<_1c45e6e17_Data>* _371336_d) {
	if ((!(_1c45e77ca_IsConst((*(_371336_d)).ptr())))) {
		if (((_1c4b5e45c_Prim((*(_371336_d)).get()._field_Kind.ptr()) == nullptr) || (!(_1c31777bd_IsInt(_1c4b5e45c_Prim((*(_371336_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1c45ced89_sigAssignable(jule::Str("i64", 3), _371336_d)) {
			_case_begin_1aceecc74:;
			{
				_1c317879c_SetI64((*(_371336_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c3178406_AsI64((*(_371336_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1c45d021e_unsigAssignable(jule::Str("u64", 3), _371336_d)) {
			_case_begin_1aceec955:;
			{
				_1c31788ce_SetU64((*(_371336_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c3178538_AsU64((*(_371336_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1aceec8de:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aceeb349:;
	};
}



inline void _1c4619c81_mod(_1c46165b8_binaryEval* _self_) {
	_1c4619aa5_checkModData(_self_, &((*(_self_))._field_l));
	_1c4619aa5_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1c461a138_numbersAreCompatibile(_1c46165b8_binaryEval* _self_, jule::Str* _373537_lk, jule::Str* _373547_rk) {
	if ((!(_1c3177a32_IsNum((*(_373547_rk)))))) {
		return false;;
	};
	if ((_1c45e77ca_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_373537_lk)).equal("f32", 3)) {
		if ((_1c45e77ca_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_373547_rk)).equal("f32", 3);;
	};
	if ((*(_373537_lk)).equal("f64", 3)) {
		if ((_1c45e77ca_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_373547_rk)).equal("f64", 3);;
	};
	if ((_1c45e77ca_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_373537_lk)) == (*(_373547_rk)));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c461a39c_evalFloat(_1c46165b8_binaryEval* _self_) {
	jule::Str _376113_lk = _1c4b5e45c_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _376213_rk = _1c4b5e45c_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1c461a138_numbersAreCompatibile(_self_, &(_376113_lk), &(_376213_rk))))) {
		_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_376113_lk, &__jule_any_type5),jule::Any(_376213_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1ad005b06:;
			{
				if (((!(_1c45e77ca_IsConst((*(_self_))._field_l.ptr()))) || (!(_1c45d0560_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_376113_lk, &__jule_any_type5),jule::Any(_376213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_1c45e77ca_IsConst((*(_self_))._field_r.ptr()))) || (!(_1c45d0560_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_376113_lk, &__jule_any_type5),jule::Any(_376213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1c317879c_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1c3178406_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_1c31788ce_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1c3178538_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_1c461d812_isOkForShifting(&((*(_self_))._field_r))))) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ad005023:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad00a512:;
			{
				_1c4619863_setTypeToGreater(_self_);
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1ad00a4ac:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1ad004d25:;
			{
				_1c4619863_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad00c569:;
			{
				if ((!(_1c31777bd_IsInt(_376213_rk)))) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_376113_lk, &__jule_any_type5),jule::Any(_376213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1c4619c81_mod(_self_);
				_1c4619863_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1ad00b436:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad00aec4:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c461a611_evalInt(_1c46165b8_binaryEval* _self_) {
	jule::Str _382713_lk = _1c4b5e45c_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _382813_rk = _1c4b5e45c_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1ad00ca53:;
			{
				if (((!(_1c31777bd_IsInt(_382713_lk))) || (!(_1c31777bd_IsInt(_382813_rk))))) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_382713_lk, &__jule_any_type5),jule::Any(_382813_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_1c461d812_isOkForShifting(&((*(_self_))._field_r))))) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ad01066b:;
	};
	if ((!(_1c461a138_numbersAreCompatibile(_self_, &(_382713_lk), &(_382813_rk))))) {
		_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_382713_lk, &__jule_any_type5),jule::Any(_382813_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad01354d:;
			{
				return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1ad0134b5:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ad01079d:;
			{
				_1c4619863_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad0154a6:;
			{
				_1c4619c81_mod(_self_);
				_1c4619863_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ad01431d:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ad014230:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c461a875_evalPrim(_1c46165b8_binaryEval* _self_) {
	jule::Ptr<_1c4b6197b_Prim> _388613_prim = _1c4b5e45c_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1c4b6494b_IsBool(_388613_prim.ptr())) {
			_case_begin_1ad017497:;
			{
				return _1c4619423_evalBool(_self_);;
			}
		}
		else if (_1c4b64bb0_IsStr(_388613_prim.ptr())) {
			_case_begin_1ad01751e:;
			{
				return _1c4619687_evalStr(_self_);;
			}
		}
		_match_end_1ad0173dc:;
	};
	if ((_1c4b5e45c_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c4b61cde_Str(_388613_prim.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_1c3177900_IsFloat(_388613_prim.get()._field_Kind)) {
			_case_begin_1ad019c08:;
			{
				return _1c461a39c_evalFloat(_self_);;
			}
		}
		else if (_1c31777bd_IsInt(_388613_prim.get()._field_Kind)) {
			_case_begin_1ad0195cb:;
			{
				return _1c461a611_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1ad019565:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad017aa2:;
	};
}



inline void _1c461aa51_checkSpecialCases(_1c46165b8_binaryEval* _self_) {
	if (((!(_1c4b5cca7_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_1c4b4629b_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_1c4b5cca7_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_1c4b4629b_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c461acb5_evalOp(_1c46165b8_binaryEval* _self_) {
	_1c461aa51_checkSpecialCases(_self_);
	{
		
		if (_1c4b463cd_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1ad01d37c:;
			{
				_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (((_1c4b5e45c_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _1c4b64e24_IsAny(_1c4b5e45c_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad01e009:;
			{
				({
					jule::Ptr<_1c45e6e17_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1c45e6e17_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ad01e070;
			}
		}
		else if (((_1c4b5e45c_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _1c4b64e24_IsAny(_1c4b5e45c_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad01e070:;
			{
				return _1c46191ae_evalAny(_self_);;
			}
		}
		else if ((_1c4b5ea23_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01d965:;
			{
				({
					jule::Ptr<_1c45e6e17_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1c45e6e17_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ad01d9dc;
			}
		}
		else if ((_1c4b5ea23_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01d9dc:;
			{
				return _1c4617c5c_evalTypeEnum(_self_);;
			}
		}
		else if (_1c4b4629b_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1ad01da64:;
			{
				return _1c4617784_evalNil(_self_);;
			}
		}
		else if ((_1c4b5e803_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01dadb:;
			{
				({
					jule::Ptr<_1c45e6e17_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1c45e6e17_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ad01e0e7;
			}
		}
		else if ((_1c4b5e803_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01e0e7:;
			{
				return _1c46179e8_evalEnum(_self_);;
			}
		}
		else if ((_1c4b5e58e_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01e16e:;
			{
				({
					jule::Ptr<_1c45e6e17_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1c45e6e17_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ad01e1e6;
			}
		}
		else if ((_1c4b5e58e_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01e1e6:;
			{
				return _1c4617ec1_evalSptr(_self_);;
			}
		}
		else if ((_1c4b5e6c1_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01e26d:;
			{
				({
					jule::Ptr<_1c45e6e17_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1c45e6e17_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ad01e2e5;
			}
		}
		else if ((_1c4b5e6c1_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01e2e5:;
			{
				return _1c4618235_evalPtr(_self_);;
			}
		}
		else if ((_1c4b5ec87_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01e36c:;
			{
				return _1c4618499_evalArr(_self_);;
			}
		}
		else if ((_1c4b5eeeb_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01e3e4:;
			{
				return _1c461870d_evalSlc(_self_);;
			}
		}
		else if ((_1c4b60260_Fn((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01e46b:;
			{
				return _1c4618972_evalFn(_self_);;
			}
		}
		else if ((_1c4b60738_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01e4e3:;
			{
				({
					jule::Ptr<_1c45e6e17_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1c45e6e17_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ad01e56a;
			}
		}
		else if ((_1c4b60738_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01e56a:;
			{
				return _1c4618e4a_evalTrait(_self_);;
			}
		}
		else if ((_1c4b604c4_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01e5e2:;
			{
				return _1c4618bd6_evalStruct(_self_);;
			}
		}
		else if ((_1c4b5e45c_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad01e669:;
			{
				return _1c461a875_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1ad01d8dd:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad01d877:;
	};
}



inline void _1c461b03a_evalConst(_1c46165b8_binaryEval* _self_, jule::Ptr<_1c45e6e17_Data>* _397033_d) {
	{
		
		if (((*(_397033_d)) == nullptr)) {
			_case_begin_1ad02d766:;
			{
				return;;
			}
		}
		else if ((!(_1c45e77ca_IsConst((*(_self_))._field_l.ptr()))) || (!(_1c45e77ca_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1ad02d7cc:;
			{
				(*(_397033_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1ad02d0d4:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1ad02ecea:;
			{
				(*(_397033_d)).get()._field_Constant=static__1c25eb5d3_NewBool(_1c3179abc_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad02ed61:;
			{
				(*(_397033_d)).get()._field_Constant=static__1c25eb5d3_NewBool((!(_1c3179abc_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1ad02edc7:;
			{
				(*(_397033_d)).get()._field_Constant=static__1c25eb5d3_NewBool(_1c317998a_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ad02ee3d:;
			{
				(*(_397033_d)).get()._field_Constant=static__1c25eb5d3_NewBool(_1c3179858_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1ad02eea4:;
			{
				(*(_397033_d)).get()._field_Constant=static__1c25eb5d3_NewBool(_1c3179e63_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1ad03001a:;
			{
				(*(_397033_d)).get()._field_Constant=static__1c25eb5d3_NewBool(_1c3179bee_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1ad030081:;
			{
				(*(_397033_d)).get()._field_Constant=static__1c25eb5d3_NewBool(_1c317a095_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad0300e7:;
			{
				(*(_397033_d)).get()._field_Constant=static__1c25eb5d3_NewBool(_1c3179d31_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ad03015d:;
			{
				_1c317a1c7_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ad0301c4:;
			{
				_1c317a309_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad03023a:;
			{
				_1c317a43b_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ad0302a1:;
			{
				jule::Bool _400717_ok = _1c317a56d_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_400717_ok)) && (_1c317866a_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_1c4b6197b_Prim> _401221_prim = _1c4b5e45c_Prim((*(_397033_d)).get()._field_Kind.ptr());;
				{
					
					if (_1c3177559_IsSigInt(_401221_prim.get()._field_Kind)) {
						_case_begin_1ad041647:;
						{
							_1c317879c_SetI64((*(_397033_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c3178406_AsI64((*(_397033_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_1c317768b_IsUnsigInt(_401221_prim.get()._field_Kind)) {
						_case_begin_1ad0416be:;
						{
							_1c31788ce_SetU64((*(_397033_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c3178538_AsU64((*(_397033_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_1ad04158c:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad030328:;
			{
				jule::Bool _402017_ok = _1c317a6a0_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_402017_ok)) && (_1c317866a_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1ad0303a0:;
			{
				_1c317a914_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ad030427:;
			{
				_1c317a7d2_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ad03049e:;
			{
				_1c317aa46_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1ad030526:;
			{
				_1c317ab78_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1ad03059d:;
			{
				_1c317acaa_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_1ad02e5ad:;
	};
	(*(_397033_d)).get()._field_Model=jule::Any((*(_397033_d)).get()._field_Constant, &__jule_any_type47);
	_1c461eca8_applyCastModelByEnum(_397033_d, _1c4b5e803_Enum((*(_397033_d)).get()._field_Kind.ptr()));
}



inline void _1c461b2b0_checkData(_1c46165b8_binaryEval* _self_, jule::Ptr<_1c45e6e17_Data>* _404533_d) {
	jule::Ptr<_1c4ab39ee_FnIns> _404613_f = _1c4b60260_Fn((*(_404533_d)).get()._field_Kind.ptr());;
	if ((((_404613_f != nullptr) && (_404613_f.get()._field_Decl != nullptr)) && _1c4a810e8_IsMethod(_404613_f.get()._field_Decl.ptr()))) {
		_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1c461b48b_checkDatas(_1c46165b8_binaryEval* _self_) {
	_1c461b2b0_checkData(_self_, &((*(_self_))._field_l));
	_1c461b2b0_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1c461b711_setModel(_1c46165b8_binaryEval* _self_, jule::Ptr<_1c45e6e17_Data>* _405732_d) {
	if (_1c45e77ca_IsConst((*(_405732_d)).ptr())) {
		if ((_1c45e77ca_IsConst((*(_self_))._field_l.ptr()) && _1c45e77ca_IsConst((*(_self_))._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c45e6e17_Data> _406518_l;;
	jule::Ptr<_1c45e6e17_Data> _406525_r;;
	({
		jule::Ptr<_1c45e6e17_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1c45e6e17_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_406518_l = ___jule_assign_arg;
		_406525_r = _1___jule_assign_arg;
	});
	if ((!(_1c45e7ad8_GoodOperand(_406518_l.ptr(), &(_406525_r))))) {
		({
			jule::Ptr<_1c45e6e17_Data> ___jule_assign_arg = _406525_r;
			jule::Ptr<_1c45e6e17_Data> _1___jule_assign_arg = _406518_l;
			_406518_l = ___jule_assign_arg;
			_406525_r = _1___jule_assign_arg;
		});
	};
	(*(_405732_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4aab970_BinopExprModel>(_1c4aab970_BinopExprModel{._field_Left=jule::new_ptr<_1c4aab783_OperandExprModel>(_1c4aab783_OperandExprModel{._field_Kind=_406518_l.get()._field_Kind, ._field_Model=_406518_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1c4aab783_OperandExprModel>(_1c4aab783_OperandExprModel{._field_Kind=_406525_r.get()._field_Kind, ._field_Model=_406525_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type117);
}



inline void _1c461b986_postEval(_1c46165b8_binaryEval* _self_, jule::Ptr<_1c45e6e17_Data>* _408332_d) {
	(*(_408332_d)).get()._field_Lvalue=false;
	_1c461b711_setModel(_self_, _408332_d);
}



inline jule::Ptr<_1c45e6e17_Data> _1c461bd3d_solveExplicit(_1c46165b8_binaryEval* _self_, jule::Ptr<_1c45e6e17_Data>* _408837_l, jule::Ptr<_1c45e6e17_Data>* _408852_r) {
	({
		jule::Ptr<_1c45e6e17_Data> ___jule_assign_arg = (*(_408837_l));
		jule::Ptr<_1c45e6e17_Data> _1___jule_assign_arg = (*(_408852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1c461b48b_checkDatas(_self_);
	jule::Ptr<_1c45e6e17_Data> _409317_d = _1c461acb5_evalOp(_self_);;
	({
		jule::Ptr<_1c45e6e17_Data> ___jule_assign_arg = (*(_408837_l));
		jule::Ptr<_1c45e6e17_Data> _1___jule_assign_arg = (*(_408852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1c461b03a_evalConst(_self_, &(_409317_d));
	if ((_409317_d != nullptr)) {
		_409317_d.get()._field_Mutable=true;
		_1c461b986_postEval(_self_, &(_409317_d));
	};
	return _409317_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c461c14b_eval(_1c46165b8_binaryEval* _self_, jule::Ptr<_1c4a97230_BinopExpr>* _410828_op) {
	if ((*(_410828_op)).get()._field_Op.get()._field_Kind.equal("=", 1)) {
		_1c45e8e91_pushErr((*(_self_))._field_e.ptr(), (*(_410828_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1c45e92b0_pushSugggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c45e6e17_Data> _411517_l = _1c4613c8b_evalExprKind((*(_self_))._field_e, (*(_410828_op)).get()._field_Left.get()._field_Kind);;
	if (((_411517_l == nullptr) || (_411517_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1c4621d32_TypeKind> _412017_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_411517_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_412017_prefix;
	});;
	jule::Ptr<_1c45e6e17_Data> _412317_r = _1c4613c8b_evalExprKind((*(_self_))._field_e, (*(_410828_op)).get()._field_Right.get()._field_Kind);;
	if (((_412317_r == nullptr) || (_412317_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_410828_op)).get()._field_Op;
	jule::Ptr<_1c45e6e17_Data> _413017_d = _1c461bd3d_solveExplicit(_self_, &(_411517_l), &(_412317_r));;
	if ((((_413017_d != nullptr) && _411517_l.get()._field_IsRune) && _412317_r.get()._field_IsRune)) {
		_413017_d.get()._field_IsRune=true;
	};
	return _413017_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c46165b8_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c47006e6_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4701230_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c4622272_Str(_1c4621d32_TypeKind* _self_) {
	if (_1c4b4629b_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		(_7417_kind).append("...", 3);
	};
	if (_1c4b4e6b1_CppLinked(_self_)) {
		(_7417_kind).append("cpp.", 4);
		_7417_kind+=(*(_self_))._field_CppIdent;
	} else {
		_7417_kind+=_1c46218c0_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1c47015b5_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _1c4622580_Equal(jule::Ptr<_1c4621d32_TypeKind> _self_, jule::Ptr<_1c4621d32_TypeKind> _9021_other) {
	if (_1c4b4629b_IsNil(_self_.ptr())) {
		return _1c4b4629b_IsNil(_9021_other.ptr());;
	};
	if (_1c4b4e6b1_CppLinked(_self_.ptr())) {
		return (_1c4b4e6b1_CppLinked(_9021_other.ptr()) && (_self_.get()._field_CppIdent == _9021_other.get()._field_CppIdent));;
	};
	return _1c46218c0_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1c462177c_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1c4b4e6b1_CppLinked(_1c4621d32_TypeKind* _self_) {
	return ((*(_self_))._field_CppIdent.len() != 0LL);;
}



inline jule::Bool _1c4b4629b_IsNil(_1c4621d32_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1c4b463cd_Void(_1c4621d32_TypeKind* _self_) {
	jule::Ptr<_1c4b6197b_Prim> _11113_prim = _1c4b5e45c_Prim(_self_);;
	return ((_11113_prim != nullptr) && _11113_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _1c4b5cca7_Comparable(_1c4621d32_TypeKind* _self_) {
	{
		_1c4621d32_TypeKind* _11821__self = (&((*(_self_))));;
		if ((_1c4b604c4_Struct(_11821__self) != nullptr)) {
			return _1c4b604c4_Struct(_11821__self).get()._field_Comparable;;
		};
		return (((_1c4b6099c_Map(_11821__self) == nullptr) && (_1c4b5eeeb_Slc(_11821__self) == nullptr)) && (_1c4b60260_Fn(_11821__self) == nullptr));;
	};
}



inline jule::Bool _1c4b5cdd9_Mutable(_1c4621d32_TypeKind* _self_) {
	{
		_1c4621d32_TypeKind* _12921__self = (&((*(_self_))));;
		if ((_1c4b604c4_Struct(_12921__self) != nullptr)) {
			return _1c4b604c4_Struct(_12921__self).get()._field_Mutable;;
		};
		if ((_1c4b60738_Trait(_12921__self) != nullptr)) {
			return _1c4b60738_Trait(_12921__self).get()._field_Mutable;;
		};
		if ((_1c4b5e45c_Prim(_12921__self) != nullptr)) {
			jule::Ptr<_1c4b6197b_Prim> _13721_p = _1c4b5e45c_Prim(_12921__self);;
			return _1c4b64e24_IsAny(_13721_p.ptr());;
		};
		if ((_1c4b5ec87_Arr(_12921__self) != nullptr)) {
			return _1c4b5cdd9_Mutable(_1c4b5ec87_Arr(_12921__self).get()._field_Elem.ptr());;
		};
		return (((_1c4b5eeeb_Slc(_12921__self) != nullptr) || (_1c4b5e6c1_Ptr(_12921__self) != nullptr)) || (_1c4b5e58e_Sptr(_12921__self) != nullptr));;
	};
}



inline jule::Bool _1c4b5de84_NilCompatible(_1c4621d32_TypeKind* _self_) {
	{
		_1c4621d32_TypeKind* _15221__self = (&((*(_self_))));;
		jule::Ptr<_1c4b6197b_Prim> _15417_prim = _1c4b5e45c_Prim(_15221__self);;
		if (((_15417_prim != nullptr) && _1c4b64e24_IsAny(_15417_prim.ptr()))) {
			return true;;
		};
		return (((((((_1c4b4629b_IsNil(_15221__self) || (_1c4b60260_Fn(_15221__self) != nullptr)) || (_1c4b5e58e_Sptr(_15221__self) != nullptr)) || (_1c4b5e6c1_Ptr(_15221__self) != nullptr)) || (_1c4b60738_Trait(_15221__self) != nullptr)) || (_1c4b5eeeb_Slc(_15221__self) != nullptr)) || (_1c4b6099c_Map(_15221__self) != nullptr)) || (_1c4b5ea23_TypeEnum(_15221__self) != nullptr));;
	};
}



inline jule::Bool _1c4b5e0b6_PerformsRC(_1c4621d32_TypeKind* _self_) {
	{
		_1c4621d32_TypeKind* _17321__self = (&((*(_self_))));;
		jule::Ptr<_1c4b6197b_Prim> _17417_prim = _1c4b5e45c_Prim(_17321__self);;
		if ((_17417_prim != nullptr)) {
			return _1c4b64e24_IsAny(_17417_prim.ptr());;
		};
		return (((_1c4b5e58e_Sptr(_17321__self) != nullptr) || (_1c4b5eeeb_Slc(_17321__self) != nullptr)) || (_1c4b60738_Trait(_17321__self) != nullptr));;
	};
}



inline jule::Bool _1c4b5e1e8_SupportsCloning(_1c4621d32_TypeKind* _self_) {
	{
		_1c4621d32_TypeKind* _18521__self = (&((*(_self_))));;
		{
			
			if ((_1c4b5e45c_Prim(_18521__self) != nullptr)) {
				_case_begin_1ad07e0be:;
				{
					return (!(_1c4b64e24_IsAny(_1c4b5e45c_Prim(_18521__self).ptr())));;
				}
			}
			else if ((_1c4b5e803_Enum(_18521__self) != nullptr)) {
				_case_begin_1ad081137:;
				{
					return true;;
				}
			}
			else if ((_1c4b60260_Fn(_18521__self) != nullptr)) {
				_case_begin_1ad08119d:;
				{
					return true;;
				}
			}
			else if ((_1c4b5e6c1_Ptr(_18521__self) != nullptr)) {
				_case_begin_1ad081214:;
				{
					return true;;
				}
			}
			else if ((_1c4b5eeeb_Slc(_18521__self) != nullptr)) {
				_case_begin_1ad080c5d:;
				{
					return _1c4b5e1e8_SupportsCloning(_1c4b5eeeb_Slc(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1c4b6099c_Map(_18521__self) != nullptr)) {
				_case_begin_1ad080cc4:;
				{
					jule::Ptr<_1c4b6719b_Map> _19821_m = _1c4b6099c_Map(_18521__self);;
					return (_1c4b5e1e8_SupportsCloning(_19821_m.get()._field_Key.ptr()) && _1c4b5e1e8_SupportsCloning(_19821_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1c4b5ec87_Arr(_18521__self) != nullptr)) {
				_case_begin_1ad080d3a:;
				{
					return _1c4b5e1e8_SupportsCloning(_1c4b5ec87_Arr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1c4b5e58e_Sptr(_18521__self) != nullptr)) {
				_case_begin_1ad080da1:;
				{
					return _1c4b5e1e8_SupportsCloning(_1c4b5e58e_Sptr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1c4b604c4_Struct(_18521__self) != nullptr)) {
				_case_begin_1ad081445:;
				{
					jule::Ptr<_1c4aab255_StructIns> _20525_s = _1c4b604c4_Struct(_18521__self);;
					return (((_20525_s.get()._field_Decl != nullptr) && (!(_20525_s.get()._field_Decl.get()._field_CppLinked))) && _1c4a7484a_IsDerives(_20525_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1ad080be7:;
				{
					return false;;
				}
			}
			_match_end_1ad080b81:;
		};
	};
}



inline jule::Bool _1c4b5e32a_Variadicable(_1c4621d32_TypeKind* _self_) {
	{
		_1c4621d32_TypeKind* _21821__self = (&((*(_self_))));;
		return (_1c4b5eeeb_Slc(_21821__self) != nullptr);;
	};
}



inline jule::Ptr<_1c4b6197b_Prim> _1c4b5e45c_Prim(_1c4621d32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1ad07e3cc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4b6197b_Prim>(6);;
			}
		}
		else {
			_case_begin_1ad080521:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad0804bb:;
	};
}



inline jule::Ptr<_1c4b65210_Sptr> _1c4b5e58e_Sptr(_1c4621d32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1ad0805a9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4b65210_Sptr>(7);;
			}
		}
		else {
			_case_begin_1ad088b78:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad0890a7:;
	};
}



inline jule::Ptr<_1c4b686ec_Ptr> _1c4b5e6c1_Ptr(_1c4621d32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1ad088c33:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4b686ec_Ptr>(12);;
			}
		}
		else {
			_case_begin_1ad089849:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad089c78:;
	};
}



inline jule::Ptr<_1c4ac5802_Enum> _1c4b5e803_Enum(_1c4621d32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1ad089904:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4ac5802_Enum>(3);;
			}
		}
		else {
			_case_begin_1ad08a51a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad08a949:;
	};
}



inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b5ea23_TypeEnum(_1c4621d32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1ad08a5c5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4ac6dec_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1ad08b1db:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad08b61a:;
	};
}



inline jule::Ptr<_1c4b67c90_Arr> _1c4b5ec87_Arr(_1c4621d32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1ad08b296:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4b67c90_Arr>(11);;
			}
		}
		else {
			_case_begin_1ad08bdac:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad08c2db:;
	};
}



inline jule::Ptr<_1c4b65b6c_Slc> _1c4b5eeeb_Slc(_1c4621d32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1ad08be67:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4b65b6c_Slc>(8);;
			}
		}
		else {
			_case_begin_1ad08ca7d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad08ceac:;
	};
}



inline jule::Ptr<_1c4ab39ee_FnIns> _1c4b60260_Fn(_1c4621d32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1ad08cb38:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4ab39ee_FnIns>(1);;
			}
		}
		else {
			_case_begin_1ad08d74e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad08db7d:;
	};
}



inline jule::Ptr<_1c4aab255_StructIns> _1c4b604c4_Struct(_1c4621d32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ad08d809:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4aab255_StructIns>(0);;
			}
		}
		else {
			_case_begin_1ad08e420:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad08e84e:;
	};
}



inline jule::Ptr<_1c4ac306e_Trait> _1c4b60738_Trait(_1c4621d32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1ad08e4ca:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4ac306e_Trait>(2);;
			}
		}
		else {
			_case_begin_1ad0900e1:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad090520:;
	};
}



inline jule::Ptr<_1c4b6719b_Map> _1c4b6099c_Map(_1c4621d32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1ad09019b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4b6719b_Map>(10);;
			}
		}
		else {
			_case_begin_1ad090cb2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad0911e1:;
	};
}



inline jule::Ptr<_1c4b66673_Tuple> _1c4b60c11_Tup(_1c4621d32_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1ad090d6c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4b66673_Tuple>(9);;
			}
		}
		else {
			_case_begin_1ad091983:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad091db2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c4621d32_TypeKind _Src) {
	_Stream << _1c4622272_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1c4b614b4_checked(_1c4b610b8_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}



inline void _1c4b61690_removeKind(_1c4b610b8_TypeSymbol* _self_) {
	(*(_self_))._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b610b8_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c4b61cde_Str(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1c4b620ec_Equal(jule::Ptr<_1c4b6197b_Prim> _self_, jule::Ptr<_1c4621d32_TypeKind> _37121_other) {
	jule::Ptr<_1c4b6197b_Prim> _37213_prim = _1c4b5e45c_Prim(_37121_other.ptr());;
	if ((_37213_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _37213_prim.get()._field_Kind);;
}



inline jule::Bool _1c4b62570_IsConstraint(_1c4b6197b_Prim* _self_) {
	return ((((!(_1c4b64bb0_IsStr(_self_))) && (!(_1c4b64e24_IsAny(_self_)))) && (!(_1c4b6494b_IsBool(_self_)))) && (!(_1c3177a32_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1c4b627d4_IsI8(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1c4b62a48_IsI16(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1c4b62cac_IsI32(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1c4b63021_IsI64(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1c4b63285_IsU8(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1c4b634e9_IsU16(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1c4b6375d_IsU32(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1c4b639c2_IsU64(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1c4b63c36_IsF32(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1c4b63e9a_IsF64(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1c4b6420e_IsInt(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1c4b64473_IsUint(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1c4b646d7_IsUintptr(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1c4b6494b_IsBool(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1c4b64bb0_IsStr(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1c4b64e24_IsAny(_1c4b6197b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b6197b_Prim _Src) {
	_Stream << _1c4b61cde_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c4b65573_Str(_1c4b65210_Sptr* _self_) {
	return (jule::Str("&", 1) + _1c4622272_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c4b65881_Equal(jule::Ptr<_1c4b65210_Sptr> _self_, jule::Ptr<_1c4621d32_TypeKind> _44821_other) {
	jule::Ptr<_1c4b65210_Sptr> _44913_sptr = _1c4b5e58e_Sptr(_44821_other.ptr());;
	if ((_44913_sptr == nullptr)) {
		return false;;
	};
	return _1c4622580_Equal(_self_.get()._field_Elem, _44913_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b65210_Sptr _Src) {
	_Stream << _1c4b65573_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c4b66101_Str(_1c4b65b6c_Slc* _self_) {
	return (jule::Str("[]", 2) + _1c4622272_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c4b6640e_Equal(jule::Ptr<_1c4b65b6c_Slc> _self_, jule::Ptr<_1c4621d32_TypeKind> _46721_other) {
	jule::Ptr<_1c4b65b6c_Slc> _46813_slc = _1c4b5eeeb_Slc(_46721_other.ptr());;
	if ((_46813_slc == nullptr)) {
		return false;;
	};
	return _1c4622580_Equal(_self_.get()._field_Elem, _46813_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b65b6c_Slc _Src) {
	_Stream << _1c4b66101_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c4b669d6_Str(_1c4b66673_Tuple* _self_) {
	jule::Str _48417_s = jule::Str("(", 1);;
	_48417_s+=_1c4622272_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad0a0d7c:;
		if (it != expr_end) {
			jule::Ptr<_1c4621d32_TypeKind> *_48616_t = it;
			{
				(_48417_s).append(",", 1);
				_48417_s+=_1c4622272_Str((*(_48616_t)).ptr());
			}
			_iter_next_1ad0a0d7c:;
			++it;
			goto _iter_begin_1ad0a0d7c;
		}
		_iter_end_1ad0a0d7c:;
	};
	(_48417_s).append(")", 1);
	return _48417_s;;
}



inline jule::Bool _1c4b66ce4_Equal(jule::Ptr<_1c4b66673_Tuple> _self_, jule::Ptr<_1c4621d32_TypeKind> _49521_other) {
	jule::Ptr<_1c4b66673_Tuple> _49613_tup = _1c4b60c11_Tup(_49521_other.ptr());;
	if ((_49613_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _49613_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I32 _50317_i = 0LL;;
	for (; (_50317_i < _self_.get()._field_Types.len()); (_50317_i)++) {
		{
			if ((!(_1c4622580_Equal(_self_.get()._field_Types[_50317_i], _49613_tup.get()._field_Types[_50317_i])))) {
				return false;;
			};
		}
	_iter_next_1ad0a3896:;
	}
	_iter_end_1ad0a3896:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b66673_Tuple _Src) {
	_Stream << _1c4b669d6_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c4b6750e_Str(_1c4b6719b_Map* _self_) {
	jule::Str _52317_s = jule::Str("[", 1);;
	_52317_s+=_1c4622272_Str((*(_self_))._field_Key.ptr());
	(_52317_s).append(":", 1);
	_52317_s+=_1c4622272_Str((*(_self_))._field_Val.ptr());
	(_52317_s).append("]", 1);
	return _52317_s;;
}



inline jule::Bool _1c4b6781c_Equal(jule::Ptr<_1c4b6719b_Map> _self_, jule::Ptr<_1c4621d32_TypeKind> _53221_other) {
	jule::Ptr<_1c4b6719b_Map> _53313_m = _1c4b6099c_Map(_53221_other.ptr());;
	if ((_53313_m == nullptr)) {
		return false;;
	};
	return (_1c4622580_Equal(_self_.get()._field_Key, _53313_m.get()._field_Key) && _1c4622580_Equal(_self_.get()._field_Val, _53313_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b6719b_Map _Src) {
	_Stream << _1c4b6750e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c4b68103_Str(_1c4b67c90_Arr* _self_) {
	jule::Str _55117_s = jule::Str("[", 1);;
	_55117_s+=_1c3174853_Itoa((*(_self_))._field_N);
	(_55117_s).append("]", 1);
	_55117_s+=_1c4622272_Str((*(_self_))._field_Elem.ptr());
	return _55117_s;;
}



inline jule::Bool _1c4b68411_Equal(jule::Ptr<_1c4b67c90_Arr> _self_, jule::Ptr<_1c4621d32_TypeKind> _55921_other) {
	jule::Ptr<_1c4b67c90_Arr> _56013_arr = _1c4b5ec87_Arr(_55921_other.ptr());;
	if ((_56013_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _56013_arr.get()._field_N) && _1c4622580_Equal(_self_.get()._field_Elem, _56013_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b67c90_Arr _Src) {
	_Stream << _1c4b68103_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c4b68a60_Str(_1c4b686ec_Ptr* _self_) {
	if (_1c4b691c0_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1c4622272_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c4b68d6d_Equal(jule::Ptr<_1c4b686ec_Ptr> _self_, jule::Ptr<_1c4621d32_TypeKind> _58321_other) {
	jule::Ptr<_1c4b686ec_Ptr> _58413_ptr = _1c4b5e6c1_Ptr(_58321_other.ptr());;
	if ((_58413_ptr == nullptr)) {
		return false;;
	};
	return _1c4622580_Equal(_self_.get()._field_Elem, _58413_ptr.get()._field_Elem);;
}



inline jule::Bool _1c4b691c0_IsUnsafe(_1c4b686ec_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b686ec_Ptr _Src) {
	_Stream << _1c4b68a60_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b69643_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1c4b6ac2c_pushErr(_1c4b6a523_typeChecker* _self_, jule::Ptr<_2039861ab_Token> _66926_token, jule::Str _66941_fmt, jule::Slice<jule::Any> _66954_args) {
	_1c4b0a936_pushErr((*(_self_))._field_s.ptr(), _66926_token, _66941_fmt, _66954_args);
}



inline void _1c4b6ae08_allowBuiltin(_1c4b6a523_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1c4b6b0d4_disallowBuiltin(_1c4b6a523_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Ptr<_1c4b6197b_Prim> _1c4b6b3e2_buildPrim(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>* _68129_decl) {
	if ((!(_1c4b754d9_isPrim((*(_68129_decl)).get()._field_Ident)))) {
		_1c4b6ac2c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_68129_decl)).get()._field_Generics.len() > 0LL)) {
		_1c4b6ac2c_pushErr(_self_, (*(_68129_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_68129_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return _1c4b74e9a_buildPrimType((*(_68129_decl)).get()._field_Ident);;
}



inline void _1ad0b2993_pushReference(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4aab255_StructIns>* _69540_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1acd473b5_Exist((*(_self_))._field_refers.ptr(), (*(_69540_t)))) {
		return;;
	};
	_1c4ab75c4_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_69540_t)), &__jule_any_type9));
}

inline void _1ad0b5820_pushReference(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4ac306e_Trait>* _69540_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ad0b747b_Exist((*(_self_))._field_refers.ptr(), (*(_69540_t)))) {
		return;;
	};
	_1c4ab75c4_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_69540_t)), &__jule_any_type10));
}



inline void _1c4b6b8dc_pushReferenceByKind(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4621d32_TypeKind>* _70543_k) {
	{
		
		if ((_1c4b604c4_Struct((*(_70543_k)).ptr()) != nullptr)) {
			_case_begin_1ad0b1651:;
			{
				jule::Ptr<_1c4aab255_StructIns> _70821_t = _1c4b604c4_Struct((*(_70543_k)).ptr());;
				_1ad0b2993_pushReference(_self_, &(_70821_t));
			}
		}
		else if ((_1c4b60738_Trait((*(_70543_k)).ptr()) != nullptr)) {
			_case_begin_1ad0b16c8:;
			{
				jule::Ptr<_1c4ac306e_Trait> _71121_t = _1c4b60738_Trait((*(_70543_k)).ptr());;
				_1ad0b5820_pushReference(_self_, &(_71121_t));
			}
		}
		_match_end_1ad0b1541:;
	};
}



inline void _1c4b6bca5_pushCycleError(_1c4b6a523_typeChecker* _self_, jule::Any _71629_def1, jule::Any _71640_def2, jule::Str* _71656_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _71813_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _71828_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_71828_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1ad0ba99b:;
				{
					return (*(_71828_def)).cast_ptr<_1c4701230_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1ad0baa12:;
				{
					return (*(_71828_def)).cast_ptr<_1c4a86ebc_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1ad0ba35d:;
				{
					return jule::Str();;
				}
			}
			_match_end_1ad0ba281:;
		};
	});;
	jule::Str _72813_def1Ident = _71813_getIdent(&(_71629_def1));;
	jule::Str _72913_def2Ident = _71813_getIdent(&(_71640_def2));;
	jule::Str _73013_refersTo = _1c2220d40_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_72813_def1Ident, &__jule_any_type5),jule::Any(_72913_def2Ident, &__jule_any_type5)}));;
	((*(_71656_message))).buffer.insert(0, (((_1c2171697_Repeat(jule::Str(" ", 1), 7LL) + _73013_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c4b6c15c_checkCrossCycle(_1c4b6a523_typeChecker* _self_, jule::Any _73430_decl, jule::Str* _73446_message) {
	{
		auto &_match_expr{ _73430_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ad0bcb13:;
			{
				jule::Ptr<_1c4701230_TypeAlias> _73717_ta = _73430_decl.cast_ptr<_1c4701230_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_73717_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad0bd5c5:;
					if (it != expr_end) {
						jule::Any *_73820_d = it;
						{
							{
								
								if (((*(_73820_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_1ad0be2b8:;
									{
										_1c4b6bca5_pushCycleError(_self_, jule::Any(_73717_ta, &__jule_any_type67), (*(_73820_d)), _73446_message);
										return false;;
									}
								}
								else if ((!(_1c4b6c15c_checkCrossCycle(_self_, (*(_73820_d)), _73446_message)))) {
									_case_begin_1ad0be340:;
									{
										_1c4b6bca5_pushCycleError(_self_, jule::Any(_73717_ta, &__jule_any_type67), (*(_73820_d)), _73446_message);
										return false;;
									}
								}
								_match_end_1ad0be1a8:;
							};
						}
						_iter_next_1ad0bd5c5:;
						++it;
						goto _iter_begin_1ad0bd5c5;
					}
					_iter_end_1ad0bd5c5:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad0bcb79:;
			{
				jule::Ptr<_1c4a86ebc_Struct> _74917_s = _73430_decl.cast_ptr<_1c4a86ebc_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_74917_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad0beab0:;
					if (it != expr_end) {
						jule::Ptr<_1c4a86ebc_Struct> *_75020_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_75020_d))))) {
									_case_begin_1ad0c1595:;
									{
										_1c4b6bca5_pushCycleError(_self_, jule::Any(_74917_s, &__jule_any_type66), jule::Any((*(_75020_d)), &__jule_any_type66), _73446_message);
										return false;;
									}
								}
								else if ((!(_1c4b6c15c_checkCrossCycle(_self_, jule::Any((*(_75020_d)), &__jule_any_type66), _73446_message)))) {
									_case_begin_1ad0c161c:;
									{
										_1c4b6bca5_pushCycleError(_self_, jule::Any(_74917_s, &__jule_any_type66), jule::Any((*(_75020_d)), &__jule_any_type66), _73446_message);
										return false;;
									}
								}
								_match_end_1ad0c1485:;
							};
						}
						_iter_next_1ad0beab0:;
						++it;
						goto _iter_begin_1ad0beab0;
					}
					_iter_end_1ad0beab0:;
				};
			}
		}
		_match_end_1ad0bca25:;
	};
	return true;;
}



inline jule::Bool _1c4b6c514_checkIllegalCycles(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>* _76838_ident, jule::Any _76865_decl) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _76865_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad0c1254:;
			{
				if (((*(_self_))._field_notPlain || _76865_decl.cast_ptr<_1c4a86ebc_Struct>(&__jule_any_type66).get()._field_CppLinked)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ad0c34ba:;
			{
				if (_76865_decl.cast_ptr<_1c4701230_TypeAlias>(&__jule_any_type67).get()._field_CppLinked) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ad0c1100:;
	};
	if ((_76865_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_1c4b6ac2c_pushErr(_self_, (*(_76838_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _79117_message = jule::Str();;
	if ((!(_1c4b6c15c_checkCrossCycle(_self_, _76865_decl, &(_79117_message))))) {
		jule::Str _79421_errMsg = _79117_message;;
		_79117_message=jule::Str();
		_1c4b6bca5_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _76865_decl, &(_79117_message));
		_79421_errMsg+=_79117_message;
		_1c4b6ac2c_pushErr(_self_, (*(_76838_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_79421_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ad0c5984:;
			{
				{
					(*((*(_self_))._field_referencer.get()._field_refs))=jule::append((*((*(_self_))._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_76865_decl}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad0c5a0b:;
			{
				{
					auto &_match_expr{ _76865_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1ad0c7b0c:;
						{
							jule::Ptr<_1c4a86ebc_Struct> _81025_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1c4a86ebc_Struct>(&__jule_any_type66);;
							_81025_s.get()._field_Depends = jule::alloc_for_append(_81025_s.get()._field_Depends,1);_81025_s.get()._field_Depends.__push(_76865_decl.cast_ptr<_1c4a86ebc_Struct>(&__jule_any_type66));;
						}
					}
					_match_end_1ad0c7a1e:;
				};
			}
		}
		_match_end_1ad0c7337:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1c46218c0_Kind> _1c4b6c8bb_fromTypeAlias(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>* _81833_decl, jule::Ptr<_1c4701230_TypeAlias>* _81860_ta) {
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_81860_ta)).get()._field_Public, (*(_81860_ta)).get()._field_Token)))) {
		_1c4b6ac2c_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_81860_ta)).get()._field_Used=true;
	if (((*(_81833_decl)).get()._field_Generics.len() > 0LL)) {
		_1c4b6ac2c_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad0cbeb8:;
			if (it != expr_end) {
				jule::Ptr<_1c4701230_TypeAlias> _83520_bg = *it;
				{
					if (((_83520_bg == (*(_81860_ta))) || (((*(_81860_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _1c4622580_Equal((*(_81860_ta)).get()._field_Kind.get()._field_Kind, _83520_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1ad0cbeb8;
					};
				}
				_iter_next_1ad0cbeb8:;
				++it;
				goto _iter_begin_1ad0cbeb8;
			}
			_iter_end_1ad0cbeb8:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad0cc815:;
			if (it != expr_end) {
				jule::Ptr<_1c4701230_TypeAlias> _84620_bg = *it;
				{
					if ((_84620_bg == (*(_81860_ta)))) {
						_1c4b6ac2c_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_81860_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad0ce8e4:;
						if (it != expr_end) {
							jule::Ptr<_1c4701230_TypeAlias> _85124_dg = *it;
							{
								if ((_84620_bg == _85124_dg)) {
									_1c4b6ac2c_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_1ad0ce8e4:;
							++it;
							goto _iter_begin_1ad0ce8e4;
						}
						_iter_end_1ad0ce8e4:;
					};
				}
				_iter_next_1ad0cc815:;
				++it;
				goto _iter_begin_1ad0cc815;
			}
			_iter_end_1ad0cc815:;
		};
	};
	jule::Bool _86017_ok = _1c4b6c514_checkIllegalCycles(_self_, _81833_decl, jule::Any((*(_81860_ta)), &__jule_any_type67));;
	if ((!(_86017_ok))) {
		return nullptr;;
	};
	if (((*(_81860_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_86017_ok=_1c4b15ea2_checkTypeAliasDeclKind((*(_self_))._field_s, _81860_ta, (*(_self_))._field_lookup);
		if ((!(_86017_ok))) {
			return nullptr;;
		};
	};
	if (((*(_81860_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(_self_))._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*(_self_))._field_ownerAlias.get()._field_Generics,1);(*(_self_))._field_ownerAlias.get()._field_Generics.__push((*(_81860_ta)));;
	};
	jule::Ptr<_1c4621d32_TypeKind> _87917_tk = jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Generic=(*(_81860_ta)).get()._field_Generic, ._field_Kind=(*(_81860_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1c4b6b8dc_pushReferenceByKind(_self_, &(_87917_tk));
	if ((*(_81860_ta)).get()._field_CppLinked) {
		_87917_tk.get()._field_CppIdent=(*(_81860_ta)).get()._field_Ident;
	} else {
		_87917_tk.get()._field_CppIdent=(*(_81860_ta)).get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1c46218c0_Kind>(_87917_tk, 5);;
}



inline jule::Ptr<_1c4ac5802_Enum> _1c4b6cc73_fromEnum(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>* _89228_decl, jule::Ptr<_1c4ac5802_Enum>* _89255_e) {
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_89255_e)).get()._field_Public, (*(_89255_e)).get()._field_Token)))) {
		_1c4b6ac2c_pushErr(_self_, (*(_89228_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_89228_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_89228_decl)).get()._field_Generics.len() > 0LL)) {
		_1c4b6ac2c_pushErr(_self_, (*(_89228_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_89228_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_89255_e));;
}



inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4b6d12a_fromTypeEnum(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>* _90432_decl, jule::Ptr<_1c4ac6dec_TypeEnum>* _90459_e) {
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_90459_e)).get()._field_Public, (*(_90459_e)).get()._field_Token)))) {
		_1c4b6ac2c_pushErr(_self_, (*(_90432_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_90432_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_90432_decl)).get()._field_Generics.len() > 0LL)) {
		_1c4b6ac2c_pushErr(_self_, (*(_90432_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_90432_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_90459_e));;
}



inline jule::Ptr<_1c4ac306e_Trait> _1c4b6d4d2_fromTrait(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>* _91629_decl, jule::Ptr<_1c4ac306e_Trait>* _91656_t) {
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_91656_t)).get()._field_Public, (*(_91656_t)).get()._field_Token)))) {
		_1c4b6ac2c_pushErr(_self_, (*(_91629_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_91629_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_91629_decl)).get()._field_Generics.len() > 0LL)) {
		_1c4b6ac2c_pushErr(_self_, (*(_91629_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_91629_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_1ad0b5820_pushReference(_self_, _91656_t);
	return (*(_91656_t));;
}



inline jule::Bool _1c4b6d889_checkStructIns(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4aab255_StructIns>* _92938_ins, jule::Ptr<_2039861ab_Token>* _92960_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_92938_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_92938_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_92938_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1c4b262d1_precheckStructIns((*(_self_))._field_s, _92938_ins, (*(_92960_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_92938_ins)).get()._field_Generics.len() > 0LL)) {
		_1c4b26c4e_checkStructInsOperators((*(_self_))._field_s, (*(_92938_ins)));
		_1c4b26556_checkStructIns((*(_self_))._field_s, _92938_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c4b6db31_appendUsedStructReference(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a86ebc_Struct>* _95049_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ad0e0372:;
			{
				jule::Ptr<_1c4a86ebc_Struct> _95621_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1c4a86ebc_Struct>(&__jule_any_type66);;
				if ((!(_1c4a75010_IsUses(_95621_refS.ptr(), (*(_95049_s)))))) {
					_95621_refS.get()._field_Uses = jule::alloc_for_append(_95621_refS.get()._field_Uses,1);_95621_refS.get()._field_Uses.__push((*(_95049_s)));;
				};
			}
		}
		_match_end_1ad0e031c:;
	};
}



inline jule::Ptr<_1c4aab255_StructIns> _1c4b6dee9_buildStructInstance(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>* _96343_decl, jule::Ptr<_1c4a86ebc_Struct>* _96370_s) {
	jule::Ptr<_1c4b69643_referencer> _96517_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1c4701230_TypeAlias>> _96717_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1ad0e2e46:;
				{
					jule::Ptr<_1c4ad7e30_scopeChecker> _97425_sc = (*(_self_))._field_lookup.cast_ptr<_1c4ad7e30_scopeChecker>(0);;
					jule::Ptr<_1c4ad7e30_scopeChecker> _97525_hard = _1c4adb2da_getHardRoot(_97425_sc);;
					if (((_97525_hard.get()._field_owner.get()._field_Owner == nullptr) || (_97525_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_96370_s))))) {
						goto _match_end_1ad0e2de1;
					};
					jule::I32 _97921_n = (_97525_hard.get()._field_owner.get()._field_Generics.len() + _97525_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_97525_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _97921_n);
				}
			}
			_match_end_1ad0e2de1:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1c4b77c6c_Lookup> _98917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1c4aab255_StructIns> _99317_ins = _1c4a6ad91_instance((*(_96370_s)));;
	_99317_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1c47006e6_InsGeneric>>::alloc(0LL, (*(_96343_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_96343_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0e7247:;
		if (it != expr_end) {
			jule::Ptr<_1c4a8e337_TypeDecl> _99521_g = *it;
			{
				jule::Ptr<_1c4621d32_TypeKind> _99621_kind = _1c4b72481_build(_self_, &(_99521_g.get()._field_Kind));;
				if ((_99621_kind == nullptr)) {
					return nullptr;;
				};
				_99317_ins.get()._field_Generics = jule::alloc_for_append(_99317_ins.get()._field_Generics,1);_99317_ins.get()._field_Generics.__push(jule::new_ptr<_1c47006e6_InsGeneric>(_1c47006e6_InsGeneric{._field_Kind=_99621_kind, }));;
			}
			_iter_next_1ad0e7247:;
			++it;
			goto _iter_begin_1ad0e7247;
		}
		_iter_end_1ad0e7247:;
	};
	(*(_self_))._field_lookup=_98917_lookup;
	(*(_self_))._field_bannedGenerics=_96717_bannedGenerics;
	(*(_self_))._field_referencer=_96517_referencer;
	return _99317_ins;;
}



inline jule::Ptr<_1c4aab255_StructIns> _1c4b6e3a1_fromStruct(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>* _101134_decl, jule::Ptr<_1c4a86ebc_Struct>* _101161_s) {
	if ((!(_1c4b0b10c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_101161_s)).get()._field_Public, (*(_101161_s)).get()._field_Token)))) {
		_1c4b6ac2c_pushErr(_self_, (*(_101134_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_101134_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_101134_decl)).get()._field_Generics.len() > 0LL)) {
			_1c4b6ac2c_pushErr(_self_, (*(_101134_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1c4aab255_StructIns>(_1c4aab255_StructIns{._field_Decl=(*(_101161_s)), });;
	};
	jule::Bool _102917_ok = ((*(_self_))._field_notPlain || _1c4b6c514_checkIllegalCycles(_self_, _101134_decl, jule::Any((*(_101161_s)), &__jule_any_type66)));;
	if ((!(_102917_ok))) {
		return nullptr;;
	};
	_1c4b6db31_appendUsedStructReference(_self_, _101161_s);
	jule::Ptr<_1c4aab255_StructIns> _103517_ins = _1c4b6dee9_buildStructInstance(_self_, _101134_decl, _101161_s);;
	if ((_103517_ins == nullptr)) {
		return nullptr;;
	};
	_102917_ok=_1c4b0bccd_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I32>(_103517_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_103517_ins.get()._field_Generics.len()), (*(_101134_decl)).get()._field_Token);
	if ((!(_102917_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1c4aab255_StructIns> _104517_existInstance = _1c4a6baea_appendInstance((*(_101161_s)).ptr(), &(_103517_ins));;
	if ((_104517_existInstance != nullptr)) {
		if ((!(_1c4b14654_checkConstraintsStruct((*(_self_))._field_s, &(_103517_ins), &((*(_101134_decl)).get()._field_Token), _104517_existInstance)))) {
			return nullptr;;
		};
		_1ad0b2993_pushReference(_self_, &(_104517_existInstance));
		return _104517_existInstance;;
	};
	if ((!(_1c4b6d889_checkStructIns(_self_, &(_103517_ins), &((*(_101134_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_1ad0b2993_pushReference(_self_, &(_103517_ins));
	return _103517_ins;;
}



inline jule::Trait<_1c46218c0_Kind> _1c4b6e6ae_getDef(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a8e8ed_IdentTypeDecl>* _106930_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad101581:;
		if (it != expr_end) {
			jule::Ptr<_1c4a9b630_GenericDecl> _107016_g = *it;
			{
				if ((_107016_g.get()._field_Ident == (*(_106930_decl)).get()._field_Ident)) {
					return jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(_107016_g.get()._field_Ident), 6);;
				};
			}
			_iter_next_1ad101581:;
			++it;
			goto _iter_begin_1ad101581;
		}
		_iter_end_1ad101581:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad101718:;
		if (it != expr_end) {
			jule::Ptr<_1c4701230_TypeAlias> _107621_g = *it;
			{
				if ((_107621_g.get()._field_Ident == (*(_106930_decl)).get()._field_Ident)) {
					if (((*(_106930_decl)).get()._field_Generics.len() > 0LL)) {
						_1c4b6ac2c_pushErr(_self_, (*(_106930_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_106930_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_1c4aab255_StructIns> _108225_st = _1c4b604c4_Struct(_107621_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_108225_st != nullptr)) {
						jule::Bool _108425_ok = _1c4b6c514_checkIllegalCycles(_self_, _106930_decl, jule::Any(_108225_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_108425_ok))) {
							return nullptr;;
						};
					};
					return _107621_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1ad101718:;
			++it;
			goto _iter_begin_1ad101718;
		}
		_iter_end_1ad101718:;
	};
	if ((!((*(_106930_decl)).get()._field_CppLinked))) {
		jule::Ptr<_1c4ac5802_Enum> _109421_e = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b7781b_FindEnum((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident);;
		if ((_109421_e != nullptr)) {
			return jule::Trait<_1c46218c0_Kind>(_1c4b6cc73_fromEnum(_self_, _106930_decl, &(_109421_e)), 3);;
		};
		jule::Ptr<_1c4ac6dec_TypeEnum> _109921_te = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b77b29_FindTypeEnum((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident);;
		if ((_109921_te != nullptr)) {
			return jule::Trait<_1c46218c0_Kind>(_1c4b6d12a_fromTypeEnum(_self_, _106930_decl, &(_109921_te)), 4);;
		};
		jule::Ptr<_1c4ac306e_Trait> _110421_t = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b7750d_FindTrait((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident);;
		if ((_110421_t != nullptr)) {
			return jule::Trait<_1c46218c0_Kind>(_1c4b6d4d2_fromTrait(_self_, _106930_decl, &(_110421_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1c4b6ac2c_pushErr(_self_, (*(_106930_decl)).get()._field_Token, jule::Str("cpp-linked definitions are not allowed in this scope", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4a86ebc_Struct> _111317_s = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b76d48_FindStruct((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident, (*(_106930_decl)).get()._field_CppLinked);;
	if ((_111317_s != nullptr)) {
		return jule::Trait<_1c46218c0_Kind>(_1c4b6e3a1_fromStruct(_self_, _106930_decl, &(_111317_s)), 0);;
	};
	jule::Ptr<_1c4701230_TypeAlias> _111817_ta = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b76991_FindTypeAlias((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident, (*(_106930_decl)).get()._field_CppLinked);;
	if (((_111817_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_111817_ta=_1c4b86e24_findBuiltinTypeAlias((*(_106930_decl)).get()._field_Ident);
	};
	if ((_111817_ta != nullptr)) {
		return _1c4b6c8bb_fromTypeAlias(_self_, _106930_decl, &(_111817_ta));;
	};
	_1c4b6ac2c_pushErr(_self_, (*(_106930_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106930_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_1c46218c0_Kind> _1c4b6e9bc_buildIdent(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a8e8ed_IdentTypeDecl> _113033_decl) {
	{
		
		if (_1c4b754d9_isPrim(_113033_decl.get()._field_Ident)) {
			_case_begin_1ad10c26d:;
			{
				return jule::Trait<_1c46218c0_Kind>(_1c4b6b3e2_buildPrim(_self_, &(_113033_decl)), 6);;
			}
		}
		else {
			_case_begin_1ad10ba75:;
			{
				return _1c4b6e6ae_getDef(_self_, &(_113033_decl));;
			}
		}
		_match_end_1ad10b9a9:;
	};
}



inline jule::Trait<_1c46218c0_Kind> _1c4b6ecca_buildSubIdent(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a9004c_SubIdentTypeDecl> _113936_decl) {
	jule::Trait<_1c46218c0_Kind> _114017_ident = _1c4b6e9bc_buildIdent(_self_, _113936_decl.get()._field_Idents[0LL]);;
	if ((_114017_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _114017_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1ad10da44:;
			{
				goto _match_end_1ad10d956;
			}
		}
		else {
			_case_begin_1ad10d824:;
			{
				_1c4b6ac2c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad10d956:;
	};
	jule::Ptr<_1c4ac6dec_TypeEnum> _115117_t = _114017_ident.cast_ptr<_1c4ac6dec_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1c4a8e8ed_IdentTypeDecl>> _115217_idents = _113936_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_115217_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad10edec:;
		if (it != expr_end) {
			jule::I32 _115313_i = it - expr->begin();
			jule::Ptr<_1c4a8e8ed_IdentTypeDecl> _115316_id = *it;
			{
				jule::Ptr<_1c4ac6836_TypeEnumItem> _115421_item = _1c4ac7936_FindItem(_115117_t.ptr(), _115316_id.get()._field_Ident);;
				if ((_115421_item == nullptr)) {
					_1c4b6ac2c_pushErr(_self_, _115316_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_115117_t.get()._field_Ident, &__jule_any_type5),jule::Any(_115316_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_115217_idents.len() - _115313_i) == 1LL)) {
					_1c4b6b8dc_pushReferenceByKind(_self_, &(_115421_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_1c46218c0_Kind>(_115421_item.get()._field_Kind.get()._field_Kind, 5);;
				};
				_115117_t=_1c4b5ea23_TypeEnum(_115421_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_115117_t == nullptr)) {
					_1c4b6ac2c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1ad10edec:;
			++it;
			_115313_i++;
			goto _iter_begin_1ad10edec;
		}
		_iter_end_1ad10edec:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4b65210_Sptr> _1c4b700d8_buildSptrFromType(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4621d32_TypeKind>* _117341_elem) {
	{
		
		if (((*(_117341_elem)) == nullptr)) {
			_case_begin_1ad113b7b:;
			{
				return nullptr;;
			}
		}
		else if ((_1c4b604c4_Struct((*(_117341_elem)).ptr()) != nullptr)) {
			_case_begin_1ad113c03:;
			{
				jule::Ptr<_1c4aab255_StructIns> _117917_s = _1c4b604c4_Struct((*(_117341_elem)).ptr());;
				if (((_117917_s.get()._field_Decl != nullptr) && _117917_s.get()._field_Decl.get()._field_CppLinked)) {
					_1c4b6ac2c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1c4b5ec87_Arr((*(_117341_elem)).ptr()) != nullptr) && _1c4b5ec87_Arr((*(_117341_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1ad113c7a:;
			{
				_1c4b6ac2c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad1132eb:;
	};
	return jule::new_ptr<_1c4b65210_Sptr>(_1c4b65210_Sptr{._field_Elem=(*(_117341_elem))});;
}



inline jule::Ptr<_1c4b65210_Sptr> _1c4b703e6_buildSptr(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a906e0_SptrTypeDecl> _119332_decl) {
	jule::Bool _119413_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_119413_notPlain;
	});;
	jule::Ptr<_1c4621d32_TypeKind> _119817_elem = _1c4b7278e_checkDecl(_self_, &(_119332_decl.get()._field_Elem));;
	return _1c4b700d8_buildSptrFromType(_self_, &(_119817_elem));;
}



inline jule::Ptr<_1c4b686ec_Ptr> _1c4b70704_buildPtrFromType(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4621d32_TypeKind>* _120240_elem) {
	{
		
		if (((*(_120240_elem)) == nullptr)) {
			_case_begin_1ad11893e:;
			{
				return nullptr;;
			}
		}
		else if (((_1c4b5ec87_Arr((*(_120240_elem)).ptr()) != nullptr) && _1c4b5ec87_Arr((*(_120240_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1ad1189b6:;
			{
				_1c4b6ac2c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1c4b686ec_Ptr>();;
			}
		}
		_match_end_1ad11882e:;
	};
	return jule::new_ptr<_1c4b686ec_Ptr>(_1c4b686ec_Ptr{._field_Elem=(*(_120240_elem))});;
}



inline jule::Ptr<_1c4b686ec_Ptr> _1c4b70a12_buildPtr(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a911b3_PtrTypeDecl> _121731_decl) {
	jule::Bool _121813_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_121813_notPlain;
	});;
	jule::Ptr<_1c4621d32_TypeKind> _122217_elem = nullptr;;
	if ((!(_1c4a91515_IsUnsafe(_121731_decl.ptr())))) {
		_122217_elem=_1c4b7278e_checkDecl(_self_, &(_121731_decl.get()._field_Elem));
		return _1c4b70704_buildPtrFromType(_self_, &(_122217_elem));;
	};
	return jule::new_ptr<_1c4b686ec_Ptr>(_1c4b686ec_Ptr{._field_Elem=_122217_elem});;
}



inline jule::Ptr<_1c4b65b6c_Slc> _1c4b70d20_buildSlc(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a90adb_SlcTypeDecl> _123431_decl) {
	jule::Bool _123513_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_123513_notPlain;
	});;
	jule::Ptr<_1c4621d32_TypeKind> _123917_elem = _1c4b7278e_checkDecl(_self_, &(_123431_decl.get()._field_Elem));;
	{
		
		if ((_123917_elem == nullptr)) {
			_case_begin_1ad11d8cd:;
			{
				return nullptr;;
			}
		}
		else if (((_1c4b5ec87_Arr(_123917_elem.ptr()) != nullptr) && _1c4b5ec87_Arr(_123917_elem.ptr()).get()._field_Auto)) {
			_case_begin_1ad11d955:;
			{
				_1c4b6ac2c_pushErr(_self_, _123431_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad11d823:;
	};
	return jule::new_ptr<_1c4b65b6c_Slc>(_1c4b65b6c_Slc{._field_Elem=_123917_elem});;
}



inline jule::Ptr<_1c4b67c90_Arr> _1c4b7112d_buildArr(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a91845_ArrTypeDecl> _125531_decl) {
	jule::Bool _125613_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_125613_notPlain;
	});;
	jule::I32 _126017_n = 0LL;;
	if ((!(_1c4a91c1e_AutoSized(_125531_decl.ptr())))) {
		jule::Ptr<_1c45e6e17_Data> _126321_size = _1c46143a7_evalExpr(_1c4b126c9_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _125531_decl.get()._field_Size);;
		if ((_126321_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1c45e77ca_IsConst(_126321_size.ptr())))) {
			_1c4b6ac2c_pushErr(_self_, _125531_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1c4b5e45c_Prim(_126321_size.get()._field_Kind.ptr()) == nullptr) || (!(_1c31777bd_IsInt(_1c4b5e45c_Prim(_126321_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1c4b6ac2c_pushErr(_self_, _125531_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_126017_n=static_cast<jule::I32>(static_cast<jule::I32>(_1c3178406_AsI64(_126321_size.get()._field_Constant.ptr())));
		if ((_126017_n < 0LL)) {
			_1c4b6ac2c_pushErr(_self_, _125531_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1c263ebcb_BitSize != 64LL) && (static_cast<jule::F64>(_126017_n) > _1c31751c2_Max(jule::Str("int", 3))))) {
			_1c4b6ac2c_pushErr(_self_, _125531_decl.get()._field_Size.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1c4621d32_TypeKind> _128617_elem = _1c4b7278e_checkDecl(_self_, &(_125531_decl.get()._field_Elem));;
	{
		
		if ((_128617_elem == nullptr)) {
			_case_begin_1ad126d48:;
			{
				return nullptr;;
			}
		}
		else if (((_1c4b5ec87_Arr(_128617_elem.ptr()) != nullptr) && _1c4b5ec87_Arr(_128617_elem.ptr()).get()._field_Auto)) {
			_case_begin_1ad126dae:;
			{
				_1c4b6ac2c_pushErr(_self_, _125531_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad126b4a:;
	};
	return jule::new_ptr<_1c4b67c90_Arr>(_1c4b67c90_Arr{._field_Auto=_1c4a91c1e_AutoSized(_125531_decl.ptr()), ._field_N=_126017_n, ._field_Elem=_128617_elem});;
}



inline jule::Ptr<_1c4b6719b_Map> _1c4b7143b_buildMap(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a92093_MapTypeDecl> _130431_decl) {
	jule::Bool _130513_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_130513_notPlain;
	});;
	jule::Ptr<_1c4621d32_TypeKind> _130917_key = _1c4b7278e_checkDecl(_self_, &(_130431_decl.get()._field_Key));;
	if ((_130917_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c4621d32_TypeKind> _131417_val = _1c4b7278e_checkDecl(_self_, &(_130431_decl.get()._field_Val));;
	if ((_131417_val == nullptr)) {
		return nullptr;;
	};
	if ((_1c4b5e803_Enum(_131417_val.ptr()) != nullptr)) {
		_1c4b6ac2c_pushErr(_self_, _130431_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1c4b6719b_Map>(_1c4b6719b_Map{._field_Key=_130917_key, ._field_Val=_131417_val});;
}



inline jule::Ptr<_1c4b66673_Tuple> _1c4b71749_buildTuple(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a90dc7_TupleTypeDecl> _132833_decl) {
	jule::Slice<jule::Ptr<_1c4621d32_TypeKind>> _132917_types = jule::Slice<jule::Ptr<_1c4621d32_TypeKind>>::alloc(0LL, _132833_decl.get()._field_Types.len());;
	{
		auto expr = &(_132833_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad12c7dd:;
		if (it != expr_end) {
			jule::Ptr<_1c4a8e337_TypeDecl> _133021_t = *it;
			{
				jule::Ptr<_1c4621d32_TypeKind> _133121_kind = _1c4b7278e_checkDecl(_self_, &(_133021_t));;
				if ((_133121_kind == nullptr)) {
					return nullptr;;
				};
				_132917_types = jule::alloc_for_append(_132917_types,1);_132917_types.__push(_133121_kind);;
			}
			_iter_next_1ad12c7dd:;
			++it;
			goto _iter_begin_1ad12c7dd;
		}
		_iter_end_1ad12c7dd:;
	};
	return jule::new_ptr<_1c4b66673_Tuple>(_1c4b66673_Tuple{._field_Types=_132917_types});;
}



inline jule::Bool _1c4b71a57_checkFnTypes(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4ab39ee_FnIns>* _134136_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_134136_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad12e1a2:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab2b30_ParamIns> _134221_p = *it;
			{
				_134221_p.get()._field_Kind=_1c4b72481_build(_self_, &(_134221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_134221_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1c4b14c81_checkFnParamKind((*(_self_))._field_s, &(_134221_p));
			}
			_iter_next_1ad12e1a2:;
			++it;
			goto _iter_begin_1ad12e1a2;
		}
		_iter_end_1ad12e1a2:;
	};
	if ((!(_1c4a871ed_IsVoid((*(_134136_f)).get()._field_Decl.ptr())))) {
		(*(_134136_f)).get()._field_Result=_1c4b72481_build(_self_, &((*(_134136_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_134136_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c4ab39ee_FnIns> _1c4b71d65_buildFn(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4aa0cb6_FnDecl> _135930_decl) {
	if ((_135930_decl.get()._field_Generics.len() > 0LL)) {
		_1c4b6ac2c_pushErr(_self_, _135930_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4ab22e4_Fn> _136517_f = _1c4ab9b37_buildFn(_135930_decl);;
	jule::I32 _136713_n = (*(_self_))._field_s.get()._field_errors.len();;
	_1c4b22d49_checkFnDecl((*(_self_))._field_s, &(_136517_f));
	if ((_136713_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c4ab39ee_FnIns> _137317_ins = _1c4a78b7e_instanceForce(_136517_f);;
	_137317_ins.get()._field_Anon=true;
	jule::Bool _137613_ok = _1c4b71a57_checkFnTypes(_self_, &(_137317_ins));;
	if ((!(_137613_ok))) {
		return nullptr;;
	};
	return _137317_ins;;
}



inline jule::Trait<_1c46218c0_Kind> _1c4b72173_buildByNamespace(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a90404_NamespaceTypeDecl> _138439_decl) {
	jule::Str _138513_path = _1c4b74ae3_buildLinkPathByTokens(&(_138439_decl.get()._field_Idents));;
	jule::Ptr<_1c4aeeb28_ImportInfo> _138617_imp = _1c4b77c6c_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1c4b76232_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1c4aeeb28_ImportInfo>)>([=](jule::Ptr<_1c4aeeb28_ImportInfo> _138652_imp) mutable -> jule::Bool {
		if (((_138439_decl.get()._field_Idents.len() == 1LL) && (_138652_imp.get()._field_Alias == _138513_path))) {
			return true;;
		};
		return ((_138652_imp.get()._field_LinkPath == _138513_path) && _1c4b02785_isAccessibleViaSelection(_138652_imp.ptr()));;
	}));;
	if (((_138617_imp == nullptr) || (!(_1c4b021e1_isLookupable(_138617_imp.ptr(), jule::Str("self", 4)))))) {
		_1c4b6ac2c_pushErr(_self_, _138439_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_138513_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_1c4b6b0d4_disallowBuiltin(_self_);
	jule::Trait<_1c4b77c6c_Lookup> _139917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1c4b77c6c_Lookup>(_138617_imp, 1);
	jule::Ptr<_1c4621d32_TypeKind> _140117_kind = _1c4b7278e_checkDecl(_self_, &(_138439_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_139917_lookup;
	_1c4b6ae08_allowBuiltin(_self_);
	return jule::Trait<_1c46218c0_Kind>(_140117_kind, 5);;
}



inline jule::Ptr<_1c4621d32_TypeKind> _1c4b72481_build(_1c4b6a523_typeChecker* _self_, jule::Any* _140729_declKind) {
	jule::Trait<_1c46218c0_Kind> _140817_kind = nullptr;;
	{
		auto &_match_expr{ (*(_140729_declKind)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad13ab92:;
			{
				jule::Trait<_1c46218c0_Kind> _141121_t = _1c4b6e9bc_buildIdent(_self_, (*(_140729_declKind)).cast_ptr<_1c4a8e8ed_IdentTypeDecl>(&__jule_any_type19));;
				if ((_141121_t != nullptr)) {
					_140817_kind=_141121_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad13b940:;
			{
				jule::Trait<_1c46218c0_Kind> _141621_t = _1c4b6ecca_buildSubIdent(_self_, (*(_140729_declKind)).cast_ptr<_1c4a9004c_SubIdentTypeDecl>(&__jule_any_type93));;
				if ((_141621_t != nullptr)) {
					_140817_kind=_141621_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ad13b9a6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4b65210_Sptr> _142221_t = _1c4b703e6_buildSptr(_self_, (*(_140729_declKind)).cast_ptr<_1c4a906e0_SptrTypeDecl>(&__jule_any_type79));;
				if ((_142221_t != nullptr)) {
					_140817_kind=jule::Trait<_1c46218c0_Kind>(_142221_t, 7);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1ad13b148:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4b686ec_Ptr> _142821_t = _1c4b70a12_buildPtr(_self_, (*(_140729_declKind)).cast_ptr<_1c4a911b3_PtrTypeDecl>(&__jule_any_type78));;
				if ((_142821_t != nullptr)) {
					_140817_kind=jule::Trait<_1c46218c0_Kind>(_142821_t, 12);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1ad13b1ae:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4b65b6c_Slc> _143421_t = _1c4b70d20_buildSlc(_self_, (*(_140729_declKind)).cast_ptr<_1c4a90adb_SlcTypeDecl>(&__jule_any_type77));;
				if ((_143421_t != nullptr)) {
					_140817_kind=jule::Trait<_1c46218c0_Kind>(_143421_t, 8);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ad13b225:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4b67c90_Arr> _144021_t = _1c4b7112d_buildArr(_self_, (*(_140729_declKind)).cast_ptr<_1c4a91845_ArrTypeDecl>(&__jule_any_type76));;
				if ((_144021_t != nullptr)) {
					_140817_kind=jule::Trait<_1c46218c0_Kind>(_144021_t, 11);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ad13b28b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4b6719b_Map> _144621_t = _1c4b7143b_buildMap(_self_, (*(_140729_declKind)).cast_ptr<_1c4a92093_MapTypeDecl>(&__jule_any_type80));;
				if ((_144621_t != nullptr)) {
					_140817_kind=jule::Trait<_1c46218c0_Kind>(_144621_t, 10);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ad13bb71:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4b66673_Tuple> _145221_t = _1c4b71749_buildTuple(_self_, (*(_140729_declKind)).cast_ptr<_1c4a90dc7_TupleTypeDecl>(&__jule_any_type81));;
				if ((_145221_t != nullptr)) {
					_140817_kind=jule::Trait<_1c46218c0_Kind>(_145221_t, 9);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad13bbd7:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4ab39ee_FnIns> _145821_t = _1c4b71d65_buildFn(_self_, (*(_140729_declKind)).cast_ptr<_1c4aa0cb6_FnDecl>(&__jule_any_type14));;
				if ((_145821_t != nullptr)) {
					_140817_kind=jule::Trait<_1c46218c0_Kind>(_145821_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ad13bc4d:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1c46218c0_Kind> _146421_t = _1c4b72173_buildByNamespace(_self_, (*(_140729_declKind)).cast_ptr<_1c4a90404_NamespaceTypeDecl>(&__jule_any_type97));;
				if ((_146421_t != nullptr)) {
					_140817_kind=_146421_t;
				};
			}
		}
		else {
			_case_begin_1ad13aee4:;
			{
				_1c4b6ac2c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad13ae06:;
	};
	if ((_140817_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _140817_kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1ad1477e7:;
			{
				return _140817_kind.cast_ptr<_1c4621d32_TypeKind>(5);;
			}
		}
		else {
			_case_begin_1ad13c116:;
			{
				jule::Ptr<_1c4621d32_TypeKind> _147921_tk = jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=_140817_kind});;
				{
					auto &_match_expr{ _140817_kind };
					
					if (_match_expr.type_is(true, 6)) {
						_case_begin_1ad148595:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									(*((*(_self_))._field_ignoredGenerics))=jule::append((*((*(_self_))._field_ignoredGenerics)),jule::Slice<jule::Ptr<_1c4621d32_TypeKind>>::make({_147921_tk}));
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1ad14861c:;
						{
							jule::Ptr<_1c4aab255_StructIns> _148621_s = _140817_kind.cast_ptr<_1c4aab255_StructIns>(0);;
							if (((_148621_s.get()._field_Decl != nullptr) && _148621_s.get()._field_Decl.get()._field_CppLinked)) {
								_147921_tk.get()._field_CppIdent=_148621_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1ad148485:;
				};
				return _147921_tk;;
			}
		}
		_match_end_1ad13bec3:;
	};
}



inline jule::Ptr<_1c4621d32_TypeKind> _1c4b7278e_checkDecl(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4a8e337_TypeDecl>* _149533_decl) {
	jule::Ptr<_2039861ab_Token> _149717_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_149533_decl)).get()._field_Token;
	jule::Ptr<_1c4621d32_TypeKind> _150017_kind = _1c4b72481_build(_self_, &((*(_149533_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_149717_errorToken;
	return _150017_kind;;
}



inline void _1c4b72a14_check(_1c4b6a523_typeChecker* _self_, jule::Ptr<_1c4b610b8_TypeSymbol>* _150629_t) {
	if (((*(_150629_t)).get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1c4621d32_TypeKind> _151017_kind = _1c4b7278e_checkDecl(_self_, &((*(_150629_t)).get()._field_Decl));;
	if ((_151017_kind == nullptr)) {
		_1c4b61690_removeKind((*(_150629_t)).ptr());
		return;;
	};
	(*(_150629_t)).get()._field_Kind=_151017_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b6a523_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c4b73174_prim(jule::Str* _152221_ident, jule::Ptr<_1c4b6197b_Prim> _152233_t) {
	return (_152233_t.get()._field_Kind == (*(_152221_ident)));;
}



inline jule::Bool static__1c4b734b5_exist(jule::Str* _152622_ident, jule::Ptr<_1c4621d32_TypeKind>* _152639_k) {
	{
		
		if ((_1c4b5e45c_Prim((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1ad14e38c:;
			{
				return static__1c4b73174_prim(_152622_ident, _1c4b5e45c_Prim((*(_152639_k)).ptr()));;
			}
		}
		else if ((_1c4b5e58e_Sptr((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1ad14e403:;
			{
				jule::Ptr<_1c4b65210_Sptr> _153121_sptr = _1c4b5e58e_Sptr((*(_152639_k)).ptr());;
				return static__1c4b734b5_exist(_152622_ident, &(_153121_sptr.get()._field_Elem));;
			}
		}
		else if ((_1c4b5e6c1_Ptr((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1ad14e469:;
			{
				jule::Ptr<_1c4b686ec_Ptr> _153421_ptr = _1c4b5e6c1_Ptr((*(_152639_k)).ptr());;
				return static__1c4b734b5_exist(_152622_ident, &(_153421_ptr.get()._field_Elem));;
			}
		}
		else if ((_1c4b5eeeb_Slc((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1ad14e4d0:;
			{
				jule::Ptr<_1c4b65b6c_Slc> _153721_slc = _1c4b5eeeb_Slc((*(_152639_k)).ptr());;
				return static__1c4b734b5_exist(_152622_ident, &(_153721_slc.get()._field_Elem));;
			}
		}
		else if ((_1c4b5ec87_Arr((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1ad14e766:;
			{
				jule::Ptr<_1c4b67c90_Arr> _154021_arr = _1c4b5ec87_Arr((*(_152639_k)).ptr());;
				return static__1c4b734b5_exist(_152622_ident, &(_154021_arr.get()._field_Elem));;
			}
		}
		else if ((_1c4b6099c_Map((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1ad14e7cc:;
			{
				jule::Ptr<_1c4b6719b_Map> _154321_m = _1c4b6099c_Map((*(_152639_k)).ptr());;
				return (static__1c4b734b5_exist(_152622_ident, &(_154321_m.get()._field_Key)) || static__1c4b734b5_exist(_152622_ident, &(_154321_m.get()._field_Val)));;
			}
		}
		else if ((_1c4b604c4_Struct((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1ad14e843:;
			{
				jule::Ptr<_1c4aab255_StructIns> _154721_s = _1c4b604c4_Struct((*(_152639_k)).ptr());;
				{
					auto expr = &(_154721_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad155849:;
					if (it != expr_end) {
						jule::Ptr<_1c47006e6_InsGeneric> _154825_g = *it;
						{
							if (static__1c4b734b5_exist(_152622_ident, &(_154825_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ad155849:;
						++it;
						goto _iter_begin_1ad155849;
					}
					_iter_end_1ad155849:;
				};
				return false;;
			}
		}
		else if ((_1c4b60260_Fn((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1ad14e8a9:;
			{
				jule::Ptr<_1c4ab39ee_FnIns> _155521_f = _1c4b60260_Fn((*(_152639_k)).ptr());;
				{
					auto expr = &(_155521_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad157043:;
					if (it != expr_end) {
						jule::Ptr<_1c4ab2b30_ParamIns> _155625_p = *it;
						{
							if (_1c4a6c810_IsSelf(_155625_p.get()._field_Decl.ptr())) {
								goto _iter_next_1ad157043;
							};
							if (static__1c4b734b5_exist(_152622_ident, &(_155625_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ad157043:;
						++it;
						goto _iter_begin_1ad157043;
					}
					_iter_end_1ad157043:;
				};
				if ((_155521_f.get()._field_Result != nullptr)) {
					return static__1c4b734b5_exist(_152622_ident, &(_155521_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1c4b60c11_Tup((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1ad14eb0c:;
			{
				jule::Ptr<_1c4b66673_Tuple> _156921_tup = _1c4b60c11_Tup((*(_152639_k)).ptr());;
				{
					auto expr = &(_156921_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad159177:;
					if (it != expr_end) {
						jule::Ptr<_1c4621d32_TypeKind> _157025_t = *it;
						{
							if (static__1c4b734b5_exist(_152622_ident, &(_157025_t))) {
								return true;;
							};
						}
						_iter_next_1ad159177:;
						++it;
						goto _iter_begin_1ad159177;
					}
					_iter_end_1ad159177:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ad14e326:;
			{
				return false;;
			}
		}
		_match_end_1ad14e25a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c4b72c34_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9aa4213_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9aecd2d_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a9aedcda_stop(_1a9aed658_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a9aee04e_stopped(_1a9aed658_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a9aee2b3_finished(_1a9aed658_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a9aee527_isLastSt(_1a9aed658_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a9aee846_pushErr(_1a9aed658_scopeParser* _self_, jule::Ptr<_2039861ab_Token> _19126_token, jule::Str _19141_fmt) {
	_1a9b1a70d_pushErr((*(_self_))._field_p.ptr(), _19126_token, _19141_fmt, jule::Slice<jule::Any>());
}



inline void _1a9aeeb65_pushSuggestion(_1a9aed658_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1a9b1aa2c_pushSuggestion((*(_self_))._field_p.ptr(), _19633_fmt, _19646_args);
}



inline void _1a9aeedda_insertAsNext(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _20036_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a9aecd2d_stmt>(_1a9aecd2d_stmt{._field_tokens=(*(_20036_tokens)), });
}



inline jule::Ptr<_1a9aecd2d_stmt> _1a9b0014e_next(_1a9aed658_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1c4a9e2c0_ScopeTree> _1a9b00506_buildScope(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _21034_tokens, jule::Ptr<_2039861ab_Token> _21056_end) {
	jule::Ptr<_1c4a9e2c0_ScopeTree> _21117_s = _1a9aebc2d_newScope();;
	_21117_s.get()._field_Parent=(*(_self_))._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1a9aed658_scopeParser _21417_ssp = _1a9aed658_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1a9b091e1_build(&_21417_ssp, _21034_tokens, &(_21117_s));
	return _21117_s;;
}



inline jule::Ptr<_1c4aa1c95_VarDecl> _1a9b00814_buildVarSt(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _22134_tokens) {
	jule::Ptr<_1c4aa1c95_VarDecl> _22217_v = _1a9b1d249_buildVar((*(_self_))._field_p, (*(_22134_tokens)));;
	_22217_v.get()._field_Scope=(*(_self_))._field_s;
	return _22217_v;;
}



inline jule::Ptr<_1c4aa214c_RetSt> _1a9b00b22_buildRetSt(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _22733_tokens) {
	jule::Ptr<_1c4aa214c_RetSt> _22817_st = jule::new_ptr<_1c4aa214c_RetSt>(_1c4aa214c_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1a9b1ad3a_buildExpr((*(_self_))._field_p, &(_22733_tokens));
	};
	return _22817_st;;
}



inline jule::Ptr<_1c4aa27ac_Iter> _1a9b00e30_buildWhileNextIter(_1a9aed658_scopeParser* _self_, jule::Ptr<_1a9aecd2d_stmt>* _23842_s) {
	jule::Ptr<_1c4aa27ac_Iter> _23917_it = jule::new_ptr<_1c4aa27ac_Iter>(_1c4aa27ac_Iter{._field_Token=(*(_23842_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _24217_tokens = (*(_23842_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_1c4aa3082_WhileKind> _24317_kind = jule::new_ptr<_1c4aa3082_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1a9b1ad3a_buildExpr((*(_self_))._field_p, &(_24217_tokens));
	};
	if (_1a9aee527_isLastSt(_self_)) {
		_1a9aee846_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1a9b0014e_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _25517_stTokens = _1a9b14e44_getBlockExpr(&(_24217_tokens));;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1a9aecd2d_stmt> _25721_stmt = jule::new_ptr<_1a9aecd2d_stmt>(_1a9aecd2d_stmt{._field_tokens=_25517_stTokens, ._field_terminated=(*(_23842_s)).get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1a9b08dc2_buildSt(_self_, &(_25721_stmt));
	};
	jule::I32 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _26617_blockTokens = _1a9b18013_range(&(_26517_i), jule::Str("{", 1), jule::Str("}", 1), &(_24217_tokens));;
	if ((_26617_blockTokens == nullptr)) {
		_1a9aedcda_stop(_self_);
		_1a9aee846_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1a9aeeb65_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1a9aee846_pushErr(_self_, _24217_tokens[_26517_i], jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1a9b00506_buildScope(_self_, &(_26617_blockTokens), _24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type37);
	return _23917_it;;
}



inline jule::Ptr<_1c4aa3082_WhileKind> _1a9b0123d_buildWhileIterKind(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _28342_tokens) {
	return jule::new_ptr<_1c4aa3082_WhileKind>(_1c4aa3082_WhileKind{._field_Expr=_1a9b1ad3a_buildExpr((*(_self_))._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _1a9b0154b_getRangeKindKeysTokens(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _29018_vars;;
	jule::Slice<_1c2220900_Log> _29024_errs;;
	({
		__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9b18a80_parts(_28946_toks, static_cast<jule::U32>(8LLU), true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_1c4aa1c95_VarDecl> _1a9b01859_buildRangeKindKey(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _29541_tokens) {
	if (((*(_29541_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1c4aa1c95_VarDecl> _29917_key = jule::new_ptr<_1c4aa1c95_VarDecl>(_1c4aa1c95_VarDecl{._field_Token=(*(_29541_tokens))[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U32>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if (((*(_29541_tokens)).len() == 1LL)) {
			_1a9aee846_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=(*(_29541_tokens))[1LL];
	} else if (((*(_29541_tokens)).len() > 1LL)) {
		_1a9aee846_pushErr(_self_, (*(_29541_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9aee846_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1a9aeeb65_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_1c4aa1c95_VarDecl>> _1a9b01b67_buildRangeKindKeys(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>>* _32042_parts) {
	jule::Slice<jule::Ptr<_1c4aa1c95_VarDecl>> _32117_keys = nullptr;;
	{
		auto expr = _32042_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2d04a7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_1a9b01859_buildRangeKindKey(_self_, &(_32221_tokens)));;
			}
			_iter_next_1ad2d04a7:;
			++it;
			goto _iter_begin_1ad2d04a7;
		}
		_iter_end_1ad2d04a7:;
	};
	return _32117_keys;;
}



inline void _1a9b01ea8_setupRangeKindKeysPlain(_1a9aed658_scopeParser* _self_, jule::Ptr<_1c4aa3923_RangeKind>* _32847_rng, jule::Slice<jule::Ptr<_2039861ab_Token>>* _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _32917_keyTokens = _1a9b0154b_getRangeKindKeysTokens(_self_, _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1a9aee846_pushErr(_self_, (*(_32847_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1c4aa1c95_VarDecl>> _33617_keys = _1a9b01b67_buildRangeKindKeys(_self_, &(_32917_keyTokens));;
	(*(_32847_rng)).get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		(*(_32847_rng)).get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1a9b0230a_setupRangeKindKeysExplicit(_1a9aed658_scopeParser* _self_, jule::Ptr<_1c4aa3923_RangeKind>* _34350_rng, jule::Slice<jule::Ptr<_2039861ab_Token>>* _34372_tokens) {
	jule::I32 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _34517_rang = _1a9b18013_range(&(_34417_i), jule::Str("(", 1), jule::Str(")", 1), _34372_tokens);;
	if ((_34417_i < (*(_34372_tokens)).len())) {
		_1a9aee846_pushErr(_self_, (*(_34350_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1a9b01ea8_setupRangeKindKeysPlain(_self_, _34350_rng, &(_34517_rang));
}



inline void _1a9b0263a_setupRangeKindKeys(_1a9aed658_scopeParser* _self_, jule::Ptr<_1c4aa3923_RangeKind>* _35242_rng, jule::Slice<jule::Ptr<_2039861ab_Token>>* _35264_tokens) {
	if (((*(_35264_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(3LLU))) {
		if ((!(*(_35264_tokens))[0LL].get()._field_Kind.equal("(", 1))) {
			_1a9aee846_pushErr(_self_, (*(_35264_tokens))[0LL], jule::Str("invalid syntax", 14));
			return;;
		};
		_1a9b0230a_setupRangeKindKeysExplicit(_self_, _35242_rng, _35264_tokens);
		return;;
	};
	_1a9b01ea8_setupRangeKindKeysPlain(_self_, _35242_rng, _35264_tokens);
}



inline jule::Ptr<_1c4aa3923_RangeKind> _1a9b02a8b_buildRangeIterKind(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _36442_var_tokens, jule::Slice<jule::Ptr<_2039861ab_Token>>* _36514_exprTokens, jule::Ptr<_2039861ab_Token>* _36541_inToken) {
	jule::Ptr<_1c4aa3923_RangeKind> _36617_rng = jule::new_ptr<_1c4aa3923_RangeKind>(_1c4aa3923_RangeKind{._field_InToken=(*(_36541_inToken)), });;
	if (((*(_36514_exprTokens)).len() == 0LL)) {
		_1a9aee846_pushErr(_self_, _36617_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1a9b1ad3a_buildExpr((*(_self_))._field_p, _36514_exprTokens);
	if (((*(_36442_var_tokens)).len() > 0LL)) {
		_1a9b0263a_setupRangeKindKeys(_self_, &(_36617_rng), _36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1a9b02e43_buildCommonIterKind(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _38043_tokens, jule::Ptr<_2039861ab_Token>* _38062_err_tok) {
	jule::I32 _38117_braceN = 0LL;;
	{
		auto expr = _38043_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad2dab44:;
		if (it != expr_end) {
			jule::I32 _38214_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ad2dc22d:;
							{
								(_38117_braceN)++;
								goto _iter_next_1ad2dab44;
							}
						}
						else {
							_case_begin_1ad2dbd32:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_1ad2dbb23:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_1ad2dab44;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(15LLU)) {
						_case_begin_1ad2dc2c7:;
						{
							jule::Slice<jule::Ptr<_2039861ab_Token>> _39925_declTokens = (*(_38043_tokens)).slice(0LL, _38214_i);;
							jule::Slice<jule::Ptr<_2039861ab_Token>> _40025_exprTokens = (*(_38043_tokens)).slice((_38214_i + 1LL));;
							return jule::Any(_1a9b02a8b_buildRangeIterKind(_self_, &(_39925_declTokens), &(_40025_exprTokens), &(_38221_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1ad2dca8b:;
				};
			}
			_iter_next_1ad2dab44:;
			++it;
			_38214_i++;
			goto _iter_begin_1ad2dab44;
		}
		_iter_end_1ad2dab44:;
	};
	return jule::Any(_1a9b0123d_buildWhileIterKind(_self_, _38043_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1c4aa27ac_Iter> _1a9b03251_buildCommonIter(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _40738_tokens) {
	jule::Ptr<_1c4aa27ac_Iter> _40817_it = jule::new_ptr<_1c4aa27ac_Iter>(_1c4aa27ac_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1a9aedcda_stop(_self_);
		_1a9aee846_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1a9aeeb65_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2039861ab_Token>> _41817_exprTokens = _1a9b14e44_getBlockExpr(&(_40738_tokens));;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1a9b02e43_buildCommonIterKind(_self_, &(_41817_exprTokens), &(_40817_it.get()._field_Token));
	};
	jule::I32 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _42317_scopeTokens = _1a9b18013_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_40738_tokens));;
	if ((_42317_scopeTokens == nullptr)) {
		_1a9aedcda_stop(_self_);
		_1a9aee846_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1a9aeeb65_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1a9aee846_pushErr(_self_, _40738_tokens[_42217_i], jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1a9b00506_buildScope(_self_, &(_42317_scopeTokens), _40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_1c4aa27ac_Iter> _1a9b0355e_buildIterSt(_1a9aed658_scopeParser* _self_, jule::Ptr<_1a9aecd2d_stmt>* _43735_st) {
	if ((*(_43735_st)).get()._field_terminated) {
		return _1a9b00e30_buildWhileNextIter(_self_, _43735_st);;
	};
	return _1a9b03251_buildCommonIter(_self_, (*(_43735_st)).get()._field_tokens);;
}



inline jule::Ptr<_1c4aa3cca_BreakSt> _1a9b0386c_buildBreakSt(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _44436_tokens) {
	jule::Ptr<_1c4aa3cca_BreakSt> _44517_brk = jule::new_ptr<_1c4aa3cca_BreakSt>(_1c4aa3cca_BreakSt{._field_Token=(*(_44436_tokens))[0LL], });;
	if (((*(_44436_tokens)).len() > 1LL)) {
		if (((*(_44436_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(2LLU))) {
			_1a9aee846_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1a9aeeb65_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=(*(_44436_tokens))[1LL];
			if (((*(_44436_tokens)).len() > 2LL)) {
				_1a9aee846_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_1c4aa4182_ContSt> _1a9b03b7a_buildContSt(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _46235_tokens) {
	jule::Ptr<_1c4aa4182_ContSt> _46317_cont = jule::new_ptr<_1c4aa4182_ContSt>(_1c4aa4182_ContSt{._field_Token=(*(_46235_tokens))[0LL], });;
	if (((*(_46235_tokens)).len() > 1LL)) {
		if (((*(_46235_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(2LLU))) {
			_1a9aee846_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1a9aeeb65_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=(*(_46235_tokens))[1LL];
			if (((*(_46235_tokens)).len() > 2LL)) {
				_1a9aee846_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_1c4aa4605_If> _1a9b03e88_buildIf(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _48031_tokens) {
	jule::Ptr<_1c4aa4605_If> _48117_model = jule::new_ptr<_1c4aa4605_If>(_1c4aa4605_If{._field_Token=(*(_48031_tokens))[0LL], });;
	(*(_48031_tokens))=(*(_48031_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_2039861ab_Token>> _48517_exprTokens = _1a9b14e44_getBlockExpr(_48031_tokens);;
	jule::I32 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1a9aee846_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I32>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_2039861ab_Token>> _49217_scopeTokens = _1a9b18013_range(&(_48617_i), jule::Str("{", 1), jule::Str("}", 1), _48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1a9aedcda_stop(_self_);
		_1a9aee846_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1a9aeeb65_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2039861ab_Token> _49917_end = (*(_48031_tokens))[(_48617_i - 1LL)];;
	if ((_48617_i < (*(_48031_tokens)).len())) {
		if (((*(_48031_tokens))[_48617_i].get()._field_Id == static_cast<jule::U32>(17LLU))) {
			(*(_48031_tokens))=(*(_48031_tokens)).slice(_48617_i);
		} else {
			_1a9aee846_pushErr(_self_, (*(_48031_tokens))[_48617_i], jule::Str("invalid syntax", 14));
			(*(_48031_tokens))=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1a9b1ad3a_buildExpr((*(_self_))._field_p, &(_48517_exprTokens));
	_48117_model.get()._field_Scope=_1a9b00506_buildScope(_self_, &(_49217_scopeTokens), _49917_end);
	return _48117_model;;
}



inline jule::Ptr<_1c4aa49ac_Else> _1a9b04296_buildElse(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _51333_tokens) {
	jule::Ptr<_1c4aa49ac_Else> _51417_els = jule::new_ptr<_1c4aa49ac_Else>(_1c4aa49ac_Else{._field_Token=(*(_51333_tokens))[0LL], });;
	(*(_51333_tokens))=(*(_51333_tokens)).slice(1LL);
	jule::I32 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _51917_scopeTokens = _1a9b18013_range(&(_51817_i), jule::Str("{", 1), jule::Str("}", 1), _51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < (*(_51333_tokens)).len())) {
			_1a9aee846_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1a9aedcda_stop(_self_);
			_1a9aee846_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1a9aeeb65_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < (*(_51333_tokens)).len())) {
		_1a9aee846_pushErr(_self_, (*(_51333_tokens))[_51817_i], jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1a9b00506_buildScope(_self_, &(_51917_scopeTokens), (*(_51333_tokens))[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_1c4aa4e30_Conditional> _1a9b045a4_buildIfElseChain(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _53739_tokens) {
	jule::Ptr<_1c4aa4e30_Conditional> _53817_chain = jule::new_ptr<_1c4aa4e30_Conditional>(_1c4aa4e30_Conditional{._field_Head=_1a9b03e88_buildIf(_self_, &(_53739_tokens)), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U32>(17LLU))) {
				goto _iter_end_1ad30c825;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U32>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_1c4aa4605_If> _55025_elif = _1a9b03e88_buildIf(_self_, &(_53739_tokens));;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_1ad30c825;
			};
			_53817_chain.get()._field_Default=_1a9b04296_buildElse(_self_, &(_53739_tokens));
			goto _iter_end_1ad30c825;
		}
	_iter_next_1ad30c825:;
	}
	_iter_end_1ad30c825:;;
	return _53817_chain;;
}



inline jule::Ptr<_1c4a93858_Expr> _1a9b048b2_buildCoCallSt(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _56036_tokens) {
	jule::Ptr<_2039861ab_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_1c4a93858_Expr> _56317_e = _1a9b1ad3a_buildExpr((*(_self_))._field_p, &(_56036_tokens));;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ad3114a5:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_1c4a9783a_FnCallExpr>(&__jule_any_type113).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1ad3118c3:;
			{
				_1a9aee846_pushErr(_self_, _56113_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1ad311593:;
	};
	return _56317_e;;
}



inline jule::Ptr<_1c4a9bd8e_GotoSt> _1a9b04bc0_buildGotoSt(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _57635_tokens) {
	jule::Ptr<_1c4a9bd8e_GotoSt> _57717_gt = jule::new_ptr<_1c4a9bd8e_GotoSt>(_1c4a9bd8e_GotoSt{._field_Token=(*(_57635_tokens))[0LL], });;
	if (((*(_57635_tokens)).len() == 1LL)) {
		_1a9aee846_pushErr(_self_, _57717_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57635_tokens)).len() > 2LL)) {
		_1a9aee846_pushErr(_self_, (*(_57635_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_2039861ab_Token> _58617_identToken = (*(_57635_tokens))[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9aee846_pushErr(_self_, _58617_identToken, jule::Str("invalid syntax", 14));
		_1a9aeeb65_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_1c4a9c17a_FallSt> _1a9b04ecd_buildFallSt(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _59635_tokens) {
	jule::Ptr<_1c4a9c17a_FallSt> _59717_fll = jule::new_ptr<_1c4a9c17a_FallSt>(_1c4a9c17a_FallSt{._field_Token=(*(_59635_tokens))[0LL]});;
	if (((*(_59635_tokens)).len() > 1LL)) {
		_1a9aee846_pushErr(_self_, (*(_59635_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_1c4aa5606_TypeAliasDecl> _1a9b052db_buildTypeAliasSt(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _60640_tokens) {
	jule::Ptr<_1c4aa5606_TypeAliasDecl> _60717_tad = _1a9b1c435_buildTypeAliasDecl((*(_self_))._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60717_tad;;
}



inline void _1a9b0574d_pushCaseExpr(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _61235_tokens, jule::Ptr<_2039861ab_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_1c4a93858_Expr>>* _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I32 _61921_i = 0LL;;
		jule::Ptr<_1c4a8e337_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType((*(_self_))._field_p, &(_61235_tokens), (&(_61921_i)), true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(jule::new_ptr<_1c4a93858_Expr>(_1c4a93858_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type95)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_1a9aee846_pushErr(_self_, _61235_tokens[_61921_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(_1a9b1ad3a_buildExpr((*(_self_))._field_p, &(_61235_tokens)));;
}



inline jule::Slice<jule::Ptr<_1c4a93858_Expr>> _1a9b05b9e_buildCaseExprs(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _63638_tokens, jule::Ptr<_2039861ab_Token>* _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_1c4a93858_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_1c4a93858_Expr>>::alloc(0LL, 1LL);;
	jule::I32 _63917_braceN = 0LL;;
	jule::I32 _64017_j = 0LL;;
	{
		auto expr = _63638_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad31c945:;
		if (it != expr_end) {
			jule::I32 _64114_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1ad31ed65:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_1ad31e969:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_1ad31e75a:;
					};
					goto _iter_next_1ad31c945;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_1ad31c945;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U32>(7LLU)) && _64121_tok.get()._field_Kind.equal("|", 1))) {
						_case_begin_1ad32065c:;
						{
							jule::Slice<jule::Ptr<_2039861ab_Token>> _65721_exprTokens = (*(_63638_tokens)).slice(_64017_j, _64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1a9aee846_pushErr(_self_, _64121_tok, jule::Str("expression missing", 18));
							} else {
								_1a9b0574d_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							};
							_64017_j=static_cast<jule::I32>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U32>(11LLU))) {
						_case_begin_1ad3206c3:;
						{
							(*(_63661_colon))=_64121_tok;
							_1a9b0574d_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							(*(_63638_tokens))=(*(_63638_tokens)).slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_1ad3201c8:;
				};
			}
			_iter_next_1ad31c945:;
			++it;
			_64114_i++;
			goto _iter_begin_1ad31c945;
		}
		_iter_end_1ad31c945:;
	};
	_1a9aee846_pushErr(_self_, (*(_63638_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63638_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1c4a9e2c0_ScopeTree> _1a9b05eac_buildCaseScope(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _67638_tokens) {
	jule::I32 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I32 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_2039861ab_Token>> _68022_next;;
			({
				__jule_tuple_sx_2039861ab_Token__jule_tuple_bool __jule_assign_result = _1a9aeca31_skipSt(&(_67921_i), (*(_67638_tokens)).slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_1ad324067;
			};
			jule::Ptr<_2039861ab_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U32>(7LLU)) || (!_68417_tok.get()._field_Kind.equal("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_1ad324067;
			};
			jule::Slice<jule::Ptr<_2039861ab_Token>> _68921_scopeTokens = (*(_67638_tokens)).slice(0LL, _67717_n);;
			jule::Ptr<_1c4a9e2c0_ScopeTree> _69021_scope = _1a9b00506_buildScope(_self_, &(_68921_scopeTokens), (*(_67638_tokens))[_67717_n]);;
			(*(_67638_tokens))=(*(_67638_tokens)).slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_1ad324067:;
	}
	_iter_end_1ad324067:;;
	jule::Ptr<_2039861ab_Token> _69417_end;;
	if (((*(_67638_tokens)).len() > 0LL)) {
		_69417_end=(*(_67638_tokens))[((*(_67638_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1c4a9e2c0_ScopeTree> _69817_scope = _1a9b00506_buildScope(_self_, _67638_tokens, _69417_end);;
	(*(_67638_tokens))=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_1c4aa5a79_Case__jule_tuple_bool _1a9b06364_buildCase(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_1c4aa5a79_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c4aa5a79_Case> _70417_c = jule::new_ptr<_1c4aa5a79_Case>(_1c4aa5a79_Case{._field_Token=(*(_70333_tokens))[0LL], });;
	(*(_70333_tokens))=(*(_70333_tokens)).slice(1LL);
	jule::Ptr<_2039861ab_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1a9b05b9e_buildCaseExprs(_self_, _70333_tokens, &(_70817_colon), _70351_typeMatch);
	_70417_c.get()._field_Scope=_1a9b05eac_buildCaseScope(_self_, _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c4aa5a79_Case__jule_tuple_x_1c4aa49ac_Else _1a9b0671b_buildCases(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_1c4aa5a79_Case__jule_tuple_x_1c4aa49ac_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1c4aa5a79_Case>> _71917_cases = nullptr;;
	jule::Ptr<_1c4aa49ac_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_2039861ab_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U32>(7LLU)) || (!_72321_tok.get()._field_Kind.equal("|", 1)))) {
				_1a9aee846_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1ad32c757;
			};
			jule::Ptr<_1c4aa5a79_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_1c4aa5a79_Case__jule_tuple_bool __jule_assign_result = _1a9b06364_buildCase(_self_, &(_71833_tokens), _71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_1c4aa49ac_Else>(_1c4aa49ac_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1a9aee846_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_1ad32c757:;
	}
	_iter_end_1ad32c757:;;
	if (_72117_defNotLast) {
		_1a9aee846_pushErr(_self_, _72017_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1c4aa6250_MatchCase> _1a9b06a29_buildMatchCase(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _75237_tokens) {
	jule::Ptr<_1c4aa6250_MatchCase> _75317_m = jule::new_ptr<_1c4aa6250_MatchCase>(_1c4aa6250_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U32>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_2039861ab_Token>> _76317_exprTokens = _1a9b14e44_getBlockExpr(&(_75237_tokens));;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1a9b1ad3a_buildExpr((*(_self_))._field_p, &(_76317_exprTokens));
	} else if (_75317_m.get()._field_TypeMatch) {
		_1a9aee846_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I32 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _77117_blockToks = _1a9b18013_range(&(_77017_i), jule::Str("{", 1), jule::Str("}", 1), &(_75237_tokens));;
	if ((_77117_blockToks == nullptr)) {
		_1a9aedcda_stop(_self_);
		_1a9aee846_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1a9aeeb65_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1a9aee846_pushErr(_self_, _75237_tokens[_77017_i], jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_1c4aa5a79_Case__jule_tuple_x_1c4aa49ac_Else __jule_assign_result = _1a9b0671b_buildCases(_self_, _77117_blockToks, _75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_1c4a9e2c0_ScopeTree> _1a9b06d37_buildScopeSt(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_2039861ab_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1a9aee846_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U32>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1a9aee846_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U32>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1a9aee846_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I32 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _81517_scopeTokens = _1a9b18013_range(&(_81417_i), jule::Str("{", 1), jule::Str("}", 1), &(_78535_tokens));;
	if ((_81517_scopeTokens == nullptr)) {
		_1a9aee846_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1a9aee846_pushErr(_self_, _78535_tokens[_81417_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1c4a9e2c0_ScopeTree> _82217_scope = _1a9b00506_buildScope(_self_, &(_81517_scopeTokens), _78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_1c4a9b9d7_LabelSt> _1a9b07145_buildLabelSt(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _82836_tokens) {
	jule::Ptr<_1c4a9b9d7_LabelSt> _82917_lbl = jule::new_ptr<_1c4a9b9d7_LabelSt>(_1c4a9b9d7_LabelSt{._field_Token=(*(_82836_tokens))[0LL], ._field_Ident=(*(_82836_tokens))[0LL].get()._field_Kind});;
	if (((*(_82836_tokens)).len() > 2LL)) {
		(*(_82836_tokens))=(*(_82836_tokens)).slice(2LL);
		_1a9aeedda_insertAsNext(_self_, _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__1c4a9d984_StmtData__jule_tuple_bool _1a9b07453_buildIdSt(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _84333_tokens) {
	__jule_tuple__1c4a9d984_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84333_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_2039861ab_Token> _84817_token = (*(_84333_tokens))[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1ad34365d:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a9b07145_buildLabelSt(_self_, _84333_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ad343608:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a9b16473_assignInfo> _1a9b07761_buildAssignInfo(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _85739_tokens) {
	jule::Ptr<_1a9b16473_assignInfo> _85817_info = jule::new_ptr<_1a9b16473_assignInfo>(_1a9b16473_assignInfo{._field_ok=true});;
	jule::I32 _86117_braceN = 0LL;;
	{
		auto expr = _85739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad344dbd:;
		if (it != expr_end) {
			jule::I32 _86214_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ad3464c9:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_1ad3460cd:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_1ad345dbe:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_1ad3467b5:;
						{
							goto _iter_next_1ad344dbd;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U32>(7LLU))) {
						_case_begin_1ad34682b:;
						{
							goto _iter_next_1ad344dbd;
						}
					}
					else if ((!(_20398ac93_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_1ad3468a3:;
						{
							goto _iter_next_1ad344dbd;
						}
					}
					_match_end_1ad346573:;
				};
				_85817_info.get()._field_l=(*(_85739_tokens)).slice(0LL, _86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= (*(_85739_tokens)).len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_20398a9eb_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1ad344dbd;
				};
				_85817_info.get()._field_r=(*(_85739_tokens)).slice((_86214_i + 1LL));
				if (_20398a9eb_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1a9aee846_pushErr(_self_, _85817_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1ad344dbd;
			}
			_iter_next_1ad344dbd:;
			++it;
			_86214_i++;
			goto _iter_begin_1ad344dbd;
		}
		_iter_end_1ad344dbd:;
	};
	return _85817_info;;
}



inline jule::Ptr<_1c4a9c785_AssignLeft> _1a9b07a6e_buildAssignL(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _90536_tokens) {
	jule::Ptr<_1c4a9c785_AssignLeft> _90617_l = jule::new_ptr<_1c4a9c785_AssignLeft>(_1c4a9c785_AssignLeft{._field_Token=(*(_90536_tokens))[0LL], });;
	if (((*(_90536_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1a9b1ad3a_buildExpr((*(_self_))._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_1c4a9c785_AssignLeft>> _1a9b07d7c_buildAssignLs(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>>* _91637_parts) {
	jule::Slice<jule::Ptr<_1c4a9c785_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto expr = _91637_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad34d3b0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _91821_part = *it;
			{
				jule::Ptr<_1c4a9c785_AssignLeft> _91921_l = _1a9b07a6e_buildAssignL(_self_, &(_91821_part));;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_1ad34d3b0:;
			++it;
			goto _iter_begin_1ad34d3b0;
		}
		_iter_end_1ad34d3b0:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool _1a9b0818a_buildPlainAssign(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _92640_tokens) {
	__jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a9b16473_assignInfo> _92717_info = _1a9b07761_buildAssignInfo(_self_, _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4a9ccc4_AssignSt> _93217_assign = jule::new_ptr<_1c4a9ccc4_AssignSt>(_1c4a9ccc4_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _93618_parts;;
	jule::Slice<_1c2220900_Log> _93625_errs;;
	({
		__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9b18a80_parts(&(_92717_info.get()._field_l), static_cast<jule::U32>(8LLU), true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1a9b07d7c_buildAssignLs(_self_, &(_93618_parts));
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1a9b1ad3a_buildExpr((*(_self_))._field_p, &(_92717_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool _1a9b08498_buildDeclAssign(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _95038_tokens) {
	__jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_2039861ab_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_95617_token.get()._field_Kind.equal("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4a9ccc4_AssignSt> _96117_assign = jule::new_ptr<_1c4a9ccc4_AssignSt>(_1c4a9ccc4_AssignSt{._field_Declarative=true, });;
	jule::I32 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _96617_rang = _1a9b18013_range(&(_96517_i), jule::Str("(", 1), jule::Str(")", 1), &(_95038_tokens));;
	if ((_96617_rang == nullptr)) {
		_1a9aee846_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_2039861ab_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1a9b1ad3a_buildExpr((*(_self_))._field_p, &(_97321_exprTokens));
	};
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _97818_parts;;
	jule::Slice<_1c2220900_Log> _97825_errs;;
	({
		__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9b18a80_parts(&(_96617_rang), static_cast<jule::U32>(8LLU), true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_97818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad359333:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U32>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1a9aee846_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1ad359333;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U32>(7LLU)) && _98421_part[0LL].get()._field_Kind.equal("&", 1))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1a9aee846_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1ad359333;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U32>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U32>(3LLU))) && (!_98421_part[0LL].get()._field_Kind.equal("(", 1)))) {
					_1a9aee846_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1ad359333;
				};
				jule::Ptr<_1c4a9c785_AssignLeft> _101421_l = _1a9b07a6e_buildAssignL(_self_, &(_98421_part));;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_1ad359333:;
			++it;
			goto _iter_begin_1ad359333;
		}
		_iter_end_1ad359333:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool _1a9b087a6_buildAssignSt(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _102337_tokens) {
	__jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a9b16819_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_102337_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1ad36269e:;
			{
				({
					__jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool __jule_assign_result = _1a9b08498_buildDeclAssign(_self_, (*(_102337_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ad362292:;
			{
				({
					__jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool __jule_assign_result = _1a9b0818a_buildPlainAssign(_self_, _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ad36223c:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c4a941e9_UseExpr> _1a9b08ab4_buildUseExpr(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _103836_tokens) {
	if (((*(_103836_tokens)).len() == 1LL)) {
		_1a9aee846_pushErr(_self_, (*(_103836_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1c4a941e9_UseExpr> _104317_ue = jule::new_ptr<_1c4a941e9_UseExpr>(_1c4a941e9_UseExpr{._field_Token=(*(_103836_tokens))[0LL], });;
	(*(_103836_tokens))=(*(_103836_tokens)).slice(1LL);
	_104317_ue.get()._field_Expr=_1a9b1ad3a_buildExpr((*(_self_))._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1a9b08dc2_buildSt(_1a9aed658_scopeParser* _self_, jule::Ptr<_1a9aecd2d_stmt>* _105131_st) {
	jule::Ptr<_2039861ab_Token> _105217_token = (*(_105131_st)).get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__1c4a9d984_StmtData__jule_tuple_bool __jule_assign_result = _1a9b07453_buildIdSt(_self_, &((*(_105131_st)).get()._field_tokens));
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_1c4a9ccc4_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_1c4a9ccc4_AssignSt__jule_tuple_bool __jule_assign_result = _1a9b087a6_buildAssignSt(_self_, &((*(_105131_st)).get()._field_tokens));
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1ad36763d:;
			{
				return jule::Any(_1a9b08ab4_buildUseExpr(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU) || _match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1ad367792:;
			{
				return jule::Any(_1a9b00814_buildVarSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1ad367808:;
			{
				return jule::Any(_1a9b00b22_buildRetSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(12LLU)) {
			_case_begin_1ad3678c4:;
			{
				return jule::Any(_1a9b0355e_buildIterSt(_self_, _105131_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1ad36793a:;
			{
				return jule::Any(_1a9b0386c_buildBreakSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(14LLU)) {
			_case_begin_1ad3679a1:;
			{
				return jule::Any(_1a9b03b7a_buildContSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1ad367a17:;
			{
				return jule::Any(_1a9b045a4_buildIfElseChain(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1ad367a7d:;
			{
				return jule::Any(_1a9b048b2_buildCoCallSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1ad367ae4:;
			{
				return jule::Any(_1a9b04bc0_buildGotoSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ad367b5a:;
			{
				return jule::Any(_1a9b04ecd_buildFallSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1ad367bc1:;
			{
				return jule::Any(_1a9b052db_buildTypeAliasSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1ad367c37:;
			{
				return jule::Any(_1a9b06a29_buildMatchCase(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1ad367c9d:;
			{
				return jule::Any(_1a9b06d37_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ad367d25:;
			{
				if (_105217_token.get()._field_Kind.equal("{", 1)) {
					return jule::Any(_1a9b06d37_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_1ad3674ea:;
	};
	jule::Ptr<_1c4a93858_Expr> _110117_expr = _1a9b1ad3a_buildExpr((*(_self_))._field_p, &((*(_105131_st)).get()._field_tokens));;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type53);;
	};
	_1a9aee846_pushErr(_self_, _105217_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1a9b091e1_build(_1a9aed658_scopeParser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _110929_tokens, jule::Ptr<_1c4a9e2c0_ScopeTree>* _110952_s) {
	if (((*(_110952_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a9aed1c4_splitStmts(_110929_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_110952_s));
	while (((!(_1a9aee527_isLastSt(_self_))) && (!(_1a9aee2b3_finished(_self_))))) {
		{
			jule::Ptr<_1a9aecd2d_stmt> _111721_st = _1a9b0014e_next(_self_);;
			jule::Any _111821_data = _1a9b08dc2_buildSt(_self_, &(_111721_st));;
			if ((_111821_data != nullptr)) {
				(*(_self_))._field_s.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_s.get()._field_Stmts,1);(*(_self_))._field_s.get()._field_Stmts.__push(_1c4a9dbb5_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_1a9aee04e_stopped(_self_)) {
				goto _iter_end_1ad3707bc;
			};
		}
	_iter_next_1ad3707bc:;
	}
	_iter_end_1ad3707bc:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9aed658_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1a9b0a412_pushErr(_1a9b09b3c_exprBuilder* _self_, jule::Ptr<_2039861ab_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1a9b1a70d_pushErr((*(_self_))._field_p.ptr(), _4426_token, _4441_fmt, _4454_args);
}



inline void _1a9b0a731_pushSuggestion(_1a9b09b3c_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1a9b1aa2c_pushSuggestion((*(_self_))._field_p.ptr(), _4933_fmt, _4946_args);
}



inline jule::Ptr<_1c4a944d5_TupleExpr> _1a9b0aa3e_buildTuple(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>>* _5334_parts) {
	jule::Ptr<_1c4a944d5_TupleExpr> _5417_tuple = jule::new_ptr<_1c4a944d5_TupleExpr>(_1c4a944d5_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1c4a93858_Expr>>::alloc(0LL, (*(_5334_parts)).len())});;
	{
		auto expr = _5334_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad390897:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1a9b1455e_buildFromTokens(_self_, _5721_part));;
			}
			_iter_next_1ad390897:;
			++it;
			goto _iter_begin_1ad390897;
		}
		_iter_end_1ad390897:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_1c4a9488c_LitExpr> _1a9b0ad4c_buildLit(_1a9b09b3c_exprBuilder* _self_, jule::Ptr<_2039861ab_Token> _6327_token) {
	return jule::new_ptr<_1c4a9488c_LitExpr>(_1c4a9488c_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b0b15a_buildPrimitiveType(_1a9b09b3c_exprBuilder* _self_, jule::Ptr<_2039861ab_Token>* _7038_token) {
	return _1a9b2a542_buildPrimType((*(_7038_token)));;
}



inline jule::Any _1a9b0b468_buildSingle(_1a9b09b3c_exprBuilder* _self_, jule::Ptr<_2039861ab_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1ad392338:;
			{
				return jule::Any(_1a9b0ad4c_buildLit(_self_, _7434_token), &__jule_any_type107);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ad39239e:;
			{
				if (_7434_token.get()._field_Kind.equal("...", 3)) {
					return jule::Any(jule::new_ptr<_1c4a960ca_VariadicExpr>(_1c4a960ca_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type82);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU) || _match_expr == static_cast<jule::U32>(27LLU) || _match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1ad392426:;
			{
				return jule::Any(_1a9b15818_buildIdentExpr(&(_7434_token)), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1ad39249d:;
			{
				return jule::Any(_1a9b0b15a_buildPrimitiveType(_self_, &(_7434_token)), &__jule_any_type95);;
			}
		}
		_match_end_1ad391ed6:;
	};
	_1a9b0a412_pushErr(_self_, _7434_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c4a95519_IdentExpr> _1a9b0b776_buildCppLinkedIdent(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _9543_tokens) {
	if (((*(_9543_tokens))[0LL].get()._field_Id != static_cast<jule::U32>(30LLU))) {
		return nullptr;;
	} else if (((*(_9543_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(20LLU))) {
		_1a9b0a412_pushErr(_self_, (*(_9543_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b0a731_pushSuggestion(_self_, jule::Str("use dot (.) to access cpp-linked defines", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2039861ab_Token> _10317_token = (*(_9543_tokens))[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9b0a412_pushErr(_self_, (*(_9543_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b0a731_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4a95519_IdentExpr> _10917_expr = _1a9b15818_buildIdentExpr(&(_10317_token));;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;;
}



inline jule::Ptr<_1c4a95c23_UnaryExpr> _1a9b0ba84_buildUnary(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _11433_tokens) {
	jule::Ptr<_2039861ab_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1a9b0a412_pushErr(_self_, _11517_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_2039868b5_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1a9b0a412_pushErr(_self_, _11517_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_1c4a95c23_UnaryExpr>(_1c4a95c23_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1a9b1455e_buildFromTokens(_self_, _11433_tokens)});;
}



inline jule::Ptr<_1c4a96cac_SubIdentExpr> _1a9b0bd92_buildObjSubIdent(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _13539_tokens) {
	jule::I32 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_2039861ab_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL, _13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1a9b0a412_pushErr(_self_, _13717_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c4a96cac_SubIdentExpr>(_1c4a96cac_SubIdentExpr{._field_Expr=_1a9b1455e_buildFromTokens(_self_, _13539_tokens), ._field_Ident=_13717_identToken});;
}



inline jule::Ptr<_1c4a96839_NsSelectionExpr> _1a9b0c1a0_buildNsSubIdent(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _15039_tokens) {
	jule::Ptr<_1c4a96839_NsSelectionExpr> _15117_ns = jule::new_ptr<_1c4a96839_NsSelectionExpr>();;
	{
		auto expr = _15039_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad39d498:;
		if (it != expr_end) {
			jule::I32 _15214_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
						_1a9b0a412_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a9b0a731_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_1a9b0a412_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a9b0a731_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ad39d498:;
			++it;
			_15214_i++;
			goto _iter_begin_1ad39d498;
		}
		_iter_end_1ad39d498:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL, (_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b0c4ad_buildType(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _16933_tokens) {
	jule::I32 _17017_i = 0LL;;
	jule::Ptr<_1c4a8e337_TypeDecl> _17118_t;;
	jule::Bool _17121_ok = false;;
	({
		__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType((*(_self_))._field_p, _16933_tokens, (&(_17017_i)), false);
		_17118_t = __jule_assign_result.__jule_result_arg0;
		_17121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17121_ok))) {
		_1a9b0a412_pushErr(_self_, (*(_16933_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17017_i < (*(_16933_tokens)).len())) {
		_1a9b0a412_pushErr(_self_, (*(_16933_tokens))[_17017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17118_t;;
}



inline jule::Any _1a9b0c7bb_buildSubIdent(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _18337_tokens) {
	jule::I32 _18413_i = ((*(_18337_tokens)).len() - 2LL);;
	jule::Ptr<_2039861ab_Token> _18513_token = (*(_18337_tokens))[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1ad3a5516:;
			{
				return jule::Any(_1a9b0bd92_buildObjSubIdent(_self_, (*(_18337_tokens))), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1ad3a5a11:;
			{
				return jule::Any(_1a9b0c1a0_buildNsSubIdent(_self_, _18337_tokens), &__jule_any_type96);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ad3a5a77:;
			{
				if (_18513_token.get()._field_Kind.equal("]", 1)) {
					return jule::Any(_1a9b0c4ad_buildType(_self_, _18337_tokens), &__jule_any_type95);;
				};
			}
		}
		_match_end_1ad3a589b:;
	};
	_1a9b0a412_pushErr(_self_, _18513_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c4a960ca_VariadicExpr> _1a9b0cac9_buildVariadic(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _20136_tokens) {
	jule::Ptr<_2039861ab_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL, (_20136_tokens.len() - 1LL));
	return jule::new_ptr<_1c4a960ca_VariadicExpr>(_1c4a960ca_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1a9b1455e_buildFromTokens(_self_, _20136_tokens)});;
}



inline jule::Any _1a9b0cdd7_buildOpRight(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _21036_tokens) {
	jule::Ptr<_2039861ab_Token> _21117_token = (*(_21036_tokens))[((*(_21036_tokens)).len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ad3a9949:;
			{
				(*(_21036_tokens))=(*(_21036_tokens)).slice(0LL, ((*(_21036_tokens)).len() - 1LL));
				jule::Any _21521_d = _1a9b13e43_build(_self_, _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1ad3ab011:;
						{
							_21521_d.cast_ptr<_1c4a9783a_FnCallExpr>(&__jule_any_type113).get()._field_Exception=jule::new_ptr<_1c4a9e2c0_ScopeTree>(_1c4a9e2c0_ScopeTree{._field_Deferred=true, });
							return _21521_d;;
						}
					}
					_match_end_1ad3ab143:;
				};
			}
		}
		_match_end_1ad3a9790:;
	};
	_1a9b0a412_pushErr(_self_, _21117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c4a93b44_RangeExpr> _1a9b0d217_buildBetweenParentheses(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1a9b0a412_pushErr(_self_, _23146_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1a9b0a731_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_23146_tokens=_23146_tokens.slice(1LL, (_23146_tokens.len() - 1LL));
	return jule::new_ptr<_1c4a93b44_RangeExpr>(_1c4a93b44_RangeExpr{._field_Expr=_1a9b1455e_buildFromTokens(_self_, _23146_tokens)});;
}



inline jule::Ptr<_1c4a96482_CastExpr> _1a9b0d536_tryBuildCast(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _24336_tokens) {
	jule::I32 _24417_rangeN = 0LL;;
	{
		auto expr = _24336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3ae333:;
		if (it != expr_end) {
			jule::I32 _24513_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ad3b08ea:;
							{
								(_24417_rangeN)++;
								goto _iter_next_1ad3ae333;
							}
						}
						else {
							_case_begin_1ad3b04ee:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_1ad3b02e0:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_1ad3ae333;
				} else if (((_24513_i + 1LL) == (*(_24336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_2039861ab_Token>> _26421_typeTokens = (*(_24336_tokens)).slice(0LL, (_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_2039861ab_Token>> _26521_exprTokens = (*(_24336_tokens)).slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_2039861ab_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_27217_tok.get()._field_Kind.equal("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_1c4a96482_CastExpr> _27721_cast = jule::new_ptr<_1c4a96482_CastExpr>(_1c4a96482_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1a9b0a412_pushErr(_self_, _26521_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1a9b0a731_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1a9b0a412_pushErr(_self_, _26421_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1a9b0a731_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL, (_26421_typeTokens.len() - 1LL));
					jule::I32 _29125_typeIndex = 0LL;;
					jule::Ptr<_1c4a8e337_TypeDecl> _29226_t;;
					jule::Bool _29229_ok = false;;
					({
						__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType((*(_self_))._field_p, &(_26421_typeTokens), (&(_29125_typeIndex)), true);
						_29226_t = __jule_assign_result.__jule_result_arg0;
						_29229_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1a9b0a412_pushErr(_self_, _26421_typeTokens[_29125_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I32 _30229_j = 0LL;;
						_1a9b18013_range(&(_30229_j), jule::Str("(", 1), jule::Str(")", 1), &(_26521_exprTokens));
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL, _30229_j);
						_27721_cast.get()._field_Expr=_1a9b1455e_buildFromTokens(_self_, _26521_exprTokens);
					};
				};
				return _27721_cast;;
			}
			_iter_next_1ad3ae333:;
			++it;
			_24513_i++;
			goto _iter_begin_1ad3ae333;
		}
		_iter_end_1ad3ae333:;
	};
	return nullptr;;
}



inline void _1a9b0d8ee_pushArg(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c4a93858_Expr>>* _31731_args, jule::Slice<jule::Ptr<_2039861ab_Token>> _31750_tokens, jule::Ptr<_2039861ab_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1a9b0a412_pushErr(_self_, _31768_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b0a731_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_31731_args)) = jule::alloc_for_append((*(_31731_args)),1);(*(_31731_args)).__push(_1a9b1455e_buildFromTokens(_self_, _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_1c4a93858_Expr>> _1a9b0dc0c_buildArgs(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c4a93858_Expr>> _33217_args = nullptr;;
	jule::I32 _33317_last = 0LL;;
	jule::I32 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL, (_32632_tokens.len() - 1LL));
	{
		auto expr = &(_32632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3bcdbe:;
		if (it != expr_end) {
			jule::I32 _33613_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ad3be651:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_1ad3be255:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_1ad3be046:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1ad3bcdbe;
				};
				_1a9b0d8ee_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last, _33613_i), _33616_token);
				_33317_last=static_cast<jule::I32>((_33613_i + 1LL));
			}
			_iter_next_1ad3bcdbe:;
			++it;
			_33613_i++;
			goto _iter_begin_1ad3bcdbe;
		}
		_iter_end_1ad3bcdbe:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1a9b0d8ee_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[_33317_last]);
			};
		} else {
			_1a9b0d8ee_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;;
}



inline jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _1a9b0e01a_buildCallGenerics(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36840_tokens=_36840_tokens.slice(1LL, (_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _37418_parts;;
	jule::Slice<_1c2220900_Log> _37425_errs;;
	({
		__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9b18a80_parts(&(_36840_tokens), static_cast<jule::U32>(8LLU), true);
		_37418_parts = __jule_assign_result.__jule_result_arg0;
		_37425_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_37425_errs);
	{
		auto expr = &(_37418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3c4205:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_1ad3c4205;
				};
				jule::I32 _38121_j = 0LL;;
				jule::Ptr<_1c4a8e337_TypeDecl> _38222_generic;;
				({
					__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType((*(_self_))._field_p, &(_37721_part), (&(_38121_j)), true);
					_38222_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_38121_j < _37721_part.len())) {
					_1a9b0a412_pushErr(_self_, _37721_part[_38121_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_1ad3c4205:;
			++it;
			goto _iter_begin_1ad3c4205;
		}
		_iter_end_1ad3c4205:;
	};
	return _37517_generics;;
}



inline jule::Ptr<_1c4a9783a_FnCallExpr> _1a9b0e46b_buildFnCall(_1a9b09b3c_exprBuilder* _self_, jule::Ptr<_2039861ab_Token>* _39235_token, jule::Slice<jule::Ptr<_2039861ab_Token>>* _39255_expr, jule::Slice<jule::Ptr<_2039861ab_Token>>* _39276_args) {
	return jule::new_ptr<_1c4a9783a_FnCallExpr>(_1c4a9783a_FnCallExpr{._field_Token=(*(_39235_token)), ._field_Expr=_1a9b1455e_buildFromTokens(_self_, (*(_39255_expr))), ._field_Args=_1a9b0dc0c_buildArgs(_self_, (*(_39276_args))), });;
}



inline jule::Any _1a9b0e779_buildParenthesesRange(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _40045_tokens) {
	jule::Ptr<_2039861ab_Token> _40117_token = (*(_40045_tokens))[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ad3c83c4:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1c22eaec5:;
						{
							jule::Ptr<_1c4a96482_CastExpr> _40625_expr = _1a9b0d536_tryBuildCast(_self_, _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return jule::Any(_40625_expr, &__jule_any_type111);;
							};
						}
					}
					_match_end_1c21d242d:;
				};
			}
		}
		_match_end_1ad3c821a:;
	};
	jule::Slice<jule::Ptr<_2039861ab_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _41234_args_tokens;;
	({
		__jule_tuple_sx_2039861ab_Token__jule_tuple_sx_2039861ab_Token __jule_assign_result = _1a9b182aa_rangeLast(_40045_tokens);
		_41218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41218_exprTokens.len() == 0LL)) {
		return jule::Any(_1a9b0d217_buildBetweenParentheses(_self_, _41234_args_tokens), &__jule_any_type106);;
	};
	return jule::Any(_1a9b0e46b_buildFnCall(_self_, &(_40117_token), &(_41218_exprTokens), &(_41234_args_tokens)), &__jule_any_type113);;
}



inline jule::Ptr<_1c4a95096_UnsafeExpr> _1a9b0ea87_buildUnsafeExpr(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _42138_tokens) {
	jule::Ptr<_2039861ab_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I32 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _42517_rangeTokens = _1a9b18013_range(&(_42417_i), jule::Str("{", 1), jule::Str("}", 1), &(_42138_tokens));;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1a9b0a412_pushErr(_self_, _42138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c4a95096_UnsafeExpr>(_1c4a95096_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1a9b1455e_buildFromTokens(_self_, _42517_rangeTokens)});;
}



inline jule::Ptr<_1c4aa0cb6_FnDecl> _1a9b0ed95_buildAnonFn(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _43635_tokens) {
	jule::Ptr<_1c4aa0cb6_FnDecl> _43717_f = _1a9b2126e_buildFn((*(_self_))._field_p, _43635_tokens, false, false);;
	if ((!(_1c4aa1118_IsAnon(_43717_f.ptr())))) {
		_1a9b0a412_pushErr(_self_, _43717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b0a731_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _43717_f;;
}



inline jule::Any _1a9b101a3_buildUnsafe(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _44535_tokens) {
	{
		auto &_match_expr{ (*(_44535_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1ad3cb0b9:;
			{
				return jule::Any(_1a9b0ed95_buildAnonFn(_self_, _44535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1ad3cb592:;
			{
				return jule::Any(_1a9b0ea87_buildUnsafeExpr(_self_, (*(_44535_tokens))), &__jule_any_type108);;
			}
		}
		_match_end_1ad3cb51a:;
	};
}



inline void _1a9b1056b_pushRangeLitPart(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _45539_part, jule::Ptr<_2039861ab_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>>* _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1a9b0a412_pushErr(_self_, _4569_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b0a731_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_45634_parts)) = jule::alloc_for_append((*(_45634_parts)),1);(*(_45634_parts)).__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _1a9b1089b_getBraceRangeLitExprParts(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _47217_parts = nullptr;;
	jule::I32 _47417_last = 0LL;;
	jule::I32 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL, (_46648_tokens.len() - 1LL));
	{
		auto expr = &(_46648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3d06d9:;
		if (it != expr_end) {
			jule::I32 _47713_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ad3d1e6b:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_1ad3d1a70:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_1ad3d1861:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1ad3d06d9;
				};
				_1a9b1056b_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last, _47713_i), _47716_token, &(_47217_parts));
				_47417_last=static_cast<jule::I32>((_47713_i + 1LL));
			}
			_iter_next_1ad3d06d9:;
			++it;
			_47713_i++;
			goto _iter_begin_1ad3d06d9;
		}
		_iter_end_1ad3d06d9:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1a9b1056b_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[_47417_last], &(_47217_parts));
			};
		} else {
			_1a9b1056b_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[(_47417_last - 1LL)], &(_47217_parts));
		};
	};
	return _47217_parts;;
}



inline jule::Ptr<_1c4a982b9_FieldExprPair> _1a9b10bba_buildFieldExprPair(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1a9b0a412_pushErr(_self_, _50841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4a982b9_FieldExprPair> _51317_pair = jule::new_ptr<_1c4a982b9_FieldExprPair>(_1c4a982b9_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1a9b1455e_buildFromTokens(_self_, _50841_tokens);
	return _51317_pair;;
}



inline jule::Ptr<_1c4a93858_Expr> _1a9b10ec8_buildStructLitExpr(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _52142_tokens) {
	jule::Ptr<_2039861ab_Token> _52217_token = (*(_52142_tokens))[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U32>(2LLU)) && ((*(_52142_tokens)).len() > 1LL))) {
		_52217_token=(*(_52142_tokens))[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U32>(11LLU))) {
			return jule::new_ptr<_1c4a93858_Expr>(_1c4a93858_Expr{._field_Token=_52217_token, ._field_End=(*(_52142_tokens))[((*(_52142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a9b10bba_buildFieldExprPair(_self_, (*(_52142_tokens))), &__jule_any_type84)});;
		};
	};
	return _1a9b1455e_buildFromTokens(_self_, (*(_52142_tokens)));;
}



inline jule::Slice<jule::Ptr<_1c4a93858_Expr>> _1a9b112d6_buildStructLitExprs(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _53717_parts = _1a9b1089b_getBraceRangeLitExprParts(_self_, (*(_53643_tokens)));;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c4a93858_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_1c4a93858_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto expr = &(_53717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3d9ced:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1a9b10ec8_buildStructLitExpr(_self_, &(_54321_part)));;
			}
			_iter_next_1ad3d9ced:;
			++it;
			goto _iter_begin_1ad3d9ced;
		}
		_iter_end_1ad3d9ced:;
	};
	return _54217_pairs;;
}



inline jule::Ptr<_1c4a98a17_StructLit> _1a9b11616_buildTypedStructLiteral(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _54946_tokens) {
	jule::I32 _55017_i = 0LL;;
	jule::Ptr<_1c4a8e337_TypeDecl> _55118_t;;
	jule::Bool _55121_ok = false;;
	({
		__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType((*(_self_))._field_p, &(_54946_tokens), (&(_55017_i)), true);
		_55118_t = __jule_assign_result.__jule_result_arg0;
		_55121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_55121_ok))) {
		return nullptr;;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1a9b0a412_pushErr(_self_, _54946_tokens[_55017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_2039861ab_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_56013_token.get()._field_Kind.equal("{", 1)))) {
		_1a9b0a412_pushErr(_self_, _56013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c4a98a17_StructLit>(_1c4a98a17_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1a9b112d6_buildStructLitExprs(_self_, &(_54946_tokens))});;
}



inline jule::Ptr<_1c4a93858_Expr> _1a9b11935_buildBraceLitPart(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _57341_tokens) {
	jule::Slice<jule::Ptr<_2039861ab_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _57425_r;;
	({
		__jule_tuple_sx_2039861ab_Token__jule_tuple_sx_2039861ab_Token __jule_assign_result = _1a9b152c9_splitDelim(_57341_tokens, static_cast<jule::U32>(11LLU));
		_57418_l = __jule_assign_result.__jule_result_arg0;
		_57425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_1c4a93858_Expr>(_1c4a93858_Expr{._field_Token=(*(_57341_tokens))[0LL], ._field_End=(*(_57341_tokens))[((*(_57341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1c4a99760_KeyValPair>(_1c4a99760_KeyValPair{._field_Key=_1a9b1455e_buildFromTokens(_self_, _57418_l), ._field_Val=_1a9b1455e_buildFromTokens(_self_, _57425_r), ._field_Colon=(*(_57341_tokens))[_57418_l.len()]}), &__jule_any_type85)});;
	};
	return _1a9b1455e_buildFromTokens(_self_, (*(_57341_tokens)));;
}



inline jule::Ptr<_1c4a98e8a_BraceLit> _1a9b11c43_buildBraceLit(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _59037_tokens) {
	jule::Ptr<_1c4a98e8a_BraceLit> _59117_lit = jule::new_ptr<_1c4a98e8a_BraceLit>(_1c4a98e8a_BraceLit{._field_Token=(*(_59037_tokens))[0LL], ._field_End=(*(_59037_tokens))[((*(_59037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _59617_parts = _1a9b1089b_getBraceRangeLitExprParts(_self_, (*(_59037_tokens)));;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1c4a93858_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto expr = &(_59617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3e4621:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1a9b11935_buildBraceLitPart(_self_, &(_60221_part)));;
			}
			_iter_next_1ad3e4621:;
			++it;
			goto _iter_begin_1ad3e4621;
		}
		_iter_end_1ad3e4621:;
	};
	return _59117_lit;;
}



inline jule::Any _1a9b12051_buildBraceRange(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _60939_tokens) {
	jule::Slice<jule::Ptr<_2039861ab_Token>> _61018_exprTokens;;
	jule::I32 _61030_rangeN = 0;;
	({
		__jule_tuple_sx_2039861ab_Token__jule_tuple_int __jule_assign_result = _1a9b15ab0_getRangeExprTokens(_60939_tokens);
		_61018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_61030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1ad3e604b:;
			{
				return jule::Any(_1a9b11c43_buildBraceLit(_self_, _60939_tokens), &__jule_any_type114);;
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1ad3e60c3:;
			{
				_1a9b0a412_pushErr(_self_, (*(_60939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad3e4ee5:;
	};
	jule::Ptr<_2039861ab_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U32>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL, (_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1a9b13e43_build(_self_, &(_61018_exprTokens));;
		if ((_62421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type == &__jule_any_type113) {
				_case_begin_1ad3e913c:;
				{
					(*(_60939_tokens))=(*(_60939_tokens)).slice((_61018_exprTokens.len() + 1LL));
					jule::I32 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_2039861ab_Token>> _63225_rangeTokens = _1a9b18013_range(&(_63125_i), jule::Str("{", 1), jule::Str("}", 1), _60939_tokens);;
					jule::Ptr<_1c4a9783a_FnCallExpr> _63325_model = _62421_d.cast_ptr<_1c4a9783a_FnCallExpr>(&__jule_any_type113);;
					if (_1c4a97e12_Ignored(_63325_model.ptr())) {
						_1a9b0a412_pushErr(_self_, _62113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a9b0a731_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1a9b1b775_buildScope((*(_self_))._field_p, &(_63225_rangeTokens), (*(_60939_tokens))[(_63125_i - 1LL)]);
					return _62421_d;;
				}
			}
			else {
				_case_begin_1ad3e933a:;
				{
					_1a9b0a412_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1ad3e926e:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1ad3edc24:;
			{
				return _1a9b101a3_buildUnsafe(_self_, _60939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1ad3edc8a:;
			{
				return jule::Any(_1a9b0ed95_buildAnonFn(_self_, _60939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1ad3eda7b:;
			{
				return jule::Any(_1a9b11616_buildTypedStructLiteral(_self_, (*(_60939_tokens))), &__jule_any_type112);;
			}
		}
		else {
			_case_begin_1ad3eb5e5:;
			{
				_1a9b0a412_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad3ecdcc:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _1a9b1235e_getEnumerableParts(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL, (_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _66318_parts;;
	jule::Slice<_1c2220900_Log> _66325_errors;;
	({
		__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9b18a80_parts(&(_66141_tokens), static_cast<jule::U32>(8LLU), true);
		_66318_parts = __jule_assign_result.__jule_result_arg0;
		_66325_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;;
}



inline jule::Ptr<_1c4a99e47_SliceExpr> _1a9b1266c_buildSlice(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _66833_tokens) {
	jule::Ptr<_1c4a99e47_SliceExpr> _66917_slc = jule::new_ptr<_1c4a99e47_SliceExpr>(_1c4a99e47_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _67417_parts = _1a9b1235e_getEnumerableParts(_self_, _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1c4a93858_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto expr = &(_67417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad403157:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1ad403157;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1a9b1455e_buildFromTokens(_self_, _68021_p));;
			}
			_iter_next_1ad403157:;
			++it;
			goto _iter_begin_1ad403157;
		}
		_iter_end_1ad403157:;
	};
	return _66917_slc;;
}



inline jule::Ptr<_1c4a9a7b6_IndexingExpr> _1a9b12abd_buildIndexing(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_2039861ab_Token>> _69113_tokens, jule::Ptr<_2039861ab_Token> _69135_errorToken) {
	jule::Ptr<_2039861ab_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL, (_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1a9b0a412_pushErr(_self_, _69135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4a93858_Expr> _69817_expr = _1a9b1455e_buildFromTokens(_self_, _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c4a93858_Expr> _70217_index = _1a9b1455e_buildFromTokens(_self_, _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c4a9a7b6_IndexingExpr>(_1c4a9a7b6_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});;
}



inline jule::Ptr<_1c4a9adc1_SlicingExpr> _1a9b13162_buildSlicing(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _71436_exprTokens, jule::Slice<jule::Ptr<_2039861ab_Token>>* _71463_start, jule::Slice<jule::Ptr<_2039861ab_Token>>* _71514_to, jule::Ptr<_2039861ab_Token>* _71533_errorToken, jule::Ptr<_2039861ab_Token> _71557_end) {
	jule::Ptr<_1c4a9adc1_SlicingExpr> _71617_slc = jule::new_ptr<_1c4a9adc1_SlicingExpr>(_1c4a9adc1_SlicingExpr{._field_Token=(*(_71533_errorToken)), ._field_End=_71557_end, ._field_Expr=_1a9b1455e_buildFromTokens(_self_, (*(_71436_exprTokens))), });;
	if (((*(_71463_start)).len() > 0LL)) {
		_71617_slc.get()._field_Start=_1a9b1455e_buildFromTokens(_self_, (*(_71463_start)));
	};
	if (((*(_71514_to)).len() > 0LL)) {
		_71617_slc.get()._field_To=_1a9b1455e_buildFromTokens(_self_, (*(_71514_to)));
	};
	return _71617_slc;;
}



inline jule::Any _1a9b13470_buildBracketRange(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _73040_tokens) {
	jule::Ptr<_2039861ab_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _73218_exprTokens;;
	jule::I32 _73230_rangeN = 0;;
	({
		__jule_tuple_sx_2039861ab_Token__jule_tuple_int __jule_assign_result = _1a9b15ab0_getRangeExprTokens(&(_73040_tokens));
		_73218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73218_exprTokens.len() == 0LL)) {
		return jule::Any(_1a9b1266c_buildSlice(_self_, _73040_tokens), &__jule_any_type101);;
	} else if ((_73230_rangeN > 0LL)) {
		_1a9b0a412_pushErr(_self_, _73117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_2039861ab_Token>> _74717_splitTokens = _73040_tokens.slice(1LL, (_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _74829_to;;
	({
		__jule_tuple_sx_2039861ab_Token__jule_tuple_sx_2039861ab_Token __jule_assign_result = _1a9b152c9_splitDelim(&(_74717_splitTokens), static_cast<jule::U32>(11LLU));
		_74818_start = __jule_assign_result.__jule_result_arg0;
		_74829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return jule::Any(_1a9b13162_buildSlicing(_self_, &(_73218_exprTokens), &(_74818_start), &(_74829_to), &(_73117_errorToken), _73040_tokens[(_73040_tokens.len() - 1LL)]), &__jule_any_type110);;
	};
	return jule::Any(_1a9b12abd_buildIndexing(_self_, _73218_exprTokens, _73040_tokens, _73117_errorToken), &__jule_any_type109);;
}



inline jule::Any _1a9b1377d_buildData(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _75533_tokens) {
	{
		auto _match_expr{ (*(_75533_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ad40edab:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ad40ee44:;
			{
				return _1a9b0b468_buildSingle(_self_, (*(_75533_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ad40eeaa:;
			{
				if (((*(_75533_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(30LLU))) {
					return jule::Any(_1a9b0b776_buildCppLinkedIdent(_self_, _75533_tokens), &__jule_any_type86);;
				};
			}
		}
		_match_end_1ad40ebad:;
	};
	jule::Ptr<_2039861ab_Token> _76717_token = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U32>(7LLU)) && _76717_token.get()._field_Kind.equal("...", 3))) {
		return jule::Any(_1a9b0cac9_buildVariadic(_self_, (*(_75533_tokens))), &__jule_any_type82);;
	};
	_76717_token=(*(_75533_tokens))[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1c231c15b:;
			{
				if ((((*(_75533_tokens)).len() > 1LL) && _76717_token.get()._field_Kind.equal("*", 1))) {
					_76717_token=(*(_75533_tokens))[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U32>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U32>(34LLU)))) {
						return jule::Any(_1a9b0c4ad_buildType(_self_, _75533_tokens), &__jule_any_type95);;
					};
				};
				return jule::Any(_1a9b0ba84_buildUnary(_self_, (*(_75533_tokens))), &__jule_any_type94);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1c23161aa:;
			{
				if (((*(_75533_tokens)).len() < 3LL)) {
					goto _match_end_1c46c4e3a;
				};
				if (((*(_75533_tokens)).len() > 3LL)) {
					jule::Ptr<_2039861ab_Token> _78921_t = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U32>(3LLU)) && _78921_t.get()._field_Kind.equal(")", 1))) {
						goto _match_end_1c46c4e3a;
					};
				};
				jule::Ptr<_2039861ab_Token> _79517_next = (*(_75533_tokens))[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_79517_next.get()._field_Kind.equal("]", 1)))) {
					goto _match_end_1c46c4e3a;
				};
				return jule::Any(_1a9b0c4ad_buildType(_self_, _75533_tokens), &__jule_any_type95);;
			}
		}
		_match_end_1c46c4e3a:;
	};
	_76717_token=(*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1c3614056:;
			{
				return _1a9b0c7bb_buildSubIdent(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1c46241a8:;
			{
				return jule::Any(_1a9b0c4ad_buildType(_self_, _75533_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1c46361ba:;
			{
				return _1a9b0cdd7_buildOpRight(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1c46389d6:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c23185b9:;
						{
							return _1a9b0e779_buildParenthesesRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1c23885d4:;
						{
							return _1a9b12051_buildBraceRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c2388b34:;
						{
							return _1a9b13470_buildBracketRange(_self_, (*(_75533_tokens)));;
						}
					}
					_match_end_1c22ea425:;
				};
			}
		}
		_match_end_1c2412042:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U32>(32LLU))) {
		return jule::Any(_1a9b0c4ad_buildType(_self_, _75533_tokens), &__jule_any_type95);;
	};
	_1a9b0a412_pushErr(_self_, _76717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a9b13b35_buildBinop(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _83134_tokens, jule::I32 _83152_i) {
	jule::Ptr<_2039861ab_Token> _83217_op = (*(_83134_tokens))[_83152_i];;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _83317_leftTokens = (*(_83134_tokens)).slice(0LL, _83152_i);;
	if ((_1a9b148b1_isTypeOp(&(_83217_op.get()._field_Kind)) && _1a9b14b9c_isTypeRange(&(_83317_leftTokens)))) {
		return jule::Any(_1a9b0c4ad_buildType(_self_, _83134_tokens), &__jule_any_type95);;
	};
	jule::Slice<jule::Ptr<_2039861ab_Token>> _83817_rightTokens = (*(_83134_tokens)).slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_1a9b0a412_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b0a731_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_1a9b0a412_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b0a731_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1c4a97230_BinopExpr>(_1c4a97230_BinopExpr{._field_Left=_1a9b1455e_buildFromTokens(_self_, _83317_leftTokens), ._field_Right=_1a9b1455e_buildFromTokens(_self_, _83817_rightTokens), ._field_Op=_83217_op}), &__jule_any_type115);;
}



inline jule::Any _1a9b13e43_build(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _85629_tokens) {
	jule::I32 _85713_i = _1a9b15571_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _1a9b1377d_buildData(_self_, _85629_tokens);;
	};
	return _1a9b13b35_buildBinop(_self_, _85629_tokens, _85713_i);;
}



inline jule::Any _1a9b14251_buildKind(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _86518_parts;;
	jule::Slice<_1c2220900_Log> _86525_errors;;
	({
		__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9b18a80_parts(_86433_tokens, static_cast<jule::U32>(8LLU), true);
		_86518_parts = __jule_assign_result.__jule_result_arg0;
		_86525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86525_errors != nullptr)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_86525_errors);
		return nullptr;;
	} else if ((_86518_parts.len() > 1LL)) {
		return jule::Any(_1a9b0aa3e_buildTuple(_self_, &(_86518_parts)), &__jule_any_type87);;
	};
	return _1a9b13e43_build(_self_, _86433_tokens);;
}



inline jule::Ptr<_1c4a93858_Expr> _1a9b1455e_buildFromTokens(_1a9b09b3c_exprBuilder* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c4a93858_Expr>(_1c4a93858_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_1a9b14251_buildKind(_self_, &(_87538_tokens))});;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9b09b3c_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9b16473_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1a9b1a0d1_stop(_1a9b19ca1_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a9b1a345_stopped(_1a9b19ca1_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a9b1a70d_pushErr(_1a9b19ca1_parser* _self_, jule::Ptr<_2039861ab_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1a9b19212_compilerErr(&(_28126_token), &(_28141_fmt), _28154_args));;
}



inline void _1a9b1aa2c_pushSuggestion(_1a9b19ca1_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_1a9b19641_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _28633_fmt, _28646_args);
	};
}



inline jule::Ptr<_1c4a93858_Expr> _1a9b1ad3a_buildExpr(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _29034_tokens) {
	jule::Ptr<_1a9b09b3c_exprBuilder> _29117_ep = jule::new_ptr<_1a9b09b3c_exprBuilder>(_1a9b09b3c_exprBuilder{._field_p=_self_});;
	jule::Ptr<_1c4a93858_Expr> _29417_expr = _1a9b1455e_buildFromTokens(_29117_ep.ptr(), (*(_29034_tokens)));;
	return _29417_expr;;
}



inline jule::Ptr<_1c4a5ad81_Directive> _1a9b1b148_buildDirective(_1a9b19ca1_parser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_1a9b1a70d_pushErr(_self_, _29837_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_1a9b1a70d_pushErr(_self_, _29837_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c4a5ad81_Directive>(_1c4a5ad81_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});;
}



inline void _1a9b1b3bd_pushDirective(_1a9b19ca1_parser* _self_, jule::Ptr<_1c4a5ad81_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c50a1074:;
		if (it != expr_end) {
			jule::Ptr<_1c4a5ad81_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1c50a1074:;
			++it;
			goto _iter_begin_1c50a1074;
		}
		_iter_end_1c50a1074:;
	};
	(*(_self_))._field_directives = jule::alloc_for_append((*(_self_))._field_directives,1);(*(_self_))._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_1c4a9e2c0_ScopeTree> _1a9b1b775_buildScope(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _32635_tokens, jule::Ptr<_2039861ab_Token> _32657_end) {
	jule::Ptr<_1c4a9e2c0_ScopeTree> _32717_s = _1a9aebc2d_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_1a9aed658_scopeParser _32917_sp = _1a9aed658_scopeParser{._field_p=_self_, };;
	_1a9b091e1_build(&_32917_sp, _32635_tokens, &(_32717_s));
	return _32717_s;;
}



inline __jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool _1a9b1bbc6__buildType(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _33642_tokens, jule::I32* _33713_i, jule::Bool _33722_err) {
	__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a9b2a9c6_typeBuilder _33817_tb = _1a9b2a9c6_typeBuilder{._field_p=_self_, ._field_tokens=(*(_33642_tokens)), ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_1c4a8e337_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok = false;;
	({
		__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b2dc71_build(&_33817_tb);
		_34418_decl = __jule_assign_result.__jule_result_arg0;
		_34424_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34418_decl;
	__jule_func_result.__jule_result_arg1 = _34424_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool _1a9b1c127_buildType(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _34941_tokens, jule::I32* _35013_i, jule::Bool _35022_err) {
	__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_2039861ab_Token> _35113_token = (*(_34941_tokens))[(*(_35013_i))];;
	jule::Ptr<_1c4a8e337_TypeDecl> _35218_t;;
	jule::Bool _35221_ok = false;;
	({
		__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1bbc6__buildType(_self_, _34941_tokens, _35013_i, _35022_err);
		_35218_t = __jule_assign_result.__jule_result_arg0;
		_35221_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_35022_err && (!(_35221_ok)))) {
		_1a9b1a70d_pushErr(_self_.ptr(), _35113_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35218_t;
	__jule_func_result.__jule_result_arg1 = _35221_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1c4aa5606_TypeAliasDecl> _1a9b1c435_buildTypeAliasDecl(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _35943_tokens) {
	jule::I32 _36017_i = 1LL;;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4aa5606_TypeAliasDecl> _36517_tad = jule::new_ptr<_1c4aa5606_TypeAliasDecl>(_1c4aa5606_TypeAliasDecl{._field_Token=(*(_35943_tokens))[1LL], ._field_Ident=(*(_35943_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_2039861ab_Token> _36917_token = (*(_35943_tokens))[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9b1a70d_pushErr(_self_.ptr(), _36917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	_36917_token=(*(_35943_tokens))[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U32>(11LLU))) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	(_36017_i)++;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	jule::Ptr<_1c4a8e337_TypeDecl> _39018_t;;
	jule::Bool _39021_ok = false;;
	({
		__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, _35943_tokens, (&(_36017_i)), true);
		_39018_t = __jule_assign_result.__jule_result_arg0;
		_39021_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < (*(_35943_tokens)).len()))) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_35943_tokens))[_36017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_1a9b2995e_isPub(&(_36517_tad.get()._field_Ident));
	return _36517_tad;;
}



inline void _1a9b1c754_buildVarTypeAndExpr(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Ptr<_1c4aa1c95_VarDecl>* _39944_v, jule::Slice<jule::Ptr<_2039861ab_Token>>* _39962_tokens) {
	jule::I32 _40017_i = 0LL;;
	jule::Ptr<_2039861ab_Token> _40117_tok = (*(_39962_tokens))[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U32>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= (*(_39962_tokens)).len()) || (((*(_39962_tokens))[_40017_i].get()._field_Id == static_cast<jule::U32>(7LLU)) && (*(_39962_tokens))[_40017_i].get()._field_Kind.equal("=", 1)))) {
			_1a9b1a70d_pushErr(_self_.ptr(), _40117_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1c4a8e337_TypeDecl> _40922_t;;
		jule::Bool _40925_ok = false;;
		({
			__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, _39962_tokens, (&(_40017_i)), true);
			_40922_t = __jule_assign_result.__jule_result_arg0;
			_40925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40925_ok) {
			(*(_39944_v)).get()._field_Kind=_40922_t;
			if ((_40017_i >= (*(_39962_tokens)).len())) {
				return;;
			};
			_40117_tok=(*(_39962_tokens))[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U32>(7LLU))) {
		if ((!_40117_tok.get()._field_Kind.equal("=", 1))) {
			_1a9b1a70d_pushErr(_self_.ptr(), _40117_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_2039861ab_Token>> _42421_exprTokens = (*(_39962_tokens)).slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_1a9b1a70d_pushErr(_self_.ptr(), _40117_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return;;
		};
		(*(_39944_v)).get()._field_Expr=_1a9b1ad3a_buildExpr(_self_, &(_42421_exprTokens));
	} else {
		_1a9b1a70d_pushErr(_self_.ptr(), _40117_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a9b1ca73_buildVarCommon(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Ptr<_1c4aa1c95_VarDecl>* _43539_v, jule::Slice<jule::Ptr<_2039861ab_Token>> _43556_tokens) {
	(*(_43539_v)).get()._field_Token=_43556_tokens[0LL];
	if (((*(_43539_v)).get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_43539_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_43539_v)).get()._field_Ident=(*(_43539_v)).get()._field_Token.get()._field_Kind;
	(*(_43539_v)).get()._field_Public=_1a9b2995e_isPub(&((*(_43539_v)).get()._field_Ident));
	(*(_43539_v)).get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_1a9b1c754_buildVarTypeAndExpr(_self_, _43539_v, &(_43556_tokens));
	};
}



inline void _1a9b1ce3b_buildVarBegin(_1a9b19ca1_parser* _self_, jule::Ptr<_1c4aa1c95_VarDecl>* _45137_v, jule::I32* _45155_i, jule::Slice<jule::Ptr<_2039861ab_Token>>* _45164_tokens) {
	jule::Ptr<_2039861ab_Token> _45213_tok = (*(_45164_tokens))[(*(_45155_i))];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1c50ba731:;
			{
				(*(_45137_v)).get()._field_Statically=true;
				goto _case_begin_1c50b9e5b;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1c50b9e5b:;
			{
				((*(_45155_i)))++;
				if (((*(_45155_i)) >= (*(_45164_tokens)).len())) {
					_1a9b1a70d_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_45164_tokens))[(*(_45155_i))].get()._field_Id == static_cast<jule::U32>(35LLU))) {
					(*(_45137_v)).get()._field_Mutable=true;
					((*(_45155_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1c50b9ec2:;
			{
				((*(_45155_i)))++;
				(*(_45137_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1c50b9da1:;
			{
				_1a9b1a70d_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c50b9c2a:;
	};
	if (((*(_45155_i)) >= (*(_45164_tokens)).len())) {
		_1a9b1a70d_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c4aa1c95_VarDecl> _1a9b1d249_buildVar(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _48132_tokens) {
	jule::I32 _48217_i = 0LL;;
	jule::Ptr<_1c4aa1c95_VarDecl> _48317_v = jule::new_ptr<_1c4aa1c95_VarDecl>(_1c4aa1c95_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_1a9b1ce3b_buildVarBegin(_self_.ptr(), &(_48317_v), &(_48217_i), &(_48132_tokens));
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U32>(7LLU)) && _48132_tokens[0LL].get()._field_Kind.equal("&", 1))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_1a9b1ca73_buildVarCommon(_self_, &(_48317_v), _48132_tokens);
	return _48317_v;;
}



inline jule::Ptr<_1c4a9b630_GenericDecl> _1a9b1d557_buildGeneric(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _50337_tokens) {
	jule::Ptr<_1c4a9b630_GenericDecl> _50417_g = jule::new_ptr<_1c4a9b630_GenericDecl>(_1c4a9b630_GenericDecl{._field_Token=(*(_50337_tokens))[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9b1a70d_pushErr(_self_.ptr(), _50417_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if (((*(_50337_tokens)).len() > 1LL)) {
		if (((*(_50337_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(11LLU))) {
			_1a9b1a70d_pushErr(_self_.ptr(), (*(_50337_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_50337_tokens)).len() == 2LL)) {
			_1a9b1a70d_pushErr(_self_.ptr(), (*(_50337_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_2039861ab_Token>> _52121_constraintTokens = (*(_50337_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _52222_parts;;
		jule::Slice<_1c2220900_Log> _52229_errors;;
		({
			__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9b18695_partsKind(&(_52121_constraintTokens), jule::Str("|", 1), true);
			_52222_parts = __jule_assign_result.__jule_result_arg0;
			_52229_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_1c4a9b1ac_Constraint>(_1c4a9b1ac_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>::alloc(0LL, _52222_parts.len())});
		{
			auto expr = &(_52222_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c50c6918:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_2039861ab_Token>> _52825_part = *it;
				{
					jule::I32 _52925_i = 0LL;;
					jule::Ptr<_1c4a8e337_TypeDecl> _53026_kind;;
					({
						__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, &(_52825_part), (&(_52925_i)), true);
						_53026_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_1a9b1a70d_pushErr(_self_.ptr(), _52825_part[_52925_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1c50c6918:;
				++it;
				goto _iter_begin_1c50c6918;
			}
			_iter_end_1c50c6918:;
		};
	};
	return _50417_g;;
}



inline jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>> _1a9b1d90e_buildGenerics(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _54038_tokens, jule::Ptr<_2039861ab_Token>* _54057_errorToken) {
	if (((*(_54038_tokens)).len() == 0LL)) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_54057_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _54618_parts;;
	jule::Slice<_1c2220900_Log> _54625_errors;;
	({
		__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9b18a80_parts(_54038_tokens, static_cast<jule::U32>(8LLU), true);
		_54618_parts = __jule_assign_result.__jule_result_arg0;
		_54625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>>::alloc(0LL, _54618_parts.len());;
	{
		auto expr = &(_54618_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c50cb5cc:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_1a9b1d557_buildGeneric(_self_, &(_55321_part)));;
			}
			_iter_next_1c50cb5cc:;
			++it;
			goto _iter_begin_1c50cb5cc;
		}
		_iter_end_1c50cb5cc:;
	};
	return _55217_generics;;
}



inline jule::Ptr<_1c4a9e996_ParamDecl> _1a9b1dc1c_buildSelfParam(_1a9b19ca1_parser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1c4a9e996_ParamDecl> _56517_param = jule::new_ptr<_1c4a9e996_ParamDecl>();;
	jule::I32 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U32>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1a9b1a70d_pushErr(_self_, _56037_tokens[(_56817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (_56037_tokens[_56817_i].get()._field_Kind.equal("&", 1)) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1a9b1a70d_pushErr(_self_, _56037_tokens[(_56817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U32>(27LLU))) {
		(_56517_param.get()._field_Ident).append("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_1a9b1a70d_pushErr(_self_, _56037_tokens[_56817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _56517_param;;
}



inline void _1a9b1e0d5_paramTypeBegin(_1a9b19ca1_parser* _self_, jule::Ptr<_1c4a9e996_ParamDecl>* _59938_param, jule::I32* _59962_i, jule::Slice<jule::Ptr<_2039861ab_Token>>* _59971_tokens) {
	for (; ((*(_59962_i)) < (*(_59971_tokens)).len()); ((*(_59962_i)))++) {
		{
			jule::Ptr<_2039861ab_Token> _60117_token = (*(_59971_tokens))[(*(_59962_i))];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U32>(7LLU))) {
				return;;
			} else if ((!_60117_token.get()._field_Kind.equal("...", 3))) {
				return;;
			};
			if ((*(_59938_param)).get()._field_Variadic) {
				_1a9b1a70d_pushErr(_self_, _60117_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1c50d34c4;
			};
			(*(_59938_param)).get()._field_Variadic=true;
		}
	_iter_next_1c50d34c4:;
	}
	_iter_end_1c50d34c4:;;
}



inline void _1a9b1e404_buildParamType(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Ptr<_1c4a9e996_ParamDecl>* _61639_param, jule::Slice<jule::Ptr<_2039861ab_Token>>* _61663_tokens) {
	jule::I32 _61717_i = 0LL;;
	_1a9b1e0d5_paramTypeBegin(_self_.ptr(), _61639_param, &(_61717_i), _61663_tokens);
	if ((_61717_i >= (*(_61663_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, _61663_tokens, (&(_61717_i)), true);
		(*(_61639_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61717_i < (*(_61663_tokens)).len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_61663_tokens))[_61717_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a9b1e723_buildParamBody(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Ptr<_1c4a9e996_ParamDecl>* _62939_param, jule::Slice<jule::Ptr<_2039861ab_Token>> _62962_tokens) {
	jule::Ptr<_2039861ab_Token> _63017_tok = _62962_tokens[0LL];;
	if ((_62962_tokens.len() == 1LL)) {
		(*(_62939_param)).get()._field_Ident=_63017_tok.get()._field_Kind;
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_1a9b1a70d_pushErr(_self_.ptr(), _63017_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U32>(11LLU))) {
		(*(_62939_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_1a9b1e404_buildParamType(_self_, _62939_param, &(_62962_tokens));
		return;;
	};
	(*(_62939_param)).get()._field_Ident=_63017_tok.get()._field_Kind;
	_62962_tokens=_62962_tokens.slice(2LL);
	_1a9b1e404_buildParamType(_self_, _62939_param, &(_62962_tokens));
}



inline jule::Ptr<_1c4a9e996_ParamDecl> _1a9b1ea31_buildParam(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _64934_tokens) {
	jule::Ptr<_1c4a9e996_ParamDecl> _65017_param = jule::new_ptr<_1c4a9e996_ParamDecl>(_1c4a9e996_ParamDecl{._field_Token=_64934_tokens[0LL], });;
	if ((_65017_param.get()._field_Token.get()._field_Id == static_cast<jule::U32>(35LLU))) {
		_65017_param.get()._field_Mutable=true;
		if ((_64934_tokens.len() == 1LL)) {
			_1a9b1a70d_pushErr(_self_.ptr(), _64934_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64934_tokens=_64934_tokens.slice(1LL);
		_65017_param.get()._field_Token=_64934_tokens[0LL];
	};
	if ((_64934_tokens.len() >= 3LL)) {
		if (((_65017_param.get()._field_Token.get()._field_Id == static_cast<jule::U32>(7LLU)) && _65017_param.get()._field_Token.get()._field_Kind.equal("&", 1))) {
			if ((_64934_tokens.len() == 1LL)) {
				_1a9b1a70d_pushErr(_self_.ptr(), _64934_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64934_tokens[1LL].get()._field_Id == static_cast<jule::U32>(2LLU)) && (_64934_tokens[2LL].get()._field_Id == static_cast<jule::U32>(11LLU)))) {
				_65017_param.get()._field_Reference=true;
				_64934_tokens=_64934_tokens.slice(1LL);
				_65017_param.get()._field_Token=_64934_tokens[0LL];
			};
		};
	};
	if ((_65017_param.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_65017_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1a9b1e404_buildParamType(_self_, &(_65017_param), &(_64934_tokens));
	} else {
		_1a9b1e723_buildParamBody(_self_, &(_65017_param), _64934_tokens);
	};
	return _65017_param;;
}



inline void _1a9b1eca6_checkParams(_1a9b19ca1_parser* _self_, jule::Slice<jule::Ptr<_1c4a9e996_ParamDecl>>* _69235_params) {
	{
		auto expr = _69235_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c50e2abb:;
		if (it != expr_end) {
			jule::Ptr<_1c4a9e996_ParamDecl> _69321_param = *it;
			{
				if ((_1c4a9ed09_IsSelf(_69321_param.ptr()) || (_69321_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1c50e2abb;
				};
				if ((_69321_param.get()._field_Token == nullptr)) {
					_1a9b1a70d_pushErr(_self_, _69321_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_69321_param.get()._field_Kind=jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_69321_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1c4a8e8ed_IdentTypeDecl>(_1c4a8e8ed_IdentTypeDecl{._field_Token=_69321_param.get()._field_Token, ._field_Ident=_69321_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type19)});
					_69321_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1c50e2abb:;
			++it;
			goto _iter_begin_1c50e2abb;
		}
		_iter_end_1c50e2abb:;
	};
}



inline jule::Slice<jule::Ptr<_1c4a9e996_ParamDecl>> _1a9b2015d_buildParams(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _71236_tokens, jule::Bool _71254_method) {
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _71318_parts;;
	jule::Slice<_1c2220900_Log> _71325_errs;;
	({
		__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9b18a80_parts(_71236_tokens, static_cast<jule::U32>(8LLU), true);
		_71318_parts = __jule_assign_result.__jule_result_arg0;
		_71325_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71325_errs);
	if ((_71318_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c4a9e996_ParamDecl>> _71917_params = nullptr;;
	if ((_71254_method && (_71318_parts.len() > 0LL))) {
		jule::Ptr<_1c4a9e996_ParamDecl> _72121_param = _1a9b1dc1c_buildSelfParam(_self_.ptr(), _71318_parts[0LL]);;
		if (((_72121_param != nullptr) && _1c4a9ed09_IsSelf(_72121_param.ptr()))) {
			_71917_params = jule::alloc_for_append(_71917_params,1);_71917_params.__push(_72121_param);;
			_71318_parts=_71318_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_71318_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c50e721e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _72821_part = *it;
			{
				jule::Ptr<_1c4a9e996_ParamDecl> _72921_param = _1a9b1ea31_buildParam(_self_, _72821_part);;
				if ((_72921_param != nullptr)) {
					_71917_params = jule::alloc_for_append(_71917_params,1);_71917_params.__push(_72921_param);;
				};
			}
			_iter_next_1c50e721e:;
			++it;
			goto _iter_begin_1c50e721e;
		}
		_iter_end_1c50e721e:;
	};
	_1a9b1eca6_checkParams(_self_.ptr(), &(_71917_params));
	return _71917_params;;
}



inline __jule_tuple_x_1c4a9244a_RetTypeDecl__jule_tuple_bool _1a9b20515_buildMultiRetType(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _73942_tokens, jule::I32* _73965_i) {
	__jule_tuple_x_1c4a9244a_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1c4a9244a_RetTypeDecl>();
	((*(_73965_i)))++;
	if (((*(_73965_i)) >= (*(_73942_tokens)).len())) {
		((*(_73965_i)))--;
		({
			__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, _73942_tokens, (&((*(_73965_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_73965_i)))--;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _74917_rangeTokens = _1a9b18013_range(_73965_i, jule::Str("(", 1), jule::Str(")", 1), _73942_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _75118_parts;;
	jule::Slice<_1c2220900_Log> _75125_errs;;
	({
		__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9b18a80_parts(&(_74917_rangeTokens), static_cast<jule::U32>(8LLU), true);
		_75118_parts = __jule_assign_result.__jule_result_arg0;
		_75125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75125_errs);
	if ((_75118_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _75717_types = jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>::alloc(0LL, _75118_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_2039861ab_Token>>::alloc(0LL, _75118_parts.len());
	{
		auto expr = &(_75118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c50ed4bc:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _75921_part = *it;
			{
				jule::Ptr<_2039861ab_Token> _76021_token = _75921_part[0LL];;
				jule::I32 _76121_offset = 0LL;;
				if ((_75921_part.len() > 1LL)) {
					_76021_token=_75921_part[1LL];
					if ((_76021_token.get()._field_Id == static_cast<jule::U32>(11LLU))) {
						_76121_offset=2LL;
						if ((_75921_part.len() < 3LL)) {
							_1a9b1a70d_pushErr(_self_.ptr(), _76021_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1c50ed4bc;
						};
					};
				};
				_76021_token=_75921_part[0LL];
				if ((_76121_offset != 2LL)) {
					jule::Ptr<_2039861ab_Token> _77725_newToken = jule::new_ptr<_2039861ab_Token>((*(_76021_token)));;
					_77725_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77725_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_76021_token);;
				};
				jule::Ptr<_1c4a8e337_TypeDecl> _78422_tk;;
				({
					__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, &(_75921_part), (&(_76121_offset)), true);
					_78422_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_76121_offset < _75921_part.len())) {
					_1a9b1a70d_pushErr(_self_.ptr(), _75921_part[_76121_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_75717_types = jule::alloc_for_append(_75717_types,1);_75717_types.__push(_78422_tk);;
			}
			_iter_next_1c50ed4bc:;
			++it;
			goto _iter_begin_1c50ed4bc;
		}
		_iter_end_1c50ed4bc:;
	};
	if ((_75717_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=(*(_73942_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1c4a90dc7_TupleTypeDecl>(_1c4a90dc7_TupleTypeDecl{._field_Types=_75717_types}), &__jule_any_type81)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75717_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c4a9244a_RetTypeDecl__jule_tuple_bool _1a9b208bc_buildRetType(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _80737_tokens, jule::I32* _80760_i) {
	__jule_tuple_x_1c4a9244a_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1c4a9244a_RetTypeDecl>();
	if (((*(_80760_i)) >= (*(_80737_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_2039861ab_Token> _81317_token = (*(_80737_tokens))[(*(_80760_i))];;
	{
		auto &_match_expr{ _81317_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1c5106a9c:;
			{
				if (_81317_token.get()._field_Kind.equal("{", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1c5106b13:;
			{
				if (_81317_token.get()._field_Kind.equal("=", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1c5106b79:;
			{
				if ((((*(_80760_i)) + 1LL) >= (*(_80737_tokens)).len())) {
					_1a9b1a70d_pushErr(_self_.ptr(), _81317_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_80760_i)))++;
				_81317_token=(*(_80737_tokens))[(*(_80760_i))];
				if ((_81317_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _81317_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1c51094a6:;
							{
								({
									__jule_tuple_x_1c4a9244a_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a9b20515_buildMultiRetType(_self_, _80737_tokens, _80760_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1c510951c:;
							{
								_1a9b1a70d_pushErr(_self_.ptr(), _81317_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_1c51093eb:;
					};
				};
				({
					__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, _80737_tokens, (&((*(_80760_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1c510699d:;
	};
	((*(_80760_i)))++;
	_1a9b1a70d_pushErr(_self_.ptr(), _81317_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1c4aa0cb6_FnDecl> _1a9b20d1d_buildFnPrototype(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _85241_tokens, jule::I32* _85264_i, jule::Bool _85272_method) {
	jule::Ptr<_1c4aa0cb6_FnDecl> _85317_f = jule::new_ptr<_1c4aa0cb6_FnDecl>(_1c4aa0cb6_FnDecl{._field_Token=(*(_85241_tokens))[(*(_85264_i))], });;
	if ((_85317_f.get()._field_Token.get()._field_Id == static_cast<jule::U32>(37LLU))) {
		_85317_f.get()._field_Statically=true;
		((*(_85264_i)))++;
		if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
			_1a9b1a70d_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85317_f.get()._field_Token=(*(_85241_tokens))[(*(_85264_i))];
	};
	if ((_85317_f.get()._field_Token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		_85317_f.get()._field_Unsafety=true;
		((*(_85264_i)))++;
		if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
			_1a9b1a70d_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85317_f.get()._field_Token=(*(_85241_tokens))[(*(_85264_i))];
	};
	((*(_85264_i)))++;
	if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2039861ab_Token> _88613_tok = (*(_85241_tokens))[(*(_85264_i))];;
	if ((_88613_tok.get()._field_Id == static_cast<jule::U32>(2LLU))) {
		((*(_85264_i)))++;
		if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
			_1a9b1a70d_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85317_f.get()._field_Ident=_88613_tok.get()._field_Kind;
	} else {
		_85317_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_2039861ab_Token> _89813_errorToken = (*(_85241_tokens))[(*(_85264_i))];;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _89917_genericsTokens = _1a9b18013_range(_85264_i, jule::Str("[", 1), jule::Str("]", 1), _85241_tokens);;
	if ((_89917_genericsTokens != nullptr)) {
		_85317_f.get()._field_Generics=_1a9b1d90e_buildGenerics(_self_, &(_89917_genericsTokens), &(_89813_errorToken));
	};
	if ((!(*(_85241_tokens))[(*(_85264_i))].get()._field_Kind.equal("(", 1))) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_85241_tokens))[(*(_85264_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2039861ab_Token>> _90917_paramsToks = _1a9b18013_range(_85264_i, jule::Str("(", 1), jule::Str(")", 1), _85241_tokens);;
	if ((_90917_paramsToks.len() > 0LL)) {
		_85317_f.get()._field_Params=_1a9b2015d_buildParams(_self_, &(_90917_paramsToks), _85272_method);
	};
	if (((*(_85264_i)) < (*(_85241_tokens)).len())) {
		jule::Ptr<_2039861ab_Token> _91517_token = (*(_85241_tokens))[(*(_85264_i))];;
		if (((_91517_token.get()._field_Id == static_cast<jule::U32>(7LLU)) && _91517_token.get()._field_Kind.equal("!", 1))) {
			_85317_f.get()._field_Exceptional=true;
			((*(_85264_i)))++;
		};
	};
	_85317_f.get()._field_Public=_1a9b2995e_isPub(&(_85317_f.get()._field_Ident));
	({
		__jule_tuple_x_1c4a9244a_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a9b208bc_buildRetType(_self_, _85241_tokens, _85264_i);
		_85317_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85317_f;;
}



inline jule::Ptr<_1c4aa0cb6_FnDecl> _1a9b2126e_buildFn(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _92932_tokens, jule::Bool _92950_method, jule::Bool _92964_prototype) {
	jule::I32 _93017_i = 0LL;;
	jule::Ptr<_1c4aa0cb6_FnDecl> _93117_f = _1a9b20d1d_buildFnPrototype(_self_, _92932_tokens, &(_93017_i), _92950_method);;
	if (_92964_prototype) {
		if ((_93017_i < (*(_92932_tokens)).len())) {
			_1a9b1a70d_pushErr(_self_.ptr(), (*(_92932_tokens))[(_93017_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _93117_f;;
	} else if ((_93117_f == nullptr)) {
		return _93117_f;;
	};
	if ((_93017_i >= (*(_92932_tokens)).len())) {
		_1a9b1a0d1_stop(_self_.ptr());
		_1a9b1a70d_pushErr(_self_.ptr(), _93117_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2039861ab_Token>> _94717_blockTokens = _1a9b18013_range(&(_93017_i), jule::Str("{", 1), jule::Str("}", 1), _92932_tokens);;
	if ((_94717_blockTokens != nullptr)) {
		_93117_f.get()._field_Scope=_1a9b1b775_buildScope(_self_, &(_94717_blockTokens), (*(_92932_tokens))[(_93017_i - 1LL)]);
		_93117_f.get()._field_Scope.get()._field_Unsafety=_93117_f.get()._field_Unsafety;
		if ((_93017_i < (*(_92932_tokens)).len())) {
			_1a9b1a70d_pushErr(_self_.ptr(), (*(_92932_tokens))[_93017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1a9b1a0d1_stop(_self_.ptr());
		_1a9b1a70d_pushErr(_self_.ptr(), _93117_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _93117_f;;
}



inline jule::Slice<jule::Ptr<_2039861ab_Token>> _1a9b2157c_getUseDeclSelectors(_1a9b19ca1_parser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _96342_tokens) {
	jule::I32 _96417_i = 0LL;;
	_96342_tokens=_1a9b18013_range(&(_96417_i), jule::Str("{", 1), jule::Str("}", 1), &(_96342_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _96618_parts;;
	jule::Slice<_1c2220900_Log> _96625_errs;;
	({
		__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9b18a80_parts(&(_96342_tokens), static_cast<jule::U32>(8LLU), true);
		_96618_parts = __jule_assign_result.__jule_result_arg0;
		_96625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96625_errs.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_96625_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2039861ab_Token>> _97217_selectors = jule::Slice<jule::Ptr<_2039861ab_Token>>::alloc(0LL, _96618_parts.len());;
	{
		auto expr = &(_96618_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c51203ac:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _97321_part = *it;
			{
				if ((_97321_part.len() > 1LL)) {
					_1a9b1a70d_pushErr(_self_, _97321_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_2039861ab_Token> _97721_tok = _97321_part[0LL];;
				if (((_97721_tok.get()._field_Id != static_cast<jule::U32>(2LLU)) && (_97721_tok.get()._field_Id != static_cast<jule::U32>(27LLU)))) {
					_1a9b1a70d_pushErr(_self_, _97721_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a9b1aa2c_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1c51203ac;
				};
				_97217_selectors = jule::alloc_for_append(_97217_selectors,1);_97217_selectors.__push(_97721_tok);;
			}
			_iter_next_1c51203ac:;
			++it;
			goto _iter_begin_1c51203ac;
		}
		_iter_end_1c51203ac:;
	};
	return _97217_selectors;;
}



inline void _1a9b2189b_buildCppUseDecl(_1a9b19ca1_parser* _self_, jule::Ptr<_1c4aa69e2_UseDecl>* _98839_decl, jule::Slice<jule::Ptr<_2039861ab_Token>>* _98856_tokens) {
	if (((*(_98856_tokens)).len() > 1LL)) {
		_1a9b1a70d_pushErr(_self_, (*(_98856_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2039861ab_Token> _99213_token = (*(_98856_tokens))[0LL];;
	if (((_99213_token.get()._field_Id != static_cast<jule::U32>(6LLU)) || ((_99213_token.get()._field_Kind[0LL] != '`') && (_99213_token.get()._field_Kind[0LL] != '\"')))) {
		_1a9b1a70d_pushErr(_self_, _99213_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_98839_decl)).get()._field_CppLinked=true;
	(*(_98839_decl)).get()._field_LinkPath=_99213_token.get()._field_Kind.slice(1LL, (_99213_token.get()._field_Kind.len() - 1LL));
}



inline void _1a9b21bba_buildStdUseDecl(_1a9b19ca1_parser* _self_, jule::Ptr<_1c4aa69e2_UseDecl>* _100139_decl, jule::Slice<jule::Ptr<_2039861ab_Token>> _100159_tokens) {
	(*(_100139_decl)).get()._field_Std=true;
	jule::Ptr<_2039861ab_Token> _100417_token = _100159_tokens[0LL];;
	if ((_100159_tokens.len() < 3LL)) {
		_1a9b1a70d_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_100159_tokens=_100159_tokens.slice(2LL);
	_100417_token=_100159_tokens[(_100159_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1c5128a03:;
			{
				_1a9b1a70d_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1c5128a7a:;
			{
				if ((!_100417_token.get()._field_Kind.equal("}", 1))) {
					_1a9b1a70d_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_2039861ab_Token>> _102121_selectors = nullptr;;
				({
					__jule_tuple_sx_2039861ab_Token__jule_tuple_sx_2039861ab_Token __jule_assign_result = _1a9b182aa_rangeLast(&(_100159_tokens));
					_100159_tokens = __jule_assign_result.__jule_result_arg0;
					_102121_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_100139_decl)).get()._field_Selected=_1a9b2157c_getUseDeclSelectors(_self_, _102121_selectors);
				if ((_100159_tokens.len() == 0LL)) {
					_1a9b1a70d_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100417_token=_100159_tokens[(_100159_tokens.len() - 1LL)];
				if ((_100417_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_1a9b1a70d_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100159_tokens=_100159_tokens.slice(0LL, (_100159_tokens.len() - 1LL));
				if ((_100159_tokens.len() == 0LL)) {
					_1a9b1a70d_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1c5128b02:;
			{
				if ((!_100417_token.get()._field_Kind.equal("*", 1))) {
					_1a9b1a70d_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100159_tokens=_100159_tokens.slice(0LL, (_100159_tokens.len() - 1LL));
				if ((_100159_tokens.len() == 0LL)) {
					_1a9b1a70d_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100417_token=_100159_tokens[(_100159_tokens.len() - 1LL)];
				if ((_100417_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_1a9b1a70d_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100159_tokens=_100159_tokens.slice(0LL, (_100159_tokens.len() - 1LL));
				if ((_100159_tokens.len() == 0LL)) {
					_1a9b1a70d_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_100139_decl)).get()._field_Full=true;
			}
		}
		_match_end_1c512897b:;
	};
	(*(_100139_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1a9b198d8_tokstoa(&(_100159_tokens)));
}



inline void _1a9b21ed9_buildIdentUseDecl(_1a9b19ca1_parser* _self_, jule::Ptr<_1c4aa69e2_UseDecl>* _106341_decl, jule::Slice<jule::Ptr<_2039861ab_Token>> _106361_tokens) {
	(*(_106341_decl)).get()._field_Std=false;
	jule::Ptr<_2039861ab_Token> _106617_token = _106361_tokens[(_106361_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1c51330e5:;
			{
				_1a9b1a70d_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1c51336bc:;
			{
				if ((!_106617_token.get()._field_Kind.equal("}", 1))) {
					_1a9b1a70d_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_2039861ab_Token>> _107721_selectors = nullptr;;
				({
					__jule_tuple_sx_2039861ab_Token__jule_tuple_sx_2039861ab_Token __jule_assign_result = _1a9b182aa_rangeLast(&(_106361_tokens));
					_106361_tokens = __jule_assign_result.__jule_result_arg0;
					_107721_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_106341_decl)).get()._field_Selected=_1a9b2157c_getUseDeclSelectors(_self_, _107721_selectors);
				if ((_106361_tokens.len() == 0LL)) {
					_1a9b1a70d_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106617_token=_106361_tokens[(_106361_tokens.len() - 1LL)];
				if ((_106617_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_1a9b1a70d_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106361_tokens=_106361_tokens.slice(0LL, (_106361_tokens.len() - 1LL));
				if ((_106361_tokens.len() == 0LL)) {
					_1a9b1a70d_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1c5133865:;
			{
				if ((!_106617_token.get()._field_Kind.equal("*", 1))) {
					_1a9b1a70d_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106361_tokens=_106361_tokens.slice(0LL, (_106361_tokens.len() - 1LL));
				if ((_106361_tokens.len() == 0LL)) {
					_1a9b1a70d_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106617_token=_106361_tokens[(_106361_tokens.len() - 1LL)];
				if ((_106617_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
					_1a9b1a70d_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106361_tokens=_106361_tokens.slice(0LL, (_106361_tokens.len() - 1LL));
				if ((_106361_tokens.len() == 0LL)) {
					_1a9b1a70d_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_106341_decl)).get()._field_Full=true;
			}
		}
		_match_end_1c5133667:;
	};
	(*(_106341_decl)).get()._field_LinkPath=_1a9b198d8_tokstoa(&(_106361_tokens));
}



inline void _1a9b22308_parseUseDecl(_1a9b19ca1_parser* _self_, jule::Ptr<_1c4aa69e2_UseDecl>* _112636_decl, jule::Slice<jule::Ptr<_2039861ab_Token>> _112656_tokens) {
	if ((*(_112636_decl)).get()._field_CppLinked) {
		_1a9b2189b_buildCppUseDecl(_self_, _112636_decl, &(_112656_tokens));
		return;;
	};
	jule::Ptr<_2039861ab_Token> _113217_token = _112656_tokens[0LL];;
	if ((_113217_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9b1a70d_pushErr(_self_, _113217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_112656_tokens.len() > 2LL) && (_112656_tokens[1LL].get()._field_Id == static_cast<jule::U32>(12LLU)))) {
		(*(_112636_decl)).get()._field_Alias=_113217_token.get()._field_Kind;
		if ((_112656_tokens[2LL].get()._field_Id != static_cast<jule::U32>(2LLU))) {
			_1a9b1a70d_pushErr(_self_, _113217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a9b1aa2c_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_112656_tokens=_112656_tokens.slice(2LL);
		_113217_token=_112656_tokens[0LL];
	};
	;
	{
		
		if (_113217_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_1c513e970:;
			{
				_1a9b21bba_buildStdUseDecl(_self_, _112636_decl, _112656_tokens);
			}
		}
		else {
			_case_begin_1c5141a3d:;
			{
				_1a9b21ed9_buildIdentUseDecl(_self_, _112636_decl, _112656_tokens);
			}
		}
		_match_end_1c51419c7:;
	};
}



inline jule::Ptr<_1c4aa69e2_UseDecl> _1a9b226b0_buildUseDecl(_1a9b19ca1_parser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _116035_tokens, jule::Bool _116053_cpp_linked) {
	jule::Ptr<_1c4aa69e2_UseDecl> _116117_decl = jule::new_ptr<_1c4aa69e2_UseDecl>(_1c4aa69e2_UseDecl{._field_Token=_116035_tokens[0LL], ._field_CppLinked=_116053_cpp_linked, });;
	if ((_116035_tokens.len() < 2LL)) {
		_1a9b1a70d_pushErr(_self_, _116117_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_116035_tokens=_116035_tokens.slice(1LL);
	_1a9b22308_parseUseDecl(_self_, &(_116117_decl), _116035_tokens);
	return _116117_decl;;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b22a67_buildTypeEnumItemKind(jule::Ptr<_1a9b19ca1_parser> _self_, jule::I32* _117446_i, jule::Slice<jule::Ptr<_2039861ab_Token>>* _117459_tokens) {
	jule::I32 _117517_braceN = 0LL;;
	jule::I32 _117613_exprStart = (*(_117446_i));;
	for (; ((*(_117446_i)) < (*(_117459_tokens)).len()); ((*(_117446_i)))++) {
		{
			jule::Ptr<_2039861ab_Token> _117817_t = (*(_117459_tokens))[(*(_117446_i))];;
			if ((_117817_t.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _117817_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1c5146b20:;
						{
							(_117517_braceN)++;
							goto _iter_next_1c514568a;
						}
					}
					else {
						_case_begin_1c5146724:;
						{
							(_117517_braceN)--;
						}
					}
					_match_end_1c5146515:;
				};
			};
			if ((_117517_braceN > 0LL)) {
				goto _iter_next_1c514568a;
			};
			if (((_117817_t.get()._field_Id == static_cast<jule::U32>(8LLU)) || (((*(_117446_i)) + 1LL) >= (*(_117459_tokens)).len()))) {
				jule::Slice<jule::Ptr<_2039861ab_Token>> _119425_kindTokens = nullptr;;
				if ((_117817_t.get()._field_Id == static_cast<jule::U32>(8LLU))) {
					_119425_kindTokens=(*(_117459_tokens)).slice(_117613_exprStart, (*(_117446_i)));
				} else {
					_119425_kindTokens=(*(_117459_tokens)).slice(_117613_exprStart);
				};
				jule::I32 _120025_j = 0LL;;
				jule::Ptr<_1c4a8e337_TypeDecl> _120126_kind;;
				({
					__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, &(_119425_kindTokens), (&(_120025_j)), true);
					_120126_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_120025_j < _119425_kindTokens.len())) {
					_1a9b1a70d_pushErr(_self_.ptr(), _119425_kindTokens[_120025_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _120126_kind;;
			};
		}
	_iter_next_1c514568a:;
	}
	_iter_end_1c514568a:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1c4aa8494_TypeEnumItemDecl>> _1a9b22d75_buildTypeEnumItems(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _121143_tokens) {
	jule::Slice<jule::Ptr<_1c4aa8494_TypeEnumItemDecl>> _121217_items = jule::Slice<jule::Ptr<_1c4aa8494_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _121317_i = 0LL;;
	for (; (_121317_i < (*(_121143_tokens)).len()); (_121317_i)++) {
		{
			jule::Ptr<_2039861ab_Token> _121521_t = (*(_121143_tokens))[_121317_i];;
			jule::Ptr<_1c4aa8494_TypeEnumItemDecl> _121621_item = jule::new_ptr<_1c4aa8494_TypeEnumItemDecl>();;
			_121621_item.get()._field_Token=_121521_t;
			if (((_121621_item.get()._field_Token.get()._field_Id == static_cast<jule::U32>(2LLU)) && (((*(_121143_tokens)).len() - _121317_i) > 2LL))) {
				_121621_item.get()._field_Ident=_121621_item.get()._field_Token.get()._field_Kind;
				_121521_t=(*(_121143_tokens))[(_121317_i + 1LL)];
				if ((_121521_t.get()._field_Id == static_cast<jule::U32>(11LLU))) {
					_121317_i+=2LL;
					if (((_121317_i >= (*(_121143_tokens)).len()) || ((*(_121143_tokens))[_121317_i].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
						_1a9b1a70d_pushErr(_self_.ptr(), _121521_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1c514b3e9;
					};
				};
			};
			_121621_item.get()._field_Kind=_1a9b22a67_buildTypeEnumItemKind(_self_, &(_121317_i), _121143_tokens);
			_121217_items = jule::alloc_for_append(_121217_items,1);_121217_items.__push(_121621_item);;
		}
	_iter_next_1c514b3e9:;
	}
	_iter_end_1c514b3e9:;;
	return _121217_items;;
}



inline jule::Ptr<_1c4aa8a9e_TypeEnumDecl> _1a9b23183_buildTypeEnumDecl(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _123542_tokens) {
	jule::I32 _123617_i = 1LL;;
	jule::Ptr<_1c4aa8a9e_TypeEnumDecl> _123717_e = jule::new_ptr<_1c4aa8a9e_TypeEnumDecl>(_1c4aa8a9e_TypeEnumDecl{._field_Token=(*(_123542_tokens))[_123617_i], });;
	if ((_123717_e.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9b1a70d_pushErr(_self_.ptr(), _123717_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_123717_e.get()._field_Ident=_123717_e.get()._field_Token.get()._field_Kind;
	_123617_i+=3LL;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _124717_itemTokens = _1a9b18013_range(&(_123617_i), jule::Str("{", 1), jule::Str("}", 1), _123542_tokens);;
	if ((_124717_itemTokens == nullptr)) {
		_1a9b1a0d1_stop(_self_.ptr());
		_1a9b1a70d_pushErr(_self_.ptr(), _123717_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _123717_e;;
	} else if ((_123617_i < (*(_123542_tokens)).len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_123542_tokens))[_123617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_123717_e.get()._field_Public=_1a9b2995e_isPub(&(_123717_e.get()._field_Ident));
	_123717_e.get()._field_End=(*(_123542_tokens))[(_123617_i - 1LL)];
	_123717_e.get()._field_Items=_1a9b22d75_buildTypeEnumItems(_self_, &(_124717_itemTokens));
	return _123717_e;;
}



inline jule::Ptr<_1c4a93858_Expr> _1a9b2353a_buildEnumItemExpr(jule::Ptr<_1a9b19ca1_parser> _self_, jule::I32* _126242_i, jule::Slice<jule::Ptr<_2039861ab_Token>>* _126255_tokens) {
	jule::I32 _126317_braceN = 0LL;;
	jule::I32 _126413_exprStart = (*(_126242_i));;
	for (; ((*(_126242_i)) < (*(_126255_tokens)).len()); ((*(_126242_i)))++) {
		{
			jule::Ptr<_2039861ab_Token> _126617_t = (*(_126255_tokens))[(*(_126242_i))];;
			if ((_126617_t.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _126617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1c5157900:;
						{
							(_126317_braceN)++;
							goto _iter_next_1c515646a;
						}
					}
					else {
						_case_begin_1c5157504:;
						{
							(_126317_braceN)--;
						}
					}
					_match_end_1c51572e5:;
				};
			};
			if ((_126317_braceN > 0LL)) {
				goto _iter_next_1c515646a;
			};
			if (((_126617_t.get()._field_Id == static_cast<jule::U32>(8LLU)) || (((*(_126242_i)) + 1LL) >= (*(_126255_tokens)).len()))) {
				jule::Slice<jule::Ptr<_2039861ab_Token>> _128225_exprTokens = nullptr;;
				if ((_126617_t.get()._field_Id == static_cast<jule::U32>(8LLU))) {
					_128225_exprTokens=(*(_126255_tokens)).slice(_126413_exprStart, (*(_126242_i)));
				} else {
					_128225_exprTokens=(*(_126255_tokens)).slice(_126413_exprStart);
				};
				return _1a9b1ad3a_buildExpr(_self_, &(_128225_exprTokens));;
			};
		}
	_iter_next_1c515646a:;
	}
	_iter_end_1c515646a:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1c4aa6e65_EnumItemDecl>> _1a9b23848_buildEnumItems(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _129439_tokens) {
	jule::Slice<jule::Ptr<_1c4aa6e65_EnumItemDecl>> _129517_items = jule::Slice<jule::Ptr<_1c4aa6e65_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _129617_i = 0LL;;
	for (; (_129617_i < (*(_129439_tokens)).len()); (_129617_i)++) {
		{
			jule::Ptr<_2039861ab_Token> _129821_t = (*(_129439_tokens))[_129617_i];;
			jule::Ptr<_1c4aa6e65_EnumItemDecl> _129921_item = jule::new_ptr<_1c4aa6e65_EnumItemDecl>();;
			_129921_item.get()._field_Token=_129821_t;
			if ((_129921_item.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
				_1a9b1a70d_pushErr(_self_.ptr(), _129921_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_129921_item.get()._field_Ident=_129921_item.get()._field_Token.get()._field_Kind;
			if ((((_129617_i + 1LL) >= (*(_129439_tokens)).len()) || ((*(_129439_tokens))[(_129617_i + 1LL)].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
				if (((_129617_i + 1LL) < (*(_129439_tokens)).len())) {
					(_129617_i)++;
				};
				_129517_items = jule::alloc_for_append(_129517_items,1);_129517_items.__push(_129921_item);;
				goto _iter_next_1c515ad54;
			};
			(_129617_i)++;
			_129821_t=(*(_129439_tokens))[_129617_i];
			(_129617_i)++;
			if ((_129821_t.get()._field_Id != static_cast<jule::U32>(11LLU))) {
				_1a9b1a70d_pushErr(_self_.ptr(), _129821_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1c515ad54;
			};
			if (((_129617_i >= (*(_129439_tokens)).len()) || ((*(_129439_tokens))[_129617_i].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
				_1a9b1a70d_pushErr(_self_.ptr(), _129821_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1c515ad54;
			};
			_129921_item.get()._field_Expr=_1a9b2353a_buildEnumItemExpr(_self_, &(_129617_i), _129439_tokens);
			_129517_items = jule::alloc_for_append(_129517_items,1);_129517_items.__push(_129921_item);;
		}
	_iter_next_1c515ad54:;
	}
	_iter_end_1c515ad54:;;
	return _129517_items;;
}



inline jule::Ptr<_1c4aa798d_EnumDecl> _1a9b23b56_buildEnumDecl(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _133138_tokens) {
	if (((*(_133138_tokens)).len() < 3LL)) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_133138_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4aa798d_EnumDecl> _133617_e = jule::new_ptr<_1c4aa798d_EnumDecl>(_1c4aa798d_EnumDecl{._field_Token=(*(_133138_tokens))[1LL], });;
	if ((_133617_e.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9b1a70d_pushErr(_self_.ptr(), _133617_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_133617_e.get()._field_Ident=_133617_e.get()._field_Token.get()._field_Kind;
	jule::I32 _134417_i = 2LL;;
	if (((*(_133138_tokens))[_134417_i].get()._field_Id == static_cast<jule::U32>(11LLU))) {
		(_134417_i)++;
		if ((_134417_i >= (*(_133138_tokens)).len())) {
			_1a9b1a70d_pushErr(_self_.ptr(), (*(_133138_tokens))[(_134417_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _133617_e;;
		};
		({
			__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, _133138_tokens, (&(_134417_i)), true);
			_133617_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134417_i >= (*(_133138_tokens)).len())) {
			_1a9b1a0d1_stop(_self_.ptr());
			_1a9b1a70d_pushErr(_self_.ptr(), _133617_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _133617_e;;
		};
	} else {
		_133617_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_2039861ab_Token>> _136117_itemTokens = _1a9b18013_range(&(_134417_i), jule::Str("{", 1), jule::Str("}", 1), _133138_tokens);;
	if ((_136117_itemTokens == nullptr)) {
		_1a9b1a0d1_stop(_self_.ptr());
		_1a9b1a70d_pushErr(_self_.ptr(), _133617_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _133617_e;;
	} else if ((_134417_i < (*(_133138_tokens)).len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_133138_tokens))[_134417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_133617_e.get()._field_Public=_1a9b2995e_isPub(&(_133617_e.get()._field_Ident));
	_133617_e.get()._field_End=(*(_133138_tokens))[(_134417_i - 1LL)];
	_133617_e.get()._field_Items=_1a9b23848_buildEnumItems(_self_, &(_136117_itemTokens));
	return _133617_e;;
}



inline jule::Any _1a9b23e64_buildNodeEnumDecl(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _137642_tokens) {
	if ((((*(_137642_tokens)).len() > 3LL) && ((*(_137642_tokens))[2LL].get()._field_Id == static_cast<jule::U32>(11LLU)))) {
		if (((*(_137642_tokens))[3LL].get()._field_Id == static_cast<jule::U32>(10LLU))) {
			return jule::Any(_1a9b23183_buildTypeEnumDecl(_self_, _137642_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1a9b23b56_buildEnumDecl(_self_, _137642_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1c4aa8c9c_FieldDecl> _1a9b24272_buildField(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _138534_tokens) {
	jule::Ptr<_1c4aa8c9c_FieldDecl> _138617_f = jule::new_ptr<_1c4aa8c9c_FieldDecl>();;
	_138617_f.get()._field_Mutable=(_138534_tokens[0LL].get()._field_Id == static_cast<jule::U32>(35LLU));
	if (_138617_f.get()._field_Mutable) {
		if ((_138534_tokens.len() == 1LL)) {
			_1a9b1a70d_pushErr(_self_.ptr(), _138534_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138534_tokens=_138534_tokens.slice(1LL);
	};
	_138617_f.get()._field_Token=_138534_tokens[0LL];
	if ((_138617_f.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9b1a70d_pushErr(_self_.ptr(), _138617_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138617_f.get()._field_Ident=_138617_f.get()._field_Token.get()._field_Kind;
	if ((_138534_tokens.len() == 1LL)) {
		_1a9b1a70d_pushErr(_self_.ptr(), _138534_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138534_tokens[1LL].get()._field_Id != static_cast<jule::U32>(11LLU))) {
		_1a9b1a70d_pushErr(_self_.ptr(), _138534_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138534_tokens=_138534_tokens.slice(2LL);
	jule::I32 _141417_i = 0LL;;
	({
		__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, &(_138534_tokens), (&(_141417_i)), true);
		_138617_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141417_i < _138534_tokens.len())) {
		jule::Ptr<_2039861ab_Token> _141717_token = _138534_tokens[_141417_i];;
		if (((_141717_token.get()._field_Id != static_cast<jule::U32>(7LLU)) || (!_141717_token.get()._field_Kind.equal("=", 1)))) {
			_1a9b1a70d_pushErr(_self_.ptr(), _138534_tokens[_141417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141417_i)++;
		if ((_141417_i >= _138534_tokens.len())) {
			_1a9b1a70d_pushErr(_self_.ptr(), _141717_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138534_tokens=_138534_tokens.slice(_141417_i);
		_138617_f.get()._field_Default=_1a9b1ad3a_buildExpr(_self_, &(_138534_tokens));
	};
	_138617_f.get()._field_Public=_1a9b2995e_isPub(&(_138617_f.get()._field_Ident));
	return _138617_f;;
}



inline jule::Slice<jule::Ptr<_1c4aa8c9c_FieldDecl>> _1a9b24580_buildStructDeclFields(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _143445_tokens) {
	jule::Slice<jule::Ptr<_1c4aa8c9c_FieldDecl>> _143517_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a9aecd2d_stmt>> _143617_stmts = _1a9aed1c4_splitStmts(&(_143445_tokens));;
	{
		auto expr = &(_143617_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5177326:;
		if (it != expr_end) {
			jule::Ptr<_1a9aecd2d_stmt> _143721_stmt = *it;
			{
				_143445_tokens=_143721_stmt.get()._field_tokens;
				jule::Ptr<_1c4aa8c9c_FieldDecl> _143921_f = _1a9b24272_buildField(_self_, _143445_tokens);;
				_143517_fields = jule::alloc_for_append(_143517_fields,1);_143517_fields.__push(_143921_f);;
			}
			_iter_next_1c5177326:;
			++it;
			goto _iter_begin_1c5177326;
		}
		_iter_end_1c5177326:;
	};
	return _143517_fields;;
}



inline jule::Ptr<_1c4aa9550_StructDecl> _1a9b2488d_buildStructDecl(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _144540_tokens) {
	if (((*(_144540_tokens)).len() < 3LL)) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_144540_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _145117_i = 1LL;;
	jule::Ptr<_1c4aa9550_StructDecl> _145217_s = jule::new_ptr<_1c4aa9550_StructDecl>(_1c4aa9550_StructDecl{._field_Token=(*(_144540_tokens))[_145117_i], });;
	if ((_145217_s.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9b1a70d_pushErr(_self_.ptr(), _145217_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_145117_i)++;
	if ((_145117_i >= (*(_144540_tokens)).len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_144540_tokens))[_145117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _145217_s;;
	};
	_145217_s.get()._field_Ident=_145217_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_2039861ab_Token> _146613_errorToken = (*(_144540_tokens))[_145117_i];;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _146717_genericsTokens = _1a9b18013_range(&(_145117_i), jule::Str("[", 1), jule::Str("]", 1), _144540_tokens);;
	if ((_146717_genericsTokens != nullptr)) {
		_145217_s.get()._field_Generics=_1a9b1d90e_buildGenerics(_self_, &(_146717_genericsTokens), &(_146613_errorToken));
	};
	if ((_145117_i >= (*(_144540_tokens)).len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_144540_tokens))[(_145117_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145217_s;;
	};
	jule::Slice<jule::Ptr<_2039861ab_Token>> _147717_bodyTokens = _1a9b18013_range(&(_145117_i), jule::Str("{", 1), jule::Str("}", 1), _144540_tokens);;
	if ((_147717_bodyTokens == nullptr)) {
		_1a9b1a0d1_stop(_self_.ptr());
		_1a9b1a70d_pushErr(_self_.ptr(), _145217_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145217_s;;
	};
	if ((_145117_i < (*(_144540_tokens)).len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_144540_tokens))[_145117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_145217_s.get()._field_Public=_1a9b2995e_isPub(&(_145217_s.get()._field_Ident));
	_145217_s.get()._field_Fields=_1a9b24580_buildStructDeclFields(_self_, _147717_bodyTokens);
	_145217_s.get()._field_End=(*(_144540_tokens))[(_145117_i - 1LL)];
	return _145217_s;;
}



inline void _1a9b24b13_checkMethodReceiver(_1a9b19ca1_parser* _self_, jule::Ptr<_1c4aa0cb6_FnDecl>* _149339_f) {
	if ((*(_149339_f)).get()._field_Statically) {
		if ((((*(_149339_f)).get()._field_Params.len() > 0LL) && _1c4a9ed09_IsSelf((*(_149339_f)).get()._field_Params[0LL].ptr()))) {
			_1a9b1a70d_pushErr(_self_, (*(_149339_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_149339_f)).get()._field_Params.len() == 0LL)) {
		_1a9b1a70d_pushErr(_self_, (*(_149339_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4a9e996_ParamDecl> _150513_param = (*(_149339_f)).get()._field_Params[0LL];;
	if ((!(_1c4a9ed09_IsSelf(_150513_param.ptr())))) {
		_1a9b1a70d_pushErr(_self_, (*(_149339_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a9b24e32_buildTraitBody(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Ptr<_1c4aa9c26_TraitDecl>* _151239_t, jule::Slice<jule::Ptr<_2039861ab_Token>> _151258_tokens) {
	jule::Slice<jule::Ptr<_1a9aecd2d_stmt>> _151317_stmts = _1a9aed1c4_splitStmts(&(_151258_tokens));;
	{
		auto expr = &(_151317_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5185cb3:;
		if (it != expr_end) {
			jule::Ptr<_1a9aecd2d_stmt> _151421_stmt = *it;
			{
				_151258_tokens=_151421_stmt.get()._field_tokens;
				if ((_151258_tokens.len() == 0LL)) {
					goto _iter_next_1c5185cb3;
				};
				{
					auto &_match_expr{ _151258_tokens[0LL].get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(32LLU)) {
						_case_begin_1c5188799:;
						{
							jule::Ptr<_1c4aa0cb6_FnDecl> _152125_f = _1a9b2126e_buildFn(_self_, &(_151258_tokens), true, true);;
							if ((_152125_f == nullptr)) {
								goto _match_end_1c5187006;
							};
							if (_1c4aa1118_IsAnon(_152125_f.ptr())) {
								_1a9b1a70d_pushErr(_self_.ptr(), _152125_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_1a9b24b13_checkMethodReceiver(_self_.ptr(), &(_152125_f));
							if ((_152125_f.get()._field_Generics.len() > 0LL)) {
								_1a9b1a70d_pushErr(_self_.ptr(), _152125_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							(*(_151239_t)).get()._field_Methods = jule::alloc_for_append((*(_151239_t)).get()._field_Methods,1);(*(_151239_t)).get()._field_Methods.__push(_152125_f);;
						}
					}
					else {
						_case_begin_1c5186a94:;
						{
							jule::I32 _153425_i = 0LL;;
							jule::Ptr<_1c4a8e337_TypeDecl> _153526_ti;;
							jule::Bool _153530_ok = false;;
							({
								__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, &(_151258_tokens), (&(_153425_i)), true);
								_153526_ti = __jule_assign_result.__jule_result_arg0;
								_153530_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_153530_ok))) {
								goto _match_end_1c5187006;
							};
							if ((_153425_i < _151258_tokens.len())) {
								_1a9b1a70d_pushErr(_self_.ptr(), _151258_tokens[_153425_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							(*(_151239_t)).get()._field_Inherits = jule::alloc_for_append((*(_151239_t)).get()._field_Inherits,1);(*(_151239_t)).get()._field_Inherits.__push(_153526_ti);;
						}
					}
					_match_end_1c5187006:;
				};
			}
			_iter_next_1c5185cb3:;
			++it;
			goto _iter_begin_1c5185cb3;
		}
		_iter_end_1c5185cb3:;
	};
}



inline jule::Ptr<_1c4aa9c26_TraitDecl> _1a9b25240_buildTraitDecl(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _154739_tokens) {
	if (((*(_154739_tokens)).len() < 3LL)) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_154739_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4aa9c26_TraitDecl> _155217_t = jule::new_ptr<_1c4aa9c26_TraitDecl>(_1c4aa9c26_TraitDecl{._field_Token=(*(_154739_tokens))[1LL], });;
	if ((_155217_t.get()._field_Token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9b1a70d_pushErr(_self_.ptr(), _155217_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_155217_t.get()._field_Ident=_155217_t.get()._field_Token.get()._field_Kind;
	jule::I32 _156017_i = 2LL;;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _156117_bodyTokens = _1a9b18013_range(&(_156017_i), jule::Str("{", 1), jule::Str("}", 1), _154739_tokens);;
	if ((_156117_bodyTokens == nullptr)) {
		_1a9b1a0d1_stop(_self_.ptr());
		_1a9b1a70d_pushErr(_self_.ptr(), _155217_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_156017_i < (*(_154739_tokens)).len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_154739_tokens))[_156017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_155217_t.get()._field_Public=_1a9b2995e_isPub(&(_155217_t.get()._field_Ident));
	_1a9b24e32_buildTraitBody(_self_, &(_155217_t), _156117_bodyTokens);
	_155217_t.get()._field_End=(*(_154739_tokens))[(_156017_i - 1LL)];
	return _155217_t;;
}



inline jule::Ptr<_1c4aa0cb6_FnDecl> _1a9b2554d_buildCppLinkFn(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _157738_tokens) {
	_157738_tokens=_157738_tokens.slice(1LL);
	jule::Ptr<_1c4aa0cb6_FnDecl> _157917_f = _1a9b2126e_buildFn(_self_, &(_157738_tokens), false, true);;
	if ((_157917_f != nullptr)) {
		if (_1c4aa1118_IsAnon(_157917_f.ptr())) {
			_1a9b1a70d_pushErr(_self_.ptr(), _157917_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		_157917_f.get()._field_Public=false;
		_157917_f.get()._field_CppLinked=true;
	};
	return _157917_f;;
}



inline jule::Ptr<_1c4aa1c95_VarDecl> _1a9b2585b_buildCppLinkVar(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _159039_tokens) {
	_159039_tokens=_159039_tokens.slice(1LL);
	jule::Ptr<_1c4aa1c95_VarDecl> _159217_v = _1a9b1d249_buildVar(_self_, _159039_tokens);;
	if ((_159217_v != nullptr)) {
		_159217_v.get()._field_Public=false;
		_159217_v.get()._field_CppLinked=true;
		if ((_159217_v.get()._field_Expr != nullptr)) {
			_1a9b1a70d_pushErr(_self_.ptr(), _159217_v.get()._field_Token, jule::Str("cpp linked variables cannot have expression", 43), jule::Slice<jule::Any>());
		};
	};
	return _159217_v;;
}



inline jule::Ptr<_1c4aa9550_StructDecl> _1a9b25b69_buildCppLinkStruct(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _160342_tokens) {
	_160342_tokens=_160342_tokens.slice(1LL);
	jule::Ptr<_1c4aa9550_StructDecl> _160517_s = _1a9b2488d_buildStructDecl(_self_, &(_160342_tokens));;
	if ((_160517_s != nullptr)) {
		_160517_s.get()._field_Public=false;
		{
			auto expr = &(_160517_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c5197a1c:;
			if (it != expr_end) {
				jule::Ptr<_1c4aa8c9c_FieldDecl> _160825_f = *it;
				{
					_160825_f.get()._field_Public=true;
				}
				_iter_next_1c5197a1c:;
				++it;
				goto _iter_begin_1c5197a1c;
			}
			_iter_end_1c5197a1c:;
		};
		_160517_s.get()._field_CppLinked=true;
	};
	return _160517_s;;
}



inline jule::Ptr<_1c4aa5606_TypeAliasDecl> _1a9b25e77_buildCppLinkTypeAlias(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _161745_tokens) {
	_161745_tokens=_161745_tokens.slice(1LL);
	jule::Ptr<_1c4aa5606_TypeAliasDecl> _161917_t = _1a9b1c435_buildTypeAliasDecl(_self_, &(_161745_tokens));;
	if ((_161917_t != nullptr)) {
		_161917_t.get()._field_Public=false;
		_161917_t.get()._field_CppLinked=true;
	};
	return _161917_t;;
}



inline jule::Ptr<_1c4aa69e2_UseDecl> _1a9b26285_buildCppLinkUse(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _162739_tokens) {
	if ((_162739_tokens.len() == 1LL)) {
		_1a9b1a70d_pushErr(_self_.ptr(), _162739_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_162739_tokens=_162739_tokens.slice(1LL);
	;
	return _1a9b226b0_buildUseDecl(_self_.ptr(), _162739_tokens, true);;
}



inline jule::Any _1a9b26593_buildCppLink(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _163837_tokens) {
	jule::Ptr<_2039861ab_Token> _163917_token = (*(_163837_tokens))[0LL];;
	if (((*(_163837_tokens)).len() == 1LL)) {
		_1a9b1a70d_pushErr(_self_.ptr(), _163917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_163917_token=(*(_163837_tokens))[1LL];
	{
		auto &_match_expr{ _163917_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1ad463e54:;
			{
				return jule::Any(_1a9b2554d_buildCppLinkFn(_self_, (*(_163837_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1ad464b03:;
			{
				return jule::Any(_1a9b2585b_buildCppLinkVar(_self_, (*(_163837_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(24LLU)) {
			_case_begin_1ad464b69:;
			{
				return jule::Any(_1a9b25b69_buildCppLinkStruct(_self_, (*(_163837_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1ad464bd0:;
			{
				return jule::Any(_1a9b25e77_buildCppLinkTypeAlias(_self_, (*(_163837_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1ad46499e:;
			{
				_1a9b1a70d_pushErr(_self_.ptr(), _163917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad464a8c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4aa0cb6_FnDecl> _1a9b268a1_getMethod(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _166234_tokens) {
	jule::I32 _166317_i = 0LL;;
	jule::Ptr<_2039861ab_Token> _166417_token = (*(_166234_tokens))[_166317_i];;
	if ((_166417_token.get()._field_Id == static_cast<jule::U32>(37LLU))) {
		if (((_166317_i + 1LL) >= (*(_166234_tokens)).len())) {
			_1a9b1a70d_pushErr(_self_.ptr(), _166417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_166317_i)++;
		_166417_token=(*(_166234_tokens))[_166317_i];
	};
	if ((_166417_token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_166317_i + 1LL) >= (*(_166234_tokens)).len())) {
			_1a9b1a70d_pushErr(_self_.ptr(), _166417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_166317_i)++;
		_166417_token=(*(_166234_tokens))[_166317_i];
	};
	if ((_166417_token.get()._field_Id != static_cast<jule::U32>(32LLU))) {
		_1a9b1a70d_pushErr(_self_.ptr(), _166417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4aa0cb6_FnDecl> _168817_f = _1a9b2126e_buildFn(_self_, _166234_tokens, true, false);;
	if (((_168817_f != nullptr) && _1c4aa1118_IsAnon(_168817_f.ptr()))) {
		_1a9b1a70d_pushErr(_self_.ptr(), _168817_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _168817_f;;
}



inline void _1a9b26bc0_parseImplBody(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Ptr<_1c4aaa331_Impl>* _169538_ipl, jule::Slice<jule::Ptr<_2039861ab_Token>>* _169555_tokens) {
	jule::Slice<jule::Ptr<_1a9aecd2d_stmt>> _169617_stmts = _1a9aed1c4_splitStmts(_169555_tokens);;
	{
		auto expr = &(_169617_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad46c9b8:;
		if (it != expr_end) {
			jule::Ptr<_1a9aecd2d_stmt> _169721_stmt = *it;
			{
				(*(_169555_tokens))=_169721_stmt.get()._field_tokens;
				jule::Ptr<_2039861ab_Token> _169921_token = (*(_169555_tokens))[0LL];;
				{
					auto &_match_expr{ _169921_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(38LLU)) {
						_case_begin_1ad46d117:;
						{
							_1a9b1b3bd_pushDirective(_self_.ptr(), _1a9b1b148_buildDirective(_self_.ptr(), (*(_169555_tokens))));
							goto _iter_next_1ad46c9b8;
						}
					}
					_match_end_1ad46daeb:;
				};
				{
					auto &_match_expr{ _169921_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(9LLU)) {
						_case_begin_1ad46dc50:;
						{
							jule::Ptr<_1c4aa1c95_VarDecl> _170825_v = _1a9b1d249_buildVar(_self_, (*(_169555_tokens)));;
							if ((_170825_v != nullptr)) {
								(*(_169538_ipl)).get()._field_Statics = jule::alloc_for_append((*(_169538_ipl)).get()._field_Statics,1);(*(_169538_ipl)).get()._field_Statics.__push(_170825_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(37LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
						_case_begin_1ad46e129:;
						{
							jule::Ptr<_1c4aa0cb6_FnDecl> _171525_f = _1a9b268a1_getMethod(_self_, _169555_tokens);;
							if ((_171525_f != nullptr)) {
								_1a9b24b13_checkMethodReceiver(_self_.ptr(), &(_171525_f));
								_1a9b27561_applyFnMeta(_self_.ptr(), &(_171525_f));
								(*(_169538_ipl)).get()._field_Methods = jule::alloc_for_append((*(_169538_ipl)).get()._field_Methods,1);(*(_169538_ipl)).get()._field_Methods.__push(_171525_f);;
							};
						}
					}
					else {
						_case_begin_1ad46e0b3:;
						{
							_1a9b1a70d_pushErr(_self_.ptr(), _169921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1ad46c9b8;
						}
					}
					_match_end_1ad46e7de:;
				};
			}
			_iter_next_1ad46c9b8:;
			++it;
			goto _iter_begin_1ad46c9b8;
		}
		_iter_end_1ad46c9b8:;
	};
}



inline jule::Ptr<_1c4aaa331_Impl> _1a9b26ecd_buildImpl(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _172833_tokens) {
	jule::Ptr<_2039861ab_Token> _172917_token = _172833_tokens[0LL];;
	if ((_172833_tokens.len() < 2LL)) {
		_1a9b1a70d_pushErr(_self_.ptr(), _172917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _173517_i = 1LL;;
	jule::Ptr<_1c4a8e337_TypeDecl> _173718_base;;
	jule::Bool _173728_ok = false;;
	({
		__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, &(_172833_tokens), (&(_173517_i)), true);
		_173718_base = __jule_assign_result.__jule_result_arg0;
		_173728_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_173728_ok))) {
		return nullptr;;
	};
	if ((_173517_i >= _172833_tokens.len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), _172917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4aaa331_Impl> _174617_ipl = jule::new_ptr<_1c4aaa331_Impl>(_1c4aaa331_Impl{._field_Base=_173718_base, });;
	_172917_token=_172833_tokens[_173517_i];
	if ((_172917_token.get()._field_Id != static_cast<jule::U32>(12LLU))) {
		if (((_172917_token.get()._field_Id == static_cast<jule::U32>(3LLU)) && _172917_token.get()._field_Kind.equal("{", 1))) {
			({
				jule::Ptr<_1c4a8e337_TypeDecl> ___jule_assign_arg = _174617_ipl.get()._field_Dest;
				jule::Ptr<_1c4a8e337_TypeDecl> _1___jule_assign_arg = _174617_ipl.get()._field_Base;
				_174617_ipl.get()._field_Base = ___jule_assign_arg;
				_174617_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1a9b1a0d1_stop(_self_.ptr());
		_1a9b1a70d_pushErr(_self_.ptr(), _172917_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_173517_i)++;
	if ((_173517_i >= _172833_tokens.len())) {
		_1a9b1a0d1_stop(_self_.ptr());
		_1a9b1a70d_pushErr(_self_.ptr(), _172917_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType(_self_, &(_172833_tokens), (&(_173517_i)), true);
		_174617_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_173728_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_173728_ok))) {
		return nullptr;;
	};
	if ((_173517_i >= _172833_tokens.len())) {
		_1a9b1a0d1_stop(_self_.ptr());
		_1a9b1a70d_pushErr(_self_.ptr(), _172917_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _178417_bodyTokens = _1a9b18013_range(&(_173517_i), jule::Str("{", 1), jule::Str("}", 1), &(_172833_tokens));;
	if ((_178417_bodyTokens == nullptr)) {
		_1a9b1a0d1_stop(_self_.ptr());
		_1a9b1a70d_pushErr(_self_.ptr(), _172917_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_173517_i < _172833_tokens.len())) {
		_1a9b1a70d_pushErr(_self_.ptr(), _172833_tokens[_173517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_174617_ipl.get()._field_End=_172833_tokens[(_173517_i - 1LL)];
	_1a9b26bc0_parseImplBody(_self_, &(_174617_ipl), &(_178417_bodyTokens));
	return _174617_ipl;;
}



inline jule::Any _1a9b272db_buildNodeData(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _179938_tokens) {
	jule::Ptr<_2039861ab_Token> _180017_token = (*(_179938_tokens))[0LL];;
	{
		auto &_match_expr{ _180017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1ad47e139:;
			{
				jule::Ptr<_1c4aa0cb6_FnDecl> _180421_f = _1a9b2126e_buildFn(_self_, _179938_tokens, false, false);;
				if ((_180421_f != nullptr)) {
					_180421_f.get()._field_Global=true;
					if (_1c4aa1118_IsAnon(_180421_f.ptr())) {
						_1a9b1a70d_pushErr(_self_.ptr(), _180421_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_180421_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(35LLU) || _match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1ad48006e:;
			{
				return jule::Any(_1a9b1d249_buildVar(_self_, (*(_179938_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1ad4800d5:;
			{
				return jule::Any(_1a9b1c435_buildTypeAliasDecl(_self_, _179938_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1ad48014b:;
			{
				return _1a9b23e64_buildNodeEnumDecl(_self_, _179938_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(24LLU)) {
			_case_begin_1ad47e7aa:;
			{
				return jule::Any(_1a9b2488d_buildStructDecl(_self_, _179938_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1ad47e821:;
			{
				return jule::Any(_1a9b25240_buildTraitDecl(_self_, _179938_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1ad47e887:;
			{
				return jule::Any(_1a9b26ecd_buildImpl(_self_, (*(_179938_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1ad47e8ed:;
			{
				return _1a9b26593_buildCppLink(_self_, _179938_tokens);;
			}
		}
		else {
			_case_begin_1ad47e722:;
			{
				_1a9b1a70d_pushErr(_self_.ptr(), _180017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad47e579:;
	};
}



inline void _1a9b27561_applyFnMeta(_1a9b19ca1_parser* _self_, jule::Ptr<_1c4aa0cb6_FnDecl>* _183535_f) {
	(*(_183535_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a9b277d6_applyMeta(_1a9b19ca1_parser* _self_, _1c4a5a985_Node* _184033_node) {
	{
		auto &_match_expr{ (*(_184033_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ad485abe:;
			{
				jule::Ptr<_1c4aa1c95_VarDecl> _184321_v = (*(_184033_node))._field_Data.cast_ptr<_1c4aa1c95_VarDecl>(&__jule_any_type16);;
				if ((_184321_v == nullptr)) {
					return;;
				};
				_184321_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad485b35:;
			{
				jule::Ptr<_1c4aa0cb6_FnDecl> _185021_f = (*(_184033_node))._field_Data.cast_ptr<_1c4aa0cb6_FnDecl>(&__jule_any_type14);;
				if ((_185021_f == nullptr)) {
					return;;
				};
				_1a9b27561_applyFnMeta(_self_, &(_185021_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ad485b9b:;
			{
				jule::Ptr<_1c4aa9550_StructDecl> _185621_sd = (*(_184033_node))._field_Data.cast_ptr<_1c4aa9550_StructDecl>(&__jule_any_type13);;
				if ((_185621_sd == nullptr)) {
					return;;
				};
				_185621_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1ad4858b0:;
	};
}



inline void _1a9b27a5b_pushUseDecl(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Ptr<_1c4aa69e2_UseDecl>* _186536_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push((*(_186536_decl)));;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1a9b1a70d_pushErr(_self_.ptr(), (*(_186536_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1a9b1aa2c_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a9b27d69_pushMetaNodes(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _187338_tokens) {
	{
		auto &_match_expr{ (*(_187338_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1ad48b564:;
			{
				;
				jule::Ptr<_1c4aa69e2_UseDecl> _187721_decl = _1a9b226b0_buildUseDecl(_self_.ptr(), (*(_187338_tokens)), false);;
				_1a9b27a5b_pushUseDecl(_self_, &(_187721_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1ad48b5db:;
			{
				if ((((*(_187338_tokens)).len() > 1LL) && ((*(_187338_tokens))[1LL].get()._field_Id == static_cast<jule::U32>(19LLU)))) {
					jule::Ptr<_1c4aa69e2_UseDecl> _188225_decl = _1a9b26285_buildCppLinkUse(_self_, (*(_187338_tokens)));;
					_1a9b27a5b_pushUseDecl(_self_, &(_188225_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(38LLU)) {
			_case_begin_1ad48b663:;
			{
				_1a9b1b3bd_pushDirective(_self_.ptr(), _1a9b1b148_buildDirective(_self_.ptr(), (*(_187338_tokens))));
				return true;;
			}
		}
		_match_end_1ad48b487:;
	};
	return false;;
}



inline _1c4a5a985_Node _1a9b28177_parseNode(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _189334_st) {
	_1c4a5a985_Node _189417_node = _1c4a5a985_Node{._field_Token=(*(_189334_st))[0LL], };;
	if (_1a9b27d69_pushMetaNodes(_self_, _189334_st)) {
		return _189417_node;;
	};
	jule::Any _190217_data = _1a9b272db_buildNodeData(_self_, _189334_st);;
	if ((_190217_data == nullptr)) {
		return _189417_node;;
	};
	_189417_node._field_Data=_190217_data;
	_1a9b277d6_applyMeta(_self_.ptr(), &(_189417_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a9b1a70d_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _189417_node;;
}



inline void _1a9b283ec_appendNode(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _191735_st) {
	if (((*(_191735_st)).len() == 0LL)) {
		return;;
	};
	_1c4a5a985_Node _192117_node = _1a9b28177_parseNode(_self_, _191735_st);;
	if (((_192117_node._field_Data == nullptr) || _1a9b1a345_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_192117_node);;
}



inline void _1a9b2885e_removeRange(_1a9b19ca1_parser* _self_, jule::I32 _192830_i, jule::Str _192838_kind, jule::Slice<jule::Ptr<_2039861ab_Token>>* _192850_tokens, jule::Slice<jule::I32>* _192873_ranges) {
	jule::Str _192913_close = _1a9b18d27_getCloseKindOfBrace(_192838_kind);;
	for (; (_192830_i >= 0LL); (_192830_i)--) {
		{
			jule::Ptr<_2039861ab_Token> _193117_tok = (*(_192850_tokens))[(*(_192873_ranges))[_192830_i]];;
			if ((_193117_tok.get()._field_Kind != _192913_close)) {
				goto _iter_next_1ad495a8a;
			};
			(*(_192873_ranges))=jule::append((*(_192873_ranges)).slice(0LL, _192830_i),(*(_192873_ranges)).slice((_192830_i + 1LL)));
			goto _iter_end_1ad495a8a;
		}
	_iter_next_1ad495a8a:;
	}
	_iter_end_1ad495a8a:;;
}



inline void _1a9b28c27_pushWrongOrderCloseErr(_1a9b19ca1_parser* _self_, jule::Ptr<_2039861ab_Token>* _194042_t, jule::Slice<jule::Ptr<_2039861ab_Token>>* _194054_tokens, jule::Slice<jule::I32>* _194073_ranges) {
	{
		auto &_match_expr{ (*(_194054_tokens))[(*(_194073_ranges))[((*(_194073_ranges)).len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1ad497b25:;
			{
				_1a9b1a70d_pushErr(_self_, (*(_194042_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1ad497b9c:;
			{
				_1a9b1a70d_pushErr(_self_, (*(_194042_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1ad497c24:;
			{
				_1a9b1a70d_pushErr(_self_, (*(_194042_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad497a04:;
	};
}



inline void _1a9b29189_pushRangeClose(_1a9b19ca1_parser* _self_, jule::Ptr<_2039861ab_Token> _195133_t, jule::Str _195144_left, jule::Slice<jule::Ptr<_2039861ab_Token>>* _195156_tokens, jule::Slice<jule::I32>* _195179_ranges) {
	jule::I32 _195213_n = (*(_195179_ranges)).len();;
	if ((_195213_n == 0LL)) {
		{
			auto &_match_expr{ _195133_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1ad49a70a:;
				{
					_1a9b1a70d_pushErr(_self_, _195133_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1ad49a782:;
				{
					_1a9b1a70d_pushErr(_self_, _195133_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1ad49a809:;
				{
					_1a9b1a70d_pushErr(_self_, _195133_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1ad49a4c9:;
		};
		return;;
	} else if (((*(_195156_tokens))[(*(_195179_ranges))[(_195213_n - 1LL)]].get()._field_Kind != _195144_left)) {
		_1a9b28c27_pushWrongOrderCloseErr(_self_, &(_195133_t), _195156_tokens, _195179_ranges);
	};
	_1a9b2885e_removeRange(_self_, static_cast<jule::I32>((_195213_n - 1LL)), _195133_t.get()._field_Kind, _195156_tokens, _195179_ranges);
}



inline void _1a9b2940e_checkRanges(_1a9b19ca1_parser* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>>* _196931_tokens) {
	jule::Slice<jule::I32> _197017_ranges = nullptr;;
	{
		auto expr = _196931_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad49d80c:;
		if (it != expr_end) {
			jule::I32 _197213_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> *_197216_token = it;
			{
				if (((*(_197216_token)).get()._field_Id != static_cast<jule::U32>(3LLU))) {
					goto _iter_next_1ad49d80c;
				};
				{
					auto &_match_expr{ (*(_197216_token)).get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1ad49ea72:;
						{
							_197017_ranges = jule::alloc_for_append(_197017_ranges,1);_197017_ranges.__push(_197213_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ad49eb1b:;
						{
							_1a9b29189_pushRangeClose(_self_, (*(_197216_token)), jule::Str("(", 1), _196931_tokens, &(_197017_ranges));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1ad49eb82:;
						{
							_1a9b29189_pushRangeClose(_self_, (*(_197216_token)), jule::Str("{", 1), _196931_tokens, &(_197017_ranges));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ad49ebe8:;
						{
							_1a9b29189_pushRangeClose(_self_, (*(_197216_token)), jule::Str("[", 1), _196931_tokens, &(_197017_ranges));
						}
					}
					_match_end_1ad49e5ee:;
				};
			}
			_iter_next_1ad49d80c:;
			++it;
			_197213_i++;
			goto _iter_begin_1ad49d80c;
		}
		_iter_end_1ad49d80c:;
	};
	{
		auto expr = &(_197017_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad49d598:;
		if (it != expr_end) {
			jule::I32 _199016_i = *it;
			{
				jule::Ptr<_2039861ab_Token> _199117_token = (*(_196931_tokens))[_199016_i];;
				{
					auto &_match_expr{ _199117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ad4a227d:;
						{
							_1a9b1a70d_pushErr(_self_, _199117_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1ad4a22e4:;
						{
							_1a9b1a70d_pushErr(_self_, _199117_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1ad4a235a:;
						{
							_1a9b1a70d_pushErr(_self_, _199117_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1ad4a204c:;
				};
			}
			_iter_next_1ad49d598:;
			++it;
			goto _iter_begin_1ad49d598;
		}
		_iter_end_1ad49d598:;
	};
}



inline void _1a9b29684_parse(jule::Ptr<_1a9b19ca1_parser> _self_, jule::Ptr<_20398b546_File>* _200330_f) {
	_self_.get()._field_ast=jule::new_ptr<_1c4a59b93_Ast>(_1c4a59b93_Ast{._field_File=(*(_200330_f)), });
	_1a9b2940e_checkRanges(_self_.ptr(), &((*(_200330_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a9aecd2d_stmt>> _201317_stmts = _1a9aed1c4_splitStmts(&((*(_200330_f)).get()._field_Tokens));;
	jule::I32 _201617_i = 0LL;;
	for (; (_201617_i < _201317_stmts.len()); (_201617_i)++) {
		{
			jule::Ptr<_1a9aecd2d_stmt> _201821_stmt = _201317_stmts[_201617_i];;
			if ((_201821_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_201821_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U32>(38LLU))) {
				goto _iter_end_1ad4a524d;
			};
			if ((!(_1c22227d1_IsTopDirective(_201821_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1ad4a524d;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1a9b1b148_buildDirective(_self_.ptr(), _201821_stmt.get()._field_tokens));;
		}
	_iter_next_1ad4a524d:;
	}
	_iter_end_1ad4a524d:;;
	_self_.get()._field_errors=nullptr;
	for (; (_201617_i < _201317_stmts.len()); (_201617_i)++) {
		{
			jule::Ptr<_1a9aecd2d_stmt> _203521_stmt = _201317_stmts[_201617_i];;
			_1a9b283ec_appendNode(_self_, &(_203521_stmt.get()._field_tokens));
			if (_1a9b1a345_stopped(_self_.ptr())) {
				goto _iter_end_1ad4a42b3;
			};
		}
	_iter_next_1ad4a42b3:;
	}
	_iter_end_1ad4a42b3:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a9b1a70d_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a9b19ca1_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1a9b2b09d_pushErr(_1a9b2a9c6_typeBuilder* _self_, jule::Ptr<_2039861ab_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1a9b1a70d_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a9b2b3bc_pushSuggestion(_1a9b2a9c6_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1a9b1aa2c_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2b631_buildPrim(_1a9b2a9c6_typeBuilder* _self_) {
	jule::Ptr<_1c4a8e337_TypeDecl> _5517_t = _1a9b2a542_buildPrimType((*(_self_))._field_tokens[(*((*(_self_))._field_i))]);;
	((*((*(_self_))._field_i)))++;
	return _5517_t;;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2b895_buildNamespace(_1a9b2a9c6_typeBuilder* _self_) {
	jule::Ptr<_1c4a8e337_TypeDecl> _6117_t = jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1c4a90404_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_1c4a90404_NamespaceTypeDecl>();;
	jule::I32 _6617_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_2039861ab_Token> _6821_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U32>(2LLU))) {
					_1a9b2b09d_pushErr(_self_, _6821_token, jule::Str("invalid syntax", 14));
					_1a9b2b3bc_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U32>(22LLU))) {
				goto _iter_end_1ad4adb91;
			};
			(_6617_n)++;
		}
	_iter_next_1ad4adb91:;
	}
	_iter_end_1ad4adb91:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL, (_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_6517_nst.get()._field_Kind=_1a9b2c0d2_buildIdent(_self_);
	_6117_t.get()._field_Kind=jule::Any(_6517_nst, &__jule_any_type97);
	return _6117_t;;
}



inline jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _1a9b2bb09_buildGenerics(_1a9b2a9c6_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_2039861ab_Token> _9413_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_9413_token.get()._field_Kind.equal("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _9917_parts = _1a9b2bd6d_identGenerics(_self_);;
	if ((_9917_parts.len() == 0LL)) {
		_1a9b2b09d_pushErr(_self_, _9413_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto expr = &(_9917_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4b636e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _10621_part = *it;
			{
				jule::I32 _10721_j = 0LL;;
				jule::Ptr<_1c4a8e337_TypeDecl> _10822_t;;
				({
					__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType((*(_self_))._field_p, &(_10621_part), (&(_10721_j)), true);
					_10822_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10721_j < _10621_part.len())) {
					_1a9b2b09d_pushErr(_self_, _10621_part[_10721_j], jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_1ad4b636e:;
			++it;
			goto _iter_begin_1ad4b636e;
		}
		_iter_end_1ad4b636e:;
	};
	return _10517_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _1a9b2bd6d_identGenerics(_1a9b2a9c6_typeBuilder* _self_) {
	jule::I32 _11813_first = (*((*(_self_))._field_i));;
	jule::I32 _11917_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_2039861ab_Token> _12117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1ad4b9d23:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ad4b9d9a:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_1ad4b9b03:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1ad4b8a36;
			};
		}
	_iter_next_1ad4b8a36:;
	}
	_iter_end_1ad4b8a36:;;
	jule::Slice<jule::Ptr<_2039861ab_Token>> _13517_tokens = (*(_self_))._field_tokens.slice((_11813_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _13618_parts;;
	jule::Slice<_1c2220900_Log> _13625_errors;;
	({
		__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9b18a80_parts(&(_13517_tokens), static_cast<jule::U32>(8LLU), true);
		_13618_parts = __jule_assign_result.__jule_result_arg0;
		_13625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2c0d2_buildIdent(_1a9b2a9c6_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_14417_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U32>(22LLU)))) {
		return _1a9b2b895_buildNamespace(_self_);;
	};
	jule::Ptr<_2039861ab_Token> _14817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1c4a8e8ed_IdentTypeDecl> _14917_it = jule::new_ptr<_1c4a8e8ed_IdentTypeDecl>(_1c4a8e8ed_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c4a8e337_TypeDecl> _15517_itd = jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_14917_it, &__jule_any_type19)});;
	if (((!(_14417_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U32>(20LLU)))) {
		_14917_it.get()._field_Generics=_1a9b2bb09_buildGenerics(_self_);
		return _15517_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a9b2b09d_pushErr(_self_, _14817_token, jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U32>(2LLU))) {
		_1a9b2b09d_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	jule::Ptr<_1c4a9004c_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_1c4a9004c_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_1c4a8e337_TypeDecl> _17417_ident = _1a9b2c0d2_buildIdent(_self_);;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ad4c4a31:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.cast_ptr<_1c4a8e8ed_IdentTypeDecl>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ad4c4b0d:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.cast_ptr<_1c4a9004c_SubIdentTypeDecl>(&__jule_any_type93).get()._field_Idents);
			}
		}
		_match_end_1ad4c4976:;
	};
	return jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_17217_sit, &__jule_any_type93)});;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2c346_buildCppLink(_1a9b2a9c6_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U32>(20LLU)))) {
		_1a9b2b09d_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1c4a8e337_TypeDecl> _19317_t = _1a9b2c0d2_buildIdent(_self_);;
	_19317_t.get()._field_Kind.cast_ptr<_1c4a8e8ed_IdentTypeDecl>(&__jule_any_type19).get()._field_CppLinked=true;
	return _19317_t;;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2c5aa_buildFn(_1a9b2a9c6_typeBuilder* _self_) {
	jule::Ptr<_2039861ab_Token> _19917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1c4aa0cb6_FnDecl> _20017_f = _1a9b20d1d_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_20017_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c4aa1118_IsAnon(_20017_f.ptr())))) {
		_1a9b2b09d_pushErr(_self_, _20017_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_19917_token, ._field_Kind=jule::Any(_20017_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2c81e_buildPtr(_1a9b2a9c6_typeBuilder* _self_) {
	jule::Ptr<_2039861ab_Token> _21417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a9b2b09d_pushErr(_self_, _21417_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U32>(34LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1c4a911b3_PtrTypeDecl>(_1c4a911b3_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type78)});;
	};
	jule::Ptr<_1c4a8e337_TypeDecl> _23117_elem = _1a9b2da0c_step(_self_);;
	if ((_23117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1c4a911b3_PtrTypeDecl>(_1c4a911b3_PtrTypeDecl{._field_Elem=_23117_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2ca83_buildSptr(_1a9b2a9c6_typeBuilder* _self_) {
	jule::Ptr<_2039861ab_Token> _24517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a9b2b09d_pushErr(_self_, _24517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c4a8e337_TypeDecl> _25217_elem = _1a9b2da0c_step(_self_);;
	if ((_25217_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_24517_token, ._field_Kind=jule::Any(jule::new_ptr<_1c4a906e0_SptrTypeDecl>(_1c4a906e0_SptrTypeDecl{._field_Elem=_25217_elem}), &__jule_any_type79)});;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2cce7_buildOp(_1a9b2a9c6_typeBuilder* _self_) {
	jule::Ptr<_2039861ab_Token> _26617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad4d2236:;
			{
				return _1a9b2c81e_buildPtr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ad4d3314:;
			{
				return _1a9b2ca83_buildSptr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ad4d337a:;
			{
				return jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1c4a906e0_SptrTypeDecl>(_1c4a906e0_SptrTypeDecl{._field_Elem=_1a9b2ca83_buildSptr(_self_)}), &__jule_any_type79)});;
			}
		}
		else {
			_case_begin_1ad4d28b8:;
			{
				_1a9b2b09d_pushErr(_self_, _26617_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1ad4d2742:;
	};
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2d05b_buildSlc(_1a9b2a9c6_typeBuilder* _self_) {
	jule::Ptr<_2039861ab_Token> _28517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c4a8e337_TypeDecl> _28717_elem = _1a9b2da0c_step(_self_);;
	if ((_28717_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_28517_token, ._field_Kind=jule::Any(jule::new_ptr<_1c4a90adb_SlcTypeDecl>(_1c4a90adb_SlcTypeDecl{._field_Elem=_28717_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2d2c0_buildArr(_1a9b2a9c6_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_2039861ab_Token>> _30017_exprTokens = _1a9b18013_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a9b2b09d_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1c4a8e337_TypeDecl> _30617_elem = _1a9b2da0c_step(_self_);;
	if ((_30617_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c4a91845_ArrTypeDecl> _31117_arrt = jule::new_ptr<_1c4a91845_ArrTypeDecl>(_1c4a91845_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_2039861ab_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U32>(7LLU))) && _31517_token.get()._field_Kind.equal("...", 3))) {
	} else {
		_31117_arrt.get()._field_Size=_1a9b1ad3a_buildExpr((*(_self_))._field_p, &(_30017_exprTokens));
	};
	return jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_31517_token, ._field_Kind=jule::Any(_31117_arrt, &__jule_any_type76)});;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2d534_buildMap(_1a9b2a9c6_typeBuilder* _self_) {
	jule::Ptr<_2039861ab_Token> _32917_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a9b2b09d_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2039861ab_Token>> _33717_keyTokens = _1a9b18013_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a9b2b09d_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_1a9b2b09d_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1c4a92093_MapTypeDecl> _34617_mapt = jule::new_ptr<_1c4a92093_MapTypeDecl>();;
	jule::I32 _34717_j = 0LL;;
	jule::Ptr<_1c4a8e337_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok = false;;
	({
		__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType((*(_self_))._field_p, &(_33717_keyTokens), (&(_34717_j)), (*(_self_))._field_err);
		_34818_keyt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_1a9b2b09d_pushErr(_self_, _33717_keyTokens[_34717_j], jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_1c4a8e337_TypeDecl> _35618_valt;;
	({
		__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_assign_result = _1a9b1c127_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_35618_valt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=jule::Any(_34617_mapt, &__jule_any_type80)});;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2d798_buildEnumerable(_1a9b2a9c6_typeBuilder* _self_) {
	jule::Ptr<_2039861ab_Token> _36817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U32>(3LLU))) || (!_36817_token.get()._field_Kind.equal("[", 1)))) {
		_1a9b2b09d_pushErr(_self_, _36817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_36817_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U32>(3LLU)) && _36817_token.get()._field_Kind.equal("]", 1))) {
		return _1a9b2d05b_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a9b2d2c0_buildArr(_self_);;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2da0c_step(_1a9b2a9c6_typeBuilder* _self_) {
	jule::Ptr<_2039861ab_Token> _38513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1ad4e6767:;
			{
				return _1a9b2b631_buildPrim(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1ad4e6107:;
			{
				return _1a9b2c0d2_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1ad4e616d:;
			{
				return _1a9b2c346_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1ad4e61d4:;
			{
				return _1a9b2c5aa_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ad4e6aa8:;
			{
				return _1a9b2cce7_buildOp(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ad4e6b1e:;
			{
				return _1a9b2d798_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1ad4e6b85:;
			{
				return _1a9b2d534_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1ad4e6008:;
			{
				((*((*(_self_))._field_i)))++;
				_1a9b2b09d_pushErr(_self_, _38513_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1ad4e5d82:;
	};
}



inline __jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool _1a9b2dc71_build(_1a9b2a9c6_typeBuilder* _self_) {
	__jule_tuple_x_1c4a8e337_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c4a8e337_TypeDecl> _41117_root = _1a9b2da0c_step(_self_);;
	if ((_41117_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a9b2a300_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _41117_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9b2a9c6_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4cd833e_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1c4cd9be2_pushErr(_1c4cd9692_directiveEval* _self_, jule::Ptr<_2039861ab_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*(_self_))._field_logs = jule::alloc_for_append((*(_self_))._field_logs,1);(*(_self_))._field_logs.__push(_1c2220900_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1c2220d40_Logf(_2137_fmt, _2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _1c4cda099_splitOperans(_1c4cd9692_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_2039861ab_Token>>* _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>>::alloc(0LL, 10LL);;
	jule::I32 _3617_i = 0LL;;
	jule::I32 _3717_rangeN = 0LL;;
	jule::I32 _3817_last = 0LL;;
	for (; (_3617_i < ((*(_3351_tokens)).len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_2039861ab_Token> _4017_b = (*(_3351_tokens))[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ad51ba78:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1ad519c0d;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ad51bade:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1ad51b858:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U32>(7LLU)))) {
				goto _iter_next_1ad519c0d;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last, _3617_i));;
				_3817_last=static_cast<jule::I32>((_3617_i + 1LL));
			};
		}
	_iter_next_1ad519c0d:;
	}
	_iter_end_1ad519c0d:;;
	if ((_3817_last < (*(_3351_tokens)).len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last));;
	} else {
		_1c4cd9be2_pushErr(_self_, (*(_3351_tokens))[(_3817_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1c4cda3a7_evalDirectiveIdent(_1c4cd9692_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad51ea8c:;
		if (it != expr_end) {
			jule::Str *_7716_var = it;
			{
				if (((*(_7716_var)) == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_1ad51ea8c:;
			++it;
			goto _iter_begin_1ad51ea8c;
		}
		_iter_end_1ad51ea8c:;
	};
	return false;;
}



inline jule::Bool _1c4cda6b5_evalDirectivePart(_1c4cd9692_directiveEval* _self_, jule::Slice<jule::Ptr<_2039861ab_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U32>(7LLU)) && _8740_part[0LL].get()._field_Kind.equal("!", 1));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1c4cd9be2_pushErr(_self_, _8740_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _1c4cda3a7_evalDirectiveIdent(_self_, _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _1c4cda929_eval(_1c4cd9692_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_1c4cd9be2_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _11317_logicalOrParts = _1c4cda099_splitOperans(_self_, jule::Str("||", 2), &((*(_self_))._field_d.get()._field_Args));;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_11317_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad525dc3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2039861ab_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _12021_logicalAndParts = _1c4cda099_splitOperans(_self_, jule::Str("&&", 2), &(_11821_part));;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_12021_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad5270c2:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_2039861ab_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_2039861ab_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U32>(3LLU)) && _12621_first.get()._field_Kind.equal("(", 1))) {
								jule::Ptr<_2039861ab_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U32>(3LLU)) || (!_12825_end.get()._field_Kind.equal(")", 1)))) {
									_1c4cd9be2_pushErr(_self_, _12621_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL, (_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1c4cda6b5_evalDirectivePart(_self_, _12525_andPart));
						}
						_iter_next_1ad5270c2:;
						++it;
						goto _iter_begin_1ad5270c2;
					}
					_iter_end_1ad5270c2:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1ad525dc3:;
			++it;
			goto _iter_begin_1ad525dc3;
		}
		_iter_end_1ad525dc3:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4cd9692_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9a21e2d_JuleImporter> static__1c482c746_New(_1c4cd833e_CompileInfo _5819_info) {
	jule::Ptr<_1a9a21e2d_JuleImporter> _5917_imp = jule::new_ptr<_1a9a21e2d_JuleImporter>(_1a9a21e2d_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1c222ac6d_PathStdlib}), });;
	_1c4cd8b58_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1c4aeeb28_ImportInfo>> _1a9965426_AllPackages(_1a9a21e2d_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a9980d8c_SetModPath(_1a9a21e2d_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1a99a351e_GetModPath(_1a9a21e2d_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a99b3089_ModById(_1a9a21e2d_JuleImporter* _self_, jule::I32 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1a9a174b7_GetImport(_1a9a21e2d_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad52e23e:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1ad52e23e:;
			++it;
			goto _iter_begin_1ad52e23e;
		}
		_iter_end_1ad52e23e:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log _1a9a41700_ImportPackage(_1a9a21e2d_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log __jule_func_result;
	jule::Slice<jule::Ptr<_205567a7c_DirEntry>> _9717_dirents = ({
		auto except = static__1c219515a_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1c2220900_Log>::make({_1c4828cc5_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_205567a7c_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1c4ce9839_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_1c2220900_Log> _10525_errs = _1c4ce9a6a_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1c4a59b93_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1c4a59b93_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad533276:;
		if (it != expr_end) {
			jule::Ptr<_205567a7c_DirEntry> _11316_dirent = *it;
			{
				if ((_2055756b1_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1c2189759_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1ad533276;
				};
				jule::Str _11917__path = _1c2193a4e_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_20398b546_File> _12021_file = _20398ca75_NewFileSet(_11917__path);;
				_20398bbc8_Fill(_12021_file.ptr(), _1c4821a59_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1c2220900_Log> _12221_errors = _203998421_Lex(_12021_file, static_cast<jule::I32>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a9aa4213_FileInfo> _12721_finfo = _1a9aeac71_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1c4cbda3e_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1ad533276;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_1c2220900_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9a50456_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1ad533276;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1ad533276:;
			++it;
			goto _iter_begin_1ad533276;
		}
		_iter_end_1ad533276:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a9a485b4_Imported(_1a9a21e2d_JuleImporter* _self_, jule::Ptr<_1c4aeeb28_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad538787:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1ad538787:;
			++it;
			goto _iter_begin_1ad538787;
		}
		_iter_end_1ad538787:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad53a05d:;
			if (it != expr_end) {
				jule::I32 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1ad53a05d:;
				++it;
				_16217_i++;
				goto _iter_begin_1ad53a05d;
			}
			_iter_end_1ad53a05d:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I32>((*(_self_))._field_mods.len());
		(*(_self_))._field_mods = jule::alloc_for_append((*(_self_))._field_mods,1);(*(_self_))._field_mods.__push((*(_self_))._field_mod);;
		_julec_label_setted:;
	};
	(*(_self_))._field_pkgs = jule::alloc_for_append((*(_self_))._field_pkgs,1);(*(_self_))._field_pkgs.__push(_15331_imp);;
}



inline __jule_tuple_bool__jule_tuple_s_1c2220900_Log _1a9a50456_isPassBuildDirectives(_1a9a21e2d_JuleImporter* _self_, jule::Ptr<_1c4a59b93_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1c2220900_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad53d182:;
		if (it != expr_end) {
			jule::Ptr<_1c4a5ad81_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_1ad53d182;
				};
				_1c4cd9692_directiveEval _18421_de = _1c4cd9692_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _1c4cda929_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1ad53d182:;
			++it;
			goto _iter_begin_1ad53d182;
		}
		_iter_end_1ad53d182:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9a21e2d_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c47ecbbc_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad55dc96_isCommonOrdered(jule::Slice<jule::Ptr<_1c4a86ebc_Struct>> _1834_s, jule::Ptr<_1c4a86ebc_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad55ed41:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad56065a:;
					if (it != expr_end) {
						jule::Ptr<_1c4a86ebc_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1ad56065a:;
						++it;
						goto _iter_begin_1ad56065a;
					}
					_iter_end_1ad56065a:;
				};
			}
			_iter_next_1ad55ed41:;
			++it;
			goto _iter_begin_1ad55ed41;
		}
		_iter_end_1ad55ed41:;
	};
	return true;;
}

inline jule::Bool _1ad563be1_isCommonOrdered(jule::Slice<jule::Ptr<_1c4b2c837_Var>> _1834_s, jule::Ptr<_1c4b2c837_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad564c47:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad565561:;
					if (it != expr_end) {
						jule::Ptr<_1c4b2c837_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1ad565561:;
						++it;
						goto _iter_begin_1ad565561;
					}
					_iter_end_1ad565561:;
				};
			}
			_iter_next_1ad564c47:;
			++it;
			goto _iter_begin_1ad564c47;
		}
		_iter_end_1ad564c47:;
	};
	return true;;
}



inline void _1ad55a468_orderCommon(jule::Slice<jule::Ptr<_1c4a86ebc_Struct>>* _3135_s) {
	jule::I32 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad55b9b9:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I32 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1ad55dc96_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I32>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1ad55c800:;
				}
				_iter_end_1ad55c800:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1ad55b9b9;
				};
				(_3217_n)--;
			}
			_iter_next_1ad55b9b9:;
			++it;
			goto _iter_begin_1ad55b9b9;
		}
		_iter_end_1ad55b9b9:;
	};
}

inline void _1ad55bbb7_orderCommon(jule::Slice<jule::Ptr<_1c4b2c837_Var>>* _3135_s) {
	jule::I32 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad561914:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I32 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1ad563be1_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I32>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1ad56274a:;
				}
				_iter_end_1ad56274a:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1ad561914;
				};
				(_3217_n)--;
			}
			_iter_next_1ad561914:;
			++it;
			goto _iter_begin_1ad561914;
		}
		_iter_end_1ad561914:;
	};
}



inline void static__1a99d2152_orderStructures(jule::Slice<jule::Ptr<_1c4a86ebc_Struct>>* _5136_structs) {
	_1ad55a468_orderCommon(_5136_structs);
}



inline void static__1a99d4022_orderVars(jule::Slice<jule::Ptr<_1c4b2c837_Var>>* _5730_vars) {
	_1ad55bbb7_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9b2de5d_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9c191e1_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1a9c503c0_optimizeChild(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Ptr<_1c4ad13bd_Scope>* _3938_s) {
	jule::Ptr<_1a9c4ede7_scopeDeadCode> _4017_sdc = jule::new_ptr<_1a9c4ede7_scopeDeadCode>(_1a9c4ede7_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1a9c52a10_optimizeStmts(_4017_sdc);
	};
}



inline void _1a9c50667_optimizeBodyChildExceptional(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Ptr<_1c4ad13bd_Scope>* _5053_s) {
	jule::Ptr<_1a9c4ede7_scopeDeadCode> _5117_sdc = jule::new_ptr<_1a9c4ede7_scopeDeadCode>(_1a9c4ede7_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1a9c52a10_optimizeStmts(_5117_sdc);
	};
}



inline void _1a9c508ed_optimizeBodyChild(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Ptr<_1c4ad13bd_Scope>* _6142_s) {
	jule::Ptr<_1a9c4ede7_scopeDeadCode> _6217_sdc = jule::new_ptr<_1a9c4ede7_scopeDeadCode>(_1a9c4ede7_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1a9c52a10_optimizeStmts(_6217_sdc);
	};
}



inline void _1a9c50b73_optimizeExprModel(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1a9c53d52_exprDeadCode _7213_edc = static__1a9c5447e_new(&(_self_));;
	_1a9c5a199_optimize(&_7213_edc, _7142_model);
}



inline void _1a9c50d4e_eliminateFollowed(_1a9c4ede7_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1a9c4ede7_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1ad5d59bb:;
	}
	_iter_end_1ad5d59bb:;;
}



inline void _1a9c510c4_pushGoto(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Ptr<_1c4ad3de8_GotoSt> _9232_gt) {
	jule::I32 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1ad5d83a3:;
	}
	_iter_end_1ad5d83a3:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1c4ad3de8_GotoSt>>::make({_9232_gt}));
}



inline void _1a9c51349_pushLabel(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Ptr<_1c4ad3b0c_Label> _10233_l) {
	jule::I32 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1ad5d9b13;
			};
			(_10317_i)++;
		}
	_iter_next_1ad5d9b13:;
	}
	_iter_end_1ad5d9b13:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1c4ad3b0c_Label>>::make({_10233_l}));
}



inline void _1a9c515be_optimizeRangeIter(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Ptr<_1c4ad306d_RangeIter> _11541_it) {
	_1a9c50b73_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1a9c508ed_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1a9c51844_optimizeWhileIter(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Ptr<_1c4ad2688_WhileIter> _12041_it) {
	_1a9c50b73_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1a9c52834_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1a9c508ed_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1a9c51ab9_optimizeInfIter(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Ptr<_1c4ad2215_InfIter> _12839_it) {
	_1a9c508ed_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1a9c51d3e_optimizeConditional(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Ptr<_1c4ad1e29_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5e0b5d:;
		if (it != expr_end) {
			jule::Ptr<_1c4ad17b9_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1a9c50b73_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1a9c508ed_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_1ad5e0b5d:;
			++it;
			goto _iter_begin_1ad5e0b5d;
		}
		_iter_end_1ad5e0b5d:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1a9c503c0_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1a9c508ed_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1a9c520b4_optimizeMatch(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Ptr<_1c4ad5119_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5e36dd:;
		if (it != expr_end) {
			jule::Ptr<_1c4ad5b64_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad5e4007:;
					if (it != expr_end) {
						jule::Ptr<_1c45e6e17_Data> _15225_expr = *it;
						{
							_1a9c50b73_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_1ad5e4007:;
						++it;
						goto _iter_begin_1ad5e4007;
					}
					_iter_end_1ad5e4007:;
				};
				_1a9c508ed_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_1ad5e36dd:;
			++it;
			goto _iter_begin_1ad5e36dd;
		}
		_iter_end_1ad5e36dd:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1a9c503c0_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1a9c508ed_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1a9c52339_optimizeAssign(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Ptr<_1c4ad4723_Assign> _16838_assign) {
	_1a9c50b73_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1a9c50b73_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1a9c525ae_optimizeMultiAssign(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Ptr<_1c4ad4aca_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5e7390:;
		if (it != expr_end) {
			jule::Ptr<_1c45e6e17_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1a9c50b73_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_1ad5e7390:;
			++it;
			goto _iter_begin_1ad5e7390;
		}
		_iter_end_1ad5e7390:;
	};
	_1a9c50b73_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1a9c52834_optimizeStmt(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ad5e8a23:;
			{
				jule::Ptr<_1c4ad13bd_Scope> _18521_scope = _18236_st.cast_ptr<_1c4ad13bd_Scope>(&__jule_any_type21);;
				if (_18521_scope.get()._field_Deferred) {
					_1a9c52ceb_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1a9c503c0_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ad5e8b99:;
			{
				_1a9c515be_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1c4ad306d_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ad5e8c10:;
			{
				_1a9c51844_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1c4ad2688_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ad5e8c76:;
			{
				_1a9c51ab9_optimizeInfIter(_self_, _18236_st.cast_ptr<_1c4ad2215_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ad5e8ced:;
			{
				_1a9c51d3e_optimizeConditional(_self_, _18236_st.cast_ptr<_1c4ad1e29_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ad5e8d75:;
			{
				_1a9c520b4_optimizeMatch(_self_, _18236_st.cast_ptr<_1c4ad5119_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad5e8dec:;
			{
				_1a9c52339_optimizeAssign(_self_, _18236_st.cast_ptr<_1c4ad4723_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ad5e8e74:;
			{
				_1a9c525ae_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1c4ad4aca_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad5e8eeb:;
			{
				jule::Ptr<_1c45e6e17_Data> _20621_d = _18236_st.cast_ptr<_1c45e6e17_Data>(&__jule_any_type23);;
				if (_self_.get()._field_except) {
					goto _match_end_1ad5e8b33;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1ad5eddad:;
						{
							_1a9c50d4e_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1ad5ee3ca:;
						{
							_1a9c50b73_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_1ad5ee375:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ad5e9073:;
			{
				_1a9c50d4e_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ad5e90ea:;
			{
				_1a9c510c4_pushGoto(_self_, _18236_st.cast_ptr<_1c4ad3de8_GotoSt>(&__jule_any_type42));
				_1a9c50d4e_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ad5e9172:;
			{
				_1a9c51349_pushLabel(_self_, _18236_st.cast_ptr<_1c4ad3b0c_Label>(&__jule_any_type20));
			}
		}
		_match_end_1ad5e8b33:;
	};
}



inline void _1a9c52a10_optimizeStmts(jule::Ptr<_1a9c4ede7_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1a9c52834_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1ad6017c8:;
	}
	_iter_end_1ad6017c8:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9c4ede7_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1a9c53d52_exprDeadCode static__1a9c5447e_new(jule::Ptr<_1a9c4ede7_scopeDeadCode>* _5024_s) {
	return _1a9c53d52_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1a9c54704_binary(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aab970_BinopExprModel> _5625_m) {
	_1a9c5a199_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1a9c5a199_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1a9c54979_unary(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aabb5c_UnaryExprModel> _6124_m) {
	_1a9c5a199_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1a9c54bee_structureLit(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aac036_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad60490d:;
		if (it != expr_end) {
			jule::Ptr<_1c4aabd49_StructArgExprModel> _6621_arg = *it;
			{
				_1a9c5a199_optimize(_self_, &(_6621_arg.get()._field_Expr));
			}
			_iter_next_1ad60490d:;
			++it;
			goto _iter_begin_1ad60490d;
		}
		_iter_end_1ad60490d:;
	};
}



inline void _1a9c54e74_allocStructure(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aac223_AllocStructLitExprModel> _7133_m) {
	_1a9c54bee_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1a9c551e9_casting(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aac410_CastingExprModel> _7526_m) {
	_1a9c5a199_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1a9c5546e_args(_1a9c53d52_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad606aec:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1a9c5a199_optimize(_self_, &(_8021_arg));
			}
			_iter_next_1ad606aec:;
			++it;
			goto _iter_begin_1ad606aec;
		}
		_iter_end_1ad606aec:;
	};
}



inline void _1a9c556e4_funcCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aac5ec_FnCallExprModel> _8527_m) {
	_1a9c5a199_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1a9c5546e_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1a9c50667_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1a9c55969_slice(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aac7d9_SliceExprModel> _9324_m) {
	_1a9c5546e_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1a9c55bde_array(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aadc5d_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1a9c5a199_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1a9c5546e_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1a9c55e64_indexing(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aac9c6_IndexingExprModel> _10427_m) {
	_1a9c5a199_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1a9c5a199_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1a9c561d9_anonFunc(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aacbb3_AnonFnExprModel> _10927_m) {
	_1a9c52ceb_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1a9c5645e_mapExpr(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aad08c_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad60c8e4:;
		if (it != expr_end) {
			jule::Ptr<_1c4aacda0_KeyValPairExprModel> _11421_pair = *it;
			{
				_1a9c5a199_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1a9c5a199_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_1ad60c8e4:;
			++it;
			goto _iter_begin_1ad60c8e4;
		}
		_iter_end_1ad60c8e4:;
	};
}



inline void _1a9c566d4_slicing(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aad279_SlicingExprModel> _12026_m) {
	_1a9c5a199_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1a9c5a199_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1a9c5a199_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1a9c56959_traitSub(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aad466_TraitSubIdentExprModel> _12827_m) {
	_1a9c5a199_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1a9c56bce_structureSub(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aad884_StructSubIdentExprModel> _13231_m) {
	_1a9c5a199_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1a9c56e54_commonSub(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aae137_CommonSubIdentExprModel> _13628_m) {
	_1a9c5a199_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1a9c571c9_tuple(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aae324_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad611c8e:;
		if (it != expr_end) {
			jule::Ptr<_1c45e6e17_Data> _14121_d = *it;
			{
				_1a9c5a199_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_1ad611c8e:;
			++it;
			goto _iter_begin_1ad611c8e;
		}
		_iter_end_1ad611c8e:;
	};
}



inline void _1a9c5744e_newCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aaeac7_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1a9c5a199_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1a9c576c4_outCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aae511_BuiltinOutCallExprModel> _15226_m) {
	_1a9c5a199_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1a9c57949_outlnCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aae6ed_BuiltinOutlnCallExprModel> _15628_m) {
	_1a9c5a199_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1a9c57bbe_panicCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aaecb4_BuiltinPanicCallExprModel> _16028_m) {
	_1a9c5a199_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1a9c57e44_assertCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aaeea1_BuiltinAssertCallExprModel> _16429_m) {
	_1a9c5a199_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1a9c581b9_errorCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4ab10a1_BuiltinErrorCallExprModel> _16828_m) {
	_1a9c5a199_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1a9c5843e_makeCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4ab018d_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1a9c5a199_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1a9c5a199_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1a9c586b4_appendCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4ab037a_BuiltinAppendCallExprModel> _18129_m) {
	_1a9c5a199_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1a9c5a199_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1a9c58939_lenCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4ab0567_BuiltinLenCallExprModel> _18626_m) {
	_1a9c5a199_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1a9c58bae_capCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4ab0754_BuiltinCapCallExprModel> _19026_m) {
	_1a9c5a199_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1a9c58e34_cloneCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aae8da_BuiltinCloneCallExprModel> _19428_m) {
	_1a9c5a199_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1a9c591a9_deleteCall(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4aad653_BuiltinDeleteCallExprModel> _19829_m) {
	_1a9c5a199_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1a9c5a199_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1a9c5942e_sizeof(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4ab128d_SizeofExprModel> _20525_m) {
	_1a9c5a199_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1a9c596a4_alignof(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4ab147a_AlignofExprModel> _20926_m) {
	_1a9c5a199_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1a9c59929_integratedToStr(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4ab1854_IntegratedToStrExprModel> _21334_m) {
	_1a9c5a199_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1a9c59b9e_free(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4ab1c2d_FreeExprModel> _21723_m) {
	_1a9c5a199_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1a9c59e24_backendEmit(_1a9c53d52_exprDeadCode* _self_, jule::Ptr<_1c4ab1a41_BackendEmitExprModel> _22130_m) {
	_1a9c5546e_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1a9c5a199_optimize(_1a9c53d52_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad61e4d8:;
			{
				_1a9c54704_binary(_self_, (*(_22528_model)).cast_ptr<_1c4aab970_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ad61e560:;
			{
				_1a9c54979_unary(_self_, (*(_22528_model)).cast_ptr<_1c4aabb5c_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ad61e5d7:;
			{
				_1a9c54bee_structureLit(_self_, (*(_22528_model)).cast_ptr<_1c4aac036_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ad61e9b1:;
			{
				_1a9c54e74_allocStructure(_self_, (*(_22528_model)).cast_ptr<_1c4aac223_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ad61ea27:;
			{
				_1a9c551e9_casting(_self_, (*(_22528_model)).cast_ptr<_1c4aac410_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad61ea9e:;
			{
				_1a9c556e4_funcCall(_self_, (*(_22528_model)).cast_ptr<_1c4aac5ec_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1ad61eb26:;
			{
				_1a9c55969_slice(_self_, (*(_22528_model)).cast_ptr<_1c4aac7d9_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ad61eb9d:;
			{
				_1a9c55bde_array(_self_, (*(_22528_model)).cast_ptr<_1c4aadc5d_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad61ec25:;
			{
				_1a9c55e64_indexing(_self_, (*(_22528_model)).cast_ptr<_1c4aac9c6_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ad61ec9c:;
			{
				_1a9c561d9_anonFunc(_self_, (*(_22528_model)).cast_ptr<_1c4aacbb3_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ad61ed24:;
			{
				_1a9c5645e_mapExpr(_self_, (*(_22528_model)).cast_ptr<_1c4aad08c_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad61ed9b:;
			{
				_1a9c566d4_slicing(_self_, (*(_22528_model)).cast_ptr<_1c4aad279_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ad61ee23:;
			{
				_1a9c56959_traitSub(_self_, (*(_22528_model)).cast_ptr<_1c4aad466_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ad61ee9a:;
			{
				_1a9c56bce_structureSub(_self_, (*(_22528_model)).cast_ptr<_1c4aad884_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ad620022:;
			{
				_1a9c56e54_commonSub(_self_, (*(_22528_model)).cast_ptr<_1c4aae137_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ad620099:;
			{
				_1a9c571c9_tuple(_self_, (*(_22528_model)).cast_ptr<_1c4aae324_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ad620121:;
			{
				_1a9c576c4_outCall(_self_, (*(_22528_model)).cast_ptr<_1c4aae511_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ad620198:;
			{
				_1a9c57949_outlnCall(_self_, (*(_22528_model)).cast_ptr<_1c4aae6ed_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ad620220:;
			{
				_1a9c5744e_newCall(_self_, (*(_22528_model)).cast_ptr<_1c4aaeac7_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ad620297:;
			{
				_1a9c57bbe_panicCall(_self_, (*(_22528_model)).cast_ptr<_1c4aaecb4_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ad62031e:;
			{
				_1a9c57e44_assertCall(_self_, (*(_22528_model)).cast_ptr<_1c4aaeea1_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ad620396:;
			{
				_1a9c581b9_errorCall(_self_, (*(_22528_model)).cast_ptr<_1c4ab10a1_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ad62041d:;
			{
				_1a9c5843e_makeCall(_self_, (*(_22528_model)).cast_ptr<_1c4ab018d_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ad620495:;
			{
				_1a9c586b4_appendCall(_self_, (*(_22528_model)).cast_ptr<_1c4ab037a_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ad62051c:;
			{
				_1a9c58939_lenCall(_self_, (*(_22528_model)).cast_ptr<_1c4ab0567_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1ad620594:;
			{
				_1a9c58bae_capCall(_self_, (*(_22528_model)).cast_ptr<_1c4ab0754_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ad62061b:;
			{
				_1a9c58e34_cloneCall(_self_, (*(_22528_model)).cast_ptr<_1c4aae8da_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ad620693:;
			{
				_1a9c591a9_deleteCall(_self_, (*(_22528_model)).cast_ptr<_1c4aad653_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1ad62071a:;
			{
				_1a9c5942e_sizeof(_self_, (*(_22528_model)).cast_ptr<_1c4ab128d_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1ad620792:;
			{
				_1a9c596a4_alignof(_self_, (*(_22528_model)).cast_ptr<_1c4ab147a_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1ad620819:;
			{
				_1a9c59929_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_1c4ab1854_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad620891:;
			{
				_1a9c59b9e_free(_self_, (*(_22528_model)).cast_ptr<_1c4ab1c2d_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ad620918:;
			{
				_1a9c59e24_backendEmit(_self_, (*(_22528_model)).cast_ptr<_1c4ab1a41_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_1ad61e6d6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a9c53d52_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1e783a0_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c48999a0_StrAppendExprModel _Src) {
	_Stream << "StrAppendExprModel{";
	_Stream << "Str:" << _Src._field_Str << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1deca1c_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c48a5deb_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1dc96db_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1e2756e_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1e0ec4e_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c485b1c0_scopeOptimizer> static__1c1dc9202_new(jule::Ptr<_1c4ad13bd_Scope> _4623_scope) {
	return jule::new_ptr<_1c485b1c0_scopeOptimizer>(_1c485b1c0_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1c1dcb37a_setCurrentStmt(_1c485b1c0_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1c1dce9bb_optimizeData(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c45e6e17_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad65b9dc:;
			{
				jule::Ptr<_1c4aac5ec_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_1c4aac5ec_FnCallExprModel>(&__jule_any_type34);;
				if (_2037bbbe5_Production) {
					if (((!(_1c4ab4d85_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _1c1e22118_isStdPackage(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_1c1dcb37a_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1ad65b7cd:;
	};
	static__1c1e1e434_optimize(&(_5635_d.get()._field_Model));
}



inline void _1c1ddc91e_optimizeVar(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4b2c837_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__1c1e1e434_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1c1e19781_optimizeConditional(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad1e29_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad65e9bd:;
		if (it != expr_end) {
			jule::Ptr<_1c4ad17b9_If> _7821_elif = *it;
			{
				static__1c1e1e434_optimize(&(_7821_elif.get()._field_Expr));
				_1c1dd1616_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_1ad65e9bd:;
			++it;
			goto _iter_begin_1ad65e9bd;
		}
		_iter_end_1ad65e9bd:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_1c1dd1616_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1c1dee986_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6617c2:;
		if (it != expr_end) {
			jule::I32 _9314_i = it - expr->begin();
			jule::Ptr<_1c4ad17b9_If> _9321_elif = *it;
			{
				if ((!(_1c1e63dd5_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_1ad6617c2;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_1c4ad1aa5_Else>(_1c4ad1aa5_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_1ad6617c2;
			}
			_iter_next_1ad6617c2:;
			++it;
			_9314_i++;
			goto _iter_begin_1ad6617c2;
		}
		_iter_end_1ad6617c2:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c4ad17b9_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1c4ad17b9_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_1c1dcc7dd_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_1ad66495c:;
	}
	_iter_end_1ad66495c:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I32 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6660ac:;
		if (it != expr_end) {
			jule::I32 _13013_j = it - expr->begin();
			jule::Ptr<_1c4ad17b9_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_1ad6660ac:;
			++it;
			_13013_j++;
			goto _iter_begin_1ad6660ac;
		}
		_iter_end_1ad6660ac:;
	};
	if ((_12917_only != -1LL)) {
		_1c1dcb37a_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type21));
	};
}



inline void _1c1e29076_buildDefaultConstatTrueCase(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad5b64_Case> _14650_case, jule::I32* _14668_i, jule::Ptr<_1c4ad5119_Match>* _14681_m) {
	_14650_case.get()._field_Exprs=nullptr;
	jule::I32 _14813_start = (*(_14668_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14650_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1ad668a2c;
			};
			jule::Any *_15422_stmt = &(_14650_case.get()._field_Scope.get()._field_Stmts[(_14650_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_1ad669038:;
					{
						((*(_14668_i)))++;
						if (((*(_14668_i)) >= (*(_14681_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14681_m)).get()._field_Default.get()._field_Scope, &__jule_any_type21);
							goto _iter_end_1ad668a2c;
						};
						_14650_case=(*(_14681_m)).get()._field_Cases[(*(_14668_i))];
						(*(_15422_stmt))=jule::Any(_14650_case.get()._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_1ad66a567:;
					{
						goto _iter_end_1ad668a2c;
					}
				}
				_match_end_1ad66a479:;
			};
		}
	_iter_next_1ad668a2c:;
	}
	_iter_end_1ad668a2c:;;
	(*(_14681_m)).get()._field_Default=(*(_14681_m)).get()._field_Cases[_14813_start];
	(*(_14681_m)).get()._field_Cases=(*(_14681_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _1c1e39691_optimizeMatch(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad5119_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad66c5be:;
		if (it != expr_end) {
			jule::Ptr<_1c4ad5b64_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad66ce0a:;
					if (it != expr_end) {
						jule::Ptr<_1c45e6e17_Data> _17425_expr = *it;
						{
							static__1c1e1e434_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_1ad66ce0a:;
						++it;
						goto _iter_begin_1ad66ce0a;
					}
					_iter_end_1ad66ce0a:;
				};
				_1c1dd1616_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_1ad66c5be:;
			++it;
			goto _iter_begin_1ad66c5be;
		}
		_iter_end_1ad66c5be:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_1c1dd1616_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1c1dee986_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad66ea11:;
		if (it != expr_end) {
			jule::I32 _19018_i = it - expr->begin();
			jule::Ptr<_1c4ad5b64_Case> _19025_case = *it;
			{
				if ((!(_1c48a93a5_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_1ad66ea11;
				};
				_18717_constCase=true;
				_1c1e29076_buildDefaultConstatTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_1ad66ea11;
			}
			_iter_next_1ad66ea11:;
			++it;
			_19018_i++;
			goto _iter_begin_1ad66ea11;
		}
		_iter_end_1ad66ea11:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c4ad5b64_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1c4ad5b64_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_1c1e1568e_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_1ad6726b2:;
	}
	_iter_end_1ad6726b2:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I32 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad67376d:;
		if (it != expr_end) {
			jule::I32 _22013_j = it - expr->begin();
			jule::Ptr<_1c4ad5b64_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_1ad67376d:;
			++it;
			_22013_j++;
			goto _iter_begin_1ad67376d;
		}
		_iter_end_1ad67376d:;
	};
	if ((_21917_only != -1LL)) {
		_1c1dcb37a_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type21));
	};
}



inline void _1c1e4d012_optimizeRangeIter(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad306d_RangeIter> _23640_it) {
	static__1c1e1e434_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_1c1dd1616_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _1c1e5b152_optimizeWhileIter(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad2688_WhileIter> _24140_it) {
	static__1c1e1e434_optimize(&(_24140_it.get()._field_Expr));
	_1c1dcb4e0_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_1c1dd1616_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _1c4881ea4_substr(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad4723_Assign> _24729_a) {
	if ((!_24729_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad677dc1:;
			{
				jule::Ptr<_1c4aad279_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_1c4aad279_SlicingExprModel>(&__jule_any_type98);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_1c1dcb37a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c1e2756e_MutSlicingExprModel>(_1c1e2756e_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type126));
					return true;;
				};
			}
		}
		_match_end_1ad677d49:;
	};
	return false;;
}



inline jule::Bool _1c48a7084_strInsert(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad4723_Assign> _26732_a) {
	if ((!_26732_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _26732_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad67a80d:;
			{
				jule::Ptr<_1c4aab970_BinopExprModel> _27321_m = _26732_a.get()._field_R.get()._field_Model.cast_ptr<_1c4aab970_BinopExprModel>(&__jule_any_type117);;
				if ((_27321_m.get()._field_Right.get()._field_Model == _26732_a.get()._field_L.get()._field_Model)) {
					_1c1dcb37a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c1e0ec4e_StrInsertBeginExprModel>(_1c1e0ec4e_StrInsertBeginExprModel{._field_Dest=_26732_a.get()._field_L.get()._field_Model, ._field_Expr=_27321_m.get()._field_Left.get()._field_Model}), &__jule_any_type127));
					return true;;
				};
			}
		}
		_match_end_1ad67a786:;
	};
	return false;;
}



inline jule::Bool _1c498a992_strAppend(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad4723_Assign> _28532_a) {
	if ((!_28532_a.get()._field_Op.get()._field_Kind.equal("+=", 2))) {
		return false;;
	};
	{
		auto &_match_expr{ _28532_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ad67d24a:;
			{
				_1c1dcb37a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c48999a0_StrAppendExprModel>(_1c48999a0_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_28532_a.get()._field_R.get()._field_Model}), &__jule_any_type128));
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ad67d2b1:;
			{
				jule::Ptr<_1c4aac410_CastingExprModel> _30021_c = _28532_a.get()._field_R.get()._field_Model.cast_ptr<_1c4aac410_CastingExprModel>(&__jule_any_type100);;
				jule::Ptr<_1c4b6197b_Prim> _30121_prim = _1c4b5e45c_Prim(_30021_c.get()._field_ExprKind.ptr());;
				if (((_30121_prim == nullptr) && (_1c4b5eeeb_Slc(_30021_c.get()._field_ExprKind.ptr()) != nullptr))) {
					_30121_prim=_1c4b5e45c_Prim(_1c4b5eeeb_Slc(_30021_c.get()._field_ExprKind.ptr()).get()._field_Elem.ptr());
				};
				if (((_30121_prim == nullptr) || ((!(_1c4b63285_IsU8(_30121_prim.ptr()))) && (!(_1c4b62cac_IsI32(_30121_prim.ptr())))))) {
					goto _match_end_1ad67d1c3;
				};
				_1c1dcb37a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c48999a0_StrAppendExprModel>(_1c48999a0_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_30021_c.get()._field_Expr}), &__jule_any_type128));
				return true;;
			}
		}
		_match_end_1ad67d1c3:;
	};
	return false;;
}



inline jule::Bool _1c499c267_strAssign(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad4723_Assign> _31732_a) {
	if ((!(_1c1e009a9_Str))) {
		return false;;
	};
	jule::Ptr<_1c4b6197b_Prim> _32113_lp = _1c4b5e45c_Prim(_31732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_32113_lp == nullptr) || (!(_1c4b64bb0_IsStr(_32113_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_1c4881ea4_substr(_self_, _31732_a) || _1c48a7084_strInsert(_self_, _31732_a) || _1c498a992_strAppend(_self_, _31732_a)) {
			_case_begin_1ad683e21:;
			{
				return true;;
			}
		}
		_match_end_1ad683d77:;
	};
	return false;;
}



inline void _1c49b127b_optimizeAssign(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad4723_Assign> _33437_assign) {
	if (_1c499c267_strAssign(_self_, _33437_assign)) {
		return;;
	};
	static__1c1e1e434_optimize(&(_33437_assign.get()._field_L.get()._field_Model));
	static__1c1e1e434_optimize(&(_33437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _33437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1ad685e12:;
			{
				if ((_1c1de97a5_Math && (_1c4b604c4_Struct(_33437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_33437_assign.get()._field_Op.get()._field_Kind=_33437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_33437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _34725_model = jule::Any(jule::new_ptr<_1c4aab970_BinopExprModel>(_1c4aab970_BinopExprModel{._field_Left=_33437_assign.get()._field_L, ._field_Right=_33437_assign.get()._field_R, ._field_Op=_33437_assign.get()._field_Op}), &__jule_any_type117);;
					static__1c1e1e434_optimize(&(_34725_model));
					{
						auto &_match_expr{ _34725_model };
						
						if (_match_expr.type == &__jule_any_type117) {
							_case_begin_1ad6882cc:;
							{
								_33437_assign.get()._field_R=jule::new_ptr<_1c4aab783_OperandExprModel>((*(_33437_assign.get()._field_R)));
								_33437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_33437_assign.get()._field_R.get()._field_Model=_34725_model;
								return;;
							}
						}
						_match_end_1ad688079:;
					};
					(_33437_assign.get()._field_Op.get()._field_Kind).append("=", 1);
					return;;
				};
			}
		}
		_match_end_1ad685d02:;
	};
	if (_1c1de8782_Append) {
		{
			auto &_match_expr{ _33437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_1ad689d6c:;
				{
					jule::Ptr<_1c4ab037a_BuiltinAppendCallExprModel> _36825_m = _33437_assign.get()._field_R.get()._field_Model.cast_ptr<_1c4ab037a_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					{
						auto &_match_expr{ _36825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type83) {
							_case_begin_1ad68add4:;
							{
								{
									auto &_match_expr{ _36825_m.get()._field_Dest };
									
									if (_match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type71) {
										_case_begin_1ad68b665:;
										{
											_1c1dcb37a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c1dc96db_PushToSliceExprModel>(_1c1dc96db_PushToSliceExprModel{._field_Dest=_36825_m.get()._field_Dest, ._field_Elems=_36825_m.get()._field_Elements.cast_ptr<_1c4aac7d9_SliceExprModel>(&__jule_any_type83)}), &__jule_any_type129));
										}
									}
									_match_end_1ad68b610:;
								};
							}
						}
						_match_end_1ad68abc5:;
					};
				}
			}
			_match_end_1ad6869e5:;
		};
	};
}



inline void _1c49c61d6_optimizeMultiAssign(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad4aca_MultiAssign> _38442_assign) {
	{
		auto expr = &(_38442_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad68a279:;
		if (it != expr_end) {
			jule::Ptr<_1c45e6e17_Data> _38521_l = *it;
			{
				if ((_38521_l != nullptr)) {
					static__1c1e1e434_optimize(&(_38521_l.get()._field_Model));
				};
			}
			_iter_next_1ad68a279:;
			++it;
			goto _iter_begin_1ad68a279;
		}
		_iter_end_1ad68a279:;
	};
	static__1c1e1e434_optimize(&(_38442_assign.get()._field_R));
}



inline void _1c1e2775b_optimizeRet(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad658d_RetSt> _39334_r) {
	static__1c1e1e434_optimize(&(_39334_r.get()._field_Expr));
}



inline void _1c1dcb4e0_optimizeStmt(_1c485b1c0_scopeOptimizer* _self_, jule::Any _39735_stmt) {
	{
		auto &_match_expr{ _39735_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ad68da85:;
			{
				_1c1dd1616_optimizeChild(_self_, _39735_stmt.cast_ptr<_1c4ad13bd_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad68db0c:;
			{
				_1c1dce9bb_optimizeData(_self_, _39735_stmt.cast_ptr<_1c45e6e17_Data>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad68db84:;
			{
				_1c1ddc91e_optimizeVar(_self_, _39735_stmt.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ad68dc0b:;
			{
				_1c1e19781_optimizeConditional(_self_, _39735_stmt.cast_ptr<_1c4ad1e29_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ad68dc83:;
			{
				_1c1e4d012_optimizeRangeIter(_self_, _39735_stmt.cast_ptr<_1c4ad306d_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ad68dd0a:;
			{
				_1c1e5b152_optimizeWhileIter(_self_, _39735_stmt.cast_ptr<_1c4ad2688_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ad68dd82:;
			{
				_1c1dd1616_optimizeChild(_self_, _39735_stmt.cast_ptr<_1c4ad2215_InfIter>(&__jule_any_type36).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad68de09:;
			{
				_1c49b127b_optimizeAssign(_self_, _39735_stmt.cast_ptr<_1c4ad4723_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ad68de81:;
			{
				_1c49c61d6_optimizeMultiAssign(_self_, _39735_stmt.cast_ptr<_1c4ad4aca_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ad68e008:;
			{
				_1c1e39691_optimizeMatch(_self_, _39735_stmt.cast_ptr<_1c4ad5119_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ad68e080:;
			{
				_1c1e2775b_optimizeRet(_self_, _39735_stmt.cast_ptr<_1c4ad658d_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_1ad68d8cb:;
	};
}



inline void _1c1dd1616_optimizeChild(_1c485b1c0_scopeOptimizer* _self_, jule::Ptr<_1c4ad13bd_Scope> _42436_child) {
	jule::Ptr<_1c485b1c0_scopeOptimizer> _42517_so = static__1c1dc9202_new(_42436_child);;
	_1c1e1de17_optimize(_42517_so.ptr());
}



inline void _1c1e1de17_optimize(_1c485b1c0_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad695163:;
		if (it != expr_end) {
			jule::I32 _43114_i = it - expr->begin();
			jule::Any _43121_stmt = *it;
			{
				(*(_self_))._field_i=_43114_i;
				_1c1dcb4e0_optimizeStmt(_self_, _43121_stmt);
			}
			_iter_next_1ad695163:;
			++it;
			_43114_i++;
			goto _iter_begin_1ad695163;
		}
		_iter_end_1ad695163:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c485b1c0_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1c1e1e434_optimize(jule::Any* _5829_model) {
	if (_1a9b52778_exprEnabled) {
		jule::Ptr<_1c485b3ac_exprOptimizer> _6121_exop = jule::new_ptr<_1c485b3ac_exprOptimizer>(_1c485b3ac_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_1c4c222cd_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1c1e824ca_strCond(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aab970_BinopExprModel> _6826_m) {
	jule::Ptr<_1c4b6197b_Prim> _6913_lp = _1c4b5e45c_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1c4b64bb0_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((!_6826_m.get()._field_Op.get()._field_Kind.equal("==", 2)) && (!_6826_m.get()._field_Op.get()._field_Kind.equal("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ad69da51:;
			{
				({
					jule::Ptr<_1c4aab783_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1c4aab783_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1ad69d9eb:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ad69d2c0:;
			{
				goto _match_end_1ad69e546;
			}
		}
		else {
			_case_begin_1ad69eada:;
			{
				return true;;
			}
		}
		_match_end_1ad69e546:;
	};
	_julec_label_opt:;
	jule::Ptr<_1c25bc4e9_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1c25bc4e9_Const>(&__jule_any_type47);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1ad6a0ba7:;
			{
				if (_1c3178192_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1c4aae137_CommonSubIdentExprModel>(_1c4aae137_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_1ad6a0b52;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_1c1e783a0_StrCompExprModel>(_1c1e783a0_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type130);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad6a0c1d:;
			{
				if (_1c3178192_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_2039861ab_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1c4aabb5c_UnaryExprModel>(_1c4aabb5c_UnaryExprModel{._field_Expr=jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Model=jule::Any(jule::new_ptr<_1c4aae137_CommonSubIdentExprModel>(_1c4aae137_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_1ad6a0b52;
				};
				jule::Any _12121_model = jule::Any(jule::new_ptr<_1c1e783a0_StrCompExprModel>(_1c1e783a0_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type130);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12121_model))))));
			}
		}
		_match_end_1ad6a0b52:;
	};
	return true;;
}



inline void _1c1dcc29e_binary(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aab970_BinopExprModel> _13125_m) {
	static__1c1e1e434_optimize(&(_13125_m.get()._field_Left.get()._field_Model));
	static__1c1e1e434_optimize(&(_13125_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13125_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ad6a77a2:;
			{
				goto _match_end_1ad6a72a7;
			}
		}
		else {
			_case_begin_1ad6a7362:;
			{
				return;;
			}
		}
		_match_end_1ad6a72a7:;
	};
	if ((_1c1dee986_Cond && _1c1e824ca_strCond(_self_, _13125_m))) {
		return;;
	};
	if ((!(_1c1de97a5_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13125_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad6a8374:;
			{
				jule::Bool _15118_ok = false;;
				jule::U64 _15122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1c4c22410_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15118_ok = __jule_assign_result.__jule_result_arg0;
					_15122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15118_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1c25bc4e9_Const> _15425_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1c25bc4e9_Const>(&__jule_any_type47);;
					_1c31788ce_SetU64(_15425_c.ptr(), _15122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ad6a83eb:;
			{
				jule::Bool _15918_ok = false;;
				jule::U64 _15922_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1c4c22410_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15918_ok = __jule_assign_result.__jule_result_arg0;
					_15922_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15918_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1c25bc4e9_Const> _16225_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1c25bc4e9_Const>(&__jule_any_type47);;
					_1c31788ce_SetU64(_16225_c.ptr(), _15922_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad6a8473:;
			{
				jule::Ptr<_1c25bc4e9_Const> _16721_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1c25bc4e9_Const>(&__jule_any_type47);;
				jule::F64 _16817_d = _1c317866a_AsF64(_16721_c.ptr());;
				if ((_16817_d == 2LL)) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1c317879c_SetI64(_16721_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1ad6a82ec:;
	};
	jule::Any _17417_model = jule::Any(jule::new_ptr<_1c1deca1c_UnsafeBinopExprModel>(_1c1deca1c_UnsafeBinopExprModel{._field_Node=_13125_m}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17417_model))))));
}



inline void _1c1e0498b_unary(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aabb5c_UnaryExprModel> _17824_m) {
	static__1c1e1e434_optimize(&(_17824_m.get()._field_Expr.get()._field_Model));
	if ((_1c1dec81e_Ptr && _17824_m.get()._field_Op.get()._field_Kind.equal("*", 1))) {
		{
			auto &_match_expr{ _17824_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_1ad6b0238:;
				{
					jule::Ptr<_1c4aabb5c_UnaryExprModel> _18325_um = _17824_m.get()._field_Expr.get()._field_Model.cast_ptr<_1c4aabb5c_UnaryExprModel>(&__jule_any_type74);;
					if (_18325_um.get()._field_Op.get()._field_Kind.equal("&", 1)) {
						(*((*(_self_))._field_model))=_18325_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1ad6b01d3:;
		};
	};
}



inline void _1c1e12d84_structureLit(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aac036_StructLitExprModel> _19131_m) {
	{
		auto expr = &(_19131_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6b1c51:;
		if (it != expr_end) {
			jule::Ptr<_1c4aabd49_StructArgExprModel> _19221_arg = *it;
			{
				static__1c1e1e434_optimize(&(_19221_arg.get()._field_Expr));
			}
			_iter_next_1ad6b1c51:;
			++it;
			goto _iter_begin_1ad6b1c51;
		}
		_iter_end_1ad6b1c51:;
	};
}



inline void _1c1e1dc2a_allocStructure(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aac223_AllocStructLitExprModel> _19733_m) {
	_1c1e12d84_structureLit(_self_, _19733_m.get()._field_Lit);
}



inline void _1c1e24a44_casting(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aac410_CastingExprModel> _20126_m) {
	static__1c1e1e434_optimize(&(_20126_m.get()._field_Expr));
}



inline void _1c1e29ede_args(_1c485b3ac_exprOptimizer* _self_, jule::Slice<jule::Any>* _20524_args) {
	{
		auto expr = _20524_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6b3703:;
		if (it != expr_end) {
			jule::I32 _20614_i = it - expr->begin();
			jule::Any _20621_arg = *it;
			{
				static__1c1e1e434_optimize(&(_20621_arg));
				(*(_20524_args))[_20614_i]=_20621_arg;
			}
			_iter_next_1ad6b3703:;
			++it;
			_20614_i++;
			goto _iter_begin_1ad6b3703;
		}
		_iter_end_1ad6b3703:;
	};
}



inline void _1c495c8a9_scope(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4ad13bd_Scope>* _21225_s) {
	jule::Ptr<_1c485b1c0_scopeOptimizer> _21317_scopt = static__1c1dc9202_new((*(_21225_s)));;
	_1c1e1de17_optimize(_21317_scopt.ptr());
}



inline void _1c1dc93de_funcCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aac5ec_FnCallExprModel> _21727_m) {
	static__1c1e1e434_optimize(&(_21727_m.get()._field_Expr));
	_1c1e29ede_args(_self_, &(_21727_m.get()._field_Args));
	if ((_21727_m.get()._field_Except != nullptr)) {
		_1c495c8a9_scope(_self_, &(_21727_m.get()._field_Except));
	};
}



inline void _1c1dcac1a_slice(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aac7d9_SliceExprModel> _22524_m) {
	_1c1e29ede_args(_self_, &(_22524_m.get()._field_Elems));
}



inline void _1c1dd3c01_array(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aadc5d_ArrayExprModel> _22924_m) {
	if (((_22924_m.get()._field_Elems.len() == 2LL) && (_22924_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _23121_elem = _22924_m.get()._field_Elems[0LL];;
		static__1c1e1e434_optimize(&(_23121_elem));
		_22924_m.get()._field_Elems[0LL]=_23121_elem;
	};
	_1c1e29ede_args(_self_, &(_22924_m.get()._field_Elems));
}



inline void _1c1e02bed_indexing(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aac9c6_IndexingExprModel> _23827_m) {
	static__1c1e1e434_optimize(&(_23827_m.get()._field_Expr.get()._field_Model));
	static__1c1e1e434_optimize(&(_23827_m.get()._field_Index.get()._field_Model));
	if ((!(_1c1dea7c8_Access))) {
		return;;
	};
	jule::Bool _24413_array = (_1c4b5ec87_Arr(_23827_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_24413_array && _1c45e77ca_IsConst(_23827_m.get()._field_Index.ptr()))) {
		jule::Any _24721_model = jule::Any(jule::new_ptr<_1c48a5deb_UnsafeIndexingExprModel>(_1c48a5deb_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_24721_model))))));
		return;;
	};
	{
		auto &_match_expr{ _23827_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad6bbde3:;
			{
				jule::Ptr<_1c4b2c837_Var> _25317_i = _23827_m.get()._field_Index.get()._field_Model.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8);;
				if ((_25317_i.get()._field_Mutable || (_25317_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1ad6bbc8e;
				};
				{
					auto &_match_expr{ _23827_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ad6bd653:;
						{
							jule::Ptr<_1c4b2c837_Var> _25921_r = _23827_m.get()._field_Expr.get()._field_Model.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8);;
							if ((_25317_i.get()._field_IterRelation.get()._field_Range == _25921_r)) {
								jule::Any _26229_model = jule::Any(jule::new_ptr<_1c48a5deb_UnsafeIndexingExprModel>(_1c48a5deb_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type132);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26229_model))))));
							};
						}
					}
					_match_end_1ad6bd5ed:;
				};
			}
		}
		_match_end_1ad6bbc8e:;
	};
}



inline void _1c1e225be_anonFunc(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aacbb3_AnonFnExprModel> _26927_m) {
	_1c495c8a9_scope(_self_, &(_26927_m.get()._field_Func.get()._field_Scope));
}



inline void _1c1e296a3_mapExpr(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aad08c_MapExprModel> _27326_m) {
	{
		auto expr = &(_27326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6c0c1b:;
		if (it != expr_end) {
			jule::Ptr<_1c4aacda0_KeyValPairExprModel> _27421_pair = *it;
			{
				static__1c1e1e434_optimize(&(_27421_pair.get()._field_Key));
				static__1c1e1e434_optimize(&(_27421_pair.get()._field_Val));
			}
			_iter_next_1ad6c0c1b:;
			++it;
			goto _iter_begin_1ad6c0c1b;
		}
		_iter_end_1ad6c0c1b:;
	};
}



inline void _1c1e94c29_slicing(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aad279_SlicingExprModel> _28026_m) {
	static__1c1e1e434_optimize(&(_28026_m.get()._field_Expr));
	static__1c1e1e434_optimize(&(_28026_m.get()._field_Left));
	if ((_28026_m.get()._field_Right != nullptr)) {
		static__1c1e1e434_optimize(&(_28026_m.get()._field_Right));
	};
}



inline void _1c486e579_traitSub(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aad466_TraitSubIdentExprModel> _28827_m) {
	static__1c1e1e434_optimize(&(_28827_m.get()._field_Expr));
}



inline void _1c1e8aeea_structureSub(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aad884_StructSubIdentExprModel> _29231_m) {
	static__1c1e1e434_optimize(&(_29231_m.get()._field_Expr.get()._field_Model));
}



inline void _1c49c3832_commonSub(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aae137_CommonSubIdentExprModel> _29628_m) {
	static__1c1e1e434_optimize(&(_29628_m.get()._field_Expr));
}



inline void _1c49c4b96_tuple(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aae324_TupleExprModel> _30024_m) {
	{
		auto expr = &(_30024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6c402c:;
		if (it != expr_end) {
			jule::Ptr<_1c45e6e17_Data> _30121_d = *it;
			{
				static__1c1e1e434_optimize(&(_30121_d.get()._field_Model));
			}
			_iter_next_1ad6c402c:;
			++it;
			goto _iter_begin_1ad6c402c;
		}
		_iter_end_1ad6c402c:;
	};
}



inline void _1c49d2753_newCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aaeac7_BuiltinNewCallExprModel> _30626_m) {
	if ((_30626_m.get()._field_Init != nullptr)) {
		static__1c1e1e434_optimize(&(_30626_m.get()._field_Init));
	};
}



inline void _1c49dc8c3_outCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aae511_BuiltinOutCallExprModel> _31226_m) {
	static__1c1e1e434_optimize(&(_31226_m.get()._field_Expr));
}



inline void _1c1e1aa6d_outlnCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aae6ed_BuiltinOutlnCallExprModel> _31628_m) {
	static__1c1e1e434_optimize(&(_31628_m.get()._field_Expr));
}



inline void _1c1e5ae21_panicCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aaecb4_BuiltinPanicCallExprModel> _32028_m) {
	static__1c1e1e434_optimize(&(_32028_m.get()._field_Expr));
}



inline void _1c1e52ed4_assertCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aaeea1_BuiltinAssertCallExprModel> _32429_m) {
	static__1c1e1e434_optimize(&(_32429_m.get()._field_Expr));
}



inline void _1c1e85d2a_errorCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4ab10a1_BuiltinErrorCallExprModel> _32828_m) {
	static__1c1e1e434_optimize(&(_32828_m.get()._field_Err.get()._field_Model));
}



inline void _1c1e882c2_makeCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4ab018d_BuiltinMakeCallExprModel> _33227_m) {
	if ((_33227_m.get()._field_Len != nullptr)) {
		static__1c1e1e434_optimize(&(_33227_m.get()._field_Len));
	};
	if ((_33227_m.get()._field_Cap != nullptr)) {
		static__1c1e1e434_optimize(&(_33227_m.get()._field_Cap));
	};
}



inline void _1c1e9dbcd_appendCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4ab037a_BuiltinAppendCallExprModel> _34129_m) {
	static__1c1e1e434_optimize(&(_34129_m.get()._field_Dest));
	static__1c1e1e434_optimize(&(_34129_m.get()._field_Elements));
}



inline void _1c4c216ea_lenCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4ab0567_BuiltinLenCallExprModel> _34626_m) {
	static__1c1e1e434_optimize(&(_34626_m.get()._field_Expr.get()._field_Model));
}



inline void _1c4c2182c_capCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4ab0754_BuiltinCapCallExprModel> _35026_m) {
	static__1c1e1e434_optimize(&(_35026_m.get()._field_Expr.get()._field_Model));
}



inline void _1c4c2195e_cloneCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aae8da_BuiltinCloneCallExprModel> _35428_m) {
	static__1c1e1e434_optimize(&(_35428_m.get()._field_Expr));
}



inline void _1c4c21a91_deleteCall(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4aad653_BuiltinDeleteCallExprModel> _35829_m) {
	static__1c1e1e434_optimize(&(_35829_m.get()._field_Dest.get()._field_Model));
	if ((_35829_m.get()._field_Key != nullptr)) {
		static__1c1e1e434_optimize(&(_35829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1c4c21bc3_sizeof(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4ab128d_SizeofExprModel> _36525_m) {
	static__1c1e1e434_optimize(&(_36525_m.get()._field_Expr));
}



inline void _1c4c21d05_alignof(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4ab147a_AlignofExprModel> _36926_m) {
	static__1c1e1e434_optimize(&(_36926_m.get()._field_Expr));
}



inline void _1c4c21e37_integratedToStr(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4ab1854_IntegratedToStrExprModel> _37334_m) {
	static__1c1e1e434_optimize(&(_37334_m.get()._field_Expr));
}



inline void _1c4c22069_free(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4ab1c2d_FreeExprModel> _37723_m) {
	static__1c1e1e434_optimize(&(_37723_m.get()._field_Expr));
}



inline void _1c4c2219b_backendEmit(_1c485b3ac_exprOptimizer* _self_, jule::Ptr<_1c4ab1a41_BackendEmitExprModel> _38130_m) {
	_1c1e29ede_args(_self_, &(_38130_m.get()._field_Exprs));
}



inline void _1c4c222cd_do(_1c485b3ac_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad6cd344:;
			{
				_1c1dcc29e_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aab970_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ad6cd641:;
			{
				_1c1e0498b_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aabb5c_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ad6cd6a7:;
			{
				_1c1e12d84_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aac036_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ad6cd71d:;
			{
				_1c1e1dc2a_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aac223_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ad6cd784:;
			{
				_1c1e24a44_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aac410_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad6cd80b:;
			{
				_1c1dc93de_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aac5ec_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1ad6cd883:;
			{
				_1c1dcac1a_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aac7d9_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ad6cd90a:;
			{
				_1c1dd3c01_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aadc5d_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad6cd982:;
			{
				_1c1e02bed_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aac9c6_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ad6cda09:;
			{
				_1c1e225be_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aacbb3_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ad6cda81:;
			{
				_1c1e296a3_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aad08c_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad6cdb08:;
			{
				_1c1e94c29_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aad279_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ad6cdb80:;
			{
				_1c486e579_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aad466_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ad6cdc07:;
			{
				_1c1e8aeea_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aad884_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ad6cdc7e:;
			{
				_1c49c3832_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aae137_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ad6cdd06:;
			{
				_1c49c4b96_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aae324_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ad6cdd7d:;
			{
				_1c49dc8c3_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aae511_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ad6cde05:;
			{
				_1c1e1aa6d_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aae6ed_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ad6cde7c:;
			{
				_1c49d2753_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aaeac7_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ad6ce004:;
			{
				_1c1e5ae21_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aaecb4_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ad6ce07b:;
			{
				_1c1e52ed4_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aaeea1_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ad6ce103:;
			{
				_1c1e85d2a_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4ab10a1_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ad6ce17a:;
			{
				_1c1e882c2_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4ab018d_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ad6ce202:;
			{
				_1c1e9dbcd_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4ab037a_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ad6ce279:;
			{
				_1c4c216ea_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4ab0567_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1ad6ce301:;
			{
				_1c4c2182c_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4ab0754_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ad6ce378:;
			{
				_1c4c2195e_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aae8da_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ad6ce400:;
			{
				_1c4c21a91_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4aad653_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1ad6ce477:;
			{
				_1c4c21bc3_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4ab128d_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1ad6ce4ee:;
			{
				_1c4c21d05_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4ab147a_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1ad6ce576:;
			{
				_1c4c21e37_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4ab1854_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad6ce5ed:;
			{
				_1c4c22069_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4ab1c2d_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ad6ce675:;
			{
				_1c4c2219b_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1c4ab1a41_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_1ad6cd2de:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c485b3ac_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9b50db4_Optimizer> static__1a9b705ba_New(jule::Ptr<_1c481c00a_IR>* _2524_ir) {
	return jule::new_ptr<_1a9b50db4_Optimizer>(_1a9b50db4_Optimizer{._field_ir=(*(_2524_ir))});;
}



inline void _1a9b7da3a_optimizeGlobal(_1a9b50db4_Optimizer* _self_, jule::Ptr<_1c4b2c837_Var>* _3138_v) {
	if ((!((*(_3138_v)).get()._field_CppLinked))) {
		static__1c1e1e434_optimize(&((*(_3138_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1a9bacb02_optimizeFunction(_1a9b50db4_Optimizer* _self_, jule::Ptr<_1c4ab22e4_Fn>* _3740_func) {
	if ((*(_3740_func)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_3740_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6e6901:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab39ee_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1c485b1c0_scopeOptimizer> _4221_so = static__1c1dc9202_new(_4121_ins.get()._field_Scope);;
				_1c1e1de17_optimize(_4221_so.ptr());
			}
			_iter_next_1ad6e6901:;
			++it;
			goto _iter_begin_1ad6e6901;
		}
		_iter_end_1ad6e6901:;
	};
}



inline void _1a9bbc3d6_optimizeStruct(_1a9b50db4_Optimizer* _self_, jule::Ptr<_1c4a86ebc_Struct>* _4738_s) {
	if ((*(_4738_s)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_4738_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6e7dca:;
		if (it != expr_end) {
			jule::Ptr<_1c4aab255_StructIns> _5121_ins = *it;
			{
				{
					auto expr = &(_5121_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad6e85c3:;
					if (it != expr_end) {
						jule::Ptr<_1c4aab068_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1c1e1e434_optimize(&(_5225_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_1ad6e85c3:;
						++it;
						goto _iter_begin_1ad6e85c3;
					}
					_iter_end_1ad6e85c3:;
				};
				{
					auto expr = &(_5121_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad6e90eb:;
					if (it != expr_end) {
						jule::Ptr<_1c4ab22e4_Fn> _5725_m = *it;
						{
							_1a9bacb02_optimizeFunction(_self_, &(_5725_m));
						}
						_iter_next_1ad6e90eb:;
						++it;
						goto _iter_begin_1ad6e90eb;
					}
					_iter_end_1ad6e90eb:;
				};
			}
			_iter_next_1ad6e7dca:;
			++it;
			goto _iter_begin_1ad6e7dca;
		}
		_iter_end_1ad6e7dca:;
	};
}



inline void _1a9bc55dc_optimizeGlobals(_1a9b50db4_Optimizer* _self_, jule::Ptr<_1c4b02a82_Package>* _6339_p) {
	{
		auto expr = &((*(_6339_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6e99d1:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _6421_f = *it;
			{
				{
					auto expr = &(_6421_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad6ea6c4:;
					if (it != expr_end) {
						jule::Ptr<_1c4b2c837_Var> _6525_v = *it;
						{
							_1a9b7da3a_optimizeGlobal(_self_, &(_6525_v));
						}
						_iter_next_1ad6ea6c4:;
						++it;
						goto _iter_begin_1ad6ea6c4;
					}
					_iter_end_1ad6ea6c4:;
				};
			}
			_iter_next_1ad6e99d1:;
			++it;
			goto _iter_begin_1ad6e99d1;
		}
		_iter_end_1ad6e99d1:;
	};
}



inline void _1a9bd5333_optimizeFunctions(_1a9b50db4_Optimizer* _self_, jule::Ptr<_1c4b02a82_Package>* _7141_p) {
	{
		auto expr = &((*(_7141_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6eac57:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _7221_f = *it;
			{
				{
					auto expr = &(_7221_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad6eb98e:;
					if (it != expr_end) {
						jule::Ptr<_1c4ab22e4_Fn> _7325_func = *it;
						{
							_1a9bacb02_optimizeFunction(_self_, &(_7325_func));
						}
						_iter_next_1ad6eb98e:;
						++it;
						goto _iter_begin_1ad6eb98e;
					}
					_iter_end_1ad6eb98e:;
				};
			}
			_iter_next_1ad6eac57:;
			++it;
			goto _iter_begin_1ad6eac57;
		}
		_iter_end_1ad6eac57:;
	};
}



inline void _1a9bd6a71_optimizeStructs(_1a9b50db4_Optimizer* _self_, jule::Ptr<_1c4b02a82_Package>* _7939_p) {
	{
		auto expr = &((*(_7939_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad6ec022:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad6ecc59:;
					if (it != expr_end) {
						jule::Ptr<_1c4a86ebc_Struct> _8125_s = *it;
						{
							_1a9bbc3d6_optimizeStruct(_self_, &(_8125_s));
						}
						_iter_next_1ad6ecc59:;
						++it;
						goto _iter_begin_1ad6ecc59;
					}
					_iter_end_1ad6ecc59:;
				};
			}
			_iter_next_1ad6ec022:;
			++it;
			goto _iter_begin_1ad6ec022;
		}
		_iter_end_1ad6ec022:;
	};
}



inline void _1a9b820d2_optimizePackage(_1a9b50db4_Optimizer* _self_, jule::Ptr<_1c4b02a82_Package>* _8739_p) {
	_1a9bc55dc_optimizeGlobals(_self_, _8739_p);
	_1a9bd5333_optimizeFunctions(_self_, _8739_p);
	_1a9bd6a71_optimizeStructs(_self_, _8739_p);
}



inline void _1a9bb093a_Optimize(_1a9b50db4_Optimizer* _self_) {
	_1a9bd0b47_detectEnabled();
	if (_1c1dcc47a_Deadcode) {
		_1a9c4d9c8_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a9b533e4_scopeEnabled || _1a9b52778_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad700003:;
			if (it != expr_end) {
				jule::Ptr<_1c4aeeb28_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1a9b820d2_optimizePackage(_self_, &(_10325_u.get()._field_Package));
					};
				}
				_iter_next_1ad700003:;
				++it;
				goto _iter_begin_1ad700003;
			}
			_iter_end_1ad700003:;
		};
		_1a9b820d2_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_1c1dcc47a_Deadcode) {
		_1a9c5377a_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a9b50db4_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1a9c6d157_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1a9c6e400_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1a9c6d157_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1a9c6e213_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a9c70984_LogFlat(_1c2220900_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1a9c70b93_LogError(_1c2220900_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1a9c6d157_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1c3174853_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1c3174853_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1c219108a_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I32 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I32 _3821_oldLen = _3621_line.len();;
		_3621_line=_1c219108a_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1c3174853_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1c2171697_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1c2171697_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1c2171697_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1a9c6e400_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1a9c70da2_Log(_1c2220900_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1ad70ea4b:;
			{
				static__1a9c70984_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1ad70eab2:;
			{
				static__1a9c70b93_LogError(_6520_l);
			}
		}
		_match_end_1ad70e8e7:;
	};
}



inline void static__1a9c710b1_PrintLogs(jule::Slice<_1c2220900_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad710a19:;
		if (it != expr_end) {
			_1c2220900_Log *_7616_l = it;
			{
				static__1a9c70da2_Log(_7616_l);
			}
			_iter_next_1ad710a19:;
			++it;
			goto _iter_begin_1ad710a19;
		}
		_iter_end_1ad710a19:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1c3174853_Itoa(static_cast<jule::I32>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9c706ed_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1ab265351_Unix(_1ab264e99_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*(_self_))._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*(_self_))._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1ab2678d6_unixYearToSeconds(_5717_y, &(_5617_leap));;
	_6817_t+=_1ab267c6b_unixMonthToSeconds(_5817_m, _5617_leap);
	_6817_t+=(86400LLU * ((*(_self_))._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*(_self_))._field_Hour);
	_6817_t+=(60LLU * (*(_self_))._field_Minute);
	_6817_t+=(*(_self_))._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab264e99_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1ab26563c_Time static__1ab2659d3_Unix(jule::U64 _9120_sec) {
	return _1ab26563c_Time{._field_sec=_9120_sec};;
}



inline _1ab26563c_Time static__1ab265bd1_Now(void) {
	return static__1ab2659d3_Unix(static_cast<jule::U64>(_1ab2675c8_unix()));;
}



inline jule::U64 _1ab266132_Unix(_1ab26563c_Time* _self_) {
	return (*(_self_))._field_sec;;
}



inline jule::U64 _1ab266396_Day(_1ab26563c_Time* _self_) {
	return _1ab267320_Abs(_self_)._field_Day;;
}



inline jule::U64 _1ab26660a_Month(_1ab26563c_Time* _self_) {
	return _1ab267320_Abs(_self_)._field_Month;;
}



inline jule::U64 _1ab26686e_Year(_1ab26563c_Time* _self_) {
	return _1ab267320_Abs(_self_)._field_Year;;
}



inline jule::U64 _1ab266ad3_Second(_1ab26563c_Time* _self_) {
	return _1ab267320_Abs(_self_)._field_Second;;
}



inline jule::U64 _1ab266d47_Minute(_1ab26563c_Time* _self_) {
	return _1ab267320_Abs(_self_)._field_Minute;;
}



inline jule::U64 _1ab2670ab_Hour(_1ab26563c_Time* _self_) {
	return _1ab267320_Abs(_self_)._field_Hour;;
}



inline _1ab264e99_AbsTime _1ab267320_Abs(_1ab26563c_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1ab26452b_mdays[static_cast<jule::I32>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1ab26452b_mdays[static_cast<jule::I32>(_16917_months)];
		}
	_iter_next_1ad745356:;
	}
	_iter_end_1ad745356:;;
	_1ab264e99_AbsTime _17417_t = _1ab264e99_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab26563c_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab1aea4d_scopeCoder> static__1ab1b018b_new(jule::Ptr<_1ab26c644_ObjectCoder>* _6424_oc) {
	return jule::new_ptr<_1ab1aea4d_scopeCoder>(_1ab1aea4d_scopeCoder{._field_oc=(*(_6424_oc))});;
}



inline void _1ad7dc5da_iterHead(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad306d_RangeIter>* _7132_it, jule::Bool* _7144_ref, jule::Str* _7156_begin) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_1c1dca19d_Copy && _1ab1b5713_isCopyOptimizable(&((*(_7132_it)).get()._field_Expr)))) {
		(*(_7144_ref))=true;
		{
			auto &_match_expr{ (*(_7132_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ad7dde7c:;
				{
					jule::Ptr<_1c4b2c837_Var> _8021_v = (*(_7132_it)).get()._field_Expr.get()._field_Model.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8);;
					if (_8021_v.get()._field_Reference) {
						_1ab1c4c1c_model(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1ad7e09c8;
					};
					goto _case_begin_1ad7e0a2d;
				}
			}
			else {
				_case_begin_1ad7e0a2d:;
				{
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1ab1c4c1c_model(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1ad7e09c8:;
		};
	} else {
		_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7144_ref))) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7144_ref))) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, (*(_7156_begin)));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
}



inline void _1ab1b07c9_rangeIndexIter(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad306d_RangeIter>* _12039_it) {
	jule::Str _12113_begin = static__1ab1cd9c3_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it)))));;
	jule::Str _12213_next = static__1ab1ce012_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it)))));;
	jule::Bool _12417_ref = false;;
	_1ad7dc5da_iterHead(_self_, _12039_it, &(_12417_ref), &(_12113_begin));
	if (((*(_12039_it)).get()._field_KeyA != nullptr)) {
		_1ab27058c_varInitExpr(_self_.get()._field_oc, &((*(_12039_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12417_ref) {
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ab246b3a_indent(_self_.get()._field_oc);
	};
	if (((*(_12039_it)).get()._field_KeyB != nullptr)) {
		(*(_12039_it)).get()._field_KeyB.get()._field_Reference=(_1c1dca19d_Copy && _1ab1b5a98_isIterCopyOptimizable(&((*(_12039_it)).get()._field_Expr), &((*(_12039_it)).get()._field_KeyB)));
		_1ab27058c_varInitExpr(_self_.get()._field_oc, &((*(_12039_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_12039_it)).get()._field_KeyB.get()._field_Reference) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ab246b3a_indent(_self_.get()._field_oc);
	};
	_1ab1b513b_scope(_self_, (*(_12039_it)).get()._field_Scope);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, _12213_next);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1ab246b3a_indent(_self_.get()._field_oc);
	if (((*(_12039_it)).get()._field_KeyA != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, static__1ab1cd72b_var((*(_12039_it)).get()._field_KeyA));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1ab246b3a_indent(_self_.get()._field_oc);
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ab203de4_write(_self_.get()._field_oc, _12113_begin);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cdc6a_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it))))));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ab1b0a4e_rangeHashmapIter(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad306d_RangeIter>* _18341_it) {
	jule::Str _18413_begin = static__1ab1cd9c3_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it)))));;
	jule::Str _18513_next = static__1ab1ce012_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it)))));;
	jule::Bool _18717_ref = false;;
	_1ad7dc5da_iterHead(_self_, _18341_it, &(_18717_ref), &(_18413_begin));
	if (((*(_18341_it)).get()._field_KeyA != nullptr)) {
		_1ab27058c_varInitExpr(_self_.get()._field_oc, &((*(_18341_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ab246b3a_indent(_self_.get()._field_oc);
	};
	if (((*(_18341_it)).get()._field_KeyB != nullptr)) {
		_1ab27058c_varInitExpr(_self_.get()._field_oc, &((*(_18341_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ab246b3a_indent(_self_.get()._field_oc);
	};
	_1ab1b513b_scope(_self_, (*(_18341_it)).get()._field_Scope);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, _18513_next);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ab203de4_write(_self_.get()._field_oc, _18413_begin);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cdc6a_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it))))));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ab1b0cc4_ifCase(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad17b9_If> _22630_i) {
	if ((_22630_i.get()._field_Expr != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22630_i.get()._field_Expr);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1ab1b513b_scope(_self_, _22630_i.get()._field_Scope);
}



inline void _1ab1b1049_conditional(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad1e29_Conditional> _23535_c) {
	jule::Bool _23617_writed = false;;
	{
		auto expr = &(_23535_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8138ca:;
		if (it != expr_end) {
			jule::Ptr<_1c4ad17b9_If> _23721_elif = *it;
			{
				if ((_23721_elif == nullptr)) {
					goto _iter_next_1ad8138ca;
				};
				if (_23617_writed) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23617_writed=true;
				_1ab1b0cc4_ifCase(_self_, _23721_elif);
			}
			_iter_next_1ad8138ca:;
			++it;
			goto _iter_begin_1ad8138ca;
		}
		_iter_end_1ad8138ca:;
	};
	if ((_23535_c.get()._field_Default != nullptr)) {
		if (_23617_writed) {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1ab1b513b_scope(_self_, _23535_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1ab1b12be_infIter(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad2215_InfIter> _25531_it) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab1b513b_scope(_self_, _25531_it.get()._field_Scope);
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1ce012_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25531_it))));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cdc6a_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25531_it))));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1ab1b1544_whileIter(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad2688_WhileIter> _27233_it) {
	if (((_27233_it.get()._field_Expr != nullptr) && (_27233_it.get()._field_Next == nullptr))) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27233_it.get()._field_Expr);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27233_it.get()._field_Expr != nullptr)) {
			_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27233_it.get()._field_Expr);
		};
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27233_it.get()._field_Next != nullptr)) {
			_1ab1b4b41_st(_self_, _27233_it.get()._field_Next);
		};
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab1b513b_scope(_self_, _27233_it.get()._field_Scope);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1ce012_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27233_it))));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cdc6a_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27233_it))));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1ab1b17b9_rangeIter(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad306d_RangeIter> _30533_it) {
	{
		
		if ((_1c4b5eeeb_Slc(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad823863:;
			{
				_1ab1b07c9_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		else if ((_1c4b5ec87_Arr(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad823533:;
			{
				_1ab1b07c9_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		else if ((_1c4b6099c_Map(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad823599:;
			{
				_1ab1b0a4e_rangeHashmapIter(_self_, &(_30533_it));
			}
		}
		else {
			_case_begin_1ad8234bc:;
			{
				_1ab1b07c9_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		_match_end_1ad823401:;
	};
}



inline void _1ab1b1a3e_cont(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad3469_ContSt> _31824_c) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1ce012_iterNext(_31824_c.get()._field_It));
}



inline void _1ab1b1cb4_label(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad3b0c_Label> _32325_l) {
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1ce2a9_label(&(_32325_l.get()._field_Ident)));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1ab1b2039_gotoSt(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad3de8_GotoSt> _32826_gt) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1ce2a9_label(&(_32826_gt.get()._field_Ident)));
}



inline void _1ab1b22ae_postfix(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad42a0_Postfix> _33331_p) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33331_p.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1ab203de4_write(_self_.get()._field_oc, _33331_p.get()._field_Op);
}



inline void _1ab1b2534_assign(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad4723_Assign> _34030_a) {
	_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34030_a.get()._field_L.get()._field_Model);
	_1ab203de4_write(_self_.get()._field_oc, _34030_a.get()._field_Op.get()._field_Kind);
	_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34030_a.get()._field_R.get()._field_Model);
}



inline void _1ab1b27a9_mapLookupAssign(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad4aca_MultiAssign>* _34640_a) {
	jule::Ptr<_1c4aac9c6_IndexingExprModel> _34717_iem = (*(_34640_a)).get()._field_R.cast_ptr<_1c4aac9c6_IndexingExprModel>(&__jule_any_type45);;
	_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34717_iem.get()._field_Expr.get()._field_Model);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34717_iem.get()._field_Index.get()._field_Model);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34640_a)).get()._field_L[0LL] != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34640_a)).get()._field_L[0LL].get()._field_Model);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34640_a)).get()._field_L[1LL] != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34640_a)).get()._field_L[1LL].get()._field_Model);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1b2a2e_multiAssignTup(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad4aca_MultiAssign>* _36939_a) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1c4aae324_TupleExprModel> _37317_tup = (*(_36939_a)).get()._field_R.cast_ptr<_1c4aae324_TupleExprModel>(&__jule_any_type88);;
	{
		auto expr = &(_37317_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad833c3b:;
		if (it != expr_end) {
			jule::I32 _37514_i = it - expr->begin();
			jule::Ptr<_1c45e6e17_Data> _37521_r = *it;
			{
				_1ab246b3a_indent(_self_.get()._field_oc);
				jule::Ptr<_1c45e6e17_Data> _37721_l = (*(_36939_a)).get()._field_L[_37514_i];;
				if ((_37721_l != nullptr)) {
					{
						auto &_match_expr{ _37721_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1ad836601:;
							{
								jule::Ptr<_1c4b2c837_Var> _38129_v = _37721_l.get()._field_Model.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8);;
								if ((_38129_v.get()._field_Reference && (!(_1c4b2cc00_IsInitialized(_38129_v.ptr()))))) {
									_1ab203de4_write(_self_.get()._field_oc, static__1ab1cd72b_var(_38129_v));
									_1ab203de4_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37521_r.get()._field_Model);
									_1ab203de4_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_36939_a)).get()._field_L[_37514_i]=nullptr;
									goto _iter_next_1ad833c3b;
								};
							}
						}
						_match_end_1ad83659b:;
					};
					_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37721_l.get()._field_Kind));
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1ab203de4_write(_self_.get()._field_oc, static__1ab1cbc35_toOut(&(_1ab1ae5b9_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37514_i))));
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37521_r.get()._field_Model);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1ad833c3b:;
			++it;
			_37514_i++;
			goto _iter_begin_1ad833c3b;
		}
		_iter_end_1ad833c3b:;
	};
	{
		auto expr = &((*(_36939_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad83b0a6:;
		if (it != expr_end) {
			jule::I32 _40214_i = it - expr->begin();
			jule::Ptr<_1c45e6e17_Data> _40221_l = *it;
			{
				if ((_40221_l == nullptr)) {
					goto _iter_next_1ad83b0a6;
				};
				_1ab246b3a_indent(_self_.get()._field_oc);
				_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40221_l.get()._field_Model);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1ab203de4_write(_self_.get()._field_oc, static__1ab1cbc35_toOut(&(_1ab1ae5b9_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40214_i))));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1ad83b0a6:;
			++it;
			_40214_i++;
			goto _iter_begin_1ad83b0a6;
		}
		_iter_end_1ad83b0a6:;
	};
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ab1b2ca4_multiAssignFn(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad4aca_MultiAssign>* _41838_a) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	jule::Ptr<_1c4aac5ec_FnCallExprModel> _42317_f = (*(_41838_a)).get()._field_R.cast_ptr<_1c4aac5ec_FnCallExprModel>(&__jule_any_type34);;
	_1ab2814c1_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42317_f.get()._field_Func.get()._field_Result));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_41838_a)).get()._field_R);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_41838_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8424a8:;
		if (it != expr_end) {
			jule::I32 _42914_i = it - expr->begin();
			jule::Ptr<_1c45e6e17_Data> _42921_l = *it;
			{
				if ((_42921_l != nullptr)) {
					_1ab246b3a_indent(_self_.get()._field_oc);
					_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _42921_l.get()._field_Model);
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(_42914_i));
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1ad8424a8:;
			++it;
			_42914_i++;
			goto _iter_begin_1ad8424a8;
		}
		_iter_end_1ad8424a8:;
	};
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ab1b3029_multiAssign(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad4aca_MultiAssign> _44435_a) {
	{
		auto &_match_expr{ _44435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad845c2b:;
			{
				_1ab1b27a9_mapLookupAssign(_self_, &(_44435_a));
				return;;
			}
		}
		_match_end_1ad845a1c:;
	};
	{
		auto &_match_expr{ _44435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ad845951:;
			{
				_1ab1b2a2e_multiAssignTup(_self_, &(_44435_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad846a95:;
			{
				_1ab1b2ca4_multiAssignFn(_self_, &(_44435_a));
			}
		}
		else {
			_case_begin_1ad8460b1:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:458:13"));;
			}
		}
		_match_end_1ad8466bb:;
	};
}



inline jule::Fn<void(void)> _1ab1b3337_matchExpr(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad5119_Match> _46233_m) {
	if ((!(_1c45e77ca_IsConst(_46233_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1c317924d_IsBool(_46233_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1c3178060_ReadBool(_46233_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46233_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1ab1b3656_case(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad5119_Match> _47228_m, jule::Ptr<_1c4ad5b64_Case> _47243_c) {
	if (((_47243_c.get()._field_Exprs.len() != 0LL) && (!(_1c4ad5625_IsGenericTypeMatch(_47228_m.ptr()))))) {
		if (((_47228_m.get()._field_Cases.len() > 0LL) && (_47228_m.get()._field_Cases[0LL] == _47243_c))) {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47243_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad84c00c:;
			if (it != expr_end) {
				jule::I32 _47918_i = it - expr->begin();
				jule::Ptr<_1c45e6e17_Data> _47925_expr = *it;
				{
					{
						
						if ((!(_47228_m.get()._field_TypeMatch))) {
							_case_begin_1ad8533a9:;
							{
								jule::Fn<void(void)> _48225_caseExpr = _1ab1b3337_matchExpr(_self_, _47228_m);;
								if (_1c45e7ad8_GoodOperand(_47228_m.get()._field_Expr.ptr(), &(_47925_expr))) {
									if ((_48225_caseExpr != nullptr)) {
										_48225_caseExpr();
										_1ab203de4_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47925_expr.get()._field_Model);
								} else {
									_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47925_expr.get()._field_Model);
									if ((_48225_caseExpr != nullptr)) {
										_1ab203de4_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48225_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1ad84d23e:;
							{
								_1ab203de4_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1c4621d32_TypeKind> _49829_tk = _47925_expr.get()._field_Model.cast_ptr<_1c4621d32_TypeKind>(&__jule_any_type90);;
								if ((_1c4b60738_Trait(_47228_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1ab203de4_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1ab1b888c_boolean(_self_.get()._field_oc.get()._field_ec, (_1c4b5e58e_Sptr(_47925_expr.get()._field_Kind.ptr()) != nullptr));
									_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(static_cast<jule::I32>(_1ab26c831_findTypeOffset(_self_.get()._field_oc.ptr(), _1c4b60738_Trait(_47228_m.get()._field_Expr.get()._field_Kind.ptr()), _47925_expr.get()._field_Kind))));
									_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I32 _50629_j = _1ab2084e2_pushAnyType(_self_.get()._field_oc, &(_49829_tk));;
									_1ab203de4_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(_50629_j));
								};
							}
						}
						_match_end_1ad84d173:;
					};
					if (((_47243_c.get()._field_Exprs.len() - _47918_i) > 1LL)) {
						_1ab203de4_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1ad84c00c:;
				++it;
				_47918_i++;
				goto _iter_begin_1ad84c00c;
			}
			_iter_end_1ad84c00c:;
		};
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47228_m.get()._field_Default == _47243_c) && (_47228_m.get()._field_Cases.len() != 0LL))) {
		_1ab246b3a_indent(_self_.get()._field_oc);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1ce7e8_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47243_c))));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47243_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1ab246b3a_indent(_self_.get()._field_oc);
		_1ab1b513b_scope(_self_, _47243_c.get()._field_Scope);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ab1b38cb_matchSt(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad5119_Match> _54031_m) {
	if (((_54031_m.get()._field_Cases.len() == 0LL) && (_54031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _54513_genericTypeMatch = _1c4ad5625_IsGenericTypeMatch(_54031_m.ptr());;
	if ((_54513_genericTypeMatch && ((_54031_m.get()._field_Default == nullptr) || (_54031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	if (((!(_54513_genericTypeMatch)) && (!(_1c45e77ca_IsConst(_54031_m.get()._field_Expr.ptr()))))) {
		if ((_1c1dca19d_Copy && _1ab1b5713_isCopyOptimizable(&(_54031_m.get()._field_Expr)))) {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _54031_m.get()._field_Expr.get()._field_Model);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1ab246b3a_indent(_self_.get()._field_oc);
	};
	if ((_54031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_54031_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad861e45:;
			if (it != expr_end) {
				jule::Ptr<_1c4ad5b64_Case> _56925_c = *it;
				{
					if ((_56925_c == nullptr)) {
						goto _iter_next_1ad861e45;
					};
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1ab246b3a_indent(_self_.get()._field_oc);
					_1ab1b3656_case(_self_, _54031_m, _56925_c);
				}
				_iter_next_1ad861e45:;
				++it;
				goto _iter_begin_1ad861e45;
			}
			_iter_end_1ad861e45:;
		};
	};
	if ((_54031_m.get()._field_Default != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ab1b3656_case(_self_, _54031_m, _54031_m.get()._field_Default);
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1ce551_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54031_m))));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ab1b3b51_fallSt(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad6219_FallSt> _59626_f) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1ce7e8_caseBegin(_59626_f.get()._field_DestCase));
}



inline void _1ab1b3dc6_breakSt(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad3821_BreakSt> _60127_b) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_60127_b.get()._field_It != 0LLU)) {
		_1ab203de4_write(_self_.get()._field_oc, static__1ab1cdc6a_iterEnd(_60127_b.get()._field_It));
	} else {
		_1ab203de4_write(_self_.get()._field_oc, static__1ab1ce551_matchEnd(_60127_b.get()._field_Mtch));
	};
}



inline void _1ab1b414b_setResult(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad658d_RetSt> _61033_r) {
	if ((_61033_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61033_r.get()._field_Expr);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1ab246b3a_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1c45e6e17_Data>> _61817_datas = _61033_r.get()._field_Expr.cast_ptr<_1c4aae324_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
	{
		auto expr = &(_61817_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad86bdd9:;
		if (it != expr_end) {
			jule::I32 _61913_i = it - expr->begin();
			jule::Ptr<_1c45e6e17_Data> _61916_data = *it;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(_61913_i));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61916_data.get()._field_Model);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1ab246b3a_indent(_self_.get()._field_oc);
			}
			_iter_next_1ad86bdd9:;
			++it;
			_61913_i++;
			goto _iter_begin_1ad86bdd9;
		}
		_iter_end_1ad86bdd9:;
	};
}



inline void _1ab1b43c1_retSt(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad658d_RetSt> _62929_r) {
	if (_1c4a871ed_IsVoid(_62929_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_62929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_62929_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_62929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _62929_r.get()._field_Func.get()._field_Result));
			_1ab203de4_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62929_r.get()._field_Expr);
			_1ab203de4_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62929_r.get()._field_Expr);
			_1ab203de4_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_62929_r.get()._field_Expr != nullptr)) {
		_1ab1b414b_setResult(_self_, _62929_r);
	};
	if (_62929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1ab2814c1_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_62929_r.get()._field_Func.get()._field_Result));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1ab1b4646_var(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4b2c837_Var> _66527_v) {
	if ((!(_66527_v.get()._field_Constant))) {
		_1ab270812_var(_self_.get()._field_oc, _66527_v);
	};
}



inline void _1ab1b48bb_strAppend(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c48999a0_StrAppendExprModel> _67133_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67133_m.get()._field_Str);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	{
		auto &_match_expr{ _67133_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ad877d6d:;
			{
				jule::Ptr<_1c25bc4e9_Const> _67717_c = _67133_m.get()._field_Expr.cast_ptr<_1c25bc4e9_Const>(&__jule_any_type47);;
				jule::Slice<jule::U8> _67817_bytes = static_cast<jule::Slice<jule::U8>>(_1c3178192_ReadStr(_67717_c.ptr()));;
				_1ab203de4_write(_self_.get()._field_oc, _1ab1c5b96_cstrLit(_67817_bytes));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1ab203de4_write(_self_.get()._field_oc, _1c3174721_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_67817_bytes.len())), 10LL));
			}
		}
		else {
			_case_begin_1ad87907d:;
			{
				_1ab1bae99_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67133_m.get()._field_Expr);
			}
		}
		_match_end_1ad879017:;
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1b4b41_st(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Any _68926_st) {
	if ((_68926_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _68926_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ad87cb64:;
			{
				_1ab1b513b_scope(_self_, _68926_st.cast_ptr<_1c4ad13bd_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad87c801:;
			{
				_1ab1b4646_var(_self_, _68926_st.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad87d219:;
			{
				_1ab1c4c1c_model(_self_.get()._field_oc.get()._field_ec, _68926_st.cast_ptr<_1c45e6e17_Data>(&__jule_any_type23).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ad87d280:;
			{
				_1ab1b1049_conditional(_self_, _68926_st.cast_ptr<_1c4ad1e29_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ad87d2e6:;
			{
				_1ab1b12be_infIter(_self_, _68926_st.cast_ptr<_1c4ad2215_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ad87d35c:;
			{
				_1ab1b1544_whileIter(_self_, _68926_st.cast_ptr<_1c4ad2688_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ad87d3c3:;
			{
				_1ab1b17b9_rangeIter(_self_, _68926_st.cast_ptr<_1c4ad306d_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ad87d439:;
			{
				_1ab1b1a3e_cont(_self_, _68926_st.cast_ptr<_1c4ad3469_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ad87d4b1:;
			{
				_1ab1b1cb4_label(_self_, _68926_st.cast_ptr<_1c4ad3b0c_Label>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ad87d538:;
			{
				_1ab1b2039_gotoSt(_self_, _68926_st.cast_ptr<_1c4ad3de8_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ad87d5b0:;
			{
				_1ab1b22ae_postfix(_self_, _68926_st.cast_ptr<_1c4ad42a0_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad87d637:;
			{
				_1ab1b2534_assign(_self_, _68926_st.cast_ptr<_1c4ad4723_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ad87d6ae:;
			{
				_1ab1b3029_multiAssign(_self_, _68926_st.cast_ptr<_1c4ad4aca_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ad87d736:;
			{
				_1ab1b38cb_matchSt(_self_, _68926_st.cast_ptr<_1c4ad5119_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ad87d7ad:;
			{
				_1ab1b3b51_fallSt(_self_, _68926_st.cast_ptr<_1c4ad6219_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ad87d835:;
			{
				_1ab1b3dc6_breakSt(_self_, _68926_st.cast_ptr<_1c4ad3821_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ad87d8ac:;
			{
				_1ab1b43c1_retSt(_self_, _68926_st.cast_ptr<_1c4ad658d_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1ad87d934:;
			{
				_1ab1c292e_pushToSlice(_self_.get()._field_oc.get()._field_ec, _68926_st.cast_ptr<_1c1dc96db_PushToSliceExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1ad87d9ab:;
			{
				_1ab1c449c_mutSlicing(_self_.get()._field_oc.get()._field_ec, _68926_st.cast_ptr<_1c1e2756e_MutSlicingExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1ad87da33:;
			{
				_1ab1c4722_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _68926_st.cast_ptr<_1c1e0ec4e_StrInsertBeginExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1ad87daaa:;
			{
				_1ab1b48bb_strAppend(_self_, _68926_st.cast_ptr<_1c48999a0_StrAppendExprModel>(&__jule_any_type128));
			}
		}
		else {
			_case_begin_1ad87c5d1:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1ad87c57b:;
	};
}



inline void _1ab1b4db6_scopeStmts(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad13bd_Scope>* _74135_s) {
	{
		auto expr = &((*(_74135_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad88db53:;
		if (it != expr_end) {
			jule::Any _74221_st = *it;
			{
				_1ab246b3a_indent(_self_.get()._field_oc);
				_1ab1b4b41_st(_self_, _74221_st);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1ad88db53:;
			++it;
			goto _iter_begin_1ad88db53;
		}
		_iter_end_1ad88db53:;
	};
}



inline void _1ab1b513b_scope(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ad13bd_Scope> _75029_s) {
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	if (_75029_s.get()._field_Deferred) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ab1b4db6_scopeStmts(_self_, &(_75029_s));
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_75029_s.get()._field_Deferred) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1ab1b53b1_funcScope(jule::Ptr<_1ab1aea4d_scopeCoder> _self_, jule::Ptr<_1c4ab39ee_FnIns> _76633_f) {
	if ((_76633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	if ((!(_1c4a871ed_IsVoid(_76633_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1c4b66673_Tuple> _77321_tup = _1c4b60c11_Tup(_76633_f.get()._field_Result.ptr());;
		if ((_77321_tup != nullptr)) {
			_1ab246b3a_indent(_self_.get()._field_oc);
			_1ab280d83_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _77321_tup);
			_1ab203de4_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_77321_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ad894c36:;
				if (it != expr_end) {
					jule::I32 _77822_i = it - expr->begin();
					jule::Ptr<_1c4621d32_TypeKind> _77829_t = *it;
					{
						if (_1ab2837ae_shouldInitialized(&(_77829_t))) {
							_1ab246b3a_indent(_self_.get()._field_oc);
							_1ab203de4_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(_77822_i));
							_1ab203de4_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1ab1c4e92_initExpr(_self_.get()._field_oc.get()._field_ec, _77829_t);
							_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1ad894c36:;
					++it;
					_77822_i++;
					goto _iter_begin_1ad894c36;
				}
				_iter_end_1ad894c36:;
			};
		} else if ((_76633_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1ab246b3a_indent(_self_.get()._field_oc);
			_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76633_f.get()._field_Result));
			_1ab203de4_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1ab2837ae_shouldInitialized(&(_76633_f.get()._field_Result))) {
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1ab1c4e92_initExpr(_self_.get()._field_oc.get()._field_ec, _76633_f.get()._field_Result);
			};
			_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1ab1b4db6_scopeStmts(_self_, &(_76633_f.get()._field_Scope));
	if ((_76633_f.get()._field_Decl.get()._field_Exceptional && _1c4a871ed_IsVoid(_76633_f.get()._field_Decl.ptr()))) {
		_1ab246b3a_indent(_self_.get()._field_oc);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1ab1aea4d_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab1b7e96_exprCoder> static__1ab1b8392_new(jule::Ptr<_1ab26c644_ObjectCoder>* _10924_oc) {
	return jule::new_ptr<_1ab1b7e96_exprCoder>(_1ab1b7e96_exprCoder{._field_oc=(*(_10924_oc))});;
}



inline void _1ab1b8617_string(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c25bc4e9_Const>* _11527_c) {
	jule::Str _11613_content = _1c3178192_ReadStr((*(_11527_c)).ptr());;
	if ((_11613_content.len() == 0LL)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _12113_bytes = static_cast<jule::Slice<jule::U8>>(_11613_content);;
	jule::Str _12213_len = _1c3174721_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_12113_bytes.len())), 10LL);;
	jule::Str _12313_lit = _1ab1c5b96_cstrLit(_12113_bytes);;
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ab203de4_write(_self_.get()._field_oc, _12313_lit);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1ab203de4_write(_self_.get()._field_oc, _12213_len);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1b888c_boolean(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Bool _13227_b) {
	if (_13227_b) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1ab1b8a68_nilLit(jule::Ptr<_1ab1b7e96_exprCoder> _self_) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1ab1b8d76_ftoaSpecialCases(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::F64* _14437_x) {
	{
		
		if (_1c313cb5c_IsNaN((*(_14437_x)))) {
			_case_begin_1ad8b8683:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1c313cdc1_IsInf((*(_14437_x)), 1LL)) {
			_case_begin_1ad8b7eac:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1c313cdc1_IsInf((*(_14437_x)), -1LL)) {
			_case_begin_1ad8b8023:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1ad8b7e46:;
			{
				return false;;
			}
		}
		_match_end_1ad8b7d7a:;
	};
	return true;;
}



inline void _1ab1b90eb_float32(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c25bc4e9_Const>* _15828_c) {
	jule::F64 _15913_x = _1c317866a_AsF64((*(_15828_c)).ptr());;
	if (_1ab1b8d76_ftoaSpecialCases(_self_, &(_15913_x))) {
		return;;
	};
	{
		
		if ((_15913_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1ad8bae7c:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15913_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1ad8bab91:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1ad8bab2a:;
			{
				_1ab203de4_write(_self_.get()._field_oc, _1ab1c5ea4_ftoa(_15913_x, 32LL));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1ad8baa09:;
	};
}



inline void _1ab1b9371_float64(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c25bc4e9_Const>* _17728_c) {
	jule::F64 _17813_x = _1c317866a_AsF64((*(_17728_c)).ptr());;
	if (_1ab1b8d76_ftoaSpecialCases(_self_, &(_17813_x))) {
		return;;
	};
	{
		
		if ((_17813_x == jule::MAX_F64)) {
			_case_begin_1ad8bdd81:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17813_x == jule::MIN_F64)) {
			_case_begin_1ad8be568:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1ad8bda2e:;
			{
				_1ab203de4_write(_self_.get()._field_oc, _1ab1c5ea4_ftoa(_17813_x, 64LL));
			}
		}
		_match_end_1ad8bd90d:;
	};
}



inline void _1ab1b95e6_constant(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c25bc4e9_Const> _19532_c) {
	{
		
		if (_1c3179380_IsStr(_19532_c.ptr())) {
			_case_begin_1ad8c0ab9:;
			{
				_1ab1b8617_string(_self_, &(_19532_c));
			}
		}
		else if (_1c317924d_IsBool(_19532_c.ptr())) {
			_case_begin_1ad8c0b30:;
			{
				_1ab1b888c_boolean(_self_, _1c3178060_ReadBool(_19532_c.ptr()));
			}
		}
		else if (_1c31794b2_IsF64(_19532_c.ptr())) {
			_case_begin_1ad8c0b96:;
			{
				{
					
					if (_19532_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_1ad8c2e73:;
						{
							_1ab1b90eb_float32(_self_, &(_19532_c));
						}
					}
					else {
						_case_begin_1ad8c2acc:;
						{
							_1ab1b9371_float64(_self_, &(_19532_c));
						}
					}
					_match_end_1ad8c2a11:;
				};
			}
		}
		else if (_1c3178ed9_IsI64(_19532_c.ptr())) {
			_case_begin_1ad8c0c0c:;
			{
				_1ab203de4_write(_self_.get()._field_oc, _1ab1c624b_itoa(static_cast<jule::I64>(_1c263c811_ReadI64(_19532_c.ptr()))));
			}
		}
		else if (_1c317911b_IsU64(_19532_c.ptr())) {
			_case_begin_1ad8c1537:;
			{
				_1ab203de4_write(_self_.get()._field_oc, _1ab1c64e3_utoa(static_cast<jule::U64>(_1c263c943_ReadU64(_19532_c.ptr()))));
			}
		}
		else if (_1c31795e4_IsNil(_19532_c.ptr())) {
			_case_begin_1ad8c159d:;
			{
				_1ab1b8a68_nilLit(_self_);
			}
		}
		else {
			_case_begin_1ad8c0a53:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1ad8c0987:;
	};
}



inline void _1ab1b99ae_divByZeroBinary(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_2039861ab_Token>* _21936_op, jule::Ptr<_1c4aab783_OperandExprModel>* _21953_l, jule::Ptr<_1c4aab783_OperandExprModel>* _21980_r) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_21936_op)).get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1ad8c6163:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1ad8c61da:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1ad8c60ec:;
	};
	if ((!(_2037bbbe5_Production))) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ab26ca95_locInfo(_self_.get()._field_oc, _21936_op);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1ab1bae99_possibleRefExpr(_self_, (*(_21953_l)).get()._field_Model);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ab1bae99_possibleRefExpr(_self_, (*(_21980_r)).get()._field_Model);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1b9c34_unsafeBinary(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aab970_BinopExprModel> _24136_m) {
	if ((_24136_m.get()._field_Op.get()._field_Kind.equal("==", 2) || _24136_m.get()._field_Op.get()._field_Kind.equal("!=", 2))) {
		if (_1ab1c713c_isAny(&(_24136_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_1c4b4629b_IsNil(_24136_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1ab1c713c_isAny(&(_24136_m.get()._field_Right.get()._field_Kind)))))) {
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
				if (_24136_m.get()._field_Op.get()._field_Kind.equal("!=", 2)) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I32 _25125_i = _1ab2084e2_pushAnyType(_self_.get()._field_oc, &(_24136_m.get()._field_Right.get()._field_Kind));;
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(_25125_i));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1ab1bae99_possibleRefExpr(_self_, _24136_m.get()._field_Left.get()._field_Model);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1ab1bae99_possibleRefExpr(_self_, _24136_m.get()._field_Right.get()._field_Model);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ab1bae99_possibleRefExpr(_self_, _24136_m.get()._field_Left.get()._field_Model);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1ab203de4_write(_self_.get()._field_oc, _24136_m.get()._field_Op.get()._field_Kind);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1ab1bae99_possibleRefExpr(_self_, _24136_m.get()._field_Right.get()._field_Model);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1b9ea9_binary(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aab970_BinopExprModel> _27230_m) {
	{
		auto &_match_expr{ _27230_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1ad8d2867:;
			{
				if ((_1c4b604c4_Struct(_27230_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1ab1b99ae_divByZeroBinary(_self_, &(_27230_m.get()._field_Op), &(_27230_m.get()._field_Left), &(_27230_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_1ad8d27e0:;
	};
	_1ab1b9c34_unsafeBinary(_self_, _27230_m);
}



inline void _1ab1ba22e_var(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4b2c837_Var> _28427_m) {
	if (_28427_m.get()._field_CppLinked) {
		jule::Ptr<_1c4a5ad81_Directive> _28617_d = _1ab283182_findDirective(&(_28427_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28617_d != nullptr)) {
			_1ab203de4_write(_self_.get()._field_oc, _1ab27454c_concatAllParts(_28617_d.get()._field_Args));
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cd72b_var(_28427_m));
}



inline void _1ab1ba4a4_structureIns(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aab255_StructIns> _29536_m) {
	_1ab203de4_write(_self_.get()._field_oc, _1ab27a003_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29536_m));
}



inline void _1ab1ba729_unary(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aabb5c_UnaryExprModel> _29929_m) {
	{
		auto &_match_expr{ _29929_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ad8d7471:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1ab1bae99_possibleRefExpr(_self_, _29929_m.get()._field_Expr.get()._field_Model);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad8d74e8:;
			{
				if ((_2037bbbe5_Production || (_1c4b5e58e_Sptr(_29929_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1ad8d73d8;
				};
				_1ab1bae99_possibleRefExpr(_self_, _29929_m.get()._field_Expr.get()._field_Model);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1ab26ca95_locInfo(_self_.get()._field_oc, &(_29929_m.get()._field_Op));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1ad8d73d8:;
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ab203de4_write(_self_.get()._field_oc, _29929_m.get()._field_Op.get()._field_Kind);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ab1bae99_possibleRefExpr(_self_, _29929_m.get()._field_Expr.get()._field_Model);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1ab1ba99e_structureLit(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aac036_StructLitExprModel> _32336_m) {
	if (_32336_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cd1dc_structureIns(&(_32336_m.get()._field_Strct)));
	if (_32336_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_32336_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_32336_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad8de7ec:;
			if (it != expr_end) {
				jule::I32 _33617_i = it - expr->begin();
				jule::Ptr<_1c4aab068_FieldIns> _33620_f = *it;
				{
					{
						auto expr = &(_32336_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad8e0336:;
						if (it != expr_end) {
							jule::Ptr<_1c4aabd49_StructArgExprModel> _33729_arg = *it;
							{
								if ((_33729_arg.get()._field_Field == _33620_f)) {
									_1ab203de4_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1ab203de4_write(_self_.get()._field_oc, static__1ab1cd484_field(&(_33729_arg.get()._field_Field.get()._field_Decl)));
									_1ab203de4_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1ab1bae99_possibleRefExpr(_self_, _33729_arg.get()._field_Expr);
									if (((_32336_m.get()._field_Strct.get()._field_Fields.len() - _33617_i) > 1LL)) {
										_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1ad8de7ec;
								};
							}
							_iter_next_1ad8e0336:;
							++it;
							goto _iter_begin_1ad8e0336;
						}
						_iter_end_1ad8e0336:;
					};
				}
				_iter_next_1ad8de7ec:;
				++it;
				_33617_i++;
				goto _iter_begin_1ad8de7ec;
			}
			_iter_end_1ad8de7ec:;
		};
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ab1bac24_allocStructure(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aac223_AllocStructLitExprModel> _35438_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cd1dc_structureIns(&(_35438_m.get()._field_Lit.get()._field_Strct)));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1ab1ba99e_structureLit(_self_, _35438_m.get()._field_Lit);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1bae99_possibleRefExpr(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Any _36235_expr) {
	{
		auto &_match_expr{ _36235_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad8e5ade:;
			{
				jule::Ptr<_1c4b2c837_Var> _36517_v = _36235_expr.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8);;
				if (_36517_v.get()._field_Reference) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_1ab1c4c1c_model(_self_, _36235_expr);
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1ad8e59e0:;
	};
	_1ab1c4c1c_model(_self_, _36235_expr);
}



inline void _1ab1bb362_castTraitFromTrait(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aac410_CastingExprModel>* _37643_m, jule::Ptr<_1c4ac306e_Trait> _37669_t1, jule::Ptr<_1c4ac306e_Trait> _37685_t2) {
	_1ab1bae99_possibleRefExpr(_self_, (*(_37643_m)).get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(".mask<", 6));
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cc906_traitDecl(_37669_t1));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1ab26c963_pushAndWriteMaskMapper(_self_.get()._field_oc, _37669_t1, _37685_t2);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1bb5d7_casting(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aac410_CastingExprModel> _39131_m) {
	{
		
		if (_1ab1c713c_isAny(&(_39131_m.get()._field_Kind))) {
			_case_begin_1ad8ea352:;
			{
				if (_1c4b4629b_IsNil(_39131_m.get()._field_ExprKind.ptr())) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1c4b5ea23_TypeEnum(_39131_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1ab1bae99_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
					return;;
				};
				jule::I32 _40217_i = _1ab2084e2_pushAnyType(_self_.get()._field_oc, &(_39131_m.get()._field_ExprKind));;
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _39131_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1ad8edc07:;
						{
							jule::Ptr<_1c4b6197b_Prim> _40621_prim = _1c4b5e45c_Prim(_39131_m.get()._field_ExprKind.ptr());;
							if (((_40621_prim != nullptr) && _1c31777bd_IsInt(_40621_prim.get()._field_Kind))) {
								_1ab203de4_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1ab203de4_write(_self_.get()._field_oc, _1ab277231_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _40621_prim));
								_1ab203de4_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1ab1bae99_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
								_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1ad8eead7;
							};
							goto _case_begin_1ad8eeb3c;
						}
					}
					else {
						_case_begin_1ad8eeb3c:;
						{
							_1ab1bae99_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
						}
					}
					_match_end_1ad8eead7:;
				};
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(_40217_i));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if (_1ab1c713c_isAny(&(_39131_m.get()._field_ExprKind))) {
			_case_begin_1ad8ea3b8:;
			{
				_1ab1bae99_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1c4b5e58e_Sptr(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1c4b5e58e_Sptr(_39131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				};
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_2037bbbe5_Production))) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1ab26ca95_locInfo(_self_.get()._field_oc, &(_39131_m.get()._field_Token));
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(static_cast<jule::I32>(_1ab2084e2_pushAnyType(_self_.get()._field_oc, &(_39131_m.get()._field_Kind)))));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1c4b5e6c1_Ptr(_39131_m.get()._field_ExprKind.ptr()) != nullptr) || (_1c4b5e6c1_Ptr(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8ea42e:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1ab1bae99_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1c4b60738_Trait(_39131_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1ad8ea495:;
			{
				if ((_1c4b60738_Trait(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1ab1bb362_castTraitFromTrait(_self_, &(_39131_m), _1c4b60738_Trait(_39131_m.get()._field_Kind.ptr()), _1c4b60738_Trait(_39131_m.get()._field_ExprKind.ptr()));
					return;;
				};
				_1ab1bae99_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1c4b5e58e_Sptr(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1c4b5e58e_Sptr(_39131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				};
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_2037bbbe5_Production))) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1ab26ca95_locInfo(_self_.get()._field_oc, &(_39131_m.get()._field_Token));
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(static_cast<jule::I32>(_1ab26c831_findTypeOffset(_self_.get()._field_oc.ptr(), _1c4b60738_Trait(_39131_m.get()._field_ExprKind.ptr()), _39131_m.get()._field_Kind))));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1c4b60738_Trait(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad8ec387:;
			{
				_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1ab1bae99_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(static_cast<jule::I32>(_1ab26c831_findTypeOffset(_self_.get()._field_oc.ptr(), _1c4b60738_Trait(_39131_m.get()._field_Kind.ptr()), _39131_m.get()._field_ExprKind))));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1ad8ea2db:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1ab1bae99_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1ad8ea220:;
	};
}



inline void _1ab1bb85c_models(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Slice<jule::Any> _48630_args) {
	if ((_48630_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_48630_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad916538:;
		if (it != expr_end) {
			jule::I32 _49014_i = it - expr->begin();
			jule::Any _49021_a = *it;
			{
				_1ab1bae99_possibleRefExpr(_self_, _49021_a);
				if (((_48630_args.len() - _49014_i) > 1LL)) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1ad916538:;
			++it;
			_49014_i++;
			goto _iter_begin_1ad916538;
		}
		_iter_end_1ad916538:;
	};
}



inline void _1ab1bbad2_args(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aac5ec_FnCallExprModel>* _49829_m) {
	jule::I32 _49917_j = 0LL;;
	if ((((*(_49829_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_49829_m)).get()._field_Func.get()._field_Decl.get()._field_Statically)))) {
		(_49917_j)++;
	};
	{
		auto expr = &((*(_49829_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad91931b:;
		if (it != expr_end) {
			jule::I32 _50313_i = it - expr->begin();
			jule::Any _50316_arg = *it;
			{
				jule::Ptr<_1c4ab2b30_ParamIns> _50417_p = (*(_49829_m)).get()._field_Func.get()._field_Params[_49917_j];;
				if (((_50417_p.get()._field_Decl != nullptr) && _50417_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _50316_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1ad91aad1:;
							{
								jule::Ptr<_1c4b2c837_Var> _50825_v = _50316_arg.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8);;
								if (_50825_v.get()._field_Reference) {
									_1ab1c4c1c_model(_self_, _50316_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_1ad91a9e3:;
					};
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1ab1c4c1c_model(_self_, _50316_arg);
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_1ab1bae99_possibleRefExpr(_self_, _50316_arg);
				_julec_label_end:;
				if ((((*(_49829_m)).get()._field_Args.len() - _50313_i) > 1LL)) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_49917_j)++;
			}
			_iter_next_1ad91931b:;
			++it;
			_50313_i++;
			goto _iter_begin_1ad91931b;
		}
		_iter_end_1ad91931b:;
	};
}



inline void _1ab1bbd57_modelForCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Any _52836_expr) {
	{
		auto &_match_expr{ _52836_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad91ed16:;
			{
				_1ab1c01ce_funcIns(_self_, _52836_expr.cast_ptr<_1c4ab39ee_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ad91ed8d:;
			{
				jule::Ptr<_1c4aad884_StructSubIdentExprModel> _53421_ssie = _52836_expr.cast_ptr<_1c4aad884_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_53421_ssie.get()._field_Method != nullptr)) {
					_1ab1c01ce_funcIns(_self_, _53421_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1ad91ec06:;
	};
	_1ab1bae99_possibleRefExpr(_self_, _52836_expr);
}



inline void _1ab1bc0cc_pushCallInf(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aac5ec_FnCallExprModel>* _54332_m) {
	if ((_2037bbbe5_Production || ((!((*(_54332_m)).get()._field_Func.get()._field_Anon)) && (!(_1ab1c6b64_isBuiltinCallHasDebuginf(_54332_m)))))) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_54332_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_54332_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1ad923039:;
				{
					if ((*(_54332_m)).get()._field_Expr.cast_ptr<_1c4aad884_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1ad923215;
				}
			}
			else {
				_case_begin_1ad923215:;
				{
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1ad9230d3:;
		};
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1ab26ca95_locInfo(_self_.get()._field_oc, &((*(_54332_m)).get()._field_Token));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_54332_m)).get()._field_Args.len() != 0LL)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1ab1bc3da_isWrapped(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aac5ec_FnCallExprModel>* _56834_m) {
	if ((((!(_1c4ab4d85_IsBuiltin((*(_56834_m)).get()._field_Func.ptr()))) && ((*(_56834_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1c4a6c810_IsSelf((*(_56834_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_56834_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1ad926b64:;
				{
					jule::Ptr<_1c4aad884_StructSubIdentExprModel> _57225_ssie = (*(_56834_m)).get()._field_Expr.cast_ptr<_1c4aad884_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1c4a71e63_IsRef((*(_56834_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1c4b5e58e_Sptr(_57225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1ad927439:;
							{
								goto _match_end_1ad9279cd;
							}
						}
						else {
							_case_begin_1ad927a44:;
							{
								if ((_1c4b604c4_Struct(_57225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_57225_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1ab203de4_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1ab1c4c1c_model(_self_, _57225_ssie.get()._field_Expr.get()._field_Model);
										_1ab203de4_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1ad9279cd:;
					};
				}
			}
			_match_end_1ad926955:;
		};
	};
	return false;;
}



inline void _1ab1bc660_pureFuncCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aac5ec_FnCallExprModel>* _59237_m) {
	jule::Bool _59313_wrapped = _1ab1bc3da_isWrapped(_self_, _59237_m);;
	_1ab1bbd57_modelForCall(_self_, (*(_59237_m)).get()._field_Expr);
	if ((!(_1c4ab4d85_IsBuiltin((*(_59237_m)).get()._field_Func.ptr())))) {
		if (((*(_59237_m)).get()._field_Func.get()._field_Decl.get()._field_CppLinked && ((*(_59237_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1ab283517_hasDirective(&((*(_59237_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_59237_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad92d42e:;
					if (it != expr_end) {
						jule::I32 _59926_i = it - expr->begin();
						jule::Ptr<_1c47006e6_InsGeneric> _59933_g = *it;
						{
							_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _59933_g.get()._field_Kind));
							if ((((*(_59237_m)).get()._field_Func.get()._field_Generics.len() - _59926_i) > 1LL)) {
								_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1ad92d42e:;
						++it;
						_59926_i++;
						goto _iter_begin_1ad92d42e;
					}
					_iter_end_1ad92d42e:;
				};
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1ab1bc0cc_pushCallInf(_self_, _59237_m);
	jule::Bool _61017_locinfo = false;;
	if ((((!(_1c4ab4d85_IsBuiltin((*(_59237_m)).get()._field_Func.ptr()))) && ((*(_59237_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1c4a6c810_IsSelf((*(_59237_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_59237_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1ad931d8e:;
				{
					jule::Ptr<_1c4aad884_StructSubIdentExprModel> _61425_ssie = (*(_59237_m)).get()._field_Expr.cast_ptr<_1c4aad884_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1c4a71e63_IsRef((*(_59237_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1ad935942:;
							{
								_1ab1bae99_possibleRefExpr(_self_, _61425_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1c4b5e58e_Sptr(_61425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1ad9359a8:;
							{
								_1ab1bae99_possibleRefExpr(_self_, _61425_ssie.get()._field_Expr.get()._field_Model);
								_1ab203de4_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_2037bbbe5_Production))) {
									_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1ab26ca95_locInfo(_self_.get()._field_oc, &((*(_59237_m)).get()._field_Token));
									_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1ad932d07:;
							{
								if ((_1c4b604c4_Struct(_61425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _61425_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1ad9326ec:;
											{
												jule::Ptr<_1c4b2c837_Var> _63133_v = _61425_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8);;
												if (_63133_v.get()._field_Reference) {
													goto _match_end_1ad933874;
												};
												goto _case_begin_1ad9338c9;
											}
										}
										else {
											_case_begin_1ad9338c9:;
											{
												_1ab203de4_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1ad933874:;
									};
								};
								if (_59313_wrapped) {
									_1ab203de4_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1ab1c4c1c_model(_self_, _61425_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1ad932c91:;
					};
					if (((*(_59237_m)).get()._field_Args.len() > 0LL)) {
						_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_1ad931e05:;
				{
					_1ab1bae99_possibleRefExpr(_self_, (*(_59237_m)).get()._field_Expr.cast_ptr<_1c4aad466_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_2037bbbe5_Production))) {
						_61017_locinfo=true;
					};
					if (((*(_59237_m)).get()._field_Args.len() > 0LL)) {
						_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1ad931b80:;
		};
	};
	_1ab1bbad2_args(_self_, _59237_m);
	if (_61017_locinfo) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1ab26ca95_locInfo(_self_.get()._field_oc, &((*(_59237_m)).get()._field_Token));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_59313_wrapped) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1ab1bc8d5_coFuncCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aac5ec_FnCallExprModel>* _67335_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	jule::Str _67617_head = jule::Str("std::thread([", 13);;
	if (((*(_67335_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		(_67617_head).append("_self_", 6);
		if (((*(_67335_m)).get()._field_Args.len() > 0LL)) {
			(_67617_head).append(", ", 2);
		};
	};
	{
		auto expr = &((*(_67335_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad940243:;
		if (it != expr_end) {
			jule::I32 _68313_i = it - expr->begin();
			jule::Any _68316_arg = *it;
			{
				if ((_68313_i > 0LL)) {
					(_67617_head).append(", ", 2);
				};
				{
					auto &_match_expr{ _68316_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ad942146:;
						{
							jule::Ptr<_1c4b2c837_Var> _68925_v = _68316_arg.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8);;
							_67617_head+=static__1ab1cd72b_var(_68925_v);
							goto _iter_next_1ad940243;
						}
					}
					_match_end_1ad9418e8:;
				};
				jule::Str _69317_name = (jule::Str("_co_arg_", 8) + _1c3174853_Itoa(_68313_i));;
				_67617_head+=_69317_name;
				_1ab246b3a_indent(_self_.get()._field_oc);
				_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_67335_m)).get()._field_Func.get()._field_Params[_68313_i].get()._field_Kind));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_67335_m)).get()._field_Func.get()._field_Params[_68313_i].get()._field_Decl.get()._field_Reference) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1ab203de4_write(_self_.get()._field_oc, _69317_name);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1ab1bae99_possibleRefExpr(_self_, _68316_arg);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _70517_argS = jule::Any(_69317_name, &__jule_any_type5);;
				(*(_67335_m)).get()._field_Args[_68313_i]=(*(((jule::Any*)((&(_70517_argS))))));
			}
			_iter_next_1ad940243:;
			++it;
			_68313_i++;
			goto _iter_begin_1ad940243;
		}
		_iter_end_1ad940243:;
	};
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, _67617_head);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab1bc660_pureFuncCall(_self_, _67335_m);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ab1bcc04_writeUseExpr(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _72337_f, jule::Ptr<_1c45e6e17_Data> _72352_d) {
	if ((_1c4b60c11_Tup(_72352_d.get()._field_Kind.ptr()) == nullptr)) {
		_1ab1bae99_possibleRefExpr(_self_, _72352_d.get()._field_Model);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1c4aae324_TupleExprModel> _72917_tup = _72352_d.get()._field_Model.cast_ptr<_1c4aae324_TupleExprModel>(&__jule_any_type88);;
	_1ab280d83_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _1c4b60c11_Tup((*(_72337_f)).get()._field_Result.ptr()));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_72917_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad94d031:;
		if (it != expr_end) {
			jule::I32 _73213_i = it - expr->begin();
			jule::Ptr<_1c45e6e17_Data> _73216_data = *it;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(_73213_i));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1ab1bae99_possibleRefExpr(_self_, _73216_data.get()._field_Model);
				if (((_72917_tup.get()._field_Datas.len() - _73213_i) > 1LL)) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1ad94d031:;
			++it;
			_73213_i++;
			goto _iter_begin_1ad94d031;
		}
		_iter_end_1ad94d031:;
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1ab1bce79_funcCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aac5ec_FnCallExprModel> _74432_m) {
	if (_74432_m.get()._field_IsCo) {
		_1ab1bc8d5_coFuncCall(_self_, &(_74432_m));
		return;;
	};
	if (((_1c4ab4d85_IsBuiltin(_74432_m.get()._field_Func.ptr()) || (!(_74432_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_74432_m.get()._field_Except != nullptr) && (_74432_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1ab1bc660_pureFuncCall(_self_, &(_74432_m));
		return;;
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1ab1bc660_pureFuncCall(_self_, &(_74432_m));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ab246b3a_indent(_self_.get()._field_oc);
	if ((_74432_m.get()._field_Except != nullptr)) {
		if (((_74432_m.get()._field_Func.get()._field_Result == nullptr) || (!(_74432_m.get()._field_Assigned)))) {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1ab1b513b_scope(_self_.get()._field_oc.get()._field_sc, _74432_m.get()._field_Except);
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _77021_forwarded = _1ab1c689a_isForwarded(&(_74432_m.get()._field_Except));;
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_77021_forwarded) {
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _77525_stmt = _74432_m.get()._field_Except.get()._field_Stmts[(_74432_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _77525_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_1ad957711:;
					{
						_74432_m.get()._field_Except.get()._field_Stmts=_74432_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_74432_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1ab203de4_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1ab2430ba_addIndent(_self_.get()._field_oc);
						_1ab1b4db6_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_74432_m.get()._field_Except));
						_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1ab246b3a_indent(_self_.get()._field_oc);
						_1ab1bcc04_writeUseExpr(_self_, &(_74432_m.get()._field_Func), _77525_stmt.cast_ptr<_1c45e6e17_Data>(&__jule_any_type23));
						_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1ab2435d7_doneIndent(_self_.get()._field_oc);
						_1ab246b3a_indent(_self_.get()._field_oc);
						_1ab203de4_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1ad9585e1:;
					{
						_1ab1b513b_scope(_self_.get()._field_oc.get()._field_sc, _74432_m.get()._field_Except);
					}
				}
				_match_end_1ad95858b:;
			};
			if (_77021_forwarded) {
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1ab1c4e92_initExpr(_self_, _74432_m.get()._field_Func.get()._field_Result);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1ab203de4_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1ab2435d7_doneIndent(_self_.get()._field_oc);
	} else {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1ab26ca95_locInfo(_self_.get()._field_oc, &(_74432_m.get()._field_Token));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1c4a871ed_IsVoid(_74432_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1ab246b3a_indent(_self_.get()._field_oc);
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1ab2435d7_doneIndent(_self_.get()._field_oc);
	};
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ab1bd1ee_slice(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aac7d9_SliceExprModel> _81529_m) {
	if ((_81529_m.get()._field_Elems.len() == 0LL)) {
		_1ab203de4_write(_self_.get()._field_oc, _1ab278ba0_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _81529_m.get()._field_ElemKind));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1ab203de4_write(_self_.get()._field_oc, _1ab278ba0_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _81529_m.get()._field_ElemKind));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1ab1bb85c_models(_self_, _81529_m.get()._field_Elems);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ab1bd474_indexing(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aac9c6_IndexingExprModel> _82732_m) {
	_1ab1bae99_possibleRefExpr(_self_, _82732_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_2037bbbe5_Production || (_1c4b5e6c1_Ptr(_82732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1c4b6099c_Map(_82732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1ab1c6d95_isExprComesFromBind(&(_82732_m.get()._field_Expr))) {
			_case_begin_1ad964d39:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1ab1bae99_possibleRefExpr(_self_, _82732_m.get()._field_Index.get()._field_Model);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1ad9655a9:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1ab26ca95_locInfo(_self_.get()._field_oc, &(_82732_m.get()._field_Token));
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_1ab1bae99_possibleRefExpr(_self_, _82732_m.get()._field_Index.get()._field_Model);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1ad965543:;
	};
}



inline void _1ab1bd6e9_unsafeIndexing(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c48a5deb_UnsafeIndexingExprModel> _84738_m) {
	_1ab1bae99_possibleRefExpr(_self_, _84738_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_2037bbbe5_Production || (_1c4b5e6c1_Ptr(_84738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1c4b6099c_Map(_84738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad9693c1:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1ab1bae99_possibleRefExpr(_self_, _84738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1ad969bb8:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1ab1bae99_possibleRefExpr(_self_, _84738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1ad969b52:;
	};
}



inline void _1ab1bd96e_anonFunc(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aacbb3_AnonFnExprModel> _86432_m) {
	_1ab203de4_write(_self_.get()._field_oc, _1ab27b675_func(_self_.get()._field_oc.get()._field_tc.ptr(), _86432_m.get()._field_Func));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1ab27026d_paramsIns(_self_.get()._field_oc, &(_86432_m.get()._field_Func.get()._field_Params));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1ab27b059_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_86432_m.get()._field_Func));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1ab1b53b1_funcScope(_self_.get()._field_oc.get()._field_sc, _86432_m.get()._field_Func);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1bdbe4_mapExpr(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aad08c_MapExprModel> _87531_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _87531_m.get()._field_KeyKind));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _87531_m.get()._field_ValKind));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_87531_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_87531_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad973b06:;
			if (it != expr_end) {
				jule::I32 _88218_i = it - expr->begin();
				jule::Ptr<_1c4aacda0_KeyValPairExprModel> _88225_pair = *it;
				{
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1ab1bae99_possibleRefExpr(_self_, _88225_pair.get()._field_Key);
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1ab1bae99_possibleRefExpr(_self_, _88225_pair.get()._field_Val);
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_87531_m.get()._field_Entries.len() - _88218_i) > 1LL)) {
						_1ab203de4_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1ad973b06:;
				++it;
				_88218_i++;
				goto _iter_begin_1ad973b06;
			}
			_iter_end_1ad973b06:;
		};
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ab1bde69_slicing(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aad279_SlicingExprModel> _89631_m) {
	_1ab1bae99_possibleRefExpr(_self_, _89631_m.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_2037bbbe5_Production))) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ab26ca95_locInfo(_self_.get()._field_oc, &(_89631_m.get()._field_Token));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1ab1bae99_possibleRefExpr(_self_, _89631_m.get()._field_Left);
	if ((_89631_m.get()._field_Right != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1ab1bae99_possibleRefExpr(_self_, _89631_m.get()._field_Right);
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1be1de_traitSub(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aad466_TraitSubIdentExprModel> _91232_m) {
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cc906_traitDecl(_91232_m.get()._field_Trt));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1ab1bae99_possibleRefExpr(_self_, _91232_m.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cc3b7_func(&(_91232_m.get()._field_Method)));
}



inline void _1ab1be464_structureSub(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aad884_StructSubIdentExprModel> _92136_m) {
	_1ab1bae99_possibleRefExpr(_self_, _92136_m.get()._field_Expr.get()._field_Model);
	if ((_92136_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_1c4b5e6c1_Ptr(_92136_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_1c4b5e58e_Sptr(_92136_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_2037bbbe5_Production))) {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_1ab26ca95_locInfo(_self_.get()._field_oc, &(_92136_m.get()._field_Token));
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cd484_field(&(_92136_m.get()._field_Field.get()._field_Decl)));
}



inline void _1ab1be6d9_commonIdent(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aade4a_CommonIdentExprModel> _94231_m) {
	_1ab203de4_write(_self_.get()._field_oc, _94231_m.get()._field_Ident);
}



inline void _1ab1be95e_commonSub(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aae137_CommonSubIdentExprModel> _94633_m) {
	_1ab1bae99_possibleRefExpr(_self_, _94633_m.get()._field_Expr);
	{
		
		if ((_1c4b5e6c1_Ptr(_94633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1ad982be2:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1c4b5e58e_Sptr(_94633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1ad9833eb:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_2037bbbe5_Production))) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1ab26ca95_locInfo(_self_.get()._field_oc, &(_94633_m.get()._field_Token));
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1ad983385:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1ad98331e:;
	};
	_1ab203de4_write(_self_.get()._field_oc, _94633_m.get()._field_Ident);
}



inline void _1ab1bebd4_array(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aadc5d_ArrayExprModel> _96529_m) {
	_1ab203de4_write(_self_.get()._field_oc, _1ab27a311_array(_self_.get()._field_oc.get()._field_tc.ptr(), _96529_m.get()._field_Kind));
	if ((_96529_m.get()._field_Elems.len() == 0LL)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_96529_m.get()._field_Elems.len() == 2LL) && (_96529_m.get()._field_Elems[1LL] == nullptr))) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1ab1bae99_possibleRefExpr(_self_, _96529_m.get()._field_Elems[0LL]);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1ab1bb85c_models(_self_, _96529_m.get()._field_Elems);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1ab1bee59_funcInsCommon(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab39ee_FnIns> _98837_m) {
	_1ab203de4_write(_self_.get()._field_oc, _1ab27b675_func(_self_.get()._field_oc.get()._field_tc.ptr(), _98837_m));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ab1c01ce_funcIns(_self_, _98837_m);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1c01ce_funcIns(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab39ee_FnIns> _99531_m) {
	if (((_99531_m.get()._field_Decl != nullptr) && _99531_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1c4a5ad81_Directive> _99717_d = _1ab283182_findDirective(&(_99531_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_99717_d != nullptr)) {
			_1ab203de4_write(_self_.get()._field_oc, _1ab27454c_concatAllParts(_99717_d.get()._field_Args));
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cc65e_funcIns(&(_99531_m)));
}



inline void _1ab1c0454_tuple(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aae324_TupleExprModel> _100629_m) {
	{
		auto expr = &(_100629_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9906e4:;
		if (it != expr_end) {
			jule::I32 _100714_i = it - expr->begin();
			jule::Ptr<_1c45e6e17_Data> _100721_d = *it;
			{
				_1ab1bae99_possibleRefExpr(_self_, _100721_d.get()._field_Model);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_100629_m.get()._field_Datas.len() - _100714_i) > 1LL)) {
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1ab246b3a_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1ad9906e4:;
			++it;
			_100714_i++;
			goto _iter_begin_1ad9906e4;
		}
		_iter_end_1ad9906e4:;
	};
}



inline void _1ab1c06c9_newCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aaeac7_BuiltinNewCallExprModel> _101731_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _101731_m.get()._field_Kind));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_101731_m.get()._field_Init != nullptr)) {
		_1ab1bae99_possibleRefExpr(_self_, _101731_m.get()._field_Init);
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1c094e_outCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aae511_BuiltinOutCallExprModel> _102731_m) {
	if ((_102731_m.get()._field_Debug && _2037bbbe5_Production)) {
		return;;
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1ab1bae99_possibleRefExpr(_self_, _102731_m.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1c0bc4_outlnCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aae6ed_BuiltinOutlnCallExprModel> _103633_m) {
	if ((_103633_m.get()._field_Debug && _2037bbbe5_Production)) {
		return;;
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1ab1bae99_possibleRefExpr(_self_, _103633_m.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1c0e49_panicCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aaecb4_BuiltinPanicCallExprModel> _104533_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1ab1bae99_possibleRefExpr(_self_, _104533_m.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1ab26ca95_locInfo(_self_.get()._field_oc, &(_104533_m.get()._field_Token));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1ab1c11be_assertCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aaeea1_BuiltinAssertCallExprModel> _105334_m) {
	if (_2037bbbe5_Production) {
		return;;
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1ab1bae99_possibleRefExpr(_self_, _105334_m.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1ab203de4_write(_self_.get()._field_oc, _1ab1c5b96_cstrLit(static_cast<jule::Slice<jule::U8>>(_105334_m.get()._field_Log)));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1ab26ca95_locInfo(_self_.get()._field_oc, &(_105334_m.get()._field_Token));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1ab1c1444_errorCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab10a1_BuiltinErrorCallExprModel> _106633_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1c4a871ed_IsVoid(_106633_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _106633_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ad99d416:;
				{
					jule::Ptr<_1c4b2c837_Var> _107121_v = _106633_m.get()._field_Err.get()._field_Model.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8);;
					if (_107121_v.get()._field_Ident.equal("error", 5)) {
						_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1ad99d3b1:;
		};
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1ab2814c1_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_106633_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _106633_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1ad9a11e9:;
				{
					jule::Ptr<_1c4b2c837_Var> _108321_v = _106633_m.get()._field_Err.get()._field_Model.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8);;
					if (_108321_v.get()._field_Ident.equal("error", 5)) {
						_1ab203de4_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1ad9a113e:;
		};
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1ab1bae99_possibleRefExpr(_self_, _106633_m.get()._field_Err.get()._field_Model);
	jule::I32 _109213_i = _1ab2084e2_pushAnyType(_self_.get()._field_oc, &(_106633_m.get()._field_Err.get()._field_Kind));;
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(_109213_i));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1ab1c16b9_copyCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab0db4_BuiltinCopyCallExprModel> _109832_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1ab1bae99_possibleRefExpr(_self_, _109832_m.get()._field_Dest.get()._field_Model);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1c4b5e45c_Prim(_109832_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1ab1bae99_possibleRefExpr(_self_, _109832_m.get()._field_Src.get()._field_Model);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1c4b5e45c_Prim(_109832_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1c193e_lenCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab0567_BuiltinLenCallExprModel> _111431_m) {
	_1ab1bae99_possibleRefExpr(_self_, _111431_m.get()._field_Expr.get()._field_Model);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1ab1c1bb4_capCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab0754_BuiltinCapCallExprModel> _111931_m) {
	_1ab1bae99_possibleRefExpr(_self_, _111931_m.get()._field_Expr.get()._field_Model);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1ab1c1e39_deleteCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aad653_BuiltinDeleteCallExprModel> _112434_m) {
	_1ab1bae99_possibleRefExpr(_self_, _112434_m.get()._field_Dest.get()._field_Model);
	if ((_112434_m.get()._field_Key != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1ab1bae99_possibleRefExpr(_self_, _112434_m.get()._field_Key.get()._field_Model);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1ab1c21ae_makeCallSlice(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab018d_BuiltinMakeCallExprModel>* _113538_m) {
	jule::Ptr<_1c4b65b6c_Slc> _113617_slice = _1c4b5eeeb_Slc((*(_113538_m)).get()._field_Kind.ptr());;
	_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_113538_m)).get()._field_Kind));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1ab1bae99_possibleRefExpr(_self_, (*(_113538_m)).get()._field_Len);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_113538_m)).get()._field_Cap != nullptr)) {
		_1ab1bae99_possibleRefExpr(_self_, (*(_113538_m)).get()._field_Cap);
	} else {
		_1ab1bae99_possibleRefExpr(_self_, (*(_113538_m)).get()._field_Len);
	};
	if (_1ab2837ae_shouldInitialized(&(_113617_slice.get()._field_Elem))) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1ab1c4e92_initExpr(_self_, _113617_slice.get()._field_Elem);
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1c2434_makeCallStr(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab018d_BuiltinMakeCallExprModel>* _115336_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1ab1bae99_possibleRefExpr(_self_, (*(_115336_m)).get()._field_Len);
	if (((*(_115336_m)).get()._field_Cap != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1ab1bae99_possibleRefExpr(_self_, (*(_115336_m)).get()._field_Cap);
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1c26a9_makeCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab018d_BuiltinMakeCallExprModel> _116432_m) {
	if ((_1c4b5eeeb_Slc(_116432_m.get()._field_Kind.ptr()) != nullptr)) {
		_1ab1c21ae_makeCallSlice(_self_, &(_116432_m));
		return;;
	};
	_1ab1c2434_makeCallStr(_self_, &(_116432_m));
}



inline void _1ab1c292e_pushToSlice(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c1dc96db_PushToSliceExprModel> _117235_m) {
	jule::I32 _117313_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1ab1bae99_possibleRefExpr(_self_, _117235_m.get()._field_Dest);
	jule::Str _117513_dest = _self_.get()._field_oc.get()._field_Obj.slice(_117313_n);;
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1ab203de4_write(_self_.get()._field_oc, _117513_dest);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(static_cast<jule::I32>(_117235_m.get()._field_Elems.get()._field_Elems.len())));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto expr = &(_117235_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9b7dae:;
		if (it != expr_end) {
			jule::Any _118221_e = *it;
			{
				_1ab203de4_write(_self_.get()._field_oc, _117513_dest);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1ab1bae99_possibleRefExpr(_self_, _118221_e);
				_1ab203de4_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1ad9b7dae:;
			++it;
			goto _iter_begin_1ad9b7dae;
		}
		_iter_end_1ad9b7dae:;
	};
}



inline void _1ab1c2ba4_appendCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab037a_BuiltinAppendCallExprModel> _119134_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1ab1bae99_possibleRefExpr(_self_, _119134_m.get()._field_Dest);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ab1bae99_possibleRefExpr(_self_, _119134_m.get()._field_Elements);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1c2e29_cloneCall(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aae8da_BuiltinCloneCallExprModel> _119933_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1ab1bae99_possibleRefExpr(_self_, _119933_m.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1c319e_sizeof(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab128d_SizeofExprModel> _120530_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1ab1bae99_possibleRefExpr(_self_, _120530_m.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1c3424_alignof(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab147a_AlignofExprModel> _121131_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1ab1bae99_possibleRefExpr(_self_, _121131_m.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1ab1c3732_runeLit(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab1667_RuneExprModel> _121727_m) {
	if ((_121727_m.get()._field_Code <= 127LL)) {
		jule::Str _121921_b = _1ab1c55d0_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_121727_m.get()._field_Code)));;
		if (_121921_b.equal("'", 1)) {
			_121921_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _121921_b) + jule::Str("'", 1));;
	};
	return _1ab1c624b_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_121727_m.get()._field_Code)));;
}



inline void _1ab1c39a7_structureStatic(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4aada71_StructStaticIdentExprModel> _122839_m) {
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cc65e_funcIns(&(_122839_m.get()._field_Method)));
}



inline void _1ab1c3c2c_integratedToStr(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab1854_IntegratedToStrExprModel> _123239_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1ab1bae99_possibleRefExpr(_self_, _123239_m.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ab1c3ea2_backendEmit(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab1a41_BackendEmitExprModel> _123835_m) {
	if ((_123835_m.get()._field_Exprs.len() == 0LL)) {
		_1ab203de4_write(_self_.get()._field_oc, _123835_m.get()._field_Code);
		return;;
	};
	jule::I32 _124313_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _124417_args = jule::Slice<jule::Any>::alloc(_123835_m.get()._field_Exprs.len(), _123835_m.get()._field_Exprs.len());;
	{
		auto expr = &(_123835_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad9c3837:;
		if (it != expr_end) {
			jule::I32 _124514_i = it - expr->begin();
			jule::Any _124521_expr = *it;
			{
				_1ab1bae99_possibleRefExpr(_self_, _124521_expr);
				_124417_args[_124514_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_124313_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _124313_n);
			}
			_iter_next_1ad9c3837:;
			++it;
			_124514_i++;
			goto _iter_begin_1ad9c3837;
		}
		_iter_end_1ad9c3837:;
	};
	_1ab203de4_write(_self_.get()._field_oc, _1c4c17e3e_Format(_123835_m.get()._field_Code, _124417_args));
}



inline void _1ab1c4227_free(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4ab1c2d_FreeExprModel> _125328_m) {
	_1ab1bae99_possibleRefExpr(_self_, _125328_m.get()._field_Expr);
	if (_2037bb552_RC) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1ab1c449c_mutSlicing(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c1e2756e_MutSlicingExprModel> _126234_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ab1bae99_possibleRefExpr(_self_, _126234_m.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_2037bbbe5_Production))) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ab26ca95_locInfo(_self_.get()._field_oc, &(_126234_m.get()._field_Token));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1ab1bae99_possibleRefExpr(_self_, _126234_m.get()._field_Left);
	if ((_126234_m.get()._field_Right != nullptr)) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1ab1bae99_possibleRefExpr(_self_, _126234_m.get()._field_Right);
	};
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1ab1c4722_strInsertBegin(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c1e0ec4e_StrInsertBeginExprModel> _127938_m) {
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ab1bae99_possibleRefExpr(_self_, _127938_m.get()._field_Dest);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1ab1bae99_possibleRefExpr(_self_, _127938_m.get()._field_Expr);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1ab1c4997_strComp(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c1e783a0_StrCompExprModel> _128731_m) {
	if (_128731_m.get()._field_NotEq) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Slice<jule::U8> _129113_bytes = static_cast<jule::Slice<jule::U8>>(_1c3178192_ReadStr(_128731_m.get()._field_Right.ptr()));;
	_1ab1bae99_possibleRefExpr(_self_, _128731_m.get()._field_Left);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_1ab203de4_write(_self_.get()._field_oc, _1ab1c5b96_cstrLit(_129113_bytes));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(static_cast<jule::I32>(_129113_bytes.len())));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_128731_m.get()._field_NotEq) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1ab1c4c1c_model(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Any _130329_m) {
	{
		auto &_match_expr{ _130329_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ad9d28e0:;
			{
				_1ab203de4_write(_self_.get()._field_oc, _130329_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ad9d2bba:;
			{
				_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _130329_m.cast_ptr<_1c4621d32_TypeKind>(&__jule_any_type90)));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ad9d2c31:;
			{
				_1ab1b95e6_constant(_self_, _130329_m.cast_ptr<_1c25bc4e9_Const>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad9d2c97:;
			{
				_1ab1ba22e_var(_self_, _130329_m.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad9d2d0d:;
			{
				_1ab1ba4a4_structureIns(_self_, _130329_m.cast_ptr<_1c4aab255_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad9d3825:;
			{
				_1ab1bee59_funcInsCommon(_self_, _130329_m.cast_ptr<_1c4ab39ee_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1ad9d388b:;
			{
				_1ab1b9c34_unsafeBinary(_self_, _130329_m.cast_ptr<_1c1deca1c_UnsafeBinopExprModel>(&__jule_any_type131).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad9d3902:;
			{
				_1ab1b9ea9_binary(_self_, _130329_m.cast_ptr<_1c4aab970_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ad9d3968:;
			{
				_1ab1ba729_unary(_self_, _130329_m.cast_ptr<_1c4aabb5c_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ad9d39ce:;
			{
				_1ab1ba99e_structureLit(_self_, _130329_m.cast_ptr<_1c4aac036_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ad9d3a45:;
			{
				_1ab1bac24_allocStructure(_self_, _130329_m.cast_ptr<_1c4aac223_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ad9d3aab:;
			{
				_1ab1bb5d7_casting(_self_, _130329_m.cast_ptr<_1c4aac410_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ad9d3b22:;
			{
				_1ab1bce79_funcCall(_self_, _130329_m.cast_ptr<_1c4aac5ec_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1ad9d3b88:;
			{
				_1ab1bd1ee_slice(_self_, _130329_m.cast_ptr<_1c4aac7d9_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ad9d3bee:;
			{
				_1ab1bebd4_array(_self_, _130329_m.cast_ptr<_1c4aadc5d_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1ad9d3c65:;
			{
				_1ab1bd6e9_unsafeIndexing(_self_, _130329_m.cast_ptr<_1c48a5deb_UnsafeIndexingExprModel>(&__jule_any_type132));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ad9d3ccb:;
			{
				_1ab1bd474_indexing(_self_, _130329_m.cast_ptr<_1c4aac9c6_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ad9d3d53:;
			{
				_1ab1bd96e_anonFunc(_self_, _130329_m.cast_ptr<_1c4aacbb3_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ad9d3dca:;
			{
				_1ab1bdbe4_mapExpr(_self_, _130329_m.cast_ptr<_1c4aad08c_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad9d3e52:;
			{
				_1ab1bde69_slicing(_self_, _130329_m.cast_ptr<_1c4aad279_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ad9d3ec9:;
			{
				_1ab1be1de_traitSub(_self_, _130329_m.cast_ptr<_1c4aad466_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ad9d4051:;
			{
				_1ab1be464_structureSub(_self_, _130329_m.cast_ptr<_1c4aad884_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ad9d40c8:;
			{
				_1ab1be6d9_commonIdent(_self_, _130329_m.cast_ptr<_1c4aade4a_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ad9d4150:;
			{
				_1ab1be95e_commonSub(_self_, _130329_m.cast_ptr<_1c4aae137_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ad9d41c7:;
			{
				_1ab1c0454_tuple(_self_, _130329_m.cast_ptr<_1c4aae324_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ad9d424e:;
			{
				_1ab1c094e_outCall(_self_, _130329_m.cast_ptr<_1c4aae511_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ad9d42c6:;
			{
				_1ab1c0bc4_outlnCall(_self_, _130329_m.cast_ptr<_1c4aae6ed_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ad9d434d:;
			{
				_1ab1c06c9_newCall(_self_, _130329_m.cast_ptr<_1c4aaeac7_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ad9d43c5:;
			{
				_1ab1c0e49_panicCall(_self_, _130329_m.cast_ptr<_1c4aaecb4_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ad9d444c:;
			{
				_1ab1c11be_assertCall(_self_, _130329_m.cast_ptr<_1c4aaeea1_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ad9d44c4:;
			{
				_1ab1c1444_errorCall(_self_, _130329_m.cast_ptr<_1c4ab10a1_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ad9d454b:;
			{
				_1ab1c26a9_makeCall(_self_, _130329_m.cast_ptr<_1c4ab018d_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ad9d45c3:;
			{
				_1ab1c2ba4_appendCall(_self_, _130329_m.cast_ptr<_1c4ab037a_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ad9d464a:;
			{
				_1ab1c2e29_cloneCall(_self_, _130329_m.cast_ptr<_1c4aae8da_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ad9d46c2:;
			{
				_1ab1c16b9_copyCall(_self_, _130329_m.cast_ptr<_1c4ab0db4_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ad9d4749:;
			{
				_1ab1c193e_lenCall(_self_, _130329_m.cast_ptr<_1c4ab0567_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1ad9d47c1:;
			{
				_1ab1c1bb4_capCall(_self_, _130329_m.cast_ptr<_1c4ab0754_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ad9d4848:;
			{
				_1ab1c1e39_deleteCall(_self_, _130329_m.cast_ptr<_1c4aad653_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1ad9d48c0:;
			{
				_1ab1c319e_sizeof(_self_, _130329_m.cast_ptr<_1c4ab128d_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1ad9d4947:;
			{
				_1ab1c3424_alignof(_self_, _130329_m.cast_ptr<_1c4ab147a_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ad9d49be:;
			{
				_1ab203de4_write(_self_.get()._field_oc, _1ab1c3732_runeLit(_self_, _130329_m.cast_ptr<_1c4ab1667_RuneExprModel>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ad9d4a46:;
			{
				_1ab1c39a7_structureStatic(_self_, _130329_m.cast_ptr<_1c4aada71_StructStaticIdentExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1ad9d4abd:;
			{
				_1ab1c3c2c_integratedToStr(_self_, _130329_m.cast_ptr<_1c4ab1854_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ad9d4b45:;
			{
				_1ab1c3ea2_backendEmit(_self_, _130329_m.cast_ptr<_1c4ab1a41_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ad9d4bbc:;
			{
				_1ab1c4227_free(_self_, _130329_m.cast_ptr<_1c4ab1c2d_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1ad9d4c44:;
			{
				_1ab1c449c_mutSlicing(_self_, _130329_m.cast_ptr<_1c1e2756e_MutSlicingExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1ad9d4cbb:;
			{
				_1ab1c4722_strInsertBegin(_self_, _130329_m.cast_ptr<_1c1e0ec4e_StrInsertBeginExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1ad9d4d43:;
			{
				_1ab1c4997_strComp(_self_, _130329_m.cast_ptr<_1c1e783a0_StrCompExprModel>(&__jule_any_type130));
			}
		}
		else {
			_case_begin_1ad9d2a66:;
			{
				_1ab203de4_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1ad9d2989:;
	};
}



inline void _1ab1c4e92_initExpr(jule::Ptr<_1ab1b7e96_exprCoder> _self_, jule::Ptr<_1c4621d32_TypeKind> _140632_t) {
	if (_1c4b5de84_NilCompatible(_140632_t.ptr())) {
		if ((_1c4b5e6c1_Ptr(_140632_t.ptr()) != nullptr)) {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _140632_t));
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1c4b66673_Tuple> _141617_tup = _1c4b60c11_Tup(_140632_t.ptr());;
	if ((_141617_tup != nullptr)) {
		_1ab280d83_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _141617_tup);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_141617_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ada0523c:;
			if (it != expr_end) {
				jule::I32 _142018_i = it - expr->begin();
				jule::Ptr<_1c4621d32_TypeKind> _142025_tt = *it;
				{
					if ((!(_1ab2837ae_shouldInitialized(&(_142025_tt))))) {
						goto _iter_next_1ada0523c;
					};
					_1ab203de4_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1ab203de4_write(_self_.get()._field_oc, _1c3174853_Itoa(_142018_i));
					_1ab203de4_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1ab1c4e92_initExpr(_self_, _142025_tt);
					if (((_141617_tup.get()._field_Types.len() - _142018_i) > 1LL)) {
						_1ab203de4_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1ada0523c:;
				++it;
				_142018_i++;
				goto _iter_begin_1ada0523c;
			}
			_iter_end_1ada0523c:;
		};
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1c4ac5802_Enum> _143517_enm = _1c4b5e803_Enum(_140632_t.ptr());;
	if ((_143517_enm != nullptr)) {
		_1ab1c4c1c_model(_self_, _143517_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_1c4b6197b_Prim> _144013_prim = _1c4b5e45c_Prim(_140632_t.ptr());;
	if ((_144013_prim != nullptr)) {
		if (_1c3177a32_IsNum(_144013_prim.get()._field_Kind)) {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1c4b6494b_IsBool(_144013_prim.ptr())) {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1c4b64bb0_IsStr(_144013_prim.ptr())) {
			_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1c4b5ec87_Arr(_140632_t.ptr()) != nullptr)) {
		jule::Ptr<_1c4b67c90_Arr> _145221_arr = _1c4b5ec87_Arr(_140632_t.ptr());;
		_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _140632_t));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1ab1c4e92_initExpr(_self_, _145221_arr.get()._field_Elem);
		_1ab203de4_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1c4aab255_StructIns> _145917_s = _1c4b604c4_Struct(_140632_t.ptr());;
	if ((((_145917_s != nullptr) && _145917_s.get()._field_Decl.get()._field_CppLinked) && (_1ab283182_findDirective(&(_145917_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _140632_t));
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1ab203de4_write(_self_.get()._field_oc, _1ab27b983_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _140632_t));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1ab1b7e96_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab1c7736_deriveCoder> static__1ab1c7b21_new(jule::Ptr<_1ab26c644_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_1ab1c7736_deriveCoder>(_1ab1c7736_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _1ab1c7e2e_cloneFuncDecl(_1ab1c7736_deriveCoder* _self_, jule::Ptr<_1c4a86ebc_Struct>* _1633_s) {
	jule::Str _1717_obj = _1ab279be5_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	(_1717_obj).append(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _1ab1c823c_cloneFuncDef(_1ab1c7736_deriveCoder* _self_, jule::Ptr<_1c4a86ebc_Struct>* _2232_s) {
	jule::Str _2317_obj = _1ab279be5_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	(_2317_obj).append("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab1c7736_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab1c911c_TestCoder> static__1ab1c9590_New(jule::Ptr<_1ab26c644_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1ab1c911c_TestCoder>(_1ab1c911c_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1c4aeeb28_ImportInfo> _1ab1c9804_findTestingPackage(jule::Ptr<_1ab1c911c_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada13e3d:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1ada13e3d:;
			++it;
			goto _iter_begin_1ada13e3d;
		}
		_iter_end_1ada13e3d:;
	};
	return nullptr;;
}



inline void _1ab1c9a79_appendTest(jule::Ptr<_1ab1c911c_TestCoder> _self_, jule::Ptr<_1c4ab39ee_FnIns> _4334_f) {
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab1ca23e_callTmReset(_self_);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1ab203de4_write(_self_.get()._field_oc, _1ab1c5b96_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cc65e_funcIns(&(_4334_f)));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1ab1c9cee_appendPackageTests(jule::Ptr<_1ab1c911c_TestCoder> _self_, jule::Ptr<_1c4b02a82_Package>* _6043_p) {
	{
		auto expr = &((*(_6043_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada19619:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _6121_file = *it;
			{
				{
					auto expr = &(_6121_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ada19e55:;
					if (it != expr_end) {
						jule::Ptr<_1c4ab22e4_Fn> _6225_f = *it;
						{
							if (_1ab283517_hasDirective(&(_6225_f.get()._field_Directives), jule::Str("test", 4))) {
								_1ab1c9a79_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1ada19e55:;
						++it;
						goto _iter_begin_1ada19e55;
					}
					_iter_end_1ada19e55:;
				};
			}
			_iter_next_1ada19619:;
			++it;
			goto _iter_begin_1ada19619;
		}
		_iter_end_1ada19619:;
	};
}



inline jule::Bool _1ab1ca063_readyTestingPackage(jule::Ptr<_1ab1c911c_TestCoder> _self_) {
	jule::Ptr<_1c4aeeb28_ImportInfo> _7117_p = _1ab1c9804_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1c4b01069_FindStruct(_7117_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1c4a85d23_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_1c4a85d23_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_1c4a85d23_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1ab1ca23e_callTmReset(jule::Ptr<_1ab1c911c_TestCoder> _self_) {
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cc3b7_func(&(_self_.get()._field_tmReset)));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1ab1ca41a_callTmFailed(jule::Ptr<_1ab1c911c_TestCoder> _self_) {
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cc3b7_func(&(_self_.get()._field_tmFailed)));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1ab1ca5e6_callTmSkipped(jule::Ptr<_1ab1c911c_TestCoder> _self_) {
	_1ab203de4_write(_self_.get()._field_oc, static__1ab1cc3b7_func(&(_self_.get()._field_tmSkipped)));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1ab1ca7c2_Serialize(jule::Ptr<_1ab1c911c_TestCoder> _self_) {
	_1ab273c22_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1ab273a46_end(_self_.get()._field_oc);
	});;
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	if ((!(_1ab1ca063_readyTestingPackage(_self_)))) {
		_1ab203de4_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1ab2435d7_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1ab203de4_write(_self_.get()._field_oc, _1ab27784c_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1ab27a003_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1ab203de4_write(_self_.get()._field_oc, _1ab27a003_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1ab2430ba_addIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1ab1ca41a_callTmFailed(_self_);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1ab1ca5e6_callTmSkipped(_self_);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1ab1c9cee_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1ab2435d7_doneIndent(_self_.get()._field_oc);
	_1ab246b3a_indent(_self_.get()._field_oc);
	_1ab203de4_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1ab1c911c_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1ab1cbc35_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		(_3521_obj).append("_", 1);
		_3521_obj+=_1c31745de_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		(_3521_obj).append("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	(_4217_obj).append("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__1ab1cc120_toLocal(jule::I32 _5423_row, jule::I32 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	(_5517_obj).append("_", 1);
	_5517_obj+=_1c3174853_Itoa(_5423_row);
	_5517_obj+=_1c3174853_Itoa(_5433_col);
	(_5517_obj).append("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__1ab1cc3b7_func(jule::Ptr<_1c4ab22e4_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_CppLinked) {
			_case_begin_1ada32588:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if ((*(_6521_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_1ada325ee:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1c4a810e8_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_1ada31994:;
			{
				jule::Str _7221_obj = static__1ab1cbc35_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1ada3192d:;
			{
				return static__1ab1cbc35_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_1ada31884:;
	};
}



inline jule::Str static__1ab1cc65e_funcIns(jule::Ptr<_1c4ab39ee_FnIns>* _8424_f) {
	if (_1c4ab4d85_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_CppLinked || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__1ab1cc3b7_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__1ab1cbc35_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__1ab1cc906_traitDecl(jule::Ptr<_1c4ac306e_Trait> _9525_t) {
	if (_1c4ac3b0d_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1ab1cbc35_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1ab1ccb9d_param(jule::Ptr<_1c4ab2107_Param>* _10322_p) {
	if ((_203988be7_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _203988950_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1c4a6c810_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__1ab1cc120_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__1ab1cc120_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__1ab1cce45_structure(jule::Ptr<_1c4a86ebc_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_CppLinked) {
		if (_1ab283517_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__1ab1cbc35_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__1ab1cd1dc_structureIns(jule::Ptr<_1c4aab255_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_CppLinked || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__1ab1cce45_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__1ab1cbc35_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__1ab1cd484_field(jule::Ptr<_1c4a7e877_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_CppLinked) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__1ab1cd72b_var(jule::Ptr<_1c4b2c837_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1ada3c186:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_1ada3b51a:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_1ada3b581:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1ada3b5e7:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1ada3b65d:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1c3174853_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1ada3b8e4:;
			{
				return static__1ab1cc120_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_1ada3b4a4:;
			{
				return static__1ab1cbc35_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1ada3adaa:;
	};
}



inline jule::Str static__1ab1cd9c3_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	(_16517_obj).append("_iter_begin_", 12);
	_16517_obj+=_1c31745de_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__1ab1cdc6a_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	(_17317_obj).append("_iter_end_", 10);
	_17317_obj+=_1c31745de_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__1ab1ce012_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	(_18117_obj).append("_iter_next_", 11);
	_18117_obj+=_1c31745de_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__1ab1ce2a9_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	(_18917_obj).append("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__1ab1ce551_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	(_19717_obj).append("_match_end_", 11);
	_19717_obj+=_1c31745de_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__1ab1ce7e8_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	(_20517_obj).append("_case_begin_", 12);
	_20517_obj+=_1c31745de_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab1cb65d_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab20e00e_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab1d4523_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab26c457_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab275e11_Str(_1ab275b58_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1ab27621e_Equal(jule::Ptr<_1ab275b58_customType> _self_, jule::Ptr<_1c4621d32_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab275b58_customType _Src) {
	_Stream << _1ab275e11_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ab2765c6_typeCoder> static__1ab276b15_new(jule::Ptr<_1ab26c644_ObjectCoder>* _6324_oc) {
	jule::Ptr<_1ab2765c6_typeCoder> _6417_tc = jule::new_ptr<_1ab2765c6_typeCoder>(_1ab2765c6_typeCoder{._field_oc=(*(_6324_oc)), });;
	_6417_tc.get()._field_rc=static__1ab27e69a_new(&(_6417_tc));
	return _6417_tc;;
}



inline jule::Str _1ab276e23_toType(_1ab2765c6_typeCoder* _self_, jule::Str _7029_id) {
	if ((!_7029_id.equal("uintptr", 7))) {
		_7029_id=_1c26c8270_RealKindOf(_7029_id);
	};
	if (((97LL <= _7029_id[0LL]) && (_7029_id[0LL] <= 122LLU))) {
		_7029_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _7029_id);;
}



inline jule::Str _1ab277231_prim(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4b6197b_Prim> _8123_p) {
	return _1ab276e23_toType(_self_, _1c4b61cde_Str(_8123_p.ptr()));;
}



inline jule::Str _1ab27753e_tuple(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4b66673_Tuple> _8628_t) {
	jule::Str _8717_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8628_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb587ad:;
		if (it != expr_end) {
			jule::Ptr<_1c4621d32_TypeKind> _8821_tk = *it;
			{
				_8717_obj+=_1ab27b983_kind(_self_, _8821_tk);
				(_8717_obj).append(",", 1);
			}
			_iter_next_1adb587ad:;
			++it;
			goto _iter_begin_1adb587ad;
		}
		_iter_end_1adb587ad:;
	};
	(_8717_obj).mut_slice(0LL, (_8717_obj.len() - 1LL));;
	(_8717_obj).append(">", 1);
	return _8717_obj;;
}



inline jule::Str _1ab27784c_asSptr(_1ab2765c6_typeCoder* _self_, jule::Str _9825_elem) {
	jule::Str _9917_obj = jule::Str("jule::Ptr<", 10);;
	_9917_obj+=_9825_elem;
	(_9917_obj).append(">", 1);
	return _9917_obj;;
}



inline jule::Str _1ab277b5a_asPtr(_1ab2765c6_typeCoder* _self_, jule::Str _10624_elem) {
	return (_10624_elem + jule::Str("*", 1));;
}



inline jule::Str _1ab277e68_sptr(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4b65210_Sptr> _11127_sptr) {
	return _1ab27784c_asSptr(_self_, _1ab27b983_kind(_self_, _11127_sptr.get()._field_Elem));;
}



inline jule::Str _1ab278276_ptr(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4b686ec_Ptr> _11626_p) {
	;
	if (_1c4b691c0_IsUnsafe(_11626_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12117_elem = _1ab27b983_kind(_self_, _11626_p.get()._field_Elem);;
	(_12117_elem).append("*", 1);
	return _12117_elem;;
}



inline jule::Str _1ab278584_enumDecl(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4ac5802_Enum> _12731_e) {
	return _1ab27b983_kind(_self_, _12731_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1ab278892_typeEnumDecl(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4ac6dec_TypeEnum> _13235_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1ab278ba0_asSlice(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4621d32_TypeKind> _13630_elem) {
	jule::Str _13717_obj = jule::Str("jule::Slice<", 12);;
	_13717_obj+=_1ab27b983_kind(_self_, _13630_elem);
	(_13717_obj).append(">", 1);
	return _13717_obj;;
}



inline jule::Str _1ab278ead_slice(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4b65b6c_Slc> _14428_s) {
	return _1ab278ba0_asSlice(_self_, _14428_s.get()._field_Elem);;
}



inline jule::Str _1ab2792bb_mapType(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4b6719b_Map> _14930_m) {
	jule::Str _15017_obj = jule::Str("jule::Map<", 10);;
	_15017_obj+=_1ab27b983_kind(_self_, _14930_m.get()._field_Key);
	(_15017_obj).append(",", 1);
	_15017_obj+=_1ab27b983_kind(_self_, _14930_m.get()._field_Val);
	(_15017_obj).append(">", 1);
	return _15017_obj;;
}



inline jule::Str _1ab2795c9_traitIdent(_1ab2765c6_typeCoder* _self_, jule::Str _15829_ident) {
	jule::Str _15917_obj = jule::Str("jule::Trait<", 12);;
	_15917_obj+=_15829_ident;
	(_15917_obj).append(">", 1);
	return _15917_obj;;
}



inline jule::Str _1ab2798d7_traitDecl(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4ac306e_Trait> _16628_t) {
	return _1ab2795c9_traitIdent(_self_, static__1ab1cc906_traitDecl(_16628_t));;
}



inline jule::Str _1ab279be5_structure(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4a86ebc_Struct> _17128_s) {
	jule::Str _17217_rep = jule::Str();;
	if ((_17128_s.get()._field_CppLinked && (!(_1ab283517_hasDirective(&(_17128_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		(_17217_rep).append("struct ", 7);
	};
	_17217_rep+=static__1ab1cce45_structure(&(_17128_s));
	return _17217_rep;;
}



inline jule::Str _1ab27a003_structureIns(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4aab255_StructIns> _18135_s) {
	if (_18135_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _18321_ident = static__1ab1cd1dc_structureIns(&(_18135_s));;
		if ((_18135_s.get()._field_Generics.len() > 0LL)) {
			(_18321_ident).append("<", 1);
			{
				auto expr = &(_18135_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1adb64c2b:;
				if (it != expr_end) {
					jule::Ptr<_1c47006e6_InsGeneric> _18629_g = *it;
					{
						_18321_ident+=_1ab27b983_kind(_self_, _18629_g.get()._field_Kind);
						(_18321_ident).append(",", 1);
					}
					_iter_next_1adb64c2b:;
					++it;
					goto _iter_begin_1adb64c2b;
				}
				_iter_end_1adb64c2b:;
			};
			(_18321_ident).mut_slice(0LL, (_18321_ident.len() - 1LL));;
			(_18321_ident).append(">", 1);
		};
		jule::Ptr<_1c4a5ad81_Directive> _19317_d = _1ab283182_findDirective(&(_18135_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19317_d != nullptr)) {
			(_18321_ident).buffer.insert(0, ((_1ab27454c_concatAllParts(_19317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18321_ident;;
	};
	return static__1ab1cd1dc_structureIns(&(_18135_s));;
}



inline jule::Str _1ab27a311_array(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4b67c90_Arr> _20328_a) {
	jule::Str _20417_obj = jule::Str("jule::Array<", 12);;
	_20417_obj+=_1ab27b983_kind(_self_, _20328_a.get()._field_Elem);
	(_20417_obj).append(",", 1);
	_20417_obj+=_1c3174853_Itoa(_20328_a.get()._field_N);
	(_20417_obj).append(">", 1);
	return _20417_obj;;
}



inline jule::Str _1ab27a92c_paramIns(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4ab2b30_ParamIns>* _22932_p) {
	jule::Str _23017_obj = jule::Str();;
	if ((*(_22932_p)).get()._field_Decl.get()._field_Variadic) {
		(_23017_obj).append("jule::Slice<", 12);
		_23017_obj+=_1ab27b983_kind(_self_, (*(_22932_p)).get()._field_Kind);
		(_23017_obj).append(">", 1);
	} else {
		_23017_obj+=_1ab27b983_kind(_self_, (*(_22932_p)).get()._field_Kind);
	};
	if ((*(_22932_p)).get()._field_Decl.get()._field_Reference) {
		(_23017_obj).append("*", 1);
	};
	return _23017_obj;;
}



inline void _1ab27b059_funcInsResult(_1ab2765c6_typeCoder* _self_, jule::Str* _25937_s, jule::Ptr<_1c4ab39ee_FnIns>* _25950_f) {
	if (_1c4a871ed_IsVoid((*(_25950_f)).get()._field_Decl.ptr())) {
		if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
			((*(_25937_s))).append("jule::VoidExceptional", 21);
		} else {
			((*(_25937_s))).append("void", 4);
		};
		return;;
	};
	if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
		((*(_25937_s))).append("jule::Exceptional<", 18);
		_1ab2814c1_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
		((*(_25937_s))).append(">", 1);
		return;;
	};
	_1ab2814c1_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
}



inline jule::Str _1ab27b367_anonFunc(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4ab39ee_FnIns> _27731_f) {
	if (((_27731_f.get()._field_Result != nullptr) && (_1c4b60c11_Tup(_27731_f.get()._field_Result.ptr()) != nullptr))) {
		_1ab207722_pushResultIns((*(_self_))._field_oc, &(_27731_f));
	};
	jule::Str _28117_decl = jule::Str();;
	_1ab27b059_funcInsResult(_self_, &(_28117_decl), &(_27731_f));
	(_28117_decl).append("(", 1);
	if ((_27731_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27731_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adb73d4a:;
			if (it != expr_end) {
				jule::Ptr<_1c4ab2b30_ParamIns> _28525_param = *it;
				{
					if (_1c4a6c810_IsSelf(_28525_param.get()._field_Decl.ptr())) {
						goto _iter_next_1adb73d4a;
					};
					_28117_decl+=_1ab27a92c_paramIns(_self_, &(_28525_param));
					(_28117_decl).append(",", 1);
				}
				_iter_next_1adb73d4a:;
				++it;
				goto _iter_begin_1adb73d4a;
			}
			_iter_end_1adb73d4a:;
		};
		(_28117_decl).mut_slice(0LL, (_28117_decl.len() - 1LL));;
	} else {
		(_28117_decl).append("void", 4);
	};
	(_28117_decl).append(")", 1);
	return _28117_decl;;
}



inline jule::Str _1ab27b675_func(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4ab39ee_FnIns> _30127_f) {
	jule::Str _30217_obj = jule::Str("jule::Fn<", 9);;
	_30217_obj+=_1ab27b367_anonFunc(_self_, _30127_f);
	(_30217_obj).append(">", 1);
	return _30217_obj;;
}



inline jule::Str _1ab27b983_kind(_1ab2765c6_typeCoder* _self_, jule::Ptr<_1c4621d32_TypeKind> _30927_k) {
	{
		
		if ((_1c4b604c4_Struct(_30927_k.ptr()) != nullptr)) {
			_case_begin_1adb76ee6:;
			{
				return _1ab27a003_structureIns(_self_, _1c4b604c4_Struct(_30927_k.ptr()));;
			}
		}
		else if (_1c4b4e6b1_CppLinked(_30927_k.ptr())) {
			_case_begin_1adb7706d:;
			{
				return _30927_k.get()._field_CppIdent;;
			}
		}
		else if ((_1c4b5e45c_Prim(_30927_k.ptr()) != nullptr)) {
			_case_begin_1adb770e5:;
			{
				return _1ab277231_prim(_self_, _1c4b5e45c_Prim(_30927_k.ptr()));;
			}
		}
		else if ((_1c4b60c11_Tup(_30927_k.ptr()) != nullptr)) {
			_case_begin_1adb7716c:;
			{
				return _1ab27753e_tuple(_self_, _1c4b60c11_Tup(_30927_k.ptr()));;
			}
		}
		else if ((_1c4b5e58e_Sptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1adb771e4:;
			{
				return _1ab277e68_sptr(_self_, _1c4b5e58e_Sptr(_30927_k.ptr()));;
			}
		}
		else if ((_1c4b5e6c1_Ptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1adb7726b:;
			{
				return _1ab278276_ptr(_self_, _1c4b5e6c1_Ptr(_30927_k.ptr()));;
			}
		}
		else if ((_1c4b5e803_Enum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1adb772e3:;
			{
				return _1ab278584_enumDecl(_self_, _1c4b5e803_Enum(_30927_k.ptr()));;
			}
		}
		else if ((_1c4b5ea23_TypeEnum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1adb7736a:;
			{
				return _1ab278892_typeEnumDecl(_self_, _1c4b5ea23_TypeEnum(_30927_k.ptr()));;
			}
		}
		else if ((_1c4b5eeeb_Slc(_30927_k.ptr()) != nullptr)) {
			_case_begin_1adb773e2:;
			{
				return _1ab278ead_slice(_self_, _1c4b5eeeb_Slc(_30927_k.ptr()));;
			}
		}
		else if ((_1c4b6099c_Map(_30927_k.ptr()) != nullptr)) {
			_case_begin_1adb77469:;
			{
				return _1ab2792bb_mapType(_self_, _1c4b6099c_Map(_30927_k.ptr()));;
			}
		}
		else if ((_1c4b60738_Trait(_30927_k.ptr()) != nullptr)) {
			_case_begin_1adb774e1:;
			{
				return _1ab2798d7_traitDecl(_self_, _1c4b60738_Trait(_30927_k.ptr()));;
			}
		}
		else if ((_1c4b5ec87_Arr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1adb77568:;
			{
				return _1ab27a311_array(_self_, _1c4b5ec87_Arr(_30927_k.ptr()));;
			}
		}
		else if ((_1c4b60260_Fn(_30927_k.ptr()) != nullptr)) {
			_case_begin_1adb775e0:;
			{
				return _1ab27b675_func(_self_, _1c4b60260_Fn(_30927_k.ptr()));;
			}
		}
		_match_end_1adb76d1a:;
	};
	{
		auto &_match_expr{ _30927_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1adb7769a:;
			{
				return _30927_k.get()._field_Kind.cast_ptr<_1ab275b58_customType>(13).get()._field_kind;;
			}
		}
		else {
			_case_begin_1adb7e680:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1adb7e196:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ab2765c6_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab27e18e_resultCoder> static__1ab27e69a_new(jule::Ptr<_1ab2765c6_typeCoder>* _36324_tc) {
	return jule::new_ptr<_1ab27e18e_resultCoder>(_1ab27e18e_resultCoder{._field_tc=(*(_36324_tc))});;
}



inline void _1ab27e9b9_ptr(_1ab27e18e_resultCoder* _self_, jule::Str* _36727_s, jule::Ptr<_1c4b686ec_Ptr> _36739_p) {
	((*(_36727_s))).append("p", 1);
	_1ab2811a2_codeMut(_self_, _36727_s, &(_36739_p.get()._field_Elem));
}



inline void _1ab27ecd8_sptr(_1ab27e18e_resultCoder* _self_, jule::Str* _37228_s, jule::Ptr<_1c4b65210_Sptr> _37240_p) {
	((*(_37228_s))).append("x", 1);
	_1ab2811a2_codeMut(_self_, _37228_s, &(_37240_p.get()._field_Elem));
}



inline void _1ab280107_mapType(_1ab27e18e_resultCoder* _self_, jule::Str* _37731_s, jule::Ptr<_1c4b6719b_Map> _37743_p) {
	((*(_37731_s))).append("m", 1);
	_1ab2811a2_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Key));
	_1ab2811a2_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Val));
}



inline void _1ab280426_slice(_1ab27e18e_resultCoder* _self_, jule::Str* _38329_s, jule::Ptr<_1c4b65b6c_Slc> _38341_slc) {
	((*(_38329_s))).append("s", 1);
	_1ab2811a2_codeMut(_self_, _38329_s, &(_38341_slc.get()._field_Elem));
}



inline void _1ab280745_arr(_1ab27e18e_resultCoder* _self_, jule::Str* _38827_s, jule::Ptr<_1c4b67c90_Arr> _38839_arr) {
	((*(_38827_s))).append("a", 1);
	(*(_38827_s))+=_1c3174721_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38839_arr.get()._field_N)), 16LL);
	_1ab2811a2_codeMut(_self_, _38827_s, &(_38839_arr.get()._field_Elem));
}



inline void _1ab280a64_func(_1ab27e18e_resultCoder* _self_, jule::Str* _39428_s, jule::Ptr<_1c4ab39ee_FnIns> _39440_f) {
	((*(_39428_s))).append("f", 1);
	{
		auto expr = &(_39440_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb858ea:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab2b30_ParamIns> _39621_p = *it;
			{
				if (_39621_p.get()._field_Decl.get()._field_Reference) {
					((*(_39428_s))).append("r", 1);
				};
				_1ab2811a2_codeMut(_self_, _39428_s, &(_39621_p.get()._field_Kind));
			}
			_iter_next_1adb858ea:;
			++it;
			goto _iter_begin_1adb858ea;
		}
		_iter_end_1adb858ea:;
	};
	if ((_39440_f.get()._field_Result != nullptr)) {
		_1ab2811a2_codeMut(_self_, _39428_s, &(_39440_f.get()._field_Result));
	};
}



inline void _1ab280d83_tup(_1ab27e18e_resultCoder* _self_, jule::Str* _40727_s, jule::Ptr<_1c4b66673_Tuple> _40739_tup) {
	{
		auto expr = &(_40739_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb87545:;
		if (it != expr_end) {
			jule::Ptr<_1c4621d32_TypeKind> _40821_t = *it;
			{
				((*(_40727_s))).append("__jule_tuple_", 13);
				_1ab2811a2_codeMut(_self_, _40727_s, &(_40821_t));
			}
			_iter_next_1adb87545:;
			++it;
			goto _iter_begin_1adb87545;
		}
		_iter_end_1adb87545:;
	};
}



inline void _1ab2811a2_codeMut(_1ab27e18e_resultCoder* _self_, jule::Str* _41431_s, jule::Ptr<_1c4621d32_TypeKind>* _41444_t) {
	{
		auto &_match_expr{ (*(_41444_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1adb88678:;
			{
				_1ab27e9b9_ptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1c4b686ec_Ptr>(12));
			}
		}
		else if (_match_expr.type_is(true, 7)) {
			_case_begin_1adb88931:;
			{
				_1ab27ecd8_sptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1c4b65210_Sptr>(7));
			}
		}
		else if (_match_expr.type_is(true, 10)) {
			_case_begin_1adb88997:;
			{
				_1ab280107_mapType(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1c4b6719b_Map>(10));
			}
		}
		else if (_match_expr.type_is(true, 8)) {
			_case_begin_1adb88a0d:;
			{
				_1ab280426_slice(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1c4b65b6c_Slc>(8));
			}
		}
		else if (_match_expr.type_is(true, 11)) {
			_case_begin_1adb88a74:;
			{
				_1ab280745_arr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1c4b67c90_Arr>(11));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1adb89107:;
			{
				_1ab280a64_func(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1c4ab39ee_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1adb8916d:;
			{
				jule::Ptr<_1c4ac5802_Enum> _42917_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_1c4ac5802_Enum>(3);;
				(*(_41431_s))+=static__1ab1cbc35_toOut(&(_42917_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42917_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1adb891d4:;
			{
				jule::Ptr<_1c4ac6dec_TypeEnum> _43217_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_1c4ac6dec_TypeEnum>(4);;
				(*(_41431_s))+=static__1ab1cbc35_toOut(&(_43217_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43217_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1adb8924a:;
			{
				jule::Ptr<_1c4aab255_StructIns> _43521_si = (*(_41444_t)).get()._field_Kind.cast_ptr<_1c4aab255_StructIns>(0);;
				(*(_41431_s))+=static__1ab1cd1dc_structureIns(&(_43521_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1adb892b1:;
			{
				jule::Ptr<_1c4ac306e_Trait> _43821_trt = (*(_41444_t)).get()._field_Kind.cast_ptr<_1c4ac306e_Trait>(2);;
				(*(_41431_s))+=static__1ab1cc906_traitDecl(_43821_trt);
			}
		}
		else if (_match_expr.type_is(true, 6)) {
			_case_begin_1adb89327:;
			{
				(*(_41431_s))+=(*(_41444_t)).get()._field_Kind.cast_ptr<_1c4b6197b_Prim>(6).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 9)) {
			_case_begin_1adb8938d:;
			{
				_1ab280d83_tup(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1c4b66673_Tuple>(9));
			}
		}
		else {
			_case_begin_1adb888a9:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:445:13"));;
			}
		}
		_match_end_1adb88711:;
	};
}



inline void _1ab2814c1_codeMut1(_1ab27e18e_resultCoder* _self_, jule::Str* _44932_s, jule::Ptr<_1c4621d32_TypeKind>* _44945_t) {
	jule::Ptr<_1c4b66673_Tuple> _45017_tup = _1c4b60c11_Tup((*(_44945_t)).ptr());;
	if ((_45017_tup != nullptr)) {
		_1ab280d83_tup(_self_, _44932_s, _45017_tup);
	} else {
		(*(_44932_s))+=_1ab27b983_kind((*(_self_))._field_tc.ptr(), (*(_44945_t)));
	};
}



inline jule::Str _1ab28179b_code(_1ab27e18e_resultCoder* _self_, jule::Ptr<_1c4621d32_TypeKind>* _45828_t) {
	jule::Str _45917_s = jule::Str::alloc(0LL, 20LL);;
	_1ab2811a2_codeMut(_self_, &(_45917_s), _45828_t);
	return _45917_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab27e18e_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1adb93ed0_Name(_1adb93be4_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1adb94112_What(_1adb93be4_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1adb94244_Reset(_1adb93be4_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1adb94387_Short(_1adb93be4_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1adb93be4_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1adb973e0_Name(_1adb97852_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1adb97b3d_What(_1adb97852_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1adb97c70_Reset(_1adb97852_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1adb97da2_Short(_1adb97852_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1adb97852_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1adb9aba7_Name(_1adb9b119_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1adb9b405_What(_1adb9b119_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1adb9b537_Reset(_1adb9b119_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1adb9b669_Short(_1adb9b119_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1adb9b119_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1adb9e4b3_Name(_1adb9e925_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1adb9ec11_What(_1adb9e925_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1adb9ed43_Reset(_1adb9e925_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1adb9ee75_Short(_1adb9e925_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1adb9e925_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1adba2c7a_Name(_1adba31dc_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1adba34c8_What(_1adba31dc_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1adba360a_Reset(_1adba31dc_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1adba373c_Short(_1adba31dc_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1adba31dc_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab2abd37_FlagSet> static__1ab2ac123_New(void) {
	return jule::new_ptr<_1ab2abd37_FlagSet>(_1ab2abd37_FlagSet{._field_flags=jule::Slice<jule::Trait<_1ab2aa929_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1ab2aa929_CommonFlag> _1ab2ac5a7_FindFlag(_1ab2abd37_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbad4c2:;
		if (it != expr_end) {
			jule::Trait<_1ab2aa929_CommonFlag> _7221_flag = *it;
			{
				if ((_1ab2aa929_CommonFlag_mptr_data[(_7221_flag).type_offset]._1ab2aa451_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1adbad4c2:;
			++it;
			goto _iter_begin_1adbad4c2;
		}
		_iter_end_1adbad4c2:;
	};
	return nullptr;;
}



inline jule::Trait<_1ab2aa929_CommonFlag> _1ab2ac8b5_FindFlagShort(_1ab2abd37_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbadaee:;
		if (it != expr_end) {
			jule::Trait<_1ab2aa929_CommonFlag> _8221_flag = *it;
			{
				if ((_1ab2aa929_CommonFlag_mptr_data[(_8221_flag).type_offset]._1ab2aa583_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1adbadaee:;
			++it;
			goto _iter_begin_1adbadaee;
		}
		_iter_end_1adbadaee:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_1ab2aa929_CommonFlag>> _1ab2acb29_Flags(_1ab2abd37_FlagSet* _self_) {
	return (*(_self_))._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1ab2ace37_Parse(_1ab2abd37_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1ab2ae510_argParser _11617_ap = _1ab2ae510_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1ab2b08eb_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _1ab2ad113_Reset(_1ab2abd37_FlagSet* _self_) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbb08ae:;
		if (it != expr_end) {
			jule::Trait<_1ab2aa929_CommonFlag> _12616_f = *it;
			{
				_1ab2aa929_CommonFlag_mptr_data[(_12616_f).type_offset]._1ab2aa7e7_Reset(_12616_f);
			}
			_iter_next_1adbb08ae:;
			++it;
			goto _iter_begin_1adbb08ae;
		}
		_iter_end_1adbb08ae:;
	};
}



inline jule::Ptr<_1adba31dc_Flag> _1adc25baa_addFlagCommon(_1ab2abd37_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1adc272e9:;
			{
				goto _match_end_1adc27294;
			}
		}
		_match_end_1adc27294:;
	};
	if ((_1ab2ac5a7_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1ab2ac8b5_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1adba31dc_Flag> _14817_flag = jule::new_ptr<_1adba31dc_Flag>(_1adba31dc_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1ab2aa929_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_1adb9e925_Flag> _1adc2e4ee_addFlagCommon(_1ab2abd37_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1adc30ad8:;
			{
				goto _match_end_1adc30a3e;
			}
		}
		_match_end_1adc30a3e:;
	};
	if ((_1ab2ac5a7_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1ab2ac8b5_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1adb9e925_Flag> _14817_flag = jule::new_ptr<_1adb9e925_Flag>(_1adb9e925_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1ab2aa929_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _1adc23b42_AddVar(_1ab2abd37_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1adba31dc_Flag> _17617_flag = _1adc25baa_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1adc2c4b9_AddVar(_1ab2abd37_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1adb9e925_Flag> _17617_flag = _1adc2e4ee_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab2abd37_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1adbb650d_parseInteger(_1ab2ae510_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1adbb918c:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1c2170cd4_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1adbb95ee:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1c2170cd4_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1adbb9797:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1c2170cd4_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1adbb94de:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1adbb8d5c:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1adbb8ce6:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1adbb8c2a:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1adbbe5d2_parseInteger(_1ab2ae510_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1adbc221c:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1c2170cd4_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1adbc267e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1c2170cd4_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1adbc2827:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1c2170cd4_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1adbc256e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1adbc1ddc:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1adbc1d76:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1adbc1caa:;
	};
	return __jule_func_result;;
}



inline jule::Str _1ab2aed07_getData(_1ab2ae510_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1ab2b0049_processFlag(_1ab2ae510_argParser* _self_, jule::Trait<_1ab2aa929_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1adbb3791:;
			{
				jule::Ptr<_1adb9e925_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1adb9e925_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1adbb372a:;
	};
	jule::Str _22513_data = _1ab2aed07_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1ab2aa929_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1ab2aa451_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1adbb4ce2:;
			{
				jule::Ptr<_1adb93be4_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1adb93be4_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1adbb650d_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _23370_s, jule::I32 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1c2aa8793_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1ab2aa929_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1ab2aa451_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1adbb57a4:;
			{
				jule::Ptr<_1adb97852_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1adb97852_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1adbbe5d2_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _24171_s, jule::I32 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1c2c52ab3_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1ab2aa929_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1ab2aa451_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1adbb581a:;
			{
				jule::Ptr<_1adb9b119_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1adb9b119_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1c31709b4_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1ab2aa929_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1ab2aa451_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1adbb5881:;
			{
				(*((*(_21735_flag)).cast_ptr<_1adba31dc_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1adbb573d:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ab2b02be_singleDash(_1ab2ae510_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbc98b7:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1ab2aa929_CommonFlag> _26321_flag = _1ab2ac8b5_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1ab2b0049_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1adbc98b7:;
			++it;
			goto _iter_begin_1adbc98b7;
		}
		_iter_end_1adbc98b7:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ab2b0544_doubleDash(_1ab2ae510_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1ab2aa929_CommonFlag> _27617_flag = _1ab2ac5a7_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1ab2b0049_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ab2b0720_tryArg(_1ab2ae510_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1ab2b0544_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1ab2b02be_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*(_self_))._field_content = jule::alloc_for_append((*(_self_))._field_content,1);(*(_self_))._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ab2b08eb_parse(_1ab2ae510_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1ab2b0720_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1adbd0318:;
	}
	_iter_end_1adbd0318:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1ab2ae510_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab26c644_ObjectCoder> static__1ab1d3a0b_New(jule::Ptr<_1c481c00a_IR>* _9224_ir, _1ab20e00e_SerializationInfo _9233_info) {
	jule::Ptr<_1ab26c644_ObjectCoder> _9317_oc = jule::new_ptr<_1ab26c644_ObjectCoder>(_1ab26c644_ObjectCoder{._field_ir=(*(_9224_ir)), ._field_info=_9233_info, });;
	_9317_oc.get()._field_ec=static__1ab1b8392_new(&(_9317_oc));
	_9317_oc.get()._field_sc=static__1ab1b018b_new(&(_9317_oc));
	_9317_oc.get()._field_tc=static__1ab276b15_new(&(_9317_oc));
	_9317_oc.get()._field_dc=static__1ab1c7b21_new(_9317_oc);
	return _9317_oc;;
}



inline void _1ab203de4_write(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Str _10425_s) {
	_self_.get()._field_Obj+=_10425_s;
}



inline void _1ab2430ba_addIndent(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	(_self_.get()._field_indentBuffer).append("\t", 1);
}



inline void _1ab2435d7_doneIndent(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1ab246b3a_indent(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I32 _1ab24cb1e_findAnyType(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4621d32_TypeKind>* _12336_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada4ebb0:;
		if (it != expr_end) {
			jule::I32 _12414_i = it - expr->begin();
			jule::Ptr<_1c4621d32_TypeKind> _12421_at = *it;
			{
				if (_1c4622580_Equal(_12421_at, (*(_12336_t)))) {
					return _12414_i;;
				};
			}
			_iter_next_1ada4ebb0:;
			++it;
			_12414_i++;
			goto _iter_begin_1ada4ebb0;
		}
		_iter_end_1ada4ebb0:;
	};
	return -1LL;;
}



inline jule::I32 _1ab2084e2_pushAnyType(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4621d32_TypeKind>* _13236_t) {
	jule::I32 _13317_i = _1ab24cb1e_findAnyType(_self_, _13236_t);;
	if ((_13317_i != -1LL)) {
		return _13317_i;;
	};
	_13317_i=static_cast<jule::I32>(_self_.get()._field_anyTypeMap.len());
	_self_.get()._field_anyTypeMap = jule::alloc_for_append(_self_.get()._field_anyTypeMap,1);_self_.get()._field_anyTypeMap.__push((*(_13236_t)));;
	jule::Str _13913_si = _1c3174853_Itoa(_13317_i);;
	if ((_1c4b5e58e_Sptr((*(_13236_t)).ptr()) != nullptr)) {
		jule::Str _14117_elem_kind = _1ab27b983_kind(_self_.get()._field_tc.ptr(), _1c4b5e58e_Sptr((*(_13236_t)).ptr()).get()._field_Elem);;
		jule::Str _14217_kind = _1ab27784c_asSptr(_self_.get()._field_tc.ptr(), _14117_elem_kind);;
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13913_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_14117_elem_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13913_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13913_si;
		(_self_.get()._field_anyObj).append("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_13913_si;
		(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_14217_kind;
		(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_13913_si;
		(_self_.get()._field_anyObj).append(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _16817_comparable = _1c4b5cca7_Comparable((*(_13236_t)).ptr());;
		jule::Str _16917_kind = _1ab27b983_kind(_self_.get()._field_tc.ptr(), (*(_13236_t)));;
		if (_16917_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1c4622272_Str((*(_13236_t)).ptr()));
		};
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13913_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_16917_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		if (_16817_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13913_si;
			(_self_.get()._field_anyObj).append("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66);
			_self_.get()._field_anyObj+=_16917_kind;
			(_self_.get()._field_anyObj).append("*>(alloc) == *reinterpret_cast<", 31);
			_self_.get()._field_anyObj+=_16917_kind;
			(_self_.get()._field_anyObj).append("*>(other); }\n", 13);
		};
		(_self_.get()._field_anyObj).append("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_13913_si;
		(_self_.get()._field_anyObj).append("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76);
		if ((_1c4b5e6c1_Ptr((*(_13236_t)).ptr()) == nullptr)) {
			(_self_.get()._field_anyObj).append("const ", 6);
			_self_.get()._field_anyObj+=_16917_kind;
		} else {
			_self_.get()._field_anyObj+=_16917_kind;
			(_self_.get()._field_anyObj).append("* const", 7);
		};
		(_self_.get()._field_anyObj).append("*>(alloc)); }\n", 14);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13913_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13913_si;
		(_self_.get()._field_anyObj).append("_dealloc, ", 10);
		if (_16817_comparable) {
			(_self_.get()._field_anyObj).append(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_13913_si;
			(_self_.get()._field_anyObj).append("_eq, ", 5);
		};
		(_self_.get()._field_anyObj).append(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_13913_si;
		(_self_.get()._field_anyObj).append("_to_str};\n", 10);
		if (_16817_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13913_si;
			(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_16917_kind;
			(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_13913_si;
			(_self_.get()._field_anyObj).append(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_13913_si;
			(_self_.get()._field_anyObj).append("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _13317_i;;
}



inline void _1ab207722_pushResultIns(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _23738_f) {
	jule::Str _23813_s = _1ab28179b_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_23738_f)).get()._field_Result));;
	jule::Bool _23917_ok = false;;
	_self_.get()._field_resultMap.lookup(_23813_s, nullptr, &(_23917_ok));
	if (_23917_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_23813_s]=false;
	jule::Str _24417_obj = jule::Str::alloc(0LL, 128LL);;
	(_24417_obj).append("struct ", 7);
	_24417_obj+=_23813_s;
	(_24417_obj).append(" {\n", 3);
	{
		auto expr = &(_1c4b60c11_Tup((*(_23738_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada63641:;
		if (it != expr_end) {
			jule::I32 _24814_i = it - expr->begin();
			jule::Ptr<_1c4621d32_TypeKind> _24821_t = *it;
			{
				(_24417_obj).append("\t", 1);
				_24417_obj+=_1ab27b983_kind(_self_.get()._field_tc.ptr(), _24821_t);
				(_24417_obj).append(" ", 1);
				(_24417_obj).append("__jule_result_arg", 17);
				_24417_obj+=_1c3174853_Itoa(_24814_i);
				(_24417_obj).append(";\n", 2);
			}
			_iter_next_1ada63641:;
			++it;
			_24814_i++;
			goto _iter_begin_1ada63641;
		}
		_iter_end_1ada63641:;
	};
	(_24417_obj).append("};\n", 3);
	_self_.get()._field_resultDecls = jule::alloc_for_append(_self_.get()._field_resultDecls,1);_self_.get()._field_resultDecls.__push(_24417_obj);;
}



inline void _1ab245584_pushResult(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ab22e4_Fn>* _26035_f) {
	if ((_1c4a871ed_IsVoid((*(_26035_f)).ptr()) || ((*(_26035_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _26417_n = (*(_26035_f)).get()._field_Instances.len();;
	if (((*(_26035_f)).get()._field_Generics.len() == 0LL)) {
		_26417_n=1LL;
	};
	{
		auto expr = (*(_26035_f)).get()._field_Instances.slice(0LL, _26417_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ada67090:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab39ee_FnIns> _26821_ins = *it;
			{
				_1ab207722_pushResultIns(_self_, &(_26821_ins));
			}
			_iter_next_1ada67090:;
			++it;
			goto _iter_begin_1ada67090;
		}
		_iter_end_1ada67090:;
	};
}



inline jule::I32 _1ab1d427b_findTypeOffsetS(_1ab26c644_ObjectCoder* _self_, jule::Ptr<_1c4ac306e_Trait> _27330_t, jule::Ptr<_1c4aab255_StructIns> _27345_s) {
	if ((_27330_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada6815c:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d4523_traitHash> *_27716_hash = it;
			{
				if ((((*(_27716_hash)).get()._field_t == _27330_t) && ((*(_27716_hash)).get()._field_s == _27345_s))) {
					return (*(_27716_hash)).get()._field_i;;
				};
			}
			_iter_next_1ada6815c:;
			++it;
			goto _iter_begin_1ada6815c;
		}
		_iter_end_1ada6815c:;
	};
	return -1LL;;
}



inline jule::I32 _1ab26c831_findTypeOffset(_1ab26c644_ObjectCoder* _self_, jule::Ptr<_1c4ac306e_Trait> _28529_t, jule::Ptr<_1c4621d32_TypeKind> _28544_k) {
	if ((_28529_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1c4aab255_StructIns> _28917_s = nullptr;;
	if ((_1c4b5e58e_Sptr(_28544_k.ptr()) != nullptr)) {
		_28544_k=_1c4b5e58e_Sptr(_28544_k.ptr()).get()._field_Elem;
	};
	_28917_s=_1c4b604c4_Struct(_28544_k.ptr());
	if ((_28917_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I32>(_1ab1d427b_findTypeOffsetS(_self_, _28529_t, _28917_s));;
}



inline void _1ab26c963_pushAndWriteMaskMapper(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ac306e_Trait> _30046_t1, jule::Ptr<_1c4ac306e_Trait> _30062_t2) {
	jule::Str _30117_ident = jule::Str("__jule_trait_offset_mapper_", 27);;
	_30117_ident+=_1c31745de_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30046_t1))), 15LL);
	(_30117_ident).append("_to_", 4);
	_30117_ident+=_1c31745de_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30062_t2))), 15LL);
	_1ab203de4_write(_self_, _30117_ident);
	{
		auto expr = &(_self_.get()._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada6d706:;
		if (it != expr_end) {
			_1ab26c457_traitCast _30816_m = *it;
			{
				if (((_30816_m._field_t1 == _30046_t1) && (_30816_m._field_t2 == _30062_t2))) {
					return;;
				};
			}
			_iter_next_1ada6d706:;
			++it;
			goto _iter_begin_1ada6d706;
		}
		_iter_end_1ada6d706:;
	};
	;
	(_self_.get()._field_anyObj).append("jule::Int", 9);
	(_self_.get()._field_anyObj).append(" ", 1);
	_self_.get()._field_anyObj+=_30117_ident;
	(_self_.get()._field_anyObj).append("(const jule::Int offset) noexcept { ", 36);
	{
		auto expr = &(_30046_t1.get()._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada70571:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> _32521_s1 = *it;
			{
				{
					auto expr = &(_30062_t2.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ada70c14:;
					if (it != expr_end) {
						jule::Ptr<_1c4a86ebc_Struct> _32620_s2 = *it;
						{
							if ((_32521_s1 == _32620_s2)) {
								{
									auto expr = &(_32521_s1.get()._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ada7196d:;
									if (it != expr_end) {
										jule::Ptr<_1c4aab255_StructIns> _32833_s1i = *it;
										{
											jule::I32 _32929_i1 = _1ab1d427b_findTypeOffsetS(_self_.ptr(), _30046_t1, _32833_s1i);;
											jule::I32 _33029_i2 = _1ab1d427b_findTypeOffsetS(_self_.ptr(), _30062_t2, _32833_s1i);;
											(_self_.get()._field_anyObj).append("if (offset == ", 14);
											_self_.get()._field_anyObj+=_1c3174853_Itoa(_32929_i1);
											(_self_.get()._field_anyObj).append(") return ", 9);
											_self_.get()._field_anyObj+=_1c3174853_Itoa(_33029_i2);
											(_self_.get()._field_anyObj).append("; ", 2);
										}
										_iter_next_1ada7196d:;
										++it;
										goto _iter_begin_1ada7196d;
									}
									_iter_end_1ada7196d:;
								};
							};
						}
						_iter_next_1ada70c14:;
						++it;
						goto _iter_begin_1ada70c14;
					}
					_iter_end_1ada70c14:;
				};
			}
			_iter_next_1ada70571:;
			++it;
			goto _iter_begin_1ada70571;
		}
		_iter_end_1ada70571:;
	};
	(_self_.get()._field_anyObj).append(" return ", 8);
	_self_.get()._field_anyObj+=_1c3174853_Itoa(0LL);
	(_self_.get()._field_anyObj).append("; }\n", 4);
}



inline void _1ab26ca95_locInfo(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_2039861ab_Token>* _34628_t) {
	jule::Str *_34714_loc = &((*(_34628_t)).get()._field_File.get()._field_Path);;
	if (_2037bbbe5_Production) {
		{
			
			if (_1c2170cd4_HasPrefix((*(_34714_loc)), _1c222ac6d_PathStdlib)) {
				_case_begin_1ada75840:;
				{
					_1ab203de4_write(_self_, _1ab1c5877_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_34714_loc)).slice((_1c21946a9_Dir(_1c222ac6d_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_1c2170cd4_HasPrefix((*(_34714_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1ada75235:;
				{
					_1ab203de4_write(_self_, _1ab1c5877_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_34714_loc)).slice((_1c21946a9_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1ada74d8e:;
				{
					_1ab203de4_write(_self_, _1ab1c5877_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_34714_loc)))));
				}
			}
			_match_end_1ada74cc3:;
		};
	} else {
		_1ab203de4_write(_self_, _1ab1c5877_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_34714_loc)))));
	};
	_1ab203de4_write(_self_, jule::Str(":", 1));
	_1ab203de4_write(_self_, _1c3174853_Itoa((*(_34628_t)).get()._field_Row));
	_1ab203de4_write(_self_, jule::Str(":", 1));
	_1ab203de4_write(_self_, _1c3174853_Itoa((*(_34628_t)).get()._field_Column));
}



inline void _1ab26cbc7_head(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_1ab26563c_Time _37313_time = static__1ab265bd1_Now();;
	_1ab264e99_AbsTime _37413_abs = _1ab267320_Abs(&_37313_time);;
	_1ab203de4_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1ab203de4_write(_self_, jule::Str("// JuleC version: ", 18));
	_1ab203de4_write(_self_, jule::Str("jule0.0.13 @master", 18));
	_1ab203de4_write(_self_, jule::Str("\n", 1));
	_1ab203de4_write(_self_, jule::Str("// Date: ", 9));
	_1ab203de4_write(_self_, _1c31745de_FmtUint(_37413_abs._field_Day, 10LL));
	_1ab203de4_write(_self_, jule::Str("/", 1));
	_1ab203de4_write(_self_, _1c31745de_FmtUint(_37413_abs._field_Month, 10LL));
	_1ab203de4_write(_self_, jule::Str("/", 1));
	_1ab203de4_write(_self_, _1c31745de_FmtUint(_37413_abs._field_Year, 10LL));
	_1ab203de4_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1ab203de4_write(_self_, _self_.get()._field_info._field_Compiler);
	_1ab203de4_write(_self_, jule::Str(" ", 1));
	_1ab203de4_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1ab203de4_write(_self_, jule::Str("\n\n", 2));
	if (_2037bbbe5_Production) {
		_1ab203de4_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_2037bb552_RC))) {
		_1ab203de4_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_2037bb92b_Safety))) {
		_1ab203de4_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1ab26cd09_links(_self_);
	_1ab203de4_write(_self_, jule::Str("\n\n#include \"", 12));
	_1ab203de4_write(_self_, _1c224b80a_PathApi);
	_1ab203de4_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1ab26cd09_links(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada80c79:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _41116_used = *it;
			{
				{
					
					if ((!(_41116_used.get()._field_CppLinked))) {
						_case_begin_1ada817b3:;
						{
							goto _iter_next_1ada80c79;
						}
					}
					else if (_1c2213519_IsStdHeaderPath(_41116_used.get()._field_Path)) {
						_case_begin_1ada8183a:;
						{
							_1ab203de4_write(_self_, jule::Str("#include ", 9));
							_1ab203de4_write(_self_, _41116_used.get()._field_Path);
							_1ab203de4_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_1c2213739_IsValidHeaderExt(_1c2193ce6_Ext(_41116_used.get()._field_Path))) {
						_case_begin_1ada818b2:;
						{
							_1ab203de4_write(_self_, jule::Str("#include \"", 10));
							_1ab203de4_write(_self_, _41116_used.get()._field_Path);
							_1ab203de4_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1ada81692:;
				};
			}
			_iter_next_1ada80c79:;
			++it;
			goto _iter_begin_1ada80c79;
		}
		_iter_end_1ada80c79:;
	};
}



inline void _1ab26ce3b_prepareStructure(_1ab26c644_ObjectCoder* _self_, jule::Ptr<_1c4a86ebc_Struct>* _42740_s) {
	{
		auto expr = &((*(_42740_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada814b6:;
		if (it != expr_end) {
			jule::Ptr<_1c4aab255_StructIns> _42821_ins = *it;
			{
				{
					auto expr = &(_42821_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ada8470b:;
					if (it != expr_end) {
						jule::Ptr<_1c4ab22e4_Fn> _42925_m = *it;
						{
							if (_42925_m.get()._field_Statically) {
								goto _iter_next_1ada8470b;
							};
							{
								auto expr = &(_42925_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ada85465:;
								if (it != expr_end) {
									jule::Ptr<_1c4ab39ee_FnIns> _43329_mins = *it;
									{
										jule::Ptr<_1c4ab2b30_ParamIns> _43429_p = _43329_mins.get()._field_Params[0LL];;
										if ((!(_1c4a71e63_IsRef(_43429_p.get()._field_Decl.ptr())))) {
											_43429_p.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1ab275b58_customType>(_1ab275b58_customType{._field_kind=_1ab277b5a_asPtr((*(_self_))._field_tc.ptr(), _1ab27b983_kind((*(_self_))._field_tc.ptr(), _43429_p.get()._field_Kind))}), 13)});
										} else {
											_43429_p.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1ab275b58_customType>(_1ab275b58_customType{._field_kind=_1ab27b983_kind((*(_self_))._field_tc.ptr(), _43429_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1ada85465:;
									++it;
									goto _iter_begin_1ada85465;
								}
								_iter_end_1ada85465:;
							};
						}
						_iter_next_1ada8470b:;
						++it;
						goto _iter_begin_1ada8470b;
					}
					_iter_end_1ada8470b:;
				};
			}
			_iter_next_1ada814b6:;
			++it;
			goto _iter_begin_1ada814b6;
		}
		_iter_end_1ada814b6:;
	};
}



inline void _1ab26d06d_prepareStructures(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada84651:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> _45421_s = *it;
			{
				if ((_45421_s.get()._field_Token != nullptr)) {
					_1ab26ce3b_prepareStructure(_self_.ptr(), &(_45421_s));
				};
			}
			_iter_next_1ada84651:;
			++it;
			goto _iter_begin_1ada84651;
		}
		_iter_end_1ada84651:;
	};
}



inline void _1ab26d1a0_iterPackages(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1c4b02a82_Package>*)> _46132_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada88dc5:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _46221_used = *it;
			{
				if ((!(_46221_used.get()._field_CppLinked))) {
					_46132_f(&(_46221_used.get()._field_Package));
				};
			}
			_iter_next_1ada88dc5:;
			++it;
			goto _iter_begin_1ada88dc5;
		}
		_iter_end_1ada88dc5:;
	};
	_46132_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _1ab26d2d2_buildTraitMap(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_1ab26d1a0_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c4b02a82_Package>*)>([=](jule::Ptr<_1c4b02a82_Package>* _47135_pkg) mutable -> void {
		_1ab274261_iterFiles(_47135_pkg, jule::Fn<void(jule::Ptr<_1c45e20dd_SymbolTable>*)>([=](jule::Ptr<_1c45e20dd_SymbolTable>* _47236_file) mutable -> void {
			{
				auto expr = &((*(_47236_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ada8c0b5:;
				if (it != expr_end) {
					jule::Ptr<_1c4ac306e_Trait> _47329_t = *it;
					{
						if ((_47329_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_47329_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1ab1d4523_traitHash>(_1ab1d4523_traitHash{._field_t=_47329_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1ada8c0b5;
						};
						jule::I32 _48529_i = 0LL;;
						{
							auto expr = &(_47329_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ada8c857:;
							if (it != expr_end) {
								jule::Ptr<_1c4a86ebc_Struct> _48633_s = *it;
								{
									{
										auto expr = &(_48633_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ada8e815:;
										if (it != expr_end) {
											jule::Ptr<_1c4aab255_StructIns> _48737_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1ab1d4523_traitHash>(_1ab1d4523_traitHash{._field_t=_47329_t, ._field_s=_48737_ins, ._field_i=_48529_i}));;
												(_48529_i)++;
											}
											_iter_next_1ada8e815:;
											++it;
											goto _iter_begin_1ada8e815;
										}
										_iter_end_1ada8e815:;
									};
								}
								_iter_next_1ada8c857:;
								++it;
								goto _iter_begin_1ada8c857;
							}
							_iter_end_1ada8c857:;
						};
						_1ab274e65_pushMethodsFromInherits(&(_47329_t), &(_47329_t));
					}
					_iter_next_1ada8c0b5:;
					++it;
					goto _iter_begin_1ada8c0b5;
				}
				_iter_end_1ada8c0b5:;
			};
		}));
	}));
}



inline void _1ab26d414_traitDecls(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_1ab26d1a0_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c4b02a82_Package>*)>([=](jule::Ptr<_1c4b02a82_Package>* _50535_pkg) mutable -> void {
		_1ab274261_iterFiles(_50535_pkg, jule::Fn<void(jule::Ptr<_1c45e20dd_SymbolTable>*)>([=](jule::Ptr<_1c45e20dd_SymbolTable>* _50636_file) mutable -> void {
			{
				auto expr = &((*(_50636_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1ada91ac0:;
				if (it != expr_end) {
					jule::Ptr<_1c4ac306e_Trait> _50729_t = *it;
					{
						if ((_50729_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1ab246b3a_indent(_self_);
						_1ab203de4_write(_self_, jule::Str("struct ", 7));
						_1ab203de4_write(_self_, static__1ab1cc906_traitDecl(_50729_t));
						_1ab203de4_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1ada91ac0:;
					++it;
					goto _iter_begin_1ada91ac0;
				}
				_iter_end_1ada91ac0:;
			};
		}));
	}));
}



inline void _1ab26d546_structurePlainDecl(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4a86ebc_Struct>* _52043_s) {
	{
		auto expr = &((*(_52043_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada8ee97:;
		if (it != expr_end) {
			jule::Ptr<_1c4aab255_StructIns> _52121_ins = *it;
			{
				_1ab203de4_write(_self_, jule::Str("struct ", 7));
				_1ab203de4_write(_self_, static__1ab1cd1dc_structureIns(&(_52121_ins)));
				_1ab203de4_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1ada8ee97:;
			++it;
			goto _iter_begin_1ada8ee97;
		}
		_iter_end_1ada8ee97:;
	};
}



inline void _1ab26d678_structurePlainDecls(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada949b3:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> _52921_s = *it;
			{
				if ((_52921_s.get()._field_Token != nullptr)) {
					_1ab26d546_structurePlainDecl(_self_, &(_52921_s));
				};
			}
			_iter_next_1ada949b3:;
			++it;
			goto _iter_begin_1ada949b3;
		}
		_iter_end_1ada949b3:;
	};
}



inline void _1ab26d7aa_fieldDecl(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4aab068_FieldIns>* _53634_f) {
	_1ab203de4_write(_self_, _1ab27b983_kind(_self_.get()._field_tc.ptr(), (*(_53634_f)).get()._field_Kind));
	_1ab203de4_write(_self_, jule::Str(" ", 1));
	_1ab203de4_write(_self_, static__1ab1cd484_field(&((*(_53634_f)).get()._field_Decl)));
	if (((*(_53634_f)).get()._field_Default == nullptr)) {
		if (_1ab2837ae_shouldInitialized(&((*(_53634_f)).get()._field_Kind))) {
			_1ab203de4_write(_self_, jule::Str(" = ", 3));
			_1ab1c4e92_initExpr(_self_.get()._field_ec, (*(_53634_f)).get()._field_Kind);
		};
	} else {
		_1ab203de4_write(_self_, jule::Str(" = ", 3));
		_1ab1bae99_possibleRefExpr(_self_.get()._field_ec, (*(_53634_f)).get()._field_Default.get()._field_Model);
	};
	_1ab203de4_write(_self_, jule::Str(";", 1));
}



inline void _1ab26d8dc_structureDestructor(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4aab255_StructIns>* _55444_s) {
	;
	jule::Ptr<_1c4ab22e4_Fn> _55713_disposeMethod = _1c4a85d23_FindMethod((*(_55444_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _55817_disposed = static__1c4b2dc56_Dispose(_55713_disposeMethod);;
	if ((!(_55817_disposed))) {
		return;;
	};
	_1ab203de4_write(_self_, jule::Str("~", 1));
	_1ab203de4_write(_self_, static__1ab1cd1dc_structureIns(_55444_s));
	_1ab203de4_write(_self_, jule::Str("(void) { ", 9));
	_1ab203de4_write(_self_, static__1ab1cc3b7_func(&(_55713_disposeMethod)));
	_1ab203de4_write(_self_, jule::Str("(this); }", 9));
}



inline void _1ab26da1e_structureDeriveDefsDecls(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4aab255_StructIns>* _57045_s) {
	if (_1c4a7484a_IsDerives((*(_57045_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1ab246b3a_indent(_self_);
		_1ab203de4_write(_self_, _1ab1c7e2e_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_57045_s)).get()._field_Decl)));
		_1ab203de4_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1ab26db51_structureOperatorEq(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Str* _57840_ident, jule::Ptr<_1c4aab255_StructIns>* _57857_s) {
	if ((!((*(_57857_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_57857_s)).get()._field_Operators._field_Eq != nullptr)) {
		_1ab26ddb5_structureOperator(_self_, _57840_ident, &((*(_57857_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1ab246b3a_indent(_self_);
	if (_1c1deb7eb_Inline) {
		_1ab203de4_write(_self_, jule::Str("inline ", 7));
	};
	_1ab203de4_write(_self_, jule::Str("bool operator==(", 16));
	_1ab203de4_write(_self_, (*(_57840_ident)));
	_1ab203de4_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_57857_s)).get()._field_Fields.len() > 0LL)) {
		_1ab2430ba_addIndent(_self_);
		_1ab203de4_write(_self_, jule::Str("\n", 1));
		_1ab246b3a_indent(_self_);
		_1ab203de4_write(_self_, jule::Str("return ", 7));
		_1ab2430ba_addIndent(_self_);
		jule::Bool _60121_writed = false;;
		{
			auto expr = &((*(_57857_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adaa2691:;
			if (it != expr_end) {
				jule::Ptr<_1c4aab068_FieldIns> _60225_f = *it;
				{
					jule::Ptr<_1c4aab255_StructIns> _60421_strct = _1c4b604c4_Struct(_60225_f.get()._field_Kind.ptr());;
					if ((((_60421_strct != nullptr) && (_60421_strct.get()._field_Decl != nullptr)) && _60421_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1adaa2691;
					};
					if (_60121_writed) {
						_1ab203de4_write(_self_, jule::Str(" &&", 3));
					};
					_60121_writed=true;
					_1ab203de4_write(_self_, jule::Str("\n", 1));
					_1ab246b3a_indent(_self_);
					_1ab203de4_write(_self_, jule::Str("this->", 6));
					jule::Str _61521_fIdent = static__1ab1cd484_field(&(_60225_f.get()._field_Decl));;
					_1ab203de4_write(_self_, _61521_fIdent);
					_1ab203de4_write(_self_, jule::Str(" == _other.", 11));
					_1ab203de4_write(_self_, _61521_fIdent);
				}
				_iter_next_1adaa2691:;
				++it;
				goto _iter_begin_1adaa2691;
			}
			_iter_end_1adaa2691:;
		};
		_1ab2435d7_doneIndent(_self_);
		if ((!(_60121_writed))) {
			_1ab203de4_write(_self_, jule::Str("true", 4));
		};
		_1ab203de4_write(_self_, jule::Str(";\n", 2));
		_1ab2435d7_doneIndent(_self_);
		_1ab246b3a_indent(_self_);
		_1ab203de4_write(_self_, jule::Str("}", 1));
	} else {
		_1ab203de4_write(_self_, jule::Str(" return true; }", 15));
	};
	_1ab203de4_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ab26dc83_structureOperatorNotEq(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Str* _63443_ident, jule::Ptr<_1c4aab255_StructIns>* _63460_s) {
	if ((!((*(_63460_s)).get()._field_Comparable))) {
		return;;
	};
	_1ab246b3a_indent(_self_);
	if (_1c1deb7eb_Inline) {
		_1ab203de4_write(_self_, jule::Str("inline ", 7));
	};
	_1ab203de4_write(_self_, jule::Str("bool operator!=(", 16));
	_1ab203de4_write(_self_, (*(_63443_ident)));
	_1ab203de4_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1ab26ddb5_structureOperator(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Str* _64838_ident, jule::Ptr<_1c4ab39ee_FnIns>* _64855_f, jule::Str _64866_op) {
	if (((*(_64855_f)) == nullptr)) {
		return;;
	};
	jule::Bool _65313_unary = ((*(_64855_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _65413_assignment = _1c4a871ed_IsVoid((*(_64855_f)).get()._field_Decl.ptr());;
	_1ab246b3a_indent(_self_);
	if (_1c1deb7eb_Inline) {
		_1ab203de4_write(_self_, jule::Str("inline ", 7));
	};
	if (_65413_assignment) {
		_1ab203de4_write(_self_, (*(_64838_ident)));
		_1ab203de4_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1c4b5e45c_Prim((*(_64855_f)).get()._field_Result.ptr()) == nullptr)) {
			_1ab203de4_write(_self_, (*(_64838_ident)));
		} else {
			_1ab203de4_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1ab203de4_write(_self_, jule::Str(" operator", 9));
	_1ab203de4_write(_self_, _64866_op);
	_1ab203de4_write(_self_, jule::Str("(", 1));
	if ((!(_65313_unary))) {
		jule::Ptr<_1c4ab2b30_ParamIns> _67621_p = (*(_64855_f)).get()._field_Params[1LL];;
		_1ab203de4_write(_self_, _1ab27a92c_paramIns(_self_.get()._field_tc.ptr(), &(_67621_p)));
		_1ab203de4_write(_self_, jule::Str(" _other", 7));
	};
	_1ab203de4_write(_self_, jule::Str(") { ", 4));
	if ((!(_65413_assignment))) {
		_1ab203de4_write(_self_, jule::Str("return ", 7));
	};
	_1ab203de4_write(_self_, static__1ab1cc65e_funcIns(_64855_f));
	if ((!(_65313_unary))) {
		_1ab203de4_write(_self_, jule::Str("(this, _other); ", 16));
		if (_65413_assignment) {
			_1ab203de4_write(_self_, jule::Str("return *this; ", 14));
		};
		_1ab203de4_write(_self_, jule::Str("}", 1));
	} else {
		_1ab203de4_write(_self_, jule::Str("(this); }", 9));
	};
	_1ab203de4_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ab26dee7_structureOperators(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4aab255_StructIns>* _69743_s) {
	jule::Str _69813_ident = static__1ab1cd1dc_structureIns(_69743_s);;
	_1ab26db51_structureOperatorEq(_self_, &(_69813_ident), _69743_s);
	_1ab26dc83_structureOperatorNotEq(_self_, &(_69813_ident), _69743_s);
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1ab26ddb5_structureOperator(_self_, &(_69813_ident), &((*(_69743_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1ab26e129_structureInsDecl(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4aab255_StructIns>* _73641_s) {
	if (((*(_73641_s)).get()._field_Methods.len() > 0LL)) {
		{
			auto expr = &((*(_73641_s)).get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adabeb86:;
			if (it != expr_end) {
				jule::Ptr<_1c4ab22e4_Fn> _73825_m = *it;
				{
					_1ab245584_pushResult(_self_, &(_73825_m));
					_1ab26e866_funcDecl(_self_, &(_73825_m), false);
				}
				_iter_next_1adabeb86:;
				++it;
				goto _iter_begin_1adabeb86;
			}
			_iter_end_1adabeb86:;
		};
	};
	_1ab203de4_write(_self_, jule::Str("struct ", 7));
	jule::Str _74513_outIdent = static__1ab1cd1dc_structureIns(_73641_s);;
	_1ab203de4_write(_self_, _74513_outIdent);
	_1ab203de4_write(_self_, jule::Str(" {\n", 3));
	_1ab2430ba_addIndent(_self_);
	{
		auto expr = &((*(_73641_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adac1d31:;
		if (it != expr_end) {
			jule::Ptr<_1c4aab068_FieldIns> _75121_f = *it;
			{
				_1ab246b3a_indent(_self_);
				_1ab26d7aa_fieldDecl(_self_, &(_75121_f));
				_1ab203de4_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1adac1d31:;
			++it;
			goto _iter_begin_1adac1d31;
		}
		_iter_end_1adac1d31:;
	};
	_1ab246b3a_indent(_self_);
	_1ab26d8dc_structureDestructor(_self_, _73641_s);
	_1ab203de4_write(_self_, jule::Str("\n\n", 2));
	_1ab246b3a_indent(_self_);
	_1ab203de4_write(_self_, _74513_outIdent);
	_1ab203de4_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1ab26da1e_structureDeriveDefsDecls(_self_, _73641_s);
	_1ab26dee7_structureOperators(_self_, _73641_s);
	_1ab203de4_write(_self_, jule::Str("\n", 1));
	_1ab2435d7_doneIndent(_self_);
	_1ab246b3a_indent(_self_);
	_1ab203de4_write(_self_, jule::Str("};", 2));
}



inline void _1ab26e25b_structureDecl(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4a86ebc_Struct>* _77638_s) {
	{
		auto expr = &((*(_77638_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adac5a9e:;
		if (it != expr_end) {
			jule::Ptr<_1c4aab255_StructIns> _77721_ins = *it;
			{
				_1ab26e129_structureInsDecl(_self_, &(_77721_ins));
			}
			_iter_next_1adac5a9e:;
			++it;
			goto _iter_begin_1adac5a9e;
		}
		_iter_end_1adac5a9e:;
	};
}



inline void _1ab26e38d_structureDecls(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adac696d:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> _78321_s = *it;
			{
				if ((_78321_s.get()._field_Token != nullptr)) {
					_1ab26e25b_structureDecl(_self_, &(_78321_s));
					_1ab203de4_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1adac696d:;
			++it;
			goto _iter_begin_1adac696d;
		}
		_iter_end_1adac696d:;
	};
}



inline void _1ab26e4c0_paramsDecls(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>>* _79136_params) {
	if (((*(_79136_params)).len() == 0LL)) {
		_1ab203de4_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1ab203de4_write(_self_, jule::Str("(", 1));
	{
		auto expr = _79136_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adac894d:;
		if (it != expr_end) {
			jule::I32 _79814_i = it - expr->begin();
			jule::Ptr<_1c4ab2b30_ParamIns> _79821_p = *it;
			{
				_1ab203de4_write(_self_, _1ab27a92c_paramIns(_self_.get()._field_tc.ptr(), &(_79821_p)));
				if ((((*(_79136_params)).len() - _79814_i) > 1LL)) {
					_1ab203de4_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1adac894d:;
			++it;
			_79814_i++;
			goto _iter_begin_1adac894d;
		}
		_iter_end_1adac894d:;
	};
	_1ab203de4_write(_self_, jule::Str(")", 1));
}



inline void _1ab26e602_funcHead(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _80833_f, jule::Bool _80844_ptr) {
	if ((((!(_80844_ptr)) && _1c1deb7eb_Inline) && (!(_1c4a653b8_IsEntryPoint((*(_80833_f)).get()._field_Decl.ptr()))))) {
		_1ab203de4_write(_self_, jule::Str("inline ", 7));
	};
	_1ab27b059_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _80833_f);
	if (_80844_ptr) {
		_1ab203de4_write(_self_, jule::Str("(*", 2));
		_1ab203de4_write(_self_, static__1ab1cc65e_funcIns(_80833_f));
		_1ab203de4_write(_self_, jule::Str(")", 1));
	} else {
		_1ab203de4_write(_self_, jule::Str(" ", 1));
		_1ab203de4_write(_self_, static__1ab1cc65e_funcIns(_80833_f));
	};
}



inline void _1ab26e734_funcDeclIns(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _82336_f, jule::Bool _82347_ptr) {
	_1ab246b3a_indent(_self_);
	_1ab26e602_funcHead(_self_, _82336_f, _82347_ptr);
	_1ab26e4c0_paramsDecls(_self_, &((*(_82336_f)).get()._field_Params));
	_1ab203de4_write(_self_, jule::Str(";\n", 2));
}



inline void _1ab26e866_funcDecl(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ab22e4_Fn>* _83033_f, jule::Bool _83041_ptr) {
	{
		auto expr = &((*(_83033_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adad0317:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab39ee_FnIns> _83121_c = *it;
			{
				_1ab26e734_funcDeclIns(_self_, &(_83121_c), _83041_ptr);
			}
			_iter_next_1adad0317:;
			++it;
			goto _iter_begin_1adad0317;
		}
		_iter_end_1adad0317:;
	};
}



inline void _1ab26e998_funcDeclTrait(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ac306e_Trait>* _83638_t, jule::Ptr<_1c4ab22e4_Fn>* _83654_f, jule::Bool _83662_ptr) {
	{
		auto expr = &((*(_83654_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adad1527:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab39ee_FnIns> _83721_c = *it;
			{
				jule::Ptr<_1c4621d32_TypeKind> _83821_k = _83721_c.get()._field_Params[0LL].get()._field_Kind;;
				_83721_c.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>((*(_83638_t)), 2)});
				_1ab26e734_funcDeclIns(_self_, &(_83721_c), _83662_ptr);
				_83721_c.get()._field_Params[0LL].get()._field_Kind=_83821_k;
			}
			_iter_next_1adad1527:;
			++it;
			goto _iter_begin_1adad1527;
		}
		_iter_end_1adad1527:;
	};
}



inline void _1ab26eaca_funcDecls(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_1ab26d1a0_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c4b02a82_Package>*)>([=](jule::Ptr<_1c4b02a82_Package>* _84635_pkg) mutable -> void {
		_1ab274261_iterFiles(_84635_pkg, jule::Fn<void(jule::Ptr<_1c45e20dd_SymbolTable>*)>([=](jule::Ptr<_1c45e20dd_SymbolTable>* _84736_file) mutable -> void {
			{
				auto expr = &((*(_84736_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1adad540a:;
				if (it != expr_end) {
					jule::Ptr<_1c4ab22e4_Fn> _84829_f = *it;
					{
						if (((!(_84829_f.get()._field_CppLinked)) && (_84829_f.get()._field_Token != nullptr))) {
							_1ab245584_pushResult(_self_, &(_84829_f));
							_1ab26e866_funcDecl(_self_, &(_84829_f), false);
						};
					}
					_iter_next_1adad540a:;
					++it;
					goto _iter_begin_1adad540a;
				}
				_iter_end_1adad540a:;
			};
		}));
	}));
}



inline void _1ab26ec0c_traitDataTypeMethods(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ac306e_Trait>* _85845_owner, jule::Ptr<_1c4ac306e_Trait>* _85865_t) {
	{
		auto expr = &((*(_85865_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adad5075:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _85921_m = *it;
			{
				jule::Ptr<_1c4ab39ee_FnIns> _86021_ins = _85921_m.get()._field_Instances[0LL];;
				jule::Ptr<_1c4ab2b30_ParamIns> _86121_p = _86021_ins.get()._field_Params[0LL];;
				_86121_p.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>((*(_85865_t)), 2)});
				{
					auto expr = _86021_ins.get()._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1adad87b5:;
					if (it != expr_end) {
						jule::I32 _86518_i = it - expr.begin();
						jule::Ptr<_1c4ab2b30_ParamIns> _86525_ip = *it;
						{
							if (_203988be7_IsAnonIdent(_86525_ip.get()._field_Decl.get()._field_Ident)) {
								_86525_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1c3174853_Itoa(_86518_i));
							};
						}
						_iter_next_1adad87b5:;
						++it;
						_86518_i++;
						goto _iter_begin_1adad87b5;
					}
					_iter_end_1adad87b5:;
				};
				if ((!(_2037bbbe5_Production))) {
					jule::Ptr<_1c4ab2b30_ParamIns> _87125_lp = _86021_ins.get()._field_Params[(_86021_ins.get()._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ _87125_lp.get()._field_Kind.get()._field_Kind };
						
						if (_match_expr.type_is(true, 13)) {
							_case_begin_1adadc05a:;
							{
								goto _match_end_1adada971;
							}
						}
						else {
							_case_begin_1adadaab4:;
							{
								_86021_ins.get()._field_Params = jule::alloc_for_append(_86021_ins.get()._field_Params,1);_86021_ins.get()._field_Params.__push(jule::new_ptr<_1c4ab2b30_ParamIns>(_1c4ab2b30_ParamIns{._field_Decl=jule::new_ptr<_1c4ab2107_Param>(_1c4ab2107_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1ab275b58_customType>(_1ab275b58_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
							}
						}
						_match_end_1adada971:;
					};
				};
				_1ab245584_pushResult(_self_, &(_85921_m));
				_1ab26e998_funcDeclTrait(_self_, _85845_owner, &(_85921_m), true);
			}
			_iter_next_1adad5075:;
			++it;
			goto _iter_begin_1adad5075;
		}
		_iter_end_1adad5075:;
	};
}



inline void _1ab26ed3e_traitDataTypes(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_1ab26d1a0_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c4b02a82_Package>*)>([=](jule::Ptr<_1c4b02a82_Package>* _89435_pkg) mutable -> void {
		_1ab274261_iterFiles(_89435_pkg, jule::Fn<void(jule::Ptr<_1c45e20dd_SymbolTable>*)>([=](jule::Ptr<_1c45e20dd_SymbolTable>* _89536_file) mutable -> void {
			{
				auto expr = &((*(_89536_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1adadddd6:;
				if (it != expr_end) {
					jule::Ptr<_1c4ac306e_Trait> _89629_t = *it;
					{
						if ((_89629_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1ab203de4_write(_self_, jule::Str("struct ", 7));
						_1ab203de4_write(_self_, static__1ab1cc906_traitDecl(_89629_t));
						_1ab203de4_write(_self_, jule::Str("MptrData", 8));
						_1ab203de4_write(_self_, jule::Str(" {\n", 3));
						_1ab2430ba_addIndent(_self_);
						_1ab26ec0c_traitDataTypeMethods(_self_, &(_89629_t), &(_89629_t));
						_1ab2435d7_doneIndent(_self_);
						_1ab246b3a_indent(_self_);
						_1ab203de4_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1adadddd6:;
					++it;
					goto _iter_begin_1adadddd6;
				}
				_iter_end_1adadddd6:;
			};
		}));
	}));
}



inline void _1ab26eee8_paramIns(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ab2b30_ParamIns>* _91433_p) {
	_1ab203de4_write(_self_, _1ab27a92c_paramIns(_self_.get()._field_tc.ptr(), _91433_p));
	_1ab203de4_write(_self_, jule::Str(" ", 1));
	_1ab203de4_write(_self_, static__1ab1ccb9d_param(&((*(_91433_p)).get()._field_Decl)));
}



inline void _1ab27026d_paramsIns(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>>* _92034_params) {
	if (((*(_92034_params)).len() == 0LL)) {
		_1ab203de4_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1ab203de4_write(_self_, jule::Str("(", 1));
	{
		auto expr = _92034_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adae378c:;
		if (it != expr_end) {
			jule::I32 _92614_i = it - expr->begin();
			jule::Ptr<_1c4ab2b30_ParamIns> _92621_p = *it;
			{
				_1ab26eee8_paramIns(_self_, &(_92621_p));
				if ((((*(_92034_params)).len() - _92614_i) > 1LL)) {
					_1ab203de4_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1adae378c:;
			++it;
			_92614_i++;
			goto _iter_begin_1adae378c;
		}
		_iter_end_1adae378c:;
	};
	_1ab203de4_write(_self_, jule::Str(")", 1));
}



inline void _1ab27058c_varInitExpr(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4b2c837_Var>* _93536_v, jule::Fn<void(void)> _93545_init) {
	if ((*(_93536_v)).get()._field_Statically) {
		_1ab203de4_write(_self_, jule::Str("static ", 7));
	};
	_1ab203de4_write(_self_, _1ab27b983_kind(_self_.get()._field_tc.ptr(), (*(_93536_v)).get()._field_Kind.get()._field_Kind));
	_1ab203de4_write(_self_, jule::Str(" ", 1));
	if ((*(_93536_v)).get()._field_Reference) {
		_1ab203de4_write(_self_, jule::Str("*", 1));
	};
	_1ab203de4_write(_self_, static__1ab1cd72b_var((*(_93536_v))));
	if ((_93545_init != nullptr)) {
		_1ab203de4_write(_self_, jule::Str(" = ", 3));
		_93545_init();
	};
	_1ab203de4_write(_self_, jule::Str(";", 1));
}



inline void _1ab270812_var(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4b2c837_Var> _95327_v) {
	if (_203988950_IsIgnoreIdent(_95327_v.get()._field_Ident)) {
		return;;
	};
	if (((_95327_v.get()._field_Value != nullptr) && (_95327_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_95327_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_95327_v.get()._field_Reference) {
				_1ab27058c_varInitExpr(_self_, &(_95327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1ab203de4_write(_self_, jule::Str("&(", 2));
					_1ab1c4c1c_model(_self_.get()._field_ec, _95327_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_1ab203de4_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1ab27058c_varInitExpr(_self_, &(_95327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1ab1bae99_possibleRefExpr(_self_.get()._field_ec, _95327_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_1ab27058c_varInitExpr(_self_, &(_95327_v), nullptr);
		return;;
	};
	if (_95327_v.get()._field_Reference) {
		_1ab27058c_varInitExpr(_self_, &(_95327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ab203de4_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1ab2837ae_shouldInitialized(&(_95327_v.get()._field_Kind.get()._field_Kind))) {
		_1ab27058c_varInitExpr(_self_, &(_95327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ab1c4e92_initExpr(_self_.get()._field_ec, _95327_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1ab27058c_varInitExpr(_self_, &(_95327_v), nullptr);
}



inline void _1ab270a87_funcIns(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _98432_f) {
	_1ab26e602_funcHead(_self_, _98432_f, false);
	_1ab27026d_paramsIns(_self_, &((*(_98432_f)).get()._field_Params));
	_1ab203de4_write(_self_, jule::Str(" ", 1));
	_1ab1b53b1_funcScope(_self_.get()._field_sc, (*(_98432_f)));
	if (((*(_98432_f)).get()._field_Scope != nullptr)) {
		_1ab203de4_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _1ab270d0c_func(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ab22e4_Fn>* _99429_f) {
	{
		auto expr = &((*(_99429_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb02449:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab39ee_FnIns> _99521_ins = *it;
			{
				_1ab270a87_funcIns(_self_, &(_99521_ins));
			}
			_iter_next_1adb02449:;
			++it;
			goto _iter_begin_1adb02449;
		}
		_iter_end_1adb02449:;
	};
}



inline void _1ab27112b_funcTrait(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1ab1d4523_traitHash>* _100034_hash, jule::Ptr<_1c4ab22e4_Fn>* _100057_f) {
	jule::Str _100113_ident = (*(_100057_f)).get()._field_Ident;;
	{
		auto expr = &((*(_100057_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb03846:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab39ee_FnIns> _100221_ins = *it;
			{
				_100221_ins.get()._field_Scope=nullptr;
				(*(_100057_f)).get()._field_Ident=_100113_ident;
				((*(_100057_f)).get()._field_Ident).append("_", 1);
				(*(_100057_f)).get()._field_Ident+=(*(_100034_hash)).get()._field_t.get()._field_Ident;
				((*(_100057_f)).get()._field_Ident).append("_", 1);
				(*(_100057_f)).get()._field_Ident+=_1c3174853_Itoa((*(_100034_hash)).get()._field_i);
				jule::Ptr<_1c4621d32_TypeKind> _101121_k = _100221_ins.get()._field_Params[0LL].get()._field_Kind;;
				_100221_ins.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>((*(_100034_hash)).get()._field_t, 2)});
				_1ab270a87_funcIns(_self_, &(_100221_ins));
				_100221_ins.get()._field_Params[0LL].get()._field_Kind=_101121_k;
			}
			_iter_next_1adb03846:;
			++it;
			goto _iter_begin_1adb03846;
		}
		_iter_end_1adb03846:;
	};
	(*(_100057_f)).get()._field_Ident=_100113_ident;
}



inline void _1ab27144a_traitWrapper(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ab22e4_Fn>* _101937_m, jule::Ptr<_1ab1d4523_traitHash>* _101950_hash) {
	_1ab27112b_funcTrait(_self_, _101950_hash, _101937_m);
	if (((*(_101950_hash)).get()._field_s == nullptr)) {
		if (_2037bbbe5_Production) {
			_1ab203de4_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1ab203de4_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _103113_ptr = (!(_1c4a71e63_IsRef((*(_101937_m)).get()._field_Params[0LL].ptr())));;
	jule::Ptr<_1c4ab22e4_Fn> _103317_sm = _1c4a85d23_FindMethod((*(_101950_hash)).get()._field_s.ptr(), (*(_101937_m)).get()._field_Ident, false);;
	if (((_103317_sm == nullptr) || (_103317_sm.get()._field_Instances.len() == 0LL))) {
		return;;
	};
	_1ab2430ba_addIndent(_self_);
	_1ab203de4_write(_self_, jule::Str("{\n", 2));
	_1ab246b3a_indent(_self_);
	if ((_103317_sm.get()._field_Exceptional || (!(_1c4a871ed_IsVoid(_103317_sm.ptr()))))) {
		_1ab203de4_write(_self_, jule::Str("return ", 7));
	};
	_1ab203de4_write(_self_, static__1ab1cc3b7_func(&(_103317_sm)));
	_1ab203de4_write(_self_, jule::Str("(", 1));
	if (_103113_ptr) {
		_1ab203de4_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_1ab203de4_write(_self_, _1ab27a003_structureIns(_self_.get()._field_tc.ptr(), (*(_101950_hash)).get()._field_s));
		_1ab203de4_write(_self_, jule::Str(">(", 2));
		if ((!(_2037bbbe5_Production))) {
			_1ab203de4_write(_self_, jule::Str("_00___file", 10));
		};
		_1ab203de4_write(_self_, jule::Str(")", 1));
	} else {
		_1ab203de4_write(_self_, jule::Str("_self_.data.as<", 15));
		_1ab203de4_write(_self_, _1ab279be5_structure(_self_.get()._field_tc.ptr(), _103317_sm.get()._field_Owner));
		_1ab203de4_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*(_101937_m)).get()._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1adb0c2de:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab2107_Param> _105916_mp = *it;
			{
				_1ab203de4_write(_self_, jule::Str(", ", 2));
				_1ab203de4_write(_self_, static__1ab1ccb9d_param(&(_105916_mp)));
			}
			_iter_next_1adb0c2de:;
			++it;
			goto _iter_begin_1adb0c2de;
		}
		_iter_end_1adb0c2de:;
	};
	_1ab203de4_write(_self_, jule::Str(");\n}\n", 5));
	_1ab2435d7_doneIndent(_self_);
}



inline void _1ab271626_traitWrappers(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb11304:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d4523_traitHash> _106821_hash = *it;
			{
				{
					auto expr = &(_106821_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1adb11ba6:;
					if (it != expr_end) {
						jule::Ptr<_1c4ab22e4_Fn> _106925_m = *it;
						{
							_1ab27144a_traitWrapper(_self_, &(_106925_m), &(_106821_hash));
						}
						_iter_next_1adb11ba6:;
						++it;
						goto _iter_begin_1adb11ba6;
					}
					_iter_end_1adb11ba6:;
				};
			}
			_iter_next_1adb11304:;
			++it;
			goto _iter_begin_1adb11304;
		}
		_iter_end_1adb11304:;
	};
}



inline void _1ab271945_traitDataMethods(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4ac306e_Trait>* _107541_t, jule::Ptr<_1ab1d4523_traitHash>* _107553_hash) {
	{
		auto expr = &((*(_107541_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb129a9:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _107621_m = *it;
			{
				jule::Str _107717_mIdent = static__1ab1cc3b7_func(&(_107621_m));;
				_1ab246b3a_indent(_self_);
				_1ab203de4_write(_self_, jule::Str(".", 1));
				_1ab203de4_write(_self_, _107717_mIdent);
				_1ab203de4_write(_self_, jule::Str("=", 1));
				_1ab203de4_write(_self_, _107717_mIdent);
				_1ab203de4_write(_self_, jule::Str("_", 1));
				_1ab203de4_write(_self_, (*(_107553_hash)).get()._field_t.get()._field_Ident);
				_1ab203de4_write(_self_, jule::Str("_", 1));
				_1ab203de4_write(_self_, _1c3174853_Itoa((*(_107553_hash)).get()._field_i));
				_1ab203de4_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_1adb129a9:;
			++it;
			goto _iter_begin_1adb129a9;
		}
		_iter_end_1adb129a9:;
	};
}



inline void _1ab271c64_traitData(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1ab1d4523_traitHash>* _109134_hash, jule::Ptr<_1c4ac306e_Trait>* _109157_old) {
	jule::Str _109213_ident = static__1ab1cc906_traitDecl((*(_109134_hash)).get()._field_t);;
	if (((*(_109134_hash)).get()._field_t != (*(_109157_old)))) {
		if (((*(_109157_old)) != nullptr)) {
			_1ab2435d7_doneIndent(_self_);
			_1ab246b3a_indent(_self_);
			_1ab203de4_write(_self_, jule::Str("};\n", 3));
		};
		_1ab203de4_write(_self_, jule::Str("static ", 7));
		_1ab203de4_write(_self_, _109213_ident);
		_1ab203de4_write(_self_, jule::Str("MptrData ", 9));
		_1ab203de4_write(_self_, _109213_ident);
		_1ab203de4_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_109157_old))=(*(_109134_hash)).get()._field_t;
		_1ab2430ba_addIndent(_self_);
	};
	_1ab246b3a_indent(_self_);
	_1ab203de4_write(_self_, jule::Str("{\n", 2));
	_1ab2430ba_addIndent(_self_);
	_1ab271945_traitDataMethods(_self_, &((*(_109134_hash)).get()._field_t), _109134_hash);
	_1ab2435d7_doneIndent(_self_);
	_1ab246b3a_indent(_self_);
	_1ab203de4_write(_self_, jule::Str("},\n", 3));
}



inline void _1ab271e40_traitDatas(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	jule::Ptr<_1c4ac306e_Trait> _111717_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb1ac37:;
		if (it != expr_end) {
			jule::Ptr<_1ab1d4523_traitHash> _111821_hash = *it;
			{
				_1ab271c64_traitData(_self_, &(_111821_hash), &(_111717_old));
			}
			_iter_next_1adb1ac37:;
			++it;
			goto _iter_begin_1adb1ac37;
		}
		_iter_end_1adb1ac37:;
	};
	if ((_111717_old != nullptr)) {
		_1ab2435d7_doneIndent(_self_);
		_1ab246b3a_indent(_self_);
		_1ab203de4_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1ab27211b_globals(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb1c992:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> _112921_v = *it;
			{
				_1ab203de4_write(_self_, _1ab27b983_kind(_self_.get()._field_tc.ptr(), _112921_v.get()._field_Kind.get()._field_Kind));
				_1ab203de4_write(_self_, jule::Str(" ", 1));
				_1ab203de4_write(_self_, static__1ab1cd72b_var(_112921_v));
				_1ab203de4_write(_self_, jule::Str(" = ", 3));
				_1ab1c4c1c_model(_self_.get()._field_ec, _112921_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_1ab203de4_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1adb1c992:;
			++it;
			goto _iter_begin_1adb1c992;
		}
		_iter_end_1adb1c992:;
	};
}



inline void _1ab2722e7_decls(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_1ab26d414_traitDecls(_self_);
	_1ab26d678_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I32>(_self_.get()._field_Obj.len());
	_1ab26e38d_structureDecls(_self_);
	_1ab26eaca_funcDecls(_self_);
	_1ab203de4_write(_self_, jule::Str("\n\n", 2));
	_1ab26ed3e_traitDataTypes(_self_);
	_1ab203de4_write(_self_, jule::Str("\n\n", 2));
	_1ab271626_traitWrappers(_self_);
	_1ab203de4_write(_self_, jule::Str("\n\n", 2));
	_1ab271e40_traitDatas(_self_);
	_1ab203de4_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I32>(_self_.get()._field_Obj.len());
	_1ab27211b_globals(_self_);
}



inline void _1ab27256c_structureMethods(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4aab255_StructIns>* _115641_s) {
	{
		auto expr = &((*(_115641_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb236bd:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _115721_f = *it;
			{
				_1ab270d0c_func(_self_, &(_115721_f));
				_1ab203de4_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1adb236bd:;
			++it;
			goto _iter_begin_1adb236bd;
		}
		_iter_end_1adb236bd:;
	};
}



inline void _1ab2727e2_structureDeriveDefs(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4aab255_StructIns>* _116344_s) {
	if (_1c4a7484a_IsDerives((*(_116344_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1ab203de4_write(_self_, _1ab1c823c_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_116344_s)).get()._field_Decl)));
		_1ab203de4_write(_self_, jule::Str("{\n", 2));
		_1ab2430ba_addIndent(_self_);
		_1ab246b3a_indent(_self_);
		_1ab203de4_write(_self_, _1ab27a003_structureIns(_self_.get()._field_tc.ptr(), (*(_116344_s))));
		_1ab203de4_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_116344_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adb26847:;
			if (it != expr_end) {
				jule::Ptr<_1c4aab068_FieldIns> _117120_f = *it;
				{
					jule::Str _117221_ident = static__1ab1cd484_field(&(_117120_f.get()._field_Decl));;
					_1ab246b3a_indent(_self_);
					_1ab203de4_write(_self_, jule::Str("clone.", 6));
					_1ab203de4_write(_self_, _117221_ident);
					_1ab203de4_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1ab203de4_write(_self_, _117221_ident);
					_1ab203de4_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1adb26847:;
				++it;
				goto _iter_begin_1adb26847;
			}
			_iter_end_1adb26847:;
		};
		_1ab246b3a_indent(_self_);
		_1ab203de4_write(_self_, jule::Str("return clone;\n", 14));
		_1ab2435d7_doneIndent(_self_);
		_1ab203de4_write(_self_, jule::Str("}", 1));
	};
}



inline void _1ab272a67_structureOstream(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4aab255_StructIns>* _118741_s) {
	_1ab246b3a_indent(_self_);
	_1ab203de4_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1ab203de4_write(_self_, static__1ab1cd1dc_structureIns(_118741_s));
	_1ab203de4_write(_self_, jule::Str(" _Src) {\n", 9));
	_1ab2430ba_addIndent(_self_);
	_1ab246b3a_indent(_self_);
	jule::Ptr<_1c4ab22e4_Fn> _119517_fts = _1c4a85d23_FindMethod((*(_118741_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__1c4b2deed_Str(_119517_fts)) {
		_1ab203de4_write(_self_, jule::Str("_Stream << ", 11));
		_1ab203de4_write(_self_, static__1ab1cc3b7_func(&(_119517_fts)));
		_1ab203de4_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1ab203de4_write(_self_, jule::Str("_Stream << \"", 12));
		_1ab203de4_write(_self_, (*(_118741_s)).get()._field_Decl.get()._field_Ident);
		_1ab203de4_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_118741_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adb2d909:;
			if (it != expr_end) {
				jule::I32 _120518_i = it - expr->begin();
				jule::Ptr<_1c4aab068_FieldIns> _120525_f = *it;
				{
					_1ab246b3a_indent(_self_);
					_1ab203de4_write(_self_, jule::Str("_Stream << \"", 12));
					_1ab203de4_write(_self_, _120525_f.get()._field_Decl.get()._field_Ident);
					_1ab203de4_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1c4aab255_StructIns> _121221_strct = _1c4b604c4_Struct(_120525_f.get()._field_Kind.ptr());;
					if ((((_121221_strct != nullptr) && (_121221_strct.get()._field_Decl != nullptr)) && _121221_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1ab203de4_write(_self_, jule::Str(" cpp.", 5));
						_1ab203de4_write(_self_, static__1ab1cd484_field(&(_120525_f.get()._field_Decl)));
						_1ab203de4_write(_self_, jule::Str("\"", 1));
					} else {
						_1ab203de4_write(_self_, jule::Str("\" << _Src.", 10));
						_1ab203de4_write(_self_, static__1ab1cd484_field(&(_120525_f.get()._field_Decl)));
					};
					if (((_120518_i + 1LL) < (*(_118741_s)).get()._field_Fields.len())) {
						_1ab203de4_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1ab203de4_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1adb2d909:;
				++it;
				_120518_i++;
				goto _iter_begin_1adb2d909;
			}
			_iter_end_1adb2d909:;
		};
		_1ab246b3a_indent(_self_);
		_1ab203de4_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1ab246b3a_indent(_self_);
	_1ab203de4_write(_self_, jule::Str("return _Stream;\n", 16));
	_1ab2435d7_doneIndent(_self_);
	_1ab203de4_write(_self_, jule::Str("}", 1));
}



inline void _1ab272cdc_structureIns(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4aab255_StructIns>* _123837_s) {
	_1ab27256c_structureMethods(_self_, _123837_s);
	_1ab203de4_write(_self_, jule::Str("\n\n", 2));
	_1ab2727e2_structureDeriveDefs(_self_, _123837_s);
	_1ab203de4_write(_self_, jule::Str("\n\n", 2));
	_1ab272a67_structureOstream(_self_, _123837_s);
}



inline void _1ab273062_structure(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4a86ebc_Struct>* _124634_s) {
	{
		auto expr = &((*(_124634_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb364e4:;
		if (it != expr_end) {
			jule::Ptr<_1c4aab255_StructIns> _124721_ins = *it;
			{
				_1ab272cdc_structureIns(_self_, &(_124721_ins));
				_1ab203de4_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1adb364e4:;
			++it;
			goto _iter_begin_1adb364e4;
		}
		_iter_end_1adb364e4:;
	};
}



inline void _1ab27323d_structures(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb37704:;
		if (it != expr_end) {
			jule::Ptr<_1c4a86ebc_Struct> _125421_s = *it;
			{
				if ((_125421_s.get()._field_Token != nullptr)) {
					_1ab273062_structure(_self_, &(_125421_s));
					_1ab203de4_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1adb37704:;
			++it;
			goto _iter_begin_1adb37704;
		}
		_iter_end_1adb37704:;
	};
}



inline void _1ab273419_funcs(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_1ab26d1a0_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c4b02a82_Package>*)>([=](jule::Ptr<_1c4b02a82_Package>* _126335_pkg) mutable -> void {
		_1ab274261_iterFiles(_126335_pkg, jule::Fn<void(jule::Ptr<_1c45e20dd_SymbolTable>*)>([=](jule::Ptr<_1c45e20dd_SymbolTable>* _126436_file) mutable -> void {
			{
				auto expr = &((*(_126436_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1adb3a84a:;
				if (it != expr_end) {
					jule::Ptr<_1c4ab22e4_Fn> _126529_f = *it;
					{
						if (((!(_2037bb2aa_Test)) && _1ab283517_hasDirective(&(_126529_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1adb3a84a;
						};
						if (((!(_126529_f.get()._field_CppLinked)) && (_126529_f.get()._field_Token != nullptr))) {
							_1ab270d0c_func(_self_, &(_126529_f));
							_1ab203de4_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1adb3a84a:;
					++it;
					goto _iter_begin_1adb3a84a;
				}
				_iter_end_1adb3a84a:;
			};
		}));
	}));
}



inline void _1ab27368e_pushInit(jule::Ptr<_1ab26c644_ObjectCoder> _self_, jule::Ptr<_1c4b02a82_Package>* _127833_pkg) {
	_1ab274261_iterFiles(_127833_pkg, jule::Fn<void(jule::Ptr<_1c45e20dd_SymbolTable>*)>([=](jule::Ptr<_1c45e20dd_SymbolTable>* _127932_file) mutable -> void {
		{
			auto expr = &((*(_127932_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adb3d09a:;
			if (it != expr_end) {
				jule::Ptr<_1c4ab22e4_Fn> _128020_f = *it;
				{
					if (_128020_f.get()._field_Ident.equal("init", 4)) {
						_1ab246b3a_indent(_self_);
						_1ab203de4_write(_self_, static__1ab1cc3b7_func(&(_128020_f)));
						_1ab203de4_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1adb3d09a:;
				++it;
				goto _iter_begin_1adb3d09a;
			}
			_iter_end_1adb3d09a:;
		};
	}));
}



inline void _1ab27386a_initCaller(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_1ab203de4_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1ab2430ba_addIndent(_self_);
	_1ab26d1a0_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c4b02a82_Package>*)>([=](jule::Ptr<_1c4b02a82_Package>* _129335_pkg) mutable -> void {
		_1ab27368e_pushInit(_self_, _129335_pkg);
	}));
	_1ab2435d7_doneIndent(_self_);
	_1ab203de4_write(_self_, jule::Str("\n}", 2));
}



inline void _1ab273a46_end(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_1ab203de4_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_2037bb2aa_Test) {
		_1ab203de4_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1ab203de4_write(_self_, jule::Str("entry_point();", 14));
	};
	_1ab203de4_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1ab273c22_serializeHead(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_1ab26d06d_prepareStructures(_self_);
	_1ab26d2d2_buildTraitMap(_self_);
	_1ab26cbc7_head(_self_);
	_1ab203de4_write(_self_, jule::Str("\n", 1));
	_1ab2722e7_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _132821_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1adb44755:;
			if (it != expr_end) {
				jule::Str _132920_decl = *it;
				{
					_132821_head+=_132920_decl;
					_self_.get()._field_declPos+=_132920_decl.len();
				}
				_iter_next_1adb44755:;
				++it;
				goto _iter_begin_1adb44755;
			}
			_iter_end_1adb44755:;
		};
		_132821_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_132821_head;
	};
	_1ab203de4_write(_self_, jule::Str("\n", 1));
	_1ab27323d_structures(_self_);
	_1ab273419_funcs(_self_);
	_1ab27386a_initCaller(_self_);
	_1ab203de4_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _134421_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_134421_head+=_self_.get()._field_anyObj;
		_134421_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_134421_head;
	};
}



inline void _1ab273ded_Serialize(jule::Ptr<_1ab26c644_ObjectCoder> _self_) {
	_1ab273c22_serializeHead(_self_);
	_1ab273a46_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ab26c644_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9c194dd_ObjectDeadCode> static__1a9c199b6_new(jule::Ptr<_1c481c00a_IR>* _3424_ir) {
	return jule::new_ptr<_1a9c194dd_ObjectDeadCode>(_1a9c194dd_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1ad58aa92_isLive(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c4ac306e_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1c4ac306e_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ad58c81e:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1ad58c533:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad58d006:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ad58d006:;
			++it;
			_5213_i++;
			goto _iter_begin_1ad58d006;
		}
		_iter_end_1ad58d006:;
	};
	return false;;
}

inline jule::Bool _1ad5907cd_isLive(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c4ab39ee_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1c4ab39ee_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ad592a77:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1ad5929bc:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad59334c:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ad59334c:;
			++it;
			_5213_i++;
			goto _iter_begin_1ad59334c;
		}
		_iter_end_1ad59334c:;
	};
	return false;;
}

inline jule::Bool _1ad598385_isLive(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c4aab255_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1c4aab255_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ad59b432:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1ad59b1ac:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad59b50e:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ad59b50e:;
			++it;
			_5213_i++;
			goto _iter_begin_1ad59b50e;
		}
		_iter_end_1ad59b50e:;
	};
	return false;;
}

inline jule::Bool _1ad59dd6e_isLive(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c4b2c837_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1c4b2c837_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ad5a08dc:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1ad5a07bb:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5a114b:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ad5a114b:;
			++it;
			_5213_i++;
			goto _iter_begin_1ad5a114b;
		}
		_iter_end_1ad5a114b:;
	};
	return false;;
}



inline void _1ad58ade4_pushLive(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c4ac306e_Trait> _6035_t) {
	{
		
{
			_case_begin_1ad58e8ed:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1ad58e59b:;
	};
}

inline void _1ad5913c2_pushLive(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c4ab39ee_FnIns> _6035_t) {
	{
		
{
			_case_begin_1ad5953c6:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1ad595151:;
	};
}

inline void _1ad597670_pushLive(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c4aab255_StructIns> _6035_t) {
	{
		
{
			_case_begin_1ad598d69:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1ad598a7d:;
	};
}

inline void _1ad59e1c1_pushLive(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c4b2c837_Var> _6035_t) {
	{
		
{
			_case_begin_1ad5a2d0c:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1ad5a2c30:;
	};
}



inline void _1a9c4bb91_setReferencesAsLive(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c4ab6958_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _7717_i = 0LL;;
	for (; (_7717_i < _1c4ab7041_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1c4ab734e_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1ad589695:;
					{
						jule::Ptr<_1c4ac306e_Trait> _8225_t = _7921_ref.cast_ptr<_1c4ac306e_Trait>(&__jule_any_type10);;
						if (_1ad58aa92_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1ad588bc2;
						};
						_1ad58ade4_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ad58cab6:;
							if (it != expr_end) {
								jule::Ptr<_1c4ab22e4_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ad58b455:;
										if (it != expr_end) {
											jule::Ptr<_1c4ab39ee_FnIns> _8833_mins = *it;
											{
												if (_1ad5907cd_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1ad58b455;
												};
												_1ad5913c2_pushLive(_self_, _8833_mins);
												_1a9c4bb91_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_1ad58b455:;
											++it;
											goto _iter_begin_1ad58b455;
										}
										_iter_end_1ad58b455:;
									};
								}
								_iter_next_1ad58cab6:;
								++it;
								goto _iter_begin_1ad58cab6;
							}
							_iter_end_1ad58cab6:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1ad58970b:;
					{
						jule::Ptr<_1c4ab39ee_FnIns> _9725_f = _7921_ref.cast_ptr<_1c4ab39ee_FnIns>(&__jule_any_type7);;
						if (_1ad5907cd_isLive(_self_, &(_9725_f))) {
							goto _match_end_1ad58982c;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1ad598385_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_1ad597670_pushLive(_self_, _9725_f.get()._field_Owner);
								_1a9c4bb91_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_1ad5913c2_pushLive(_self_, _9725_f);
						_1a9c4bb91_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1ad58993c:;
					{
						jule::Ptr<_1c4b2c837_Var> _11025_v = _7921_ref.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8);;
						if (_1ad59dd6e_isLive(_self_, &(_11025_v))) {
							goto _match_end_1ad58982c;
						};
						_1ad59e1c1_pushLive(_self_, _11025_v);
						_1a9c4bb91_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1ad5899a3:;
					{
						jule::Ptr<_1c4aab255_StructIns> _11725_s = _7921_ref.cast_ptr<_1c4aab255_StructIns>(&__jule_any_type9);;
						if (_1ad598385_isLive(_self_, &(_11725_s))) {
							goto _match_end_1ad58982c;
						};
						_1ad597670_pushLive(_self_, _11725_s);
						_1a9c4bb91_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ad5a5e42:;
							if (it != expr_end) {
								jule::Ptr<_1c4ab22e4_Fn> _12329_ins = *it;
								{
									{
										auto expr = &(_12329_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ad5a663a:;
										if (it != expr_end) {
											jule::Ptr<_1c4ab39ee_FnIns> _12433_mins = *it;
											{
												if (_1ad5907cd_isLive(_self_, &(_12433_mins))) {
													goto _iter_next_1ad5a663a;
												};
												_1ad5913c2_pushLive(_self_, _12433_mins);
												_1a9c4bb91_setReferencesAsLive(_self_, &(_12433_mins.get()._field_Refers));
											}
											_iter_next_1ad5a663a:;
											++it;
											goto _iter_begin_1ad5a663a;
										}
										_iter_end_1ad5a663a:;
									};
								}
								_iter_next_1ad5a5e42:;
								++it;
								goto _iter_begin_1ad5a5e42;
							}
							_iter_end_1ad5a5e42:;
						};
					}
				}
				_match_end_1ad58982c:;
			};
		}
	_iter_next_1ad588bc2:;
	}
	_iter_end_1ad588bc2:;;
}



inline void _1a9c4be16_inits(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c4b02a82_Package>* _13630_pkg) {
	{
		auto expr = &((*(_13630_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad58909b:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _13721_file = *it;
			{
				{
					auto expr = &(_13721_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad5a8b9d:;
					if (it != expr_end) {
						jule::Ptr<_1c4ab22e4_Fn> _13825_f = *it;
						{
							if (_13825_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_1c4ab39ee_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1a9c4bb91_setReferencesAsLive(_self_, &(_14029_ins.get()._field_Refers));
							};
						}
						_iter_next_1ad5a8b9d:;
						++it;
						goto _iter_begin_1ad5a8b9d;
					}
					_iter_end_1ad5a8b9d:;
				};
			}
			_iter_next_1ad58909b:;
			++it;
			goto _iter_begin_1ad58909b;
		}
		_iter_end_1ad58909b:;
	};
}



inline void _1a9c4c18b_collectLivePackage(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c4b02a82_Package>* _14843_pkg) {
	_1a9c4be16_inits(_self_, _14843_pkg);
	if (_2037bb2aa_Test) {
		{
			auto expr = &((*(_14843_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ad5ab068:;
			if (it != expr_end) {
				jule::Ptr<_1c45e20dd_SymbolTable> _15425_file = *it;
				{
					{
						auto expr = &(_15425_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad5ab893:;
						if (it != expr_end) {
							jule::Ptr<_1c4ab22e4_Fn> _15529_f = *it;
							{
								if (_1a9c4e19e_hasDirective(&(_15529_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_1c4ab39ee_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1a9c4bb91_setReferencesAsLive(_self_, &(_15733_ins.get()._field_Refers));
								};
							}
							_iter_next_1ad5ab893:;
							++it;
							goto _iter_begin_1ad5ab893;
						}
						_iter_end_1ad5ab893:;
					};
				}
				_iter_next_1ad5ab068:;
				++it;
				goto _iter_begin_1ad5ab068;
			}
			_iter_end_1ad5ab068:;
		};
	};
}



inline void _1a9c4c367_collectLive(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5ab024:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1a9c4c18b_collectLivePackage(_self_, &(_16721_used.get()._field_Package));
				};
			}
			_iter_next_1ad5ab024:;
			++it;
			goto _iter_begin_1ad5ab024;
		}
		_iter_end_1ad5ab024:;
	};
	_1a9c4c18b_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_1c4ab22e4_Fn> _17517_main = _1c4b04336_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_1c4ab39ee_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1a9c4bb91_setReferencesAsLive(_self_, &(_17617_ins.get()._field_Refers));
}



inline void _1a9c4c5dc_removeDeadGlobals(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c4b2c837_Var>>* _18142_vars) {
	jule::I32 _18217_i = 0LL;;
	while ((_18217_i < (*(_18142_vars)).len())) {
		{
			jule::Ptr<_1c4b2c837_Var> _18417_v = (*(_18142_vars))[_18217_i];;
			if (_1ad59dd6e_isLive(_self_, &(_18417_v))) {
				(_18217_i)++;
				goto _iter_next_1ad5b13e2;
			};
			(*(_18142_vars))=jule::append((*(_18142_vars)).slice(0LL, _18217_i),(*(_18142_vars)).slice((_18217_i + 1LL)));
		}
	_iter_next_1ad5b13e2:;
	}
	_iter_end_1ad5b13e2:;;
}



inline void _1a9c4c862_removeDeadFns(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c4ab22e4_Fn>>* _19338_funcs) {
	jule::I32 _19417_i = 0LL;;
	while ((_19417_i < (*(_19338_funcs)).len())) {
		{
			jule::Ptr<_1c4ab22e4_Fn> _19621_f = (*(_19338_funcs))[_19417_i];;
			jule::I32 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1c4ab39ee_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1ad5907cd_isLive(_self_, &(_19921_ins))) {
						(_19721_j)++;
						goto _iter_next_1ad5b4835;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL, _19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1ad5b4835:;
			}
			_iter_end_1ad5b4835:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				(*(_19338_funcs))=jule::append((*(_19338_funcs)).slice(0LL, _19417_i),(*(_19338_funcs)).slice((_19417_i + 1LL)));
				goto _iter_next_1ad5b2c40;
			};
			(_19417_i)++;
		}
	_iter_next_1ad5b2c40:;
	}
	_iter_end_1ad5b2c40:;;
}



inline void _1a9c4cad7_removeDeadStructs(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c4a86ebc_Struct>>* _21442_structs) {
	jule::I32 _21517_i = 0LL;;
	while ((_21517_i < (*(_21442_structs)).len())) {
		{
			jule::Ptr<_1c4a86ebc_Struct> _21721_s = (*(_21442_structs))[_21517_i];;
			jule::I32 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1c4aab255_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1a9c4c862_removeDeadFns(_self_, &(_22025_ins.get()._field_Methods));
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1ad598385_isLive(_self_, &(_22025_ins)))) {
						(_21821_j)++;
						goto _iter_next_1ad5bd696;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL, _21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1ad5bd696:;
			}
			_iter_end_1ad5bd696:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				(*(_21442_structs))=jule::append((*(_21442_structs)).slice(0LL, _21517_i),(*(_21442_structs)).slice((_21517_i + 1LL)));
				goto _iter_next_1ad5b7959;
			};
			(_21517_i)++;
		}
	_iter_next_1ad5b7959:;
	}
	_iter_end_1ad5b7959:;;
}



inline void _1a9c4cd5c_removeDeadTraits(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c4ac306e_Trait>>* _23641_traits) {
	jule::I32 _23717_i = 0LL;;
	while ((_23717_i < (*(_23641_traits)).len())) {
		{
			jule::Ptr<_1c4ac306e_Trait> _23921_t = (*(_23641_traits))[_23717_i];;
			if ((!(_1ad58aa92_isLive(_self_, &(_23921_t))))) {
				(*(_23641_traits))=jule::append((*(_23641_traits)).slice(0LL, _23717_i),(*(_23641_traits)).slice((_23717_i + 1LL)));
				goto _iter_next_1ad5c0d6e;
			};
			jule::I32 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1c4a86ebc_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1ad5c2ac9;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL, _24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1ad5c2ac9:;
			}
			_iter_end_1ad5c2ac9:;;
			(_23717_i)++;
		}
	_iter_next_1ad5c0d6e:;
	}
	_iter_end_1ad5c0d6e:;;
}



inline void _1a9c4d0d2_removeDeadsFile(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c45e20dd_SymbolTable>* _25740_file) {
	_1a9c4c862_removeDeadFns(_self_, &((*(_25740_file)).get()._field_Funcs));
	_1a9c4cad7_removeDeadStructs(_self_, &((*(_25740_file)).get()._field_Structs));
	_1a9c4cd5c_removeDeadTraits(_self_, &((*(_25740_file)).get()._field_Traits));
	_1a9c4c5dc_removeDeadGlobals(_self_, &((*(_25740_file)).get()._field_Vars));
}



inline void _1a9c4d357_removeDeadsPackage(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_, jule::Ptr<_1c4b02a82_Package>* _26443_pkg) {
	{
		auto expr = &((*(_26443_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5c7419:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _26521_file = *it;
			{
				_1a9c4d0d2_removeDeadsFile(_self_, &(_26521_file));
			}
			_iter_next_1ad5c7419:;
			++it;
			goto _iter_begin_1ad5c7419;
		}
		_iter_end_1ad5c7419:;
	};
}



inline void _1a9c4d533_removeDeads(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5c82d8:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1a9c4d357_removeDeadsPackage(_self_, &(_27121_used.get()._field_Package));
				};
			}
			_iter_next_1ad5c82d8:;
			++it;
			goto _iter_begin_1ad5c82d8;
		}
		_iter_end_1ad5c82d8:;
	};
	_1a9c4d357_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1a9c4d70e_elimanate(jule::Ptr<_1a9c194dd_ObjectDeadCode> _self_) {
	_1a9c4c367_collectLive(_self_);
	_1a9c4d533_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9c194dd_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1c481c00a_IR__jule_tuple_s_1c2220900_Log static__1a9abd0b7_Build(jule::Str _2721_path, jule::I32 _2732_flags) {
	__jule_tuple_x_1c481c00a_IR__jule_tuple_s_1c2220900_Log __jule_func_result;
	jule::Ptr<_1a9a21e2d_JuleImporter> _2817_importer = static__1c482c746_New(_1a9aa2a80_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1c4a59b93_Ast>> _2918_files;;
	jule::Slice<_1c2220900_Log> _2929_logs;;
	({
		__jule_tuple_sx_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9a41700_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4b02a82_Package> _3918_pkg;;
	({
		__jule_tuple_x_1c4b02a82_Package__jule_tuple_s_1c2220900_Log __jule_assign_result = _1c4b79224_AnalyzePackage(_2918_files, jule::Trait<_1c4aebe77_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1c481c00a_IR> _4417_ir = jule::new_ptr<_1c481c00a_IR>(_1c481c00a_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1a9965426_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1a9a155c5_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a9ac5db1_appendStructs(_1c481c00a_IR* _self_, jule::Ptr<_1c4b02a82_Package>* _5633_p, jule::Slice<jule::Ptr<_1c4a86ebc_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad552b8b:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad5534c7:;
					if (it != expr_end) {
						jule::Ptr<_1c4a86ebc_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								(*(_5657_buffer)) = jule::alloc_for_append((*(_5657_buffer)),1);(*(_5657_buffer)).__push(_5825_s);;
							};
						}
						_iter_next_1ad5534c7:;
						++it;
						goto _iter_begin_1ad5534c7;
					}
					_iter_end_1ad5534c7:;
				};
			}
			_iter_next_1ad552b8b:;
			++it;
			goto _iter_begin_1ad552b8b;
		}
		_iter_end_1ad552b8b:;
	};
}



inline jule::Slice<jule::Ptr<_1c4a86ebc_Struct>> _1a9ad0195_GetAllStructures(_1c481c00a_IR* _self_) {
	jule::Slice<jule::Ptr<_1c4a86ebc_Struct>> _6917_buffer = nullptr;;
	_1a9ac5db1_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad553373:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1a9ac5db1_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1ad553373:;
			++it;
			goto _iter_begin_1ad553373;
		}
		_iter_end_1ad553373:;
	};
	return _6917_buffer;;
}



inline void _1c4824067_appendGlobals(_1c481c00a_IR* _self_, jule::Ptr<_1c4b02a82_Package>* _7933_p, jule::Slice<jule::Ptr<_1c4b2c837_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad555ac3:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad5563ed:;
					if (it != expr_end) {
						jule::Ptr<_1c4b2c837_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								(*(_7957_buffer)) = jule::alloc_for_append((*(_7957_buffer)),1);(*(_7957_buffer)).__push(_8125_v);;
							};
						}
						_iter_next_1ad5563ed:;
						++it;
						goto _iter_begin_1ad5563ed;
					}
					_iter_end_1ad5563ed:;
				};
			}
			_iter_next_1ad555ac3:;
			++it;
			goto _iter_begin_1ad555ac3;
		}
		_iter_end_1ad555ac3:;
	};
}



inline jule::Slice<jule::Ptr<_1c4b2c837_Var>> _1c47ed838_GetAllGlobals(_1c481c00a_IR* _self_) {
	jule::Slice<jule::Ptr<_1c4b2c837_Var>> _9217_buffer = nullptr;;
	_1c4824067_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad557ce5:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1c4824067_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1ad557ce5:;
			++it;
			goto _iter_begin_1ad557ce5;
		}
		_iter_end_1ad557ce5:;
	};
	return _9217_buffer;;
}



inline void _1c48496ec_Order(_1c481c00a_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1a9ad0195_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1c47ed838_GetAllGlobals(_self_);
	static__1a99d2152_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1a99d4022_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _1c481c00a_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c4a81549_Str(_1c4aab255_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		(_25017_kind).append("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac65c8ce:;
			if (it != expr_end) {
				jule::Ptr<_1c47006e6_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_1c4622272_Str((*(_25420_g)).get()._field_Kind.ptr());
					(_25017_kind).append(",", 1);
				}
				_iter_next_1ac65c8ce:;
				++it;
				goto _iter_begin_1ac65c8ce;
			}
			_iter_end_1ac65c8ce:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		(_25017_kind).append("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _1c4a8269e_Equal(jule::Ptr<_1c4aab255_StructIns> _self_, jule::Ptr<_1c4621d32_TypeKind> _26521_other) {
	jule::Ptr<_1c4aab255_StructIns> _26613_s = _1c4b604c4_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I32 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_1c4622580_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1ac660e98:;
	}
	_iter_end_1ac660e98:;;
	return true;;
}



inline jule::Bool _1c4a84a03_Same(_1c4aab255_StructIns* _self_, jule::Ptr<_1c4aab255_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac663330:;
		if (it != expr_end) {
			jule::I32 _29713_i = it - expr->begin();
			jule::Ptr<_1c47006e6_InsGeneric> *_29716_g = it;
			{
				if ((!(_1c4622580_Equal((*(_29716_g)).get()._field_Kind, _29319_s.get()._field_Generics[_29713_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1ac663330:;
			++it;
			_29713_i++;
			goto _iter_begin_1ac663330;
		}
		_iter_end_1ac663330:;
	};
	return true;;
}



inline jule::Ptr<_1c4ab22e4_Fn> _1c4a85d23_FindMethod(_1c4aab255_StructIns* _self_, jule::Str _30729_ident, jule::Bool _30741_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac664c05:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _30821_f = *it;
			{
				if (((_30821_f.get()._field_Statically == _30741_statically) && (_30821_f.get()._field_Ident == _30729_ident))) {
					return _30821_f;;
				};
			}
			_iter_next_1ac664c05:;
			++it;
			goto _iter_begin_1ac664c05;
		}
		_iter_end_1ac664c05:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4aab068_FieldIns> _1c4a8a861_FindField(_1c4aab255_StructIns* _self_, jule::Str _31828_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac665dc1:;
		if (it != expr_end) {
			jule::Ptr<_1c4aab068_FieldIns> _31921_f = *it;
			{
				if ((_31921_f.get()._field_Decl.get()._field_Ident == _31828_ident)) {
					return _31921_f;;
				};
			}
			_iter_next_1ac665dc1:;
			++it;
			goto _iter_begin_1ac665dc1;
		}
		_iter_end_1ac665dc1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4b2c837_Var> _1c4a8b994_FindStatic(_1c4aab255_StructIns* _self_, jule::Str _32929_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac666443:;
		if (it != expr_end) {
			jule::Ptr<_1c4b2c837_Var> _33021_v = *it;
			{
				if ((_33021_v.get()._field_Ident == _32929_ident)) {
					return _33021_v;;
				};
			}
			_iter_next_1ac666443:;
			++it;
			goto _iter_begin_1ac666443;
		}
		_iter_end_1ac666443:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4aab255_StructIns _Src) {
	_Stream << _1c4a81549_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c228eead_Cmd> static__1c229040e_New(jule::Str _2619_path) {
	return jule::new_ptr<_1c228eead_Cmd>(_1c228eead_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1c22905da_Spawn(_1c228eead_Cmd* _self_) {
	({
		auto except = _1c22b0c04_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c22907b6_Kill(_1c228eead_Cmd* _self_) {
	({
		auto except = _1c22b0dd0_kill(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _1c2290a2a_Wait(_1c228eead_Cmd* _self_) {
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(({
		auto except = _1c22b1144_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I32>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _1c22b0c04_spawn(_1c228eead_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:42:13"));;
	};
	STARTUPINFOW _4417_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4517_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4417_startupInfo)), static_cast<jule::U32>(sizeof(_4417_startupInfo)));
		ZeroMemory((&(_4517_processInfo)), static_cast<jule::U32>(sizeof(_4517_processInfo)));
	};
	_4417_startupInfo.cb=static_cast<jule::U32>(sizeof(_4417_startupInfo));
	jule::Slice<jule::Str> _5117_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5117_args[0LL]=(*(_self_))._field_path;
	_5117_args=jule::append(_5117_args,(*(_self_))._field_Args);
	jule::Slice<jule::U16> _5413_argv = _20551b0d5_Utf16FromStr(_1c22b174e_makeCmdLine(_5117_args));;
	jule::Slice<jule::U16> _5513_env = ({
		auto except = _1c22b1b06_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5617_envp = (&(_5513_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5617_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_5413_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5617_envp, nullptr, (&(_4417_startupInfo)), (&(_4517_processInfo))) == 0LL)) {
			return jule::VoidExceptional(jule::Any(_1c22b2ce4_getLastProcessError(), &__jule_any_type133));
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4517_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4517_processInfo.hThread;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c22b0dd0_kill(_1c228eead_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:73:13"));;
	};
	if (TerminateProcess((*(_self_))._field_attrs._field_hProcess, 0LL)) {
		(*(_self_))._field_attrs._field_hProcess=nullptr;
		(*(_self_))._field_attrs._field_hThread=nullptr;
		return jule::VoidExceptional();;
	};
	return jule::VoidExceptional(jule::Any(-1LL, &__jule_any_type134));
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _1c22b1144_wait(_1c228eead_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:85:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8817_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8817_exitCode)));
		_205551e2e_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess))));
		_205551e2e_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread))));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(static_cast<jule::I32>(_8817_exitCode)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1c228eead_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _20552e89b_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _20552eb43_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _20552ee62_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I32 _8813_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2b8c12:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_8813_n)++;
				};
			}
			_iter_next_1ab2b8c12:;
			++it;
			goto _iter_begin_1ab2b8c12;
		}
		_iter_end_1ab2b8c12:;
	};
	jule::Slice<jule::U16> _9513_a = jule::Slice<jule::U16>::alloc(_8813_n, _8813_n, 0);;
	_8813_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2b92ea:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_1ab2babae:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>((*(_9712_v))));
							(_8813_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_1ab2baa7c:;
						{
							jule::I32 _10518_r1 = 0;;
							jule::I32 _10522_r2 = 0;;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _20552eb43_EncodeRune((*(_9712_v)));
								_10518_r1 = __jule_assign_result.__jule_result_arg0;
								_10522_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>(_10518_r1));
							_9513_a[(_8813_n + 1LL)]=static_cast<jule::U16>(static_cast<jule::U16>(_10522_r2));
							_8813_n+=2LL;
						}
					}
					else {
						_case_begin_1ab2ba6d6:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(65533LLU);
							(_8813_n)++;
						}
					}
					_match_end_1ab2ba61a:;
				};
			}
			_iter_next_1ab2b92ea:;
			++it;
			goto _iter_begin_1ab2b92ea;
		}
		_iter_end_1ab2b92ea:;
	};
	return _9513_a.slice(0LL, _8813_n);;
}



inline jule::Slice<jule::I32> _205530209_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I32 _12113_n = 0LL;;
	jule::I32 _12213_i = 0LL;;
	for (; (_12213_i < _11911_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11911_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1ab2c0741:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_12213_i + 1LL)])) && (_11911_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1ab2bed17:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_20552e89b_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)), static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1ab2c0301:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1ab2c028a:;
			};
			(_12113_n)++;
		}
	_iter_next_1ab2bdd6b:;
	}
	_iter_end_1ab2bdd6b:;;
	return _12013_a.slice(0LL, _12113_n);;
}



inline jule::Slice<jule::U16> _205530517_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1ab2c3931:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1ab2c3997:;
			{
				jule::I32 _15614_r1 = 0;;
				jule::I32 _15618_r2 = 0;;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _20552eb43_EncodeRune(_14929_r);
					_15614_r1 = __jule_assign_result.__jule_result_arg0;
					_15618_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));;
			}
		}
		_match_end_1ab2bea2b:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _20551b0d5_Utf16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL, _209_runes.len(), 0);;
	{
		auto expr = &(_209_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2cdd7b:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_1ab2cdd7b;
				};
				_2113_buff=_205530517_AppendRune(_2113_buff, (*(_2212_r)));
			}
			_iter_next_1ab2cdd7b:;
			++it;
			goto _iter_begin_1ab2cdd7b;
		}
		_iter_end_1ab2cdd7b:;
	};
	return _205530517_AppendRune(_2113_buff, 0LL);;
}



inline jule::Str _20551eaab_Utf16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _3813_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2d11ad:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					_3813_codePage=_3813_codePage.slice(0LL, _399_i);
					goto _iter_end_1ab2d11ad;
				};
			}
			_iter_next_1ab2d11ad:;
			++it;
			_399_i++;
			goto _iter_begin_1ab2d11ad;
		}
		_iter_end_1ab2d11ad:;
	};
	return static_cast<jule::Str>(_205530209_Decode(_3813_codePage));;
}



inline jule::Str _20551a0b2_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage = nullptr;;
	jule::I32 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5023_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_205530209_Decode(_5513_codePage));;
			};
			_5513_codePage = jule::alloc_for_append(_5513_codePage,1);_5513_codePage.__push(_5813_r);;
		}
	_iter_next_1ab2d2247:;
	}
	_iter_end_1ab2d2247:;;
	return jule::Str();;
}



inline jule::I32 _2054c35cb_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _205551b87_GetStdHandle(jule::Uintptr _6517_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_6517_stdh))));;
}



inline jule::Bool _205551e2e_CloseHandle(jule::Uintptr _6623_stdh) {
	return CloseHandle(((void*)(_6623_stdh)));;
}



inline jule::I32 _205552270_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat) {
	return static_cast<jule::I32>(_wstat(((wchar_t*)(_6917_path)), _6933_stat));;
}



inline jule::I32 _20555265a_Wopen(jule::U16* _7417_path, jule::I32 _7429_flag, jule::I32 _7440_mode) {
	return static_cast<jule::I32>(_wopen(((wchar_t*)((&(_7417_path[0LL])))), _7429_flag, _7440_mode));;
}



inline jule::U32 _205552858_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());;
}



inline jule::U32 _205552b99_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_8331_bufflen, ((wchar_t*)(_8349_buff))));;
}



inline jule::Bool _2055531d8_DeleteFile(jule::U16* _9422_path) {
	return DeleteFileW(((wchar_t*)(_9422_path)));;
}



inline jule::Bool _205553480_CreateDirectory(jule::U16* _9927_path) {
	return CreateDirectoryW(((wchar_t*)(_9927_path)), nullptr);;
}



inline jule::Bool _205553727_RemoveDirectory(jule::U16* _10427_path) {
	return RemoveDirectoryW(((wchar_t*)(_10427_path)));;
}



inline jule::U32 _205553bab_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1105_buff, jule::U16** _11017_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10927_path)), _10939_bufflen, ((wchar_t*)(_1105_buff)), ((wchar_t**)(_11017_fname))));;
}



inline jule::Bool _205553eec_GetConsoleMode(jule::Uintptr _11519_handle, jule::I32* _11540_mode) {
	return GetConsoleMode(((HANDLE)(_11519_handle)), ((DWORD*)((&((*(_11540_mode)))))));;
}



inline jule::Bool _2055545b3_SetConsoleMode(jule::Uintptr _12019_handle, jule::I32 _12035_mode) {
	return SetConsoleMode(((HANDLE)(_12019_handle)), static_cast<DWORD>(_12035_mode));;
}



inline jule::Bool _205554aad_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::I32 _12554_toWrite, jule::I32* _12610_written, void* _12624_reserved) {
	return WriteConsoleW(((HANDLE)(_12524_handle)), ((void*)(_12540_buffer)), static_cast<DWORD>(_12554_toWrite), ((DWORD*)((*(_12610_written)))), _12624_reserved);;
}



inline jule::Bool _205555042_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::I32 _13357_toRead, jule::I32* _13410_readed) {
	return ReadConsoleW(((HANDLE)(_13323_handle)), ((void*)(_13343_buffer)), static_cast<DWORD>(_13357_toRead), ((DWORD*)((&((*(_13410_readed)))))), nullptr);;
}



inline jule::Uintptr _205555581_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14525_path)), _14541_data))));;
}



inline jule::I32 _2055558c2_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data) {
	return static_cast<jule::I32>(FindNextFileW(((HANDLE)(_15024_h)), _15039_data));;
}



inline jule::I32 _205555b69_FindClose(jule::Uintptr _15514_h) {
	return static_cast<jule::I32>(FindClose(((HANDLE)(_15514_h))));;
}



inline jule::I32 _205557693_Seek(jule::I32 _159_handle, jule::I32 _1522_offset, jule::I32 _1535_origin) {
	return static_cast<jule::I32>(lseek(_159_handle, _1522_offset, _1535_origin));;
}



inline jule::I32 _205557a7d_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return static_cast<jule::I32>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I32 _205557e02_Close(jule::I32 _2510_handle) {
	return static_cast<jule::I32>(close(_2510_handle));;
}



inline jule::I32 _2055582dc_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return static_cast<jule::I32>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _2055584eb_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _20556c268_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _205572856_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline __jule_tuple_i32__jule_tuple_int _1d9dd3149_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _1d9dd2027_first[static_cast<jule::I32>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1959_sz = static_cast<jule::I32>((_1879_x & 7LLU));;
	_1d9dd25aa_acceptRange _1969_accept = _1d9dd28b8_acceptRanges[static_cast<jule::I32>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1d9dd3468_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _1d9dd2027_first[static_cast<jule::I32>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2429_sz = static_cast<jule::I32>((_2349_x & 7LLU));;
	_1d9dd25aa_acceptRange _2439_accept = _1d9dd28b8_acceptRanges[static_cast<jule::I32>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1d9dd3710_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _2809_end = _27619_p.len();;
	jule::I32 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1d9dd50d5_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1ab38167b;
			};
		}
	_iter_next_1ab38167b:;
	}
	_iter_end_1ab38167b:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3149_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I32 _1d9dd3c4e_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1ab38861c:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1ab387dad:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1ab387e35:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1ab387eac:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1ab388034:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1ab388287:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1ab387d36:;
			{
				return -1LL;;
			}
		}
		_match_end_1ab387c6a:;
	};
}



inline jule::I32 _1d9dd416c_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1ab38b246:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1ab38d930:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1ab38d996:;
			{
				_37434_r=65533LL;
				goto _case_begin_1ab38d765;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1ab38d765:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;;
			}
		}
		else {
			_case_begin_1ab38add3:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;;
			}
		}
		_match_end_1ab38ad7d:;
	};
}



inline jule::Slice<jule::U8> _1d9dd44ad_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _1d9dd47ee_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1d9dd47ee_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1ab394d98:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1ab396a9d:;
			{
				_41242_r=128LL;
				goto _case_begin_1ab3951d9;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1ab3951d9:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1ab394749:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1ab3946e4:;
	};
}



inline jule::I32 _1d9dd4d3d_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1ab3a00e5;
			};
			jule::U8 _48213_x = _1d9dd2027_first[static_cast<jule::I32>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1ab3a00e5;
			};
			jule::I32 _48717_size = static_cast<jule::I32>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1ab3a00e5;
			};
			_1d9dd25aa_acceptRange _49213_accept = _1d9dd28b8_acceptRanges[static_cast<jule::I32>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1ab3a00e5:;
	}
	_iter_end_1ab3a00e5:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d9dd50d5_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _1d9e7aa3d_getLastOsErrorWindows(void) {
	jule::U32 _169_err = _205552858_GetLastError();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1ab3c3d72:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ab3c5c42:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ab3c5ca8:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1ab3c5d1e:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else {
			_case_begin_1ab3c41e6:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		_match_end_1ab3c4191:;
	};
}



inline jule::Slice<jule::Str> _1d9e7eaa8_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _1d9e8002b_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _1d9e808de_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _1d9e808de_getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _205552b99_GetCurrentDirectory(261LLU, (&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(jule::Any(_1d9e7aa3d_getLastOsErrorWindows(), &__jule_any_type135));
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _20551a0b2_U16PtrToStr((&(_1513_buff[0LL]))));;
}



inline jule::Bool _1c2101858_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1c2166934__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1c216ec6c_isExcludingLatin(_1c210aa3d_Letter, _7613_r);;
}



inline jule::Bool _1c216e189_is16(jule::Slice<_1c216c5c7_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aba2a165:;
			if (it != expr_end) {
				jule::I32 _19313_i = it - expr->begin();
				{
					_1c216c5c7_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1aba2a165:;
				++it;
				_19313_i++;
				goto _iter_begin_1aba2a165;
			}
			_iter_end_1aba2a165:;
		};
		return false;;
	};
	jule::I32 _20813_lo = 0LL;;
	jule::I32 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I32 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1c216c5c7_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I32>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1aba29b37:;
	}
	_iter_end_1aba29b37:;;
	return false;;
}



inline jule::Bool _1c216e4ca_is32(jule::Slice<_1c216ca4a_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aba31501:;
			if (it != expr_end) {
				jule::I32 _23013_i = it - expr->begin();
				{
					_1c216ca4a_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1aba31501:;
				++it;
				_23013_i++;
				goto _iter_begin_1aba31501;
			}
			_iter_end_1aba31501:;
		};
		return false;;
	};
	jule::I32 _24513_lo = 0LL;;
	jule::I32 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I32 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1c216ca4a_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I32>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1aba2d344:;
	}
	_iter_end_1aba2d344:;;
	return false;;
}



inline jule::Bool _1c216ec6c_isExcludingLatin(jule::Ptr<_1c216cebd_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1c216c5c7_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I32 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _1c216e189_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_1c216ca4a_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _1c216e4ca_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _1c2170014_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1c2166934__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1c216ec6c_isExcludingLatin(_1c2112094_Upper, _29512_r);;
}



inline jule::I32 _1c21997ad_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba45889:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1aba45889:;
			++it;
			_399_i++;
			goto _iter_begin_1aba45889;
		}
		_iter_end_1aba45889:;
	};
	return -1LL;;
}



inline jule::I32 _1c2199934_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	jule::U8* _519_first = (&(_5017_s[0LL]));;
	jule::U8* _5213_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5213_it >= _519_first); (_5213_it)--) {
		{
			{
				if (((*(_5213_it)) == _5028_b)) {
					return static_cast<jule::I32>(((jule::I32)((_5213_it - _519_first))));;
				};
			};
		}
	_iter_next_1aba47c76:;
	}
	_iter_end_1aba47c76:;;
	return -1LL;;
}



inline jule::I32 _1c2188eea_FindByteStr(jule::Str* _6417_s, jule::U8 _6425_b) {
	return static_cast<jule::I32>(_1c21997ad_FindByte(_20556c268_Stobs(_6417_s), _6425_b));;
}



inline jule::I32 _1c218933b_FindLastByteStr(jule::Str* _6921_s, jule::U8 _6929_b) {
	return static_cast<jule::I32>(_1c2199934_FindLastByte(_20556c268_Stobs(_6921_s), _6929_b));;
}



inline jule::Str _1c2171697_Repeat(jule::Str _1211_s, jule::I32 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(2147483647LL,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1aba5baae:;
	}
	_iter_end_1aba5baae:;;
	return _2013_ss;;
}



inline jule::Bool _1c2174a52_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I32 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I32 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_3213_i + 1LL));
		jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1aba5eb17:;
	}
	_iter_end_1aba5eb17:;;
	return true;;
}



inline jule::Bool _1c2170cd4_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _1c2174a52_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _1c21894a1_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I32 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I32>(((*(_4615_s)).len() - _4638_start));
	jule::I32 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1aba61b3b:;
	}
	_iter_end_1aba61b3b:;;
	return true;;
}



inline jule::Bool _1c2189759_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _1c21894a1_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I32 _1c2189b44_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I32 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_1c2174a52_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1aba65c1c:;
	}
	_iter_end_1aba65c1c:;;
	return -1LL;;
}



inline jule::I32 _1c218a480_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I32 _9333_i) {
	jule::I32 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I32 _10017_k = _9413_j;;
			jule::I32 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_10017_k + 1LL));
				jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1aba6826e;
					};
				}
			_iter_next_1aba699ce:;
			}
			_iter_end_1aba699ce:;;
			return _9413_j;;
		}
	_iter_next_1aba6826e:;
	}
	_iter_end_1aba6826e:;;
	return -1LL;;
}



inline jule::I32 _1c218a7c1_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I32>(_1c218a480_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I32>((_11513_s.len() - 1LL))));;
}



inline jule::I32 _1c218ba69_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I32 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I32 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3149_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1aba723cc:;
	}
	_iter_end_1aba723cc:;;
	return -1LL;;
}



inline jule::I32 _1c218c3a5_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I32>(_1c218933b_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I32 _1c218d1b9_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _20556c268_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _20556c268_Stobs(&(_22820_runes));;
	jule::I32 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I32 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3149_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1c218ba69_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1aba77b63:;
	}
	_iter_end_1aba77b63:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1c218d8e5_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I32 _26232_n) {
	jule::I32 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I32>(_26210_s.len());
	};
	jule::I32 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I32 _27613_j = _1c2189b44_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1aba7e065;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i, _27613_j));;
			_27413_i=static_cast<jule::I32>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1aba7e065:;
	}
	_iter_end_1aba7e065:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _1c218dc36_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_1c2189b44_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _1c218e709_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_1c218d1b9_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I32 _1c218ea4a_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _31613_n = 0LL;;
	jule::I32 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I32 _31913_j = _1c2189b44_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1aba84620;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I32>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1aba84620:;
	}
	_iter_end_1aba84620:;;
	return _31613_n;;
}



inline jule::Str _1c218eece_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I32 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I32 _3379_m = _1c218ea4a_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I32 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I32 _34813_j = _1c2189b44_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1aba88448;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I32>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1aba88448:;
	}
	_iter_end_1aba88448:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _1c218c042_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I32 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I32 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3149_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1c218ba69_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1aba8b061:;
	}
	_iter_end_1aba8b061:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _1c219108a_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _20556c268_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _20556c268_Stobs(&(_40321_cutset));;
	_1c218c042_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _1c2191343_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I32 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I32 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3710_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1c218ba69_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1aba906c5:;
	}
	_iter_end_1aba906c5:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _1c21919c5_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _20556c268_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _20556c268_Stobs(&(_43417_cutset));;
	_1c218c042_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_1c2191343_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Bool _1d9e58246_IsPathSep(jule::U8 _4814_c) {
	return ((_4814_c == 92LLU) || (_4814_c == '/'));;
}



inline jule::Bool _1d9e58378_isSlash(jule::U8 _5212_c) {
	return ((_5212_c == '\\') || (_5212_c == '/'));;
}



inline jule::U8 _1d9e584aa_toUpper(jule::U8 _5412_c) {
	if ((('a' <= _5412_c) && (_5412_c <= 'z'))) {
		return static_cast<jule::U8>((_5412_c - 32LL));;
	};
	return _5412_c;;
}



inline jule::I32 _1d9e589c7_volumeNameLen(jule::Str _8218_path) {
	if ((_8218_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _879_c = _8218_path[0LL];;
	if (((_8218_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_1d9e58378_isSlash(_8218_path[0LL]))) || (!(_1d9e58378_isSlash(_8218_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d9e58c6e_cutPath(_8218_path.slice(2LL));
		_9510_p1 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d9e58c6e_cutPath(_9518_rest);
		_9613_p2 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
		_9713_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_9713_ok))) {
		return static_cast<jule::I32>(_8218_path.len());;
	};
	if (((!_9510_p1.equal(".", 1)) && (!_9510_p1.equal("?", 1)))) {
		return static_cast<jule::I32>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
	};
	if (((((_9613_p2.len() == 3LL) && (_1d9e584aa_toUpper(_9613_p2[0LL]) == 'U')) && (_1d9e584aa_toUpper(_9613_p2[1LL]) == 'N')) && (_1d9e584aa_toUpper(_9613_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d9e58c6e_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d9e58c6e_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
			_9713_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_9713_ok))) {
			return static_cast<jule::I32>(_8218_path.len());;
		};
	};
	return static_cast<jule::I32>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1d9e58c6e_cutPath(jule::Str _11912_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_11912_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaac406:;
		if (it != expr_end) {
			jule::I32 _1209_i = it - expr->begin();
			{
				if (_1d9e58378_isSlash(_11912_path[_1209_i])) {
					__jule_func_result.__jule_result_arg0 = _11912_path.slice(0LL, _1209_i);
					__jule_func_result.__jule_result_arg1 = _11912_path.slice((_1209_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1abaac406:;
			++it;
			_1209_i++;
			goto _iter_begin_1abaac406;
		}
		_iter_end_1abaac406:;
	};
	__jule_func_result.__jule_result_arg0 = _11912_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1d9e59016_fullPath(jule::Str _12813_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1299_utf16Name = _20551b0d5_Utf16FromStr(_12813_name);;
	jule::U16* _1309_p = (&(_1299_utf16Name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_13113_n), static_cast<jule::I32>(_13113_n), 0);;
			_13113_n=static_cast<jule::U32>(_205553bab_GetFullPathName(_1309_p, static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())), (&(_13317_buff[0LL])), nullptr));
			if ((_13113_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				__jule_func_result.__jule_result_arg0 = _20551eaab_Utf16ToStr(_13317_buff.slice(0LL, static_cast<jule::I32>(_13113_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1abaac060:;
	}
	_iter_end_1abaac060:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1d9e5938a_abs(jule::Str _14512_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_14512_path.empty()) {
		_14512_path=jule::Str(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d9e59016_fullPath(_14512_path);
		_14512_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1c219319c_Clean(_14512_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1d9e59632_join(jule::Slice<jule::Str> _15913_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_lastChar = 0LLU;;
	{
		auto expr = &(_15913_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab451d:;
		if (it != expr_end) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1abab5233:;
					}
					else if (_1d9e58378_isSlash(_16113_lastChar)) {
						_case_begin_1abab5453:;
						{
							while (((_16217_e.len() > 0LL) && _1d9e58378_isSlash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1abab5d05:;
							}
							_iter_end_1abab5d05:;;
						}
					}
					else if ((_16113_lastChar == ':')) {
						_case_begin_1abab4e03:;
					}
					else {
						_case_begin_1abab4d8c:;
						{
							(_16013_s).append("\\", 1);
							_16113_lastChar='\\';
						}
					}
					_match_end_1abab4cc1:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_lastChar=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1abab451d:;
			++it;
			goto _iter_begin_1abab451d;
		}
		_iter_end_1abab451d:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();;
	};
	return _1c219319c_Clean(_16013_s);;
}



inline jule::Str _1c219319c_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I32 _1109_volLen = _1d9e589c7_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _1d9e58246_IsPathSep(_1099_originalPath[0LL])) && _1d9e58246_IsPathSep(_1099_originalPath[1LL]))) {
			return _1c2193730_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _1d9e58246_IsPathSep(_10814_path[0LL]);;
	jule::I32 _1269_n = _10814_path.len();;
	_1c21923dd_lazyBuff _12713_out = _1c21923dd_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I32 _13214_r = 0;;
	jule::I32 _13221_dotdot = 0;;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_1c2192ad6_append(&_12713_out, 92LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_1d9e58246_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1ababe35d:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1d9e58246_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1abac1ecb:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1d9e58246_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1abac2042:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1abac4e24:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_1d9e58246_IsPathSep(static_cast<jule::U8>(_1c2192861_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1abac573d:;
									}
									_iter_end_1abac573d:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1abac4e8a:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1c2192ad6_append(&_12713_out, 92LLU);
									};
									_1c2192ad6_append(&_12713_out, '.');
									_1c2192ad6_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1abac4a8e:;
						};
					}
				}
				else {
					_case_begin_1ababc823:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1c2192ad6_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_volLen == 0LL)) && (_13214_r != 0LL))) {
							jule::I32 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_1d9e58246_IsPathSep(_10814_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10814_path[_17525_i] == ':')) {
										_1c2192ad6_append(&_12713_out, '.');
										_1c2192ad6_append(&_12713_out, 92LLU);
										goto _iter_end_1ababe4b2;
									};
								}
							_iter_next_1ababe4b2:;
							}
							_iter_end_1ababe4b2:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_1d9e58246_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_1c2192ad6_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1ababdd1e:;
						}
						_iter_end_1ababdd1e:;;
					}
				}
				_match_end_1ababc5e2:;
			};
		}
	_iter_next_1ababc779:;
	}
	_iter_end_1ababc779:;;
	if ((_12713_out._field_w == 0LL)) {
		_1c2192ad6_append(&_12713_out, '.');
	};
	return _1c2193730_FromSlash(_1c2192d4a_string(&_12713_out));;
}



inline jule::Str _1c2193730_FromSlash(jule::Str _21114_path) {
	;
	return _1c218eece_Replace(_21114_path, jule::Str("/", 1), static_cast<jule::Str>(92LL), -1LL);;
}



inline jule::Str _1c2193a4e_Join(jule::Slice<jule::Str> _2259_elem) {
	return _1d9e59632_join(_2259_elem);;
}



inline jule::Str _1c2193ce6_Ext(jule::Str _2308_path) {
	jule::I32 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_1d9e58246_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1abac93bd:;
	}
	_iter_end_1abac93bd:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1c219408d_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d9e5938a_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _1c2194335_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _1d9e58246_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_1abacb9b9:;
	}
	_iter_end_1abacb9b9:;;
	(_25413_path).mut_slice(_1c2194951_VolumeName(_25413_path).len());;
	jule::I32 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_1d9e58246_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1abacd2d4:;
	}
	_iter_end_1abacd2d4:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(92LL);;
	};
	return _25413_path;;
}



inline jule::Str _1c21946a9_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _1c2194951_VolumeName(_2858_path);;
	jule::I32 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_1d9e58246_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1abad0605:;
	}
	_iter_end_1abad0605:;;
	jule::Str _2919_dir = _1c219319c_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if ((_2919_dir.equal(".", 1) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _1c2194951_VolumeName(jule::Str _30315_path) {
	return _1c2193730_FromSlash(_30315_path.slice(0LL, _1d9e589c7_volumeNameLen(_30315_path)));;
}



inline jule::I32 _2054a6bec_getLastFsError(void) {
	jule::I32 _729_err = _2054c35cb_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1abaea5cb:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1abae9a5e:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1abae9ec1:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1abaea037:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1abaea09d:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1abaea114:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1abaea6ec:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1abaea763:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1abaea7c9:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1abaea840:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1abaea8b7:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1abaea93e:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1abaea9b6:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1abaeaa3d:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1abaeaab5:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1abaeab3c:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1abaeabb4:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1abaeac3b:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1abaeacb3:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1abaead3a:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1abaeadb2:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1abaeae39:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1abaeaeb1:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1abaeb038:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1abaeb0b0:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1abaeb137:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1abaeb1ae:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1abaeb236:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1abae9d28:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1abae9cc3:;
	};
}



inline jule::Bool _2055d9868_isConsoleHandle(jule::Uintptr _11320_handle) {
	return (((_11320_handle == _2055513c3_STDIN) || (_11320_handle == _20555168c_STDOUT)) || (_11320_handle == _205551923_STDERR));;
}



inline void _1c22b14a7_appendEscapeArg(jule::Str* _10125_s, jule::Str _10133_arg) {
	if ((_10133_arg.len() == 0LL)) {
		((*(_10125_s))).append("\"\"", 2);
		return;;
	};
	jule::Bool _10713_needsBackslash = false;;
	jule::Bool _10813_hasSpace = false;;
	jule::I32 _10913_i = 0LL;;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			{
				auto &_match_expr{ _10133_arg[_10913_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1abb42b95:;
					{
						_10713_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1abb42c1c:;
					{
						_10813_hasSpace=true;
					}
				}
				_match_end_1abb42aa7:;
			};
		}
	_iter_next_1abb3da5e:;
	}
	_iter_end_1abb3da5e:;;
	if (((!(_10713_needsBackslash)) && (!(_10813_hasSpace)))) {
		(*(_10125_s))+=_10133_arg;
		return;;
	};
	if ((!(_10713_needsBackslash))) {
		((*(_10125_s))).append("\"", 1);
		(*(_10125_s))+=_10133_arg;
		((*(_10125_s))).append("\"", 1);
		return;;
	};
	if (_10813_hasSpace) {
		((*(_10125_s))).append("\"", 1);
	};
	jule::I32 _13513_slashes = 0LL;;
	_10913_i=0LL;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			jule::U8 _13813_c = _10133_arg[_10913_i];;
			{
				auto &_match_expr{ _13813_c };
				
				if (_match_expr == '\\') {
					_case_begin_1abb462e7:;
					{
						(_13513_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1abb458bd:;
					{
						for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
							{
								((*(_10125_s))).append("\\", 1);
							}
						_iter_next_1abb46a12:;
						}
						_iter_end_1abb46a12:;;
						((*(_10125_s))).append("\\", 1);
					}
				}
				else {
					_case_begin_1abb45c64:;
					{
						_13513_slashes=0LL;
					}
				}
				_match_end_1abb45c0e:;
			};
			((*(_10125_s))).append(_13813_c);
		}
	_iter_next_1abb450e8:;
	}
	_iter_end_1abb450e8:;;
	if (_10813_hasSpace) {
		for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
			{
				((*(_10125_s))).append("\\", 1);
			}
		_iter_next_1abb45bba:;
		}
		_iter_end_1abb45bba:;;
		((*(_10125_s))).append("\"", 1);
	};
}



inline jule::Str _1c22b174e_makeCmdLine(jule::Slice<jule::Str> _16216_args) {
	jule::Str _16313_s = jule::Str();;
	{
		auto expr = &(_16216_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb4830a:;
		if (it != expr_end) {
			jule::Str *_16412_arg = it;
			{
				if ((_16313_s.len() > 0LL)) {
					(_16313_s).append(" ", 1);
				};
				_1c22b14a7_appendEscapeArg(&(_16313_s), (*(_16412_arg)));
			}
			_iter_next_1abb4830a:;
			++it;
			goto _iter_begin_1abb4830a;
		}
		_iter_end_1abb4830a:;
	};
	return _16313_s;;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _1c22b1b06_createEnvBlock(jule::Slice<jule::Str> _17819_env) {
	if ((_17819_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _20552ee62_Encode(static_cast<jule::Slice<jule::I32>>(jule::Str("\x00\x00", 2))));;
	};
	jule::I32 _18213_n = 0LL;;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb49ecc:;
		if (it != expr_end) {
			jule::Str *_18312_s = it;
			{
				if ((_1c2188eea_FindByteStr(_18312_s, 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type133));
				};
				_18213_n+=((*(_18312_s)).len() + 1LL);
			}
			_iter_next_1abb49ecc:;
			++it;
			goto _iter_begin_1abb49ecc;
		}
		_iter_end_1abb49ecc:;
	};
	(_18213_n)++;
	jule::Slice<jule::U16> _19013_b = jule::Slice<jule::U16>::alloc(0LL, _18213_n, 0);;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb4b671:;
		if (it != expr_end) {
			jule::Str *_19112_s = it;
			{
				{
					auto expr = static_cast<jule::Slice<jule::I32>>((*(_19112_s)));
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1abb4c012:;
					if (it != expr_end) {
						jule::I32 _19216_c = *it;
						{
							_19013_b=_205530517_AppendRune(_19013_b, _19216_c);
						}
						_iter_next_1abb4c012:;
						++it;
						goto _iter_begin_1abb4c012;
					}
					_iter_end_1abb4c012:;
				};
				_19013_b=_205530517_AppendRune(_19013_b, 0LL);
			}
			_iter_next_1abb4b671:;
			++it;
			goto _iter_begin_1abb4b671;
		}
		_iter_end_1abb4b671:;
	};
	_19013_b=_205530517_AppendRune(_19013_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _19013_b);;
}



inline jule::I32 _1c22b2ad5_processErrorFromCode(jule::I32 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1abb4bb5a:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1abb4cd37:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1abb4cc49:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1abb4a3b7:;
	};
}



inline jule::I32 _1c22b2ce4_getLastProcessError(void) {
	return _1c22b2ad5_processErrorFromCode(static_cast<jule::I32>(static_cast<jule::I32>(_205552858_GetLastError())));;
}



inline void _1c22b3597_Exit(jule::I32 _129_code) {
	_2055584eb_Exit(_129_code);
}



inline jule::Str _1c22b3795_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1c2213519_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1c2213739_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_203805415_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb80d04:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1abb80d04:;
			++it;
			goto _iter_begin_1abb80d04;
		}
		_iter_end_1abb80d04:;
	};
	return false;;
}



inline jule::Bool _1c22139d1_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1c22117c0_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb81662:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1abb81662:;
			++it;
			goto _iter_begin_1abb81662;
		}
		_iter_end_1abb81662:;
	};
	{
		auto expr = &(_1c221341a_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb82971:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1abb82971:;
			++it;
			goto _iter_begin_1abb82971;
		}
		_iter_end_1abb82971:;
	};
	return false;;
}



inline jule::Str _1c2220d40_Logf(jule::Str _3059_fmt, jule::Slice<jule::Any> _30522_args) {
	return _1c2221758_applyFmt(_3059_fmt, _30522_args);;
}



inline jule::Str _1c222112b_argToStr(jule::Any _30913_arg) {
	{
		auto &_match_expr{ _30913_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1abb83dc3:;
			{
				return _30913_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1abb83e39:;
			{
				return static_cast<jule::Str>(_30913_arg.cast<jule::U8>(&__jule_any_type136));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1abb83bb4:;
			{
				return static_cast<jule::Str>(_30913_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1abb83785:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1abb83598:;
	};
}



inline jule::I32 _1c22213c3_findNextFmt(jule::Str _32216_fmt) {
	{
		auto expr = &(_32216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb845ee:;
		if (it != expr_end) {
			jule::I32 _3239_i = it - expr->begin();
			jule::U8 *_32312_b = it;
			{
				if (((*(_32312_b)) == '@')) {
					return _3239_i;;
				};
			}
			_iter_next_1abb845ee:;
			++it;
			_3239_i++;
			goto _iter_begin_1abb845ee;
		}
		_iter_end_1abb845ee:;
	};
	return -1LL;;
}



inline jule::Str _1c2221758_applyFmt(jule::Str _33117_fmt, jule::Slice<jule::Any> _33127_args) {
	jule::Str _33213_s = jule::Str();;
	{
		auto expr = &(_33127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb86304:;
		if (it != expr_end) {
			jule::Any *_33312_arg = it;
			{
				jule::I32 _33413_i = _1c22213c3_findNextFmt(_33117_fmt);;
				if ((_33413_i == -1LL)) {
					goto _iter_end_1abb86304;
				};
				_33213_s+=_33117_fmt.slice(0LL, _33413_i);
				_33213_s+=_1c222112b_argToStr((*(_33312_arg)));
				(_33117_fmt).mut_slice((_33413_i + 1LL));;
			}
			_iter_next_1abb86304:;
			++it;
			goto _iter_begin_1abb86304;
		}
		_iter_end_1abb86304:;
	};
	_33213_s+=_33117_fmt;
	return _33213_s;;
}



inline jule::Bool _1c22227d1_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _1c2223c11_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1c2223eb9_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1c2224261_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1c2224580_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1c2224827_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1c2224abe_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1c2224d66_IsUnix(jule::Str _5511_os) {
	return (_1c2223eb9_IsDarwin(_5511_os) || _1c2224261_IsLinux(_5511_os));;
}



inline jule::Bool _1c22251da_Is32Bit(jule::Str _5812_arch) {
	return _1c2224580_IsI386(_5812_arch);;
}



inline jule::Bool _1c2225482_Is64Bit(jule::Str _6112_arch) {
	return (_1c2224827_IsAmd64(_6112_arch) || _1c2224abe_IsArm64(_6112_arch));;
}



inline void _1c224bb07_init(void) {
	jule::Str _2513_path = _1c22b3795_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1c224b695_PathWd=({
			auto except = _1d9e8002b_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1c224a8a3_PathExec=_1c21946a9_Dir(_2513_path);
		_1c222ac6d_PathStdlib=_1c2193a4e_Join(jule::Slice<jule::Str>::make({_1c224a8a3_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_1c224b80a_PathApi=_1c2193a4e_Join(jule::Slice<jule::Str>::make({_1c224a8a3_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _2039868b5_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto expr = &(_20397ec76_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbd0271:;
		if (it != expr_end) {
			jule::Str *_31312_op = it;
			{
				if ((_31214_kind == (*(_31312_op)))) {
					return true;;
				};
			}
			_iter_next_1abbd0271:;
			++it;
			goto _iter_begin_1abbd0271;
		}
		_iter_end_1abbd0271:;
	};
	return false;;
}



inline jule::Bool _203986ba1_IsBinOp(jule::Str _32212_kind) {
	{
		auto expr = &(_2039800b7_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbd0716:;
		if (it != expr_end) {
			jule::Str *_32312_op = it;
			{
				if ((_32212_kind == (*(_32312_op)))) {
					return true;;
				};
			}
			_iter_next_1abbd0716:;
			++it;
			goto _iter_begin_1abbd0716;
		}
		_iter_end_1abbd0716:;
	};
	return false;;
}



inline jule::Bool _203987267_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _20398750e_IsRawStr(_34210_k)));;
}



inline jule::Bool _20398750e_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));;
}



inline jule::Bool _2039877a6_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));;
}



inline jule::Bool _203987dc2_IsBool(jule::Str _35511_k) {
	return (_35511_k.equal("true", 4) || _35511_k.equal("false", 5));;
}



inline jule::Bool _203988169_IsFloat(jule::Str _35812_k) {
	if (_1c2170cd4_HasPrefix(_35812_k, jule::Str("0x", 2))) {
		return _1c218e709_ContainsAny(_35812_k, jule::Str(".pP", 3));;
	};
	return _1c218e709_ContainsAny(_35812_k, jule::Str(".eE", 3));;
}



inline jule::Bool _203988411_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));;
}



inline jule::Bool _203988950_IsIgnoreIdent(jule::Str _38118_ident) {
	return _38118_ident.equal("_", 1);;
}



inline jule::Bool _203988be7_IsAnonIdent(jule::Str _38416_ident) {
	return _38416_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _203989236_IsSpace(jule::I32 _39712_r) {
	{
		auto expr = &(_20397e979_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbd916a:;
		if (it != expr_end) {
			jule::I32 *_39812_cr = it;
			{
				if ((_39712_r == (*(_39812_cr)))) {
					return true;;
				};
			}
			_iter_next_1abbd916a:;
			++it;
			goto _iter_begin_1abbd916a;
		}
		_iter_end_1abbd916a:;
	};
	return false;;
}



inline jule::Bool _203989687_IsLetter(jule::I32 _40713_r) {
	return _1c2101858_IsLetter(_40713_r);;
}



inline jule::Bool _203989bc6_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));;
}



inline jule::Bool _203989e6d_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));;
}



inline jule::Bool _20398a215_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));;
}



inline jule::Bool _20398a4ac_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_1abbdde2d:;
			{
				return true;;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_1abbdd757:;
			{
				return true;;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_1abbdd7bd:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1abbdd6e1:;
			{
				return false;;
			}
		}
		_match_end_1abbdd625:;
	};
}



inline jule::Bool _20398a754_IsAssign(jule::U32 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U32>(2LLU)) || (_45113_id == static_cast<jule::U32>(30LLU))) || (_45113_id == static_cast<jule::U32>(33LLU))) || (_45113_id == static_cast<jule::U32>(20LLU))) || (_45113_id == static_cast<jule::U32>(27LLU))) || (_45113_id == static_cast<jule::U32>(3LLU))) || (_45113_id == static_cast<jule::U32>(7LLU)));;
}



inline jule::Bool _20398a9eb_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto expr = &(_2039806b1_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbe2283:;
		if (it != expr_end) {
			jule::Str *_46312_op = it;
			{
				if ((_46216_kind == (*(_46312_op)))) {
					return true;;
				};
			}
			_iter_next_1abbe2283:;
			++it;
			goto _iter_begin_1abbe2283;
		}
		_iter_end_1abbe2283:;
	};
	return false;;
}



inline jule::Bool _20398ac93_IsAssignOp(jule::Str _47215_kind) {
	if (_20398a9eb_IsPostfixOp(_47215_kind)) {
		return true;;
	};
	{
		auto expr = &(_2039809ad_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbe3482:;
		if (it != expr_end) {
			jule::Str *_47612_op = it;
			{
				if ((_47215_kind == (*(_47612_op)))) {
					return true;;
				};
			}
			_iter_next_1abbe3482:;
			++it;
			goto _iter_begin_1abbe3482;
		}
		_iter_end_1abbe3482:;
	};
	return false;;
}



inline jule::Ptr<_20398b546_File> _20398ca75_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_20398b546_File>(_20398b546_File{._field_Path=_6315_path, });;
}



inline _1c2220900_Log _20398e318_makeErr(jule::I32 _11112_row, jule::I32 _11122_col, jule::Ptr<_20398b546_File>* _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _1c2220900_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=(*(_11133_f)).get()._field_Path, ._field_Text=_1c2220d40_Logf(_11143_fmt, _11156_args), };;
}



inline jule::Bool _20398e69d_bytesHasPrefix(jule::Slice<jule::U8>* _12120_bytes, jule::Str _12135_prefix) {
	if (((*(_12120_bytes)).len() < _12135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_12135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbecd0a:;
		if (it != expr_end) {
			jule::I32 _1259_i = it - expr->begin();
			{
				if (((*(_12120_bytes))[_1259_i] != _12135_prefix[_1259_i])) {
					return false;;
				};
			}
			_iter_next_1abbecd0a:;
			++it;
			_1259_i++;
			goto _iter_begin_1abbecd0a;
		}
		_iter_end_1abbecd0a:;
	};
	return true;;
}



inline jule::Str _20398e9de_floatFmtE(jule::Slice<jule::U8>* _13315_txt, jule::I32 _13332_i) {
	jule::Str __jule_func_result;
	(_13332_i)++;
	if ((_13332_i >= (*(_13315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _13913_b = (*(_13315_txt))[_13332_i];;
	if ((_13913_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= (*(_13315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_13315_txt))[_13332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1539_first = _13332_i;;
	for (; (_13332_i < (*(_13315_txt)).len()); (_13332_i)++) {
		{
			_13913_b=(*(_13315_txt))[_13332_i];
			if (((_13913_b != '_') && (!(_203989bc6_IsDecimal(_13913_b))))) {
				goto _iter_end_1abc01737;
			};
		}
	_iter_next_1abc01737:;
	}
	_iter_end_1abc01737:;;
	if ((_13332_i == _1539_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_13315_txt)).slice(0LL, _13332_i));
	return __jule_func_result;;
}



inline jule::Str _20398ed74_floatFmtP(jule::Slice<jule::U8>* _16715_txt, jule::I32 _16728_i) {
	return _20398e9de_floatFmtE(_16715_txt, _16728_i);;
}



inline jule::Str _2039901b5_floatFmtDotnp(jule::Slice<jule::U8>* _17119_txt, jule::I32 _17136_i) {
	if (((*(_17119_txt))[_17136_i] != '.')) {
		return jule::Str();;
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < (*(_17119_txt)).len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = (*(_17119_txt))[_17136_i];;
			{
				
				if ((_17913_b == '_') || _203989bc6_IsDecimal(_17913_b)) {
					_case_begin_1abc04592:;
					{
						goto _iter_next_1abc03937;
					}
				}
				else if (_203991969_isFloatFmtP(_17913_b, _17136_i)) {
					_case_begin_1abc04608:;
					{
						return _20398ed74_floatFmtP(_17119_txt, _17136_i);;
					}
				}
				else {
					_case_begin_1abc0452b:;
					{
						goto _iter_end_1abc03937;
					}
				}
				_match_end_1abc044b5:;
			};
		}
	_iter_next_1abc03937:;
	}
	_iter_end_1abc03937:;;
	return jule::Str();;
}



inline jule::Str _203990506_floatFmtDotfp(jule::Slice<jule::U8>* _19219_txt, jule::I32 _19236_i) {
	_19236_i+=2LL;
	return _20398e9de_floatFmtE(_19219_txt, _19236_i);;
}



inline jule::Str _203990847_floatFmtDotp(jule::Slice<jule::U8>* _19718_txt, jule::I32 _19735_i) {
	(_19735_i)++;
	return _20398e9de_floatFmtE(_19718_txt, _19735_i);;
}



inline jule::Str _203990c98_floatNum(jule::Slice<jule::U8>* _20214_txt, jule::I32 _20231_i) {
	jule::Str __jule_func_result;
	(_20231_i)++;
	if ((_20231_i >= (*(_20214_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)));
		return __jule_func_result;;
	};
	if (((*(_20214_txt))[_20231_i] == '_')) {
		(_20231_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
		return __jule_func_result;;
	};
	for (; (_20231_i < (*(_20214_txt)).len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = (*(_20214_txt))[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				__jule_func_result = _20398e9de_floatFmtE(_20214_txt, _20231_i);
				return __jule_func_result;;
			};
			if (((_21213_b != '_') && (!(_203989bc6_IsDecimal(_21213_b))))) {
				goto _iter_end_1abc06e24;
			};
		}
	_iter_next_1abc06e24:;
	}
	_iter_end_1abc06e24:;;
	if ((_20231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
	return __jule_func_result;;
}



inline jule::Str _203991040_commonNum(jule::Slice<jule::U8>* _22715_txt) {
	jule::Str __jule_func_result;
	jule::I32 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < (*(_22715_txt)).len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = (*(_22715_txt))[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1abc0ad90:;
					{
						__jule_func_result = _203990c98_floatNum(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1abc0ae17:;
					{
						goto _iter_next_1abc0a19c;
					}
				}
				else if (_203991628_isFloatFmtE(_23113_b, _22813_i)) {
					_case_begin_1abc0ae8e:;
					{
						__jule_func_result = _20398e9de_floatFmtE(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_203989bc6_IsDecimal(_23113_b)))) {
					_case_begin_1abc0b016:;
					{
						goto _iter_end_1abc0a19c;
					}
				}
				_match_end_1abc0acb3:;
			};
		}
	_iter_next_1abc0a19c:;
	}
	_iter_end_1abc0a19c:;;
	if ((_22813_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_22715_txt)).slice(0LL, _22813_i));
	return __jule_func_result;;
}



inline jule::Str _2039912d7_binaryNum(jule::Slice<jule::U8>* _25015_txt) {
	jule::Str __jule_func_result;
	if ((!(_20398e69d_bytesHasPrefix(_25015_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_25015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _25913_i = 2LL;;
	for (; (_25913_i < (*(_25015_txt)).len()); (_25913_i)++) {
		{
			if ((((*(_25015_txt))[_25913_i] != '_') && (!(_203989e6d_IsBinary((*(_25015_txt))[_25913_i]))))) {
				goto _iter_end_1abc0c798;
			};
		}
	_iter_next_1abc0c798:;
	}
	_iter_end_1abc0c798:;;
	if ((_25913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_25015_txt)).slice(0LL, _25913_i));
	return __jule_func_result;;
}



inline jule::Bool _203991628_isFloatFmtE(jule::U8 _27216_b, jule::I32 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));;
}



inline jule::Bool _203991969_isFloatFmtP(jule::U8 _27616_b, jule::I32 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));;
}



inline jule::Bool _203991caa_isFloatFmtDotnp(jule::Slice<jule::U8>* _28021_txt, jule::I32 _28038_i) {
	if (((*(_28021_txt))[_28038_i] != '.')) {
		return false;;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < (*(_28021_txt)).len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = (*(_28021_txt))[_28038_i];;
			{
				
				if ((_28713_b == '_') || _203989bc6_IsDecimal(_28713_b)) {
					_case_begin_1abc136c2:;
					{
						goto _iter_next_1abc124d4;
					}
				}
				else if (_203991969_isFloatFmtP(_28713_b, _28038_i)) {
					_case_begin_1abc13738:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1abc1365b:;
					{
						goto _iter_end_1abc124d4;
					}
				}
				_match_end_1abc135e5:;
			};
		}
	_iter_next_1abc124d4:;
	}
	_iter_end_1abc124d4:;;
	return false;;
}



inline jule::Bool _2039920eb_isFloatFmtDotp(jule::Slice<jule::U8>* _30120_txt, jule::I32 _30133_i) {
	{
		
		if (((*(_30120_txt)).len() < 3LL)) {
			_case_begin_1abc153b6:;
			{
				goto _case_begin_1abc14be0;
			}
		}
		else if (((*(_30120_txt))[_30133_i] != '.')) {
			_case_begin_1abc14be0:;
			{
				goto _case_begin_1abc14c56;
			}
		}
		else if ((((*(_30120_txt))[(_30133_i + 1LL)] != 'p') && ((*(_30120_txt))[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1abc14c56:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1abc14b79:;
			{
				return true;;
			}
		}
		_match_end_1abc14aad:;
	};
}



inline jule::Bool _20399243c_isFloatFmtDotfp(jule::Slice<jule::U8>* _31421_txt, jule::I32 _31434_i) {
	{
		
		if (((*(_31421_txt)).len() < 4LL)) {
			_case_begin_1abc176b5:;
			{
				goto _case_begin_1abc17000;
			}
		}
		else if (((*(_31421_txt))[_31434_i] != '.')) {
			_case_begin_1abc17000:;
			{
				goto _case_begin_1abc17066;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 1LL)] != 'f') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1abc17066:;
			{
				goto _case_begin_1abc170cc;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 2LL)] != 'p') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1abc170cc:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1abc16a8d:;
			{
				return true;;
			}
		}
		_match_end_1abc169c2:;
	};
}



inline jule::Str _20399288d_octalNum(jule::Slice<jule::U8>* _32914_txt) {
	jule::Str __jule_func_result;
	if (((*(_32914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_32914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if (((*(_32914_txt))[1LL] == 'o')) {
		if (((*(_32914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I32 _34813_i = _33713_octalStart;;
	for (; (_34813_i < (*(_32914_txt)).len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = (*(_32914_txt))[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _203990c98_floatNum(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (_203991628_isFloatFmtE(_35013_b, _34813_i)) {
				__jule_func_result = _20398e9de_floatFmtE(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (((_35013_b != '_') && (!(_20398a215_IsOctal(_35013_b))))) {
				goto _iter_end_1abc1b70d;
			};
		}
	_iter_next_1abc1b70d:;
	}
	_iter_end_1abc1b70d:;;
	if ((_34813_i == _33713_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_32914_txt)).slice(0LL, _34813_i));
	return __jule_func_result;;
}



inline jule::Str _203992b35_hexNum(jule::Slice<jule::U8>* _37112_txt) {
	jule::Str __jule_func_result;
	if (((*(_37112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_37112_txt))[0LL] != '0') || (((*(_37112_txt))[1LL] != 'x') && ((*(_37112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < (*(_37112_txt)).len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = (*(_37112_txt))[_38013_i];;
			{
				
				if (_2039920eb_isFloatFmtDotp(_37112_txt, _38013_i)) {
					_case_begin_1abc22725:;
					{
						__jule_func_result = _203990847_floatFmtDotp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_20399243c_isFloatFmtDotfp(_37112_txt, _38013_i)) {
					_case_begin_1abc2279c:;
					{
						__jule_func_result = _203990506_floatFmtDotfp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_203991969_isFloatFmtP(_38313_b, _38013_i)) {
					_case_begin_1abc22824:;
					{
						__jule_func_result = _20398ed74_floatFmtP(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_203991caa_isFloatFmtDotnp(_37112_txt, _38013_i)) {
					_case_begin_1abc2289b:;
					{
						__jule_func_result = _2039901b5_floatFmtDotnp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (((_38313_b != '_') && (!(_20398a4ac_IsHex(_38313_b))))) {
					_case_begin_1abc22923:;
					{
						goto _iter_end_1abc21966;
					}
				}
				_match_end_1abc22637:;
			};
		}
	_iter_next_1abc21966:;
	}
	_iter_end_1abc21966:;;
	if ((_38013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_37112_txt)).slice(0LL, _38013_i));
	return __jule_func_result;;
}



inline jule::Str _203992e76_hexEscape(jule::Slice<jule::U8>* _40415_txt, jule::I32 _40428_n) {
	jule::Str __jule_func_result;
	if (((*(_40415_txt)).len() < _40428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_20398a4ac_IsHex((*(_40415_txt))[_41013_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1abc250eb:;
	}
	_iter_end_1abc250eb:;;
	__jule_func_result=static_cast<jule::Str>((*(_40415_txt)).slice(0LL, _40428_n));
	return __jule_func_result;;
}



inline jule::Str _20399321d_bigUnicodePointEscape(jule::Slice<jule::U8>* _42227_txt) {
	return _203992e76_hexEscape(_42227_txt, 10LL);;
}



inline jule::Str _2039934d7_littleUnicodePointEscape(jule::Slice<jule::U8>* _42730_txt) {
	return _203992e76_hexEscape(_42730_txt, 6LL);;
}



inline jule::Str _203993691_hexByteEscape(jule::Slice<jule::U8>* _43219_txt) {
	return _203992e76_hexEscape(_43219_txt, 4LL);;
}



inline jule::Str _203993927_byteEscape(jule::Slice<jule::U8>* _43716_txt) {
	jule::Str __jule_func_result;
	if (((*(_43716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_20398a215_IsOctal((*(_43716_txt))[1LL]))) || (!(_20398a215_IsOctal((*(_43716_txt))[2LL])))) || (!(_20398a215_IsOctal((*(_43716_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_43716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1c2220900_Log> _203998421_Lex(jule::Ptr<_20398b546_File> _82612_f, jule::I32 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;;
	};
	_20399410e_lex _83113_lex = _20399410e_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_203996ba0_newLine(&_83113_lex);
	_203994b9d_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;;
}



inline jule::I32 _1c312e4ab_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I32>((64LL - _1c3136936_Len64(_6119_x)));;
}



inline jule::I32 _1c31303e1_TrailingZeros(jule::U32 _8318_x) {
	;
	return static_cast<jule::I32>(_1c313107e_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I32 _1c3130cd7_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_1c312eab6__DE_BRUIJN32_TAB[static_cast<jule::I32>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I32 _1c313107e_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_1c313017c__DE_BRUIJN64_TAB[static_cast<jule::I32>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I32 _1c313668e_Len32(jule::U32 _35214_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I32 _1c3136936_Len64(jule::U64 _36614_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1c31375e6_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1c3138c79_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1c305b350_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1c305b63b_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1c305b8d3_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1c305bc02_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1c305e1dd_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1abd5a9d4:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1c313cdc1_IsInf(_4714_f, 0LL) || _1c313cb5c_IsNaN(_4714_f)) {
			_case_begin_1abd5aa5b:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1abd5a8c4:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c313d003_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _1c305b8d3_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1c305bc02_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1c313ca2a_NaN(void) {
	return static_cast<jule::F64>(_1c305bc02_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1c313cb5c_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1c313cc8e_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1c305bc02_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1c305bc02_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1c313cdc1_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1c313d003_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1c313e4dd_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1c313ddc2_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1c313cb5c_IsNaN(_1118_x) || _1c313cdc1_IsInf(_1118_x, 1LL)) {
			_case_begin_1abd9bb35:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1abd9bbac:;
			{
				return static_cast<jule::F64>(_1c313ca2a_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1abd9bc34:;
			{
				return static_cast<jule::F64>(_1c313cc8e_Inf(-1LL));;
			}
		}
		_match_end_1abd9ba69:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I32 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c305e1dd_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1c313e4dd_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1c305bc02_F64FromBits(static_cast<jule::U64>((_1c305b8d3_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1c3148162_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1c313e4dd_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1abe1c007:;
		}
		_iter_end_1abe1c007:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1c31485a2_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I32 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c305e1dd_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1c313ddc2_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _1c2ac9b05_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I32 _7832_prec, jule::I32 _7843_bit_size) {
	return static_cast<jule::Str>(_1c2ac226d_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1c2e8b307_max(static_cast<jule::I32>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1c2ac226d_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I32 _8258_prec, jule::I32 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1c2c4dcbd_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1ac1282bd:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1c305b350_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1c2c4dcbd_floatInfo>)((&(_1c2aa6d79_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ac128499:;
			{
				_8313_bits=static_cast<jule::U64>(_1c305b8d3_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1c2c4dcbd_floatInfo>)((&(_1c2aa72db_f64info))));
			}
		}
		else {
			_case_begin_1ac127ba2:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1ac126673:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I32 _9713_exp = (static_cast<jule::I32>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I32>(static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1ac12ba85:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1ac12dea5:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1ac12e14d:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1ac12d04d:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1ac12ce82:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ac12c5e1:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1ac128510:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1ac12ba30:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1c2d02921_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1c2d83b06_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_1c2ec0e96_decimalSlice _13213_digs = _1c2ec0e96_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1c3171399_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ac132b35:;
				{
					_8258_prec=static_cast<jule::I32>(_1c2e8b307_max(static_cast<jule::I32>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ac132bac:;
				{
					_8258_prec=static_cast<jule::I32>(_1c2e8b307_max(static_cast<jule::I32>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ac132c45:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1ac131edb:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I32 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ac135275:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ac134829:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1ac134b48:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1ac134c7a:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1c3170dd2_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1c3171014_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1c2aeda80_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _1c2b6271a_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1c2aeda80_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I32 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I32 _18316_exp, _1c2c4dcbd_floatInfo* _18327_flt) {
	_1c31728ea_decimal _18413_d = _1c31728ea_decimal{};;
	_1c3172ad7_assign(&_18413_d, _1835_mant);
	_1c3172c19_shift(&_18413_d, static_cast<jule::I32>((_18316_exp - static_cast<jule::I32>((*(_18327_flt))._field_mantbits))));
	_1c2ec0e96_decimalSlice _18713_digs = _1c2ec0e96_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1c2c2b64c_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_1c2ec0e96_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ac139d29:;
				{
					_18233_prec=static_cast<jule::I32>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ac13c458:;
				{
					_18233_prec=static_cast<jule::I32>(_1c2e8b307_max(static_cast<jule::I32>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ac13c513:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1ac13c249:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ac13dd50:;
				{
					_1c31730b0_round(&_18413_d, static_cast<jule::I32>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ac13ddc7:;
				{
					_1c31730b0_round(&_18413_d, static_cast<jule::I32>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ac13de4e:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1c31730b0_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1ac13dc40:;
		};
		_18713_digs=_1c2ec0e96_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1c2b6271a_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1c2b6271a_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1c2ec0e96_decimalSlice _2205_digs, jule::I32 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1ac142518:;
			{
				return _1c2c4ece1_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ac14257e:;
			{
				return _1c2cd0569_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1ac1425e5:;
			{
				jule::I32 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I32 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1c2c4ece1_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1c2cd0569_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>(_1c2e8b307_max(static_cast<jule::I32>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1ac1423c5:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1c2c2b64c_roundShortest(_1c31728ea_decimal* _25723_d, jule::U64 _25735_mant, jule::I32 _25746_exp, _1c2c4dcbd_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1c31728ea_decimal _28713_upper = _1c31728ea_decimal{};;
	_1c3172ad7_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1c3172c19_shift(&_28713_upper, static_cast<jule::I32>(((_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I32 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I32>((_25746_exp - 1LL));
	};
	_1c31728ea_decimal _30613_lower = _1c31728ea_decimal{};;
	_1c3172ad7_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1c3172c19_shift(&_30613_lower, static_cast<jule::I32>(((_29813_explo - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I32 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I32 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1ac15004d;
			};
			jule::I32 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1ac1550ec:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1ac155174:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1ac1551eb:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1ac155031:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1ac1583ca:;
					{
						_1c31730b0_round(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1ac158452:;
					{
						_1c3172d4b_roundDown(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1ac1584c9:;
					{
						_1c3172e7d_roundUp(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1ac15830e:;
			};
		}
	_iter_next_1ac15004d:;
	}
	_iter_end_1ac15004d:;;
}



inline jule::Slice<jule::U8> _1c2c4ece1_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1c2ec0e96_decimalSlice _39637_d, jule::I32 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I32 _41217_i = 1LL;;
		jule::I32 _41313_m = _1c2e4d022_min(_39637_d._field_nd, static_cast<jule::I32>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i, _41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1ac15d655:;
		}
		_iter_end_1ac15d655:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I32 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I32>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1ac1605be:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1ac1604ae:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1ac160217:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1ac1601b2:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1c2cd0569_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1c2ec0e96_decimalSlice _45137_d, jule::I32 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I32 _45917_m = _1c2e4d022_min(_45137_d._field_nd, _45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL, _45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1ac164da9:;
		}
		_iter_end_1ac164da9:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I32 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1ac165b68:;
		}
		_iter_end_1ac165b68:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1c2d02921_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I32 _48452_exp, _1c2c4dcbd_floatInfo* _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1c3174be9_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I32>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1c3174be9_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1c2d83b06_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I32 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I32 _50724_exp, _1c2c4dcbd_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1ac16dd80:;
	}
	_iter_end_1ac16dd80:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U32 _52113_shift = static_cast<jule::U32>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1ac176ddd:;
		}
		_iter_end_1ac176ddd:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I32 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1ac178164:;
		}
		_iter_end_1ac178164:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1c2e8b637_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I32>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1ac17b277:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1ac17b2dd:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1ac17ab06:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1ac17aaa1:;
	};
	return _50613_dst;;
}



inline jule::I32 _1c2e4d022_min(jule::I32 _5918_a, jule::I32 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I32 _1c2e8b307_max(jule::I32 _5988_a, jule::I32 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1c2e8b637_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1c2635573_ConvError _1c2ede37c_parseUint(jule::Str _5118_s, jule::I32 _5130_base, jule::I32 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__1c2635573_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1ac1828dd:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1ac1827bc:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1c2e8b637_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1ac1846e2:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1c2e8b637_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1ac184505:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1c2e8b637_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1ac18456b:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1ac18415e:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1ac184093:;
					};
				};
			}
		}
		else {
			_case_begin_1ac181ac9:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1ac181a63:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1ac1893c8:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ac1889e3:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1ac188cbd:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1ac188b47:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1ac188dab:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ac18a51c:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1ac1890ed:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = &(_5118_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac18b62d:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1ac18a781:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1c2e8b637_lower(_10912_c)) && (_1c2e8b637_lower(_10912_c) <= 'z'))) {
						_case_begin_1ac18c970:;
						{
							_11017_d=static_cast<jule::U8>(((_1c2e8b637_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1ac18c596:;
						{
							goto _iter_next_1ac18b62d;
						}
					}
					else {
						_case_begin_1ac18c530:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1ac18c4b9:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1ac18b62d:;
			++it;
			goto _iter_begin_1ac18b62d;
		}
		_iter_end_1ac18b62d:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1c2c52ab3_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I32 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1c2635573_ConvError __jule_assign_result = _1c2ede37c_parseUint(_14618_s, _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type137));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1c2aa8793_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type137));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I32 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1c2635573_ConvError __jule_assign_result = _1c2ede37c_parseUint(_17217_s, _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I32>(0LL)) && (_18718_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type137));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U32>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type137));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type137));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1c2b16dc8_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1c305bc02_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _579_clz = _1c312e4ab_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U32>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c3138c79_Mul64(_4122_man, _1c2c50e35_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c3138c79_Mul64(_4122_man, _1c2c50e35_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c305bc02_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1c2d3ec6b_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1c305b63b_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1329_clz = _1c312e4ab_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U32>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c3138c79_Mul64(_11022_man, _1c2c50e35_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c3138c79_Mul64(_11022_man, _1c2c50e35_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1c305b63b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _1c2d3dd58_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I32 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I32>(_4530_s.len());
	};
	jule::I32 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_1ac1b426b:;
	}
	_iter_end_1ac1b426b:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1c2d3de8a_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _7213_sign = 1LL;;
	jule::I32 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1ac1b8627:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1ac1b869e;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1ac1b869e:;
			{
				jule::I32 _8317_caseN = _1c2d3dd58_commonPrefixLenIgnoreCase(_6816_s, jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c313cc8e_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1ac1b8726:;
			{
				if ((_1c2d3dd58_commonPrefixLenIgnoreCase(_6816_s, jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c313ca2a_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ac1b855b:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1c2a95b6a_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1ac1be298:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1ac1be320:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1ac1be155:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I32 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_1c2e8b637_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I32 _12913_nd = 0LL;;
	jule::I32 _13013_ndMant = 0LL;;
	jule::I32 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1ac1c548b:;
					{
						goto _iter_next_1ac1c48db;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1ac1c5513:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1ac1c48db;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1ac1c558a:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1ac1c48db;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ac1c48db;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1c2e8b637_lower(_13313_c))) && (_1c2e8b637_lower(_13313_c) <= 'f'))) {
					_case_begin_1ac1c5612:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1c2e8b637_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ac1c48db;
					}
				}
				_match_end_1ac1c53ae:;
			};
			goto _iter_end_1ac1c48db;
		}
	_iter_next_1ac1c48db:;
	}
	_iter_end_1ac1c48db:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_1c2e8b637_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1ac1ce9e5;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I32>((((_20617_e * 10LL) + static_cast<jule::I32>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1ac1ce9e5:;
		}
		_iter_end_1ac1ce9e5:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I32>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1c3170167_atof64exact(jule::U64 _48116_mantissa, jule::I32 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _1c2aa72db_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1ac1d9945:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1ac1d99bc:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1c2da49a1_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1c2da49a1_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1ac1d9a44:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1c2da49a1_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac1d9879:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1c3170299_atof32exact(jule::U64 _51516_mantissa, jule::I32 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _1c2aa6d79_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1ac1de61a:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1ac1de692:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1c2dc287b_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1c2dc287b_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1ac1de719:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1c2dc287b_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac1de54e:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1c2635573_ConvError _1c31703cb_atofHex(jule::Str _55112_s, _1c2c4dcbd_floatInfo* _55121_flt, jule::U64 _55141_mantissa, jule::I32 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__1c2635573_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5529_maxExp = ((static_cast<jule::I32>((1LL << (*(_55121_flt))._field_expbits)) + (*(_55121_flt))._field_bias) - 2LL);;
	jule::I32 _5539_minExp = ((*(_55121_flt))._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I32>((*(_55121_flt))._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> ((*(_55121_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1ac1e44dd:;
	}
	_iter_end_1ac1e44dd:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + (*(_55121_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1ac1e6358:;
	}
	_iter_end_1ac1e6358:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1ac1e6d1a:;
	}
	_iter_end_1ac1e6d1a:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + (*(_55121_flt))._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> (*(_55121_flt))._field_mantbits) == 0LLU)) {
		_55160_exp=(*(_55121_flt))._field_bias;
	};
	jule::I32 _59813_err = static_cast<jule::I32>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55121_flt))._field_mantbits)));
		_55160_exp=static_cast<jule::I32>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << (*(_55121_flt))._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - (*(_55121_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_55121_flt))._field_expbits) - 1LL)))) << (*(_55121_flt))._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << (*(_55121_flt))._field_mantbits) << (*(_55121_flt))._field_expbits);
	};
	if (((*(_55121_flt)) == _1c2aa6d79_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1c305b63b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c305bc02_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1c2635573_ConvError _1c317061d_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1c2635573_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I32 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c2d3de8a_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I32 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I32 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c2a95b6a_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1c2635573_ConvError __jule_assign_result = _1c31703cb_atofHex(_61611_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1c2aa6d79_f32info), _62410_mantissa, _62420_exp, _62425_neg, _62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1c3170299_atof32exact(_62410_mantissa, _62420_exp, _62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1c2d3ec6b_eiselLemire32(_62410_mantissa, _62420_exp, _62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1c2d3ec6b_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)), _62420_exp, _62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1c31728ea_decimal _66213_d = _1c31728ea_decimal{};;
	if ((!(_1c2a95dbd_set(&_66213_d, _61611_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1c316ebb1_floatBits(&_66213_d, &(_1c2aa6d79_f32info));
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1c305b63b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1c2635573_ConvError _1c3170750_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1c2635573_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I32 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c2d3de8a_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I32 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I32 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c2a95b6a_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__1c2635573_ConvError __jule_assign_result = _1c31703cb_atofHex(_67411_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1c2aa72db_f64info), _68210_mantissa, _68220_exp, _68225_neg, _68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1c3170167_atof64exact(_68210_mantissa, _68220_exp, _68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1c2b16dc8_eiselLemire64(_68210_mantissa, _68220_exp, _68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1c2b16dc8_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)), _68220_exp, _68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1c31728ea_decimal _71913_d = _1c31728ea_decimal{};;
	if ((!(_1c2a95dbd_set(&_71913_d, _67411_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1c316ebb1_floatBits(&_71913_d, &(_1c2aa72db_f64info));
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1c305bc02_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1c2635573_ConvError _1c3170882_parseFloatPrefix(jule::Str _73121_s, jule::I32 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1c2635573_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I32 _73317_n = 0;;
		jule::I32 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1c2635573_ConvError __jule_assign_result = _1c317061d_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I32 _73713_n = 0;;
	jule::I32 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1c2635573_ConvError __jule_assign_result = _1c3170750_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1c31709b4_ParseFloat(jule::Str _76515_s, jule::I32 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I32 _76613_n = 0;;
	jule::I32 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1c2635573_ConvError __jule_assign_result = _1c3170882_parseFloatPrefix(_76515_s, _76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I32>(0LL)) || (_76616_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type137));
	};
	if ((_76616_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type137));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _1c3170dd2_ryuFtoaFixed32(_1c2ec0e96_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _6213_e2 = _4956_exp;;
	jule::I32 _639_b = _1c313668e_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U32>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I32>(_639_b) - 25LL);
	};
	jule::I32 _749_q = (((-(_1c31714cb_mulByLog2Log10(static_cast<jule::I32>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I32 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c3171be6_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1c3171e5a_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I32>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U32 _949_extra = static_cast<jule::U32>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1c3171267_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _1c3171014_ryuFtoaFixed64(_1c2ec0e96_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _13113_e2 = _12156_exp;;
	jule::I32 _1329_b = _1c3136936_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U32>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I32>(_1329_b) - 55LL);
	};
	jule::I32 _1469_q = (((-(_1c31714cb_mulByLog2Log10(static_cast<jule::I32>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I32 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c3171d28_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1c3171e5a_divisibleByPow5(_12145_mant, static_cast<jule::I32>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U32 _1669_extra = static_cast<jule::U32>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1c3171267_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _1c3171267_formatDecimal(_1c2ec0e96_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2019_max = _1c2e504b9_u64pow10[_20088_prec];;
	jule::I32 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1ac22cbb9:;
	}
	_iter_end_1ac22cbb9:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U32 _22913_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I32>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1ac23166d:;
	}
	_iter_end_1ac23166d:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1ac237454:;
	}
	_iter_end_1ac237454:;;
	(*(_20023_d))._field_dp=static_cast<jule::I32>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _1c3171399_ryuFtoaShortest(_1c2ec0e96_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1c2c4dcbd_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1c313107e_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U32>((-(_26157_exp)));
		_1c3171982_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I32 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1c3171740_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1c3171982_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I32 _2799_q = (_1c31714cb_mulByLog2Log10(static_cast<jule::I32>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _1c2aa6d79_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c3171be6_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c3171be6_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c3171be6_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c3171d28_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c3171d28_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c3171d28_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1c3171e5a_divisibleByPow5(_27310_ml, static_cast<jule::I32>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1c3171e5a_divisibleByPow5(_27314_mc, static_cast<jule::I32>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1c3171e5a_divisibleByPow5(_27318_mu, static_cast<jule::I32>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U32 _3259_extra = static_cast<jule::U32>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1c3171982_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I32 _1c31714cb_mulByLog2Log10(jule::I32 _37719_x) {
	return static_cast<jule::I32>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I32 _1c317160d_mulByLog10Log2(jule::I32 _38719_x) {
	return static_cast<jule::I32>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1c3171740_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1c2c4dcbd_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1c3171982_ryuDigits(_1c2ec0e96_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1c317208c_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1c317208c_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1c317208c_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1c3171ab4_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1c3171ab4_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _42817_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1ac2572a9:;
		}
		_iter_end_1ac2572a9:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I32>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>((9LL - _42817_n)));
		_1c3171ab4_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I32>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1ac25784d:;
	}
	_iter_end_1ac25784d:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1ac256e9b:;
	}
	_iter_end_1ac256e9b:;;
}



inline void _1c3171ab4_ryuDigits32(_1c2ec0e96_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I32>((_45554_endindex + 1LL));
		return;;
	};
	jule::I32 _46013_trimmed = 0LL;;
	jule::I32 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1ac25cd70;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I32>(static_cast<jule::I32>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1ac25cd70:;
	}
	_iter_end_1ac25cd70:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I32 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1ac264838:;
	}
	_iter_end_1ac264838:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I32>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I32>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1c3171be6_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1c2c50e35_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c3138c79_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1c317160d_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1c3171d28_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1c2c50e35_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1c317160d_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c3138c79_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c3138c79_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c31375e6_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1c3171e5a_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1ac2738e1:;
	}
	_iter_end_1ac2738e1:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1c317208c_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1c3173456_trim(_1c31728ea_decimal* _45314_a) {
	while ((((*(_45314_a))._field_nd > 0LL) && ((*(_45314_a))._field_d[((*(_45314_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_45314_a))._field_nd)--;
		}
	_iter_next_1ac276eaa:;
	}
	_iter_end_1ac276eaa:;;
	if (((*(_45314_a))._field_nd == 0LL)) {
		(*(_45314_a))._field_dp=0LL;
	};
}



inline void _1c3173588_rightShift(_1c31728ea_decimal* _46320_a, jule::U32 _46332_k) {
	jule::I32 _46413_r = 0LL;;
	jule::I32 _46513_w = 0LL;;
	jule::U32 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= (*(_46320_a))._field_nd)) {
				if ((_46813_n == 0LLU)) {
					(*(_46320_a))._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U32>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1ac27a772:;
				}
				_iter_end_1ac27a772:;;
				goto _iter_end_1ac2793b9;
			};
			jule::U32 _48213_c = static_cast<jule::U32>((*(_46320_a))._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U32>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1ac2793b9:;
	}
	_iter_end_1ac2793b9:;;
	(*(_46320_a))._field_dp-=(_46413_r - 1LL);
	jule::U32 _4879_mask = static_cast<jule::U32>((static_cast<jule::U32>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < (*(_46320_a))._field_nd); (_46413_r)++) {
		{
			jule::U32 _49113_c = static_cast<jule::U32>((*(_46320_a))._field_d[_46413_r]);;
			jule::U32 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U32>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1ac27d027:;
	}
	_iter_end_1ac27d027:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U32 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				(*(_46320_a))._field_trunc=true;
			};
			_46813_n=static_cast<jule::U32>((_46813_n * 10LLU));
		}
	_iter_next_1ac27d456:;
	}
	_iter_end_1ac27d456:;;
	(*(_46320_a))._field_nd=_46513_w;
	_1c3173456_trim(_46320_a);
}



inline jule::Bool _1c31736ba_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I32 _51735_end, jule::Str _51745_s) {
	jule::I32 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_1ac282823:;
	}
	_iter_end_1ac282823:;;
	return false;;
}



inline void _1c31737ec_leftShift(_1c31728ea_decimal* _53119_a, jule::U32 _53131_k) {
	jule::I32 _53213_delta = _1c303e8e9_leftCheats[static_cast<jule::I32>(_53131_k)]._field_delta;;
	if (_1c31736ba_prefixIsLessThan((*(_53119_a))._field_d, (*(_53119_a))._field_nd, _1c303e8e9_leftCheats[static_cast<jule::I32>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I32 _53713_r = (*(_53119_a))._field_nd;;
	jule::I32 _53813_w = ((*(_53119_a))._field_nd + _53213_delta);;
	jule::U32 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U32>((*(_53119_a))._field_d[_53713_r]) - '0') << _53131_k);
			jule::U32 _54513_quo = (_54113_n / 10LLU);;
			jule::U32 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1ac285d65:;
	}
	_iter_end_1ac285d65:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U32 _55813_quo = (_54113_n / 10LLU);;
			jule::U32 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1ac2888c3:;
	}
	_iter_end_1ac2888c3:;;
	(*(_53119_a))._field_nd+=_53213_delta;
	if (((*(_53119_a))._field_nd >= 800LL)) {
		(*(_53119_a))._field_nd=800LL;
	};
	(*(_53119_a))._field_dp+=_53213_delta;
	_1c3173456_trim(_53119_a);
}



inline jule::Bool _1c317392e_shouldRoundUp(_1c31728ea_decimal* _57819_a, jule::I32 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= (*(_57819_a))._field_nd))) {
		return false;;
	};
	if ((((*(_57819_a))._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == (*(_57819_a))._field_nd))) {
		if ((*(_57819_a))._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && ((((*(_57819_a))._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_57819_a))._field_d[_57831_nd] >= '5');;
}



inline jule::Str _1c31745de_FmtUint(jule::U64 _6012_i, jule::I32 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1c3174985_small(static_cast<jule::I32>(static_cast<jule::I32>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1c3174be9_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1c3174721_FmtInt(jule::I64 _7111_i, jule::I32 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1c3174985_small(static_cast<jule::I32>(static_cast<jule::I32>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1c3174be9_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1c3174853_Itoa(jule::I32 _809_i) {
	return _1c3174721_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1c3174985_small(jule::I32 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1c3174ab7_isPowerOfTwo(jule::I32 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1c3174be9_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I32 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I32 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U32 _14917_us = static_cast<jule::U32>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U32 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 0LLU))]);
			}
		_iter_next_1ac2cb42c:;
		}
		_iter_end_1ac2cb42c:;;
		jule::U32 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(_15913_is)]);
		};
	} else if (_1c3174ab7_isPowerOfTwo(_10141_base)) {
		jule::U32 _17413_shift = (static_cast<jule::U32>(_1c31303e1_TrailingZeros(static_cast<jule::U32>(static_cast<jule::U32>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U32 _17613_m = (static_cast<jule::U32>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>((static_cast<jule::U32>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1ac2d4c0a:;
		}
		_iter_end_1ac2d4c0a:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1ac2d7823:;
		}
		_iter_end_1ac2d7823:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1c26c8270_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ac302b4b:;
			{
				return _1c264154b_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ac302bb2:;
			{
				return _1c268ca81_SysUint;;
			}
		}
		else {
			_case_begin_1ac303047:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1ac3034ed:;
	};
}



inline jule::I32 _1c26d71e6_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1ac304510:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1ac304576:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac30409d:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac304114:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1ac30417a:;
			{
				return _1c263ebcb_BitSize;;
			}
		}
		else {
			_case_begin_1ac303ac5:;
			{
				return -1LL;;
			}
		}
		_match_end_1ac304004:;
	};
}



inline jule::Str _1c26ed7d4_IntFromBits(jule::I32 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ac30649b:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ac306512:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ac3062ae:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ac306325:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1ac304752:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ac305ee5:;
	};
}



inline jule::Str _1c26de352_UintFromBits(jule::I32 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ac307920:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ac307986:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ac307722:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ac307788:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1ac30728d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ac30715b:;
	};
}



inline jule::Str _1c272eda9_FloatFromBits(jule::I32 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1ac308d94:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ac308e0a:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1ac308712:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ac3085d0:;
	};
}



inline jule::Bool _1c292c7d2_CheckBitFloat(jule::Str _15018_val, jule::I32 _15028_bit) {
	({
		auto except = _1c31709b4_ParseFloat(_15018_val, _15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _1c29370e4_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1ac30dddd:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ac30d041:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ac30ce97:;
	};
}



inline jule::I32 _1c29a2181_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1ac30ecbd:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1ac30ed34:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1ac30ed9a:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ac30e4e8:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ac30e42c:;
	};
}



inline jule::I32 _1c2a38cc8_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1ac311bd2:;
			{
				return 8LLU;;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1ac311c48:;
			{
				return 16LLU;;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1ac311cae:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ac311121:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ac310c36:;
	};
}



inline void _1c2a42232_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1c226b033_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1ac312d48:;
				{
					_1c263ebcb_BitSize=64LLU;
					_1c264154b_SysInt=jule::Str("i64", 3);
					_1c268ca81_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1ac312dc0:;
				{
					_1c263ebcb_BitSize=32LLU;
					_1c264154b_SysInt=jule::Str("i32", 3);
					_1c268ca81_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1ac312c8d:;
		};
	};
}



inline void _1c2a4c836_init(void) {
	_1c2a42232_UpdateTarget();
}



inline jule::I64 _1c3174d2b_MinI(jule::Str _6113_k) {
	_6113_k=_1c26c8270_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ac3156db:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ac315752:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ac315202:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ac315268:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1ac313101:;
			{
				return 0LL;;
			}
		}
		_match_end_1ac3132bb:;
	};
}



inline jule::I64 _1c3174e5d_MaxI(jule::Str _7913_k) {
	_7913_k=_1c26c8270_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ac316c4d:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ac316cb4:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ac316775:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ac3167db:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1ac3164ab:;
			{
				return 0LL;;
			}
		}
		_match_end_1ac3161c0:;
	};
}



inline jule::U64 _1c3175090_MaxU(jule::Str _9713_k) {
	_9713_k=_1c26c8270_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ac3182b0:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ac318326:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ac317cd7:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ac317d4d:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1ac317a1d:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ac317732:;
	};
}



inline jule::F64 _1c2a39207_Min(jule::Str _11512_k) {
	_11512_k=_1c26c8270_RealKindOf(_11512_k);
	jule::I64 _1179_i = _1c3174d2b_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac31a306:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac31a36c:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1ac319cea:;
			{
				return 0LL;;
			}
		}
		_match_end_1ac319c95:;
	};
}



inline jule::F64 _1c31751c2_Max(jule::Str _13312_k) {
	_13312_k=_1c26c8270_RealKindOf(_13312_k);
	jule::I64 _1359_i = _1c3174e5d_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _1c3175090_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac31c65a:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac31c6c1:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1ac31c0e9:;
			{
				return 0LL;;
			}
		}
		_match_end_1ac31c23c:;
	};
}



inline jule::Bool _1c31754d0_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1c3175612_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1c3175744_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1c3175876_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1c31759a8_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1c3175ada_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1c3175c1c_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1c3175e5e_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1c3176091_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1c31761c3_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1c3176305_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ac32363e:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ac323e25:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ac323e8b:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ac323919:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ac323980:;
			{
				return _1c31754d0_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ac3239e6:;
			{
				return _1c3175612_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ac323a5c:;
			{
				return _1c3175744_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ac324035:;
			{
				return _1c3175876_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ac32409b:;
			{
				return _1c31759a8_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ac324112:;
			{
				return _1c3175ada_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ac324178:;
			{
				return _1c3175c1c_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ac3241de:;
			{
				return _1c3175e5e_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac324255:;
			{
				return _1c3176091_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac3242cc:;
			{
				return _1c31761c3_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1ac324354:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1ac3243cb:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1ac323809:;
			{
				return false;;
			}
		}
		_match_end_1ac3236c7:;
	};
}



inline jule::Bool _1c3176437_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1c3176569_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1c317669b_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1c31767cd_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1c3176b41_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1c3176c73_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1c3176da5_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1c3176ed7_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1c3177119_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ac324992:;
			{
				return _1c3177559_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ac32bee9:;
			{
				return _1c317768b_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ac32c060:;
			{
				return _1c317768b_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ac32c0c6:;
			{
				return _1c3176437_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ac32bc1e:;
			{
				return _1c3176569_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ac32bc85:;
			{
				return _1c317669b_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ac32bceb:;
			{
				return _1c31767cd_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ac32bd62:;
			{
				return _1c3176b41_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ac32c307:;
			{
				return _1c3176c73_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac32c36d:;
			{
				return _1c3176da5_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac32c3d4:;
			{
				return _1c3176ed7_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ac32c45b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac32baa9:;
			{
				return false;;
			}
		}
		_match_end_1ac32ba10:;
	};
}



inline jule::Bool _1c3177559_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1c317768b_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1c31777bd_IsInt(jule::Str _4610_k) {
	return (_1c3177559_IsSigInt(_4610_k) || _1c317768b_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1c3177900_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1c3177a32_IsNum(jule::Str _5610_k) {
	return (_1c31777bd_IsInt(_5610_k) || _1c3177900_IsFloat(_5610_k));;
}



inline jule::Bool _1c3177b64_IsSigNum(jule::Str _6113_k) {
	return (_1c3177559_IsSigInt(_6113_k) || _1c3177900_IsFloat(_6113_k));;
}



inline void _1c317addc_lshiftUnsig(_1c25bc4e9_Const* _59021_c, _1c25bc4e9_Const* _59032_x) {
	jule::U64 _5919_l = _1c3178538_AsU64(_59021_c);;
	jule::U64 _5929_r = _1c3178538_AsU64(_59032_x);;
	_1c31788ce_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1c317b01e_rshiftUnsig(_1c25bc4e9_Const* _59621_c, _1c25bc4e9_Const* _59632_x) {
	jule::U64 _5979_l = _1c3178538_AsU64(_59621_c);;
	jule::U64 _5989_r = _1c3178538_AsU64(_59632_x);;
	_1c31788ce_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1c4b45d7d_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1c4b46004_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I32 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1c4b5d8e0_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3149_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1c4b5d03d_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1c4b5d33a_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I32 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1c4b5dc31_strEsqSeq(_4210_bytes, &(_4813_i)));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I32 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3149_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_1d9dd44ad_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1ac3db0db:;
	}
	_iter_end_1ac3db0db:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1c4b5d5d2_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1ac3e05a7:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ac3e061d:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ac3e0684:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1ac3e06ea:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1ac3e0772:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ac3e07e9:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1ac3e0871:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1ac3e08e8:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1ac3e0970:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1ac3e09e7:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1ac3e0486:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1c4b5d8e0_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I32* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1c4b5d5d2_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1ac3e6668:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1c2c52ab3_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ac3e6008:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1c2c52ab3_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ac3e606e:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1c2c52ab3_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1ac3e4c1b:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1c2c52ab3_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1ac3e4bb6:;
	};
}



inline jule::Slice<jule::U8> _1c4b5dc31_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I32* _12434_i) {
	jule::I32 _1259_r = _1c4b5d8e0_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));;
}



inline jule::I32 _1c4c10b90_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I32* _1038_start) {
	jule::I32 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I32 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3149_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1ac42a647:;
	}
	_iter_end_1ac42a647:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1c4c16789_getFormatRange(jule::I32* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I32 _289_start = (*(_2724_i));;
	jule::I32 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I32 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3149_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1ac42d1e9:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1ac42d260:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1ac42cddb:;
			};
		}
	_iter_next_1ac42c4b2:;
	}
	_iter_end_1ac42c4b2:;;
	return nullptr;;
}



inline void _1c4c16a42_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		((*(_4722_buf))).append("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1ac434ce4:;
			{
				(*(_4722_buf))+=_1c2ac9b05_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type138))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ac434db0:;
			{
				(*(_4722_buf))+=_1c2ac9b05_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1ac434a3b:;
			{
				(*(_4722_buf))+=_1c3174721_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type139)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1ac42e261:;
			{
				(*(_4722_buf))+=_1c3174721_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type140)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ac43492b:;
			{
				(*(_4722_buf))+=_1c3174721_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac434992:;
			{
				(*(_4722_buf))+=_1c3174721_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1ac435003:;
			{
				(*(_4722_buf))+=_1c31745de_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type136)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1ac435069:;
			{
				(*(_4722_buf))+=_1c31745de_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type141)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type142) {
			_case_begin_1ac4350d0:;
			{
				(*(_4722_buf))+=_1c31745de_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type142)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ac435146:;
			{
				(*(_4722_buf))+=_1c31745de_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ac4351ac:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ac435223:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					((*(_4722_buf))).append("true", 4);
				} else {
					((*(_4722_buf))).append("false", 5);
				};
			}
		}
		else {
			_case_begin_1ac42e2e9:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_1ac42e44d:;
	};
}



inline void _1c4c16e1b_applyFmtByDefault(jule::Str* _8627_buf, jule::I32* _8642_j, jule::Slice<jule::Any>* _8651_args) {
	jule::Any _879_arg = (*(_8651_args))[(*(_8642_j))];;
	((*(_8642_j)))++;
	_1c4c16a42_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _1c4c17317_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I32* _9451_j, jule::Slice<jule::Any>* _9460_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1c4c16e1b_applyFmtByDefault(_9436_buf, _9451_j, _9460_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		((*(_9436_buf))).append("{}", 2);
		return;;
	};
	_205572856_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _1c4c17625_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _20556c268_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I32 _11913_j = 0LL;;
	jule::I32 _12013_last = 0LL;;
	jule::I32 _12113_i = _1c4c10b90_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I32>(_1c4c10b90_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_205572856_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _1c4c16789_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1ac44187d;
			};
			_1c4c17317_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), &(_11322_args));
			if ((_11913_j >= _11322_args.len())) {
				_205572856_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I32>(_11713_fmtBytes.len());
				goto _iter_end_1ac44187d;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1ac44187d:;
	}
	_iter_end_1ac44187d:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_205572856_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _1c4c17e3e_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1c4c17625_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1c4ab5b11_parameterUsesGenerics(jule::Ptr<_1c4ab2b30_ParamIns>* _38031_p, jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>>* _38046_generics) {
	if (_1c4a6c810_IsSelf((*(_38031_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _1c4b738b1_kindUsesGenerics(&((*(_38031_p)).get()._field_Kind), _38046_generics);;
}



inline jule::Ptr<_1c4b610b8_TypeSymbol> _1c4ab80db_buildType(jule::Ptr<_1c4a8e337_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1c45e7e90_Value> _1c4ab83c7_buildExpr(jule::Ptr<_1c4a93858_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c45e7e90_Value>(_1c45e7e90_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1c4701230_TypeAlias> _1c4ab866e_buildTypeAlias(jule::Ptr<_1c4aa5606_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1c4701230_TypeAlias>(_1c4701230_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1c4ab80db_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1c4a7e877_Field> _1c4ab898d_buildField(jule::Ptr<_1c4aa8c9c_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1c4a7e877_Field>(_1c4a7e877_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1c4ab80db_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1c4a7e877_Field>> _1c4ab8c35_buildFields(jule::Slice<jule::Ptr<_1c4aa8c9c_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1c4a7e877_Field>> _13513_fields = jule::Slice<jule::Ptr<_1c4a7e877_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac692903:;
		if (it != expr_end) {
			jule::Ptr<_1c4aa8c9c_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1c4ab898d_buildField(_13617_decl));;
			}
			_iter_next_1ac692903:;
			++it;
			goto _iter_begin_1ac692903;
		}
		_iter_end_1ac692903:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1c4a86ebc_Struct> _1c4ab8ecc_buildStruct(jule::Ptr<_1c4aa9550_StructDecl> _14220_decl) {
	return jule::new_ptr<_1c4a86ebc_Struct>(_1c4a86ebc_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1c4ab8c35_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1c4ab2107_Param> _1c4ab9274_buildParam(jule::Ptr<_1c4a9e996_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1c4ab2107_Param>(_1c4ab2107_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1c4ab80db_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1c4ab2107_Param>> _1c4ab95e8_buildParams(jule::Slice<jule::Ptr<_1c4a9e996_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1c4ab2107_Param>> _16613_params = jule::Slice<jule::Ptr<_1c4ab2107_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac69550a:;
		if (it != expr_end) {
			jule::Ptr<_1c4a9e996_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1c4ab9274_buildParam(_16717_decl));;
			}
			_iter_next_1ac69550a:;
			++it;
			goto _iter_begin_1ac69550a;
		}
		_iter_end_1ac69550a:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1c4ab1e1a_RetType> _1c4ab9890_buildRetType(jule::Ptr<_1c4a9244a_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c4ab1e1a_RetType>(_1c4ab1e1a_RetType{._field_Kind=_1c4ab80db_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1c4ab22e4_Fn> _1c4ab9b37_buildFn(jule::Ptr<_1c4aa0cb6_FnDecl> _18316_decl) {
	return jule::new_ptr<_1c4ab22e4_Fn>(_1c4ab22e4_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1c4ab9890_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1c4ab95e8_buildParams(&(_18316_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1c4ab22e4_Fn>> _1c4ab9dce_buildMethods(jule::Slice<jule::Ptr<_1c4aa0cb6_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1c4ab22e4_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1c4ab22e4_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac698d27:;
		if (it != expr_end) {
			jule::Ptr<_1c4aa0cb6_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1c4ab9b37_buildFn(_20317_decl));;
			}
			_iter_next_1ac698d27:;
			++it;
			goto _iter_begin_1ac698d27;
		}
		_iter_end_1ac698d27:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_1c4b610b8_TypeSymbol>> _1c4aba176_buildTraitInherits(jule::Slice<jule::Ptr<_1c4a8e337_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1c4b610b8_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_1c4b610b8_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac699ee3:;
		if (it != expr_end) {
			jule::Ptr<_1c4a8e337_TypeDecl> _21117_it = *it;
			{
				_21013_symbols = jule::alloc_for_append(_21013_symbols,1);_21013_symbols.__push(_1c4ab80db_buildType(_21117_it));;
			}
			_iter_next_1ac699ee3:;
			++it;
			goto _iter_begin_1ac699ee3;
		}
		_iter_end_1ac699ee3:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_1c4ac306e_Trait> _1c4aba41d_buildTrait(jule::Ptr<_1c4aa9c26_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1c4ac306e_Trait>(_1c4ac306e_Trait{._field_Token=_21719_decl.get()._field_Token, ._field_Ident=_21719_decl.get()._field_Ident, ._field_Public=_21719_decl.get()._field_Public, ._field_Inherits=_1c4aba176_buildTraitInherits(&(_21719_decl.get()._field_Inherits)), ._field_Methods=_1c4ab9dce_buildMethods(&(_21719_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_1c4ac4d0c_EnumItem> _1c4aba6b5_buildEnumItem(jule::Ptr<_1c4aa6e65_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1c4ac4d0c_EnumItem>(_1c4ac4d0c_EnumItem{._field_Token=_22722_decl.get()._field_Token, ._field_Ident=_22722_decl.get()._field_Ident, ._field_Value=_1c4ab83c7_buildExpr(_22722_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1c4ac4d0c_EnumItem>> _1c4aba95c_buildEnumItems(jule::Slice<jule::Ptr<_1c4aa6e65_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1c4ac4d0c_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_1c4ac4d0c_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac69c556:;
		if (it != expr_end) {
			jule::Ptr<_1c4aa6e65_EnumItemDecl> _23717_decl = *it;
			{
				_23613_items = jule::alloc_for_append(_23613_items,1);_23613_items.__push(_1c4aba6b5_buildEnumItem(_23717_decl));;
			}
			_iter_next_1ac69c556:;
			++it;
			goto _iter_begin_1ac69c556;
		}
		_iter_end_1ac69c556:;
	};
	return _23613_items;;
}



inline jule::Ptr<_1c4ac5802_Enum> _1c4abadad_buildEnum(jule::Ptr<_1c4aa798d_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1c4ac5802_Enum>(_1c4ac5802_Enum{._field_Token=_24318_decl.get()._field_Token, ._field_Public=_24318_decl.get()._field_Public, ._field_Ident=_24318_decl.get()._field_Ident, ._field_Kind=_1c4ab80db_buildType(_24318_decl.get()._field_Kind), ._field_Items=_1c4aba95c_buildEnumItems(&(_24318_decl.get()._field_Items))});;
}



inline jule::Ptr<_1c4ac6836_TypeEnumItem> _1c4abb155_buildTypeEnumItem(jule::Ptr<_1c4aa8494_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1c4ac6836_TypeEnumItem>(_1c4ac6836_TypeEnumItem{._field_Token=_25326_decl.get()._field_Token, ._field_Ident=_25326_decl.get()._field_Ident, ._field_Kind=_1c4ab80db_buildType(_25326_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1c4ac6836_TypeEnumItem>> _1c4abb3ec_buildTypeEnumItems(jule::Slice<jule::Ptr<_1c4aa8494_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1c4ac6836_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_1c4ac6836_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac69eb1e:;
		if (it != expr_end) {
			jule::Ptr<_1c4aa8494_TypeEnumItemDecl> _26317_decl = *it;
			{
				_26213_items = jule::alloc_for_append(_26213_items,1);_26213_items.__push(_1c4abb155_buildTypeEnumItem(_26317_decl));;
			}
			_iter_next_1ac69eb1e:;
			++it;
			goto _iter_begin_1ac69eb1e;
		}
		_iter_end_1ac69eb1e:;
	};
	return _26213_items;;
}



inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4abb694_buildTypeEnum(jule::Ptr<_1c4aa8a9e_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1c4ac6dec_TypeEnum>(_1c4ac6dec_TypeEnum{._field_Token=_26922_decl.get()._field_Token, ._field_Public=_26922_decl.get()._field_Public, ._field_Ident=_26922_decl.get()._field_Ident, ._field_Items=_1c4abb3ec_buildTypeEnumItems(&(_26922_decl.get()._field_Items))});;
}



inline jule::Ptr<_1c4b2c837_Var> _1c4abb93b_buildVar(jule::Ptr<_1c4aa1c95_VarDecl> _27817_decl) {
	return jule::new_ptr<_1c4b2c837_Var>(_1c4b2c837_Var{._field_Token=_27817_decl.get()._field_Token, ._field_Ident=_27817_decl.get()._field_Ident, ._field_CppLinked=_27817_decl.get()._field_CppLinked, ._field_Constant=_27817_decl.get()._field_Constant, ._field_Mutable=_27817_decl.get()._field_Mutable, ._field_Public=_27817_decl.get()._field_Public, ._field_Statically=_27817_decl.get()._field_Statically, ._field_Reference=_27817_decl.get()._field_Reference, ._field_Kind=_1c4ab80db_buildType(_27817_decl.get()._field_Kind), ._field_Value=_1c4ab83c7_buildExpr(_27817_decl.get()._field_Expr), ._field_Refers=static__1c4ab6bab_new(), ._field_Directives=_27817_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1c4b2c837_Var>> _1c4abbbd3_buildVars(jule::Slice<jule::Ptr<_1c4aa1c95_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1c4b2c837_Var>> _29613_vars = jule::Slice<jule::Ptr<_1c4b2c837_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6a2baa:;
		if (it != expr_end) {
			jule::Ptr<_1c4aa1c95_VarDecl> _29717_decl = *it;
			{
				_29613_vars = jule::alloc_for_append(_29613_vars,1);_29613_vars.__push(_1c4abb93b_buildVar(_29717_decl));;
			}
			_iter_next_1ac6a2baa:;
			++it;
			goto _iter_begin_1ac6a2baa;
		}
		_iter_end_1ac6a2baa:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_1c4acb363_Impl> _1c4abbe7a_buildImpl(jule::Ptr<_1c4aaa331_Impl> _30318_decl) {
	return jule::new_ptr<_1c4acb363_Impl>(_1c4acb363_Impl{._field_Base=_30318_decl.get()._field_Base, ._field_Dest=_30318_decl.get()._field_Dest, ._field_Methods=_1c4ab9dce_buildMethods(&(_30318_decl.get()._field_Methods)), ._field_Statics=_1c4abbbd3_buildVars(_30318_decl.get()._field_Statics)});;
}



inline jule::Bool _1c4aca708_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1c4621d32_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1ac7130b1:;
			{
				jule::Ptr<_1c4b6197b_Prim> _14513_prim = _1c4b5e45c_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1c3177b64_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1ac712104:;
			{
				jule::Ptr<_1c4b6197b_Prim> _15113_prim = _1c4b5e45c_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1c317768b_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1ac712d19:;
			{
				jule::Ptr<_1c4b6197b_Prim> _15713_prim = _1c4b5e45c_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1c3177900_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1ac712d91:;
			{
				jule::Ptr<_1c4b6197b_Prim> _16313_prim = _1c4b5e45c_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1c3177a32_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1ac712e18:;
			{
				return _1c4b5cdd9_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1ac712ae9:;
			{
				return (!(_1c4b5cdd9_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1ac712b60:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1ac712bd7:;
			{
				jule::Ptr<_1c4b6197b_Prim> _17513_prim = _1c4b5e45c_Prim((*(_14234_g)).ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1c3177a32_IsNum(_17513_prim.get()._field_Kind) || _1c4b64bb0_IsStr(_17513_prim.ptr()));;
				};
				if ((_1c4b5e6c1_Ptr((*(_14234_g)).ptr()) != nullptr)) {
					return true;;
				};
				jule::Ptr<_1c4aab255_StructIns> _18213_s = _1c4b604c4_Struct((*(_14234_g)).ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));;
				};
				jule::Ptr<_1c4ac5802_Enum> _18913_enm = _1c4b5e803_Enum((*(_14234_g)).ptr());;
				if ((_18913_enm != nullptr)) {
					return _1c3177a32_IsNum(_1c4622272_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ac7128da:;
			{
				return false;;
			}
		}
		_match_end_1ac712841:;
	};
}



inline jule::Bool _1c4aca9e4_isBuiltinConstraint(jule::Str* _19925_ident) {
	{
		auto expr = &(_1c4ac8b68_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac71b6a2:;
		if (it != expr_end) {
			jule::Str *_20012_bc = it;
			{
				if (((*(_19925_ident)) == (*(_20012_bc)))) {
					return true;;
				};
			}
			_iter_next_1ac71b6a2:;
			++it;
			goto _iter_begin_1ac71b6a2;
		}
		_iter_end_1ac71b6a2:;
	};
	return false;;
}



inline jule::Ptr<_1c4ad7e30_scopeChecker> _1c4acd3ed_newScopeCheckerBase(jule::Ptr<_1c4b07c74_Sema>* _5829_s, jule::Ptr<_1c4ab39ee_FnIns> _5843_owner) {
	return jule::new_ptr<_1c4ad7e30_scopeChecker>(_1c4ad7e30_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1c45e20dd_SymbolTable>(), });;
}



inline jule::Ptr<_1c4ad7e30_scopeChecker> _1c4acd783_newScopeChecker(jule::Ptr<_1c4b07c74_Sema>* _6625_s, jule::Ptr<_1c4ab39ee_FnIns> _6639_owner) {
	jule::Ptr<_1c4ad7e30_scopeChecker> _6713_base = _1c4acd3ed_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c4ad6b98_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c4ad711b_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1c4ad6b98_scopeLabel> _1c4acdac4_findLabelParent(jule::Str _7620_ident, jule::Ptr<_1c4ad7e30_scopeChecker> _7636_scope) {
	jule::Ptr<_1c4ad6b98_scopeLabel> _7713_label = _1c4adb906_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_1c4adb906_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1ac731211:;
	}
	_iter_end_1ac731211:;;
	return _7713_label;;
}



inline jule::Bool _1c4acde59_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1c4ad13bd_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ac732c6d:;
			{
				jule::Ptr<_1c4aac5ec_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1c4aac5ec_FnCallExprModel>(&__jule_any_type34);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac732ce5:;
			{
				jule::Ptr<_1c45e6e17_Data> _9813_d = _9021_Model.cast_ptr<_1c45e6e17_Data>(&__jule_any_type23);;
				return _1c4acde59_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1ac732bd5:;
	};
	return false;;
}



inline jule::Bool _1c4ace29a_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1c4ad13bd_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ac73516b:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1c4ad13bd_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ac7351e3:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1c4ad2215_InfIter>(&__jule_any_type36).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ac734e5c:;
			{
				jule::Ptr<_1c4ad306d_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_1c4ad306d_RangeIter>(&__jule_any_type40);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _1c4acde59_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ac734ed4:;
			{
				jule::Ptr<_1c4ad2688_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_1c4ad2688_WhileIter>(&__jule_any_type38);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _1c4acde59_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _1c4acde59_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ac73505b:;
			{
				jule::Ptr<_1c4ad5119_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_1c4ad5119_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac73858c:;
					if (it != expr_end) {
						jule::Ptr<_1c4ad5b64_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac7394c2:;
								if (it != expr_end) {
									jule::Ptr<_1c45e6e17_Data> *_12420_expr = it;
									{
										if (_1c4acde59_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1ac7394c2:;
									++it;
									goto _iter_begin_1ac7394c2;
								}
								_iter_end_1ac7394c2:;
							};
						}
						_iter_next_1ac73858c:;
						++it;
						goto _iter_begin_1ac73858c;
					}
					_iter_end_1ac73858c:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ac7331e1:;
			{
				jule::Ptr<_1c4ad1e29_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_1c4ad1e29_Conditional>(&__jule_any_type35);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac73a979:;
					if (it != expr_end) {
						jule::Ptr<_1c4ad17b9_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _1c4acde59_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1ac73a979:;
						++it;
						goto _iter_begin_1ac73a979;
					}
					_iter_end_1ac73a979:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac733257:;
			{
				jule::Ptr<_1c45e6e17_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_1c45e6e17_Data>(&__jule_any_type23);;
				return _1c4acde59_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1ac73317a:;
			{
				return false;;
			}
		}
		_match_end_1ac733125:;
	};
}



inline jule::I32 _1c4ace5db_countMatchType(jule::Ptr<_1c4ad5119_Match>* _14720_m, jule::Ptr<_1c4621d32_TypeKind>* _14732_t) {
	jule::I32 _14813_n = 0LL;;
	jule::Str _1499_kind = _1c4622272_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac73d8d3:;
		if (it != expr_end) {
			jule::Ptr<_1c4ad5b64_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1ac73d8d3;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac73e72a:;
					if (it != expr_end) {
						jule::Ptr<_1c45e6e17_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1ac73d8d3;
							};
							if ((_1499_kind == _1c4622272_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_1c4621d32_TypeKind>(&__jule_any_type90).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1ac73e72a:;
						++it;
						goto _iter_begin_1ac73e72a;
					}
					_iter_end_1ac73e72a:;
				};
			}
			_iter_next_1ac73d8d3:;
			++it;
			goto _iter_begin_1ac73d8d3;
		}
		_iter_end_1ac73d8d3:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1c45e6e17_Data>> _1c4ace883_getDatasFromTupleData(jule::Ptr<_1c45e6e17_Data>* _17131_d) {
	if ((_1c4b60c11_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type88) {
				_case_begin_1ac7432cd:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_1c4aae324_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1ac740e24:;
				{
					jule::Ptr<_1c4b66673_Tuple> _17721_t = _1c4b60c11_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1c45e6e17_Data>> _17821_r = jule::Slice<jule::Ptr<_1c45e6e17_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac741d6a:;
						if (it != expr_end) {
							jule::Ptr<_1c4621d32_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1ac741d6a:;
							++it;
							goto _iter_begin_1ac741d6a;
						}
						_iter_end_1ac741d6a:;
					};
					return _17821_r;;
				}
			}
			_match_end_1ac740d7a:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1c45e6e17_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1c4ad01be_checkMut(jule::Ptr<_1c4b07c74_Sema>* _20618_s, jule::Ptr<_1c45e6e17_Data>* _20629_left, jule::Ptr<_1c45e6e17_Data> _20646_right, jule::Ptr<_2039861ab_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1ac746435:;
			{
				_1c4b0a936_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1c4b5cdd9_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1ac745c70:;
			{
				if (((!_20660_op.get()._field_Kind.equal("=", 1)) && (_1c4b604c4_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1c4b0a936_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac745c09:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac745b4e:;
	};
}



inline jule::Bool _1c4ad0653_checkAssign(jule::Ptr<_1c4b07c74_Sema>* _22521_s, jule::Ptr<_1c45e6e17_Data>* _22536_left, jule::Ptr<_1c45e6e17_Data> _22553_right, jule::Ptr<_2039861ab_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4ab39ee_FnIns> _2269_f = _1c4b60260_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1c4b0a936_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1c45e77ca_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1ac74ae2e:;
			{
				_1c4b0a936_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1c4b0ac55_pushSugggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1ac74a79c:;
			{
				_1c4b0a936_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1c4ad01be_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1ac74a813:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ac74a736:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac74a615:;
	};
}



inline jule::Bool _1c4ad08ea_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ac747c94:;
			{
				return (!((*(_24731_n)).cast_ptr<_1c4a9ccc4_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ac74cb45:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac74c9be:;
			{
				return false;;
			}
		}
		_match_end_1ac74a8ac:;
	};
}



inline jule::Bool _1c4ad0b92_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1ac74db35:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac74db9b:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_1c45e6e17_Data>(&__jule_any_type23).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1ac74e482:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ac74e839:;
						{
							return false;;
						}
					}
					_match_end_1ac74e581:;
				};
			}
		}
		else {
			_case_begin_1ac74cded:;
			{
				return false;;
			}
		}
		_match_end_1ac74cd98:;
	};
}



inline jule::Bool _1c4ad0e39_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac74ee66:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac74ea48:;
			{
				return false;;
			}
		}
		_match_end_1ac74e95a:;
	};
}



inline jule::Ptr<_1c4b2c837_Var> _1c4aec340_findVarInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac897e05:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1c4b2c837_Var> _4817_v = _1c45e2cc0_FindVar(_4717_f.ptr(), _4649_ident, _4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1ac897e05:;
			++it;
			goto _iter_begin_1ac897e05;
		}
		_iter_end_1ac897e05:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4701230_TypeAlias> _1c4aec76e_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8993ac:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1c4701230_TypeAlias> _6017_ta = _1c45e3177_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1ac8993ac:;
			++it;
			goto _iter_begin_1ac8993ac;
		}
		_iter_end_1ac8993ac:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4a86ebc_Struct> _1c4aecb59_findStructInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac89a853:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1c4a86ebc_Struct> _7217_s = _1c45e352e_FindStruct(_7117_f.ptr(), _7052_ident, _7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1ac89a853:;
			++it;
			goto _iter_begin_1ac89a853;
		}
		_iter_end_1ac89a853:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ab22e4_Fn> _1c4aed0bb_findFnInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac89bce9:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1c4ab22e4_Fn> _8417_f = _1c45e38d6_FindFn(_8317_file.ptr(), _8248_ident, _8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1ac89bce9:;
			++it;
			goto _iter_begin_1ac89bce9;
		}
		_iter_end_1ac89bce9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ac306e_Trait> _1c4aed3c9_findTraitInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac89c37c:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1c4ac306e_Trait> _9617_t = _1c45e3be4_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1ac89c37c:;
			++it;
			goto _iter_begin_1ac89c37c;
		}
		_iter_end_1ac89c37c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ac5802_Enum> _1c4aed71a_findEnumInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac89e36d:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1c4ac5802_Enum> _10817_e = _1c45e4002_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1ac89e36d:;
			++it;
			goto _iter_begin_1ac89e36d;
		}
		_iter_end_1ac89e36d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4ac6dec_TypeEnum> _1c4aeda5b_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8a0627:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1c4ac6dec_TypeEnum> _12017_e = _1c45e4310_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1ac8a0627:;
			++it;
			goto _iter_begin_1ac8a0627;
		}
		_iter_end_1ac8a0627:;
	};
	return nullptr;;
}



inline jule::Any _1c4aee056_defByIdentPackage(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8a1ae0:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1c45e518a_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1ac8a1ae0:;
			++it;
			goto _iter_begin_1ac8a1ae0;
		}
		_iter_end_1ac8a1ae0:;
	};
	return nullptr;;
}



inline jule::Bool _1c4b0515b_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _1c2170cd4_HasPrefix(_36117_f, _1c2193a4e_Join(jule::Slice<jule::Str>::make({_1c222ac6d_PathStdlib,_36125_p})));;
}



inline jule::Bool _1c4b05db5_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac8b27d2:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ac8b2848:;
			{
				jule::Ptr<_1c4aad884_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_1c4aad884_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1c4b05db5_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ac8b25e5:;
			{
				jule::Ptr<_1c4aad466_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_1c4aad466_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _1c4b05db5_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ac8b265b:;
			{
				jule::Ptr<_1c4aabb5c_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_1c4aabb5c_UnaryExprModel>(&__jule_any_type74);;
				if ((!_2317_unary.get()._field_Op.get()._field_Kind.equal("*", 1))) {
					return false;;
				};
				if ((_1c4b5e6c1_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1c4b5e58e_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1c4b05db5_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1ac8b1bbb:;
			{
				return false;;
			}
		}
		_match_end_1ac8b1b66:;
	};
}



inline _1c2220900_Log _1c4b0635a_compilerErr(jule::Ptr<_2039861ab_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_1c2220900_Log _4213_log = _1c2220900_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_1c2220d40_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_20398c723_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _1c4b0669b_impIsLookupable(jule::Ptr<_1c4aeeb28_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_CppLinked) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _1c4b024ee_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _1c4b06998_appendRetVars(jule::Slice<jule::Ptr<_1c4b2c837_Var>>* _6723_dest, jule::Ptr<_1c4ab39ee_FnIns>* _6742_f) {
	if ((_1c4a871ed_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c4621d32_TypeKind>> _7213_types = _1c4ab4b21_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8ba675:;
		if (it != expr_end) {
			jule::I32 _7310_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _7317_ident = *it;
			{
				if ((_203988950_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _203988be7_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1ac8ba675;
				};
				(*(_6723_dest)) = jule::alloc_for_append((*(_6723_dest)),1);(*(_6723_dest)).__push(jule::new_ptr<_1c4b2c837_Var>(_1c4b2c837_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1c45e7e90_Value>(_1c45e7e90_Value{._field_Data=jule::new_ptr<_1c45e6e17_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_1ac8ba675:;
			++it;
			_7310_i++;
			goto _iter_begin_1ac8ba675;
		}
		_iter_end_1ac8ba675:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1c4b06c51_appendParamVars(jule::Slice<jule::Ptr<_1c4b2c837_Var>>* _9725_dest, jule::Ptr<_1c4ab39ee_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8be35a:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab2b30_ParamIns> _10217_p = *it;
			{
				if ((_203988950_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _203988be7_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1ac8be35a;
				};
				jule::Ptr<_1c4b2c837_Var> _10717_v = jule::new_ptr<_1c4b2c837_Var>(_1c4b2c837_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(), ._field_Value=jule::new_ptr<_1c45e7e90_Value>(_1c45e7e90_Value{._field_Data=jule::new_ptr<_1c45e6e17_Data>()}), });;
				{
					
					if (_1c4a6c810_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1ac8c1c42:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1c46218c0_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_1c4a71e63_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_1c4a71e63_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1c4b65210_Sptr>(_1c4b65210_Sptr{._field_Elem=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_CppIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1ac8c1978:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1c4b65b6c_Slc>(_1c4b65b6c_Slc{._field_Elem=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_CppIdent=_10217_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1ac8be9ed:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1ac8c1857:;
				};
				(*(_9725_dest)) = jule::alloc_for_append((*(_9725_dest)),1);(*(_9725_dest)).__push(_10717_v);;
			}
			_iter_next_1ac8be35a:;
			++it;
			goto _iter_begin_1ac8be35a;
		}
		_iter_end_1ac8be35a:;
	};
}



inline void _1c4b0702b_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c4701230_TypeAlias>>* _15734_dest, jule::Ptr<_1c4ab39ee_FnIns>* _15759_f) {
	jule::I32 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8c6e12:;
		if (it != expr_end) {
			jule::I32 _16710_i = it - expr->begin();
			jule::Ptr<_1c47006e6_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_1c4a9b630_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_1c4701230_TypeAlias>(_1c4701230_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_1ac8c6e12:;
			++it;
			_16710_i++;
			goto _iter_begin_1ac8c6e12;
		}
		_iter_end_1ac8c6e12:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1c4aab255_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac8c852e:;
			if (it != expr_end) {
				jule::I32 _18114_i = it - expr->begin();
				jule::Ptr<_1c47006e6_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_1c4a9b630_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_1c4701230_TypeAlias>(_1c4701230_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_1ac8c852e:;
				++it;
				_18114_i++;
				goto _iter_begin_1ac8c852e;
			}
			_iter_end_1ac8c852e:;
		};
	};
}



inline jule::Ptr<_1c45e20dd_SymbolTable> _1c4b0737d_findFile(jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>* _19518_files, jule::Ptr<_20398b546_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8ca531:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_1ac8ca531:;
			++it;
			goto _iter_begin_1ac8ca531;
		}
		_iter_end_1ac8ca531:;
	};
	return nullptr;;
}



inline void _1c4b077e0_pushSugggestion(_1c2220900_Log* _20431_log, jule::Str _20442_fmt, jule::Slice<jule::Any> _20455_args) {
	_20431_log->_field_Suggestion=_1c2220d40_Logf(_20442_fmt, _20455_args);
}



inline void _1c4b2ad1e_pushImplemented(jule::Ptr<_1c4ac306e_Trait> _280324_t, jule::Ptr<_1c4a86ebc_Struct>* _280340_d) {
	_julec_label_push:;
	{
		
		if ((_280324_t.get()._field_Implemented.len() > 0LL)) {
			_case_begin_1ac8cd07d:;
			{
				{
					auto expr = &(_280324_t.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac8cdc60:;
					if (it != expr_end) {
						jule::Ptr<_1c4a86ebc_Struct> _280716_s = *it;
						{
							if ((_280716_s == (*(_280340_d)))) {
								goto _match_end_1ac8ccb71;
							};
						}
						_iter_next_1ac8cdc60:;
						++it;
						goto _iter_begin_1ac8cdc60;
					}
					_iter_end_1ac8cdc60:;
				};
				goto _case_begin_1ac8ccbd7;
			}
		}
		else {
			_case_begin_1ac8ccbd7:;
			{
				_280324_t.get()._field_Implemented = jule::alloc_for_append(_280324_t.get()._field_Implemented,1);_280324_t.get()._field_Implemented.__push((*(_280340_d)));;
			}
		}
		_match_end_1ac8ccb71:;
	};
	{
		auto expr = &(_280324_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8ce942:;
		if (it != expr_end) {
			jule::Ptr<_1c4b610b8_TypeSymbol> _281617_i = *it;
			{
				_1c4b2ad1e_pushImplemented(_1c4b60738_Trait(_281617_i.get()._field_Kind.ptr()), _280340_d);
			}
			_iter_next_1ac8ce942:;
			++it;
			goto _iter_begin_1ac8ce942;
		}
		_iter_end_1ac8ce942:;
	};
}



inline void _1c4b2b0c7_pushImplements(jule::Ptr<_1c4a86ebc_Struct>* _282124_s, jule::Ptr<_1c4ac306e_Trait> _282140_t) {
	_julec_label_push:;
	{
		
		if (((*(_282124_s)).get()._field_Implements.len() > 0LL)) {
			_case_begin_1ac8d0a31:;
			{
				{
					auto expr = &((*(_282124_s)).get()._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac8d1713:;
					if (it != expr_end) {
						jule::Ptr<_1c4ac306e_Trait> _282516_b = *it;
						{
							if ((_282516_b == _282140_t)) {
								goto _match_end_1ac8d0624;
							};
						}
						_iter_next_1ac8d1713:;
						++it;
						goto _iter_begin_1ac8d1713;
					}
					_iter_end_1ac8d1713:;
				};
				goto _case_begin_1ac8d068a;
			}
		}
		else {
			_case_begin_1ac8d068a:;
			{
				(*(_282124_s)).get()._field_Implements = jule::alloc_for_append((*(_282124_s)).get()._field_Implements,1);(*(_282124_s)).get()._field_Implements.__push(_282140_t);;
			}
		}
		_match_end_1ac8d0624:;
	};
	{
		auto expr = &(_282140_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8d23e5:;
		if (it != expr_end) {
			jule::Ptr<_1c4b610b8_TypeSymbol> _283417_i = *it;
			{
				_1c4b2b0c7_pushImplements(_282124_s, _1c4b60738_Trait(_283417_i.get()._field_Kind.ptr()));
			}
			_iter_next_1ac8d23e5:;
			++it;
			goto _iter_begin_1ac8d23e5;
		}
		_iter_end_1ac8d23e5:;
	};
}



inline jule::Bool _1c45ce6e6_traitHasReferenceReceiver(jule::Ptr<_1c4ac306e_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb08a6c:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_1acb08a6c;
				};
				jule::Ptr<_1c4ab2107_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_1c4a71e63_IsRef(_3313_p.ptr()) && _1c4a6c810_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1acb08a6c:;
			++it;
			goto _iter_begin_1acb08a6c;
		}
		_iter_end_1acb08a6c:;
	};
	return false;;
}



inline jule::Bool _1c45cea48_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1c45e6e17_Data>* _4132_d) {
	jule::Str _429_value = _1c2ac9b05_FmtFloat(static_cast<jule::F64>(_1c317866a_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1c292c7d2_CheckBitFloat(_429_value, static_cast<jule::I32>(_1c26d71e6_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _1c45ced89_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1c45e6e17_Data>* _4630_d) {
	jule::F64 _479_min = _1c2a39207_Min(_4618_kind);;
	jule::F64 _489_max = _1c31751c2_Max(_4618_kind);;
	{
		
		if (_1c31794b2_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1acb0ea73:;
			{
				jule::F64 _5113_x = _1c31782c4_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1c3148162_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_1c317911b_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1acb10205:;
			{
				jule::F64 _5813_x = _1c317866a_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_1c3178ed9_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1acb1027c:;
			{
				jule::F64 _6313_x = _1c317866a_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1acb100d4:;
	};
	return false;;
}



inline jule::Bool _1c45d021e_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1c45e6e17_Data>* _6932_d) {
	jule::F64 _709_max = _1c31751c2_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && _6920_kind.equal("u8", 2))) {
		return _1c4b45d7d_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1c263c811_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1c31794b2_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1acb14ea7:;
			{
				jule::F64 _7713_x = _1c31782c4_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1c3148162_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_1c317911b_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1acb1501d:;
			{
				jule::F64 _8713_x = _1c317866a_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_1c3178ed9_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1acb15095:;
			{
				jule::F64 _9213_x = _1c317866a_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1acb14836:;
	};
	return false;;
}



inline jule::Bool _1c45d0560_intAssignable(jule::Str _9818_kind, jule::Ptr<_1c45e6e17_Data>* _9830_d) {
	{
		
		if (_1c3177559_IsSigInt(_9818_kind)) {
			_case_begin_1acb1e533:;
			{
				return _1c45ced89_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_1c317768b_IsUnsigInt(_9818_kind)) {
			_case_begin_1acb1ddd4:;
			{
				return _1c45d021e_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_1acb1576b:;
			{
				return false;;
			}
		}
		_match_end_1acb156a0:;
	};
}



inline jule::Ptr<_1c4621d32_TypeKind> _1c45e0e99_lenKind(void) {
	return jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)});;
}



inline jule::Ptr<_1c4a5ad81_Directive> _1c461c547_findDirective(jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>* _414223_directives, jule::Str _414254_d) {
	{
		auto expr = _414223_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc26e10:;
		if (it != expr_end) {
			jule::Ptr<_1c4a5ad81_Directive> _414317_dr = *it;
			{
				if ((_414317_dr.get()._field_Tag.get()._field_Kind == _414254_d)) {
					return _414317_dr;;
				};
			}
			_iter_next_1acc26e10:;
			++it;
			goto _iter_begin_1acc26e10;
		}
		_iter_end_1acc26e10:;
	};
	return nullptr;;
}



inline jule::Any _1c461c8cc_findBuiltinsImport(jule::Str _415123_ident, jule::Ptr<_1c4aeeb28_ImportInfo> _415135_imp) {
	return _1c4b82a68_findPackageBuiltinDef(_415135_imp.get()._field_LinkPath, _415123_ident);;
}



inline void _1c461cadb_fitBitsize(jule::Ptr<_1c45e6e17_Data>* _415820_d) {
	jule::Ptr<_1c4b6197b_Prim> _415913_prim = _1c4b5e45c_Prim((*(_415820_d)).get()._field_Kind.ptr());;
	jule::I32 _41609_z = _1c26d71e6_BitsizeOf(_1c4b61cde_Str(_415913_prim.ptr()));;
	if ((_41609_z == 64LLU)) {
		return;;
	};
	jule::I32 _416513_k = 0LL;;
	{
		
		if (_1c3178ed9_IsI64((*(_415820_d)).get()._field_Constant.ptr())) {
			_case_begin_1acc299d4:;
			{
				_416513_k=static_cast<jule::I32>(_1c29a2181_BitsizeOfInt(static_cast<jule::I64>(_1c263c811_ReadI64((*(_415820_d)).get()._field_Constant.ptr()))));
				if ((_416513_k > _41609_z)) {
					_415913_prim.get()._field_Kind=_1c26ed7d4_IntFromBits(_416513_k);
				};
			}
		}
		else if (_1c317911b_IsU64((*(_415820_d)).get()._field_Constant.ptr())) {
			_case_begin_1acc29a5b:;
			{
				_416513_k=static_cast<jule::I32>(_1c2a38cc8_BitsizeOfUint(static_cast<jule::U64>(_1c263c943_ReadU64((*(_415820_d)).get()._field_Constant.ptr()))));
				if ((_416513_k > _41609_z)) {
					_415913_prim.get()._field_Kind=_1c26de352_UintFromBits(_416513_k);
				};
			}
		}
		else if (_1c31794b2_IsF64((*(_415820_d)).get()._field_Constant.ptr())) {
			_case_begin_1acc29ad3:;
			{
				_416513_k=static_cast<jule::I32>(_1c29370e4_BitsizeOfFloat(static_cast<jule::F64>(_1c31782c4_ReadF64((*(_415820_d)).get()._field_Constant.ptr()))));
				if ((_416513_k > _41609_z)) {
					_415913_prim.get()._field_Kind=_1c272eda9_FloatFromBits(_416513_k);
				};
			}
		}
		_match_end_1acc29918:;
	};
}



inline void _1c461cdd8_makeStructLitAlloc(jule::Ptr<_1c45e6e17_Data>* _418528_d, jule::Ptr<_1c4aac036_StructLitExprModel>* _418543_lit) {
	(*(_418528_d)).get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1c4b65210_Sptr>(_1c4b65210_Sptr{._field_Elem=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>((*(_418543_lit)).get()._field_Strct, 0)})}), 7)});
	(*(_418528_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4aac223_AllocStructLitExprModel>(_1c4aac223_AllocStructLitExprModel{._field_Lit=(*(_418543_lit))}), &__jule_any_type118);
}



inline jule::Ptr<_1c4b2c837_Var> _1c461d229_buildErrorVar(jule::Ptr<_1c4ad13bd_Scope>* _419623_s, jule::Ptr<_1c4a9783a_FnCallExpr>* _419639_fc) {
	return jule::new_ptr<_1c4b2c837_Var>(_1c4b2c837_Var{._field_Scope=(*(_419623_s)), ._field_Token=(*(_419639_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1c45e7e90_Value>(_1c45e7e90_Value{._field_Data=jule::new_ptr<_1c45e6e17_Data>()}), });;
}



inline jule::Any _1c461d56a_findBuiltinsSema(jule::Str _421521_ident, jule::Ptr<_1c4b07c74_Sema> _421537_s) {
	{
		auto expr = &(_421537_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc2e1d1:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _421617_imp = *it;
			{
				if ((_421617_imp.get()._field_ImportAll || _1c4b024ee_existIdent(_421617_imp.ptr(), _421521_ident))) {
					jule::Any _421821_def = _1c461c8cc_findBuiltinsImport(_421521_ident, _421617_imp);;
					if ((_421821_def != nullptr)) {
						return _421821_def;;
					};
				};
			}
			_iter_next_1acc2e1d1:;
			++it;
			goto _iter_begin_1acc2e1d1;
		}
		_iter_end_1acc2e1d1:;
	};
	jule::Str _422613_ppath = _20398be3c_Dir(_421537_s.get()._field_file.get()._field_File.ptr());;
	if (_1c2170cd4_HasPrefix(_422613_ppath, _1c222ac6d_PathStdlib)) {
		(_422613_ppath).mut_slice(_1c222ac6d_PathStdlib.len());;
		_422613_ppath=(jule::Str("std", 3) + _1c218eece_Replace(_422613_ppath, static_cast<jule::Str>(92LL), jule::Str("::", 2), -1LL));
		return _1c4b82a68_findPackageBuiltinDef(_422613_ppath, _421521_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1c461d812_isOkForShifting(jule::Ptr<_1c45e6e17_Data>* _424025_d) {
	if (_1c45e77ca_IsConst((*(_424025_d)).ptr())) {
		{
			
			if (_1c3178ed9_IsI64((*(_424025_d)).get()._field_Constant.ptr())) {
				_case_begin_1acc33b0e:;
				{
					return (_1c263c811_ReadI64((*(_424025_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1c317911b_IsU64((*(_424025_d)).get()._field_Constant.ptr())) {
				_case_begin_1acc33438:;
				{
					return true;;
				}
			}
			else if (_1c31794b2_IsF64((*(_424025_d)).get()._field_Constant.ptr())) {
				_case_begin_1acc3349e:;
				{
					return (_1c31782c4_ReadF64((*(_424025_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1acc333c2:;
				{
					return false;;
				}
			}
			_match_end_1acc33306:;
		};
	};
	jule::Ptr<_1c4b6197b_Prim> _42539_prim = _1c4b5e45c_Prim((*(_424025_d)).get()._field_Kind.ptr());;
	return ((_42539_prim != nullptr) && _1c31777bd_IsInt(_1c4b61cde_Str(_42539_prim.ptr())));;
}



inline jule::Bool _1c461dbb9_isInstancedStruct(jule::Ptr<_1c4aab255_StructIns> _425722_s) {
	return (_425722_s.get()._field_Decl.get()._field_Generics.len() == _425722_s.get()._field_Generics.len());;
}



inline jule::Bool _1c461e02c_isPtrArithmeticCompatible(jule::Ptr<_1c45e6e17_Data>* _426135_l, jule::Ptr<_1c45e6e17_Data>* _426150_r) {
	jule::Ptr<_1c4b686ec_Ptr> _42629_ptr = _1c4b5e6c1_Ptr((*(_426150_r)).get()._field_Kind.ptr());;
	if ((_42629_ptr != nullptr)) {
		return _1c4622580_Equal(_1c4b5e6c1_Ptr((*(_426135_l)).get()._field_Kind.ptr()).get()._field_Elem, _42629_ptr.get()._field_Elem);;
	};
	if (_1c45e77ca_IsConst((*(_426150_r)).ptr())) {
		return _1c45d0560_intAssignable(jule::Str("int", 3), _426150_r);;
	};
	_1c45d0a16_typeCompatibilityChecker _426913_tcc = _1c45d0a16_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=(*(_426150_r)).get()._field_Kind, };;
	return _1c45d2100_check(&_426913_tcc);;
}



inline void _1c461e26e_applyCastKindModel(jule::Ptr<_1c45e6e17_Data>* _427828_d, jule::Ptr<_1c4621d32_TypeKind>* _427843_t) {
	(*(_427828_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4aac410_CastingExprModel>(_1c4aac410_CastingExprModel{._field_Expr=(*(_427828_d)).get()._field_Model, ._field_Kind=(*(_427843_t)), ._field_ExprKind=(*(_427828_d)).get()._field_Kind}), &__jule_any_type100);
}



inline void _1c461e527_applyCastKind(jule::Ptr<_1c45e6e17_Data>* _428623_d, jule::Ptr<_1c4621d32_TypeKind>* _428638_t) {
	_1c461e26e_applyCastKindModel(_428623_d, _428638_t);
	(*(_428623_d)).get()._field_Kind=(*(_428638_t));
}



inline jule::Ptr<_1c45e6e17_Data> _1c461e725_buildVoidData(void) {
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("void", 4)), 6)}), });;
}



inline jule::Str _1c461e9de_checkDataForIntegerIndexing(jule::Ptr<_1c45e6e17_Data>* _429937_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_429937_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1c4b5e45c_Prim((*(_429937_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1acc3ab38:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1c31777bd_IsInt(_1c4b61cde_Str(_1c4b5e45c_Prim((*(_429937_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1acc3ab9e:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1c45e77ca_IsConst((*(_429937_d)).ptr())) {
			_case_begin_1acc3ac15:;
			{
				if ((_1c317866a_AsF64((*(_429937_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1c4b5e45c_Prim((*(_429937_d)).get()._field_Kind.ptr()) == nullptr) || _1c45e77ca_IsConst((*(_429937_d)).ptr()) || (_1c26c8270_RealKindOf(_1c4b61cde_Str(_1c4b5e45c_Prim((*(_429937_d)).get()._field_Kind.ptr()).ptr())) != _1c26c8270_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1acc3ac7b:;
			{
				jule::Ptr<_1c4621d32_TypeKind> _431617_t = jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)});;
				_1c461e527_applyCastKind(_429937_d, &(_431617_t));
			}
		}
		_match_end_1acc3a770:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1c461eca8_applyCastModelByEnum(jule::Ptr<_1c45e6e17_Data>* _432530_d, jule::Ptr<_1c4ac5802_Enum> _432544_e) {
	if ((_432544_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1c4b6197b_Prim> _43299_p = _1c4b5e45c_Prim(_432544_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1c4b64bb0_IsStr(_43299_p.ptr())) {
		return;;
	};
	_1c461e26e_applyCastKindModel(_432530_d, &(_432544_e.get()._field_Kind.get()._field_Kind));
}



inline void _1c4620061_castConstByType(jule::Str* _433621_t, jule::Ptr<_1c45e6e17_Data>* _433634_d) {
	{
		
		if (_1c3177559_IsSigInt((*(_433621_t)))) {
			_case_begin_1acc40d6e:;
			{
				{
					auto _match_expr{ _1c26d71e6_BitsizeOf(_1c26c8270_RealKindOf((*(_433621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1acc419b8:;
						{
							_1c317879c_SetI64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c3178406_AsI64((*(_433634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1acc41a40:;
						{
							_1c317879c_SetI64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1c3178406_AsI64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1acc41aa6:;
						{
							_1c317879c_SetI64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1c3178406_AsI64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1acc41b1c:;
						{
							_1c317879c_SetI64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1c3178406_AsI64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1acc41105:;
				};
			}
		}
		else if (_1c317768b_IsUnsigInt((*(_433621_t)))) {
			_case_begin_1acc40de6:;
			{
				{
					auto _match_expr{ _1c26d71e6_BitsizeOf(_1c26c8270_RealKindOf((*(_433621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1acc44e83:;
						{
							_1c31788ce_SetU64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c3178538_AsU64((*(_433634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1acc4501b:;
						{
							_1c31788ce_SetU64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1c3178538_AsU64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1acc45082:;
						{
							_1c31788ce_SetU64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1c3178538_AsU64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1acc450e8:;
						{
							_1c31788ce_SetU64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1c3178538_AsU64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1acc412e2:;
				};
			}
		}
		else if (_1c3177900_IsFloat((*(_433621_t)))) {
			_case_begin_1acc40e6d:;
			{
				{
					auto _match_expr{ _1c26d71e6_BitsizeOf(_1c26c8270_RealKindOf((*(_433621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1acc4845e:;
						{
							_1c3178c75_SetF64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1c317866a_AsF64((*(_433634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1acc484e7:;
						{
							_1c3178c75_SetF64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1c317866a_AsF64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1acc46b33:;
				};
			}
		}
		_match_end_1acc40c4d:;
	};
}



inline void _1c462056c_updateModelToGenericIns(jule::Any* _437033_m, jule::Ptr<_1c4ab39ee_FnIns>* _437052_f) {
	{
		auto &_match_expr{ (*(_437033_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1acc494a4:;
			{
				(*(_437033_m))=jule::Any((*(_437052_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1acc4951a:;
			{
				(*(_437033_m)).cast_ptr<_1c4aad884_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_437052_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1acc49581:;
			{
				(*(_437033_m)).cast_ptr<_1c4aada71_StructStaticIdentExprModel>(&__jule_any_type103).get()._field_Method=(*(_437052_f));
			}
		}
		_match_end_1acc4159a:;
	};
}



inline jule::Bool _1c46207ae_pushSubIdentFromExpr(jule::Any _438129_expr, jule::Ptr<_1c4a9004c_SubIdentTypeDecl>* _438150_t) {
	{
		auto &_match_expr{ _438129_expr };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1acc4ba6c:;
			{
				jule::Ptr<_1c4a95519_IdentExpr> _438417_e = _438129_expr.cast_ptr<_1c4a95519_IdentExpr>(&__jule_any_type86);;
				(*(_438150_t)).get()._field_Idents = jule::alloc_for_append((*(_438150_t)).get()._field_Idents,1);(*(_438150_t)).get()._field_Idents.__push(jule::new_ptr<_1c4a8e8ed_IdentTypeDecl>(_1c4a8e8ed_IdentTypeDecl{._field_Token=_438417_e.get()._field_Token, ._field_Ident=_438417_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1acc4bad3:;
			{
				jule::Ptr<_1c4a96cac_SubIdentExpr> _439017_e = _438129_expr.cast_ptr<_1c4a96cac_SubIdentExpr>(&__jule_any_type92);;
				if ((!(_1c46207ae_pushSubIdentFromExpr(_439017_e.get()._field_Expr.get()._field_Kind, _438150_t)))) {
					return false;;
				};
				(*(_438150_t)).get()._field_Idents = jule::alloc_for_append((*(_438150_t)).get()._field_Idents,1);(*(_438150_t)).get()._field_Idents.__push(jule::new_ptr<_1c4a8e8ed_IdentTypeDecl>(_1c4a8e8ed_IdentTypeDecl{._field_Token=_439017_e.get()._field_Ident, ._field_Ident=_439017_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1acc4b4c8:;
			{
				return false;;
			}
		}
		_match_end_1acc4b473:;
	};
	return true;;
}



inline jule::Bool _1c4b738b1_kindUsesGenerics(jule::Ptr<_1c4621d32_TypeKind>* _158226_k, jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>>* _158241_generics) {
	{
		auto expr = _158241_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad058065:;
		if (it != expr_end) {
			jule::Ptr<_1c4a9b630_GenericDecl> *_158312_g = it;
			{
				if (static__1c4b734b5_exist(&((*(_158312_g)).get()._field_Ident), _158226_k)) {
					return true;;
				};
			}
			_iter_next_1ad058065:;
			++it;
			goto _iter_begin_1ad058065;
		}
		_iter_end_1ad058065:;
	};
	return false;;
}



inline jule::Bool _1c4b73c46_hasDirective(jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>* _159222_directives, jule::Str _159253_tag) {
	{
		auto expr = _159222_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad058692:;
		if (it != expr_end) {
			jule::Ptr<_1c4a5ad81_Directive> _159317_dr = *it;
			{
				if ((_159317_dr.get()._field_Tag.get()._field_Kind == _159253_tag)) {
					return true;;
				};
			}
			_iter_next_1ad058692:;
			++it;
			goto _iter_begin_1ad058692;
		}
		_iter_end_1ad058692:;
	};
	return false;;
}



inline jule::Bool _1c4b73edd_canGetPtr(jule::Ptr<_1c45e6e17_Data>* _160119_d) {
	if (((!((*(_160119_d)).get()._field_Lvalue)) || _1c45e77ca_IsConst((*(_160119_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_1c4b60260_Fn((*(_160119_d)).get()._field_Kind.ptr()) != nullptr) || (_1c4b5e803_Enum((*(_160119_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1ad05aad4:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ad05a430:;
			{
				return true;;
			}
		}
		_match_end_1ad05a3ca:;
	};
}



inline jule::Bool _1c4b7430c_isValidForSptrType(jule::Ptr<_1c4621d32_TypeKind>* _161428_t) {
	jule::Ptr<_1c4aab255_StructIns> _161513_s = _1c4b604c4_Struct((*(_161428_t)).ptr());;
	if ((((_161513_s != nullptr) && (_161513_s.get()._field_Decl != nullptr)) && _161513_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1c4b745a4_isValidForRef(jule::Ptr<_1c4621d32_TypeKind>* _162323_t) {
	return (_1c4b60260_Fn((*(_162323_t)).ptr()) == nullptr);;
}



inline jule::Bool _1c4b7486d_isBuiltinStrConvertable(jule::Ptr<_1c4621d32_TypeKind>* _162633_t) {
	return (((!(_1c4b463cd_Void((*(_162633_t)).ptr()))) && (_1c4b60260_Fn((*(_162633_t)).ptr()) == nullptr)) && (_1c4b60c11_Tup((*(_162633_t)).ptr()) == nullptr));;
}



inline jule::Str _1c4b74ae3_buildLinkPathByTokens(jule::Slice<jule::Ptr<_2039861ab_Token>>* _163027_tokens) {
	jule::Str _163113_s = (*(_163027_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_163027_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ad05e6cb:;
		if (it != expr_end) {
			jule::Ptr<_2039861ab_Token> *_163212_token = it;
			{
				(_163113_s).append("::", 2);
				_163113_s+=(*(_163212_token)).get()._field_Kind;
			}
			_iter_next_1ad05e6cb:;
			++it;
			goto _iter_begin_1ad05e6cb;
		}
		_iter_end_1ad05e6cb:;
	};
	return _163113_s;;
}



inline jule::Ptr<_1c4b6197b_Prim> _1c4b74e9a_buildPrimType(jule::Str _163918_kind) {
	return jule::new_ptr<_1c4b6197b_Prim>(_1c4b6197b_Prim{._field_Kind=_163918_kind});;
}



inline jule::Ptr<_1c4a86ebc_Struct> _1c4b75242_getStructFromKind(jule::Ptr<_1c4621d32_TypeKind> _164526_k) {
	{
		
		if ((_164526_k == nullptr)) {
			_case_begin_1ad0608ca:;
			{
				return nullptr;;
			}
		}
		else if ((_1c4b604c4_Struct(_164526_k.ptr()) != nullptr)) {
			_case_begin_1ad060941:;
			{
				return _1c4b604c4_Struct(_164526_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1c4b5e58e_Sptr(_164526_k.ptr()) != nullptr)) {
			_case_begin_1ad0609a7:;
			{
				return _1c4b75242_getStructFromKind(_1c4b5e58e_Sptr(_164526_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1c4b5eeeb_Slc(_164526_k.ptr()) != nullptr)) {
			_case_begin_1ad060a1d:;
			{
				return _1c4b75242_getStructFromKind(_1c4b5eeeb_Slc(_164526_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1c4b5ec87_Arr(_164526_k.ptr()) != nullptr)) {
			_case_begin_1ad060ca4:;
			{
				return _1c4b75242_getStructFromKind(_1c4b5ec87_Arr(_164526_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1c4b5e6c1_Ptr(_164526_k.ptr()) != nullptr)) {
			_case_begin_1ad060d1a:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1ad060864:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad05edd5:;
	};
}



inline jule::Bool _1c4b754d9_isPrim(jule::Str _166811_kind) {
	return (((((((((((((((_166811_kind.equal("i8", 2) || _166811_kind.equal("i16", 3)) || _166811_kind.equal("i32", 3)) || _166811_kind.equal("i64", 3)) || _166811_kind.equal("u8", 2)) || _166811_kind.equal("u16", 3)) || _166811_kind.equal("u32", 3)) || _166811_kind.equal("u64", 3)) || _166811_kind.equal("f32", 3)) || _166811_kind.equal("f64", 3)) || _166811_kind.equal("int", 3)) || _166811_kind.equal("uint", 4)) || _166811_kind.equal("uintptr", 7)) || _166811_kind.equal("bool", 4)) || _166811_kind.equal("str", 3)) || _166811_kind.equal("any", 3));;
}



inline void _1c4b75792_applyImplicitCast(jule::Ptr<_1c4621d32_TypeKind>* _168727_dest, jule::Ptr<_1c45e6e17_Data>* _168749_d) {
	if (_1c4b4629b_IsNil((*(_168749_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1c4b6197b_Prim> _16919_destPrim = _1c4b5e45c_Prim((*(_168727_dest)).ptr());;
	jule::Ptr<_1c4b6197b_Prim> _16929_prim = _1c4b5e45c_Prim((*(_168749_d)).get()._field_Kind.ptr());;
	if ((_16919_destPrim != nullptr)) {
		if (_1c4b64e24_IsAny(_16919_destPrim.ptr())) {
			if (((_16929_prim == nullptr) || (!(_1c4b64e24_IsAny(_16929_prim.ptr()))))) {
				_1c461e527_applyCastKind(_168749_d, _168727_dest);
			};
			return;;
		};
		if (((((((!(_1c4b4e6b1_CppLinked((*(_168749_d)).get()._field_Kind.ptr()))) && (!((*(_168749_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_168749_d)).get()._field_Lvalue))) && (!(_1c45e77ca_IsConst((*(_168749_d)).ptr())))) && (_16929_prim != nullptr)) && _1c3177a32_IsNum(_16929_prim.get()._field_Kind))) {
			_1c461e527_applyCastKind(_168749_d, _168727_dest);
		};
		return;;
	};
	jule::Ptr<_1c4ac306e_Trait> _17119_dt = _1c4b60738_Trait((*(_168727_dest)).ptr());;
	if ((_17119_dt != nullptr)) {
		jule::Ptr<_1c4ac306e_Trait> _171313_bt = _1c4b60738_Trait((*(_168749_d)).get()._field_Kind.ptr());;
		if (((_171313_bt == nullptr) || (_171313_bt != _17119_dt))) {
			_1c461e26e_applyCastKindModel(_168749_d, _168727_dest);
			return;;
		};
	};
	if (((_1c4b5ea23_TypeEnum((*(_168727_dest)).ptr()) != nullptr) && (_1c4b5ea23_TypeEnum((*(_168749_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1c461e26e_applyCastKindModel(_168749_d, _168727_dest);
		return;;
	};
}



inline __jule_tuple_x_1c45e20dd_SymbolTable__jule_tuple_s_1c2220900_Log _1c4b7890a_buildSymbols(jule::Ptr<_1c4a59b93_Ast>* _1622_ast, jule::Trait<_1c4aebe77_Importer>* _1638_importer, jule::Ptr<_1c4abc4ca_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1c45e20dd_SymbolTable__jule_tuple_s_1c2220900_Log __jule_func_result;
	jule::Ptr<_1c4abc4ca_symbolBuilder> _1713_sb = jule::new_ptr<_1c4abc4ca_symbolBuilder>(_1c4abc4ca_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1c4ac247a_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c4b02a82_Package__jule_tuple_s_1c2220900_Log _1c4b78d39_analyzePackage(jule::Slice<jule::Ptr<_1c4a59b93_Ast>>* _3024_files, jule::Trait<_1c4aebe77_Importer>* _3044_importer, jule::I32* _3065_flags) {
	__jule_tuple_x_1c4b02a82_Package__jule_tuple_s_1c2220900_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1c45e20dd_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad15c455:;
		if (it != expr_end) {
			jule::Ptr<_1c4a59b93_Ast> _3317_f = *it;
			{
				jule::Ptr<_1c45e20dd_SymbolTable> _3418_table;;
				jule::Slice<_1c2220900_Log> _3429_errors;;
				({
					__jule_tuple_x_1c45e20dd_SymbolTable__jule_tuple_s_1c2220900_Log __jule_assign_result = _1c4b7890a_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_1ad15c455:;
			++it;
			goto _iter_begin_1ad15c455;
		}
		_iter_end_1ad15c455:;
	};
	jule::Ptr<_1c4b07c74_Sema> _4113_sema = jule::new_ptr<_1c4b07c74_Sema>(_1c4b07c74_Sema{._field_flags=(*(_3065_flags))});;
	_1c4b29229_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4b02a82_Package> _4913_pkg = jule::new_ptr<_1c4b02a82_Package>(_1c4b02a82_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _4913_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c4b02a82_Package__jule_tuple_s_1c2220900_Log _1c4b79224_AnalyzePackage(jule::Slice<jule::Ptr<_1c4a59b93_Ast>> _7323_files, jule::Trait<_1c4aebe77_Importer> _7342_importer, jule::I32 _7362_flags) {
	__jule_tuple_x_1c4b02a82_Package__jule_tuple_s_1c2220900_Log __jule_func_result;
	if ((_7323_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4b02a82_Package> _7714_package;;
	jule::Slice<_1c2220900_Log> _7727_logs;;
	({
		__jule_tuple_x_1c4b02a82_Package__jule_tuple_s_1c2220900_Log __jule_assign_result = _1c4b78d39_analyzePackage(&(_7323_files), &(_7342_importer), &(_7362_flags));
		_7714_package = __jule_assign_result.__jule_result_arg0;
		_7727_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7714_package;
	__jule_func_result.__jule_result_arg1 = _7727_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1c4ab39ee_FnIns> _1c4b852da_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ad165d10:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _2620_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c18e40_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ad1664c5:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _2920_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c1932a_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1ad1665b3:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _3220_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c19715_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1ad166629:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _3520_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c19b00_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1ad16610c:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _3820_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c1a21b_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1ad166173:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _4120_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c1a606_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1ad1661ea:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _4420_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c1b409_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ad166272:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _4720_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c1c608_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ad1666a1:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _5020_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c1d175_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1ad166728:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _5320_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c1d9e4_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1ad1667a0:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _5620_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c1ddce_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1ad166827:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _5920_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c1e495_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1ad165e97:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad165ded:;
	};
}



inline jule::Ptr<_1c4701230_TypeAlias> _1c4b86e24_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1ad16dcd5:;
			{
				static jule::Ptr<_1c4701230_TypeAlias> _6920_t = jule::new_ptr<_1c4701230_TypeAlias>(_1c4701230_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1ad16dd4b:;
			{
				static jule::Ptr<_1c4701230_TypeAlias> _7920_t = jule::new_ptr<_1c4701230_TypeAlias>(_1c4701230_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1c4b610b8_TypeSymbol>(_1c4b610b8_TypeSymbol{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;;
			}
		}
		else {
			_case_begin_1ad16d71e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad16d246:;
	};
}



inline jule::Any _1c4b8266c_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_1c4ab39ee_FnIns> _9413_f = _1c4b852da_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f, &__jule_any_type7);;
	};
	jule::Ptr<_1c4701230_TypeAlias> _9813_ta = _1c4b86e24_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _1c4b8b7ec_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1ad171c61:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _10820_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c20dd1_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1ad17246a:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _11120_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c212bb_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ad171a30:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad171e3c:;
	};
}



inline jule::Any _1c4b8a9a5_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1ad173ceb:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _12120_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c1e808_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1ad173d62:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _12420_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c1ec26_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1ad173b20:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _12720_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c20144_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ad172080:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad172d61:;
	};
}



inline jule::Any _1c4b8aad7_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1ad1760b7:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _13720_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c20573_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1ad17612d:;
			{
				static jule::Ptr<_1c4ab39ee_FnIns> _14020_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_Decl=jule::new_ptr<_1c4ab22e4_Fn>(_1c4ab22e4_Fn{._field_Generics=jule::Slice<jule::Ptr<_1c4a9b630_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c20991_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ad173dc8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad17512c:;
	};
}



inline jule::Any _1c4b82a68_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1ad177edc:;
			{
				return _1c4b8b7ec_findBuiltinDefStdDebug(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1ad178053:;
			{
				return _1c4b8a9a5_findBuiltinDefStdMem(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1ad177d11:;
			{
				return _1c4b8aad7_findBuiltinDefStdJuleIntegrated(_15242_ident);;
			}
		}
		else {
			_case_begin_1ad177904:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad176a13:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c18071_builtinCallerCommonPlain(jule::Ptr<_1c45e8985_Eval>* _16534_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _16549_fc, jule::Ptr<_1c45e6e17_Data>* _16571_d) {
	jule::Ptr<_1c4ab39ee_FnIns> _16613_f = _1c4b60260_Fn((*(_16571_d)).get()._field_Kind.ptr());;
	_1c45d89db_fnCallArgChecker _16813_fcac = _1c45d89db_fnCallArgChecker{._field_e=(*(_16534_e)), ._field_args=(*(_16549_fc)).get()._field_Args, ._field_errorToken=(*(_16549_fc)).get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1c45dada6_check(&_16813_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1c4aac5ec_FnCallExprModel> _17913_model = jule::new_ptr<_1c4aac5ec_FnCallExprModel>(_1c4aac5ec_FnCallExprModel{._field_Token=(*(_16549_fc)).get()._field_Token, ._field_Func=_16613_f, ._field_Expr=(*(_16571_d)).get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		(*(_16571_d))=_1c461e725_buildVoidData();
	} else {
		(*(_16571_d))=jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	(*(_16571_d)).get()._field_Model=jule::Any(_17913_model, &__jule_any_type34);
	return (*(_16571_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c18329_builtinCallerCommon(jule::Ptr<_1c45e8985_Eval>* _19829_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _19844_fc, jule::Ptr<_1c45e6e17_Data>* _19866_d) {
	return _1c4c18071_builtinCallerCommonPlain(_19829_e, _19844_fc, _19866_d);;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c18714_builtinCallerCommonMut(jule::Ptr<_1c45e8985_Eval>* _20232_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _20247_fc, jule::Ptr<_1c45e6e17_Data>* _20269_d) {
	if ((!((*(_20269_d)).get()._field_Mutable))) {
		_1c45e8e91_pushErr((*(_20232_e)).ptr(), (*(_20247_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _1c4c18329_builtinCallerCommon(_20232_e, _20247_fc, _20269_d);;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c18a55_builtinCallerError(jule::Ptr<_1c45e8985_Eval>* _20928_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _20943_fc) {
	if (((*(_20943_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_20943_fc)).get()._field_Args.len() > 1LL)) {
		_1c45e8e91_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _21713_expr = _1c46143a7_evalExpr((*(_20928_e)), (*(_20943_fc)).get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;;
	};
	if (_1c45e7302_IsNil(_21713_expr.ptr())) {
		_1c45e8e91_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c45e6e17_Data> _22613_d = _1c461e725_buildVoidData();;
	_22613_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4ab10a1_BuiltinErrorCallExprModel>(_1c4ab10a1_BuiltinErrorCallExprModel{._field_Err=_21713_expr}), &__jule_any_type22);
	return _22613_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c18e40_builtinCallerOut(jule::Ptr<_1c45e8985_Eval>* _23126_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _23141_fc, jule::Ptr<_1c45e6e17_Data>* ) {
	if (((*(_23141_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_23141_fc)).get()._field_Args.len() > 1LL)) {
		_1c45e8e91_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _24013_expr = _1c46143a7_evalExpr((*(_23126_e)), (*(_23141_fc)).get()._field_Args[0LL]);;
	if ((_24013_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c4b7486d_isBuiltinStrConvertable(&(_24013_expr.get()._field_Kind))))) {
		_1c45e8e91_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c45e6e17_Data> _25013_d = _1c461e725_buildVoidData();;
	_25013_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4aae511_BuiltinOutCallExprModel>(_1c4aae511_BuiltinOutCallExprModel{._field_Expr=_24013_expr.get()._field_Model, }), &__jule_any_type27);
	return _25013_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1932a_builtinCallerOutln(jule::Ptr<_1c45e8985_Eval>* _25528_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _25543_fc, jule::Ptr<_1c45e6e17_Data>* _25565_d) {
	(*(_25565_d))=_1c4c18e40_builtinCallerOut(_25528_e, _25543_fc, _25565_d);
	if (((*(_25565_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_25565_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4aae6ed_BuiltinOutlnCallExprModel>(_1c4aae6ed_BuiltinOutlnCallExprModel{._field_Expr=(*(_25565_d)).get()._field_Model.cast_ptr<_1c4aae511_BuiltinOutCallExprModel>(&__jule_any_type27).get()._field_Expr, }), &__jule_any_type28);
	return (*(_25565_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c19715_builtinCallerNew(jule::Ptr<_1c45e8985_Eval>* _26726_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _26741_fc, jule::Ptr<_1c45e6e17_Data>* _26763_d) {
	if (((*(_26741_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_26741_fc)).get()._field_Args.len() > 2LL)) {
		_1c45e8e91_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _27613_t = _1c4613c8b_evalExprKind((*(_26726_e)), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_27613_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_27613_t.get()._field_Decl))) {
		_1c45e8e91_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1c4b7430c_isValidForSptrType(&(_27613_t.get()._field_Kind))))) {
		jule::Ptr<_1c4aab255_StructIns> _28717_s = _1c4b604c4_Struct(_27613_t.get()._field_Kind.ptr());;
		if ((((_28717_s != nullptr) && (_28717_s.get()._field_Decl != nullptr)) && _28717_s.get()._field_Decl.get()._field_CppLinked)) {
			_1c45e8e91_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_26763_d)).get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(jule::new_ptr<_1c4b65210_Sptr>(_1c4b65210_Sptr{._field_Elem=_27613_t.get()._field_Kind}), 7)});
	if (((*(_26741_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1c4621d32_TypeKind> _30117_old = (*(_26726_e)).get()._field_prefix;;
		(*(_26726_e)).get()._field_prefix=_27613_t.get()._field_Kind;
		jule::Ptr<_1c45e6e17_Data> _30417_init = _1c46143a7_evalExpr((*(_26726_e)), (*(_26741_fc)).get()._field_Args[1LL]);;
		(*(_26726_e)).get()._field_prefix=_30117_old;
		if ((_30417_init != nullptr)) {
			jule::Ptr<_2039861ab_Token> _30921_token = (*(_26741_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_1c4b15ad9_checkValidityForInitExpr((*(_26726_e)).get()._field_s, (!((*(_26726_e)).get()._field_immutable)), false, &(_27613_t.get()._field_Kind), &(_30417_init), &(_30921_token));
			_1c4b12bc4_checkAssignType((*(_26726_e)).get()._field_s, false, &(_27613_t.get()._field_Kind), &(_30417_init), _30921_token);
			(*(_26763_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4aaeac7_BuiltinNewCallExprModel>(_1c4aaeac7_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, ._field_Init=_30417_init.get()._field_Model}), &__jule_any_type119);
		};
	} else {
		(*(_26763_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4aaeac7_BuiltinNewCallExprModel>(_1c4aaeac7_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, }), &__jule_any_type119);
	};
	return (*(_26763_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c19b00_builtinCallerPanic(jule::Ptr<_1c45e8985_Eval>* _32928_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _32943_fc, jule::Ptr<_1c45e6e17_Data>* ) {
	if (((*(_32943_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_32943_fc)).get()._field_Args.len() > 1LL)) {
		_1c45e8e91_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _33813_expr = _1c46143a7_evalExpr((*(_32928_e)), (*(_32943_fc)).get()._field_Args[0LL]);;
	if ((_33813_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1c4b5e45c_Prim(_33813_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1c4b64bb0_IsStr(_1c4b5e45c_Prim(_33813_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1c45e8e91_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c45e6e17_Data> _34713_d = _1c461e725_buildVoidData();;
	_34713_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4aaecb4_BuiltinPanicCallExprModel>(_1c4aaecb4_BuiltinPanicCallExprModel{._field_Token=(*(_32943_fc)).get()._field_Token, ._field_Expr=_33813_expr.get()._field_Model}), &__jule_any_type29);
	return _34713_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1a21b_builtinCallerMake(jule::Ptr<_1c45e8985_Eval>* _35527_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _35542_fc, jule::Ptr<_1c45e6e17_Data>* _35564_d) {
	if (((*(_35542_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_35542_fc)).get()._field_Args.len() == 1LL)) {
			_1c45e8e91_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_1c45e8e91_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c45e6e17_Data> _36513_t = _1c4613c8b_evalExprKind((*(_35527_e)), (*(_35542_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_36513_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_36513_t.get()._field_Decl))) {
		_1c45e8e91_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_35542_fc)).get()._field_Args.len() > 3LL)) {
		_1c45e8e91_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_35564_d)).get()._field_Kind=_36513_t.get()._field_Kind;
	jule::Ptr<_1c45e6e17_Data> _38113_lenExpr = _1c46143a7_evalExpr(_1c4b123bb_evalp((*(_35527_e)).get()._field_s, (*(_35527_e)).get()._field_lookup, _36513_t.get()._field_Kind), (*(_35542_fc)).get()._field_Args[1LL]);;
	if ((_38113_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1c4602582_checkIntegerIndexingByData((*(_35527_e)).ptr(), &(_38113_lenExpr), (*(_35542_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1c4ab018d_BuiltinMakeCallExprModel> _38813_model = jule::new_ptr<_1c4ab018d_BuiltinMakeCallExprModel>(_1c4ab018d_BuiltinMakeCallExprModel{._field_Kind=_36513_t.get()._field_Kind, ._field_Len=_38113_lenExpr.get()._field_Model, });;
	(*(_35564_d)).get()._field_Model=jule::Any(_38813_model, &__jule_any_type120);
	if (((*(_35542_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1c45e6e17_Data> _39417_capExpr = _1c46143a7_evalExpr(_1c4b123bb_evalp((*(_35527_e)).get()._field_s, (*(_35527_e)).get()._field_lookup, _36513_t.get()._field_Kind), (*(_35542_fc)).get()._field_Args[2LL]);;
		if ((_39417_capExpr == nullptr)) {
			return (*(_35564_d));;
		};
		_1c4602582_checkIntegerIndexingByData((*(_35527_e)).ptr(), &(_39417_capExpr), (*(_35542_fc)).get()._field_Args[2LL].get()._field_Token);
		_38813_model.get()._field_Cap=_39417_capExpr.get()._field_Model;
	};
	return (*(_35564_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1a606_builtinCallerAppend(jule::Ptr<_1c45e8985_Eval>* _40429_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _40444_fc, jule::Ptr<_1c45e6e17_Data>* _40466_d) {
	if (((*(_40444_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_40444_fc)).get()._field_Args.len() == 1LL)) {
			_1c45e8e91_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1c45e8e91_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c45e6e17_Data> _41413_t = _1c46143a7_evalExpr((*(_40429_e)), (*(_40444_fc)).get()._field_Args[0LL]);;
	if ((_41413_t == nullptr)) {
		return nullptr;;
	};
	if ((_1c4b5eeeb_Slc(_41413_t.get()._field_Kind.ptr()) == nullptr)) {
		_1c45e8e91_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4ab39ee_FnIns> _42413_f = jule::new_ptr<_1c4ab39ee_FnIns>(_1c4ab39ee_FnIns{._field_Params=jule::Slice<jule::Ptr<_1c4ab2b30_ParamIns>>::make({jule::new_ptr<_1c4ab2b30_ParamIns>(_1c4ab2b30_ParamIns{._field_Decl=jule::new_ptr<_1c4ab2107_Param>(_1c4ab2107_Param{._field_Mutable=true, }), ._field_Kind=_41413_t.get()._field_Kind}),jule::new_ptr<_1c4ab2b30_ParamIns>(_1c4ab2b30_ParamIns{._field_Decl=jule::new_ptr<_1c4ab2107_Param>(_1c4ab2107_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1c4b5eeeb_Slc(_41413_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41413_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1c45e6e17_Data>(jule::Ptr<_1c45e8985_Eval>*,jule::Ptr<_1c4a9783a_FnCallExpr>*,jule::Ptr<_1c45e6e17_Data>*)>(_1c4c18071_builtinCallerCommonPlain), });;
	(*(_40466_d)).get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_42413_f, 1)});
	(*(_40466_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4aade4a_CommonIdentExprModel>(_1c4aade4a_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_40466_d))=_1c4c18071_builtinCallerCommonPlain(_40429_e, _40444_fc, _40466_d);
	if (((*(_40466_d)) != nullptr)) {
		jule::Ptr<_1c4aac5ec_FnCallExprModel> _45217_model = (*(_40466_d)).get()._field_Model.cast_ptr<_1c4aac5ec_FnCallExprModel>(&__jule_any_type34);;
		(*(_40466_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4ab037a_BuiltinAppendCallExprModel>(_1c4ab037a_BuiltinAppendCallExprModel{._field_Dest=_45217_model.get()._field_Args[0LL], ._field_Elements=_45217_model.get()._field_Args[1LL]}), &__jule_any_type25);
	};
	return (*(_40466_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1aa8a_callerCopySlice(jule::Ptr<_1c45e6e17_Data>* _46125_dest, jule::Ptr<_1c45e8985_Eval>* _46143_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _46158_fc, jule::Ptr<_1c45e6e17_Data>* _46180_d) {
	if ((!((*(_46125_dest)).get()._field_Mutable))) {
		_1c45e8e91_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c45e6e17_Data> _46613_src = _1c46143a7_evalExpr((*(_46143_e)), (*(_46158_fc)).get()._field_Args[1LL]);;
	if ((_46613_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c4b65b6c_Slc> _47013_slc = _1c4b5eeeb_Slc(_46613_src.get()._field_Kind.ptr());;
	if ((_47013_slc != nullptr)) {
		if (((!(_46613_src.get()._field_Mutable)) && _1c4b5cdd9_Mutable(_47013_slc.get()._field_Elem.ptr()))) {
			_1c45e8e91_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1c4622580_Equal((*(_46125_dest)).get()._field_Kind, _46613_src.get()._field_Kind)))) {
			_1c45e8e91_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_46125_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_1c4b6197b_Prim> _48013_destPrim = _1c4b5e45c_Prim(_1c4b5eeeb_Slc((*(_46125_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1c4b6197b_Prim> _48113_prim = _1c4b5e45c_Prim(_46613_src.get()._field_Kind.ptr());;
		if (((((_48013_destPrim == nullptr) || (_48113_prim == nullptr)) || (!(_1c4b64bb0_IsStr(_48113_prim.ptr())))) || (!(_1c4b63285_IsU8(_48013_destPrim.ptr()))))) {
			_1c45e8e91_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_46125_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_46180_d)).get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)});
	(*(_46180_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4ab0db4_BuiltinCopyCallExprModel>(_1c4ab0db4_BuiltinCopyCallExprModel{._field_Dest=(*(_46125_dest)), ._field_Src=_46613_src}), &__jule_any_type31);
	return (*(_46180_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1b01e_callerCopyStr(jule::Ptr<_1c45e6e17_Data>* _49523_dest, jule::Ptr<_1c45e8985_Eval>* _49541_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _49556_fc, jule::Ptr<_1c45e6e17_Data>* _49578_d) {
	if ((!((*(_49523_dest)).get()._field_Mutable))) {
		_1c45e8e91_pushErr((*(_49541_e)).ptr(), (*(_49556_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c45e6e17_Data> _50013_src = _1c46143a7_evalExpr((*(_49541_e)), (*(_49556_fc)).get()._field_Args[1LL]);;
	if ((_50013_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1c4b5e45c_Prim(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1bb10c:;
			{
				if (_1c4b64bb0_IsStr(_1c4b5e45c_Prim(_50013_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1c4b5eeeb_Slc(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1bb173:;
			{
				jule::Ptr<_1c4b65b6c_Slc> _51017_slc = _1c4b5eeeb_Slc(_50013_src.get()._field_Kind.ptr());;
				if (((_1c4b5e45c_Prim(_51017_slc.get()._field_Elem.ptr()) != nullptr) && _1c4b63285_IsU8(_1c4b5e45c_Prim(_51017_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1ad1baddc:;
	};
	_1c45e8e91_pushErr((*(_49541_e)).ptr(), (*(_49556_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str((*(_49523_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1c4622272_Str(_50013_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_49578_d)).get()._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("int", 3)), 6)});
	(*(_49578_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4ab0db4_BuiltinCopyCallExprModel>(_1c4ab0db4_BuiltinCopyCallExprModel{._field_Dest=(*(_49523_dest)), ._field_Src=_50013_src}), &__jule_any_type31);
	return (*(_49578_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1b409_builtinCallerCopy(jule::Ptr<_1c45e8985_Eval>* _52527_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _52542_fc, jule::Ptr<_1c45e6e17_Data>* _52564_d) {
	if (((*(_52542_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_52542_fc)).get()._field_Args.len() == 1LL)) {
			_1c45e8e91_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1c45e8e91_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_52542_fc)).get()._field_Args.len() > 2LL)) {
		_1c45e8e91_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _53813_dest = _1c46143a7_evalExpr((*(_52527_e)), (*(_52542_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_53813_dest == nullptr)) {
			_case_begin_1ad1c62d2:;
			{
				return nullptr;;
			}
		}
		else if ((_1c4b5eeeb_Slc(_53813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1c6348:;
			{
				return _1c4c1aa8a_callerCopySlice(&(_53813_dest), _52527_e, _52542_fc, _52564_d);;
			}
		}
		else if (((_1c4b5e45c_Prim(_53813_dest.get()._field_Kind.ptr()) != nullptr) && _1c4b64bb0_IsStr(_1c4b5e45c_Prim(_53813_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad1c6139:;
			{
				return _1c4c1b01e_callerCopyStr(&(_53813_dest), _52527_e, _52542_fc, _52564_d);;
			}
		}
		else {
			_case_begin_1ad1c538b:;
			{
				_1c45e8e91_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad1c5325:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1b74a_callerLenSlice(jule::Ptr<_1c45e6e17_Data>* _55224_expr, jule::Ptr<_1c45e6e17_Data>* _55242_d) {
	(*(_55242_d)).get()._field_Kind=_1c45e0e99_lenKind();
	(*(_55242_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4ab0567_BuiltinLenCallExprModel>(_1c4ab0567_BuiltinLenCallExprModel{._field_Expr=(*(_55224_expr))}), &__jule_any_type121);
	return (*(_55242_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1ba8b_callerLenMap(jule::Ptr<_1c45e6e17_Data>* _56022_expr, jule::Ptr<_1c45e6e17_Data>* _56040_d) {
	(*(_56040_d)).get()._field_Kind=_1c45e0e99_lenKind();
	(*(_56040_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4ab0567_BuiltinLenCallExprModel>(_1c4ab0567_BuiltinLenCallExprModel{._field_Expr=(*(_56022_expr))}), &__jule_any_type121);
	return (*(_56040_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1bdcc_callerLenArr(jule::Ptr<_1c45e6e17_Data>* _56822_expr, jule::Ptr<_1c45e6e17_Data>* _56840_d) {
	(*(_56840_d)).get()._field_Kind=_1c45e0e99_lenKind();
	(*(_56840_d)).get()._field_Constant=static__1c2615e5a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1c4b5ec87_Arr((*(_56822_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_56840_d)).get()._field_Model=jule::Any((*(_56840_d)).get()._field_Constant, &__jule_any_type47);
	return (*(_56840_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1c21d_callerLenStr(jule::Ptr<_1c45e6e17_Data>* _57522_expr, jule::Ptr<_1c45e6e17_Data>* _57540_d) {
	(*(_57540_d)).get()._field_Kind=_1c45e0e99_lenKind();
	if (_1c45e77ca_IsConst((*(_57522_expr)).ptr())) {
		(*(_57540_d)).get()._field_Constant=static__1c2615e5a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1c3178192_ReadStr((*(_57522_expr)).get()._field_Constant.ptr()).len())));
		(*(_57540_d)).get()._field_Model=jule::Any((*(_57540_d)).get()._field_Constant, &__jule_any_type47);
	} else {
		(*(_57540_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4ab0567_BuiltinLenCallExprModel>(_1c4ab0567_BuiltinLenCallExprModel{._field_Expr=(*(_57522_expr))}), &__jule_any_type121);
	};
	return (*(_57540_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1c608_builtinCallerLen(jule::Ptr<_1c45e8985_Eval>* _58826_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _58841_fc, jule::Ptr<_1c45e6e17_Data>* _58863_d) {
	if (((*(_58841_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_58841_fc)).get()._field_Args.len() > 1LL)) {
		_1c45e8e91_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _59613_dest = _1c46143a7_evalExpr((*(_58826_e)), (*(_58841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_59613_dest == nullptr)) {
			_case_begin_1ad1d1056:;
			{
				return nullptr;;
			}
		}
		else if (_59613_dest.get()._field_Decl) {
			_case_begin_1ad1d10bc:;
			{
				_1c45e8e91_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c4b5eeeb_Slc(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1d0dad:;
			{
				return _1c4c1b74a_callerLenSlice(&(_59613_dest), _58863_d);;
			}
		}
		else if ((_1c4b5ec87_Arr(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1d0e35:;
			{
				return _1c4c1bdcc_callerLenArr(&(_59613_dest), _58863_d);;
			}
		}
		else if ((_1c4b6099c_Map(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1d0176:;
			{
				return _1c4c1ba8b_callerLenMap(&(_59613_dest), _58863_d);;
			}
		}
		else if (((_1c4b5e45c_Prim(_59613_dest.get()._field_Kind.ptr()) != nullptr) && _1c4b64bb0_IsStr(_1c4b5e45c_Prim(_59613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad1d01dc:;
			{
				return _1c4c1c21d_callerLenStr(&(_59613_dest), _58863_d);;
			}
		}
		else {
			_case_begin_1ad1d0110:;
			{
				_1c45e8e91_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad1d0099:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1c949_callerCapSlice(jule::Ptr<_1c45e6e17_Data>* _61724_expr, jule::Ptr<_1c45e6e17_Data>* _61742_d) {
	(*(_61742_d)).get()._field_Kind=_1c45e0e99_lenKind();
	(*(_61742_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4ab0754_BuiltinCapCallExprModel>(_1c4ab0754_BuiltinCapCallExprModel{._field_Expr=(*(_61724_expr))}), &__jule_any_type122);
	return (*(_61742_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1cc8a_callerCapStr(jule::Ptr<_1c45e6e17_Data>* _62522_expr, jule::Ptr<_1c45e6e17_Data>* _62540_d) {
	(*(_62540_d)).get()._field_Kind=_1c45e0e99_lenKind();
	if (_1c45e77ca_IsConst((*(_62522_expr)).ptr())) {
		(*(_62540_d)).get()._field_Constant=static__1c2615e5a_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1c3178192_ReadStr((*(_62522_expr)).get()._field_Constant.ptr()).cap())));
		(*(_62540_d)).get()._field_Model=jule::Any((*(_62540_d)).get()._field_Constant, &__jule_any_type47);
	} else {
		(*(_62540_d)).get()._field_Model=jule::Any(jule::new_ptr<_1c4ab0754_BuiltinCapCallExprModel>(_1c4ab0754_BuiltinCapCallExprModel{._field_Expr=(*(_62522_expr))}), &__jule_any_type122);
	};
	return (*(_62540_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1d175_builtinCallerCap(jule::Ptr<_1c45e8985_Eval>* _63826_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _63841_fc, jule::Ptr<_1c45e6e17_Data>* _63863_d) {
	if (((*(_63841_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_63841_fc)).get()._field_Args.len() > 1LL)) {
		_1c45e8e91_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _64613_dest = _1c46143a7_evalExpr((*(_63826_e)), (*(_63841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_64613_dest == nullptr)) {
			_case_begin_1ad1dab98:;
			{
				return nullptr;;
			}
		}
		else if (_64613_dest.get()._field_Decl) {
			_case_begin_1ad1dac0e:;
			{
				_1c45e8e91_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c4b5eeeb_Slc(_64613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1daa00:;
			{
				return _1c4c1c949_callerCapSlice(&(_64613_dest), _63863_d);;
			}
		}
		else if (((_1c4b5e45c_Prim(_64613_dest.get()._field_Kind.ptr()) != nullptr) && _1c4b64bb0_IsStr(_1c4b5e45c_Prim(_64613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ad1daa66:;
			{
				return _1c4c1cc8a_callerCapStr(&(_64613_dest), _63863_d);;
			}
		}
		else {
			_case_begin_1ad1d9c52:;
			{
				_1c45e8e91_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad1d9bdb:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1d609_callerDeleteMap(jule::Ptr<_1c45e8985_Eval>* _66325_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _66340_fc, jule::Ptr<_1c45e6e17_Data>* _66362_expr, jule::Ptr<_1c45e6e17_Data>* _66380_d) {
	if ((!((*(_66362_expr)).get()._field_Mutable))) {
		_1c45e8e91_pushErr((*(_66325_e)).ptr(), (*(_66340_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_66380_d))=_1c461e725_buildVoidData();
	jule::Ptr<_1c4aad653_BuiltinDeleteCallExprModel> _66813_model = jule::new_ptr<_1c4aad653_BuiltinDeleteCallExprModel>(_1c4aad653_BuiltinDeleteCallExprModel{._field_Dest=(*(_66362_expr)), });;
	if (((*(_66340_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1c45e6e17_Data> _67217_key = _1c46143a7_evalExpr((*(_66325_e)), (*(_66340_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_67217_key == nullptr)) {
				_case_begin_1ad1e2199:;
				{
					return nullptr;;
				}
			}
			else if (_67217_key.get()._field_Decl) {
				_case_begin_1ad1e0a05:;
				{
					_1c45e8e91_pushErr((*(_66325_e)).ptr(), (*(_66340_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1ad1e098e:;
				{
					;
					jule::Ptr<_1c4621d32_TypeKind> _68121_keyType = _1c4b6099c_Map((*(_66362_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1c4b12bc4_checkAssignType((*(_66325_e)).get()._field_s, false, &(_68121_keyType), &(_67217_key), (*(_66340_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1ad1e0928:;
		};
		_66813_model.get()._field_Key=_67217_key;
	};
	(*(_66380_d)).get()._field_Model=jule::Any(_66813_model, &__jule_any_type32);
	return (*(_66380_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1d9e4_builtinCallerDelete(jule::Ptr<_1c45e8985_Eval>* _69229_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _69244_fc, jule::Ptr<_1c45e6e17_Data>* _69266_d) {
	if (((*(_69244_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_69244_fc)).get()._field_Args.len() > 2LL)) {
		_1c45e8e91_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _70013_dest = _1c46143a7_evalExpr((*(_69229_e)), (*(_69244_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_70013_dest == nullptr)) {
			_case_begin_1ad1e7787:;
			{
				return nullptr;;
			}
		}
		else if (_70013_dest.get()._field_Decl) {
			_case_begin_1ad1e77ed:;
			{
				_1c45e8e91_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c4b6099c_Map(_70013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ad1e75de:;
			{
				return _1c4c1d609_callerDeleteMap(_69229_e, _69244_fc, &(_70013_dest), _69266_d);;
			}
		}
		else {
			_case_begin_1ad1e6841:;
			{
				_1c45e8e91_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ad1e67ca:;
	};
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1ddce_builtinCallerClone(jule::Ptr<_1c45e8985_Eval>* _71528_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _71543_fc, jule::Ptr<_1c45e6e17_Data>* ) {
	if (((*(_71543_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_71543_fc)).get()._field_Args.len() > 1LL)) {
		_1c45e8e91_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _72413_d = _1c4613c8b_evalExprKind((*(_71528_e)), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_72413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c4b5e1e8_SupportsCloning(_72413_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1c4b5eeeb_Slc(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1c4b6099c_Map(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1c4b5ec87_Arr(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1c4b5e58e_Sptr(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1ad1eca45:;
				{
					{
						_1c45e8e91_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_1c4b604c4_Struct(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1ad1ec3a2:;
				{
					{
						_1c45e8e91_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					};
				}
			}
			else {
				_case_begin_1ad1ec33b:;
				{
					{
						_1c45e8e91_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_1c4622272_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					};
				}
			}
			_match_end_1ad1ebe73:;
		};
	};
	_72413_d.get()._field_Mutable=true;
	_72413_d.get()._field_Model=jule::Any(jule::new_ptr<_1c4aae8da_BuiltinCloneCallExprModel>(_1c4aae8da_BuiltinCloneCallExprModel{._field_Expr=_72413_d.get()._field_Model}), &__jule_any_type26);
	return _72413_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1e495_builtinCallerAssert(jule::Ptr<_1c45e8985_Eval>* _75729_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _75744_fc, jule::Ptr<_1c45e6e17_Data>* ) {
	if (((*(_75744_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_75744_fc)).get()._field_Args.len() > 2LL)) {
		_1c45e8e91_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _76613_expr = _1c46143a7_evalExpr((*(_75729_e)), (*(_75744_fc)).get()._field_Args[0LL]);;
	if ((_76613_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1c4b5e45c_Prim(_76613_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1c4b6494b_IsBool(_1c4b5e45c_Prim(_76613_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1c45e8e91_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c4aaeea1_BuiltinAssertCallExprModel> _77513_model = jule::new_ptr<_1c4aaeea1_BuiltinAssertCallExprModel>(_1c4aaeea1_BuiltinAssertCallExprModel{._field_Token=(*(_75744_fc)).get()._field_Token, ._field_Expr=_76613_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_75744_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1c45e6e17_Data> _78317_log = _1c46143a7_evalExpr((*(_75729_e)), (*(_75744_fc)).get()._field_Args[1LL]);;
		if ((_78317_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1c45e77ca_IsConst(_78317_log.ptr()))) || (_1c4b5e45c_Prim(_78317_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1c4b64bb0_IsStr(_1c4b5e45c_Prim(_78317_log.get()._field_Kind.ptr()).ptr()))))) {
			_1c45e8e91_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_1c4622272_Str(_78317_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_77513_model.get()._field_Log=_1c3178192_ReadStr(_78317_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1c45e6e17_Data> _79613_d = _1c461e725_buildVoidData();;
	_79613_d.get()._field_Model=jule::Any(_77513_model, &__jule_any_type30);
	return _79613_d;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1e808_builtinCallerStdMemSizeOf(jule::Ptr<_1c45e8985_Eval>* _80135_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _80150_fc, jule::Ptr<_1c45e6e17_Data>* ) {
	jule::Ptr<_1c45e6e17_Data> _80213_result = jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if (((*(_80150_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_80135_e)).ptr(), (*(_80150_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _80213_result;;
	};
	if (((*(_80150_fc)).get()._field_Args.len() > 1LL)) {
		_1c45e8e91_pushErr((*(_80135_e)).ptr(), (*(_80150_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _81413_d = _1c4613c8b_evalExprKind((*(_80135_e)), (*(_80150_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_81413_d == nullptr)) {
		return _80213_result;;
	};
	_80213_result.get()._field_Model=jule::Any(jule::new_ptr<_1c4ab128d_SizeofExprModel>(_1c4ab128d_SizeofExprModel{._field_Expr=_81413_d.get()._field_Model}), &__jule_any_type123);
	return _80213_result;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c1ec26_builtinCallerStdMemAlignOf(jule::Ptr<_1c45e8985_Eval>* _82336_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _82351_fc, jule::Ptr<_1c45e6e17_Data>* ) {
	jule::Ptr<_1c45e6e17_Data> _82413_result = jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if (((*(_82351_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_82336_e)).ptr(), (*(_82351_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _82413_result;;
	};
	if (((*(_82351_fc)).get()._field_Args.len() > 1LL)) {
		_1c45e8e91_pushErr((*(_82336_e)).ptr(), (*(_82351_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _83613_d = _1c4613c8b_evalExprKind((*(_82336_e)), (*(_82351_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_83613_d == nullptr)) {
		return _82413_result;;
	};
	_82413_result.get()._field_Model=jule::Any(jule::new_ptr<_1c4ab147a_AlignofExprModel>(_1c4ab147a_AlignofExprModel{._field_Expr=_83613_d.get()._field_Model}), &__jule_any_type124);
	return _82413_result;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c20144_builtinCallerStdMemFree(jule::Ptr<_1c45e8985_Eval>* _84533_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _84548_fc, jule::Ptr<_1c45e6e17_Data>* ) {
	if (((*(_84548_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_84548_fc)).get()._field_Args.len() > 1LL)) {
		_1c45e8e91_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _85413_d = _1c4613c8b_evalExprKind((*(_84533_e)), (*(_84548_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_85413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c4b5e0b6_PerformsRC(_85413_d.get()._field_Kind.ptr())))) {
		_1c45e8e91_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c45e6e17_Data> _86313_result = _1c461e725_buildVoidData();;
	_86313_result.get()._field_Model=jule::Any(jule::new_ptr<_1c4ab1c2d_FreeExprModel>(_1c4ab1c2d_FreeExprModel{._field_Expr=_85413_d.get()._field_Model}), &__jule_any_type33);
	return _86313_result;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c20573_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1c45e8985_Eval>* _86845_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _86860_fc, jule::Ptr<_1c45e6e17_Data>* ) {
	if (((*(_86860_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_86860_fc)).get()._field_Args.len() > 1LL)) {
		_1c45e8e91_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1c45e6e17_Data> _87713_d = _1c4613c8b_evalExprKind((*(_86845_e)), (*(_86860_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_87713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c4b7486d_isBuiltinStrConvertable(&(_87713_d.get()._field_Kind))))) {
		_1c45e8e91_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c45e6e17_Data>(_1c45e6e17_Data{._field_Kind=jule::new_ptr<_1c4621d32_TypeKind>(_1c4621d32_TypeKind{._field_Kind=jule::Trait<_1c46218c0_Kind>(_1c4b74e9a_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=jule::Any(jule::new_ptr<_1c4ab1854_IntegratedToStrExprModel>(_1c4ab1854_IntegratedToStrExprModel{._field_Expr=_87713_d.get()._field_Model}), &__jule_any_type125), });;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c20991_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1c45e8985_Eval>* _89544_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _89559_fc, jule::Ptr<_1c45e6e17_Data>* _89581_d) {
	if ((!(_1c45e98cb_isUnsafe((*(_89544_e)).ptr())))) {
		_1c45e8e91_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_89559_fc)).get()._field_Args.len() < 1LL)) {
		_1c45e8e91_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c45e6e17_Data> _90513_argd = _1c46143a7_evalExpr((*(_89544_e)), (*(_89559_fc)).get()._field_Args[0LL]);;
	if ((_90513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1c4b5e45c_Prim(_90513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1c4b64bb0_IsStr(_1c4b5e45c_Prim(_90513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1c45e8e91_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1c4622272_Str(_90513_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_1c45e77ca_IsConst(_90513_argd.ptr()))) || (!(_1c3179380_IsStr(_90513_argd.get()._field_Constant.ptr()))))) {
		_1c45e8e91_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c45e6e17_Data> _92013_r = _1c461e725_buildVoidData();;
	jule::Ptr<_1c4ab39ee_FnIns> _92213_f = _1c4b60260_Fn((*(_89581_d)).get()._field_Kind.ptr());;
	if ((_92213_f.get()._field_Generics.len() > 0LL)) {
		_92013_r.get()._field_Kind=_92213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1c4ab1a41_BackendEmitExprModel> _92713_model = jule::new_ptr<_1c4ab1a41_BackendEmitExprModel>(_1c4ab1a41_BackendEmitExprModel{._field_Code=_1c3178192_ReadStr(_90513_argd.get()._field_Constant.ptr()), });;
	if (((*(_89559_fc)).get()._field_Args.len() > 1LL)) {
		_92713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_89559_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_89559_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ad2260bd:;
			if (it != expr_end) {
				jule::Ptr<_1c4a93858_Expr> _93321_arg = *it;
				{
					_90513_argd=_1c4613c8b_evalExprKind((*(_89544_e)), _93321_arg.get()._field_Kind);
					if ((_90513_argd == nullptr)) {
						return nullptr;;
					};
					_92713_model.get()._field_Exprs = jule::alloc_for_append(_92713_model.get()._field_Exprs,1);_92713_model.get()._field_Exprs.__push(_90513_argd.get()._field_Model);;
				}
				_iter_next_1ad2260bd:;
				++it;
				goto _iter_begin_1ad2260bd;
			}
			_iter_end_1ad2260bd:;
		};
	};
	_92013_r.get()._field_Model=jule::Any(_92713_model, &__jule_any_type24);
	return _92013_r;;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c20dd1_builtinCallerStdDebugOut(jule::Ptr<_1c45e8985_Eval>* _94634_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _94649_fc, jule::Ptr<_1c45e6e17_Data>* _94671_d) {
	(*(_94671_d))=_1c4c18e40_builtinCallerOut(_94634_e, _94649_fc, _94671_d);
	if (((*(_94671_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_94671_d)).get()._field_Model.cast_ptr<_1c4aae511_BuiltinOutCallExprModel>(&__jule_any_type27).get()._field_Debug=true;
	return (*(_94671_d));;
}



inline jule::Ptr<_1c45e6e17_Data> _1c4c212bb_builtinCallerStdDebugOutln(jule::Ptr<_1c45e8985_Eval>* _95536_e, jule::Ptr<_1c4a9783a_FnCallExpr>* _95551_fc, jule::Ptr<_1c45e6e17_Data>* _95573_d) {
	(*(_95573_d))=_1c4c1932a_builtinCallerOutln(_95536_e, _95551_fc, _95573_d);
	if (((*(_95573_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_95573_d)).get()._field_Model.cast_ptr<_1c4aae6ed_BuiltinOutlnCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_95573_d));;
}



inline jule::Bool _1c4ce9707_FindModuleFile(jule::Slice<jule::Ptr<_205567a7c_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad22b16c:;
		if (it != expr_end) {
			jule::Ptr<_205567a7c_DirEntry> *_1312_d = it;
			{
				if (((!(_2055756b1_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1ad22b16c:;
			++it;
			goto _iter_begin_1ad22b16c;
		}
		_iter_end_1ad22b16c:;
	};
	return false;;
}



inline jule::Str _1c4ce9839_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_205567a7c_DirEntry>> _2617_dirents = ({
				auto except = static__1c219515a_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ad22b39d;
				} jule::Slice<jule::Ptr<_205567a7c_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1c4ce9707_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I32 _3513_n = _2427_path.len();;
			_2427_path=_1c21946a9_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1ad22b39d;
			};
		}
	_iter_next_1ad22b39d:;
	}
	_iter_end_1ad22b39d:;;
	return jule::Str();;
}



inline jule::Slice<_1c2220900_Log> _1c4ce9a6a_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__205573615_Read(_1c2193a4e_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1c2220900_Log>::make({_1c2220900_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _1c21919c5_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1c2220900_Log>::make({_1c2220900_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1a9aa4213_FileInfo> _1a9aeac71_ParseFile(jule::Ptr<_20398b546_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a9aa4213_FileInfo> _2713_finf = jule::new_ptr<_1a9aa4213_FileInfo>();;
	({
		__jule_tuple_x_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log __jule_assign_result = _1a9aeb304_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log _1a9aeb304_parseFileset(jule::Ptr<_20398b546_File> _5521_f) {
	__jule_tuple_x_1c4a59b93_Ast__jule_tuple_s_1c2220900_Log __jule_func_result;
	jule::Ptr<_1a9b19ca1_parser> _5613_p = jule::new_ptr<_1a9b19ca1_parser>();;
	_1a9b29684_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1c4a9e2c0_ScopeTree> _1a9aebc2d_newScope(void) {
	return jule::new_ptr<_1c4a9e2c0_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a9aec019_isSt(jule::Ptr<_2039861ab_Token> _499_current, jule::Ptr<_2039861ab_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U32>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U32>(5LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a9aec35a_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_2039861ab_Token>>* _5526_tokens, jule::I32* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U32>(22LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_2039861ab_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U32>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U32>(7LLU)) && _203986ba1_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a9aec6e0_nextStPos(jule::Slice<jule::Ptr<_2039861ab_Token>>* _7015_tokens, jule::I32 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _7113_braceN = 0LL;;
	jule::I32 _7213_i = _7033_start;;
	for (; (_7213_i < (*(_7015_tokens)).len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_2039861ab_Token> _7613_tok = (*(_7015_tokens))[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(3LLU)) {
					_case_begin_1ad2ab021:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1ad2ad430:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1a9aec35a_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a9aec019_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_1ad2ab807:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < (*(_7015_tokens)).len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a9aec019_isSt((*(_7015_tokens))[(_7213_i + 1LL)], _7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1ad2ab63c:;
						};
						goto _iter_next_1ad2a9728;
					}
				}
				_match_end_1ad2aaeaa:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_1ad2a9728;
			};
			if ((_7213_i > _7033_start)) {
				if (_1a9aec35a_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))) {
					goto _iter_next_1ad2a9728;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a9aec019_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a9aec019_isSt(_7613_tok, _7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_1ad2a9728;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_1ad2a9728:;
	}
	_iter_end_1ad2a9728:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_2039861ab_Token__jule_tuple_bool _1a9aeca31_skipSt(jule::I32* _13216_i, jule::Slice<jule::Ptr<_2039861ab_Token>> _13228_tokens) {
	__jule_tuple_sx_2039861ab_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _1339_start = (*(_13216_i));;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a9aec6e0_nextStPos(&(_13228_tokens), _1339_start);
		(*(_13216_i)) = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_2039861ab_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start, (*(_13216_i)));;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_2039861ab_Token__jule_tuple_bool __jule_assign_result = _1a9aeca31_skipSt(_13216_i, _13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL, (_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a9aecd2d_stmt>> _1a9aed1c4_splitStmts(jule::Slice<jule::Ptr<_2039861ab_Token>>* _15420_tokens) {
	jule::Slice<jule::Ptr<_1a9aecd2d_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1a9aecd2d_stmt>>::alloc(0LL, 20LL);;
	jule::I32 _15613_pos = 0LL;;
	while ((_15613_pos < (*(_15420_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_2039861ab_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_2039861ab_Token__jule_tuple_bool __jule_assign_result = _1a9aeca31_skipSt(&(_15613_pos), (*(_15420_tokens)));
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_1a9aecd2d_stmt>(_1a9aecd2d_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_1ad2b6081:;
	}
	_iter_end_1ad2b6081:;;
	return _15513_stmts;;
}



inline jule::Bool _1a9b148b1_isTypeOp(jule::Str* _88814_kind) {
	return (((*(_88814_kind)).equal("&", 1) || (*(_88814_kind)).equal("&&", 2)) || (*(_88814_kind)).equal("*", 1));;
}



inline jule::Bool _1a9b14b9c_isTypeRange(jule::Slice<jule::Ptr<_2039861ab_Token>>* _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto expr = _89521_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad374914:;
		if (it != expr_end) {
			jule::I32 _8979_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					if (_89712_token.get()._field_Kind.equal("[", 1)) {
						if (_89613_op) {
							return true;;
						};
						jule::I32 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_2039861ab_Token>> _90425_lTokens = (*(_89521_tokens)).slice(_8979_i);;
						{
							auto expr = &(_90425_lTokens);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ad375c89:;
							if (it != expr_end) {
								jule::Ptr<_2039861ab_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U32>(3LLU)) {
											_case_begin_1ad37741c:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1ad377c58:;
														{
															(_90325_rangeN)++;
															goto _iter_next_1ad375c89;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1ad377cd0:;
														{
															(_90325_rangeN)--;
															goto _iter_next_1ad375c89;
														}
													}
													_match_end_1ad377a8d:;
												};
											}
										}
										_match_end_1ad3771ca:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _1a9b148b1_isTypeOp(&(_90524_lToken.get()._field_Kind));;
									};
								}
								_iter_next_1ad375c89:;
								++it;
								goto _iter_begin_1ad375c89;
							}
							_iter_end_1ad375c89:;
						};
						return true;;
					};
				};
				if ((!(_1a9b148b1_isTypeOp(&(_89712_token.get()._field_Kind))))) {
					return false;;
				};
				_89613_op=true;
			}
			_iter_next_1ad374914:;
			++it;
			_8979_i++;
			goto _iter_begin_1ad374914;
		}
		_iter_end_1ad374914:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_2039861ab_Token>> _1a9b14e44_getBlockExpr(jule::Slice<jule::Ptr<_2039861ab_Token>>* _93322_tokens) {
	jule::I32 _93413_braceN = 0LL;;
	jule::I32 _93513_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad3794da:;
		if (it != expr_end) {
			jule::I32 _9369_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(16LLU) || _match_expr == static_cast<jule::U32>(17LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
						_case_begin_1ad37a2aa:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(3LLU)) {
						_case_begin_1ad37a332:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ad37b0be:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_1ad37b201;
										};
										return (*(_93322_tokens)).slice(0LL, _9369_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ad37b740:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_1ad37b267:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_1ad37b201:;
							};
						}
					}
					_match_end_1ad37a211:;
				};
			}
			_iter_next_1ad3794da:;
			++it;
			_9369_i++;
			goto _iter_begin_1ad3794da;
		}
		_iter_end_1ad3794da:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_2039861ab_Token__jule_tuple_sx_2039861ab_Token _1a9b152c9_splitDelim(jule::Slice<jule::Ptr<_2039861ab_Token>>* _96420_tokens, jule::U32 _96438_delim) {
	__jule_tuple_sx_2039861ab_Token__jule_tuple_sx_2039861ab_Token __jule_func_result;
	jule::I32 _96513_rangeN = 0LL;;
	{
		auto expr = _96420_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad379d04:;
		if (it != expr_end) {
			jule::I32 _9669_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(3LLU)) {
						_case_begin_1ad37d91d:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ad37e6ee:;
									{
										(_96513_rangeN)++;
										goto _iter_next_1ad379d04;
									}
								}
								else {
									_case_begin_1ad37e314:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_1ad37e149:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_1ad37d995:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_2039861ab_Token>> _98025_l = (*(_96420_tokens)).slice(0LL, _9669_i);;
								jule::Slice<jule::Ptr<_2039861ab_Token>> _98125_r = (*(_96420_tokens)).slice((_9669_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98025_l;
								__jule_func_result.__jule_result_arg1 = _98125_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1ad37d6ed:;
				};
			}
			_iter_next_1ad379d04:;
			++it;
			_9669_i++;
			goto _iter_begin_1ad379d04;
		}
		_iter_end_1ad379d04:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1a9b15571_findLowestPrecOp(jule::Slice<jule::Ptr<_2039861ab_Token>>* _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I32 _99713_precPos = -1LL;;
	jule::I32 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto expr = _99122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad382009:;
		if (it != expr_end) {
			jule::I32 _10019_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> *_100112_token = it;
			{
				{
					
					if (((*(_100112_token)).get()._field_Id == static_cast<jule::U32>(3LLU))) {
						_case_begin_1ad382c41:;
						{
							{
								auto &_match_expr{ (*(_100112_token)).get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ad38388a:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_1ad3840a5;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1ad3840a5:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_1ad383b21:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_1ad383956:;
							};
							goto _iter_next_1ad382009;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_1ad382cb8:;
						{
							goto _iter_next_1ad382009;
						}
					}
					else if (((*(_100112_token)).get()._field_Id == static_cast<jule::U32>(16LLU))) {
						_case_begin_1ad382d40:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_1ad382009;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_1ad382db7:;
						{
							goto _iter_next_1ad382009;
						}
					}
					else if (((*(_100112_token)).get()._field_Id != static_cast<jule::U32>(7LLU))) {
						_case_begin_1ad382e3e:;
						{
							goto _iter_next_1ad382009;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_1ad382eb6:;
						{
							goto _iter_next_1ad382009;
						}
					}
					_match_end_1ad382adc:;
				};
				jule::Ptr<_2039861ab_Token> _102813_left = (*(_99122_tokens))[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U32>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U32>(11LLU)))) {
					goto _iter_next_1ad382009;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U32>(3LLU))) && _102813_left.get()._field_Kind.equal("]", 1))) {
					jule::Ptr<_2039861ab_Token> _103617_lleft = (*(_99122_tokens))[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U32>(3LLU)) && _103617_lleft.get()._field_Kind.equal("[", 1))) {
						if (((*(_100112_token)).get()._field_Kind.equal("&", 1) || (*(_100112_token)).get()._field_Kind.equal("*", 1))) {
							goto _iter_next_1ad382009;
						};
					};
				};
				jule::U8 _104513_p = _203986563_Prec((*(_100112_token)).ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_1ad382009:;
			++it;
			_10019_i++;
			goto _iter_begin_1ad382009;
		}
		_iter_end_1ad382009:;
	};
	return _99713_precPos;;
}



inline jule::Ptr<_1c4a95519_IdentExpr> _1a9b15818_buildIdentExpr(jule::Ptr<_2039861ab_Token>* _105424_token) {
	return jule::new_ptr<_1c4a95519_IdentExpr>(_1c4a95519_IdentExpr{._field_Token=(*(_105424_token)), ._field_Ident=(*(_105424_token)).get()._field_Kind, ._field_CppLinked=false});;
}



inline __jule_tuple_sx_2039861ab_Token__jule_tuple_int _1a9b15ab0_getRangeExprTokens(jule::Slice<jule::Ptr<_2039861ab_Token>>* _106228_tokens) {
	__jule_tuple_sx_2039861ab_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _106313_rangeN = 0LL;;
	jule::I32 _106413_i = ((*(_106228_tokens)).len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_2039861ab_Token> _106613_tok = (*(_106228_tokens))[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ad38c454:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_1ad38c058:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_1ad38bd49:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_106228_tokens)).slice(0LL, _106413_i);
				__jule_func_result.__jule_result_arg1 = _106313_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1ad38b035:;
	}
	_iter_end_1ad38b035:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106313_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a9b16819_checkAssignTokens(jule::Slice<jule::Ptr<_2039861ab_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_20398a754_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I32 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4687b23:;
		if (it != expr_end) {
			jule::Ptr<_2039861ab_Token> *_2112_t = it;
			{
				if (((*(_2112_t)).get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ (*(_2112_t)).get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c23306be:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1c23e8028:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1c233078a:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1c4687b23;
				} else if ((((*(_2112_t)).get()._field_Id == static_cast<jule::U32>(7LLU)) && _20398ac93_IsAssignOp((*(_2112_t)).get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_1c4687b23:;
			++it;
			goto _iter_begin_1c4687b23;
		}
		_iter_end_1c4687b23:;
	};
	return false;;
}



inline _1c2220900_Log _1a9b17a3a_makeErr(jule::I32 _5212_row, jule::I32 _5222_col, jule::Ptr<_20398b546_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _1c2220900_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_1c2220d40_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_2039861ab_Token>> _1a9b18013_range(jule::I32* _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_2039861ab_Token>>* _7163_tokens) {
	if (((*(_7115_i)) >= (*(_7163_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_2039861ab_Token> _759_tok = (*(_7163_tokens))[(*(_7115_i))];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U32>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	((*(_7115_i)))++;
	jule::I32 _8013_rangeN = 1LL;;
	jule::I32 _819_start = (*(_7115_i));;
	for (; ((_8013_rangeN != 0LL) && ((*(_7115_i)) < (*(_7163_tokens)).len())); ((*(_7115_i)))++) {
		{
			jule::Ptr<_2039861ab_Token> _8313_token = (*(_7163_tokens))[(*(_7115_i))];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1c50815d7:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1c508165e:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1c50813b7:;
				};
			};
		}
	_iter_next_1c50805e7:;
	}
	_iter_end_1c50805e7:;;
	return (*(_7163_tokens)).slice(_819_start, ((*(_7115_i)) - 1LL));;
}



inline __jule_tuple_sx_2039861ab_Token__jule_tuple_sx_2039861ab_Token _1a9b182aa_rangeLast(jule::Slice<jule::Ptr<_2039861ab_Token>>* _10319_tokens) {
	__jule_tuple_sx_2039861ab_Token__jule_tuple_sx_2039861ab_Token __jule_func_result;
	if (((*(_10319_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if (((*(_10319_tokens))[((*(_10319_tokens)).len() - 1LL)].get()._field_Id != static_cast<jule::U32>(3LLU))) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _10913_braceN = 0LL;;
	jule::I32 _11013_i = ((*(_10319_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_2039861ab_Token> _11213_token = (*(_10319_tokens))[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1c50858c7:;
						{
							(_10913_braceN)++;
							goto _iter_next_1c508262c;
						}
					}
					else {
						_case_begin_1c50854cb:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1c50852bc:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10319_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_10319_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1c508262c:;
	}
	_iter_end_1c508262c:;;
	__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log _1a9b18695_partsKind(jule::Slice<jule::Ptr<_2039861ab_Token>>* _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_func_result;
	if (((*(_13219_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _13713_parts = nullptr;;
	jule::Slice<_1c2220900_Log> _13813_errors = nullptr;;
	jule::I32 _14013_rangeN = 0LL;;
	jule::I32 _14113_last = 0LL;;
	{
		auto expr = _13219_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5088600:;
		if (it != expr_end) {
			jule::I32 _1429_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c5089c72:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1c5088600;
							}
						}
						else {
							_case_begin_1c5089876:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1c5089667:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1c5088600;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_1c2220900_Log _16121_err = _1a9b17a3a_makeErr(_14212_token.get()._field_Row, _14212_token.get()._field_Column, &(_14212_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last, _1429_i));;
					_14113_last=static_cast<jule::I32>((_1429_i + 1LL));
				};
			}
			_iter_next_1c5088600:;
			++it;
			_1429_i++;
			goto _iter_begin_1c5088600;
		}
		_iter_end_1c5088600:;
	};
	if ((_14113_last < (*(_13219_tokens)).len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_2039861ab_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log _1a9b18a80_parts(jule::Slice<jule::Ptr<_2039861ab_Token>>* _18415_tokens, jule::U32 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_2039861ab_Token__jule_tuple_s_1c2220900_Log __jule_func_result;
	if (((*(_18415_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2039861ab_Token>>> _18913_parts = nullptr;;
	jule::Slice<_1c2220900_Log> _19013_errors = nullptr;;
	jule::I32 _19213_rangeN = 0LL;;
	jule::I32 _19313_last = 0LL;;
	{
		auto expr = _18415_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c508ec77:;
		if (it != expr_end) {
			jule::I32 _1949_i = it - expr->begin();
			jule::Ptr<_2039861ab_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c50913e9:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1c508ec77;
							}
						}
						else {
							_case_begin_1c5090eed:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1c5090cde:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1c508ec77;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_1c2220900_Log _21321_err = _1a9b17a3a_makeErr(_19412_token.get()._field_Row, _19412_token.get()._field_Column, &(_19412_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last, _1949_i));;
					_19313_last=static_cast<jule::I32>((_1949_i + 1LL));
				};
			}
			_iter_next_1c508ec77:;
			++it;
			_1949_i++;
			goto _iter_begin_1c508ec77;
		}
		_iter_end_1c508ec77:;
	};
	if ((_19313_last < (*(_18415_tokens)).len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_2039861ab_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1a9b18d27_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1c5094892:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1c5094908:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1c5094683:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_1c509055d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c50940cd:;
	};
}



inline _1c2220900_Log _1a9b19212_compilerErr(jule::Ptr<_2039861ab_Token>* _24317_token, jule::Str* _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _1c2220900_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_24317_token)).get()._field_Row, ._field_Column=(*(_24317_token)).get()._field_Column, ._field_Path=(*(_24317_token)).get()._field_File.get()._field_Path, ._field_Text=_1c2220d40_Logf((*(_24333_fmt)), _24346_args), ._field_Line=_20398c723_GetRow((*(_24317_token)).get()._field_File.ptr(), (*(_24317_token)).get()._field_Row), };;
}



inline void _1a9b19641_pushSuggestion(_1c2220900_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_1c2220d40_Logf(_25441_fmt, _25454_args);
}



inline jule::Str _1a9b198d8_tokstoa(jule::Slice<jule::Ptr<_2039861ab_Token>>* _25813_tokens) {
	jule::I32 _25913_n = 0LL;;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c50974bb:;
		if (it != expr_end) {
			jule::Ptr<_2039861ab_Token> *_26012_token = it;
			{
				_25913_n+=(*(_26012_token)).get()._field_Kind.len();
			}
			_iter_next_1c50974bb:;
			++it;
			goto _iter_begin_1c50974bb;
		}
		_iter_end_1c50974bb:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5097b70:;
		if (it != expr_end) {
			jule::Ptr<_2039861ab_Token> *_26412_token = it;
			{
				_26313_s+=(*(_26412_token)).get()._field_Kind;
			}
			_iter_next_1c5097b70:;
			++it;
			goto _iter_begin_1c5097b70;
		}
		_iter_end_1c5097b70:;
	};
	return _26313_s;;
}



inline jule::Bool _1a9b2995e_isPub(jule::Str* _204911_ident) {
	jule::I32 _205010_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d9dd3468_DecodeRuneStr((*(_204911_ident)));
		_205010_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1c2170014_IsUpper(_205010_r);;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2a300_buildVoidType(void) {
	return jule::new_ptr<_1c4a8e337_TypeDecl>();;
}



inline jule::Ptr<_1c4a8e337_TypeDecl> _1a9b2a542_buildPrimType(jule::Ptr<_2039861ab_Token> _2322_t) {
	return jule::new_ptr<_1c4a8e337_TypeDecl>(_1c4a8e337_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_1c4a8e8ed_IdentTypeDecl>(_1c4a8e8ed_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type19)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1c4cc3813_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1ad507954:;
			{
				__jule_func_result.__jule_result_arg0=_1c2223c11_IsWindows(_1c2269a9d_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1ad50735a:;
			{
				__jule_func_result.__jule_result_arg0=_1c2223eb9_IsDarwin(_1c2269a9d_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1ad5073c1:;
			{
				__jule_func_result.__jule_result_arg0=_1c2224261_IsLinux(_1c2269a9d_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1ad507437:;
			{
				__jule_func_result.__jule_result_arg0=_1c2224d66_IsUnix(_1c2269a9d_Os);
			}
		}
		else {
			_case_begin_1ad506b0c:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ad50702a:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1c4cd4ca8_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1ad509802:;
			{
				__jule_func_result.__jule_result_arg0=_1c2224580_IsI386(_1c226b033_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1ad509868:;
			{
				__jule_func_result.__jule_result_arg0=_1c2224827_IsAmd64(_1c226b033_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1ad5098ce:;
			{
				__jule_func_result.__jule_result_arg0=_1c2224abe_IsArm64(_1c226b033_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1ad509945:;
			{
				__jule_func_result.__jule_result_arg0=_1c2225482_Is64Bit(_1c226b033_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1ad5099ab:;
			{
				__jule_func_result.__jule_result_arg0=_1c22251da_Is32Bit(_1c226b033_Arch);
			}
		}
		else {
			_case_begin_1ad5090a4:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ad5094c2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4cbda3e_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1c2194335_Base(_5029_p);
	jule::I32 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _1c2193ce6_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I32 _6413_i = _1c218c3a5_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4cc3813_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4cd4ca8_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I32>(_1c218c3a5_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4cc3813_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4cd4ca8_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4cd4ca8_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4cc3813_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4cc3813_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1c4cd864c_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(_1c2269a9d_Os);;
	if (_1c2224d66_IsUnix(_1c2269a9d_Os)) {
		(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(jule::Str("unix", 4));;
	};
}



inline void _1c4cd88a0_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(_1c226b033_Arch);;
	if (_1c2225482_Is64Bit(_1c226b033_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x64", 3));;
	};
	if (_1c22251da_Is32Bit(_1c226b033_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x32", 3));;
	};
}



inline void _1c4cd8b58_initVars(jule::Slice<jule::Str>* _5518_vars, _1c4cd833e_CompileInfo* _5532_info) {
	_1c4cd864c_setOsVars(_5518_vars);
	_1c4cd88a0_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("production", 10));;
	};
	if ((*(_5532_info))._field_Test) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ad5159ea:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ad515a61:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1ad515995:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ad515ed4:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ad51604a:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ad5160b1:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1ad515e18:;
	};
}



inline jule::Slice<jule::U8> _1c4821a59_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__205573615_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1c22b3597_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1c2220900_Log _1c4828cc5_flatCompilerErr(jule::Str _4120_text) {
	return _1c2220900_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Text=_4120_text, };;
}



inline void _1a993ee17_pushPasses(jule::Ptr<_1c4b02a82_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad547444:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad547db2:;
					if (it != expr_end) {
						_1c4ab7c89_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1ad547db2;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ad548d4c:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1ad547db2;
										};
									}
									_iter_next_1ad548d4c:;
									++it;
									goto _iter_begin_1ad548d4c;
								}
								_iter_end_1ad548d4c:;
							};
							(*(_11144_passes)) = jule::alloc_for_append((*(_11144_passes)),1);(*(_11144_passes)).__push(_11416_pass._field_Text);;
						}
						_iter_next_1ad547db2:;
						++it;
						goto _iter_begin_1ad547db2;
					}
					_iter_end_1ad547db2:;
				};
			}
			_iter_next_1ad547444:;
			++it;
			goto _iter_begin_1ad547444;
		}
		_iter_end_1ad547444:;
	};
}



inline jule::Slice<jule::Str> _1a9a155c5_getAllUniquePasses(jule::Ptr<_1c4b02a82_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1c4aeeb28_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1a993ee17_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad54a39d:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1a993ee17_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1ad54a39d:;
			++it;
			goto _iter_begin_1ad54a39d;
		}
		_iter_end_1ad54a39d:;
	};
	return _12913_passes;;
}



inline _1c4cd833e_CompileInfo _1a9aa2a80_buildCompileInfo(void) {
	_1c4cd833e_CompileInfo _14213_info = _1c4cd833e_CompileInfo{._field_Prod=_2037bbbe5_Production, ._field_Test=_2037bb2aa_Test, };;
	{
		auto &_match_expr{ _2037ba70a_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ad54b6bd:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ad54b745:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1ad54b646:;
	};
	{
		auto &_match_expr{ _2037bab4a_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ad54b080:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ad54badb:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ad54bb52:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1ad54bee8:;
	};
	return _14213_info;;
}



inline void _1a9c4d9c8_EliminateDefines(jule::Ptr<_1c481c00a_IR>* _28526_ir) {
	jule::Ptr<_1a9c194dd_ObjectDeadCode> _28613_ocd = static__1a9c199b6_new(_28526_ir);;
	_1a9c4d70e_elimanate(_28613_ocd);
}



inline jule::Ptr<_1c4a5ad81_Directive> _1a9c4dd5d_findDirective(jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>* _29123_directives, jule::Str _29154_tag) {
	{
		auto expr = _29123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad586890:;
		if (it != expr_end) {
			jule::Ptr<_1c4a5ad81_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_1ad586890:;
			++it;
			goto _iter_begin_1ad586890;
		}
		_iter_end_1ad586890:;
	};
	return nullptr;;
}



inline jule::Bool _1a9c4e19e_hasDirective(jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>* _30118_directives, jule::Str _30149_tag) {
	return (_1a9c4dd5d_findDirective(_30118_directives, _30149_tag) != nullptr);;
}



inline void _1a9c52ceb_eliminateDeadCodeOfScope(jule::Ptr<_1c4ad13bd_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1c4ad3b0c_Label>> _2429_labels = jule::Slice<jule::Ptr<_1c4ad3b0c_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1c4ad3de8_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1c4ad3de8_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1a9c4ede7_scopeDeadCode> _24413_sdc = jule::new_ptr<_1a9c4ede7_scopeDeadCode>(_1a9c4ede7_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1c4ad3b0c_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1c4ad3de8_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1a9c52a10_optimizeStmts(_24413_sdc);
	};
}



inline void _1a9c53082_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1c4ab22e4_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5ca9b1:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad5cca6d:;
					if (it != expr_end) {
						jule::Ptr<_1c4ab39ee_FnIns> _25621_ins = *it;
						{
							_1a9c52ceb_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1ad5cca6d:;
						++it;
						goto _iter_begin_1ad5cca6d;
					}
					_iter_end_1ad5cca6d:;
				};
			}
			_iter_next_1ad5ca9b1:;
			++it;
			goto _iter_begin_1ad5ca9b1;
		}
		_iter_end_1ad5ca9b1:;
	};
}



inline void _1a9c532c4_eliminateFunctionsScopePackage(jule::Ptr<_1c4b02a82_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5ccee1:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _26317_f = *it;
			{
				_1a9c53082_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_1ad5ccee1:;
			++it;
			goto _iter_begin_1ad5ccee1;
		}
		_iter_end_1ad5ccee1:;
	};
}



inline void _1a9c5356b_eliminateScopePackage(jule::Ptr<_1c4b02a82_Package>* _26831_pkg) {
	_1a9c532c4_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1a9c5377a_EliminateScopes(jule::Ptr<_1c481c00a_IR>* _27325_ir) {
	jule::I32 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1c4aeeb28_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1a9c5356b_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_1ad5ce652:;
	}
	_iter_end_1ad5ce652:;;
	_1a9c5356b_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _1c1e22118_isStdPackage(jule::Str _43817_f, jule::Str _43825_p) {
	return _1c2170cd4_HasPrefix(_43817_f, _1c2193a4e_Join(jule::Slice<jule::Str>::make({_1c222ac6d_PathStdlib,_43825_p})));;
}



inline jule::Bool _1c1e63dd5_isConstantValidConditionalCase(jule::Ptr<_1c4ad17b9_If>* _44236_i) {
	{
		auto &_match_expr{ (*(_44236_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ad6541cc:;
			{
				jule::Ptr<_1c25bc4e9_Const> _44513_c = (*(_44236_i)).get()._field_Expr.cast_ptr<_1c25bc4e9_Const>(&__jule_any_type47);;
				return (_1c317924d_IsBool(_44513_c.ptr()) && _1c3178060_ReadBool(_44513_c.ptr()));;
			}
		}
		_match_end_1ad654067:;
	};
	return false;;
}



inline jule::Bool _1c1e83b2a_isUnreachableExpr(jule::Any* _45123_expr) {
	{
		auto &_match_expr{ (*(_45123_expr)) };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ad654ae5:;
			{
				jule::Ptr<_1c25bc4e9_Const> _45413_c = (*(_45123_expr)).cast_ptr<_1c25bc4e9_Const>(&__jule_any_type47);;
				return (_1c317924d_IsBool(_45413_c.ptr()) && (!(_1c3178060_ReadBool(_45413_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ad654b6c:;
			{
				jule::Ptr<_1c4aab970_BinopExprModel> _45713_m = (*(_45123_expr)).cast_ptr<_1c4aab970_BinopExprModel>(&__jule_any_type117);;
				if (_45713_m.get()._field_Op.get()._field_Kind.equal("&&", 2)) {
					return (_1c1e83b2a_isUnreachableExpr(&(_45713_m.get()._field_Left.get()._field_Model)) || _1c1e83b2a_isUnreachableExpr(&(_45713_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_1ad654298:;
	};
	return false;;
}



inline jule::Bool _1c48a93a5_isConstantValidMatchCase(jule::Ptr<_1c4ad5b64_Case>* _46630_case) {
	{
		auto expr = &((*(_46630_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad655e6a:;
		if (it != expr_end) {
			jule::Ptr<_1c45e6e17_Data> *_46712_expr = it;
			{
				if (((_1c45e77ca_IsConst((*(_46712_expr)).ptr()) && _1c317924d_IsBool((*(_46712_expr)).get()._field_Constant.ptr())) && _1c3178060_ReadBool((*(_46712_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1ad655e6a:;
			++it;
			goto _iter_begin_1ad655e6a;
		}
		_iter_end_1ad655e6a:;
	};
	return false;;
}



inline jule::Bool _1c1dcc7dd_isUnreachableConditionalCase(jule::Ptr<_1c4ad17b9_If>* _47534_i) {
	return _1c1e83b2a_isUnreachableExpr(&((*(_47534_i)).get()._field_Expr));;
}



inline jule::Bool _1c1e1568e_isUnreachableMatchCase(jule::Ptr<_1c4ad5b64_Case>* _47928_case) {
	{
		auto expr = &((*(_47928_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad659875:;
		if (it != expr_end) {
			jule::Ptr<_1c45e6e17_Data> *_48012_expr = it;
			{
				if ((!(_1c1e83b2a_isUnreachableExpr(&((*(_48012_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1ad659875:;
			++it;
			goto _iter_begin_1ad659875;
		}
		_iter_end_1ad659875:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1c4c22410_checkForBitShiftOpt(jule::Ptr<_1c4aab783_OperandExprModel>* _46625_l, jule::Ptr<_1c4aab783_OperandExprModel>* _46648_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1c31777bd_IsInt(_1c4622272_Str((*(_46625_l)).get()._field_Kind.ptr())))) || (!(_1c31777bd_IsInt(_1c4622272_Str((*(_46648_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_46648_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ad696b8c:;
			{
				goto _match_end_1ad69763d;
			}
		}
		else {
			_case_begin_1ad697781:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1ad69763d:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1c3178538_AsU64((*(_46648_r)).get()._field_Model.cast_ptr<_1c25bc4e9_Const>(&__jule_any_type47).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4809_j = _1c31485a2_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4819_z = static_cast<jule::U64>(_4809_j);;
	if ((static_cast<jule::F64>(_4819_z) != _4809_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4819_z;
	return __jule_func_result;;
}



inline void _1c4c22960_PushOptLevel(jule::I32 _3417_level) {
	_1c1dca19d_Copy=(_3417_level >= static_cast<jule::I32>(1LL));
	_1c1dcc47a_Deadcode=(_3417_level >= static_cast<jule::I32>(1LL));
	_1c1de8782_Append=(_3417_level >= static_cast<jule::I32>(1LL));
	_1c1de97a5_Math=(_3417_level >= static_cast<jule::I32>(1LL));
	_1c1dea7c8_Access=(_3417_level >= static_cast<jule::I32>(1LL));
	_1c1deb7eb_Inline=(_3417_level >= static_cast<jule::I32>(1LL));
	_1c1dec81e_Ptr=(_3417_level >= static_cast<jule::I32>(1LL));
	_1c1dee986_Cond=(_3417_level >= static_cast<jule::I32>(1LL));
	_1c1e009a9_Str=(_3417_level >= static_cast<jule::I32>(1LL));
}



inline void _1a9bd0b47_detectEnabled(void) {
	_1a9b52778_exprEnabled=(((_1c1dec81e_Ptr || _1c1de97a5_Math) || _1c1dea7c8_Access) || _1c1dee986_Cond);
	_1a9b533e4_scopeEnabled=(((_1c1dee986_Cond || _1c1de8782_Append) || _1c1dca19d_Copy) || _1c1e009a9_Str);
}



inline void _1a9c719da_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1c22b3597_Exit(1LL);
}



inline jule::U64 _1ab2675c8_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _1ab2678d6_unixYearToSeconds(jule::U64 _20122_y, jule::Bool* _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		(*(_20140_leap))=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if ((*(_20140_leap))) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		(*(_20140_leap))=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			(*(_20140_leap))=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			(*(_20140_leap))=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if ((*(_20140_leap))) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _1ab267c6b_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1ad732002:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ad732189:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ad732200:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ad732266:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ad7322cc:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ad732343:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1ad7323a9:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1ad732420:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ad732486:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1ad7324ec:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ad732574:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1ad731e9c:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _1ab1b5713_isCopyOptimizable(jule::Ptr<_1c45e6e17_Data>* _81323_expr) {
	if ((!((*(_81323_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81323_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ad7d8b69:;
			{
				return false;;
			}
		}
		_match_end_1ad7d8b14:;
	};
	return true;;
}



inline jule::Bool _1ab1b5a98_isIterCopyOptimizable(jule::Ptr<_1c45e6e17_Data>* _82427_expr, jule::Ptr<_1c4b2c837_Var>* _82441_v) {
	if (((!((*(_82427_expr)).get()._field_Lvalue)) && (!(_1c4b5cdd9_Mutable((*(_82427_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82441_v)).get()._field_Mutable)) && (!((*(_82427_expr)).get()._field_Mutable)));;
}



inline jule::Str _1ab1c52e4_decomposeCommonEsq(jule::U8 _147123_b) {
	{
		auto &_match_expr{ _147123_b };
		
		if (_match_expr == '\\') {
			_case_begin_1ad89d129:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ad89d6ac:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ad89d723:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1ad89d789:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1ad89d3b0:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1ad89d426:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1ad89d48c:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1ad89d503:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1ad89d9cb:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1ad89da42:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1ad89d26c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ad89d1b2:;
	};
}



inline jule::Str _1ab1c55d0_sbtoa(jule::U8 _149810_b) {
	if ((_149810_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_149810_b < 128LLU)) {
		jule::Str _150313_seq = _1ab1c52e4_decomposeCommonEsq(_149810_b);;
		if ((!(_150313_seq.empty()))) {
			return _150313_seq;;
		};
		if (((32LL <= _149810_b) && (_149810_b <= 126LLU))) {
			return static_cast<jule::Str>(_149810_b);;
		};
	};
	jule::Str _15119_seq = _1c31745de_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_149810_b)), 8LL);;
	if ((_15119_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15119_seq);;
	};
	return (jule::Str("\\", 1) + _15119_seq);;
}



inline jule::Str _1ab1c5877_cstrBytes(jule::Slice<jule::U8> _151814_bytes) {
	jule::Str _151913_lit = jule::Str::alloc(0LL, _151814_bytes.len());;
	{
		auto expr = &(_151814_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad8a45a3:;
		if (it != expr_end) {
			jule::U8 *_152012_b = it;
			{
				_151913_lit+=_1ab1c55d0_sbtoa((*(_152012_b)));
			}
			_iter_next_1ad8a45a3:;
			++it;
			goto _iter_begin_1ad8a45a3;
		}
		_iter_end_1ad8a45a3:;
	};
	return _151913_lit;;
}



inline jule::Str _1ab1c5b96_cstrLit(jule::Slice<jule::U8> _152612_bytes) {
	return ((jule::Str("\"", 1) + _1ab1c5877_cstrBytes(_152612_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1ab1c5ea4_ftoa(jule::F64 _15309_f, jule::I32 _153017_bitsize) {
	if ((_153017_bitsize != 32LL)) {
		if ((_15309_f == static_cast<jule::F64>(static_cast<jule::I64>(_15309_f)))) {
			return _1ab1c624b_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_15309_f)));;
		};
		if ((_15309_f == static_cast<jule::F64>(static_cast<jule::U64>(_15309_f)))) {
			return _1ab1c64e3_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_15309_f)));;
		};
	};
	jule::Str _153913_m = _1c2ac9b05_FmtFloat(_15309_f, 'f', -1LL, _153017_bitsize);;
	if ((!(_1c218dc36_Contains(_153913_m, jule::Str(".", 1))))) {
		(_153913_m).append(".0", 2);
	};
	return _153913_m;;
}



inline jule::Str _1ab1c624b_itoa(jule::I64 _15469_x) {
	{
		
		if ((_15469_x == jule::MAX_I64)) {
			_case_begin_1ad8a7b7d:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_15469_x == jule::MIN_I64)) {
			_case_begin_1ad8a7be4:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1ad8a7a3a:;
	};
	jule::Str _15549_fmt = _1c3174721_FmtInt(_15469_x, 10LL);;
	if (_1c2225482_Is64Bit(jule::Str("i386", 4))) {
		return (_15549_fmt + jule::Str("LL", 2));;
	};
	return (_15549_fmt + jule::Str("L", 1));;
}



inline jule::Str _1ab1c64e3_utoa(jule::U64 _15619_x) {
	{
		
		if ((_15619_x == jule::MAX_U64)) {
			_case_begin_1ad8a9850:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1ad8a9751:;
	};
	jule::Str _15679_fmt = _1c31745de_FmtUint(_15619_x, 10LL);;
	if (_1c2225482_Is64Bit(jule::Str("i386", 4))) {
		return (_15679_fmt + jule::Str("LLU", 3));;
	};
	return (_15679_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1ab1c689a_isForwarded(jule::Ptr<_1c4ad13bd_Scope>* _157417_s) {
	jule::Any _15759_last = (*(_157417_s)).get()._field_Stmts[((*(_157417_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15759_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ad8ab126:;
			{
				{
					auto &_match_expr{ _15759_last.cast_ptr<_1c45e6e17_Data>(&__jule_any_type23).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1ad8ac19e:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ad8ac567:;
						{
							return false;;
						}
					}
					_match_end_1ad8ac29d:;
				};
			}
		}
		else {
			_case_begin_1ad8ab8da:;
			{
				return true;;
			}
		}
		_match_end_1ad8ab80d:;
	};
}



inline jule::Bool _1ab1c6b64_isBuiltinCallHasDebuginf(jule::Ptr<_1c4aac5ec_FnCallExprModel>* _158930_m) {
	if ((!(_1c4ab4d85_IsBuiltin((*(_158930_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_158930_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ad8ac80e:;
			{
				jule::Ptr<_1c4aae137_CommonSubIdentExprModel> _159513_csie = (*(_158930_m)).get()._field_Expr.cast_ptr<_1c4aae137_CommonSubIdentExprModel>(&__jule_any_type73);;
				return _159513_csie.get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_1ad8abb2c:;
			{
				return false;;
			}
		}
		_match_end_1ad8abac7:;
	};
}



inline jule::Bool _1ab1c6d95_isExprComesFromBind(jule::Ptr<_1c45e6e17_Data>* _160225_d) {
	{
		auto &_match_expr{ (*(_160225_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad8aea86:;
			{
				return (*(_160225_d)).get()._field_Model.cast_ptr<_1c4b2c837_Var>(&__jule_any_type8).get()._field_CppLinked;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ad8aeaec:;
			{
				return (*(_160225_d)).get()._field_Model.cast_ptr<_1c4aad884_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_CppLinked;;
			}
		}
		else {
			_case_begin_1ad8ae206:;
			{
				return false;;
			}
		}
		_match_end_1ad8ae1a1:;
	};
}



inline jule::Bool _1ab1c713c_isAny(jule::Ptr<_1c4621d32_TypeKind>* _161415_t) {
	if ((_1c4b5ea23_TypeEnum((*(_161415_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1c4b6197b_Prim> _16189_prim = _1c4b5e45c_Prim((*(_161415_t)).ptr());;
	return ((_16189_prim != nullptr) && _1c4b64e24_IsAny(_16189_prim.ptr()));;
}



inline void _1ab274261_iterFiles(jule::Ptr<_1c4b02a82_Package>* _135719_pkg, jule::Fn<void(jule::Ptr<_1c45e20dd_SymbolTable>*)> _135734_f) {
	{
		auto expr = &((*(_135719_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada4516c:;
		if (it != expr_end) {
			jule::Ptr<_1c45e20dd_SymbolTable> _135817_file = *it;
			{
				_135734_f(&(_135817_file));
			}
			_iter_next_1ada4516c:;
			++it;
			goto _iter_begin_1ada4516c;
		}
		_iter_end_1ada4516c:;
	};
}



inline jule::Str _1ab27454c_concatAllParts(jule::Slice<jule::Ptr<_2039861ab_Token>> _136419_parts) {
	jule::I32 _136513_n = 0LL;;
	{
		auto expr = &(_136419_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada46437:;
		if (it != expr_end) {
			jule::Ptr<_2039861ab_Token> *_136612_part = it;
			{
				_136513_n+=(*(_136612_part)).get()._field_Kind.len();
			}
			_iter_next_1ada46437:;
			++it;
			goto _iter_begin_1ada46437;
		}
		_iter_end_1ada46437:;
	};
	if ((_136513_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _137213_s = jule::Str::alloc(0LL, _136513_n);;
	{
		auto expr = &(_136419_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada45810:;
		if (it != expr_end) {
			jule::Ptr<_2039861ab_Token> *_137312_p = it;
			{
				_137213_s+=(*(_137312_p)).get()._field_Kind;
			}
			_iter_next_1ada45810:;
			++it;
			goto _iter_begin_1ada45810;
		}
		_iter_end_1ada45810:;
	};
	return _137213_s;;
}



inline jule::Bool _1ab27488d_containsTraitMethod(jule::Ptr<_1c4ac306e_Trait>* _138029_t, jule::Str* _138041_ident) {
	{
		auto expr = &((*(_138029_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada4802c:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _138112_m = *it;
			{
				if ((_138112_m.get()._field_Ident == (*(_138041_ident)))) {
					return true;;
				};
			}
			_iter_next_1ada4802c:;
			++it;
			goto _iter_begin_1ada4802c;
		}
		_iter_end_1ada4802c:;
	};
	return false;;
}



inline void _1ab274b8a_pushMethodsFromInherit(jule::Ptr<_1c4ac306e_Trait>* _139232_dest, jule::Ptr<_1c4ac306e_Trait>* _139251_src) {
	_1ab274e65_pushMethodsFromInherits(_139232_dest, _139251_src);
	{
		auto expr = &((*(_139251_src)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada4913d:;
		if (it != expr_end) {
			jule::Ptr<_1c4ab22e4_Fn> _139417_m = *it;
			{
				if ((!(_1ab27488d_containsTraitMethod(_139232_dest, &(_139417_m.get()._field_Ident))))) {
					(*(_139232_dest)).get()._field_Methods = jule::alloc_for_append((*(_139232_dest)).get()._field_Methods,1);(*(_139232_dest)).get()._field_Methods.__push(_139417_m);;
				};
			}
			_iter_next_1ada4913d:;
			++it;
			goto _iter_begin_1ada4913d;
		}
		_iter_end_1ada4913d:;
	};
}



inline void _1ab274e65_pushMethodsFromInherits(jule::Ptr<_1c4ac306e_Trait>* _140333_dest, jule::Ptr<_1c4ac306e_Trait>* _140352_src) {
	{
		auto expr = &((*(_140352_src)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ada49517:;
		if (it != expr_end) {
			jule::Ptr<_1c4b610b8_TypeSymbol> _140417_inh = *it;
			{
				jule::Ptr<_1c4ac306e_Trait> _140517_t2 = _1c4b60738_Trait(_140417_inh.get()._field_Kind.ptr());;
				_1ab274b8a_pushMethodsFromInherit(_140333_dest, &(_140517_t2));
			}
			_iter_next_1ada49517:;
			++it;
			goto _iter_begin_1ada49517;
		}
		_iter_end_1ada49517:;
	};
}



inline jule::Ptr<_1c4a5ad81_Directive> _1ab283182_findDirective(jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>* _46623_directives, jule::Str _46654_tag) {
	{
		auto expr = _46623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adb4d561:;
		if (it != expr_end) {
			jule::Ptr<_1c4a5ad81_Directive> _46717_dr = *it;
			{
				if ((_46717_dr.get()._field_Tag.get()._field_Kind == _46654_tag)) {
					return _46717_dr;;
				};
			}
			_iter_next_1adb4d561:;
			++it;
			goto _iter_begin_1adb4d561;
		}
		_iter_end_1adb4d561:;
	};
	return nullptr;;
}



inline jule::Bool _1ab283517_hasDirective(jule::Slice<jule::Ptr<_1c4a5ad81_Directive>>* _47618_directives, jule::Str _47649_tag) {
	return (_1ab283182_findDirective(_47618_directives, _47649_tag) != nullptr);;
}



inline jule::Bool _1ab2837ae_shouldInitialized(jule::Ptr<_1c4621d32_TypeKind>* _48327_t) {
	jule::Ptr<_1c4b6197b_Prim> _4849_prim = _1c4b5e45c_Prim((*(_48327_t)).ptr());;
	if ((_4849_prim != nullptr)) {
		return ((!(_1c4b64e24_IsAny(_4849_prim.ptr()))) && (!(_1c4b64bb0_IsStr(_4849_prim.ptr()))));;
	};
	{
		
		if ((_1c4b5e58e_Sptr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1adb513aa:;
			{
				return false;;
			}
		}
		else if ((_1c4b6099c_Map((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1adb50cd3:;
			{
				return false;;
			}
		}
		else if ((_1c4b5eeeb_Slc((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1adb50d5a:;
			{
				return false;;
			}
		}
		else if ((_1c4b60738_Trait((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1adb50dd2:;
			{
				return false;;
			}
		}
		else if ((_1c4b60260_Fn((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1adb5108b:;
			{
				return false;;
			}
		}
		else if ((_1c4b5ec87_Arr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1adb51102:;
			{
				jule::Ptr<_1c4b67c90_Arr> _50017_arr = _1c4b5ec87_Arr((*(_48327_t)).ptr());;
				return _1ab2837ae_shouldInitialized(&(_50017_arr.get()._field_Elem));;
			}
		}
		else if ((_1c4b604c4_Struct((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1adb51168:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1adb50662:;
			{
				return true;;
			}
		}
		_match_end_1adb5060c:;
	};
}



inline void _1c2202b57_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1c21e67c7_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1c2202b57_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _4113_max = _1c22023d7_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1c22023d7_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbe1aaa:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I32 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1adbe1aaa:;
			++it;
			goto _iter_begin_1adbe1aaa;
		}
		_iter_end_1adbe1aaa:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_1c22023d7_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adbe346e:;
		if (it != expr_end) {
			jule::I32 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_1c2171697_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					(_4913_s).append("\n", 1);
				};
			}
			_iter_next_1adbe346e:;
			++it;
			_519_i++;
			goto _iter_begin_1adbe346e;
		}
		_iter_end_1adbe346e:;
	};
	jule::outln(_4913_s);
}



inline void _1c21e6909_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1c2202b57_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.13 @master", 18));
}



inline void _1c220451b_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1c220464d_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1c22102e6_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1c2202b57_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1adbea410:;
			{
				_1c220451b_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1adbea124:;
			{
				_1c220464d_toolDistarch();
			}
		}
		else {
			_case_begin_1adbe89a2:;
			{
				_1c2202b57_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1adbe9e37:;
	};
}



inline void _1c2210428_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1c2202b57_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.13 @master", 33));
	jule::outln(jule::Str("architecture: i386", 18));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _2037ba70a_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _2037bab4a_CppStd));
}



inline void _1c2213294_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1c2202b57_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1adbee7ee:;
			{
				({
					auto except = static__205573967_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1c2202b57_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1adbed1d2:;
			{
				_1c2202b57_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1adbee425:;
	};
}



inline jule::Bool _1c21de6b0_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1adc00e2c:;
			{
				_1c21e67c7_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1adc0135b:;
			{
				_1c21e6909_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1adc013c2:;
			{
				_1c22102e6_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1adc014b0:;
			{
				_1c2210428_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1adc01526:;
			{
				_1c2213294_mod(_15320_args);
			}
		}
		else {
			_case_begin_1adc009dc:;
			{
				return false;;
			}
		}
		_match_end_1adc00921:;
	};
	return true;;
}



inline void _1c21de7e2_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _1d9e7eaa8_Args();;
	if ((_18913_args.len() < 2LL)) {
		_1c21de7e2_showInfo();
		return;;
	};
	if (_1c21de6b0_processCommand(&(_18913_args))) {
		return;;
	};
	_1ab2b11e3_compileCommand(&(_18913_args));
}



inline void _1c22b3d6c_enableVtp(void) {
	jule::Uintptr _199_hOut = _205551b87_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));;
	if ((_199_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I32 _2413_dwMode = 0LL;;
	if ((!(_205553eec_GetConsoleMode(_199_hOut, &(_2413_dwMode))))) {
		return;;
	};
	_2413_dwMode|=4LL;
	_2055545b3_SetConsoleMode(_199_hOut, _2413_dwMode);
}



inline void _1c22b3e9e_init(void) {
	_1c22b3d6c_enableVtp();
}



inline void _1ab28e853_init(void) {
	_2037ba70a_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_205572c1e_File> _1ab15c787_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _1c21946a9_Dir((*(_4316_path)));;
	({
		auto except = static__1c2195e08_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1c219528c_Create(_449_dir);
				if (!except.ok()) {
					_1a9c719da_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__20557336d_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1a9c719da_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1ab00e33c_clearObjects(void) {
	({
		auto except = static__1d9d9da2c_Remove(_1aa19b057_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1c219548a_Remove(_1a9d31b11_OutDir);
}



inline void _1ab08b70a_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1c228eead_Cmd> _7313_cmd = static__1c229040e_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_1c218d8e5_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _1c22905da_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type133) == _match_expr) {
					_case_begin_1adc097e8:;
					{
						static__1a9c6e400_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type133) == _match_expr) {
					_case_begin_1adc090cd:;
					{
						static__1a9c6e400_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1adc09210:;
					{
						static__1a9c6e400_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1adc09166:;
			};
			_1a9c719da_Throw(jule::Str());
		}
	});
	jule::I32 _869_status = ({
		auto except = _1c2290a2a_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _2037ba70a_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a9c6e400_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1a9c719da_Throw(jule::Str());
	};
	_1ab00e33c_clearObjects();
}



inline jule::Bool _1ab08d432_isCppSourceFile(jule::Str _9920_path) {
	jule::I32 _1009_offset = _1c218c3a5_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _1c22139d1_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1ab0c55ac_pushCompCmdClang(jule::Str* _10726_cmd) {
	((*(_10726_cmd))).append("-Wno-everything ", 16);
	((*(_10726_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _2037bab4a_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1adc08044:;
			{
				((*(_10726_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1adc0d544:;
			{
				((*(_10726_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1adc0d5aa:;
			{
				((*(_10726_cmd))).append("c++20", 5);
			}
		}
		_match_end_1adc0d324:;
	};
	((*(_10726_cmd))).append(" ", 1);
	if (_2037bbbe5_Production) {
		((*(_10726_cmd))).append("-O3 ", 4);
		((*(_10726_cmd))).append("-flto ", 6);
		((*(_10726_cmd))).append("-DNDEBUG ", 9);
		((*(_10726_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_10726_cmd))).append("-O0 ", 4);
	};
}



inline void _1a9d0c2c3_pushCompCmdGcc(jule::Str* _13324_cmd) {
	((*(_13324_cmd))).append("-w ", 3);
	((*(_13324_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _2037bab4a_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1adc0d9d9:;
			{
				((*(_13324_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1adc10cd8:;
			{
				((*(_13324_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1adc10d4e:;
			{
				((*(_13324_cmd))).append("c++20", 5);
			}
		}
		_match_end_1adc10ab8:;
	};
	((*(_13324_cmd))).append(" ", 1);
	if (_2037bbbe5_Production) {
		((*(_13324_cmd))).append("-O3 ", 4);
		((*(_13324_cmd))).append("-DNDEBUG ", 9);
		((*(_13324_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_13324_cmd))).append("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1ab00b3e4_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1c481c00a_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_2037ba92a_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _2037ba70a_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1adc12b97:;
			{
				_1a9d0c2c3_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1adc13c42:;
			{
				_1ab0c55ac_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1adc13b10:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc145e4:;
		if (it != expr_end) {
			jule::Str *_17112_pass = it;
			{
				_16113_cmd+=(*(_17112_pass));
				(_16113_cmd).append(" ", 1);
			}
			_iter_next_1adc145e4:;
			++it;
			goto _iter_begin_1adc145e4;
		}
		_iter_end_1adc145e4:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adc13cb9:;
		if (it != expr_end) {
			jule::Ptr<_1c4aeeb28_ImportInfo> *_17712_u = it;
			{
				if (((*(_17712_u)).get()._field_CppLinked && _1ab08d432_isCppSourceFile((*(_17712_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17712_u)).get()._field_Path;
					(_16113_cmd).append(" ", 1);
				};
			}
			_iter_next_1adc13cb9:;
			++it;
			goto _iter_begin_1adc13cb9;
		}
		_iter_end_1adc13cb9:;
	};
	if ((!(_1ab2a2019_Out.empty()))) {
		(_16113_cmd).append("-o ", 3);
		_16113_cmd+=_1ab2a2019_Out;
		(_16113_cmd).append(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _1aa19b057_getCompilePath(void) {
	return _1c2193a4e_Join(jule::Slice<jule::Str>::make({_1a9d31b11_OutDir,_1ab289045_OutName}));;
}



inline void _1aa2129d6_applyTargetIndependentOptimizations(jule::Ptr<_1c481c00a_IR>* _20045_ir) {
	jule::Ptr<_1a9b50db4_Optimizer> _20113_opt = static__1a9b705ba_New(_20045_ir);;
	_1a9bb093a_Optimize(_20113_opt.ptr());
}



inline void _1aa1a2833_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _2037ba70a_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1adc1554b:;
			{
				_1a9c719da_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1adc177c3:;
			{
				if (_2037ba92a_CompilerPath.empty()) {
					_2037ba92a_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1adc17839:;
			{
				if (_2037ba92a_CompilerPath.empty()) {
					_2037ba92a_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1adc1775c:;
			{
				_1a9c719da_Throw((jule::Str("invalid option value for --compiler: ", 37) + _2037ba70a_Compiler));
			}
		}
		_match_end_1adc17350:;
	};
}



inline void _1ab29e940_checkTargetArch(jule::Str _22220_arch) {
	if ((((!_22220_arch.equal("amd64", 5)) && (!_22220_arch.equal("arm64", 5))) && (!_22220_arch.equal("i386", 4)))) {
		_1a9c719da_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22220_arch));
	};
}



inline void _1ab2a3a32_checkTargetOs(jule::Str _23018_os) {
	if ((((!_23018_os.equal("windows", 7)) && (!_23018_os.equal("linux", 5))) && (!_23018_os.equal("darwin", 6)))) {
		_1a9c719da_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23018_os));
	};
}



inline void _1ab285ddd_checkTargetFlag(jule::Str* _23821_target) {
	if ((*(_23821_target)).empty()) {
		_1a9c719da_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2439_parts = _1c218d8e5_Split((*(_23821_target)), jule::Str("-", 1), -1LL);;
	if ((_2439_parts.len() != 2LL)) {
		_1a9c719da_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_23821_target))));
	};
	jule::Str _24810_os;;
	jule::Str _24814_arch;;
	({
		jule::Str ___jule_assign_arg = _2439_parts[0LL];
		jule::Str _1___jule_assign_arg = _2439_parts[1LL];
		_24810_os = ___jule_assign_arg;
		_24814_arch = _1___jule_assign_arg;
	});
	if ((!_24810_os.equal("native", 6))) {
		_1ab2a3a32_checkTargetOs(_24810_os);
		_1c2269a9d_Os=_24810_os;
	};
	if ((!_24814_arch.equal("native", 6))) {
		_1ab29e940_checkTargetArch(_24814_arch);
		_1c226b033_Arch=_24814_arch;
	};
	_1c2a42232_UpdateTarget();
}



inline void _1a9d09875_checkOptFlag(jule::Str* _26118_opt) {
	if ((*(_26118_opt)).empty()) {
		_1a9c719da_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26118_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1adc2037a:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1adc20886:;
			{
				_1c4c22960_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else {
			_case_begin_1adc201b0:;
			{
				_1a9c719da_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26118_opt))));
			}
		}
		_match_end_1adc2015a:;
	};
}



inline void _1a9d099a7_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _2037bab4a_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1adc208ec:;
			{
				goto _match_end_1adc21755;
			}
		}
		else {
			_case_begin_1adc21304:;
			{
				_1a9c719da_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _2037bab4a_CppStd));
			}
		}
		_match_end_1adc21755:;
	};
}



inline jule::Slice<jule::Str> _1ab2b0d4c_checkFlags(jule::Slice<jule::Str>* _28616_args) {
	jule::Str _28713_opt = jule::Str("L0", 2);;
	jule::Str _28813_target = jule::Str("native-native", 13);;
	jule::Ptr<_1ab2abd37_FlagSet> _29013_fs = static__1ab2ac123_New();;
	_1adc23b42_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_28713_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1adc23b42_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_28813_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1adc23b42_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1ab2a2019_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2037bad6a_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2037bb08a_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1adc23b42_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2037ba70a_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1adc23b42_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2037ba92a_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2037bbbe5_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2037bb552_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2037bb92b_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1adc23b42_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2037bab4a_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c1dca19d_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c1dcc47a_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c1de8782_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c1de97a5_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c1dea7c8_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c1deb7eb_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c1dec81e_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c1dee986_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_1adc2c4b9_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1c1e009a9_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	jule::Slice<jule::Str> _31313_content = ({
		auto except = _1ab2ace37_Parse(_29013_fs.ptr(), (*(_28616_args)));
		(except.ok()) ? (except.result) : ({
			_1a9c719da_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1aa1a2833_checkCompilerFlag();
	_1a9d099a7_checkCppStdFlag();
	_1ab285ddd_checkTargetFlag(&(_28813_target));
	_1a9d09875_checkOptFlag(&(_28713_opt));
	return _31313_content;;
}



inline void _1ab2b0e7e_setupSemaFlags(jule::I32* _32624_flags) {
	if (_2037bad6a_Shadowing) {
		(*(_32624_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1c481c00a_IR> _1ab2b10b1_buildIr(jule::Slice<jule::Str>* _33213_args) {
	jule::Slice<jule::Str> _3339_content = _1ab2b0d4c_checkFlags(_33213_args);;
	jule::I32 _33513_semaFlags = static_cast<jule::I32>(0LL);;
	_1ab2b0e7e_setupSemaFlags(&(_33513_semaFlags));
	if ((_3339_content.len() == 0LL)) {
		_1a9c719da_Throw(_1c2220d40_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3339_content.len() > 1LL)) {
		_1a9c719da_Throw((jule::Str("undefined content: ", 19) + _3339_content[1LL]));
	};
	jule::Str _34314_path;;
	jule::Bool _34320_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c219408d_Abs(_3339_content[0LL]);
		_34314_path = __jule_assign_result.__jule_result_arg0;
		_34320_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34320_ok))) {
		_1a9c719da_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2055752a4_Status> _3499_inf = ({
		auto except = static__1c2195e08_Of(_1c222ac6d_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a9c719da_Throw(_1c2220d40_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_2055752a4_Status>(nullptr);});
	});;
	if ((!(_2055756b1_IsDir(_3499_inf.ptr())))) {
		_1a9c719da_Throw(_1c2220d40_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1c481c00a_IR> _35714_ir;;
	jule::Slice<_1c2220900_Log> _35718_logs;;
	({
		__jule_tuple_x_1c481c00a_IR__jule_tuple_s_1c2220900_Log __jule_assign_result = static__1a9abd0b7_Build(_34314_path, _33513_semaFlags);
		_35714_ir = __jule_assign_result.__jule_result_arg0;
		_35718_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_35714_ir == nullptr) && (_35718_logs == nullptr))) {
		_1a9c719da_Throw(_1c2220d40_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_34314_path, &__jule_any_type5)})));
	};
	if ((_35718_logs != nullptr)) {
		static__1a9c710b1_PrintLogs(&(_35718_logs));
		_1a9c719da_Throw(jule::Str());
	};
	return _35714_ir;;
}



inline void _1ab2b11e3_compileCommand(jule::Slice<jule::Str>* _37224_args) {
	(*(_37224_args))=(*(_37224_args)).slice(1LL);
	if ((*(_37224_args))[0LL].equal("test", 4)) {
		_2037bb2aa_Test=true;
		(*(_37224_args))=(*(_37224_args)).slice(1LL);
	};
	jule::Ptr<_1c481c00a_IR> _37813_ir = _1ab2b10b1_buildIr(_37224_args);;
	;
	if ((!(_2037bb2aa_Test))) {
		jule::Ptr<_1c4ab22e4_Fn> _38317_main = _1c4b04336_FindFn(_37813_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_38317_main == nullptr)) {
			_1a9c719da_Throw(_1c2220d40_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1aa2129d6_applyTargetIndependentOptimizations(&(_37813_ir));
	_1c48496ec_Order(_37813_ir.ptr());
	jule::Str _39410_compiler;;
	jule::Str _39420_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1ab00b3e4_genCompileCmd(_1aa19b057_getCompilePath(), &(_37813_ir));
		_39410_compiler = __jule_assign_result.__jule_result_arg0;
		_39420_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1ab26c644_ObjectCoder> _39613_oc = static__1ab1d3a0b_New(&(_37813_ir), _1ab20e00e_SerializationInfo{._field_Compiler=_39410_compiler, ._field_CompilerCommand=_39420_compilerCmd});;
	if (_2037bb2aa_Test) {
		jule::Ptr<_1ab1c911c_TestCoder> _40117_tc = static__1ab1c9590_New(&(_39613_oc));;
		_1ab1ca7c2_Serialize(_40117_tc);
	} else {
		_1ab273ded_Serialize(_39613_oc);
	};
	jule::Str _4079_path = _1aa19b057_getCompilePath();;
	jule::Ptr<_205572c1e_File> _40813_file = _1ab15c787_openOutput(&(_4079_path));;
	({
		auto except = _20557458e_WriteStr(_40813_file.ptr(), &(_39613_oc.get()._field_Obj));
		if (!except.ok()) {
			_1a9c719da_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _20557476a_Close(_40813_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:412:5"));
	});
	if ((!(_2037bb08a_Transpilation))) {
		_1ab08b70a_compileIr(_39410_compiler, _39420_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1c224bb07_init();
	_1c2a4c836_init();
	_1c22b3e9e_init();
	_1ab28e853_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}