// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 28/7/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _201038684_comptimeRangeKind{};
struct _2010786e6_Importer{};
struct _201130b88_Kind{};
struct _20114e426_Lookup{};
struct _203b834c9_CommonFlag{};
struct _217e86334_acceptRange;
struct _2192d0aab_Range16;
struct _2192d102e_Range32;
struct _2192d14a2_RangeTable;
struct _2193219dc_lazyBuff;
struct _217d998b8_DirEntry;
struct _217d99b2c_Directory;
struct _217da65ea_File;
struct _217da8c3a_Status;
struct _21ab61517_cmdAttrs;
struct _2193a460d_Log;
struct _1ed694d8c_Token;
struct _1ed69a227_File;
struct _1ed69c009_kindPair;
struct _1ed6a2a6a_lex;
struct _1ee316359_floatInfo;
struct _1ee316ce9_decimalSlice;
struct _1ee328129_leftCheat;
struct _1ee328aec_decimal;
struct _1ee33c6d2_Const;
struct _200d46041_Ast;
struct _200d46ddd_Node;
struct _200d472d9_Directive;
struct _200eda6ad_TypeDecl;
struct _200edac74_IdentTypeDecl;
struct _200edb060_SubIdentTypeDecl;
struct _200edb3d4_NamespaceTypeDecl;
struct _200edb6c0_SptrTypeDecl;
struct _200edbabb_SlcTypeDecl;
struct _200edbda7_TupleTypeDecl;
struct _200edc193_PtrTypeDecl;
struct _200edc869_ArrTypeDecl;
struct _200edd073_MapTypeDecl;
struct _200edd42a_RetTypeDecl;
struct _200ede838_Expr;
struct _200edeb24_RangeExpr;
struct _200ee01c9_UseExpr;
struct _200ee04b5_TupleExpr;
struct _200ee086c_LitExpr;
struct _200ee0eaa_UnsafeExpr;
struct _200ee142d_IdentExpr;
struct _200ee1b37_UnaryExpr;
struct _200ee1ede_VariadicExpr;
struct _200ee2396_CastExpr;
struct _200ee274d_NsSelectionExpr;
struct _200ee2bc1_SubIdentExpr;
struct _200ee3144_BinopExpr;
struct _200ee374e_FnCallExpr;
struct _200ee41cd_FieldExprPair;
struct _200ee49a3_StructLit;
struct _200ee4e26_BraceLit;
struct _200ee580b_KeyValPair;
struct _200ee5e7c_SliceExpr;
struct _200ee67da_IndexingExpr;
struct _200ee6de5_SlicingExpr;
struct _200ee71d1_Constraint;
struct _200ee7654_GenericDecl;
struct _200ee7a0b_LabelSt;
struct _200ee7db3_GotoSt;
struct _200ee819e_FallSt;
struct _200ee87a9_AssignLeft;
struct _200ee8ce8_AssignSt;
struct _200ee9bd9_Stmt;
struct _200eea2e4_ScopeTree;
struct _200eea9ba_ParamDecl;
struct _200eebcda_FnDecl;
struct _200eeccb9_VarDecl;
struct _200eed171_RetSt;
struct _200eed7d1_Iter;
struct _200eee0a6_WhileKind;
struct _200eee947_RangeKind;
struct _200eeecee_BreakSt;
struct _2010001a6_ContSt;
struct _201000629_If;
struct _2010009d1_Else;
struct _201000e54_Conditional;
struct _20100162a_TypeAliasDecl;
struct _201001a9d_Case;
struct _201002274_MatchCase;
struct _201002a16_UseDecl;
struct _201002e89_EnumItemDecl;
struct _2010039b2_EnumDecl;
struct _201004287_TypeEnumItemDecl;
struct _201004892_TypeEnumDecl;
struct _201004b06_FieldDecl;
struct _201005453_StructDecl;
struct _201005b29_TraitDecl;
struct _201006234_Impl;
struct _201007686_Field;
struct _201009446_Operators;
struct _20100a25a_Struct;
struct _20100c57b_FieldIns;
struct _201012020_OperandExprModel;
struct _2010124d7_BinopExprModel;
struct _20101288e_UnaryExprModel;
struct _201012c8a_StructArgExprModel;
struct _201013142_StructLitExprModel;
struct _201013450_AllocStructLitExprModel;
struct _2010139a0_CastingExprModel;
struct _201014352_FnCallExprModel;
struct _201014709_SliceExprModel;
struct _201014b7c_IndexingExprModel;
struct _201015034_AnonFnExprModel;
struct _2010153db_KeyValPairExprModel;
struct _20101585e_MapExprModel;
struct _201015d9d_SlicingExprModel;
struct _2010163dc_TraitSubIdentExprModel;
struct _201016bc3_StructSubIdentExprModel;
struct _201017069_StructStaticIdentExprModel;
struct _201017432_ArrayExprModel;
struct _20101771d_CommonIdentExprModel;
struct _201017c7e_CommonSubIdentExprModel;
struct _20101807b_TupleExprModel;
struct _201018455_BuiltinOutCallExprModel;
struct _201018840_BuiltinOutlnCallExprModel;
struct _201018b5e_BuiltinCloneCallExprModel;
struct _201019049_BuiltinNewCallExprModel;
struct _201019434_BuiltinPanicCallExprModel;
struct _2010198da_BuiltinAssertCallExprModel;
struct _201019d91_BuiltinMakeCallExprModel;
struct _20101a27b_BuiltinAppendCallExprModel;
struct _20101a59a_BuiltinLenCallExprModel;
struct _20101a8b9_BuiltinCapCallExprModel;
struct _20101b06d_BuiltinDeleteCallExprModel;
struct _20101b3d1_BuiltinCopyCallExprModel;
struct _20101b7bb_BuiltinErrorCallExprModel;
struct _20101bab8_SizeofExprModel;
struct _20101bda4_AlignofExprModel;
struct _20101c190_RuneExprModel;
struct _20101c49d_IntegratedToStrExprModel;
struct _20101c866_BackendEmitExprModel;
struct _20101cb52_FreeExprModel;
struct _20101d614_RetType;
struct _20101dd1d_Param;
struct _20102065a_Fn;
struct _20102243c_ParamIns;
struct _20102330b_FnIns;
struct _201026265_ReferenceStack;
struct _201027596_Pass;
struct _20102bcd7_symbolBuilder;
struct _20103287b_Trait;
struct _201034619_EnumItem;
struct _20103510e_Enum;
struct _201036176_TypeEnumItem;
struct _201036709_TypeEnum;
struct _201038860_comptimeRange;
struct _201039355_comptimeStructField;
struct _20103ad7e_comptimeStructFields;
struct _20103c358_comptimeStatic;
struct _20103de1a_comptimeStatics;
struct _20104035b_comptimeEnumField;
struct _20104157c_comptimeEnumFields;
struct _201042acd_comptimeParam;
struct _201044b79_comptimeParams;
struct _201046142_comptimeTypeInfos;
struct _20104760a_comptimeTypeInfo;
struct _20104d105_comptimeValue;
struct _201050701_comptimeFiles;
struct _201051bb9_comptimeFile;
struct _201055a25_constraintChecker;
struct _2010578c3_Impl;
struct _20105c92d_Scope;
struct _20105cd29_If;
struct _20105d115_Else;
struct _20105d489_Conditional;
struct _20105d775_InfIter;
struct _20105dbe8_WhileIter;
struct _20105e5cd_RangeIter;
struct _20105e9c9_ContSt;
struct _20105ed81_BreakSt;
struct _20106016c_Label;
struct _201060458_GotoSt;
struct _201060810_Postfix;
struct _201060c83_Assign;
struct _20106113a_MultiAssign;
struct _201061745_Match;
struct _201062290_Case;
struct _201062867_FallSt;
struct _201062bb9_RetSt;
struct _2010632c4_scopeLabel;
struct _201063747_scopeGoto;
struct _20106455b_scopeChecker;
struct _2010752b4_directiveChecker;
struct _20107b397_ImportInfo;
struct _20107ded2_Package;
struct _201083b52_commonSemaMeta;
struct _201084669_Sema;
struct _2010a171e_missingRetChecker;
struct _2010a3930_IterRelation;
struct _2010a4975_Var;
struct _2010a5723_FuncPattern;
struct _2010d758a_typeCompatibilityChecker;
struct _2010d91b3_assignTypeChecker;
struct _2010dab98_dynamicTypeAnnotation;
struct _2010e0593_fnCallArgChecker;
struct _2010e2e69_structLitChecker;
struct _2010e4a4d_rangeChecker;
struct _2010e704a_retTypeChecker;
struct _2010e9118_SymbolTable;
struct _2010edb23_Data;
struct _2010eeb9b_Value;
struct _201100691_Eval;
struct _20112243d_unaryEval;
struct _20112420e_binaryEval;
struct _20112e868_InsGeneric;
struct _2011303a2_TypeAlias;
struct _2011310ea_TypeKind;
struct _201137e9d_TypeSymbol;
struct _201138850_Prim;
struct _20113c0a1_Sptr;
struct _20113ca0d_Slc;
struct _20113d613_Tuple;
struct _20113e0b4_Map;
struct _20113eba8_Arr;
struct _201140615_Ptr;
struct _20114155b_referencer;
struct _20114243b_typeChecker;
struct _20114982d_identTypeLookup;
struct _20152cc44_FileInfo;
struct _2031b5842_stmt;
struct _2031b616c_scopeParser;
struct _2031c2651_exprBuilder;
struct _2031cde87_assignInfo;
struct _2031d2881_parser;
struct _2031e35a6_typeBuilder;
struct _2012dd41c_CompileInfo;
struct _2012de770_directiveEval;
struct _2031e7423_JuleImporter;
struct _2031ebe72_OrderedDefines;
struct _2031ec1d6_defineOrderer;
struct _2032e4a1a_liveTable;
struct _20332a7a9_scopeDeadCode;
struct _20332e714_exprDeadCode;
struct _201205147_StrCompExprModel;
struct _2012054cc_StrAppendExprModel;
struct _2012057b8_UnsafeBinopExprModel;
struct _201205b4d_UnsafeIndexingExprModel;
struct _201205ed3_PushToSliceExprModel;
struct _20120638a_AppendToSliceExprModel;
struct _2012068c9_MutSlicingExprModel;
struct _201206db3_StrInsertBeginExprModel;
struct _201207e19_scopeOptimizer;
struct _20120d815_exprOptimizer;
struct _203336485_Optimizer;
struct _20335894c_AnsiEscape;
struct _203359ed1_Logger;
struct _203b02db6_AbsTime;
struct _203b03559_Time;
struct _203a4cb46_scopeCoder;
struct _203a5608e_exprCoder;
struct _203a65aa4_deriveCoder;
struct _203a6748a_TestCoder;
struct _203a699cb_identCoder;
struct _203b0ac48_SerializationInfo;
struct _203b0b210_traitHash;
struct _203b0b5b7_traitCast;
struct _203b1a692_customType;
struct _203b1b110_typeCoder;
struct _203b23bc8_resultCoder;
struct _206641b00_Flag;
struct _206645582_Flag;
struct _206648c39_Flag;
struct _20664c435_Flag;
struct _206650adc_Flag;
struct _203b84e37_FlagSet;
struct _203b87643_argParser;
struct _203b0c5da_ObjectCoder;
struct _2032e4dd3_ObjectDeadCode;
struct _2031e99ca_IR;
struct _20100d071_StructIns;
struct _21ab5c733_Cmd;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_2010edb23_Data__jule_tuple_x_2010edb23_Data {
	jule::Ptr<_2010edb23_Data> __jule_result_arg0;
	jule::Ptr<_2010edb23_Data> __jule_result_arg1;
};
struct __jule_tuple_x_201001a9d_Case__jule_tuple_bool {
	jule::Ptr<_201001a9d_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_201001a9d_Case__jule_tuple_x_2010009d1_Else {
	jule::Slice<jule::Ptr<_201001a9d_Case>> __jule_result_arg0;
	jule::Ptr<_2010009d1_Else> __jule_result_arg1;
};
struct __jule_tuple__200ee99a8_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool {
	jule::Ptr<_200ee8ce8_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool {
	jule::Ptr<_200eda6ad_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_200edd42a_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_200edd42a_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_200d46041_Ast__jule_tuple_s_2193a460d_Log {
	jule::Slice<jule::Ptr<_200d46041_Ast>> __jule_result_arg0;
	jule::Slice<_2193a460d_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_2193a460d_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_2193a460d_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_2031e99ca_IR__jule_tuple_s_2193a460d_Log {
	jule::Ptr<_2031e99ca_IR> __jule_result_arg0;
	jule::Slice<_2193a460d_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1edc20208_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1edc20208_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1edc20208_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1edc20208_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_2010e9118_SymbolTable__jule_tuple_s_2193a460d_Log {
	jule::Ptr<_2010e9118_SymbolTable> __jule_result_arg0;
	jule::Slice<_2193a460d_Log> __jule_result_arg1;
};
struct __jule_tuple_x_20107ded2_Package__jule_tuple_s_2193a460d_Log {
	jule::Ptr<_20107ded2_Package> __jule_result_arg0;
	jule::Slice<_2193a460d_Log> __jule_result_arg1;
};
struct __jule_tuple_x_200d46041_Ast__jule_tuple_s_2193a460d_Log {
	jule::Ptr<_200d46041_Ast> __jule_result_arg0;
	jule::Slice<_2193a460d_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ed694d8c_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ed694d8c_Token__jule_tuple_sx_1ed694d8c_Token {
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1ed694d8c_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> __jule_result_arg0;
	jule::Slice<_2193a460d_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _217e86334_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_217e86334_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_217e86334_acceptRange _other) { return !this->operator==(_other); }


};
struct _2192d0aab_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_2192d0aab_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2192d0aab_Range16 _other) { return !this->operator==(_other); }


};
struct _2192d102e_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_2192d102e_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2192d102e_Range32 _other) { return !this->operator==(_other); }


};
struct _2192d14a2_RangeTable {
	jule::Slice<_2192d0aab_Range16> _field_R16;
	jule::Slice<_2192d102e_Range32> _field_R32;
	jule::I32 _field_LatinOffset = 0;
	


};
inline jule::U8 _219321e1b_index(_2193219dc_lazyBuff*, jule::I32);
inline void _219322191_append(_2193219dc_lazyBuff*, jule::U8);
inline jule::Str _219322405_string(_2193219dc_lazyBuff*);
struct _2193219dc_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen = 0;
	


};
struct _217d998b8_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_217da8c3a_Status> _field_Stat;
	

	inline bool operator==(_217d998b8_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_217d998b8_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_217d998b8_DirEntry>>> static__2193245e4_Read(jule::Str);
inline jule::VoidExceptional static__219324803_Create(jule::Str);
inline jule::VoidExceptional static__219324a12_Remove(jule::Str);
struct _217d99b2c_Directory {
	

	inline bool operator==(_217d99b2c_Directory _other) { return true; }

	inline bool operator!=(_217d99b2c_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_217da65ea_File> static__217da6a18_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_217da65ea_File>> static__217da6cb0_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__217da7057_Read(jule::Str);
inline jule::VoidExceptional static__217da73a9_Write(jule::Str, jule::Slice<jule::U8>, jule::I32);
inline jule::VoidExceptional static__217da770b_WriteStr(jule::Str, jule::Str*, jule::I32);
inline jule::Exceptional<jule::I32> _217da7c17_Seek(_217da65ea_File*, jule::I32, jule::I32);
inline jule::Exceptional<jule::I32> _217da8025_WriteStr(_217da65ea_File*, jule::Str*);
inline jule::VoidExceptional _217da8201_Close(_217da65ea_File*);
inline jule::Exceptional<jule::Ptr<_217da65ea_File>> static__217e89cc7_Open(jule::Str, jule::I32, jule::I32);
inline jule::VoidExceptional static__217e89ed6_Remove(jule::Str);
inline jule::Exceptional<jule::I32> _217e8a437_Write(_217da65ea_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I32> _217e8a745_Read(_217da65ea_File*, jule::Slice<jule::U8>);
struct _217da65ea_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_217da65ea_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_217da65ea_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _217da9103_IsDir(_217da8c3a_Status*);
inline jule::Bool _217da9367_IsReg(_217da8c3a_Status*);
inline jule::U32 _217da95cb_Size(_217da8c3a_Status*);
inline jule::Exceptional<jule::Ptr<_217da8c3a_Status>> static__219325419_Of(jule::Str);
struct _217da8c3a_Status {
	jule::I32 _field_mode = 0LL;
	jule::U32 _field_size = 0;
	

	inline bool operator==(_217da8c3a_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_217da8c3a_Status _other) { return !this->operator==(_other); }


};
struct _21ab61517_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	inline bool operator==(_21ab61517_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_21ab61517_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _2193a460d_Log {
	jule::I32 _field_Kind = 0LL;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_2193a460d_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_2193a460d_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1ed695200_Prec(_1ed694d8c_Token*);
struct _1ed694d8c_Token {
	jule::Ptr<_1ed69a227_File> _field_File;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U32 _field_Id = 0LLU;
	

	inline bool operator==(_1ed694d8c_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1ed694d8c_Token _other) { return !this->operator==(_other); }


};
inline void _1ed69a5e0_Fill(_1ed69a227_File*, jule::Slice<jule::U8>);
inline jule::Str _1ed69a854_Dir(_1ed69a227_File*);
inline jule::Str _1ed69aab8_Name(_1ed69a227_File*);
inline jule::Uintptr _1ed69ad2c_Addr(_1ed69a227_File*);
inline jule::Str _1ed69b13a_GetRow(_1ed69a227_File*, jule::I32);
struct _1ed69a227_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_Tokens;
	


};
struct _1ed69c009_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U32 _field_id = 0LLU;
	

	inline bool operator==(_1ed69c009_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1ed69c009_kindPair _other) { return !this->operator==(_other); }


};
inline void _1ed6a30ba_pushErr(_1ed6a2a6a_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1ed6a33d9_pushErrTok(_1ed6a2a6a_lex*, jule::Ptr<_1ed694d8c_Token>*, jule::Str);
inline void _1ed6a35b5_lex(_1ed6a2a6a_lex*);
inline jule::Str _1ed6a38c3_id(_1ed6a2a6a_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1ed6a3b37_resume(_1ed6a2a6a_lex*);
inline void _1ed6a3dac_lexLineComment(_1ed6a2a6a_lex*, jule::Ptr<_1ed694d8c_Token>*);
inline void _1ed6a4132_lexRangeComment(_1ed6a2a6a_lex*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Str _1ed6a4440_num(_1ed6a2a6a_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1ed6a474d_escapeSeq(_1ed6a2a6a_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1ed6a4b05_getRune(_1ed6a2a6a_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1ed6a4e13_lexRune(_1ed6a2a6a_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1ed6a5177_lexStr(_1ed6a2a6a_lex*);
inline jule::Bool _1ed6a53db_isFirstTokenOfLine(_1ed6a2a6a_lex*);
inline void _1ed6a55b7_newLine(_1ed6a2a6a_lex*);
inline jule::Bool _1ed6a5ab2_isOp(_1ed6a2a6a_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U32, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _1ed6a5e69_lexBasicOps(_1ed6a2a6a_lex*, jule::Slice<jule::U8>, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _1ed6a6321_lexId(_1ed6a2a6a_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _1ed6a66c8_lexNum(_1ed6a2a6a_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Ptr<_1ed694d8c_Token> _1ed6a693c_token(_1ed6a2a6a_lex*);
struct _1ed6a2a6a_lex {
	jule::I32 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_tokens;
	jule::Ptr<_1ed69a227_File> _field_file;
	jule::I32 _field_pos = 0;
	jule::I32 _field_column = 0;
	jule::I32 _field_row = 0;
	jule::Slice<_2193a460d_Log> _field_errors;
	


};
struct _1ee316359_floatInfo {
	jule::U32 _field_mantbits = 0;
	jule::U32 _field_expbits = 0;
	jule::I32 _field_bias = 0;
	

	inline bool operator==(_1ee316359_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1ee316359_floatInfo _other) { return !this->operator==(_other); }


};
struct _1ee316ce9_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1ee328129_leftCheat {
	jule::I32 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1ee328129_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1ee328129_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ee320b27_set(_1ee328aec_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _1ee320e35_floatBits(_1ee328aec_decimal*, _1ee316359_floatInfo*);
inline void _1ee328e82_assign(_1ee328aec_decimal*, jule::U64);
inline void _1ee329207_shift(_1ee328aec_decimal*, jule::I32);
inline void _1ee32947c_roundDown(_1ee328aec_decimal*, jule::I32);
inline void _1ee329702_roundUp(_1ee328aec_decimal*, jule::I32);
inline void _1ee329977_round(_1ee328aec_decimal*, jule::I32);
inline jule::U64 _1ee329bdb_roundedInteger(_1ee328aec_decimal*);
struct _1ee328aec_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1ee328aec_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1ee328aec_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ee33c6d2_Const> static__1ee33cb11_NewI64(jule::I64);
inline jule::Ptr<_1ee33c6d2_Const> static__1ee33cda8_NewU64(jule::U64);
inline jule::Ptr<_1ee33c6d2_Const> static__1ee33d150_NewBool(jule::Bool);
inline jule::Ptr<_1ee33c6d2_Const> static__1ee33d3e7_NewStr(jule::Str);
inline jule::Ptr<_1ee33c6d2_Const> static__1ee33d68e_NewF64(jule::F64);
inline jule::Ptr<_1ee33c6d2_Const> static__1ee33d88c_NewNil(void);
inline jule::I64 _1ee33deca_ReadI64(_1ee33c6d2_Const*);
inline jule::U64 _1ee33e23e_ReadU64(_1ee33c6d2_Const*);
inline jule::Bool _1ee33e4a3_ReadBool(_1ee33c6d2_Const*);
inline jule::Str _1ee33e717_ReadStr(_1ee33c6d2_Const*);
inline jule::F64 _1ee33e97b_ReadF64(_1ee33c6d2_Const*);
inline jule::I64 _1ee33ebe0_AsI64(_1ee33c6d2_Const*);
inline jule::U64 _1ee33ee54_AsU64(_1ee33c6d2_Const*);
inline jule::F64 _1ee3401b8_AsF64(_1ee33c6d2_Const*);
inline void _1ee34043d_SetI64(_1ee33c6d2_Const*, jule::I64);
inline void _1ee3406b3_SetU64(_1ee33c6d2_Const*, jule::U64);
inline void _1ee340938_SetBool(_1ee33c6d2_Const*, jule::Bool);
inline void _1ee340bad_SetStr(_1ee33c6d2_Const*, jule::Str);
inline void _1ee340e33_SetF64(_1ee33c6d2_Const*, jule::F64);
inline void _1ee34110e_SetNil(_1ee33c6d2_Const*);
inline jule::Bool _1ee341373_IsI64(_1ee33c6d2_Const*);
inline jule::Bool _1ee3415d7_IsU64(_1ee33c6d2_Const*);
inline jule::Bool _1ee34184b_IsBool(_1ee33c6d2_Const*);
inline jule::Bool _1ee341ab0_IsStr(_1ee33c6d2_Const*);
inline jule::Bool _1ee341d24_IsF64(_1ee33c6d2_Const*);
inline jule::Bool _1ee342088_IsNil(_1ee33c6d2_Const*);
inline jule::Bool _1ee342396_AreSameTypes(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee3426a4_And(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee3429b2_Or(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee342cc0_Eq(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee3430cd_Lt(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee3433db_LtEq(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee3436e9_Gt(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee343a07_GtEq(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee343d15_Add(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee344123_Sub(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee344431_Mul(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee34473e_Div(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee344a4c_Mod(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee344d5a_BitwiseAnd(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee345168_BitwiseOr(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee345476_Xor(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee345784_Lshift(_1ee33c6d2_Const*, _1ee33c6d2_Const);
inline jule::Bool _1ee345a92_Rshift(_1ee33c6d2_Const*, _1ee33c6d2_Const);
struct _1ee33c6d2_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1ee33c6d2_Const _other) { return _1ee342cc0_Eq(this, _other); }

	inline bool operator!=(_1ee33c6d2_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1ee33c6d2_Const _other) { return _1ee3436e9_Gt(this, _other); }

	inline jule::Bool operator>=(_1ee33c6d2_Const _other) { return _1ee343a07_GtEq(this, _other); }

	inline jule::Bool operator<(_1ee33c6d2_Const _other) { return _1ee3430cd_Lt(this, _other); }

	inline jule::Bool operator<=(_1ee33c6d2_Const _other) { return _1ee3433db_LtEq(this, _other); }


};
struct _200d46041_Ast {
	jule::Ptr<_1ed69a227_File> _field_File;
	jule::Slice<jule::Ptr<_200d472d9_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_201002a16_UseDecl>> _field_UseDecls;
	jule::Slice<_200d46ddd_Node> _field_Nodes;
	


};
struct _200d46ddd_Node {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_200d46ddd_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_200d46ddd_Node _other) { return !this->operator==(_other); }


};
struct _200d472d9_Directive {
	jule::Ptr<_1ed694d8c_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_Args;
	


};
struct _200eda6ad_TypeDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_200eda6ad_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_200eda6ad_TypeDecl _other) { return !this->operator==(_other); }


};
struct _200edac74_IdentTypeDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _field_Generics;
	


};
struct _200edb060_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_200edac74_IdentTypeDecl>> _field_Idents;
	


};
struct _200edb3d4_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_Idents;
	jule::Ptr<_200eda6ad_TypeDecl> _field_Kind;
	


};
struct _200edb6c0_SptrTypeDecl {
	jule::Ptr<_200eda6ad_TypeDecl> _field_Elem;
	

	inline bool operator==(_200edb6c0_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_200edb6c0_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _200edbabb_SlcTypeDecl {
	jule::Ptr<_200eda6ad_TypeDecl> _field_Elem;
	

	inline bool operator==(_200edbabb_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_200edbabb_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _200edbda7_TupleTypeDecl {
	jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _field_Types;
	


};
inline jule::Bool _200edc4e5_IsUnsafe(_200edc193_PtrTypeDecl*);
struct _200edc193_PtrTypeDecl {
	jule::Ptr<_200eda6ad_TypeDecl> _field_Elem;
	

	inline bool operator==(_200edc193_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_200edc193_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _200edcbbb_AutoSized(_200edc869_ArrTypeDecl*);
struct _200edc869_ArrTypeDecl {
	jule::Ptr<_200eda6ad_TypeDecl> _field_Elem;
	jule::Ptr<_200ede838_Expr> _field_Size;
	

	inline bool operator==(_200edc869_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_200edc869_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _200edd073_MapTypeDecl {
	jule::Ptr<_200eda6ad_TypeDecl> _field_Key;
	jule::Ptr<_200eda6ad_TypeDecl> _field_Val;
	

	inline bool operator==(_200edd073_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_200edd073_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _200edd42a_RetTypeDecl {
	jule::Ptr<_200eda6ad_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_Idents;
	


};
struct _200ede838_Expr {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_1ed694d8c_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_200ede838_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_200ede838_Expr _other) { return !this->operator==(_other); }


};
struct _200edeb24_RangeExpr {
	jule::Ptr<_200ede838_Expr> _field_Expr;
	

	inline bool operator==(_200edeb24_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_200edeb24_RangeExpr _other) { return !this->operator==(_other); }


};
struct _200ee01c9_UseExpr {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	

	inline bool operator==(_200ee01c9_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_200ee01c9_UseExpr _other) { return !this->operator==(_other); }


};
struct _200ee04b5_TupleExpr {
	jule::Slice<jule::Ptr<_200ede838_Expr>> _field_Expr;
	


};
inline jule::Bool _200ee0bbe_IsNil(_200ee086c_LitExpr*);
struct _200ee086c_LitExpr {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_200ee086c_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_200ee086c_LitExpr _other) { return !this->operator==(_other); }


};
struct _200ee0eaa_UnsafeExpr {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	

	inline bool operator==(_200ee0eaa_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_200ee0eaa_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _200ee1780_IsSelf(_200ee142d_IdentExpr*);
struct _200ee142d_IdentExpr {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_200ee142d_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_200ee142d_IdentExpr _other) { return !this->operator==(_other); }


};
struct _200ee1b37_UnaryExpr {
	jule::Ptr<_1ed694d8c_Token> _field_Op;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	

	inline bool operator==(_200ee1b37_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_200ee1b37_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _200ee1ede_VariadicExpr {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	

	inline bool operator==(_200ee1ede_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_200ee1ede_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _200ee2396_CastExpr {
	jule::Ptr<_200eda6ad_TypeDecl> _field_Kind;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	

	inline bool operator==(_200ee2396_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_200ee2396_CastExpr _other) { return !this->operator==(_other); }


};
struct _200ee274d_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_Ns;
	jule::Ptr<_1ed694d8c_Token> _field_Ident;
	


};
struct _200ee2bc1_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	jule::Ptr<_1ed694d8c_Token> _field_Ident;
	

	inline bool operator==(_200ee2bc1_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_200ee2bc1_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _200ee3144_BinopExpr {
	jule::Ptr<_200ede838_Expr> _field_Left;
	jule::Ptr<_200ede838_Expr> _field_Right;
	jule::Ptr<_1ed694d8c_Token> _field_Op;
	

	inline bool operator==(_200ee3144_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_200ee3144_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _200ee3ab2_Unhandled(_200ee374e_FnCallExpr*);
inline jule::Bool _200ee3d26_Ignored(_200ee374e_FnCallExpr*);
struct _200ee374e_FnCallExpr {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_200ede838_Expr>> _field_Args;
	jule::Ptr<_200eea2e4_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
inline jule::Bool _200ee4530_IsTargeted(_200ee41cd_FieldExprPair*);
struct _200ee41cd_FieldExprPair {
	jule::Ptr<_1ed694d8c_Token> _field_Field;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	

	inline bool operator==(_200ee41cd_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_200ee41cd_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _200ee49a3_StructLit {
	jule::Ptr<_1ed694d8c_Token> _field_End;
	jule::Ptr<_200eda6ad_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_200ede838_Expr>> _field_Exprs;
	


};
inline jule::Bool _200ee5278_IsEmpty(_200ee4e26_BraceLit*);
struct _200ee4e26_BraceLit {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_1ed694d8c_Token> _field_End;
	jule::Slice<jule::Ptr<_200ede838_Expr>> _field_Exprs;
	


};
struct _200ee580b_KeyValPair {
	jule::Ptr<_200ede838_Expr> _field_Key;
	jule::Ptr<_200ede838_Expr> _field_Val;
	jule::Ptr<_1ed694d8c_Token> _field_Colon;
	

	inline bool operator==(_200ee580b_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_200ee580b_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _200ee629b_IsEmpty(_200ee5e7c_SliceExpr*);
struct _200ee5e7c_SliceExpr {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_1ed694d8c_Token> _field_End;
	jule::Slice<jule::Ptr<_200ede838_Expr>> _field_Exprs;
	


};
struct _200ee67da_IndexingExpr {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_1ed694d8c_Token> _field_End;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	jule::Ptr<_200ede838_Expr> _field_Index;
	

	inline bool operator==(_200ee67da_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_200ee67da_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _200ee6de5_SlicingExpr {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_1ed694d8c_Token> _field_End;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	jule::Ptr<_200ede838_Expr> _field_Start;
	jule::Ptr<_200ede838_Expr> _field_To;
	

	inline bool operator==(_200ee6de5_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_200ee6de5_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _200ee71d1_Constraint {
	jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _field_Mask;
	


};
struct _200ee7654_GenericDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_200ee71d1_Constraint> _field_Constraint;
	

	inline bool operator==(_200ee7654_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_200ee7654_GenericDecl _other) { return !this->operator==(_other); }


};
struct _200ee7a0b_LabelSt {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_200ee7a0b_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_200ee7a0b_LabelSt _other) { return !this->operator==(_other); }


};
struct _200ee7db3_GotoSt {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_1ed694d8c_Token> _field_Label;
	

	inline bool operator==(_200ee7db3_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_200ee7db3_GotoSt _other) { return !this->operator==(_other); }


};
struct _200ee819e_FallSt {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	

	inline bool operator==(_200ee819e_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_200ee819e_FallSt _other) { return !this->operator==(_other); }


};
struct _200ee87a9_AssignLeft {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	

	inline bool operator==(_200ee87a9_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_200ee87a9_AssignLeft _other) { return !this->operator==(_other); }


};
struct _200ee8ce8_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1ed694d8c_Token> _field_Setter;
	jule::Slice<jule::Ptr<_200ee87a9_AssignLeft>> _field_Left;
	jule::Ptr<_200ede838_Expr> _field_Right;
	


};
struct _200ee9bd9_Stmt {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_200ee9bd9_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_200ee9bd9_Stmt _other) { return !this->operator==(_other); }


};
struct _200eea2e4_ScopeTree {
	jule::Ptr<_200eea2e4_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_200ee9bd9_Stmt> _field_Stmts;
	jule::Ptr<_1ed694d8c_Token> _field_End;
	


};
inline jule::Bool _200eead2d_IsSelf(_200eea9ba_ParamDecl*);
inline jule::Bool _200eeb092_IsRef(_200eea9ba_ParamDecl*);
struct _200eea9ba_ParamDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_200eda6ad_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_200eea9ba_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_200eea9ba_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _200eec13c_IsAnon(_200eebcda_FnDecl*);
struct _200eebcda_FnDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_200d472d9_Directive>> _field_Directives;
	jule::Ptr<_200eea2e4_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_200ee7654_GenericDecl>> _field_Generics;
	jule::Ptr<_200edd42a_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_200eea9ba_ParamDecl>> _field_Params;
	


};
struct _200eeccb9_VarDecl {
	jule::Ptr<_200eea2e4_ScopeTree> _field_Scope;
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_200d472d9_Directive>> _field_Directives;
	jule::Ptr<_200eda6ad_TypeDecl> _field_Kind;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	


};
struct _200eed171_RetSt {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	

	inline bool operator==(_200eed171_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_200eed171_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _200eedb33_IsInf(_200eed7d1_Iter*);
struct _200eed7d1_Iter {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_200eea2e4_ScopeTree> _field_Scope;
	

	inline bool operator==(_200eed7d1_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_200eed7d1_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _200eee408_IsWhileNext(_200eee0a6_WhileKind*);
struct _200eee0a6_WhileKind {
	jule::Ptr<_200ede838_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1ed694d8c_Token> _field_NextToken;
	

	inline bool operator==(_200eee0a6_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_200eee0a6_WhileKind _other) { return !this->operator==(_other); }


};
struct _200eee947_RangeKind {
	jule::Ptr<_1ed694d8c_Token> _field_InToken;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	jule::Ptr<_200eeccb9_VarDecl> _field_KeyA;
	jule::Ptr<_200eeccb9_VarDecl> _field_KeyB;
	

	inline bool operator==(_200eee947_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_200eee947_RangeKind _other) { return !this->operator==(_other); }


};
struct _200eeecee_BreakSt {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_1ed694d8c_Token> _field_Label;
	

	inline bool operator==(_200eeecee_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_200eeecee_BreakSt _other) { return !this->operator==(_other); }


};
struct _2010001a6_ContSt {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_1ed694d8c_Token> _field_Label;
	

	inline bool operator==(_2010001a6_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_2010001a6_ContSt _other) { return !this->operator==(_other); }


};
struct _201000629_If {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	jule::Ptr<_200eea2e4_ScopeTree> _field_Scope;
	

	inline bool operator==(_201000629_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_201000629_If _other) { return !this->operator==(_other); }


};
struct _2010009d1_Else {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_200eea2e4_ScopeTree> _field_Scope;
	

	inline bool operator==(_2010009d1_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_2010009d1_Else _other) { return !this->operator==(_other); }


};
struct _201000e54_Conditional {
	jule::Ptr<_201000629_If> _field_Head;
	jule::Slice<jule::Ptr<_201000629_If>> _field_Tail;
	jule::Ptr<_2010009d1_Else> _field_Default;
	


};
struct _20100162a_TypeAliasDecl {
	jule::Ptr<_200eea2e4_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_200eda6ad_TypeDecl> _field_Kind;
	

	inline bool operator==(_20100162a_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20100162a_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _201001a9d_Case {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_200eea2e4_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_200ede838_Expr>> _field_Exprs;
	


};
struct _201002274_MatchCase {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_1ed694d8c_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_201001a9d_Case>> _field_Cases;
	jule::Ptr<_2010009d1_Else> _field_Default;
	


};
struct _201002a16_UseDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
inline jule::Bool _2010032db_AutoExpr(_201002e89_EnumItemDecl*);
struct _201002e89_EnumItemDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_200ede838_Expr> _field_Expr;
	

	inline bool operator==(_201002e89_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_201002e89_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _201003d14_DefaultTyped(_2010039b2_EnumDecl*);
struct _2010039b2_EnumDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_200eda6ad_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_201002e89_EnumItemDecl>> _field_Items;
	jule::Ptr<_1ed694d8c_Token> _field_End;
	


};
struct _201004287_TypeEnumItemDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_200eda6ad_TypeDecl> _field_Kind;
	

	inline bool operator==(_201004287_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_201004287_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _201004892_TypeEnumDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_201004287_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1ed694d8c_Token> _field_End;
	


};
struct _201004b06_FieldDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_200eda6ad_TypeDecl> _field_Kind;
	jule::Ptr<_200ede838_Expr> _field_Default;
	

	inline bool operator==(_201004b06_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_201004b06_FieldDecl _other) { return !this->operator==(_other); }


};
struct _201005453_StructDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_1ed694d8c_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_201004b06_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_200d472d9_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_200ee7654_GenericDecl>> _field_Generics;
	


};
struct _201005b29_TraitDecl {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_1ed694d8c_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_200eebcda_FnDecl>> _field_Methods;
	


};
inline jule::Bool _201006597_IsTraitImpl(_201006234_Impl*);
inline jule::Bool _20100680b_IsStructImpl(_201006234_Impl*);
struct _201006234_Impl {
	jule::Ptr<_1ed694d8c_Token> _field_End;
	jule::Ptr<_200eda6ad_TypeDecl> _field_Base;
	jule::Ptr<_200eda6ad_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_200eebcda_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_200eeccb9_VarDecl>> _field_Statics;
	


};
inline jule::Ptr<_20100c57b_FieldIns> _2010079e9_instance(jule::Ptr<_201007686_Field>);
struct _201007686_Field {
	jule::Ptr<_20100a25a_Struct> _field_Owner;
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_201137e9d_TypeSymbol> _field_Kind;
	jule::Ptr<_200ede838_Expr> _field_Default;
	

	inline bool operator==(_201007686_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_201007686_Field _other) { return !this->operator==(_other); }


};
struct _201009446_Operators {
	jule::Ptr<_20102330b_FnIns> _field_Eq;
	jule::Ptr<_20102330b_FnIns> _field_Gt;
	jule::Ptr<_20102330b_FnIns> _field_GtEq;
	jule::Ptr<_20102330b_FnIns> _field_Lt;
	jule::Ptr<_20102330b_FnIns> _field_LtEq;
	jule::Ptr<_20102330b_FnIns> _field_Shl;
	jule::Ptr<_20102330b_FnIns> _field_Shr;
	jule::Ptr<_20102330b_FnIns> _field_Add;
	jule::Ptr<_20102330b_FnIns> _field_Sub;
	jule::Ptr<_20102330b_FnIns> _field_Div;
	jule::Ptr<_20102330b_FnIns> _field_Mul;
	jule::Ptr<_20102330b_FnIns> _field_Mod;
	jule::Ptr<_20102330b_FnIns> _field_BitAnd;
	jule::Ptr<_20102330b_FnIns> _field_BitOr;
	jule::Ptr<_20102330b_FnIns> _field_BitXor;
	jule::Ptr<_20102330b_FnIns> _field_Neg;
	jule::Ptr<_20102330b_FnIns> _field_Pos;
	jule::Ptr<_20102330b_FnIns> _field_BitNot;
	jule::Ptr<_20102330b_FnIns> _field_AddAssign;
	jule::Ptr<_20102330b_FnIns> _field_SubAssign;
	jule::Ptr<_20102330b_FnIns> _field_DivAssign;
	jule::Ptr<_20102330b_FnIns> _field_MulAssign;
	jule::Ptr<_20102330b_FnIns> _field_ModAssign;
	jule::Ptr<_20102330b_FnIns> _field_ShlAssign;
	jule::Ptr<_20102330b_FnIns> _field_ShrAssign;
	jule::Ptr<_20102330b_FnIns> _field_BitOrAssign;
	jule::Ptr<_20102330b_FnIns> _field_BitAndAssign;
	jule::Ptr<_20102330b_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_201009446_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_201009446_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20100d071_StructIns> _20100a6bc_instance(jule::Ptr<_20100a25a_Struct>);
inline jule::Ptr<_20100d071_StructIns> _20100a997_appendInstance(_20100a25a_Struct*, jule::Ptr<_20100d071_StructIns>*);
inline jule::Ptr<_20102065a_Fn> _20100ad4e_FindMethod(_20100a25a_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_2010a4975_Var> _20100b15c_FindStatic(_20100a25a_Struct*, jule::Str);
inline jule::Ptr<_201007686_Field> _20100b46a_FindField(_20100a25a_Struct*, jule::Str);
inline jule::Bool _20100b778_IsImplements(_20100a25a_Struct*, jule::Ptr<_20103287b_Trait>);
inline jule::Bool _20100ba86_IsDerives(_20100a25a_Struct*, jule::Str);
inline jule::Bool _20100bd94_IsUses(_20100a25a_Struct*, jule::Ptr<_20100a25a_Struct>);
inline jule::Bool _20100c108_HasRefAccessible(_20100a25a_Struct*);
struct _20100a25a_Struct {
	jule::Ptr<_201084669_Sema> _field_sema;
	jule::Slice<jule::Ptr<_20100a25a_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_20100a25a_Struct>> _field_Uses;
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_201007686_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_20102065a_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_2010a4975_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_200d472d9_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_200ee7654_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_20103287b_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_20100d071_StructIns>> _field_Instances;
	


};
struct _20100c57b_FieldIns {
	jule::Ptr<_201007686_Field> _field_Decl;
	jule::Ptr<_2011310ea_TypeKind> _field_Kind;
	jule::Ptr<_2010edb23_Data> _field_Default;
	

	inline bool operator==(_20100c57b_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_20100c57b_FieldIns _other) { return !this->operator==(_other); }


};
struct _201012020_OperandExprModel {
	jule::Ptr<_2011310ea_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_201012020_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_201012020_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _2010124d7_BinopExprModel {
	jule::Ptr<_201012020_OperandExprModel> _field_Left;
	jule::Ptr<_201012020_OperandExprModel> _field_Right;
	jule::Ptr<_1ed694d8c_Token> _field_Op;
	

	inline bool operator==(_2010124d7_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_2010124d7_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _20101288e_UnaryExprModel {
	jule::Ptr<_2010edb23_Data> _field_Expr;
	jule::Ptr<_1ed694d8c_Token> _field_Op;
	

	inline bool operator==(_20101288e_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_20101288e_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _201012c8a_StructArgExprModel {
	jule::Ptr<_20100c57b_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_201012c8a_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_201012c8a_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _201013142_StructLitExprModel {
	jule::Ptr<_20100d071_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_201012c8a_StructArgExprModel>> _field_Args;
	


};
struct _201013450_AllocStructLitExprModel {
	jule::Ptr<_201013142_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_201013450_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_201013450_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _2010139a0_CastingExprModel {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_2011310ea_TypeKind> _field_Kind;
	jule::Ptr<_2011310ea_TypeKind> _field_ExprKind;
	

	inline bool operator==(_2010139a0_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_2010139a0_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _201014352_FnCallExprModel {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_20102330b_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_20105c92d_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _201014709_SliceExprModel {
	jule::Ptr<_2011310ea_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _201014b7c_IndexingExprModel {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_2010edb23_Data> _field_Expr;
	jule::Ptr<_2010edb23_Data> _field_Index;
	

	inline bool operator==(_201014b7c_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_201014b7c_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _201015034_AnonFnExprModel {
	jule::Ptr<_20102330b_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_201015034_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_201015034_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _2010153db_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_2010153db_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_2010153db_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _20101585e_MapExprModel {
	jule::Ptr<_2011310ea_TypeKind> _field_KeyKind;
	jule::Ptr<_2011310ea_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_2010153db_KeyValPairExprModel>> _field_Entries;
	


};
struct _201015d9d_SlicingExprModel {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_201015d9d_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_201015d9d_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _2010163dc_TraitSubIdentExprModel {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20102065a_Fn> _field_Method;
	jule::Ptr<_20103287b_Trait> _field_Trt;
	

	inline bool operator==(_2010163dc_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_2010163dc_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _201016bc3_StructSubIdentExprModel {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Ptr<_2010edb23_Data> _field_Expr;
	jule::Ptr<_20102330b_FnIns> _field_Method;
	jule::Ptr<_20100c57b_FieldIns> _field_Field;
	jule::Ptr<_20100d071_StructIns> _field_Owner;
	

	inline bool operator==(_201016bc3_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_201016bc3_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _201017069_StructStaticIdentExprModel {
	jule::Ptr<_20100d071_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20102330b_FnIns> _field_Method;
	

	inline bool operator==(_201017069_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_201017069_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _201017432_ArrayExprModel {
	jule::Ptr<_20113eba8_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _20101771d_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	inline bool operator==(_20101771d_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20101771d_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _201017c7e_CommonSubIdentExprModel {
	jule::Ptr<_2011310ea_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_201017c7e_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_201017c7e_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _20101807b_TupleExprModel {
	jule::Slice<jule::Ptr<_2010edb23_Data>> _field_Datas;
	


};
struct _201018455_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_201018455_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_201018455_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _201018840_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_201018840_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_201018840_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _201018b5e_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_201018b5e_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_201018b5e_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _201019049_BuiltinNewCallExprModel {
	jule::Ptr<_2011310ea_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_201019049_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_201019049_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _201019434_BuiltinPanicCallExprModel {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_201019434_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_201019434_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _2010198da_BuiltinAssertCallExprModel {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_2010198da_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_2010198da_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _201019d91_BuiltinMakeCallExprModel {
	jule::Ptr<_2011310ea_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_201019d91_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_201019d91_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _20101a27b_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_20101a27b_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_20101a27b_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _20101a59a_BuiltinLenCallExprModel {
	jule::Ptr<_2010edb23_Data> _field_Expr;
	

	inline bool operator==(_20101a59a_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20101a59a_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _20101a8b9_BuiltinCapCallExprModel {
	jule::Ptr<_2010edb23_Data> _field_Expr;
	

	inline bool operator==(_20101a8b9_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20101a8b9_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _20101b06d_BuiltinDeleteCallExprModel {
	jule::Ptr<_2010edb23_Data> _field_Dest;
	jule::Ptr<_2010edb23_Data> _field_Key;
	

	inline bool operator==(_20101b06d_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_20101b06d_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _20101b3d1_BuiltinCopyCallExprModel {
	jule::Ptr<_2010edb23_Data> _field_Dest;
	jule::Ptr<_2010edb23_Data> _field_Src;
	

	inline bool operator==(_20101b3d1_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_20101b3d1_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _20101b7bb_BuiltinErrorCallExprModel {
	jule::Ptr<_20102330b_FnIns> _field_Func;
	jule::Ptr<_2010edb23_Data> _field_Err;
	

	inline bool operator==(_20101b7bb_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_20101b7bb_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _20101bab8_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_20101bab8_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20101bab8_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _20101bda4_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_20101bda4_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20101bda4_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _20101c190_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_20101c190_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_20101c190_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _20101c49d_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_20101c49d_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20101c49d_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _20101c866_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _20101cb52_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_20101cb52_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_20101cb52_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _20101d614_RetType {
	jule::Ptr<_201137e9d_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_Idents;
	


};
inline jule::Ptr<_20102243c_ParamIns> _20101e192_instance(jule::Ptr<_20101dd1d_Param>);
inline jule::Bool _20101e406_IsSelf(_20101dd1d_Param*);
inline jule::Bool _20101e66a_IsRef(_20101dd1d_Param*);
struct _20101dd1d_Param {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_201137e9d_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_20101dd1d_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20101dd1d_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _201020abc_IsVoid(_20102065a_Fn*);
inline jule::Bool _201020d31_IsMethod(_20102065a_Fn*);
inline jule::Bool _201021095_IsEntryPoint(_20102065a_Fn*);
inline jule::Bool _201021309_IsInit(_20102065a_Fn*);
inline jule::Bool _20102156d_IsAnon(_20102065a_Fn*);
inline jule::Bool _2010217d2_AnyVar(_20102065a_Fn*);
inline jule::Ptr<_20102330b_FnIns> _201021a46_instanceForce(jule::Ptr<_20102065a_Fn>);
inline jule::Ptr<_20102330b_FnIns> _201021caa_instance(jule::Ptr<_20102065a_Fn>);
inline jule::Ptr<_20102330b_FnIns> _201022085_appendInstance(_20102065a_Fn*, jule::Ptr<_20102330b_FnIns>*);
struct _20102065a_Fn {
	jule::Ptr<_201084669_Sema> _field_sema;
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_200d472d9_Directive>> _field_Directives;
	jule::Ptr<_200eea2e4_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_200ee7654_GenericDecl>> _field_Generics;
	jule::Ptr<_20101d614_RetType> _field_Result;
	jule::Slice<jule::Ptr<_20101dd1d_Param>> _field_Params;
	jule::Ptr<_20100a25a_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_20102330b_FnIns>> _field_Instances;
	


};
inline jule::Str _20102278e_Str(_20102243c_ParamIns*);
struct _20102243c_ParamIns {
	jule::Ptr<_20101dd1d_Param> _field_Decl;
	jule::Ptr<_2011310ea_TypeKind> _field_Kind;
	

	inline bool operator==(_20102243c_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_20102243c_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _20102363b_Str(_20102330b_FnIns*);
inline jule::Bool _201023949_Equal(jule::Ptr<_20102330b_FnIns>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Bool _201023dab_EqualFn(jule::Ptr<_20102330b_FnIns>, jule::Ptr<_20102330b_FnIns>*);
inline jule::Bool _2010241b9_equalTrait(jule::Ptr<_20102330b_FnIns>, jule::Ptr<_20102330b_FnIns>*);
inline jule::Slice<jule::Ptr<_2011310ea_TypeKind>> _20102442d_Types(_20102330b_FnIns*);
inline jule::Bool _201024692_IsBuiltin(_20102330b_FnIns*);
inline jule::Bool _201024906_IsAnon(_20102330b_FnIns*);
inline jule::Bool _201024c14_Same(_20102330b_FnIns*, jule::Ptr<_20102330b_FnIns>);
inline jule::Str _201025022_GetKindStr(_20102330b_FnIns*, jule::Bool);
struct _20102330b_FnIns {
	jule::Ptr<_20100d071_StructIns> _field_Owner;
	jule::Ptr<_20102065a_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_20112e868_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_20102243c_ParamIns>> _field_Params;
	jule::Ptr<_2011310ea_TypeKind> _field_Result;
	jule::Ptr<_20105c92d_Scope> _field_Scope;
	jule::Ptr<_201026265_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
inline jule::Ptr<_201026265_ReferenceStack> static__201026474_new(void);
inline jule::I32 _20102684d_Len(_201026265_ReferenceStack*);
inline jule::Any _201026b5b_At(_201026265_ReferenceStack*, jule::I32);
inline void _201026dd1_Push(_201026265_ReferenceStack*, jule::Any);
inline jule::Bool _2056b9ecb_Exist(_201026265_ReferenceStack*, jule::Ptr<_20102330b_FnIns>);
inline jule::Bool _2056cd385_Exist(_201026265_ReferenceStack*, jule::Ptr<_2010a4975_Var>);
inline jule::Bool _20576c59a_Exist(_201026265_ReferenceStack*, jule::Ptr<_20100d071_StructIns>);
inline jule::Bool _205a05d2d_Exist(_201026265_ReferenceStack*, jule::Ptr<_20103287b_Trait>);
struct _201026265_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _201027596_Pass {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_201027596_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_201027596_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20102bcd7_symbolBuilder> _20102c26b_getRoot(jule::Ptr<_20102bcd7_symbolBuilder>);
inline void _20102c612_pushErr(_20102bcd7_symbolBuilder*, jule::Ptr<_1ed694d8c_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _20102c9ca_pushErrText(_20102bcd7_symbolBuilder*, jule::Ptr<_1ed694d8c_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _20102cce9_pushSuggestion(_20102bcd7_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20102d1a1_checkCppUseDeclPath(_20102bcd7_symbolBuilder*, jule::Ptr<_201002a16_UseDecl>*, jule::Str);
inline jule::Ptr<_20107b397_ImportInfo> _20102d47b_buildCppHeaderImport(_20102bcd7_symbolBuilder*, jule::Ptr<_201002a16_UseDecl>*);
inline jule::Ptr<_20107b397_ImportInfo> _20102d789_buildStdImport(_20102bcd7_symbolBuilder*, jule::Ptr<_201002a16_UseDecl>*);
inline jule::Ptr<_20107b397_ImportInfo> _20102da97_buildIdentImport(jule::Ptr<_20102bcd7_symbolBuilder>, jule::Ptr<_201002a16_UseDecl>*);
inline jule::Ptr<_20107b397_ImportInfo> _20102dda5_buildImport(jule::Ptr<_20102bcd7_symbolBuilder>, jule::Ptr<_201002a16_UseDecl>*);
inline jule::Bool _20102e1b3_checkDuplicateUseDecl(_20102bcd7_symbolBuilder*, jule::Ptr<_20107b397_ImportInfo>*);
inline void _20102e4d2_implImportSelections(_20102bcd7_symbolBuilder*, jule::Ptr<_20107b397_ImportInfo>*, jule::Ptr<_201002a16_UseDecl>*);
inline jule::Str _20102e7e0_getAsLinkPath(jule::Ptr<_20102bcd7_symbolBuilder>, jule::Str);
inline void _20102eba8_pushCycleError(jule::Ptr<_20102bcd7_symbolBuilder>, jule::Ptr<_20102bcd7_symbolBuilder>*, jule::Str, jule::Str*);
inline void _201030071_pushCrossCycleError(jule::Ptr<_20102bcd7_symbolBuilder>, jule::Ptr<_20102bcd7_symbolBuilder>*, jule::Ptr<_20107b397_ImportInfo>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _201030428_checkImportCycles(jule::Ptr<_20102bcd7_symbolBuilder>, jule::Ptr<_20107b397_ImportInfo>, jule::Ptr<_201002a16_UseDecl>*);
inline void _201030813_checkPackageAccessibility(_20102bcd7_symbolBuilder*, jule::Ptr<_201002a16_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _201030bcb_importPackage(jule::Ptr<_20102bcd7_symbolBuilder>, jule::Ptr<_20107b397_ImportInfo>*, jule::Ptr<_201002a16_UseDecl>*);
inline jule::Ptr<_20107b397_ImportInfo> _201030ed9_importUseDecl(jule::Ptr<_20102bcd7_symbolBuilder>, jule::Ptr<_201002a16_UseDecl>*);
inline void _2010311b5_importUseDecls(jule::Ptr<_20102bcd7_symbolBuilder>);
inline void _20103143a_appendNode(_20102bcd7_symbolBuilder*, _200d46ddd_Node*);
inline void _201031616_appendNodes(_20102bcd7_symbolBuilder*);
inline void _20103188b_pushDirectivePass(_20102bcd7_symbolBuilder*, jule::Ptr<_200d472d9_Directive>*);
inline void _201031a67_appendTopDirectives(_20102bcd7_symbolBuilder*);
inline void _201031c43_build(jule::Ptr<_20102bcd7_symbolBuilder>);
struct _20102bcd7_symbolBuilder {
	jule::Ptr<_20102bcd7_symbolBuilder> _field_owner;
	jule::Trait<_2010786e6_Importer> _field_importer;
	jule::Slice<_2193a460d_Log> _field_errors;
	jule::Ptr<_200d46041_Ast> _field_ast;
	jule::Ptr<_2010e9118_SymbolTable> _field_table;
	


};
inline jule::Str _201032c33_Str(_20103287b_Trait*);
inline jule::Bool _201033041_Equal(jule::Ptr<_20103287b_Trait>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Bool _20103341a_IsBuiltin(_20103287b_Trait*);
inline jule::Ptr<_20102065a_Fn> _201033728_FindMethod(_20103287b_Trait*, jule::Str);
inline jule::Bool _201033a36_inherits(jule::Ptr<_20103287b_Trait>, jule::Ptr<_20103287b_Trait>*);
inline jule::Ptr<_20102065a_Fn> _201033d44_findMethodInherit(_20103287b_Trait*, jule::Str*);
struct _20103287b_Trait {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_201137e9d_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_20102065a_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_20100a25a_Struct>> _field_Implemented;
	


};
inline jule::Bool _2010349b0_AutoExpr(_201034619_EnumItem*);
struct _201034619_EnumItem {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2010eeb9b_Value> _field_Value;
	

	inline bool operator==(_201034619_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_201034619_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _201035472_Str(_20103510e_Enum*);
inline jule::Bool _201035780_Equal(jule::Ptr<_20103510e_Enum>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Ptr<_201034619_EnumItem> _201035b7b_FindItem(_20103510e_Enum*, jule::Str);
struct _20103510e_Enum {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_201137e9d_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_201034619_EnumItem>> _field_Items;
	


};
struct _201036176_TypeEnumItem {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_201137e9d_TypeSymbol> _field_Kind;
	

	inline bool operator==(_201036176_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_201036176_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _201036a39_Str(_201036709_TypeEnum*);
inline jule::Bool _201036d47_Equal(jule::Ptr<_201036709_TypeEnum>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Ptr<_201036176_TypeEnumItem> _201037243_FindItem(_201036709_TypeEnum*, jule::Str);
struct _201036709_TypeEnum {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_201036176_TypeEnumItem>> _field_Items;
	


};
inline jule::Str _201038c17_Str(_201038860_comptimeRange*);
inline jule::Bool _201039025_Equal(jule::Ptr<_201038860_comptimeRange>, jule::Ptr<_2011310ea_TypeKind>);
struct _201038860_comptimeRange {
	jule::Trait<_201038684_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_201038860_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_201038860_comptimeRange _other) { return !this->operator==(_other); }


};
inline jule::Str _2010396b8_Str(_201039355_comptimeStructField*);
inline jule::Bool _2010399c6_Equal(jule::Ptr<_201039355_comptimeStructField>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Ptr<_2010edb23_Data> _201039e9e__Name(jule::Ptr<_201039355_comptimeStructField>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20103a356__Type(jule::Ptr<_201039355_comptimeStructField>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20103a70d__Public(jule::Ptr<_201039355_comptimeStructField>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20103aa1b_subIdent(jule::Ptr<_201039355_comptimeStructField>, jule::Str);
struct _201039355_comptimeStructField {
	jule::Ptr<_20100c57b_FieldIns> _field_field;
	

	inline bool operator==(_201039355_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_201039355_comptimeStructField _other) { return !this->operator==(_other); }


};
inline jule::Str _20103b203_Str(_20103ad7e_comptimeStructFields*);
inline jule::Bool _20103b511_Equal(jule::Ptr<_20103ad7e_comptimeStructFields>, jule::Ptr<_2011310ea_TypeKind>);
inline void _20103b940_ready(_20103ad7e_comptimeStructFields*, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
inline void _20103bd08_step(_20103ad7e_comptimeStructFields*, jule::I32, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
inline jule::I32 _20103c06c_len(_20103ad7e_comptimeStructFields*);
struct _20103ad7e_comptimeStructFields {
	jule::Slice<jule::Ptr<_20100c57b_FieldIns>> _field_fields;
	


};
inline jule::Str _20103c6bb_Str(_20103c358_comptimeStatic*);
inline jule::Bool _20103c9c9_Equal(jule::Ptr<_20103c358_comptimeStatic>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Ptr<_2010edb23_Data> _20103cea2__Name(jule::Ptr<_20103c358_comptimeStatic>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20103d359__Type(jule::Ptr<_20103c358_comptimeStatic>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20103d711__Public(jule::Ptr<_20103c358_comptimeStatic>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20103da1e_subIdent(jule::Ptr<_20103c358_comptimeStatic>, jule::Str);
struct _20103c358_comptimeStatic {
	jule::Ptr<_2010a4975_Var> _field_field;
	

	inline bool operator==(_20103c358_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_20103c358_comptimeStatic _other) { return !this->operator==(_other); }


};
inline jule::Str _20103e27d_Str(_20103de1a_comptimeStatics*);
inline jule::Bool _20103e58b_Equal(jule::Ptr<_20103de1a_comptimeStatics>, jule::Ptr<_2011310ea_TypeKind>);
inline void _20103e943_ready(_20103de1a_comptimeStatics*, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
inline void _20103ed0b_step(_20103de1a_comptimeStatics*, jule::I32, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
inline jule::I32 _201040070_len(_20103de1a_comptimeStatics*);
struct _20103de1a_comptimeStatics {
	jule::Slice<jule::Ptr<_2010a4975_Var>> _field_fields;
	


};
inline jule::Str _2010406be_Str(_20104035b_comptimeEnumField*);
inline jule::Bool _2010409cc_Equal(jule::Ptr<_20104035b_comptimeEnumField>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Ptr<_2010edb23_Data> _201040e83__Name(jule::Ptr<_20104035b_comptimeEnumField>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201041291_subIdent(jule::Ptr<_20104035b_comptimeEnumField>, jule::Str);
struct _20104035b_comptimeEnumField {
	jule::Ptr<_201034619_EnumItem> _field_field;
	

	inline bool operator==(_20104035b_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_20104035b_comptimeEnumField _other) { return !this->operator==(_other); }


};
inline jule::Str _201041a00_Str(_20104157c_comptimeEnumFields*);
inline jule::Bool _201041d0d_Equal(jule::Ptr<_20104157c_comptimeEnumFields>, jule::Ptr<_2011310ea_TypeKind>);
inline void _2010421b5_ready(_20104157c_comptimeEnumFields*, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
inline void _20104257d_step(_20104157c_comptimeEnumFields*, jule::I32, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
inline jule::I32 _2010427e2_len(_20104157c_comptimeEnumFields*);
struct _20104157c_comptimeEnumFields {
	jule::Slice<jule::Ptr<_201034619_EnumItem>> _field_fields;
	


};
inline jule::Str _201042e41_Str(_201042acd_comptimeParam*);
inline jule::Bool _20104324e_Equal(jule::Ptr<_201042acd_comptimeParam>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Ptr<_2010edb23_Data> _201043738__Name(jule::Ptr<_201042acd_comptimeParam>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201043ae0__Type(jule::Ptr<_201042acd_comptimeParam>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201043e97__Variadic(jule::Ptr<_201042acd_comptimeParam>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104434e__Reference(jule::Ptr<_201042acd_comptimeParam>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104465c_subIdent(jule::Ptr<_201042acd_comptimeParam>, jule::Str);
struct _201042acd_comptimeParam {
	jule::Ptr<_20102243c_ParamIns> _field_param;
	

	inline bool operator==(_201042acd_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_201042acd_comptimeParam _other) { return !this->operator==(_other); }


};
inline jule::Str _201044edc_Str(_201044b79_comptimeParams*);
inline jule::Bool _2010452ea_Equal(jule::Ptr<_201044b79_comptimeParams>, jule::Ptr<_2011310ea_TypeKind>);
inline void _201045729_ready(_201044b79_comptimeParams*, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
inline void _201045ae2_step(_201044b79_comptimeParams*, jule::I32, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
inline jule::I32 _201045d56_len(_201044b79_comptimeParams*);
struct _201044b79_comptimeParams {
	jule::Slice<jule::Ptr<_20102243c_ParamIns>> _field_params;
	


};
inline jule::Str _2010464a5_Str(_201046142_comptimeTypeInfos*);
inline jule::Bool _2010467b3_Equal(jule::Ptr<_201046142_comptimeTypeInfos>, jule::Ptr<_2011310ea_TypeKind>);
inline void _201046be2_ready(_201046142_comptimeTypeInfos*, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
inline void _2010470aa_step(_201046142_comptimeTypeInfos*, jule::I32, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
inline jule::I32 _20104731e_len(_201046142_comptimeTypeInfos*);
struct _201046142_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_20104760a_comptimeTypeInfo>> _field_types;
	


};
inline jule::Str _20104796d_Str(_20104760a_comptimeTypeInfo*);
inline jule::Bool _201047c7b_Equal(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Ptr<_2010edb23_Data> _201048375__Str(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104872c__Kind(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201048ad4__Bits(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201048e8b__Elem(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201049343__Size(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _2010496ea__Key(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201049aa2__Value(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201049e59__Fields(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104a311__Statics(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104a6b8__Public(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104aa70__Binded(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104ae27__Ordered(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104b2ce__Comparable(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104b686__Mutable(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104ba3d__Types(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104bde5__Exceptional(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104c29c__CanNil(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104c654__Result(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104ca0b__Params(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104cd19_subIdent(jule::Ptr<_20104760a_comptimeTypeInfo>, jule::Str);
struct _20104760a_comptimeTypeInfo {
	jule::Ptr<_2011310ea_TypeKind> _field_base;
	

	inline bool operator==(_20104760a_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_20104760a_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
inline jule::Str _20104d468_Str(_20104d105_comptimeValue*);
inline jule::Bool _20104d776_Equal(jule::Ptr<_20104d105_comptimeValue>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Ptr<_2010edb23_Data> _20104dc82__Unwrap(jule::Ptr<_20104d105_comptimeValue>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104e139__Type(jule::Ptr<_20104d105_comptimeValue>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104e4e1__Lvalue(jule::Ptr<_20104d105_comptimeValue>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104e898__Mutable(jule::Ptr<_20104d105_comptimeValue>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _20104ec50__Const(jule::Ptr<_20104d105_comptimeValue>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201050107__Field(jule::Ptr<_20104d105_comptimeValue>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201050415_subIdent(jule::Ptr<_20104d105_comptimeValue>, jule::Str);
struct _20104d105_comptimeValue {
	jule::Ptr<_2010edb23_Data> _field_data;
	

	inline bool operator==(_20104d105_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_20104d105_comptimeValue _other) { return !this->operator==(_other); }


};
inline jule::Str _201050a64_Str(_201050701_comptimeFiles*);
inline jule::Bool _201050d72_Equal(jule::Ptr<_201050701_comptimeFiles>, jule::Ptr<_2011310ea_TypeKind>);
inline void _2010512a1_ready(_201050701_comptimeFiles*, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
inline void _201051669_step(_201050701_comptimeFiles*, jule::I32, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
inline jule::I32 _2010518cd_len(_201050701_comptimeFiles*);
struct _201050701_comptimeFiles {
	jule::Slice<jule::Ptr<_2010e9118_SymbolTable>> _field_files;
	


};
inline jule::Str _20105202c_Str(_201051bb9_comptimeFile*);
inline jule::Bool _20105233a_Equal(jule::Ptr<_201051bb9_comptimeFile>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Ptr<_2010edb23_Data> _201052813__Path(jule::Ptr<_201051bb9_comptimeFile>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201052bba__Name(jule::Ptr<_201051bb9_comptimeFile>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201053072__Dir(jule::Ptr<_201051bb9_comptimeFile>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _201053380_subIdent(jule::Ptr<_201051bb9_comptimeFile>, jule::Str);
struct _201051bb9_comptimeFile {
	jule::Ptr<_2010e9118_SymbolTable> _field_file;
	

	inline bool operator==(_201051bb9_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_201051bb9_comptimeFile _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_201084669_Sema>*,jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>*)> _201055e10_readyFn(jule::Ptr<_201055a25_constraintChecker>);
inline jule::Bool _201056174_readyFi(jule::Ptr<_201055a25_constraintChecker>);
inline jule::Bool _2010563d8_readySi(jule::Ptr<_201055a25_constraintChecker>);
inline jule::Bool _20105664c_ready(jule::Ptr<_201055a25_constraintChecker>);
inline jule::Bool _2010568b1_check(jule::Ptr<_201055a25_constraintChecker>);
struct _201055a25_constraintChecker {
	jule::Ptr<_201084669_Sema> _field_s;
	jule::Slice<jule::Ptr<_200ee7654_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_20112e868_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> _field_genericsA;
	jule::Ptr<_20102330b_FnIns> _field_fi;
	jule::Ptr<_20100d071_StructIns> _field_si;
	jule::Ptr<_1ed694d8c_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
inline jule::Bool _201057c7a_IsTraitImpl(_2010578c3_Impl*);
inline jule::Bool _201057ede_IsStructImpl(_2010578c3_Impl*);
struct _2010578c3_Impl {
	jule::Ptr<_200eda6ad_TypeDecl> _field_Base;
	jule::Ptr<_200eda6ad_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_20102065a_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_2010a4975_Var>> _field_Statics;
	


};
struct _20105c92d_Scope {
	jule::Ptr<_20105c92d_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _20105cd29_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_20105c92d_Scope> _field_Scope;
	

	inline bool operator==(_20105cd29_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20105cd29_If _other) { return !this->operator==(_other); }


};
struct _20105d115_Else {
	jule::Ptr<_20105c92d_Scope> _field_Scope;
	

	inline bool operator==(_20105d115_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20105d115_Else _other) { return !this->operator==(_other); }


};
struct _20105d489_Conditional {
	jule::Slice<jule::Ptr<_20105cd29_If>> _field_Elifs;
	jule::Ptr<_20105d115_Else> _field_Default;
	


};
struct _20105d775_InfIter {
	jule::Ptr<_20105c92d_Scope> _field_Scope;
	

	inline bool operator==(_20105d775_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20105d775_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _20105e04a_IsWhileNext(_20105dbe8_WhileIter*);
struct _20105dbe8_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_20105c92d_Scope> _field_Scope;
	

	inline bool operator==(_20105dbe8_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_20105dbe8_WhileIter _other) { return !this->operator==(_other); }


};
struct _20105e5cd_RangeIter {
	jule::Ptr<_2010edb23_Data> _field_Expr;
	jule::Ptr<_20105c92d_Scope> _field_Scope;
	jule::Ptr<_2010a4975_Var> _field_KeyA;
	jule::Ptr<_2010a4975_Var> _field_KeyB;
	

	inline bool operator==(_20105e5cd_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_20105e5cd_RangeIter _other) { return !this->operator==(_other); }


};
struct _20105e9c9_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_20105e9c9_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_20105e9c9_ContSt _other) { return !this->operator==(_other); }


};
struct _20105ed81_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_20105ed81_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_20105ed81_BreakSt _other) { return !this->operator==(_other); }


};
struct _20106016c_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_20106016c_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_20106016c_Label _other) { return !this->operator==(_other); }


};
struct _201060458_GotoSt {
	jule::Str _field_Ident;
	

	inline bool operator==(_201060458_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_201060458_GotoSt _other) { return !this->operator==(_other); }


};
struct _201060810_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_201060810_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_201060810_Postfix _other) { return !this->operator==(_other); }


};
struct _201060c83_Assign {
	jule::Ptr<_201012020_OperandExprModel> _field_L;
	jule::Ptr<_201012020_OperandExprModel> _field_R;
	jule::Ptr<_1ed694d8c_Token> _field_Op;
	

	inline bool operator==(_201060c83_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_201060c83_Assign _other) { return !this->operator==(_other); }


};
struct _20106113a_MultiAssign {
	jule::Slice<jule::Ptr<_2010edb23_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
inline jule::Bool _201061c51_IsGenericTypeMatch(_201061745_Match*);
struct _201061745_Match {
	jule::Ptr<_2010edb23_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_201062290_Case>> _field_Cases;
	jule::Ptr<_201062290_Case> _field_Default;
	


};
inline jule::Bool _2010625e2_isDefault(_201062290_Case*);
struct _201062290_Case {
	jule::Ptr<_201061745_Match> _field_Owner;
	jule::Ptr<_20105c92d_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_2010edb23_Data>> _field_Exprs;
	jule::Ptr<_201062290_Case> _field_Next;
	


};
struct _201062867_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_201062867_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_201062867_FallSt _other) { return !this->operator==(_other); }


};
struct _201062bb9_RetSt {
	jule::Ptr<_20102330b_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_201062bb9_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_201062bb9_RetSt _other) { return !this->operator==(_other); }


};
struct _2010632c4_scopeLabel {
	jule::Ptr<_1ed694d8c_Token> _field_token;
	jule::Ptr<_20106016c_Label> _field_label;
	jule::I32 _field_pos = 0;
	jule::Ptr<_20106455b_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_2010632c4_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_2010632c4_scopeLabel _other) { return !this->operator==(_other); }


};
struct _201063747_scopeGoto {
	jule::Ptr<_200ee7db3_GotoSt> _field_gt;
	jule::Ptr<_20106455b_scopeChecker> _field_scope;
	jule::I32 _field_pos = 0;
	

	inline bool operator==(_201063747_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_201063747_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20107b397_ImportInfo> _2010649ce_SelectPackage(_20106455b_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)>);
inline jule::Ptr<_2010a4975_Var> _201064d86_FindVar(_20106455b_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_2011303a2_TypeAlias> _20106523d_FindTypeAlias(_20106455b_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_20100a25a_Struct> _2010655e5_FindStruct(_20106455b_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_20102065a_Fn> _20106599c_FindFn(_20106455b_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_20103287b_Trait> _201065caa_FindTrait(_20106455b_scopeChecker*, jule::Str);
inline jule::Ptr<_20103510e_Enum> _2010660b8_FindEnum(_20106455b_scopeChecker*, jule::Str);
inline jule::Ptr<_201036709_TypeEnum> _2010663c6_FindTypeEnum(_20106455b_scopeChecker*, jule::Str);
inline jule::Bool _201066706_isUnsafe(jule::Ptr<_20106455b_scopeChecker>);
inline jule::Bool _20106696a_isRoot(_20106455b_scopeChecker*);
inline void _201066b46_stop(_20106455b_scopeChecker*);
inline jule::Bool _201066daa_stopped(_20106455b_scopeChecker*);
inline jule::Bool _20106711e_isDeferred(jule::Ptr<_20106455b_scopeChecker>);
inline jule::Ptr<_20106455b_scopeChecker> _201067383_getRoot(jule::Ptr<_20106455b_scopeChecker>);
inline jule::Ptr<_20106455b_scopeChecker> _2010675e7_getHardRoot(jule::Ptr<_20106455b_scopeChecker>);
inline jule::Ptr<_20106016c_Label> _201067905_findLabel(_20106455b_scopeChecker*, jule::Str);
inline jule::Ptr<_2010632c4_scopeLabel> _201067c13_findLabelScope(jule::Ptr<_20106455b_scopeChecker>, jule::Str);
inline jule::Ptr<_2010632c4_scopeLabel> _201068021_findLabelAll(_20106455b_scopeChecker*, jule::Str);
inline jule::Bool _2010683c8_isDuplicatedIdent(_20106455b_scopeChecker*, jule::Uintptr, jule::Str);
inline void _20106864d_checkVarDecl(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eeccb9_VarDecl>);
inline void _2010688c3_checkTypeAliasDecl(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_20100162a_TypeAliasDecl>);
inline jule::Ptr<_20105c92d_Scope> _201068b37_getChild(_20106455b_scopeChecker*);
inline void _201069000_checkChildSsc(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eea2e4_ScopeTree>*, jule::Ptr<_20105c92d_Scope>*, jule::Ptr<_20106455b_scopeChecker>*);
inline jule::Ptr<_20105c92d_Scope> _2010693a7_checkChildSc(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eea2e4_ScopeTree>*, jule::Ptr<_20106455b_scopeChecker>*);
inline jule::Ptr<_20105c92d_Scope> _2010696b5_checkChild(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eea2e4_ScopeTree>*);
inline void _20106993a_checkAnonScope(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eea2e4_ScopeTree>);
inline void _201069c59_processErrorCall(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_20101b7bb_BuiltinErrorCallExprModel>*, jule::Ptr<_1ed694d8c_Token>);
inline void _201069ece_checkExpr(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200ede838_Expr>);
inline jule::Ptr<_20105cd29_If> _20106a2dc_checkIf(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_201000629_If>);
inline jule::Ptr<_20105d115_Else> _20106a5ea_checkElse(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_2010009d1_Else>);
inline void _20106a870_checkConditional(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_201000e54_Conditional>);
inline void _20106acd2_checkIterScopeSsc(jule::Ptr<_20106455b_scopeChecker>, jule::Uintptr, jule::Ptr<_200eea2e4_ScopeTree>, jule::Ptr<_20105c92d_Scope>*, jule::Ptr<_20106455b_scopeChecker>);
inline jule::Ptr<_20105c92d_Scope> _20106b233_checkIterScopeSc(jule::Ptr<_20106455b_scopeChecker>, jule::Uintptr, jule::Ptr<_200eea2e4_ScopeTree>, jule::Ptr<_20106455b_scopeChecker>);
inline jule::Ptr<_20105c92d_Scope> _20106b5da_checkIterScope(jule::Ptr<_20106455b_scopeChecker>, jule::Uintptr, jule::Ptr<_200eea2e4_ScopeTree>*);
inline void _20106b860_checkInfIter(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eed7d1_Iter>*);
inline void _20106bad5_checkWhileIter(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eed7d1_Iter>*);
inline void _20106be9d_checkComptimeRangeIter(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eed7d1_Iter>*, jule::Ptr<_20105e5cd_RangeIter>*, jule::Ptr<_2010edb23_Data>*);
inline void _20106c223_checkRangeIter(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eed7d1_Iter>*);
inline void _20106c498_checkIter(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eed7d1_Iter>);
inline jule::Bool _20106c7a6_checkValidContLabel(jule::Ptr<_20106455b_scopeChecker>, jule::Uintptr);
inline jule::Bool _20106cab4_checkValidBreakLabel(jule::Ptr<_20106455b_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_20105e9c9_ContSt> _20106cdc2_checkContValidScope(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_2010001a6_ContSt>);
inline void _20106d147_checkCont(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_2010001a6_ContSt>);
inline void _20106d3bc_checkLabel(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200ee7a0b_LabelSt>);
inline void _20106d642_pushGoto(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200ee7db3_GotoSt>);
inline void _20106d8b7_checkPostfix(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200ee8ce8_AssignSt>);
inline jule::Bool _20106dbc5_isNewAssignIdent(_20106455b_scopeChecker*, jule::Str);
inline jule::Bool _20106e126_checkStructureAssignOp(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_20100d071_StructIns>*, jule::Ptr<_200ee8ce8_AssignSt>*, jule::Ptr<_2010edb23_Data>*);
inline void _20106e39b_checkSingleAssign(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200ee8ce8_AssignSt>*);
inline void _20106e8c9_processEndPartOfMultiAssign(_20106455b_scopeChecker*, jule::Ptr<_20106113a_MultiAssign>*, jule::Ptr<_200ee8ce8_AssignSt>*, jule::Ptr<_200ee87a9_AssignLeft>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*);
inline void _20106eb60_checkMultiAssign(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200ee8ce8_AssignSt>*);
inline void _20106edd5_checkAssignSt(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200ee8ce8_AssignSt>);
inline jule::Ptr<_20105c92d_Scope> _20107028c_checkCaseScope(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_201062290_Case>*, jule::Ptr<_200eea2e4_ScopeTree>*);
inline jule::Ptr<_201062290_Case> _201070787_checkCase(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_201061745_Match>, jule::I32, jule::Ptr<_201001a9d_Case>, jule::Ptr<_2010edb23_Data>);
inline void _201070b50_checkCases(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_201002274_MatchCase>*, jule::Ptr<_201061745_Match>, jule::Ptr<_2010edb23_Data>);
inline jule::Ptr<_201062290_Case> _201071007_checkDefault(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_201061745_Match>, jule::Ptr<_2010009d1_Else>);
inline void _201071326_checkComptimePanic(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_1ed694d8c_Token>, jule::Ptr<_20105c92d_Scope>*);
inline void _201071645_processConstMatch(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_201061745_Match>*, jule::Ptr<_201002274_MatchCase>*);
inline void _2010718ba_checkTypeMatch(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_201002274_MatchCase>*);
inline void _201071b40_checkCommonMatch(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_201002274_MatchCase>*);
inline void _201071db5_checkMatch(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_201002274_MatchCase>);
inline void _20107213a_checkFall(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200ee819e_FallSt>);
inline jule::Ptr<_20105ed81_BreakSt> _201072448_checkBreakWithLabel(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eeecee_BreakSt>);
inline jule::Ptr<_20105ed81_BreakSt> _201072756_checkPlainBreak(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eeecee_BreakSt>);
inline void _2010729cb_checkBreak(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eeecee_BreakSt>);
inline void _201072c51_checkRet(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eed171_RetSt>);
inline void _201072ec6_checkUseExpr(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200ee01c9_UseExpr>);
inline void _20107324b_checkNode(jule::Ptr<_20106455b_scopeChecker>, jule::Any*);
inline void _201073427_checkResult(jule::Ptr<_20106455b_scopeChecker>);
inline void _201073603_checkTree(jule::Ptr<_20106455b_scopeChecker>);
inline void _201073922_checkGoto(_20106455b_scopeChecker*, jule::Ptr<_201063747_scopeGoto>*, jule::Ptr<_2010632c4_scopeLabel>*);
inline void _201073aed_checkGotos(_20106455b_scopeChecker*);
inline void _201073cc9_checkLabels(_20106455b_scopeChecker*);
inline void _201073ea5_checkVars(_20106455b_scopeChecker*);
inline void _201074181_checkAliases(_20106455b_scopeChecker*);
inline void _2010744a0_check(jule::Ptr<_20106455b_scopeChecker>, jule::Ptr<_200eea2e4_ScopeTree>*, jule::Ptr<_20105c92d_Scope>*);
inline jule::Ptr<_20106455b_scopeChecker> _201074714_newChildChecker(jule::Ptr<_20106455b_scopeChecker>);
struct _20106455b_scopeChecker {
	jule::Ptr<_1ed694d8c_Token> _field_calledFrom;
	jule::Ptr<_201084669_Sema> _field_s;
	jule::Ptr<_20102330b_FnIns> _field_owner;
	jule::Ptr<_20106455b_scopeChecker> _field_parent;
	jule::I32 _field_childIndex = 0;
	jule::Ptr<_2010e9118_SymbolTable> _field_table;
	jule::Ptr<_20105c92d_Scope> _field_scope;
	jule::Ptr<_200eea2e4_ScopeTree> _field_tree;
	jule::Ptr<_20102330b_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_2010632c4_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_201063747_scopeGoto>>> _field_gotos;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_20106455b_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_20106455b_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _2010756b0_checkCdef(_2010752b4_directiveChecker*, jule::Ptr<_200d472d9_Directive>*);
inline void _201075935_checkTypedef(_2010752b4_directiveChecker*, jule::Ptr<_200d472d9_Directive>*);
inline void _201075baa_checkDerive(_2010752b4_directiveChecker*, jule::Ptr<_200d472d9_Directive>*);
inline void _201075e30_checkNamespace(_2010752b4_directiveChecker*, jule::Ptr<_200d472d9_Directive>*);
inline void _2010761a5_checkDeprecated(_2010752b4_directiveChecker*, jule::Ptr<_200d472d9_Directive>*);
inline void _20107642a_checkTest(_2010752b4_directiveChecker*, jule::Ptr<_200d472d9_Directive>*);
inline void _2010766a0_checkDirective(_2010752b4_directiveChecker*, jule::Ptr<_200d472d9_Directive>*);
inline void _20107687b_check(_2010752b4_directiveChecker*);
struct _2010752b4_directiveChecker {
	jule::Ptr<_201084669_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_200d472d9_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_2010752b4_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_2010752b4_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20107b397_ImportInfo> _20107b85e_SelectPackage(_20107b397_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)>);
inline jule::Ptr<_2010a4975_Var> _20107bc16_FindVar(_20107b397_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_2011303a2_TypeAlias> _20107c0bd_FindTypeAlias(_20107b397_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_20100a25a_Struct> _20107c475_FindStruct(_20107b397_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_20102065a_Fn> _20107c82c_FindFn(_20107b397_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_20103287b_Trait> _20107cb3a_FindTrait(_20107b397_ImportInfo*, jule::Str);
inline jule::Ptr<_20103510e_Enum> _20107ce48_FindEnum(_20107b397_ImportInfo*, jule::Str);
inline jule::Ptr<_201036709_TypeEnum> _20107d256_FindTypeEnum(_20107b397_ImportInfo*, jule::Str);
inline jule::Bool _20107d641_isLookupable(_20107b397_ImportInfo*, jule::Str);
inline jule::Bool _20107d94e_existIdent(_20107b397_ImportInfo*, jule::Str);
inline jule::Bool _20107dbd5_isAccessibleViaSelection(_20107b397_ImportInfo*);
struct _20107b397_ImportInfo {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_Selected;
	jule::Ptr<_20107ded2_Package> _field_Package;
	jule::I32 _field_ModId = 0;
	


};
inline jule::Ptr<_20107b397_ImportInfo> _20107e455_SelectPackage(_20107ded2_Package*, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)>);
inline jule::Ptr<_2010a4975_Var> _20107e80c_FindVar(_20107ded2_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_2011303a2_TypeAlias> _20107ebb4_FindTypeAlias(_20107ded2_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_20100a25a_Struct> _20108006b_FindStruct(_20107ded2_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_20102065a_Fn> _201080423_FindFn(_20107ded2_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_20103287b_Trait> _201080731_FindTrait(_20107ded2_Package*, jule::Str);
inline jule::Ptr<_20103510e_Enum> _201080a3e_FindEnum(_20107ded2_Package*, jule::Str);
inline jule::Ptr<_201036709_TypeEnum> _201080d4c_FindTypeEnum(_20107ded2_Package*, jule::Str);
struct _20107ded2_Package {
	jule::Slice<jule::Ptr<_2010e9118_SymbolTable>> _field_Files;
	


};
inline jule::Ptr<_20104760a_comptimeTypeInfo> _201084092_pushComptimeTypeInfo(_201083b52_commonSemaMeta*, jule::Ptr<_2011310ea_TypeKind>*);
struct _201083b52_commonSemaMeta {
	jule::Slice<jule::Ptr<_20104760a_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
inline jule::Ptr<_20107b397_ImportInfo> _201084adc_SelectPackage(_201084669_Sema*, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)>);
inline jule::Ptr<_2010a4975_Var> _201084e94_FindVar(_201084669_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_2011303a2_TypeAlias> _20108534b_FindTypeAlias(_201084669_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_20100a25a_Struct> _201085703_FindStruct(_201084669_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_20102065a_Fn> _201085aaa_FindFn(_201084669_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_20103287b_Trait> _201085db8_FindTrait(_201084669_Sema*, jule::Str);
inline jule::Ptr<_20103510e_Enum> _2010861c6_FindEnum(_201084669_Sema*, jule::Str);
inline jule::Ptr<_201036709_TypeEnum> _2010864d4_FindTypeEnum(_201084669_Sema*, jule::Str);
inline jule::Bool _2010868ad_isFlag(_201084669_Sema*, jule::I32);
inline void _201086b33_setCurrentFile(_201084669_Sema*, jule::Ptr<_2010e9118_SymbolTable>);
inline void _201086eeb_pushErr(_201084669_Sema*, jule::Ptr<_1ed694d8c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _20108731a_pushSuggestion(_201084669_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2010876c2_isAccessibleDefine(_201084669_Sema*, jule::Bool, jule::Ptr<_1ed694d8c_Token>);
inline jule::Bool _201087b23_isDuplicatedIdent(_201084669_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _201087e42_checkDirectives(jule::Ptr<_201084669_Sema>, jule::Slice<jule::Ptr<_200d472d9_Directive>>*, jule::Any);
inline jule::Bool _201088393_checkGenericQuantity(_201084669_Sema*, jule::I32, jule::I32, jule::Ptr<_1ed694d8c_Token>);
inline jule::Bool _20108876c_isDuplicatedImportSelection(_201084669_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _201088b35_getImportDef(_201084669_Sema*, jule::Str, jule::Ptr<_20107b397_ImportInfo>*);
inline jule::Bool _2053535c1_checkImportSelection(_201084669_Sema*, jule::Ptr<_1ed694d8c_Token>*, jule::Ptr<_2010a4975_Var>*);
inline jule::Bool _20535722e_checkImportSelection(_201084669_Sema*, jule::Ptr<_1ed694d8c_Token>*, jule::Ptr<_2011303a2_TypeAlias>*);
inline jule::Bool _20535ad37_checkImportSelection(_201084669_Sema*, jule::Ptr<_1ed694d8c_Token>*, jule::Ptr<_20100a25a_Struct>*);
inline jule::Bool _20535eac7_checkImportSelection(_201084669_Sema*, jule::Ptr<_1ed694d8c_Token>*, jule::Ptr<_20103287b_Trait>*);
inline jule::Bool _2053636d0_checkImportSelection(_201084669_Sema*, jule::Ptr<_1ed694d8c_Token>*, jule::Ptr<_20103510e_Enum>*);
inline jule::Bool _2053672d8_checkImportSelection(_201084669_Sema*, jule::Ptr<_1ed694d8c_Token>*, jule::Ptr<_201036709_TypeEnum>*);
inline jule::Bool _20536ade1_checkImportSelection(_201084669_Sema*, jule::Ptr<_1ed694d8c_Token>*, jule::Ptr<_20102065a_Fn>*);
inline jule::Bool _20108931c_checkImportSelectedSelections(_201084669_Sema*, jule::Ptr<_20107b397_ImportInfo>*);
inline jule::Bool _20536edc3_checkImportsAllSelectionsFromCollection(_201084669_Sema*, jule::Slice<jule::Ptr<_2010a4975_Var>>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _20537325b_checkImportsAllSelectionsFromCollection(_201084669_Sema*, jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _2053738bb_checkImportsAllSelectionsFromCollection(_201084669_Sema*, jule::Slice<jule::Ptr<_20100a25a_Struct>>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _20537646d_checkImportsAllSelectionsFromCollection(_201084669_Sema*, jule::Slice<jule::Ptr<_20102065a_Fn>>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _2053779e1_checkImportsAllSelectionsFromCollection(_201084669_Sema*, jule::Slice<jule::Ptr<_20103287b_Trait>>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _20537bb7c_checkImportsAllSelectionsFromCollection(_201084669_Sema*, jule::Slice<jule::Ptr<_20103510e_Enum>>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _20537e72e_checkImportsAllSelectionsFromCollection(_201084669_Sema*, jule::Slice<jule::Ptr<_201036709_TypeEnum>>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _201089a48_checkImportAllSelections(_201084669_Sema*, jule::Ptr<_20107b397_ImportInfo>*);
inline jule::Bool _201089d67_checkImportSelections(_201084669_Sema*, jule::Ptr<_20107b397_ImportInfo>*);
inline jule::Bool _20108a175_isUseAliasDuplication(_201084669_Sema*, jule::Ptr<_20107b397_ImportInfo>*);
inline jule::Bool _20108a483_checkImport(_201084669_Sema*, jule::Ptr<_20107b397_ImportInfo>*);
inline void _20108a65e_checkImports(_201084669_Sema*);
inline void _20108a83a_implFileImpls(jule::Ptr<_201084669_Sema>);
inline void _20108aa16_implImpls(jule::Ptr<_201084669_Sema>);
inline void _20108abe2_checkEnums(jule::Ptr<_201084669_Sema>);
inline void _20108adbd_checkFileInherits(jule::Ptr<_201084669_Sema>);
inline void _20108b099_checkInherits(jule::Ptr<_201084669_Sema>);
inline _20114243b_typeChecker _20108b4ea_typeChecker(jule::Ptr<_201084669_Sema>, jule::Trait<_20114e426_Lookup>, jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>, jule::Ptr<_20114155b_referencer>);
inline jule::Ptr<_2011310ea_TypeKind> _20108b9e5_buildTypeWithRefers(jule::Ptr<_201084669_Sema>, jule::Ptr<_200eda6ad_TypeDecl>*, jule::Trait<_20114e426_Lookup>, jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>, jule::Ptr<_20114155b_referencer>);
inline jule::Bool _20108bee0_checkTypeWithRefers(jule::Ptr<_201084669_Sema>, jule::Ptr<_201137e9d_TypeSymbol>*, jule::Trait<_20114e426_Lookup>, jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>, jule::Ptr<_20114155b_referencer>);
inline jule::Ptr<_201055a25_constraintChecker> _20108c254_constraintChecker(jule::Ptr<_201084669_Sema>);
inline jule::Bool _20108c60b_checkType(jule::Ptr<_201084669_Sema>, jule::Ptr<_201137e9d_TypeSymbol>*, jule::Trait<_20114e426_Lookup>);
inline jule::Ptr<_2011310ea_TypeKind> _20108ca5c_buildTypeWithGenerics(jule::Ptr<_201084669_Sema>, jule::Ptr<_200eda6ad_TypeDecl>*, jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>, jule::Ptr<_201026265_ReferenceStack>);
inline jule::Ptr<_2011310ea_TypeKind> _20108cd6a_buildType(jule::Ptr<_201084669_Sema>, jule::Ptr<_200eda6ad_TypeDecl>*);
inline jule::Ptr<_2011310ea_TypeKind> _20108d178_selectType(jule::Ptr<_201084669_Sema>, jule::Ptr<_200eda6ad_TypeDecl>*);
inline jule::Ptr<_201100691_Eval> _20108d5c9_evalpd(jule::Ptr<_201084669_Sema>, jule::Trait<_20114e426_Lookup>, jule::Ptr<_2011310ea_TypeKind>, jule::Ptr<_2010a4975_Var>);
inline jule::Ptr<_201100691_Eval> _20108d981_evalp(jule::Ptr<_201084669_Sema>, jule::Trait<_20114e426_Lookup>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Ptr<_201100691_Eval> _20108dc8e_eval(jule::Ptr<_201084669_Sema>, jule::Trait<_20114e426_Lookup>);
inline jule::Bool _20108e289_checkAssignType(jule::Ptr<_201084669_Sema>, jule::Bool, jule::Ptr<_2011310ea_TypeKind>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Bool _20108e6da_checkTypeCompatibility(jule::Ptr<_201084669_Sema>, jule::Ptr<_2011310ea_TypeKind>*, jule::Ptr<_2011310ea_TypeKind>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Ptr<_2011310ea_TypeKind> _20108eb5d_buildNonGenericTypeKind(jule::Ptr<_201084669_Sema>, jule::Ptr<_200eda6ad_TypeDecl>*, jule::Slice<jule::Ptr<_200ee7654_GenericDecl>>*, jule::Slice<jule::Ptr<_2011310ea_TypeKind>>*);
inline jule::Bool _201090048_buildFnNonGenericTypeKinds(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102330b_FnIns>*, jule::Slice<jule::Ptr<_2011310ea_TypeKind>>*);
inline jule::Ptr<_20102330b_FnIns> _201090367_getTraitCheckFnKind(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102065a_Fn>*);
inline jule::Bool _2010907b8_checkConstraintsFn(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102330b_FnIns>*, jule::Ptr<_1ed694d8c_Token>*, jule::Ptr<_20102330b_FnIns>);
inline jule::Bool _201090c19_checkConstraintsStruct(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100d071_StructIns>*, jule::Ptr<_1ed694d8c_Token>*, jule::Ptr<_20100d071_StructIns>);
inline jule::Bool _2010910c1_fnEnvironment(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102330b_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_201084669_Sema>*,jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>*)>);
inline void _201091346_checkFnParamKind(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102243c_ParamIns>*);
inline jule::Bool _201091654_reloadFnInsTypes(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102330b_FnIns>);
inline jule::Bool _201091ac7_checkRefValidityForInitExpr(jule::Ptr<_201084669_Sema>, jule::Bool, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _20109219e_checkValidityForInitExpr(jule::Ptr<_201084669_Sema>, jule::Bool, jule::Bool, jule::Ptr<_2011310ea_TypeKind>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _201092567_checkTypeAliasDeclKind(jule::Ptr<_201084669_Sema>, jule::Ptr<_2011303a2_TypeAlias>*, jule::Trait<_20114e426_Lookup>);
inline void _201092886_checkTypeAliasDecl(jule::Ptr<_201084669_Sema>, jule::Ptr<_2011303a2_TypeAlias>*, jule::Trait<_20114e426_Lookup>);
inline void _201092b0b_checkTypeAliasDeclDup(jule::Ptr<_201084669_Sema>, jule::Ptr<_2011303a2_TypeAlias>*);
inline jule::Bool _201092d70_checkTypeAliasDecls(jule::Ptr<_201084669_Sema>);
inline void _20540bbc9_checkEnumItemsDup(_201084669_Sema*, jule::Slice<jule::Ptr<_201034619_EnumItem>>);
inline void _2054160e0_checkEnumItemsDup(_201084669_Sema*, jule::Slice<jule::Ptr<_201036176_TypeEnumItem>>);
inline void _20109336a_checkEnumItemsStr(jule::Ptr<_201084669_Sema>, jule::Ptr<_20103510e_Enum>*);
inline void _2053e3265_checkEnumItemInt(jule::Ptr<_201084669_Sema>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_20103510e_Enum>*, jule::Ptr<_201138850_Prim>*, jule::Ptr<_201034619_EnumItem>*, jule::U64*);
inline void _20540099d_checkEnumItemInt(jule::Ptr<_201084669_Sema>, jule::Ptr<_201100691_Eval>*, jule::Ptr<_20103510e_Enum>*, jule::Ptr<_201138850_Prim>*, jule::Ptr<_201034619_EnumItem>*, jule::I64*);
inline void _2053de915_checkEnumItemsInt1(jule::Ptr<_201084669_Sema>, jule::Ptr<_201138850_Prim>*, jule::Ptr<_20103510e_Enum>*);
inline void _2053de250_checkEnumItemsInt1(jule::Ptr<_201084669_Sema>, jule::Ptr<_201138850_Prim>*, jule::Ptr<_20103510e_Enum>*);
inline void _201093e1a_checkEnumItemsInt(jule::Ptr<_201084669_Sema>, jule::Ptr<_20103510e_Enum>*);
inline void _201094190_checkEnumDecl(jule::Ptr<_201084669_Sema>, jule::Ptr<_20103510e_Enum>*);
inline void _201094415_checkTypeEnumDecl(jule::Ptr<_201084669_Sema>, jule::Ptr<_201036709_TypeEnum>*);
inline jule::Bool _201094679_checkEnumDecls(jule::Ptr<_201084669_Sema>);
inline jule::Bool _2010948dd_checkTypeEnumDecls(jule::Ptr<_201084669_Sema>);
inline jule::Bool _201094beb_checkDeclGenerics(_201084669_Sema*, jule::Slice<jule::Ptr<_200ee7654_GenericDecl>>*);
inline jule::Bool _201095009_checkFnDeclParamsDup(_201084669_Sema*, jule::Ptr<_20102065a_Fn>*);
inline jule::Bool _201095317_checkFnDeclResultDup(_201084669_Sema*, jule::Ptr<_20102065a_Fn>*);
inline jule::Bool _201095625_checkFnVariadicParam(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102065a_Fn>*);
inline void _20109589a_checkFnDeclPrototype(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102065a_Fn>*);
inline jule::Bool _201095ceb_catchTraitInheritCycle(jule::Ptr<_201084669_Sema>, jule::Ptr<_20103287b_Trait>, jule::Ptr<_20103287b_Trait>, jule::Str*);
inline jule::Bool _20109612b__checkTraitDeclInherits(jule::Ptr<_201084669_Sema>, jule::Ptr<_20103287b_Trait>*);
inline void _2010963b2_checkTraitDeclInherits(jule::Ptr<_201084669_Sema>, jule::Ptr<_20103287b_Trait>*);
inline void _201096637_checkTraitDeclMethod(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102065a_Fn>*);
inline void _2010968ac_checkTraitDeclMethods(jule::Ptr<_201084669_Sema>, jule::Ptr<_20103287b_Trait>*);
inline void _201096b32_checkTraitDecl(jule::Ptr<_201084669_Sema>, jule::Ptr<_20103287b_Trait>*);
inline jule::Bool _201096d96_checkTraitDecls(jule::Ptr<_201084669_Sema>);
inline jule::Bool _20109724d_checkTraitImplMethods(_201084669_Sema*, jule::Ptr<_20103287b_Trait>*, jule::Ptr<_2010578c3_Impl>*);
inline jule::Bool _201097605_implToStruct(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100a25a_Struct>*, jule::Ptr<_2010578c3_Impl>*);
inline void _20109787a_implTrait(jule::Ptr<_201084669_Sema>, jule::Ptr<_2010578c3_Impl>*);
inline void _201097b00_implStruct(jule::Ptr<_201084669_Sema>, jule::Ptr<_2010578c3_Impl>*);
inline void _201097d75_implImpl(jule::Ptr<_201084669_Sema>, jule::Ptr<_2010578c3_Impl>*);
inline void _201098194_checkVarDecl(jule::Ptr<_201084669_Sema>, jule::Ptr<_2010a4975_Var>*, jule::Trait<_20114e426_Lookup>);
inline void _201098419_checkGlobalVarDecl(jule::Ptr<_201084669_Sema>, jule::Ptr<_2010a4975_Var>*);
inline jule::Bool _20109867d_checkGlobalDecls(jule::Ptr<_201084669_Sema>);
inline jule::Bool _201098a35_checkStructTraitImpl(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100a25a_Struct>*, jule::Ptr<_20103287b_Trait>*);
inline jule::Bool _201098d43_checkStructImpls(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100a25a_Struct>*);
inline jule::Bool _201099151_checkStructFields(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100a25a_Struct>*);
inline void _2010993c6_checkStructDecl(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100a25a_Struct>*);
inline jule::Bool _20109963a_checkStructDecls(jule::Ptr<_201084669_Sema>);
inline void _2010998b0_checkAnonFnDecl(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102065a_Fn>*);
inline void _201099b35_checkFnDecl(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102065a_Fn>*);
inline jule::Bool _201099e43_checkFuncDecls(jule::Ptr<_201084669_Sema>, jule::Slice<jule::Ptr<_20102065a_Fn>>*);
inline jule::Bool _20109a1a7_checkFnDecls(jule::Ptr<_201084669_Sema>);
inline void _20109a570_pushCycleError(_201084669_Sema*, jule::Str*, jule::Str*, jule::Str*);
inline jule::Bool _20109a9c1_checkCrossCycle(_201084669_Sema*, jule::Ptr<_20100a25a_Struct>*, jule::Ptr<_20100a25a_Struct>*, jule::Str*);
inline jule::Bool _20109ae44_checkStructDeriveIllegalCycles(_201084669_Sema*, jule::Str, jule::Ptr<_20100a25a_Struct>*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _20109b285_checkStructInsDeriveClone(_201084669_Sema*, jule::Ptr<_20100d071_StructIns>);
inline void _20109b472_checkPackageDecls(jule::Ptr<_201084669_Sema>);
inline void _20109b7b3_checkDataForTypeInference(_201084669_Sema*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_1ed694d8c_Token>*);
inline void _20109ba49_checkVar(jule::Ptr<_201084669_Sema>, jule::Ptr<_2010a4975_Var>*);
inline void _20109bd68_checkTypeVar(jule::Ptr<_201084669_Sema>, jule::Ptr<_2010a4975_Var>*, jule::Trait<_20114e426_Lookup>);
inline void _20109c044_checkGlobalTypes(jule::Ptr<_201084669_Sema>);
inline jule::Ptr<_20102330b_FnIns> _20109c3eb_readyToCheckFn(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100d071_StructIns>*, jule::Ptr<_20102065a_Fn>*);
inline void _20109c71a_checkTypeMethod(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100d071_StructIns>*, jule::Ptr<_20102065a_Fn>*);
inline jule::Ptr<_20102330b_FnIns> _20109cb6b_checkStructInsOp(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100d071_StructIns>*, jule::Ptr<_20102065a_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_20102065a_Fn>)>);
inline jule::Bool _20109d023_checkStructEnv(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100d071_StructIns>*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Bool _20109d3ca_precheckStructIns(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100d071_StructIns>*, jule::Ptr<_1ed694d8c_Token>);
inline void _20109d650_checkStructIns(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100d071_StructIns>*);
inline void _20109d8c5_checkTypeStruct(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100a25a_Struct>*);
inline void _20109daa1_checkStructTypes(jule::Ptr<_201084669_Sema>);
inline void _20109dd48_checkStructInsOperators(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100d071_StructIns>);
inline void _20109e0ce_precheckStructType(jule::Ptr<_201084669_Sema>, jule::Ptr<_20100a25a_Struct>*);
inline void _20109e2aa_precheckStructTypes(jule::Ptr<_201084669_Sema>);
inline void _20109e530_checkRets(_201084669_Sema*, jule::Ptr<_20102330b_FnIns>*);
inline void _20109e84e_checkFnInsSc(_201084669_Sema*, jule::Ptr<_20102330b_FnIns>*, jule::Ptr<_20106455b_scopeChecker>*);
inline void _20109eb6d_checkFnInsCaller(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102330b_FnIns>*, jule::Ptr<_1ed694d8c_Token>);
inline void _20109ede3_checkFnIns(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102330b_FnIns>*);
inline void _2010a0168_checkTypeFn(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102065a_Fn>*);
inline void _2010a03dd_checkTestFn(_201084669_Sema*, jule::Ptr<_20102330b_FnIns>*);
inline void _2010a0663_precheckTypeFn(jule::Ptr<_201084669_Sema>, jule::Ptr<_20102065a_Fn>*);
inline void _2010a083e_precheckFnTypes(jule::Ptr<_201084669_Sema>);
inline void _2010a0a1a_checkFnTypes(jule::Ptr<_201084669_Sema>);
inline void _2010a0be6_checkPackageTypes(jule::Ptr<_201084669_Sema>);
inline void _2010a0dc2_setFileSemaFields(jule::Ptr<_201084669_Sema>);
inline void _2010a109d_setSemaFields(jule::Ptr<_201084669_Sema>);
inline void _2010a1323_check(jule::Ptr<_201084669_Sema>, jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>*);
struct _201084669_Sema {
	jule::Slice<_2193a460d_Log> _field_errors;
	jule::Slice<jule::Ptr<_2010e9118_SymbolTable>> _field_files;
	jule::Ptr<_2010e9118_SymbolTable> _field_file;
	jule::I32 _field_flags = 0LL;
	jule::Ptr<_201083b52_commonSemaMeta> _field_meta;
	


};
inline _2010a171e_missingRetChecker static__2010a1ad7_new(void);
inline jule::Bool _2010a1db2_checkConditional(_2010a171e_missingRetChecker*, jule::Ptr<_20105d489_Conditional>);
inline jule::Bool _2010a21c0_checkMatch(_2010a171e_missingRetChecker*, jule::Ptr<_201061745_Match>);
inline jule::Bool _2010a24cd_checkInfIter(_2010a171e_missingRetChecker*, jule::Ptr<_20105d775_InfIter>);
inline jule::Bool _2010a27db_checkScope(_2010a171e_missingRetChecker*, jule::Ptr<_20105c92d_Scope>);
inline jule::Bool _2010a2ae9_check(_2010a171e_missingRetChecker*, jule::Ptr<_20105c92d_Scope>);
struct _2010a171e_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _2010a3930_IterRelation {
	jule::Ptr<_2010a4975_Var> _field_Range;
	

	inline bool operator==(_2010a3930_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_2010a3930_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _2010a4ce9_IsInitialized(_2010a4975_Var*);
inline jule::Bool _2010a505d_IsTypeInferred(_2010a4975_Var*);
inline jule::Bool _2010a52c2_untypedConstant(_2010a4975_Var*);
struct _2010a4975_Var {
	jule::Ptr<_20105c92d_Scope> _field_Scope;
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_201137e9d_TypeSymbol> _field_Kind;
	jule::Ptr<_2010eeb9b_Value> _field_Value;
	jule::Ptr<_201026265_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_200d472d9_Directive>> _field_Directives;
	jule::Ptr<_2010a3930_IterRelation> _field_IterRelation;
	jule::I32 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_2010a4975_Var>> _field_Depends;
	


};
inline jule::Bool static__2010a5d50_Dispose(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a60e7_Str(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a6438_logical(jule::Ptr<_20102065a_Fn>*, jule::Str);
inline jule::Bool static__2010a66d0_Eq(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a6977_Gt(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a6c1e_GtEq(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a6eb6_Lt(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a725d_LtEq(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a759e_result(jule::Ptr<_20102065a_Fn>*, jule::Str);
inline jule::Bool static__2010a7846_Shl(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a7add_Shr(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a7d85_Add(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a812c_Sub(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a83c4_Div(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a866b_Mul(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a8913_Mod(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a8baa_BitAnd(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a8e52_BitOr(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a91e9_BitXor(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a953a_unary(jule::Ptr<_20102065a_Fn>*, jule::Str);
inline jule::Bool static__2010a97d2_Neg(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a9a79_Pos(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010a9d21_BitNot(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010aa162_assign(jule::Ptr<_20102065a_Fn>*, jule::Str);
inline jule::Bool static__2010aa409_AddAssign(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010aa6a1_SubAssign(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010aa948_DivAssign(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010aabe0_MulAssign(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010aae87_ModAssign(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010ab22e_ShlAssign(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010ab4c6_ShrAssign(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010ab76d_BitOrAssign(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010aba15_BitAndAssign(jule::Ptr<_20102065a_Fn>);
inline jule::Bool static__2010abcac_BitXorAssign(jule::Ptr<_20102065a_Fn>);
struct _2010a5723_FuncPattern {
	


};
inline void _2010d7a63_pushErr(_2010d758a_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2010d7cc7_checkTrait(_2010d758a_typeCompatibilityChecker*);
inline jule::Bool _2010d803b_checkPtr(_2010d758a_typeCompatibilityChecker*);
inline jule::Bool _2010d82a0_checkPrim(_2010d758a_typeCompatibilityChecker*);
inline jule::Bool _2010d8657_typeEnum(_2010d758a_typeCompatibilityChecker*, jule::Ptr<_201036709_TypeEnum>*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010d88bb_checkTypeEnum(_2010d758a_typeCompatibilityChecker*);
inline jule::Bool _2010d8b30_check(_2010d758a_typeCompatibilityChecker*);
struct _2010d758a_typeCompatibilityChecker {
	jule::Ptr<_201084669_Sema> _field_s;
	jule::Ptr<_2011310ea_TypeKind> _field_dest;
	jule::Ptr<_2011310ea_TypeKind> _field_src;
	jule::Ptr<_1ed694d8c_Token> _field_errorToken;
	

	inline bool operator==(_2010d758a_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_2010d758a_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _2010d9625_pushErr(_2010d91b3_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2010d9889_checkValidity(_2010d91b3_assignTypeChecker*);
inline jule::Bool _2010d9aed_checkConst(_2010d91b3_assignTypeChecker*);
inline jule::Bool _2010d9d62_isPrim(_2010d91b3_assignTypeChecker*);
inline jule::Bool _2010da0c6_checkCompatibility(_2010d91b3_assignTypeChecker*);
inline jule::Bool _2010da33a_check(_2010d91b3_assignTypeChecker*);
struct _2010d91b3_assignTypeChecker {
	jule::Ptr<_201084669_Sema> _field_s;
	jule::Ptr<_2011310ea_TypeKind> _field_dest;
	jule::Ptr<_2010edb23_Data> _field_d;
	jule::Ptr<_1ed694d8c_Token> _field_errorToken;
	

	inline bool operator==(_2010d91b3_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_2010d91b3_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _205588a26_annotateConstraintElem(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _205588d56_annotateConstraintElem(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _20558833e_annotateConstraintElem(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _20559139c_annotateConstraintElem(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010db539_annotateConstraintMap(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010db847_annotateConstraintTup(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010dbb55_annotateConstraintFn(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010dbe85_annotateConstraintIdent(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010dc2a4_annotateConstraint(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline void _2010dc5c3_pushGeneric(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*, jule::I32);
inline jule::Bool _2010dc8d1_annotatePrim(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010dcbde_annotateArr(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010dceec_annotateSlc(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010dd3a4_checkMapKey(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010dd6b2_annotateMap(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010dd9c0_annotateFn(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010ddccd_annotatePtr(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010de0db_annotateSptr(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010de3e9_annotateStruct(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010de707_annotateAny(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010dea15_annotateKind(_2010dab98_dynamicTypeAnnotation*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010dec79_annotate(_2010dab98_dynamicTypeAnnotation*);
struct _2010dab98_dynamicTypeAnnotation {
	jule::Ptr<_201100691_Eval> _field_e;
	jule::Ptr<_20102330b_FnIns> _field_f;
	jule::Ptr<_20102243c_ParamIns> _field_p;
	jule::Ptr<_2010edb23_Data> _field_a;
	jule::Ptr<_1ed694d8c_Token> _field_errorToken;
	jule::Ptr<_2011310ea_TypeKind>* _field_k = nullptr;
	jule::Ptr<_200eda6ad_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_2011310ea_TypeKind>> _field_ignored;
	


};
inline void _2010e0ae3_pushErrToken(_2010e0593_fnCallArgChecker*, jule::Ptr<_1ed694d8c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2010e0e12_pushErr(_2010e0593_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_20102243c_ParamIns>> _2010e1176_getParams(_2010e0593_fnCallArgChecker*);
inline jule::Bool _2010e1451_checkCounts(_2010e0593_fnCallArgChecker*, jule::Slice<jule::Ptr<_20102243c_ParamIns>>*);
inline jule::Bool _2010e18a2_checkArg(_2010e0593_fnCallArgChecker*, jule::Ptr<_20102243c_ParamIns>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Bool _2010e1c59_push(_2010e0593_fnCallArgChecker*, jule::Ptr<_20102243c_ParamIns>*, jule::Ptr<_200ede838_Expr>);
inline jule::Bool _2010e2111_pushVariadic(_2010e0593_fnCallArgChecker*, jule::Ptr<_20102243c_ParamIns>*, jule::I32);
inline jule::Bool _2010e241e_checkArgs(_2010e0593_fnCallArgChecker*, jule::Slice<jule::Ptr<_20102243c_ParamIns>>*);
inline jule::Bool _2010e26a5_checkDynamicTypeAnnotation(_2010e0593_fnCallArgChecker*);
inline jule::Bool _2010e292a_check(_2010e0593_fnCallArgChecker*);
struct _2010e0593_fnCallArgChecker {
	jule::Ptr<_201100691_Eval> _field_e;
	jule::Slice<jule::Ptr<_200ede838_Expr>> _field_args;
	jule::Ptr<_1ed694d8c_Token> _field_errorToken;
	jule::Ptr<_20102330b_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_2011310ea_TypeKind>> _field_ignored;
	


};
inline void _2010e3475_pushErr(_2010e2e69_structLitChecker*, jule::Ptr<_1ed694d8c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2010e3794_pushSuggestion(_2010e2e69_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _2010e3b5c_pushMatch(_2010e2e69_structLitChecker*, jule::Ptr<_20100c57b_FieldIns>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_1ed694d8c_Token>*);
inline void _2010e3e7b_checkPair(_2010e2e69_structLitChecker*, jule::Ptr<_200ee41cd_FieldExprPair>*, jule::Slice<jule::Ptr<_200ede838_Expr>>*);
inline jule::Bool _2010e4289_readyExprs(_2010e2e69_structLitChecker*, jule::Slice<jule::Ptr<_200ede838_Expr>>*);
inline void _2010e450e_check(_2010e2e69_structLitChecker*, jule::Slice<jule::Ptr<_200ede838_Expr>>*);
struct _2010e2e69_structLitChecker {
	jule::Ptr<_201100691_Eval> _field_e;
	jule::Ptr<_1ed694d8c_Token> _field_errorToken;
	jule::Ptr<_20100d071_StructIns> _field_s;
	jule::Slice<jule::Ptr<_201012c8a_StructArgExprModel>> _field_args;
	


};
inline jule::Ptr<_2010a4975_Var> _2010e5015_buildVar(_2010e4a4d_rangeChecker*, jule::Ptr<_200eeccb9_VarDecl>*);
inline void _2010e51e1_setSizeKey(_2010e4a4d_rangeChecker*);
inline void _2010e55a9_checkRangeExprValidity(_2010e4a4d_rangeChecker*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2011310ea_TypeKind>*);
inline void _2010e5785_checkSlice(_2010e4a4d_rangeChecker*);
inline void _2010e5961_checkArray(_2010e4a4d_rangeChecker*);
inline void _2010e5b3c_checkMapKeyA(_2010e4a4d_rangeChecker*);
inline void _2010e5d18_checkMapKeyB(_2010e4a4d_rangeChecker*);
inline void _2010e5ee4_checkMap(_2010e4a4d_rangeChecker*);
inline void _2010e61c0_checkStr(_2010e4a4d_rangeChecker*);
inline void _2010e639b_checkComptime(_2010e4a4d_rangeChecker*);
inline jule::Bool _2010e6610_checkComptimeRange(_2010e4a4d_rangeChecker*);
inline jule::Bool _2010e6874_check(_2010e4a4d_rangeChecker*);
struct _2010e4a4d_rangeChecker {
	jule::Ptr<_20106455b_scopeChecker> _field_sc;
	jule::Ptr<_200eee947_RangeKind> _field_rang;
	jule::Ptr<_20105e5cd_RangeIter> _field_Kind;
	jule::Ptr<_2010edb23_Data> _field_d;
	

	inline bool operator==(_2010e4a4d_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_2010e4a4d_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _2010e7457_prepareTypes(_2010e704a_retTypeChecker*);
inline void _2010e76cc_prepareExprs(_2010e704a_retTypeChecker*, jule::Ptr<_200ede838_Expr>*);
inline void _2010e78a8_checkExprs(_2010e704a_retTypeChecker*);
inline jule::Bool _2010e7bb6_check(_2010e704a_retTypeChecker*, jule::Ptr<_200ede838_Expr>*);
struct _2010e704a_retTypeChecker {
	jule::Ptr<_20106455b_scopeChecker> _field_sc;
	jule::Ptr<_20102330b_FnIns> _field_f;
	jule::Slice<jule::Ptr<_2011310ea_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_200ede838_Expr>> _field_exprs;
	jule::Ptr<_1ed694d8c_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
inline jule::Ptr<_20107b397_ImportInfo> _2010e95d0_SelectPackage(_2010e9118_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)>);
inline jule::Ptr<_2010a4975_Var> _2010e9987_FindVar(_2010e9118_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_2011303a2_TypeAlias> _2010e9d3e_FindTypeAlias(_2010e9118_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_20100a25a_Struct> _2010ea1e6_FindStruct(_2010e9118_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_20102065a_Fn> _2010ea59d_FindFn(_2010e9118_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_20103287b_Trait> _2010ea8ab_FindTrait(_2010e9118_SymbolTable*, jule::Str);
inline jule::Ptr<_20103510e_Enum> _2010eabb9_FindEnum(_2010e9118_SymbolTable*, jule::Str);
inline jule::Ptr<_201036709_TypeEnum> _2010eaec7_FindTypeEnum(_2010e9118_SymbolTable*, jule::Str);
inline jule::Ptr<_2010a4975_Var> _2010eb58d_findVar(_2010e9118_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_2011303a2_TypeAlias> _2010eb9de_findTypeAlias(_2010e9118_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _2010ebd96_defByIdent(_2010e9118_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _2010ec2e7_isDuplicatedIdent(_2010e9118_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _2010e9118_SymbolTable {
	jule::Ptr<_1ed69a227_File> _field_File;
	jule::Slice<_201027596_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_20107b397_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_2010a4975_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_20100a25a_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_20102065a_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_20103287b_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_20103510e_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_201036709_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_2010578c3_Impl>> _field_Impls;
	


};
inline jule::Bool _2010edeb9_IsNil(_2010edb23_Data*);
inline jule::Bool _2010ee22d_IsVoid(_2010edb23_Data*);
inline jule::Bool _2010ee492_IsConst(_2010edb23_Data*);
inline jule::Bool _2010ee7a0_GoodOperand(_2010edb23_Data*, jule::Ptr<_2010edb23_Data>*);
struct _2010edb23_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_2011310ea_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1ee33c6d2_Const> _field_Constant;
	

	inline bool operator==(_2010edb23_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_2010edb23_Data _other) { return !this->operator==(_other); }


};
struct _2010eeb9b_Value {
	jule::Ptr<_200ede838_Expr> _field_Expr;
	jule::Ptr<_2010edb23_Data> _field_Data;
	

	inline bool operator==(_2010eeb9b_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_2010eeb9b_Value _other) { return !this->operator==(_other); }


};
inline void _201100b9c_pushErr(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _201100ebb_pushSuggestion(_201100691_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _201101197_allowBuiltin(_201100691_Eval*);
inline void _201101373_disallowBuiltin(_201100691_Eval*);
inline jule::Bool _2011015d7_isUnsafe(_201100691_Eval*);
inline jule::Bool _20110184b_isGlobal(_201100691_Eval*);
inline jule::Bool _201101b26_applyNumericPrefix(_201100691_Eval*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201101d8a_litNil(_201100691_Eval*);
inline jule::Ptr<_2010edb23_Data> _201102198_litStr(_201100691_Eval*, jule::Ptr<_200ee086c_LitExpr>*);
inline jule::Ptr<_2010edb23_Data> _2011024a6_litBool(_201100691_Eval*, jule::Ptr<_200ee086c_LitExpr>*);
inline jule::Ptr<_2010edb23_Data> _2011027b4_litRune(_201100691_Eval*, jule::Ptr<_200ee086c_LitExpr>*);
inline jule::Ptr<_2010edb23_Data> _201102ac2_litFloat(_201100691_Eval*, jule::Ptr<_200ee086c_LitExpr>*);
inline jule::Ptr<_2010edb23_Data> _201102dd0_litInt(_201100691_Eval*, jule::Ptr<_200ee086c_LitExpr>*);
inline jule::Ptr<_2010edb23_Data> _2011031dd_litNum(_201100691_Eval*, jule::Ptr<_200ee086c_LitExpr>*);
inline jule::Ptr<_2010edb23_Data> _2011034eb_evalLit(_201100691_Eval*, jule::Ptr<_200ee086c_LitExpr>);
inline jule::Any _201103809_findBuiltins(_201100691_Eval*, jule::Str);
inline jule::Any _201103bb1_getDef(_201100691_Eval*, jule::Str, jule::Bool);
inline void _2056b758e_pushReference(_201100691_Eval*, jule::Ptr<_20102330b_FnIns>*);
inline void _2056ca98c_pushReference(_201100691_Eval*, jule::Ptr<_2010a4975_Var>*);
inline void _205769b3b_pushReference(_201100691_Eval*, jule::Ptr<_20100d071_StructIns>*);
inline jule::Ptr<_2010edb23_Data> _201104244__evalEnum(_201100691_Eval*, jule::Ptr<_20103510e_Enum>);
inline jule::Ptr<_2010edb23_Data> _2011045eb_evalEnum(_201100691_Eval*, jule::Ptr<_20103510e_Enum>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201104909__evalTypeEnum(_201100691_Eval*, jule::Ptr<_201036709_TypeEnum>);
inline jule::Ptr<_2010edb23_Data> _201104cb1_evalTypeEnum(_201100691_Eval*, jule::Ptr<_201036709_TypeEnum>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _2011050be__evalStruct(_201100691_Eval*, jule::Ptr<_20100d071_StructIns>);
inline jule::Ptr<_2010edb23_Data> _201105476_evalStruct(_201100691_Eval*, jule::Ptr<_20100d071_StructIns>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201105784_evalFnIns(_201100691_Eval*, jule::Ptr<_20102330b_FnIns>);
inline void _201105aa3_checkDeprecated(_201100691_Eval*, jule::Slice<jule::Ptr<_200d472d9_Directive>>*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201105e5a_evalFn(_201100691_Eval*, jule::Ptr<_20102065a_Fn>, jule::Ptr<_1ed694d8c_Token>);
inline void _201106323_pushIllegalCycleError(_201100691_Eval*, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*, jule::Str*);
inline jule::Bool _2011066ca_checkCrossCycle(_201100691_Eval*, jule::Ptr<_2010a4975_Var>*, jule::Str*);
inline jule::Bool _201106a82_checkIllegalCycles(_201100691_Eval*, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201106e39_evalVar(_201100691_Eval*, jule::Ptr<_2010a4975_Var>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _2011072e1_evalTypeAlias(_201100691_Eval*, jule::Ptr<_2011303a2_TypeAlias>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201107698_evalDef(_201100691_Eval*, jule::Any, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _2011079a6_evalIdent(_201100691_Eval*, jule::Ptr<_200ee142d_IdentExpr>);
inline jule::Ptr<_2010edb23_Data> _201107cb4_evalUnary(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee1b37_UnaryExpr>);
inline jule::Ptr<_2010edb23_Data> _2011080c2_evalVariadic(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee1ede_VariadicExpr>);
inline jule::Ptr<_2010edb23_Data> _2011083d0_evalUnsafe(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee0eaa_UnsafeExpr>);
inline jule::Ptr<_2010edb23_Data> _2011086dd_evalArr(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee5e7c_SliceExpr>);
inline jule::Ptr<_2010edb23_Data> _201108b3e_evalExpSlc(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee5e7c_SliceExpr>, jule::Ptr<_2011310ea_TypeKind>, jule::Any);
inline jule::Ptr<_2010edb23_Data> _201108e4c_evalSliceExpr(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee5e7c_SliceExpr>);
inline void _20110928d_checkIntegerIndexingByData(_201100691_Eval*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_1ed694d8c_Token>);
inline void _201109667_indexingPtr(_201100691_Eval*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee67da_IndexingExpr>*);
inline void _201109a30_indexingArr(_201100691_Eval*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee67da_IndexingExpr>*);
inline void _201109de8_indexingSlc(_201100691_Eval*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee67da_IndexingExpr>*);
inline void _20110a2b1_indexingMap(_201100691_Eval*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee67da_IndexingExpr>*);
inline void _20110a679_indexingStr(_201100691_Eval*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee67da_IndexingExpr>*);
inline void _20110aa42_toIndexing(_201100691_Eval*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee67da_IndexingExpr>*);
inline jule::Bool _20110aeb5_pushGenericsFromExprSubIdent(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee2bc1_SubIdentExpr>*, jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>*, jule::Ptr<_200ede838_Expr>*);
inline jule::Bool _20110b37d_pushGenericsFromData(jule::Ptr<_201100691_Eval>, jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>*, jule::Ptr<_200ede838_Expr>*);
inline void _20110b6be_evalIdentDeclFromIndexing(jule::Ptr<_201100691_Eval>, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee67da_IndexingExpr>*);
inline jule::Bool _20110bb31_checkGenericFn(jule::Ptr<_201100691_Eval>, jule::Ptr<_20102330b_FnIns>*, jule::Ptr<_1ed694d8c_Token>*, jule::Any*);
inline void _20110be72_evalFnGenericFromIndexing(jule::Ptr<_201100691_Eval>, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee67da_IndexingExpr>*);
inline jule::Ptr<_2010edb23_Data> _20110c291_evalIndexing(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee67da_IndexingExpr>);
inline __jule_tuple_x_2010edb23_Data__jule_tuple_x_2010edb23_Data _20110c59e_evalSlicingExprs(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee6de5_SlicingExpr>*);
inline void _20110c824_slicingArr(_201100691_Eval*, jule::Ptr<_2010edb23_Data>*);
inline void _20110cbdc_slicingStr(_201100691_Eval*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*);
inline void _20110d14e_checkSlicing(_201100691_Eval*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee6de5_SlicingExpr>*);
inline jule::Ptr<_2010edb23_Data> _20110d45c_evalSlicing(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee6de5_SlicingExpr>);
inline void _20110d825_castPtr(_201100691_Eval*, jule::Ptr<_2011310ea_TypeKind>, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline void _20110dbdd_castStruct(_201100691_Eval*, jule::Ptr<_2011310ea_TypeKind>, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline void _20110e0a6_castRef(_201100691_Eval*, jule::Ptr<_2011310ea_TypeKind>, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline void _20110e46e_castSlc(_201100691_Eval*, jule::Ptr<_2011310ea_TypeKind>, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline void _20110e78d_castStr(_201100691_Eval*, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline void _20110eb56_castInt(_201100691_Eval*, jule::Ptr<_2011310ea_TypeKind>, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline void _20111001e_castNum(_201100691_Eval*, jule::Ptr<_2011310ea_TypeKind>, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline void _2011103d7_castPrim(_201100691_Eval*, jule::Ptr<_2011310ea_TypeKind>, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline void _201110706_castConstant(_201100691_Eval*, jule::Ptr<_2011310ea_TypeKind>*, jule::Ptr<_2010edb23_Data>*);
inline void _201110abe_castTypeEnum(_201100691_Eval*, jule::Ptr<_2011310ea_TypeKind>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_1ed694d8c_Token>*);
inline void _201110e87_castTypeEnumT(_201100691_Eval*, jule::Ptr<_2011310ea_TypeKind>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Ptr<_2010edb23_Data> _2011113d8_evalCastByTypeNData(_201100691_Eval*, jule::Ptr<_2011310ea_TypeKind>, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201111839_evalCastT(jule::Ptr<_201100691_Eval>, jule::Ptr<_2011310ea_TypeKind>*, jule::Ptr<_200ede838_Expr>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Ptr<_2010edb23_Data> _201111b47_evalCast(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee2396_CastExpr>);
inline jule::Ptr<_2010edb23_Data> _201111e55_evalNsSelection(_201100691_Eval*, jule::Ptr<_200ee274d_NsSelectionExpr>);
inline jule::Ptr<_2010edb23_Data> _2011123a6_evalStructLitExplicit(jule::Ptr<_201100691_Eval>, jule::Ptr<_20100d071_StructIns>, jule::Slice<jule::Ptr<_200ede838_Expr>>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _2011126b4_evalStructLit(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee49a3_StructLit>);
inline _20114243b_typeChecker _201112928_typeChecker(_201100691_Eval*);
inline jule::Ptr<_2010edb23_Data> _201112c36_evalType(_201100691_Eval*, jule::Ptr<_200eda6ad_TypeDecl>);
inline void _201113055_callTypeFn(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline void _201113374_callBuiltinFn(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline void _2011136b5_checkFnOfConcurrentCall(_201100691_Eval*, jule::Ptr<_20102330b_FnIns>*, jule::Ptr<_1ed694d8c_Token>);
inline void _201113ab1_processExceptionalHandler(_201100691_Eval*, jule::Ptr<_20102330b_FnIns>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline void _201113de1_callFn(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011141ee_evalFnCall(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee374e_FnCallExpr>);
inline jule::Ptr<_2010edb23_Data> _2011145a6_evalEnumStatic(_201100691_Eval*, jule::Ptr<_20103510e_Enum>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _20111495d_evalTypeEnumStatic(_201100691_Eval*, jule::Ptr<_201036709_TypeEnum>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201114d15_evalStructStatic(_201100691_Eval*, jule::Ptr<_20100d071_StructIns>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201115266_evalTraitSubIdent(_201100691_Eval*, jule::Ptr<_2010edb23_Data>, jule::Ptr<_20103287b_Trait>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201115783_evalStructSubIdentField(_201100691_Eval*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_20100d071_StructIns>*, jule::Ptr<_1ed694d8c_Token>*, jule::Ptr<_20100c57b_FieldIns>*);
inline jule::Ptr<_2010edb23_Data> _201115c8e_evalStructSubIdent(_201100691_Eval*, jule::Ptr<_2010edb23_Data>, jule::Ptr<_20100d071_StructIns>, jule::Ptr<_200ee2bc1_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_2010edb23_Data> _201116146_evalSliceSubIdent(_201100691_Eval*, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _2011164ed_evalArraySubIdent(_201100691_Eval*, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _20111680b_evalIntTypeStatic(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201116b19_evalUintTypeStatic(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201116e27_evalI8TypeStatic(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201117235_evalI16TypeStatic(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201117543_evalI32TypeStatic(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201117851_evalI64TypeStatic(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201117b5e_evalU8TypeStatic(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201117e6c_evalU16TypeStatic(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _20111827a_evalU32TypeStatic(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201118588_evalU64TypeStatic(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201118896_evalF32TypeStatic(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201118ba4_evalF64TypeStatic(_201100691_Eval*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _20111905b_evalPrimStatic(_201100691_Eval*, jule::Str, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_2010edb23_Data> _201119413_evalTypeStatic(_201100691_Eval*, jule::Ptr<_2010edb23_Data>, jule::Ptr<_200ee2bc1_SubIdentExpr>);
inline jule::Ptr<_2010edb23_Data> _20585a5cd_comptimeObjSubIdent(_201100691_Eval*, jule::Ptr<_20104760a_comptimeTypeInfo>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee2bc1_SubIdentExpr>*);
inline jule::Ptr<_2010edb23_Data> _20585dc96_comptimeObjSubIdent(_201100691_Eval*, jule::Ptr<_201039355_comptimeStructField>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee2bc1_SubIdentExpr>*);
inline jule::Ptr<_2010edb23_Data> _20586241a_comptimeObjSubIdent(_201100691_Eval*, jule::Ptr<_20104035b_comptimeEnumField>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee2bc1_SubIdentExpr>*);
inline jule::Ptr<_2010edb23_Data> _205865bb0_comptimeObjSubIdent(_201100691_Eval*, jule::Ptr<_201042acd_comptimeParam>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee2bc1_SubIdentExpr>*);
inline jule::Ptr<_2010edb23_Data> _20586939a_comptimeObjSubIdent(_201100691_Eval*, jule::Ptr<_20103c358_comptimeStatic>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee2bc1_SubIdentExpr>*);
inline jule::Ptr<_2010edb23_Data> _20586ca1e_comptimeObjSubIdent(_201100691_Eval*, jule::Ptr<_20104d105_comptimeValue>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee2bc1_SubIdentExpr>*);
inline jule::Ptr<_2010edb23_Data> _205871193_comptimeObjSubIdent(_201100691_Eval*, jule::Ptr<_201051bb9_comptimeFile>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_200ee2bc1_SubIdentExpr>*);
inline jule::Ptr<_2010edb23_Data> _201119c1b_evalObjSubIdent(_201100691_Eval*, jule::Ptr<_2010edb23_Data>, jule::Ptr<_200ee2bc1_SubIdentExpr>);
inline jule::Ptr<_2010edb23_Data> _20111a029_evalSubIdent(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee2bc1_SubIdentExpr>);
inline jule::Ptr<_2010edb23_Data> _20111a337_evalTuple(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee04b5_TupleExpr>);
inline jule::Ptr<_2010edb23_Data> _20111a6de_evalMap(jule::Ptr<_201100691_Eval>, jule::Ptr<_20113e0b4_Map>, jule::Ptr<_200ee4e26_BraceLit>);
inline jule::Ptr<_2010edb23_Data> _20111a9ec_evalBraceLit(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee4e26_BraceLit>);
inline jule::Ptr<_2010edb23_Data> _20111ad0a_evalAnonFn(jule::Ptr<_201100691_Eval>, jule::Ptr<_200eebcda_FnDecl>);
inline jule::Ptr<_2010edb23_Data> _20111b118_evalBinop(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ee3144_BinopExpr>);
inline jule::Ptr<_2010edb23_Data> _20111b426_evalExprKind(jule::Ptr<_201100691_Eval>, jule::Any);
inline jule::Ptr<_2010edb23_Data> _20111b734_eval1(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ede838_Expr>);
inline jule::Ptr<_2010edb23_Data> _20111ba42_eval(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ede838_Expr>);
inline jule::Ptr<_2010edb23_Data> _20111bd50_evalExpr1(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ede838_Expr>);
inline jule::Ptr<_2010edb23_Data> _201121eba_evalExpr(jule::Ptr<_201100691_Eval>, jule::Ptr<_200ede838_Expr>);
struct _201100691_Eval {
	jule::Ptr<_201084669_Sema> _field_s;
	jule::Trait<_20114e426_Lookup> _field_lookup;
	jule::Ptr<_2011310ea_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_2010a4975_Var> _field_owner;
	jule::Ptr<_20100c57b_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_201100691_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_201100691_Eval _other) { return !this->operator==(_other); }


};
inline _20112243d_unaryEval static__20112286c_new(jule::Ptr<_201100691_Eval>);
inline void _201122a48_minus(_20112243d_unaryEval*);
inline void _201122c24_plus(_20112243d_unaryEval*);
inline void _201122e00_caret(_20112243d_unaryEval*);
inline void _2011230cb_excl(_20112243d_unaryEval*);
inline void _2011232a7_star(_20112243d_unaryEval*);
inline void _201123483_amper(_20112243d_unaryEval*);
inline void _20112365e_typeDecl(_20112243d_unaryEval*);
inline void _20112383a_evalData(_20112243d_unaryEval*);
inline jule::Ptr<_2010edb23_Data> _201123b48_eval(_20112243d_unaryEval*, jule::Ptr<_200ee1b37_UnaryExpr>);
struct _20112243d_unaryEval {
	jule::Ptr<_201100691_Eval> _field_e;
	jule::Ptr<_2010edb23_Data> _field_d;
	jule::Ptr<_200ee1b37_UnaryExpr> _field_u;
	

	inline bool operator==(_20112243d_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_20112243d_unaryEval _other) { return !this->operator==(_other); }


};
inline _20112420e_binaryEval static__2011247d6_newPlain(jule::Ptr<_201100691_Eval>);
inline _20112420e_binaryEval static__201124ae4_new(jule::Ptr<_201100691_Eval>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Bool _201124d58_checkTypeCompatibility(_20112420e_binaryEval*);
inline jule::Bool _201125100_checkStructCommonOperatorCompatibility(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _201125397_evalComptimeTypeInfo(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _20112560b_evalNil(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _201125870_evalEnum(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _201125ad4_evalTypeEnum(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _201125d48_evalSptr(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _2011260ac_evalPtr(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _201126321_evalArr(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _201126585_evalSlc(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _2011267e9_evalStruct(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _201126a5d_evalTrait(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _201126cc2_evalAny(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _201127036_evalBool(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _20112729a_evalStr(_20112420e_binaryEval*);
inline void _201127476_setTypeToGreater(_20112420e_binaryEval*);
inline void _2011276b8_checkModData(_20112420e_binaryEval*, jule::Ptr<_2010edb23_Data>*);
inline void _201127894_mod(_20112420e_binaryEval*);
inline jule::Bool _201127c4b_numbersAreCompatibile(_20112420e_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_2010edb23_Data> _201127eb0_evalFloat(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _201128224_evalInt(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _201128488_evalPrim(_20112420e_binaryEval*);
inline void _201128664_checkSpecialCases(_20112420e_binaryEval*);
inline jule::Ptr<_2010edb23_Data> _2011288c8_evalOp(_20112420e_binaryEval*);
inline void _201128b4d_evalConst(_20112420e_binaryEval*, jule::Ptr<_2010edb23_Data>*);
inline void _201128dc3_checkData(_20112420e_binaryEval*, jule::Ptr<_2010edb23_Data>*);
inline void _20112909e_checkDatas(_20112420e_binaryEval*);
inline void _201129324_setModel(_20112420e_binaryEval*, jule::Ptr<_2010edb23_Data>*);
inline void _201129599_postEval(_20112420e_binaryEval*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201129951_solveExplicit(_20112420e_binaryEval*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201129c5e_eval(_20112420e_binaryEval*, jule::Ptr<_200ee3144_BinopExpr>*);
struct _20112420e_binaryEval {
	jule::Ptr<_201100691_Eval> _field_e;
	jule::Ptr<_2010edb23_Data> _field_l;
	jule::Ptr<_2010edb23_Data> _field_r;
	jule::Ptr<_1ed694d8c_Token> _field_op;
	

	inline bool operator==(_20112420e_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_20112420e_binaryEval _other) { return !this->operator==(_other); }


};
struct _20112e868_InsGeneric {
	jule::Ptr<_2011310ea_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_2011310ea_TypeKind>> _field_Constraint;
	


};
struct _2011303a2_TypeAlias {
	jule::Ptr<_200eea2e4_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_201137e9d_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> _field_Generics;
	


};
inline jule::Str _2011314a2_Str(_2011310ea_TypeKind*);
inline jule::Bool _2011317b0_Equal(jule::Ptr<_2011310ea_TypeKind>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Bool _201131ddc_Binded(_2011310ea_TypeKind*);
inline jule::Bool _201132151_IsNil(_2011310ea_TypeKind*);
inline jule::Bool _2011323b5_Void(_2011310ea_TypeKind*);
inline jule::Bool _201132629_Comparable(_2011310ea_TypeKind*);
inline jule::Bool _20113288d_Mutable(_2011310ea_TypeKind*);
inline jule::Bool _201132b02_Ordered(_2011310ea_TypeKind*);
inline jule::Bool _201132d66_NilCompatible(_2011310ea_TypeKind*);
inline jule::Bool _2011330ca_PerformsRC(_2011310ea_TypeKind*);
inline jule::Bool _20113333e_SupportsCloning(_2011310ea_TypeKind*);
inline jule::Bool _2011335a3_Variadicable(_2011310ea_TypeKind*);
inline jule::Ptr<_201138850_Prim> _201133817_Prim(_2011310ea_TypeKind*);
inline jule::Ptr<_20113c0a1_Sptr> _201133a7b_Sptr(_2011310ea_TypeKind*);
inline jule::Ptr<_201140615_Ptr> _201133ce0_Ptr(_2011310ea_TypeKind*);
inline jule::Ptr<_20103510e_Enum> _201134054_Enum(_2011310ea_TypeKind*);
inline jule::Ptr<_201036709_TypeEnum> _2011342b8_TypeEnum(_2011310ea_TypeKind*);
inline jule::Ptr<_20113eba8_Arr> _20113452c_Arr(_2011310ea_TypeKind*);
inline jule::Ptr<_20113ca0d_Slc> _201134791_Slc(_2011310ea_TypeKind*);
inline jule::Ptr<_20102330b_FnIns> _201134a05_Fn(_2011310ea_TypeKind*);
inline jule::Ptr<_20100d071_StructIns> _201134c69_Struct(_2011310ea_TypeKind*);
inline jule::Ptr<_20103287b_Trait> _201134ecd_Trait(_2011310ea_TypeKind*);
inline jule::Ptr<_20113e0b4_Map> _201135242_Map(_2011310ea_TypeKind*);
inline jule::Ptr<_20113d613_Tuple> _2011354a6_Tup(_2011310ea_TypeKind*);
inline jule::Bool _20113571a_comptime(_2011310ea_TypeKind*);
inline jule::Ptr<_20103ad7e_comptimeStructFields> _20113597e_comptimeStructFields(_2011310ea_TypeKind*);
inline jule::Ptr<_201039355_comptimeStructField> _201135be3_comptimeStructField(_2011310ea_TypeKind*);
inline jule::Ptr<_20104157c_comptimeEnumFields> _201135e57_comptimeEnumFields(_2011310ea_TypeKind*);
inline jule::Ptr<_20104035b_comptimeEnumField> _2011361bb_comptimeEnumField(_2011310ea_TypeKind*);
inline jule::Ptr<_201044b79_comptimeParams> _201136430_comptimeParams(_2011310ea_TypeKind*);
inline jule::Ptr<_201042acd_comptimeParam> _201136694_comptimeParam(_2011310ea_TypeKind*);
inline jule::Ptr<_201038860_comptimeRange> _201136908_comptimeRange(_2011310ea_TypeKind*);
inline jule::Ptr<_201046142_comptimeTypeInfos> _201136b6c_comptimeTypeInfos(_2011310ea_TypeKind*);
inline jule::Ptr<_20104760a_comptimeTypeInfo> _201136dd1_comptimeTypeInfo(_2011310ea_TypeKind*);
inline jule::Ptr<_20103de1a_comptimeStatics> _201137145_comptimeStatics(_2011310ea_TypeKind*);
inline jule::Ptr<_20103c358_comptimeStatic> _2011373a9_comptimeStatic(_2011310ea_TypeKind*);
inline jule::Ptr<_20104d105_comptimeValue> _20113761d_comptimeValue(_2011310ea_TypeKind*);
inline jule::Ptr<_201051bb9_comptimeFile> _201137882_comptimeFile(_2011310ea_TypeKind*);
inline jule::Ptr<_201050701_comptimeFiles> _201137ae6_comptimeFiles(_2011310ea_TypeKind*);
struct _2011310ea_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_201130b88_Kind> _field_Kind;
	

	inline bool operator==(_2011310ea_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2011310ea_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _201138311_checked(_201137e9d_TypeSymbol*);
inline void _2011384dc_removeKind(_201137e9d_TypeSymbol*);
struct _201137e9d_TypeSymbol {
	jule::Ptr<_200eda6ad_TypeDecl> _field_Decl;
	jule::Ptr<_2011310ea_TypeKind> _field_Kind;
	

	inline bool operator==(_201137e9d_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_201137e9d_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _201138b80_Str(_201138850_Prim*);
inline jule::Bool _201138e8d_Equal(jule::Ptr<_201138850_Prim>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Bool _201139411_IsConstraint(_201138850_Prim*);
inline jule::Bool _201139675_IsI8(_201138850_Prim*);
inline jule::Bool _2011398d9_IsI16(_201138850_Prim*);
inline jule::Bool _201139b4d_IsI32(_201138850_Prim*);
inline jule::Bool _201139db2_IsI64(_201138850_Prim*);
inline jule::Bool _20113a126_IsU8(_201138850_Prim*);
inline jule::Bool _20113a38a_IsU16(_201138850_Prim*);
inline jule::Bool _20113a5ee_IsU32(_201138850_Prim*);
inline jule::Bool _20113a863_IsU64(_201138850_Prim*);
inline jule::Bool _20113aac7_IsF32(_201138850_Prim*);
inline jule::Bool _20113ad3b_IsF64(_201138850_Prim*);
inline jule::Bool _20113b0a0_IsInt(_201138850_Prim*);
inline jule::Bool _20113b314_IsUint(_201138850_Prim*);
inline jule::Bool _20113b578_IsUintptr(_201138850_Prim*);
inline jule::Bool _20113b7dc_IsBool(_201138850_Prim*);
inline jule::Bool _20113ba51_IsStr(_201138850_Prim*);
inline jule::Bool _20113bcb5_IsAny(_201138850_Prim*);
struct _201138850_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_201138850_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_201138850_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _20113c414_Str(_20113c0a1_Sptr*);
inline jule::Bool _20113c722_Equal(jule::Ptr<_20113c0a1_Sptr>, jule::Ptr<_2011310ea_TypeKind>);
struct _20113c0a1_Sptr {
	jule::Ptr<_2011310ea_TypeKind> _field_Elem;
	

	inline bool operator==(_20113c0a1_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20113c0a1_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _20113ce81_Str(_20113ca0d_Slc*);
inline jule::Bool _20113d28e_Equal(jule::Ptr<_20113ca0d_Slc>, jule::Ptr<_2011310ea_TypeKind>);
struct _20113ca0d_Slc {
	jule::Ptr<_2011310ea_TypeKind> _field_Elem;
	

	inline bool operator==(_20113ca0d_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20113ca0d_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _20113d976_Str(_20113d613_Tuple*);
inline jule::Bool _20113dc84_Equal(jule::Ptr<_20113d613_Tuple>, jule::Ptr<_2011310ea_TypeKind>);
struct _20113d613_Tuple {
	jule::Slice<jule::Ptr<_2011310ea_TypeKind>> _field_Types;
	


};
inline jule::Str _20113e427_Str(_20113e0b4_Map*);
inline jule::Bool _20113e735_Equal(jule::Ptr<_20113e0b4_Map>, jule::Ptr<_2011310ea_TypeKind>);
struct _20113e0b4_Map {
	jule::Ptr<_2011310ea_TypeKind> _field_Key;
	jule::Ptr<_2011310ea_TypeKind> _field_Val;
	

	inline bool operator==(_20113e0b4_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_20113e0b4_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _20114001b_Str(_20113eba8_Arr*);
inline jule::Bool _201140329_Equal(jule::Ptr<_20113eba8_Arr>, jule::Ptr<_2011310ea_TypeKind>);
struct _20113eba8_Arr {
	jule::Bool _field_Auto = false;
	jule::I32 _field_N = 0;
	jule::Ptr<_2011310ea_TypeKind> _field_Elem;
	

	inline bool operator==(_20113eba8_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_20113eba8_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _201140978_Str(_201140615_Ptr*);
inline jule::Bool _201140c86_Equal(jule::Ptr<_201140615_Ptr>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Bool _2011410d8_IsUnsafe(_201140615_Ptr*);
struct _201140615_Ptr {
	jule::Ptr<_2011310ea_TypeKind> _field_Elem;
	

	inline bool operator==(_201140615_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_201140615_Ptr _other) { return !this->operator==(_other); }


};
struct _20114155b_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_20114155b_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_20114155b_referencer _other) { return !this->operator==(_other); }


};
inline void _201142b34_pushErr(_20114243b_typeChecker*, jule::Ptr<_1ed694d8c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _201142d10_allowBuiltin(_20114243b_typeChecker*);
inline void _201142edb_disallowBuiltin(_20114243b_typeChecker*);
inline void _205a015ba_pushReference(_20114243b_typeChecker*, jule::Ptr<_20100d071_StructIns>*);
inline void _205a041e4_pushReference(_20114243b_typeChecker*, jule::Ptr<_20103287b_Trait>*);
inline void _2011434d6_pushReferenceByKind(_20114243b_typeChecker*, jule::Ptr<_2011310ea_TypeKind>*);
inline void _20114389e_pushCycleError(_20114243b_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _201143c56_checkCrossCycle(_20114243b_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _20114410d_checkIllegalCycles(_20114243b_typeChecker*, jule::Ptr<_200edac74_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_201130b88_Kind> _2011444b5_fromTypeAlias(_20114243b_typeChecker*, jule::Ptr<_200edac74_IdentTypeDecl>*, jule::Ptr<_2011303a2_TypeAlias>*);
inline jule::Ptr<_20103510e_Enum> _20114486c_fromEnum(_20114243b_typeChecker*, jule::Ptr<_200edac74_IdentTypeDecl>*, jule::Ptr<_20103510e_Enum>*);
inline jule::Ptr<_201036709_TypeEnum> _201144c24_fromTypeEnum(_20114243b_typeChecker*, jule::Ptr<_200edac74_IdentTypeDecl>*, jule::Ptr<_201036709_TypeEnum>*);
inline jule::Ptr<_20103287b_Trait> _2011450cb_fromTrait(_20114243b_typeChecker*, jule::Ptr<_200edac74_IdentTypeDecl>*, jule::Ptr<_20103287b_Trait>*);
inline jule::Bool _201145483_checkStructIns(_20114243b_typeChecker*, jule::Ptr<_20100d071_StructIns>*, jule::Ptr<_1ed694d8c_Token>*);
inline void _20114572a_appendUsedStructReference(_20114243b_typeChecker*, jule::Ptr<_20100a25a_Struct>*);
inline jule::Ptr<_20100d071_StructIns> _201145ae3_buildStructInstance(_20114243b_typeChecker*, jule::Ptr<_200edac74_IdentTypeDecl>*, jule::Ptr<_20100a25a_Struct>*);
inline jule::Ptr<_20100d071_StructIns> _201145e9a_fromStruct(_20114243b_typeChecker*, jule::Ptr<_200edac74_IdentTypeDecl>*, jule::Ptr<_20100a25a_Struct>*);
inline jule::Trait<_201130b88_Kind> _2011462a8_getDef(_20114243b_typeChecker*, jule::Ptr<_200edac74_IdentTypeDecl>*);
inline jule::Trait<_201130b88_Kind> _2011465b6_buildIdent(_20114243b_typeChecker*, jule::Ptr<_200edac74_IdentTypeDecl>);
inline jule::Trait<_201130b88_Kind> _2011468c4_buildSubIdent(_20114243b_typeChecker*, jule::Ptr<_200edb060_SubIdentTypeDecl>);
inline jule::Ptr<_20113c0a1_Sptr> _201146bd2_buildSptrFromType(_20114243b_typeChecker*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Ptr<_20113c0a1_Sptr> _201146ee0_buildSptr(_20114243b_typeChecker*, jule::Ptr<_200edb6c0_SptrTypeDecl>);
inline jule::Ptr<_201140615_Ptr> _2011472ed_buildPtrFromType(_20114243b_typeChecker*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Ptr<_201140615_Ptr> _20114760b_buildPtr(_20114243b_typeChecker*, jule::Ptr<_200edc193_PtrTypeDecl>);
inline jule::Ptr<_20113ca0d_Slc> _201147919_buildSlc(_20114243b_typeChecker*, jule::Ptr<_200edbabb_SlcTypeDecl>);
inline jule::Ptr<_20113eba8_Arr> _201147c27_buildArr(_20114243b_typeChecker*, jule::Ptr<_200edc869_ArrTypeDecl>);
inline jule::Ptr<_20113e0b4_Map> _201148035_buildMap(_20114243b_typeChecker*, jule::Ptr<_200edd073_MapTypeDecl>);
inline jule::Ptr<_20113d613_Tuple> _201148343_buildTuple(_20114243b_typeChecker*, jule::Ptr<_200edbda7_TupleTypeDecl>);
inline jule::Bool _201148651_checkFnTypes(_20114243b_typeChecker*, jule::Ptr<_20102330b_FnIns>*);
inline jule::Ptr<_20102330b_FnIns> _20114895e_buildFn(_20114243b_typeChecker*, jule::Ptr<_200eebcda_FnDecl>);
inline jule::Trait<_201130b88_Kind> _201148c6c_buildByNamespace(_20114243b_typeChecker*, jule::Ptr<_200edb3d4_NamespaceTypeDecl>);
inline jule::Ptr<_2011310ea_TypeKind> _20114907a_build(_20114243b_typeChecker*, jule::Any*);
inline jule::Ptr<_2011310ea_TypeKind> _201149388_checkDecl(_20114243b_typeChecker*, jule::Ptr<_200eda6ad_TypeDecl>*);
inline void _20114960d_check(_20114243b_typeChecker*, jule::Ptr<_201137e9d_TypeSymbol>*);
struct _20114243b_typeChecker {
	jule::Ptr<_201084669_Sema> _field_s;
	jule::Trait<_20114e426_Lookup> _field_rootLookup;
	jule::Trait<_20114e426_Lookup> _field_lookup;
	jule::Ptr<_20114155b_referencer> _field_referencer;
	jule::Ptr<_201026265_ReferenceStack> _field_refers;
	jule::Ptr<_1ed694d8c_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_200ee7654_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_2011310ea_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_2011303a2_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
inline jule::Bool static__201149c6d_prim(jule::Str*, jule::Ptr<_201138850_Prim>);
inline jule::Bool static__20114a0ae_exist(jule::Str*, jule::Ptr<_2011310ea_TypeKind>*);
struct _20114982d_identTypeLookup {
	

	inline bool operator==(_20114982d_identTypeLookup _other) { return true; }

	inline bool operator!=(_20114982d_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _20152cc44_FileInfo {
	jule::Ptr<_200d46041_Ast> _field_Ast;
	jule::Slice<_2193a460d_Log> _field_Errors;
	


};
struct _2031b5842_stmt {
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
inline void _2031b67aa_stop(_2031b616c_scopeParser*);
inline jule::Bool _2031b6a1e_stopped(_2031b616c_scopeParser*);
inline jule::Bool _2031b6c83_finished(_2031b616c_scopeParser*);
inline jule::Bool _2031b6ee7_isLastSt(_2031b616c_scopeParser*);
inline void _2031b7316_pushErr(_2031b616c_scopeParser*, jule::Ptr<_1ed694d8c_Token>, jule::Str);
inline void _2031b7635_pushSuggestion(_2031b616c_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _2031b78aa_insertAsNext(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_2031b5842_stmt> _2031b7b1e_next(_2031b616c_scopeParser*);
inline jule::Ptr<_200eea2e4_ScopeTree> _2031b7ec6_buildScope(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_200eeccb9_VarDecl> _2031b82d4_buildVarSt(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200eed171_RetSt> _2031b85e2_buildRetSt(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200eed7d1_Iter> _2031b8900_buildWhileNextIter(_2031b616c_scopeParser*, jule::Ptr<_2031b5842_stmt>*);
inline jule::Ptr<_200eee0a6_WhileKind> _2031b8c0d_buildWhileIterKind(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _2031b901b_getRangeKindKeysTokens(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200eeccb9_VarDecl> _2031b9329_buildRangeKindKey(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Slice<jule::Ptr<_200eeccb9_VarDecl>> _2031b9637_buildRangeKindKeys(_2031b616c_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>>*);
inline void _2031b9978_setupRangeKindKeysPlain(_2031b616c_scopeParser*, jule::Ptr<_200eee947_RangeKind>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031b9cca_setupRangeKindKeysExplicit(_2031b616c_scopeParser*, jule::Ptr<_200eee947_RangeKind>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031ba10a_setupRangeKindKeys(_2031b616c_scopeParser*, jule::Ptr<_200eee947_RangeKind>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200eee947_RangeKind> _2031ba55b_buildRangeIterKind(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Any _2031ba913_buildCommonIterKind(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Ptr<_200eed7d1_Iter> _2031bac21_buildCommonIter(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200eed7d1_Iter> _2031bb02e_buildIterSt(_2031b616c_scopeParser*, jule::Ptr<_2031b5842_stmt>*);
inline jule::Ptr<_200eeecee_BreakSt> _2031bb33c_buildBreakSt(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_2010001a6_ContSt> _2031bb64a_buildContSt(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_201000629_If> _2031bb958_buildIf(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_2010009d1_Else> _2031bbc66_buildElse(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_201000e54_Conditional> _2031bc074_buildIfElseChain(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ede838_Expr> _2031bc382_buildCoCallSt(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ee7db3_GotoSt> _2031bc690_buildGotoSt(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200ee819e_FallSt> _2031bc99d_buildFallSt(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_20100162a_TypeAliasDecl> _2031bccab_buildTypeAliasSt(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031bd21d_pushCaseExpr(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>, jule::Ptr<_1ed694d8c_Token>, jule::Bool, jule::Slice<jule::Ptr<_200ede838_Expr>>*);
inline jule::Slice<jule::Ptr<_200ede838_Expr>> _2031bd66e_buildCaseExprs(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Ptr<_1ed694d8c_Token>*, jule::Bool);
inline jule::Ptr<_200eea2e4_ScopeTree> _2031bd97c_buildCaseScope(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline __jule_tuple_x_201001a9d_Case__jule_tuple_bool _2031bdd34_buildCase(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Bool);
inline __jule_tuple_sx_201001a9d_Case__jule_tuple_x_2010009d1_Else _2031be1db_buildCases(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>, jule::Bool);
inline jule::Ptr<_201002274_MatchCase> _2031be4e9_buildMatchCase(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200eea2e4_ScopeTree> _2031be807_buildScopeSt(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ee7a0b_LabelSt> _2031beb15_buildLabelSt(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline __jule_tuple__200ee99a8_StmtData__jule_tuple_bool _2031bee23_buildIdSt(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_2031cde87_assignInfo> _2031c0231_buildAssignInfo(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200ee87a9_AssignLeft> _2031c053e_buildAssignL(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Slice<jule::Ptr<_200ee87a9_AssignLeft>> _2031c084c_buildAssignLs(_2031b616c_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>>*);
inline __jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool _2031c0b5a_buildPlainAssign(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline __jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool _2031c0e68_buildDeclAssign(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline __jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool _2031c1276_buildAssignSt(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200ee01c9_UseExpr> _2031c1584_buildUseExpr(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Any _2031c1892_buildSt(_2031b616c_scopeParser*, jule::Ptr<_2031b5842_stmt>*);
inline void _2031c1bb1_build(_2031b616c_scopeParser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Ptr<_200eea2e4_ScopeTree>*);
struct _2031b616c_scopeParser {
	jule::Ptr<_2031d2881_parser> _field_p;
	jule::Ptr<_200eea2e4_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_2031b5842_stmt>> _field_stmts;
	jule::I32 _field_pos = 0;
	


};
inline void _2031c2dd2_pushErr(_2031c2651_exprBuilder*, jule::Ptr<_1ed694d8c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2031c3201_pushSuggestion(_2031c2651_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_200ee04b5_TupleExpr> _2031c350e_buildTuple(_2031c2651_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>>*);
inline jule::Ptr<_200ee086c_LitExpr> _2031c381c_buildLit(_2031c2651_exprBuilder*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031c3b2a_buildPrimitiveType(_2031c2651_exprBuilder*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Any _2031c3e38_buildSingle(_2031c2651_exprBuilder*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_200ee142d_IdentExpr> _2031c4246_buildBindIdent(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200ee1b37_UnaryExpr> _2031c4554_buildUnary(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ee2bc1_SubIdentExpr> _2031c4862_buildObjSubIdent(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ee274d_NsSelectionExpr> _2031c4b70_buildNsSubIdent(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031c4e7d_buildType(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Any _2031c528b_buildSubIdent(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200ee1ede_VariadicExpr> _2031c5599_buildVariadic(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Any _2031c58a7_buildOpRight(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200edeb24_RangeExpr> _2031c5bd7_buildBetweenParentheses(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ee2396_CastExpr> _2031c6006_tryBuildCast(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031c63be_pushArg(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_200ede838_Expr>>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Slice<jule::Ptr<_200ede838_Expr>> _2031c66cc_buildArgs(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _2031c69da_buildCallGenerics(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ee374e_FnCallExpr> _2031c6e3b_buildFnCall(_2031c2651_exprBuilder*, jule::Ptr<_1ed694d8c_Token>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Any _2031c7249_buildParenthesesRange(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200ee0eaa_UnsafeExpr> _2031c7557_buildUnsafeExpr(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200eebcda_FnDecl> _2031c7865_buildAnonFn(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Any _2031c7b73_buildUnsafe(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031c803b_pushRangeLitPart(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>, jule::Ptr<_1ed694d8c_Token>, jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _2031c836b_getBraceRangeLitExprParts(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ee41cd_FieldExprPair> _2031c868a_buildFieldExprPair(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ede838_Expr> _2031c8998_buildStructLitExpr(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Slice<jule::Ptr<_200ede838_Expr>> _2031c8ca6_buildStructLitExprs(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200ee49a3_StructLit> _2031c90d6_buildTypedStructLiteral(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ede838_Expr> _2031c9405_buildBraceLitPart(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200ee4e26_BraceLit> _2031c9713_buildBraceLit(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Any _2031c9a21_buildBraceRange(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _2031c9d2e_getEnumerableParts(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ee5e7c_SliceExpr> _2031ca13c_buildSlice(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ee67da_IndexingExpr> _2031ca58d_buildIndexing(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Ptr<_200ee6de5_SlicingExpr> _2031cab32_buildSlicing(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Ptr<_1ed694d8c_Token>*, jule::Ptr<_1ed694d8c_Token>);
inline jule::Any _2031cae40_buildBracketRange(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Any _2031cb24d_buildData(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Any _2031cb605_buildBinop(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::I32);
inline jule::Any _2031cb913_build(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Any _2031cbc21_buildKind(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200ede838_Expr> _2031cc02e_buildFromTokens(_2031c2651_exprBuilder*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
struct _2031c2651_exprBuilder {
	jule::Ptr<_2031d2881_parser> _field_p;
	

	inline bool operator==(_2031c2651_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_2031c2651_exprBuilder _other) { return !this->operator==(_other); }


};
struct _2031cde87_assignInfo {
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_l;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_r;
	jule::Ptr<_1ed694d8c_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
inline void _2031d2b6c_stop(_2031d2881_parser*);
inline jule::Bool _2031d2dd1_stopped(_2031d2881_parser*);
inline void _2031d3299_pushErr(_2031d2881_parser*, jule::Ptr<_1ed694d8c_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2031d35b8_pushSuggestion(_2031d2881_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_200ede838_Expr> _2031d38c6_buildExpr(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200d472d9_Directive> _2031d3bd4_buildDirective(_2031d2881_parser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline void _2031d3e59_pushDirective(_2031d2881_parser*, jule::Ptr<_200d472d9_Directive>);
inline jule::Ptr<_200eea2e4_ScopeTree> _2031d4311_buildScope(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Ptr<_1ed694d8c_Token>);
inline __jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool _2031d4762__buildType(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::I32*, jule::Bool);
inline __jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool _2031d4bb3_buildType(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_20100162a_TypeAliasDecl> _2031d4ec1_buildTypeAliasDecl(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031d52e0_buildVarTypeAndExpr(jule::Ptr<_2031d2881_parser>, jule::Ptr<_200eeccb9_VarDecl>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031d560e_buildVarCommon(jule::Ptr<_2031d2881_parser>, jule::Ptr<_200eeccb9_VarDecl>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline void _2031d59c7_buildVarBegin(_2031d2881_parser*, jule::Ptr<_200eeccb9_VarDecl>*, jule::I32*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200eeccb9_VarDecl> _2031d5cd5_buildVar(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200ee7654_GenericDecl> _2031d60e3_buildGeneric(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Slice<jule::Ptr<_200ee7654_GenericDecl>> _2031d649a_buildGenerics(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Ptr<_1ed694d8c_Token>*);
inline jule::Ptr<_200eea9ba_ParamDecl> _2031d67a8_buildSelfParam(_2031d2881_parser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline void _2031d6b71_paramTypeBegin(_2031d2881_parser*, jule::Ptr<_200eea9ba_ParamDecl>*, jule::I32*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031d6e90_buildParamType(jule::Ptr<_2031d2881_parser>, jule::Ptr<_200eea9ba_ParamDecl>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031d72ae_buildParamBody(jule::Ptr<_2031d2881_parser>, jule::Ptr<_200eea9ba_ParamDecl>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200eea9ba_ParamDecl> _2031d75bc_buildParam(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline void _2031d7842_checkParams(_2031d2881_parser*, jule::Slice<jule::Ptr<_200eea9ba_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_200eea9ba_ParamDecl>> _2031d7be9_buildParams(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Bool);
inline __jule_tuple_x_200edd42a_RetTypeDecl__jule_tuple_bool _2031d80a1_buildMultiRetType(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::I32*);
inline __jule_tuple_x_200edd42a_RetTypeDecl__jule_tuple_bool _2031d8458_buildRetType(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::I32*);
inline jule::Ptr<_200eebcda_FnDecl> _2031d88a9_buildFnPrototype(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_200eebcda_FnDecl> _2031d8d0a_buildFn(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1ed694d8c_Token>> _2031d9118_getUseDeclSelectors(_2031d2881_parser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline void _2031d9437_buildBindUseDecl(_2031d2881_parser*, jule::Ptr<_201002a16_UseDecl>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031d9756_buildStdUseDecl(_2031d2881_parser*, jule::Ptr<_201002a16_UseDecl>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline void _2031d9a75_buildIdentUseDecl(_2031d2881_parser*, jule::Ptr<_201002a16_UseDecl>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline void _2031d9d94_parseUseDecl(_2031d2881_parser*, jule::Ptr<_201002a16_UseDecl>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_201002a16_UseDecl> _2031da24b_buildUseDecl(_2031d2881_parser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>, jule::Bool);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031da603_buildTypeEnumItemKind(jule::Ptr<_2031d2881_parser>, jule::I32*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Slice<jule::Ptr<_201004287_TypeEnumItemDecl>> _2031da911_buildTypeEnumItems(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_201004892_TypeEnumDecl> _2031dac1e_buildTypeEnumDecl(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200ede838_Expr> _2031db0c6_buildEnumItemExpr(jule::Ptr<_2031d2881_parser>, jule::I32*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Slice<jule::Ptr<_201002e89_EnumItemDecl>> _2031db3d4_buildEnumItems(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_2010039b2_EnumDecl> _2031db6e2_buildEnumDecl(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Any _2031dba00_buildNodeEnumDecl(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_201004b06_FieldDecl> _2031dbd0d_buildField(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Slice<jule::Ptr<_201004b06_FieldDecl>> _2031dc11b_buildStructDeclFields(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_201005453_StructDecl> _2031dc429_buildStructDecl(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031dc69e_checkMethodReceiver(_2031d2881_parser*, jule::Ptr<_200eebcda_FnDecl>*);
inline void _2031dc9bd_buildTraitBody(jule::Ptr<_2031d2881_parser>, jule::Ptr<_201005b29_TraitDecl>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_201005b29_TraitDecl> _2031dcccb_buildTraitDecl(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200eebcda_FnDecl> _2031dd0d9_buildBindFn(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_200eeccb9_VarDecl> _2031dd3e7_buildBindVar(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_201005453_StructDecl> _2031dd705_buildBindStruct(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_20100162a_TypeAliasDecl> _2031dda13_buildBindTypeAlias(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Ptr<_201002a16_UseDecl> _2031ddd21_buildBindUse(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Any _2031de12e_buildBind(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200eebcda_FnDecl> _2031de43c_getMethod(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031de75b_parseImplBody(jule::Ptr<_2031d2881_parser>, jule::Ptr<_201006234_Impl>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_201006234_Impl> _2031dea69_buildImpl(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Any _2031ded77_buildNodeData(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031e00ec_applyFnMeta(_2031d2881_parser*, jule::Ptr<_200eebcda_FnDecl>*);
inline void _2031e0372_applyMeta(_2031d2881_parser*, _200d46ddd_Node*);
inline void _2031e05e7_pushUseDecl(jule::Ptr<_2031d2881_parser>, jule::Ptr<_201002a16_UseDecl>*);
inline jule::Bool _2031e0905_pushMetaNodes(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline _200d46ddd_Node _2031e0c13_parseNode(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031e0e88_appendNode(jule::Ptr<_2031d2881_parser>, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031e13ea_removeRange(_2031d2881_parser*, jule::I32, jule::Str, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Slice<jule::I32>*);
inline void _2031e17b3_pushWrongOrderCloseErr(_2031d2881_parser*, jule::Ptr<_1ed694d8c_Token>*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Slice<jule::I32>*);
inline void _2031e1c25_pushRangeClose(_2031d2881_parser*, jule::Ptr<_1ed694d8c_Token>, jule::Str, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Slice<jule::I32>*);
inline void _2031e1e9a_checkRanges(_2031d2881_parser*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline void _2031e2220_parse(jule::Ptr<_2031d2881_parser>, jule::Ptr<_1ed69a227_File>*);
struct _2031d2881_parser {
	jule::Ptr<_200d46041_Ast> _field_ast;
	jule::Slice<jule::Ptr<_200d472d9_Directive>> _field_directives;
	jule::Slice<_2193a460d_Log> _field_errors;
	jule::Ptr<_2031c2651_exprBuilder> _field_ep;
	


};
inline void _2031e3b28_pushErr(_2031e35a6_typeBuilder*, jule::Ptr<_1ed694d8c_Token>, jule::Str);
inline void _2031e3e47_pushSuggestion(_2031e35a6_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e41ab_buildNamespace(_2031e35a6_typeBuilder*);
inline jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _2031e4420_buildGenerics(_2031e35a6_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _2031e4684_identGenerics(_2031e35a6_typeBuilder*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e48e8_buildIdent(_2031e35a6_typeBuilder*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e4b5c_buildCppLink(_2031e35a6_typeBuilder*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e4dc1_buildFn(_2031e35a6_typeBuilder*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e5135_buildPtr(_2031e35a6_typeBuilder*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e5399_buildSptr(_2031e35a6_typeBuilder*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e560d_buildOp(_2031e35a6_typeBuilder*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e5872_buildSlc(_2031e35a6_typeBuilder*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e5ad6_buildArr(_2031e35a6_typeBuilder*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e5d4a_buildMap(_2031e35a6_typeBuilder*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e60ae_buildEnumerable(_2031e35a6_typeBuilder*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e6323_step(_2031e35a6_typeBuilder*);
inline __jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool _2031e6587_build(_2031e35a6_typeBuilder*);
struct _2031e35a6_typeBuilder {
	jule::Ptr<_2031d2881_parser> _field_p;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _field_tokens;
	jule::I32* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _2012dd41c_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	inline bool operator==(_2012dd41c_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_2012dd41c_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _2012dec7b_pushErr(_2012de770_directiveEval*, jule::Ptr<_1ed694d8c_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _2012e0133_splitOperans(_2012de770_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Bool _2012e0441_evalDirectiveIdent(_2012de770_directiveEval*, jule::Str);
inline jule::Bool _2012e074e_evalDirectivePart(_2012de770_directiveEval*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Bool _2012e09b3_eval(_2012de770_directiveEval*);
struct _2012de770_directiveEval {
	jule::Slice<_2193a460d_Log> _field_logs;
	jule::Ptr<_200d472d9_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
inline jule::Ptr<_2031e7423_JuleImporter> static__2031e780d_New(_2012dd41c_CompileInfo);
inline jule::Slice<jule::Ptr<_20107b397_ImportInfo>> _2031e7a72_AllPackages(_2031e7423_JuleImporter*);
inline void _2031e7e7e_SetModPath(_2031e7423_JuleImporter*, jule::Str);
inline jule::Str _2031e81e3_GetModPath(_2031e7423_JuleImporter*);
inline jule::Str _2031e8501_ModById(_2031e7423_JuleImporter*, jule::I32);
inline jule::Ptr<_20107b397_ImportInfo> _2031e880e_GetImport(_2031e7423_JuleImporter*, jule::Str);
inline __jule_tuple_sx_200d46041_Ast__jule_tuple_s_2193a460d_Log _2031e8bb6_ImportPackage(_2031e7423_JuleImporter*, jule::Str, jule::Bool);
inline void _2031e8e3b_Imported(_2031e7423_JuleImporter*, jule::Ptr<_20107b397_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_2193a460d_Log _2031e9337_isPassBuildDirectives(_2031e7423_JuleImporter*, jule::Ptr<_200d46041_Ast>*);
struct _2031e7423_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_20107b397_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _2031ebe72_OrderedDefines {
	jule::Slice<jule::Ptr<_20100a25a_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_2010a4975_Var>> _field_Globals;
	


};
inline jule::Bool _206068a00_isCommonOrdered(jule::Slice<jule::Ptr<_20100a25a_Struct>>, jule::Ptr<_20100a25a_Struct>);
inline jule::Bool _20606d3ea_isCommonOrdered(jule::Slice<jule::Ptr<_2010a4975_Var>>, jule::Ptr<_2010a4975_Var>);
inline void _206065623_orderCommon(jule::Slice<jule::Ptr<_20100a25a_Struct>>*);
inline void _206065e5e_orderCommon(jule::Slice<jule::Ptr<_2010a4975_Var>>*);
inline void static__2031eca66_orderStructures(jule::Slice<jule::Ptr<_20100a25a_Struct>>*);
inline void static__2031ecc75_orderVars(jule::Slice<jule::Ptr<_2010a4975_Var>>*);
struct _2031ec1d6_defineOrderer {
	

	inline bool operator==(_2031ec1d6_defineOrderer _other) { return true; }

	inline bool operator!=(_2031ec1d6_defineOrderer _other) { return !this->operator==(_other); }


};
struct _2032e4a1a_liveTable {
	jule::Slice<jule::Ptr<_2010a4975_Var>> _field_vars;
	jule::Slice<jule::Ptr<_20102330b_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_20100d071_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_20103287b_Trait>> _field_traits;
	


};
inline void _20332ac3d_optimizeChild(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Ptr<_20105c92d_Scope>*);
inline void _20332aed5_optimizeBodyChildExceptional(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Ptr<_20105c92d_Scope>*);
inline void _20332b26b_optimizeBodyChild(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Ptr<_20105c92d_Scope>*);
inline void _20332b4e1_optimizeExprModel(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Any*);
inline void _20332b6bc_eliminateFollowed(_20332a7a9_scopeDeadCode*);
inline void _20332b942_pushGoto(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Ptr<_201060458_GotoSt>);
inline void _20332bbb7_pushLabel(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Ptr<_20106016c_Label>);
inline void _20332be3c_optimizeRangeIter(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Ptr<_20105e5cd_RangeIter>);
inline void _20332c1b2_optimizeWhileIter(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Ptr<_20105dbe8_WhileIter>);
inline void _20332c437_optimizeInfIter(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Ptr<_20105d775_InfIter>);
inline void _20332c6ac_optimizeConditional(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Ptr<_20105d489_Conditional>);
inline void _20332c932_optimizeMatch(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Ptr<_201061745_Match>);
inline void _20332cba7_optimizeAssign(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Ptr<_201060c83_Assign>);
inline void _20332ce2c_optimizeMultiAssign(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Ptr<_20106113a_MultiAssign>);
inline void _20332d1a2_optimizeStmt(jule::Ptr<_20332a7a9_scopeDeadCode>, jule::Any);
inline void _20332d37d_optimizeStmts(jule::Ptr<_20332a7a9_scopeDeadCode>);
struct _20332a7a9_scopeDeadCode {
	jule::Ptr<_20332a7a9_scopeDeadCode> _field_parent;
	jule::Ptr<_20105c92d_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I32 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_20106016c_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_201060458_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_20332a7a9_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_20332a7a9_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _20332e714_exprDeadCode static__20332ecec_new(jule::Ptr<_20332a7a9_scopeDeadCode>*);
inline void _203330072_binary(_20332e714_exprDeadCode*, jule::Ptr<_2010124d7_BinopExprModel>);
inline void _2033302e7_unary(_20332e714_exprDeadCode*, jule::Ptr<_20101288e_UnaryExprModel>);
inline void _20333056c_structureLit(_20332e714_exprDeadCode*, jule::Ptr<_201013142_StructLitExprModel>);
inline void _2033307e2_allocStructure(_20332e714_exprDeadCode*, jule::Ptr<_201013450_AllocStructLitExprModel>);
inline void _203330a67_casting(_20332e714_exprDeadCode*, jule::Ptr<_2010139a0_CastingExprModel>);
inline void _203330cdc_args(_20332e714_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _203331062_funcCall(_20332e714_exprDeadCode*, jule::Ptr<_201014352_FnCallExprModel>);
inline void _2033312d7_slice(_20332e714_exprDeadCode*, jule::Ptr<_201014709_SliceExprModel>);
inline void _20333155c_array(_20332e714_exprDeadCode*, jule::Ptr<_201017432_ArrayExprModel>);
inline void _2033317d2_indexing(_20332e714_exprDeadCode*, jule::Ptr<_201014b7c_IndexingExprModel>);
inline void _203331a57_anonFunc(_20332e714_exprDeadCode*, jule::Ptr<_201015034_AnonFnExprModel>);
inline void _203331ccc_mapExpr(_20332e714_exprDeadCode*, jule::Ptr<_20101585e_MapExprModel>);
inline void _203332052_slicing(_20332e714_exprDeadCode*, jule::Ptr<_201015d9d_SlicingExprModel>);
inline void _2033322c7_traitSub(_20332e714_exprDeadCode*, jule::Ptr<_2010163dc_TraitSubIdentExprModel>);
inline void _20333254c_structureSub(_20332e714_exprDeadCode*, jule::Ptr<_201016bc3_StructSubIdentExprModel>);
inline void _2033327c2_commonSub(_20332e714_exprDeadCode*, jule::Ptr<_201017c7e_CommonSubIdentExprModel>);
inline void _203332a47_tuple(_20332e714_exprDeadCode*, jule::Ptr<_20101807b_TupleExprModel>);
inline void _203332cbc_newCall(_20332e714_exprDeadCode*, jule::Ptr<_201019049_BuiltinNewCallExprModel>);
inline void _203333042_outCall(_20332e714_exprDeadCode*, jule::Ptr<_201018455_BuiltinOutCallExprModel>);
inline void _2033332b7_outlnCall(_20332e714_exprDeadCode*, jule::Ptr<_201018840_BuiltinOutlnCallExprModel>);
inline void _20333353c_panicCall(_20332e714_exprDeadCode*, jule::Ptr<_201019434_BuiltinPanicCallExprModel>);
inline void _2033337b2_assertCall(_20332e714_exprDeadCode*, jule::Ptr<_2010198da_BuiltinAssertCallExprModel>);
inline void _203333a37_errorCall(_20332e714_exprDeadCode*, jule::Ptr<_20101b7bb_BuiltinErrorCallExprModel>);
inline void _203333cac_makeCall(_20332e714_exprDeadCode*, jule::Ptr<_201019d91_BuiltinMakeCallExprModel>);
inline void _203334032_appendCall(_20332e714_exprDeadCode*, jule::Ptr<_20101a27b_BuiltinAppendCallExprModel>);
inline void _2033342a7_lenCall(_20332e714_exprDeadCode*, jule::Ptr<_20101a59a_BuiltinLenCallExprModel>);
inline void _20333452c_capCall(_20332e714_exprDeadCode*, jule::Ptr<_20101a8b9_BuiltinCapCallExprModel>);
inline void _2033347a2_cloneCall(_20332e714_exprDeadCode*, jule::Ptr<_201018b5e_BuiltinCloneCallExprModel>);
inline void _203334a27_deleteCall(_20332e714_exprDeadCode*, jule::Ptr<_20101b06d_BuiltinDeleteCallExprModel>);
inline void _203334c9c_sizeof(_20332e714_exprDeadCode*, jule::Ptr<_20101bab8_SizeofExprModel>);
inline void _203335022_alignof(_20332e714_exprDeadCode*, jule::Ptr<_20101bda4_AlignofExprModel>);
inline void _203335297_integratedToStr(_20332e714_exprDeadCode*, jule::Ptr<_20101c49d_IntegratedToStrExprModel>);
inline void _20333551c_free(_20332e714_exprDeadCode*, jule::Ptr<_20101cb52_FreeExprModel>);
inline void _203335792_backendEmit(_20332e714_exprDeadCode*, jule::Ptr<_20101c866_BackendEmitExprModel>);
inline void _203335a17_optimize(_20332e714_exprDeadCode*, jule::Any*);
struct _20332e714_exprDeadCode {
	jule::Ptr<_20332a7a9_scopeDeadCode> _field_s;
	

	inline bool operator==(_20332e714_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_20332e714_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _201205147_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1ee33c6d2_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_201205147_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_201205147_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _2012054cc_StrAppendExprModel {
	jule::Any _field_Str = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_2012054cc_StrAppendExprModel _other) {
		return 
			this->_field_Str == _other._field_Str &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2012054cc_StrAppendExprModel _other) { return !this->operator==(_other); }


};
struct _2012057b8_UnsafeBinopExprModel {
	jule::Ptr<_2010124d7_BinopExprModel> _field_Node;
	

	inline bool operator==(_2012057b8_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_2012057b8_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _201205b4d_UnsafeIndexingExprModel {
	jule::Ptr<_201014b7c_IndexingExprModel> _field_Node;
	

	inline bool operator==(_201205b4d_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_201205b4d_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _201205ed3_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_201014709_SliceExprModel> _field_Elems;
	

	inline bool operator==(_201205ed3_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_201205ed3_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _20120638a_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_20120638a_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_20120638a_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _2012068c9_MutSlicingExprModel {
	jule::Ptr<_1ed694d8c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_2012068c9_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_2012068c9_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _201206db3_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_201206db3_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_201206db3_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_201207e19_scopeOptimizer> static__201208436_new(jule::Ptr<_20105c92d_Scope>);
inline void _2012086ab_setCurrentStmt(_201207e19_scopeOptimizer*, jule::Any);
inline void _201208931_optimizeData(_201207e19_scopeOptimizer*, jule::Ptr<_2010edb23_Data>);
inline void _201208ba6_optimizeVar(_201207e19_scopeOptimizer*, jule::Ptr<_2010a4975_Var>);
inline void _201208e2b_optimizeConditional(_201207e19_scopeOptimizer*, jule::Ptr<_20105d489_Conditional>);
inline void _201209316_buildDefaultConstantTrueCase(_201207e19_scopeOptimizer*, jule::Ptr<_201062290_Case>, jule::I32*, jule::Ptr<_201061745_Match>*);
inline void _201209525_optimizeMatch(_201207e19_scopeOptimizer*, jule::Ptr<_201061745_Match>);
inline void _20120979a_optimizeRangeIter(_201207e19_scopeOptimizer*, jule::Ptr<_20105e5cd_RangeIter>);
inline void _201209a20_optimizeWhileIter(_201207e19_scopeOptimizer*, jule::Ptr<_20105dbe8_WhileIter>);
inline jule::Bool _201209d2d_substr(_201207e19_scopeOptimizer*, jule::Ptr<_201060c83_Assign>);
inline jule::Bool _20120a13b_strInsert(_201207e19_scopeOptimizer*, jule::Ptr<_201060c83_Assign>);
inline jule::Bool _20120a449_strAppend(_201207e19_scopeOptimizer*, jule::Ptr<_201060c83_Assign>);
inline jule::Bool _20120a757_strAssign(_201207e19_scopeOptimizer*, jule::Ptr<_201060c83_Assign>);
inline void _20120a9cc_optimizeAssign(_201207e19_scopeOptimizer*, jule::Ptr<_201060c83_Assign>);
inline void _20120ac52_optimizeMultiAssign(_201207e19_scopeOptimizer*, jule::Ptr<_20106113a_MultiAssign>);
inline void _20120aec7_optimizeRet(_201207e19_scopeOptimizer*, jule::Ptr<_201062bb9_RetSt>);
inline void _20120b24c_optimizeStmt(_201207e19_scopeOptimizer*, jule::Any);
inline void _20120b4c2_optimizeChild(_201207e19_scopeOptimizer*, jule::Ptr<_20105c92d_Scope>);
inline void _20120b69d_optimize(_201207e19_scopeOptimizer*);
struct _201207e19_scopeOptimizer {
	jule::I32 _field_i = 0;
	jule::Ptr<_20105c92d_Scope> _field_scope;
	

	inline bool operator==(_201207e19_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_201207e19_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__20120dd10_optimize(jule::Any*);
inline jule::Bool _20120e10c_strCond(_20120d815_exprOptimizer*, jule::Ptr<_2010124d7_BinopExprModel>);
inline void _20120e382_binary(_20120d815_exprOptimizer*, jule::Ptr<_2010124d7_BinopExprModel>);
inline void _20120e607_unary(_20120d815_exprOptimizer*, jule::Ptr<_20101288e_UnaryExprModel>);
inline void _20120e87c_structureLit(_20120d815_exprOptimizer*, jule::Ptr<_201013142_StructLitExprModel>);
inline void _20120eb02_allocStructure(_20120d815_exprOptimizer*, jule::Ptr<_201013450_AllocStructLitExprModel>);
inline void _20120ed77_casting(_20120d815_exprOptimizer*, jule::Ptr<_2010139a0_CastingExprModel>);
inline void _2012100ec_args(_20120d815_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _201210372_scope(_20120d815_exprOptimizer*, jule::Ptr<_20105c92d_Scope>*);
inline void _2012105e7_funcCall(_20120d815_exprOptimizer*, jule::Ptr<_201014352_FnCallExprModel>);
inline void _20121086c_slice(_20120d815_exprOptimizer*, jule::Ptr<_201014709_SliceExprModel>);
inline void _201210ae2_array(_20120d815_exprOptimizer*, jule::Ptr<_201017432_ArrayExprModel>);
inline void _201210d67_indexing(_20120d815_exprOptimizer*, jule::Ptr<_201014b7c_IndexingExprModel>);
inline void _2012110dc_anonFunc(_20120d815_exprOptimizer*, jule::Ptr<_201015034_AnonFnExprModel>);
inline void _201211362_mapExpr(_20120d815_exprOptimizer*, jule::Ptr<_20101585e_MapExprModel>);
inline void _2012115d7_slicing(_20120d815_exprOptimizer*, jule::Ptr<_201015d9d_SlicingExprModel>);
inline void _20121185c_traitSub(_20120d815_exprOptimizer*, jule::Ptr<_2010163dc_TraitSubIdentExprModel>);
inline void _201211ad2_structureSub(_20120d815_exprOptimizer*, jule::Ptr<_201016bc3_StructSubIdentExprModel>);
inline void _201211d57_commonSub(_20120d815_exprOptimizer*, jule::Ptr<_201017c7e_CommonSubIdentExprModel>);
inline void _2012120cc_tuple(_20120d815_exprOptimizer*, jule::Ptr<_20101807b_TupleExprModel>);
inline void _201212352_newCall(_20120d815_exprOptimizer*, jule::Ptr<_201019049_BuiltinNewCallExprModel>);
inline void _2012125c7_outCall(_20120d815_exprOptimizer*, jule::Ptr<_201018455_BuiltinOutCallExprModel>);
inline void _20121284c_outlnCall(_20120d815_exprOptimizer*, jule::Ptr<_201018840_BuiltinOutlnCallExprModel>);
inline void _201212ac2_panicCall(_20120d815_exprOptimizer*, jule::Ptr<_201019434_BuiltinPanicCallExprModel>);
inline void _201212d47_assertCall(_20120d815_exprOptimizer*, jule::Ptr<_2010198da_BuiltinAssertCallExprModel>);
inline void _2012130bc_errorCall(_20120d815_exprOptimizer*, jule::Ptr<_20101b7bb_BuiltinErrorCallExprModel>);
inline void _201213342_makeCall(_20120d815_exprOptimizer*, jule::Ptr<_201019d91_BuiltinMakeCallExprModel>);
inline void _2012135b7_appendCall(_20120d815_exprOptimizer*, jule::Ptr<_20101a27b_BuiltinAppendCallExprModel>);
inline void _20121383c_lenCall(_20120d815_exprOptimizer*, jule::Ptr<_20101a59a_BuiltinLenCallExprModel>);
inline void _201213ab2_capCall(_20120d815_exprOptimizer*, jule::Ptr<_20101a8b9_BuiltinCapCallExprModel>);
inline void _201213d37_cloneCall(_20120d815_exprOptimizer*, jule::Ptr<_201018b5e_BuiltinCloneCallExprModel>);
inline void _2012140ac_deleteCall(_20120d815_exprOptimizer*, jule::Ptr<_20101b06d_BuiltinDeleteCallExprModel>);
inline void _201214332_sizeof(_20120d815_exprOptimizer*, jule::Ptr<_20101bab8_SizeofExprModel>);
inline void _2012145a7_alignof(_20120d815_exprOptimizer*, jule::Ptr<_20101bda4_AlignofExprModel>);
inline void _20121482c_integratedToStr(_20120d815_exprOptimizer*, jule::Ptr<_20101c49d_IntegratedToStrExprModel>);
inline void _201214aa2_free(_20120d815_exprOptimizer*, jule::Ptr<_20101cb52_FreeExprModel>);
inline void _201214d27_backendEmit(_20120d815_exprOptimizer*, jule::Ptr<_20101c866_BackendEmitExprModel>);
inline void _201215003_do(_20120d815_exprOptimizer*);
struct _20120d815_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_20120d815_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_20120d815_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203336485_Optimizer> static__2033368e7_New(jule::Ptr<_2031e99ca_IR>*);
inline void _203336b6c_optimizeGlobal(_203336485_Optimizer*, jule::Ptr<_2010a4975_Var>*);
inline void _203336de2_optimizeFunction(_203336485_Optimizer*, jule::Ptr<_20102065a_Fn>*);
inline void _203337167_optimizeStruct(_203336485_Optimizer*, jule::Ptr<_20100a25a_Struct>*);
inline void _2033373dc_optimizeGlobals(_203336485_Optimizer*, jule::Ptr<_20107ded2_Package>*);
inline void _203337662_optimizeFunctions(_203336485_Optimizer*, jule::Ptr<_20107ded2_Package>*);
inline void _2033378d7_optimizeStructs(_203336485_Optimizer*, jule::Ptr<_20107ded2_Package>*);
inline void _203337b5c_optimizePackage(_203336485_Optimizer*, jule::Ptr<_20107ded2_Package>*);
inline void _203337d38_Optimize(_203336485_Optimizer*);
struct _203336485_Optimizer {
	jule::Ptr<_2031e99ca_IR> _field_ir;
	

	inline bool operator==(_203336485_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_203336485_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__20333872e_Reset(void);
inline void static__2033578b3_Print(jule::Str, jule::Str);
struct _20335894c_AnsiEscape {
	

	inline bool operator==(_20335894c_AnsiEscape _other) { return true; }

	inline bool operator!=(_20335894c_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__20335a223_LogFlat(_2193a460d_Log*);
inline void static__20335a432_LogError(_2193a460d_Log*);
inline void static__20335a641_Log(_2193a460d_Log*);
inline void static__20335a850_PrintLogs(jule::Slice<_2193a460d_Log>*);
struct _203359ed1_Logger {
	

	inline bool operator==(_203359ed1_Logger _other) { return true; }

	inline bool operator!=(_203359ed1_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _203b03229_Unix(_203b02db6_AbsTime*);
struct _203b02db6_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_203b02db6_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_203b02db6_AbsTime _other) { return !this->operator==(_other); }


};
inline _203b03559_Time static__203b03900_Unix(jule::U64);
inline _203b03559_Time static__203b03aed_Now(void);
inline jule::U64 _203b03ec7_Unix(_203b03559_Time*);
inline jule::U64 _203b0423b_Day(_203b03559_Time*);
inline jule::U64 _203b044a0_Month(_203b03559_Time*);
inline jule::U64 _203b04714_Year(_203b03559_Time*);
inline jule::U64 _203b04978_Second(_203b03559_Time*);
inline jule::U64 _203b04bdc_Minute(_203b03559_Time*);
inline jule::U64 _203b04e51_Hour(_203b03559_Time*);
inline _203b02db6_AbsTime _203b051b5_Abs(_203b03559_Time*);
struct _203b03559_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_203b03559_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_203b03559_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203a4cb46_scopeCoder> static__203a4d240_new(jule::Ptr<_203b0c5da_ObjectCoder>*);
inline void _2062d130b_iterHead(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20105e5cd_RangeIter>*, jule::Bool*, jule::Str*);
inline void _203a4d87d_rangeIndexIter(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20105e5cd_RangeIter>*);
inline void _203a4db03_rangeHashmapIter(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20105e5cd_RangeIter>*);
inline void _203a4dd78_ifCase(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20105cd29_If>);
inline void _203a4e0ed_conditional(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20105d489_Conditional>);
inline void _203a4e373_infIter(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20105d775_InfIter>);
inline void _203a4e5e8_whileIter(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20105dbe8_WhileIter>);
inline void _203a4e86d_rangeIter(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20105e5cd_RangeIter>);
inline void _203a4eae3_cont(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20105e9c9_ContSt>);
inline void _203a4ed68_label(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20106016c_Label>);
inline void _203a500dd_gotoSt(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_201060458_GotoSt>);
inline void _203a50363_postfix(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_201060810_Postfix>);
inline void _203a505d8_assign(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_201060c83_Assign>);
inline void _203a5085d_mapLookupAssign(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20106113a_MultiAssign>*);
inline void _203a50ad3_multiAssignTup(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20106113a_MultiAssign>*);
inline void _203a50d58_multiAssignFn(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20106113a_MultiAssign>*);
inline void _203a510cd_multiAssign(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20106113a_MultiAssign>);
inline jule::Fn<void(void)> _203a513db_matchExpr(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_201061745_Match>);
inline void _203a5170a_case(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_201061745_Match>, jule::Ptr<_201062290_Case>);
inline void _203a51980_matchSt(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_201061745_Match>);
inline void _203a51c05_fallSt(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_201062867_FallSt>);
inline void _203a51e7a_breakSt(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20105ed81_BreakSt>);
inline void _203a52200_setResult(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_201062bb9_RetSt>);
inline void _203a52475_retSt(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_201062bb9_RetSt>);
inline void _203a526ea_var(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_2010a4975_Var>);
inline void _203a52970_strAppend(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_2012054cc_StrAppendExprModel>);
inline void _203a52be5_st(jule::Ptr<_203a4cb46_scopeCoder>, jule::Any);
inline void _203a52e6a_scopeStmts(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20105c92d_Scope>*);
inline void _203a531e0_scope(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20105c92d_Scope>);
inline void _203a53465_funcScope(jule::Ptr<_203a4cb46_scopeCoder>, jule::Ptr<_20102330b_FnIns>);
struct _203a4cb46_scopeCoder {
	jule::Ptr<_203b0c5da_ObjectCoder> _field_oc;
	

	inline bool operator==(_203a4cb46_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_203a4cb46_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203a5608e_exprCoder> static__203a56446_new(jule::Ptr<_203b0c5da_ObjectCoder>*);
inline void _203a566bb_string(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_1ee33c6d2_Const>*);
inline void _203a56941_boolean(jule::Ptr<_203a5608e_exprCoder>, jule::Bool);
inline void _203a56b1c_nilLit(jule::Ptr<_203a5608e_exprCoder>);
inline jule::Bool _203a56e2a_ftoaSpecialCases(jule::Ptr<_203a5608e_exprCoder>, jule::F64*);
inline void _203a571a0_float32(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_1ee33c6d2_Const>*);
inline void _203a57425_float64(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_1ee33c6d2_Const>*);
inline void _203a5769a_constant(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_1ee33c6d2_Const>);
inline void _203a57a63_divByZeroBinary(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_1ed694d8c_Token>*, jule::Ptr<_201012020_OperandExprModel>*, jule::Ptr<_201012020_OperandExprModel>*);
inline void _203a57cd8_unsafeBinary(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_2010124d7_BinopExprModel>);
inline void _203a5805d_binary(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_2010124d7_BinopExprModel>);
inline void _203a582d3_var(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_2010a4975_Var>);
inline void _203a58558_structureIns(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20100d071_StructIns>);
inline void _203a587cd_unary(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101288e_UnaryExprModel>);
inline void _203a58a53_structureLit(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201013142_StructLitExprModel>);
inline void _203a58cc8_allocStructure(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201013450_AllocStructLitExprModel>);
inline void _203a5904d_possibleRefExpr(jule::Ptr<_203a5608e_exprCoder>, jule::Any);
inline void _203a59416_castTraitFromTrait(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_2010139a0_CastingExprModel>*, jule::Ptr<_20103287b_Trait>, jule::Ptr<_20103287b_Trait>);
inline void _203a5968b_casting(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_2010139a0_CastingExprModel>);
inline void _203a59911_models(jule::Ptr<_203a5608e_exprCoder>, jule::Slice<jule::Any>);
inline void _203a59b86_args(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201014352_FnCallExprModel>*);
inline void _203a59e0b_modelForCall(jule::Ptr<_203a5608e_exprCoder>, jule::Any);
inline void _203a5a181_pushCallInf(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201014352_FnCallExprModel>*);
inline jule::Bool _203a5a48e_isWrapped(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201014352_FnCallExprModel>*);
inline void _203a5a714_pureFuncCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201014352_FnCallExprModel>*);
inline void _203a5a989_coFuncCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201014352_FnCallExprModel>*);
inline void _203a5aca8_writeUseExpr(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20102330b_FnIns>*, jule::Ptr<_2010edb23_Data>);
inline void _203a5b02d_funcCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201014352_FnCallExprModel>);
inline void _203a5b2a3_slice(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201014709_SliceExprModel>);
inline void _203a5b528_indexing(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201014b7c_IndexingExprModel>);
inline void _203a5b79d_unsafeIndexing(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201205b4d_UnsafeIndexingExprModel>);
inline void _203a5ba23_anonFunc(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201015034_AnonFnExprModel>);
inline void _203a5bc98_mapExpr(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101585e_MapExprModel>);
inline void _203a5c01d_slicing(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201015d9d_SlicingExprModel>);
inline void _203a5c293_traitSub(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_2010163dc_TraitSubIdentExprModel>);
inline void _203a5c518_structureSub(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201016bc3_StructSubIdentExprModel>);
inline void _203a5c78d_commonIdent(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101771d_CommonIdentExprModel>);
inline void _203a5ca13_commonSub(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201017c7e_CommonSubIdentExprModel>);
inline void _203a5cc88_array(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201017432_ArrayExprModel>);
inline void _203a5d00d_funcInsCommon(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20102330b_FnIns>);
inline void _203a5d283_funcIns(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20102330b_FnIns>);
inline void _203a5d508_tuple(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101807b_TupleExprModel>);
inline void _203a5d77d_newCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201019049_BuiltinNewCallExprModel>);
inline void _203a5da03_outCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201018455_BuiltinOutCallExprModel>);
inline void _203a5dc78_outlnCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201018840_BuiltinOutlnCallExprModel>);
inline void _203a5deed_panicCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201019434_BuiltinPanicCallExprModel>);
inline void _203a5e273_assertCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_2010198da_BuiltinAssertCallExprModel>);
inline void _203a5e4e8_errorCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101b7bb_BuiltinErrorCallExprModel>);
inline void _203a5e76d_copyCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101b3d1_BuiltinCopyCallExprModel>);
inline void _203a5e9e3_lenCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101a59a_BuiltinLenCallExprModel>);
inline void _203a5ec68_capCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101a8b9_BuiltinCapCallExprModel>);
inline void _203a5eedd_deleteCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101b06d_BuiltinDeleteCallExprModel>);
inline void _203a60263_makeCallSlice(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201019d91_BuiltinMakeCallExprModel>*);
inline void _203a604d8_makeCallStr(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201019d91_BuiltinMakeCallExprModel>*);
inline void _203a6075d_makeCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201019d91_BuiltinMakeCallExprModel>);
inline void _203a609d3_pushToSlice(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201205ed3_PushToSliceExprModel>);
inline void _203a60c58_appendToSlice(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20120638a_AppendToSliceExprModel>);
inline void _203a60ecd_appendCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101a27b_BuiltinAppendCallExprModel>);
inline void _203a61253_cloneCall(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201018b5e_BuiltinCloneCallExprModel>);
inline void _203a614c8_sizeof(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101bab8_SizeofExprModel>);
inline void _203a6174d_alignof(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101bda4_AlignofExprModel>);
inline jule::Str _203a61a5b_runeLit(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101c190_RuneExprModel>);
inline void _203a61cd1_structureStatic(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201017069_StructStaticIdentExprModel>);
inline void _203a62056_integratedToStr(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101c49d_IntegratedToStrExprModel>);
inline void _203a622cb_backendEmit(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101c866_BackendEmitExprModel>);
inline void _203a62551_free(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_20101cb52_FreeExprModel>);
inline void _203a627c6_mutSlicing(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_2012068c9_MutSlicingExprModel>);
inline void _203a62a4b_strInsertBegin(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201206db3_StrInsertBeginExprModel>);
inline void _203a62cc1_strComp(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_201205147_StrCompExprModel>);
inline void _203a63046_model(jule::Ptr<_203a5608e_exprCoder>, jule::Any);
inline void _203a632bb_initExpr(jule::Ptr<_203a5608e_exprCoder>, jule::Ptr<_2011310ea_TypeKind>);
struct _203a5608e_exprCoder {
	jule::Ptr<_203b0c5da_ObjectCoder> _field_oc;
	

	inline bool operator==(_203a5608e_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_203a5608e_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203a65aa4_deriveCoder> static__203a65e4a_new(jule::Ptr<_203b0c5da_ObjectCoder>);
inline jule::Str _203a66258_cloneFuncDecl(_203a65aa4_deriveCoder*, jule::Ptr<_20100a25a_Struct>*);
inline jule::Str _203a66566_cloneFuncDef(_203a65aa4_deriveCoder*, jule::Ptr<_20100a25a_Struct>*);
struct _203a65aa4_deriveCoder {
	jule::Ptr<_203b0c5da_ObjectCoder> _field_oc;
	

	inline bool operator==(_203a65aa4_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_203a65aa4_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203a6748a_TestCoder> static__203a678b9_New(jule::Ptr<_203b0c5da_ObjectCoder>*);
inline jule::Ptr<_20107b397_ImportInfo> _203a67b2d_findTestingPackage(jule::Ptr<_203a6748a_TestCoder>);
inline void _203a67da3_appendTest(jule::Ptr<_203a6748a_TestCoder>, jule::Ptr<_20102330b_FnIns>);
inline void _203a68128_appendPackageTests(jule::Ptr<_203a6748a_TestCoder>, jule::Ptr<_20107ded2_Package>*);
inline jule::Bool _203a6838c_readyTestingPackage(jule::Ptr<_203a6748a_TestCoder>);
inline void _203a68568_callTmReset(jule::Ptr<_203a6748a_TestCoder>);
inline void _203a68744_callTmFailed(jule::Ptr<_203a6748a_TestCoder>);
inline void _203a68920_callTmSkipped(jule::Ptr<_203a6748a_TestCoder>);
inline void _203a68aeb_Serialize(jule::Ptr<_203a6748a_TestCoder>);
struct _203a6748a_TestCoder {
	jule::Ptr<_20100d071_StructIns> _field_t;
	jule::Ptr<_20102065a_Fn> _field_tmReset;
	jule::Ptr<_20102065a_Fn> _field_tmFailed;
	jule::Ptr<_20102065a_Fn> _field_tmSkipped;
	jule::Ptr<_203b0c5da_ObjectCoder> _field_oc;
	

	inline bool operator==(_203a6748a_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_203a6748a_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__203a6a05e_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__203a6a449_toLocal(jule::I32, jule::I32, jule::Str*);
inline jule::Str static__203a6a6e1_func(jule::Ptr<_20102065a_Fn>*);
inline jule::Str static__203a6a988_funcIns(jule::Ptr<_20102330b_FnIns>*);
inline jule::Str static__203a6ac30_traitDecl(jule::Ptr<_20103287b_Trait>);
inline jule::Str static__203a6aec7_param(jule::Ptr<_20101dd1d_Param>*);
inline jule::Str static__203a6b26e_structure(jule::Ptr<_20100a25a_Struct>*);
inline jule::Str static__203a6b516_structureIns(jule::Ptr<_20100d071_StructIns>*);
inline jule::Str static__203a6b7ad_field(jule::Ptr<_201007686_Field>*);
inline jule::Str static__203a6ba55_var(jule::Ptr<_2010a4975_Var>);
inline jule::Str static__203a6bcec_iterBegin(jule::Uintptr);
inline jule::Str static__203a6c094_iterEnd(jule::Uintptr);
inline jule::Str static__203a6c33b_iterNext(jule::Uintptr);
inline jule::Str static__203a6c5d3_label(jule::Str*);
inline jule::Str static__203a6c87a_matchEnd(jule::Uintptr);
inline jule::Str static__203a6cb22_caseBegin(jule::Uintptr);
struct _203a699cb_identCoder {
	

	inline bool operator==(_203a699cb_identCoder _other) { return true; }

	inline bool operator!=(_203a699cb_identCoder _other) { return !this->operator==(_other); }


};
struct _203b0ac48_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_203b0ac48_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_203b0ac48_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _203b0b210_traitHash {
	jule::Ptr<_20103287b_Trait> _field_t;
	jule::Ptr<_20100d071_StructIns> _field_s;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_203b0b210_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_203b0b210_traitHash _other) { return !this->operator==(_other); }


};
struct _203b0b5b7_traitCast {
	jule::Ptr<_20103287b_Trait> _field_t1;
	jule::Ptr<_20103287b_Trait> _field_t2;
	

	inline bool operator==(_203b0b5b7_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_203b0b5b7_traitCast _other) { return !this->operator==(_other); }


};
inline jule::Str _203b1a906_Str(_203b1a692_customType*);
inline jule::Bool _203b1ac14_Equal(jule::Ptr<_203b1a692_customType>, jule::Ptr<_2011310ea_TypeKind>);
struct _203b1a692_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_203b1a692_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_203b1a692_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203b1b110_typeCoder> static__203b1b64e_new(jule::Ptr<_203b0c5da_ObjectCoder>*);
inline jule::Str _203b1b95c_toType(_203b1b110_typeCoder*, jule::Str);
inline jule::Str _203b1bc6a_prim(_203b1b110_typeCoder*, jule::Ptr<_201138850_Prim>);
inline jule::Str _203b1c078_tuple(_203b1b110_typeCoder*, jule::Ptr<_20113d613_Tuple>);
inline jule::Str _203b1c386_asSptr(_203b1b110_typeCoder*, jule::Str);
inline jule::Str _203b1c694_asPtr(_203b1b110_typeCoder*, jule::Str);
inline jule::Str _203b1c9a2_sptr(_203b1b110_typeCoder*, jule::Ptr<_20113c0a1_Sptr>);
inline jule::Str _203b1ccb0_ptr(_203b1b110_typeCoder*, jule::Ptr<_201140615_Ptr>);
inline jule::Str _203b1d0bd_enumDecl(_203b1b110_typeCoder*, jule::Ptr<_20103510e_Enum>);
inline jule::Str _203b1d3cb_typeEnumDecl(_203b1b110_typeCoder*, jule::Ptr<_201036709_TypeEnum>);
inline jule::Str _203b1d6d9_asSlice(_203b1b110_typeCoder*, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Str _203b1d9e7_slice(_203b1b110_typeCoder*, jule::Ptr<_20113ca0d_Slc>);
inline jule::Str _203b1dd05_mapType(_203b1b110_typeCoder*, jule::Ptr<_20113e0b4_Map>);
inline jule::Str _203b1e113_traitIdent(_203b1b110_typeCoder*, jule::Str);
inline jule::Str _203b1e421_traitDecl(_203b1b110_typeCoder*, jule::Ptr<_20103287b_Trait>);
inline jule::Str _203b1e72e_structure(_203b1b110_typeCoder*, jule::Ptr<_20100a25a_Struct>);
inline jule::Str _203b1ea3c_structureIns(_203b1b110_typeCoder*, jule::Ptr<_20100d071_StructIns>);
inline jule::Str _203b1ed4a_array(_203b1b110_typeCoder*, jule::Ptr<_20113eba8_Arr>);
inline jule::Str _203b20466_paramIns(_203b1b110_typeCoder*, jule::Ptr<_20102243c_ParamIns>*);
inline void _203b20a93_funcInsResult(_203b1b110_typeCoder*, jule::Str*, jule::Ptr<_20102330b_FnIns>*);
inline jule::Str _203b20da1_anonFunc(_203b1b110_typeCoder*, jule::Ptr<_20102330b_FnIns>);
inline jule::Str _203b211ae_func(_203b1b110_typeCoder*, jule::Ptr<_20102330b_FnIns>);
inline jule::Str _203b214bc_kind(_203b1b110_typeCoder*, jule::Ptr<_2011310ea_TypeKind>);
struct _203b1b110_typeCoder {
	jule::Ptr<_203b0c5da_ObjectCoder> _field_oc;
	jule::Ptr<_203b23bc8_resultCoder> _field_rc;
	

	inline bool operator==(_203b1b110_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_203b1b110_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203b23bc8_resultCoder> static__203b24190_new(jule::Ptr<_203b1b110_typeCoder>*);
inline void _203b244ae_ptr(_203b23bc8_resultCoder*, jule::Str*, jule::Ptr<_201140615_Ptr>);
inline void _203b247cd_sptr(_203b23bc8_resultCoder*, jule::Str*, jule::Ptr<_20113c0a1_Sptr>);
inline void _203b24aec_mapType(_203b23bc8_resultCoder*, jule::Str*, jule::Ptr<_20113e0b4_Map>);
inline void _203b24e1b_slice(_203b23bc8_resultCoder*, jule::Str*, jule::Ptr<_20113ca0d_Slc>);
inline void _203b2523a_arr(_203b23bc8_resultCoder*, jule::Str*, jule::Ptr<_20113eba8_Arr>);
inline void _203b25559_func(_203b23bc8_resultCoder*, jule::Str*, jule::Ptr<_20102330b_FnIns>);
inline void _203b25878_tup(_203b23bc8_resultCoder*, jule::Str*, jule::Ptr<_20113d613_Tuple>);
inline void _203b25b97_codeMut(_203b23bc8_resultCoder*, jule::Str*, jule::Ptr<_2011310ea_TypeKind>*);
inline void _203b25eb6_codeMut1(_203b23bc8_resultCoder*, jule::Str*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Str _203b26291_code(_203b23bc8_resultCoder*, jule::Ptr<_2011310ea_TypeKind>*);
struct _203b23bc8_resultCoder {
	jule::Ptr<_203b1b110_typeCoder> _field_tc;
	

	inline bool operator==(_203b23bc8_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_203b23bc8_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _206641ddb_Name(_206641b00_Flag*);
inline jule::Str _20664201d_What(_206641b00_Flag*);
inline void _206642150_Reset(_206641b00_Flag*);
inline jule::I32 _206642282_Short(_206641b00_Flag*);
struct _206641b00_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_206641b00_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_206641b00_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _20664510e_Name(_206645582_Flag*);
inline jule::Str _20664586d_What(_206645582_Flag*);
inline void _2066459a0_Reset(_206645582_Flag*);
inline jule::I32 _206645ad2_Short(_206645582_Flag*);
struct _206645582_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_206645582_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_206645582_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _2066487b6_Name(_206648c39_Flag*);
inline jule::Str _206649025_What(_206648c39_Flag*);
inline void _206649157_Reset(_206648c39_Flag*);
inline jule::I32 _206649289_Short(_206648c39_Flag*);
struct _206648c39_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_206648c39_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_206648c39_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _20664beb2_Name(_20664c435_Flag*);
inline jule::Str _20664c721_What(_20664c435_Flag*);
inline void _20664c853_Reset(_20664c435_Flag*);
inline jule::I32 _20664c985_Short(_20664c435_Flag*);
struct _20664c435_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_20664c435_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_20664c435_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _206650669_Name(_206650adc_Flag*);
inline jule::Str _206650dc8_What(_206650adc_Flag*);
inline void _20665100a_Reset(_206650adc_Flag*);
inline jule::I32 _20665113c_Short(_206650adc_Flag*);
struct _206650adc_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_206650adc_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_206650adc_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_203b84e37_FlagSet> static__203b85223_New(void);
inline jule::Trait<_203b834c9_CommonFlag> _203b85663_FindFlag(_203b84e37_FlagSet*, jule::Str);
inline jule::Trait<_203b834c9_CommonFlag> _203b85971_FindFlagShort(_203b84e37_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_203b834c9_CommonFlag>> _203b85bd5_Flags(_203b84e37_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _203b85ee3_Parse(_203b84e37_FlagSet*, jule::Slice<jule::Str>);
inline void _203b861be_Reset(_203b84e37_FlagSet*);
inline jule::Ptr<_206650adc_Flag> _2066b5e71_addFlagCommon(_203b84e37_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_20664c435_Flag> _2066bdcae_addFlagCommon(_203b84e37_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _2066b3da3_AddVar(_203b84e37_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _2066bbc57_AddVar(_203b84e37_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _203b84e37_FlagSet {
	jule::Slice<jule::Trait<_203b834c9_CommonFlag>> _field_flags;
	


};
inline __jule_tuple_i64__jule_tuple_bool _206663407_parseInteger(_203b87643_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>);
inline __jule_tuple_u64__jule_tuple_bool _20666a95e_parseInteger(_203b87643_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>);
inline jule::Str _203b87e07_getData(_203b87643_argParser*);
inline jule::VoidExceptional _203b88149_processFlag(_203b87643_argParser*, jule::Trait<_203b834c9_CommonFlag>*);
inline jule::VoidExceptional _203b883be_singleDash(_203b87643_argParser*, jule::Str*);
inline jule::VoidExceptional _203b88644_doubleDash(_203b87643_argParser*, jule::Str*);
inline jule::VoidExceptional _203b88820_tryArg(_203b87643_argParser*);
inline jule::VoidExceptional _203b889eb_parse(_203b87643_argParser*);
struct _203b87643_argParser {
	_203b84e37_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i = 0;
	


};
inline jule::Ptr<_203b0c5da_ObjectCoder> static__203b0c9b4_New(jule::Ptr<_2031e99ca_IR>*, _203b0ac48_SerializationInfo);
inline void _203b0cc39_write(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Str);
inline void _203b0ceae_writeR(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Str*);
inline void _203b0d18a_addIndent(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b0d366_doneIndent(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b0d542_indent(jule::Ptr<_203b0c5da_ObjectCoder>);
inline jule::I32 _203b0d850_findAnyType(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::I32 _203b0db5d_pushAnyType(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_2011310ea_TypeKind>);
inline void _203b0ddd3_pushResultIns(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20102330b_FnIns>*);
inline void _203b0e158_pushResult(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20102065a_Fn>*);
inline jule::I32 _203b0e510_findTypeOffsetS(_203b0c5da_ObjectCoder*, jule::Ptr<_20103287b_Trait>, jule::Ptr<_20100d071_StructIns>);
inline jule::I32 _203b0e8b7_findTypeOffset(_203b0c5da_ObjectCoder*, jule::Ptr<_20103287b_Trait>, jule::Ptr<_2011310ea_TypeKind>);
inline void _203b0ebd6_pushAndWriteMaskMapper(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20103287b_Trait>, jule::Ptr<_20103287b_Trait>);
inline void _203b0ee5b_locInfo(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_1ed694d8c_Token>*);
inline void _203b10137_head(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b10313_links(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b10588_prepareStructure(_203b0c5da_ObjectCoder*, jule::Ptr<_20100a25a_Struct>*);
inline void _203b10764_prepareStructures(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b109d9_iterPackages(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Fn<void(jule::Ptr<_20107ded2_Package>*)>);
inline void _203b10bb5_buildTraitMap(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b10d91_traitDecls(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b11116_structurePlainDecl(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20100a25a_Struct>*);
inline void _203b112e2_structurePlainDecls(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b11567_fieldDecl(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20100c57b_FieldIns>*);
inline void _203b117dc_structureDestructor(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20100d071_StructIns>*);
inline void _203b11a84_structureDeriveDefsDecls(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20100d071_StructIns>*);
inline void _203b11db4_structureOperatorEq(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Str*, jule::Ptr<_20100d071_StructIns>*);
inline void _203b121d3_structureOperatorNotEq(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Str*, jule::Ptr<_20100d071_StructIns>*);
inline void _203b1259b_structureOperator(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Str*, jule::Ptr<_20102330b_FnIns>*, jule::Str);
inline void _203b12821_structureOperators(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20100d071_StructIns>*);
inline void _203b12a96_structureInsDecl(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20100d071_StructIns>*);
inline void _203b12d1b_structureDecl(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20100a25a_Struct>*);
inline void _203b12ee7_structureDecls(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b1326c_paramsDecls(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Slice<jule::Ptr<_20102243c_ParamIns>>*);
inline void _203b1358b_funcHead(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20102330b_FnIns>*, jule::Bool);
inline void _203b138aa_funcDeclIns(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20102330b_FnIns>*, jule::Bool);
inline void _203b13bc9_funcDecl(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20102065a_Fn>*, jule::Bool);
inline void _203b14092_funcDeclTrait(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20103287b_Trait>*, jule::Ptr<_20102065a_Fn>*, jule::Bool);
inline void _203b1426d_funcDecls(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b1458c_traitDataTypeMethods(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20103287b_Trait>*, jule::Ptr<_20103287b_Trait>*);
inline void _203b14768_traitDataTypes(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b149dd_paramIns(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20102243c_ParamIns>*);
inline void _203b14c63_paramsIns(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Slice<jule::Ptr<_20102243c_ParamIns>>*);
inline void _203b15082_varInitExpr(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_2010a4975_Var>*, jule::Fn<void(void)>);
inline void _203b15307_var(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_2010a4975_Var>);
inline void _203b1557c_funcIns(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20102330b_FnIns>*);
inline void _203b15802_func(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20102065a_Fn>*);
inline void _203b15b21_funcTrait(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_203b0b210_traitHash>*, jule::Ptr<_20102065a_Fn>*);
inline void _203b15e40_traitWrapper(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20102065a_Fn>*, jule::Ptr<_203b0b210_traitHash>*);
inline void _203b1611b_traitWrappers(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b1643a_traitDataMethods(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20103287b_Trait>*, jule::Ptr<_203b0b210_traitHash>*);
inline void _203b16759_traitData(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_203b0b210_traitHash>*, jule::Ptr<_20103287b_Trait>*);
inline void _203b16935_traitDatas(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b16b11_globals(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b16cdc_decls(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b17062_structureMethods(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20100d071_StructIns>*);
inline void _203b172d7_structureDeriveDefs(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20100d071_StructIns>*);
inline void _203b1755c_structureOstream(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20100d071_StructIns>*);
inline void _203b177d2_structureIns(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20100d071_StructIns>*);
inline void _203b17a57_structure(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20100a25a_Struct>*);
inline void _203b17c33_structures(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b17e0e_funcs(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b18184_pushInit(jule::Ptr<_203b0c5da_ObjectCoder>, jule::Ptr<_20107ded2_Package>*);
inline void _203b18360_initCaller(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b1853b_end(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b18717_serializeHead(jule::Ptr<_203b0c5da_ObjectCoder>);
inline void _203b188e3_Serialize(jule::Ptr<_203b0c5da_ObjectCoder>);
struct _203b0c5da_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_2031e99ca_IR> _field_ir;
	_203b0ac48_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_203b0b210_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_2011310ea_TypeKind>> _field_anyTypeMap;
	jule::Slice<_203b0b5b7_traitCast> _field_traitCastMap;
	jule::Ptr<_203a5608e_exprCoder> _field_ec;
	jule::Ptr<_203a4cb46_scopeCoder> _field_sc;
	jule::Ptr<_203b1b110_typeCoder> _field_tc;
	jule::Ptr<_203a65aa4_deriveCoder> _field_dc;
	jule::I32 _field_headPos = 0;
	jule::I32 _field_declPos = 0;
	


};
inline jule::Ptr<_2032e4dd3_ObjectDeadCode> static__2032e5367_new(jule::Ptr<_2031e99ca_IR>*);
inline jule::Bool _20609471d_isLive(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_20103287b_Trait>*);
inline jule::Bool _20609937c_isLive(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_20102330b_FnIns>*);
inline jule::Bool _2060a3771_isLive(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_20100d071_StructIns>*);
inline jule::Bool _2060abec7_isLive(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_2010a4975_Var>*);
inline void _206094a70_pushLive(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_20103287b_Trait>);
inline void _206099d94_pushLive(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_20102330b_FnIns>);
inline void _2060a0dab_pushLive(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_20100d071_StructIns>);
inline void _2060ac329_pushLive(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_2010a4975_Var>);
inline void _20332750e_setReferencesAsLive(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_201026265_ReferenceStack>*);
inline void _203327784_inits(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_20107ded2_Package>*);
inline void _203327a09_collectLivePackage(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_20107ded2_Package>*);
inline void _203327bd5_collectLive(jule::Ptr<_2032e4dd3_ObjectDeadCode>);
inline void _203327e5a_removeDeadGlobals(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Slice<jule::Ptr<_2010a4975_Var>>*);
inline void _2033281d0_removeDeadFns(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Slice<jule::Ptr<_20102065a_Fn>>*);
inline void _203328455_removeDeadStructs(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Slice<jule::Ptr<_20100a25a_Struct>>*);
inline void _2033286ca_removeDeadTraits(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Slice<jule::Ptr<_20103287b_Trait>>*);
inline void _203328950_removeDeadsFile(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_2010e9118_SymbolTable>*);
inline void _203328bc5_removeDeadsPackage(jule::Ptr<_2032e4dd3_ObjectDeadCode>, jule::Ptr<_20107ded2_Package>*);
inline void _203328da1_removeDeads(jule::Ptr<_2032e4dd3_ObjectDeadCode>);
inline void _20332907c_elimanate(jule::Ptr<_2032e4dd3_ObjectDeadCode>);
struct _2032e4dd3_ObjectDeadCode {
	_2032e4a1a_liveTable _field_live;
	jule::Ptr<_2031e99ca_IR> _field_ir;
	


};
inline __jule_tuple_x_2031e99ca_IR__jule_tuple_s_2193a460d_Log static__2031e9e1a_Build(jule::Str, jule::I32);
inline void _2031ea3b0_appendStructs(_2031e99ca_IR*, jule::Ptr<_20107ded2_Package>*, jule::Slice<jule::Ptr<_20100a25a_Struct>>*);
inline jule::Slice<jule::Ptr<_20100a25a_Struct>> _2031ea624_GetAllStructures(_2031e99ca_IR*);
inline void _2031ea943_appendGlobals(_2031e99ca_IR*, jule::Ptr<_20107ded2_Package>*, jule::Slice<jule::Ptr<_2010a4975_Var>>*);
inline jule::Slice<jule::Ptr<_2010a4975_Var>> _2031eaba7_GetAllGlobals(_2031e99ca_IR*);
inline void _2031ead83_Order(_2031e99ca_IR*);
struct _2031e99ca_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_20107ded2_Package> _field_Main;
	jule::Slice<jule::Ptr<_20107b397_ImportInfo>> _field_Used;
	_2031ebe72_OrderedDefines _field_Ordered;
	


};
inline jule::Str _20100d3d4_Str(_20100d071_StructIns*);
inline jule::Bool _20100d6e2_Equal(jule::Ptr<_20100d071_StructIns>, jule::Ptr<_2011310ea_TypeKind>);
inline jule::Bool _20100db65_Same(_20100d071_StructIns*, jule::Ptr<_20100d071_StructIns>);
inline jule::Ptr<_20102065a_Fn> _20100e01c_FindMethod(_20100d071_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_20100c57b_FieldIns> _20100e32a_FindField(_20100d071_StructIns*, jule::Str);
inline jule::Ptr<_2010a4975_Var> _20100e638_FindStatic(_20100d071_StructIns*, jule::Str);
struct _20100d071_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_20100a25a_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_20112e868_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_20100c57b_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_2010a4975_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_20102065a_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_201026265_ReferenceStack> _field_Refers;
	_201009446_Operators _field_Operators;
	


};
inline jule::Ptr<_21ab5c733_Cmd> static__21ab5cb40_New(jule::Str);
inline jule::VoidExceptional _21ab5cd1b_Spawn(_21ab5c733_Cmd*);
inline jule::VoidExceptional _21ab5cee7_Kill(_21ab5c733_Cmd*);
inline jule::Exceptional<jule::I32> _21ab5d25b_Wait(_21ab5c733_Cmd*);
inline jule::VoidExceptional _21ab6187a_spawn(_21ab5c733_Cmd*);
inline jule::VoidExceptional _21ab61a56_kill(_21ab5c733_Cmd*);
inline jule::Exceptional<jule::I32> _21ab61cba_wait(_21ab5c733_Cmd*);
struct _21ab5c733_Cmd {
	_21ab61517_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
inline jule::I32 _217d53de4_DecodeRune(jule::I32, jule::I32);
inline __jule_tuple_i32__jule_tuple_i32 _217d5418b_EncodeRune(jule::I32);
inline jule::Slice<jule::U16> _217d544aa_Encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _217d54752_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _217d54a60_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _217d54c91_Utf16FromStr(jule::Str);
inline jule::Str _217d55049_Utf16ToStr(jule::Slice<jule::U16>);
inline jule::Str _217d552e1_U16PtrToStr(jule::U16*);
inline jule::I32 _216e8dd43_GetLastErrno(void);
inline jule::Uintptr _217d828b2_GetStdHandle(jule::Uintptr);
inline jule::Bool _217d82b59_CloseHandle(jule::Uintptr);
inline jule::I32 _217d82e9a_Wstat(jule::U16*, struct _stat*);
inline jule::I32 _217d83385_Wopen(jule::U16*, jule::I32, jule::I32);
inline jule::U32 _217d83583_GetLastError(void);
inline jule::U32 _217d838c4_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _217d83e13_DeleteFile(jule::U16*);
inline jule::Bool _217d841aa_CreateDirectory(jule::U16*);
inline jule::Bool _217d84452_RemoveDirectory(jule::U16*);
inline jule::U32 _217d848d6_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _217d84c27_GetConsoleMode(jule::Uintptr, jule::I32*);
inline jule::Bool _217d852dd_SetConsoleMode(jule::Uintptr, jule::I32);
inline jule::Bool _217d857d8_WriteConsole(jule::Uintptr, jule::U16*, jule::I32, jule::I32*, void*);
inline jule::Bool _217d85c6c_ReadConsole(jule::Uintptr, jule::U16*, jule::I32, jule::I32*);
inline jule::Uintptr _217d862ab_FindFirstFile(jule::U16*, WIN32_FIND_DATAW*);
inline jule::I32 _217d865ec_FindNextFile(jule::Uintptr, WIN32_FIND_DATAW*);
inline jule::I32 _217d86894_FindClose(jule::Uintptr);
inline jule::I32 _217d883bd_Seek(jule::I32, jule::I32, jule::I32);
inline jule::I32 _217d887a8_Read(jule::I32, void*, jule::U32);
inline jule::I32 _217d88b2c_Close(jule::I32);
inline jule::I32 _217d89017_Write(jule::I32, void*, jule::U32);
inline void _217d89226_Exit(jule::I32);
inline jule::Slice<jule::U8> _217da5011_Stobs(jule::Str*);
inline void _217da56b5_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _217e86dc3_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _217e871e2_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _217e87489_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::I32 _217e879c8_RuneLen(jule::I32);
inline jule::I32 _217e87de6_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _217e88237_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _217e88578_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I32 _217e88ab7_RuneCountStr(jule::Str);
inline jule::Bool _217e88d5e_RuneStart(jule::U8);
inline jule::I32 _21804019b_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _2180416b9_Args(void);
inline jule::Exceptional<jule::Str> _218041b3c_WorkingDir(void);
inline jule::Exceptional<jule::Str> _218042500_getwd(void);
inline jule::Bool _219264d3c_IsLetter(jule::I32);
inline jule::Bool _2192d266d_is16(jule::Slice<_2192d0aab_Range16>, jule::U16);
inline jule::Bool _2192d29ae_is32(jule::Slice<_2192d102e_Range32>, jule::U32);
inline jule::Bool _2192d3251_isExcludingLatin(jule::Ptr<_2192d14a2_RangeTable>, jule::I32);
inline jule::Bool _2192d34e8_IsUpper(jule::I32);
inline jule::I32 _219304c34_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _219317054_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _21931731d_FindByteStr(jule::Str*, jule::U8);
inline jule::I32 _21931765e_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _219317a27_Repeat(jule::Str, jule::I32);
inline jule::Bool _219317e56_hasPrefix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _219318297_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _219318709_hasSuffix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _219318a17_HasSuffix(jule::Str, jule::Str);
inline jule::I32 _219318e02_FindAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _21931973d_FindLastAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _219319a7e_FindLast(jule::Str, jule::Str);
inline jule::I32 _21931ad27_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I32 _21931b663_FindLastByte(jule::Str, jule::U8);
inline jule::I32 _21931c477_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _21931cba3_Split(jule::Str, jule::Str, jule::I32);
inline jule::Bool _21931cee4_Contains(jule::Str, jule::Str);
inline jule::Bool _21931d9b7_ContainsAny(jule::Str, jule::Str);
inline jule::I32 _21931dd08_Count(jule::Str, jule::Str);
inline jule::Str _21931e28c_Replace(jule::Str, jule::Str, jule::Str, jule::I32);
inline void _21931b300_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _219320348_TrimLeft(jule::Str, jule::Str);
inline void _219320601_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _219320c83_Trim(jule::Str, jule::Str);
inline jule::Bool _21801b40d_IsPathSep(jule::U8);
inline jule::Bool _21801b5c8_isSlash(jule::U8);
inline jule::U8 _21801b870_toUpper(jule::U8);
inline jule::I32 _21801be36_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _21801c1cd_cutPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21801c475_fullPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21801c7e9_abs(jule::Str);
inline jule::Str _21801ca91_join(jule::Slice<jule::Str>);
inline jule::Str _21932279b_Clean(jule::Str);
inline jule::Str _219322d2e_FromSlash(jule::Str);
inline jule::Str _21932314d_Join(jule::Slice<jule::Str>);
inline jule::Str _2193233e5_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21932368c_Abs(jule::Str);
inline jule::Str _219323934_Base(jule::Str);
inline jule::Str _219323ca8_Dir(jule::Str);
inline jule::Str _219324050_VolumeName(jule::Str);
inline jule::I32 _217d99346_getLastFsError(void);
inline jule::Bool _217e8aa97_isConsoleHandle(jule::Uintptr);
inline void _21ab6213e_appendEscapeArg(jule::Str*, jule::Str);
inline jule::Str _21ab623d6_makeCmdLine(jule::Slice<jule::Str>);
inline jule::Exceptional<jule::Slice<jule::U16>> _21ab6278d_createEnvBlock(jule::Slice<jule::Str>);
inline jule::I32 _21ab6376c_processErrorFromCode(jule::I32);
inline jule::I32 _21ab6397b_getLastProcessError(void);
inline void _21ab6422e_Exit(jule::I32);
inline jule::Str _21ab6442c_Executable(void);
inline jule::Bool _219396ad9_IsStdHeaderPath(jule::Str);
inline jule::Bool _219396d92_IsValidHeaderExt(jule::Str);
inline jule::Bool _219397139_IsValidCppExt(jule::Str);
inline jule::Str _2193a4a4d_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _2193a4d39_argToStr(jule::Any);
inline jule::I32 _2193a50d1_findNextFmt(jule::Str);
inline jule::Str _2193a5466_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2193a64de_IsTopDirective(jule::Str);
inline jule::Bool _2193a791e_IsWindows(jule::Str);
inline jule::Bool _2193a7bc7_IsDarwin(jule::Str);
inline jule::Bool _2193a7e6e_IsLinux(jule::Str);
inline jule::Bool _2193a828d_IsI386(jule::Str);
inline jule::Bool _2193a8535_IsAmd64(jule::Str);
inline jule::Bool _2193a87cc_IsArm64(jule::Str);
inline jule::Bool _2193a8a74_IsUnix(jule::Str);
inline jule::Bool _2193a8de8_Is32Bit(jule::Str);
inline jule::Bool _2193a9190_Is64Bit(jule::Str);
inline void _21ab656b4_init(void);
inline jule::Bool _1ed695596_IsUnaryOp(jule::Str);
inline jule::Bool _1ed695882_IsBinOp(jule::Str);
inline jule::Bool _1ed695e48_IsStr(jule::Str);
inline jule::Bool _1ed6961e0_IsRawStr(jule::Str);
inline jule::Bool _1ed696487_IsRune(jule::Str);
inline jule::Bool _1ed696aa3_IsBool(jule::Str);
inline jule::Bool _1ed696d4a_IsFloat(jule::Str);
inline jule::Bool _1ed6970e2_IsNum(jule::Str);
inline jule::Bool _1ed697631_IsIgnoreIdent(jule::Str);
inline jule::Bool _1ed6978c8_IsAnonIdent(jule::Str);
inline jule::Bool _1ed697e17_IsSpace(jule::I32);
inline jule::Bool _1ed698368_IsLetter(jule::I32);
inline jule::Bool _1ed6988a7_IsDecimal(jule::U8);
inline jule::Bool _1ed698b4e_IsBinary(jule::U8);
inline jule::Bool _1ed698de6_IsOctal(jule::U8);
inline jule::Bool _1ed69918d_IsHex(jule::U8);
inline jule::Bool _1ed699435_IsAssign(jule::U32);
inline jule::Bool _1ed6996cc_IsPostfixOp(jule::Str);
inline jule::Bool _1ed699974_IsAssignOp(jule::Str);
inline jule::Ptr<_1ed69a227_File> _1ed69b4d1_NewFileSet(jule::Str);
inline _2193a460d_Log _1ed69cc74_makeErr(jule::I32, jule::I32, jule::Ptr<_1ed69a227_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ed69d109_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1ed69d44a_floatFmtE(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1ed69d7d0_floatFmtP(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1ed69db21_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1ed69de62_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1ed69e2a3_floatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1ed69e704_floatNum(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1ed69e99b_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1ed69ec43_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1ed6a0084_isFloatFmtE(jule::U8, jule::I32);
inline jule::Bool _1ed6a03c5_isFloatFmtP(jule::U8, jule::I32);
inline jule::Bool _1ed6a0716_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _1ed6a0a57_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _1ed6a0d98_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1ed6a12e9_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1ed6a1591_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1ed6a18d2_hexEscape(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1ed6a1b79_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1ed6a1e43_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1ed6a20ec_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1ed6a2383_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_2193a460d_Log> _1ed6a6d7c_Lex(jule::Ptr<_1ed69a227_File>, jule::I32);
inline jule::I32 _1ee2c215b_LeadingZeros64(jule::U64);
inline jule::I32 _1ee2c3091_TrailingZeros(jule::U32);
inline jule::I32 _1ee2c3987_TrailingZeros32(jule::U32);
inline jule::I32 _1ee2c3c2e_TrailingZeros64(jule::U64);
inline jule::I32 _1ee2c933e_Len32(jule::U32);
inline jule::I32 _1ee2c95d6_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1ee2ca296_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1ee2cb929_Mul64(jule::U64, jule::U64);
inline jule::U32 _1ee1ec63b_F32Bits(jule::F32);
inline jule::F32 _1ee1ec927_F32FromBits(jule::U32);
inline jule::U64 _1ee1ecbbe_F64Bits(jule::F64);
inline jule::F64 _1ee1ecedd_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1ee2004c9_Frexp(jule::F64);
inline jule::F64 _1ee2d390e_NaN(void);
inline jule::Bool _1ee2d3bea_IsNaN(jule::F64);
inline jule::F64 _1ee2d3e92_Inf(jule::I32);
inline jule::Bool _1ee2d42a0_IsInf(jule::F64, jule::I32);
inline __jule_tuple_f64__jule_tuple_int _1ee2d4547_normalize(jule::F64);
inline jule::F64 _1ee2d5e2d_Log(jule::F64);
inline jule::F64 _1ee2d67be_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1ee2dd210_Modf(jule::F64);
inline jule::F64 _1ee2dd9c4_Log2(jule::F64);
inline jule::Str _1ee317338_FmtFloat(jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _1ee3178aa_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _1ee31802b_bigFtoa(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _1ee316359_floatInfo*);
inline jule::Slice<jule::U8> _1ee31867a_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1ee316ce9_decimalSlice, jule::I32, jule::U8);
inline void _1ee318a76_roundShortest(_1ee328aec_decimal*, jule::U64, jule::I32, _1ee316359_floatInfo*);
inline jule::Slice<jule::U8> _1ee3190a4_fmtE(jule::Slice<jule::U8>, jule::Bool, _1ee316ce9_decimalSlice, jule::I32, jule::U8);
inline jule::Slice<jule::U8> _1ee319538_fmtF(jule::Slice<jule::U8>, jule::Bool, _1ee316ce9_decimalSlice, jule::I32);
inline jule::Slice<jule::U8> _1ee319b43_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I32, _1ee316359_floatInfo*);
inline jule::Slice<jule::U8> _1ee31a2b4_fmtX(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _1ee316359_floatInfo*);
inline jule::I32 _1ee31a605_min(jule::I32, jule::I32);
inline jule::I32 _1ee31a946_max(jule::I32, jule::I32);
inline jule::U8 _1ee31b46e_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1edc20208_ConvError _1ee31b89d_parseUint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::U64> _1ee31bc88_ParseUint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::I64> _1ee31c1ea_ParseInt(jule::Str, jule::I32, jule::I32);
inline __jule_tuple_f64__jule_tuple_bool _1ee31cd11_eiselLemire64(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1ee31d20c_eiselLemire32(jule::U64, jule::I32, jule::Bool);
inline jule::I32 _1ee31ee23_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1ee320220_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1ee3204b7_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _1ee321e47_atof64exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1ee322332_atof32exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1edc20208_ConvError _1ee322909_atofHex(jule::Str, _1ee316359_floatInfo*, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1edc20208_ConvError _1ee322cb1_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1edc20208_ConvError _1ee323058_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1edc20208_ConvError _1ee323399_parseFloatPrefix(jule::Str, jule::I32);
inline jule::Exceptional<jule::F64> _1ee3236da_ParseFloat(jule::Str, jule::I32);
inline void _1ee323e5a_ryuFtoaFixed32(_1ee316ce9_decimalSlice*, jule::U32, jule::I32, jule::I32);
inline void _1ee32439a_ryuFtoaFixed64(_1ee316ce9_decimalSlice*, jule::U64, jule::I32, jule::I32);
inline void _1ee324b81_formatDecimal(_1ee316ce9_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I32);
inline void _1ee325104_ryuFtoaShortest(_1ee316ce9_decimalSlice*, jule::U64, jule::I32, _1ee316359_floatInfo*);
inline jule::I32 _1ee32539b_mulByLog2Log10(jule::I32);
inline jule::I32 _1ee325643_mulByLog10Log2(jule::I32);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1ee325a2d_computeBounds(jule::U64, jule::I32, _1ee316359_floatInfo*);
inline void _1ee3260c2_ryuDigits(_1ee316ce9_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1ee3266aa_ryuDigits32(_1ee316ce9_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I32);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1ee326a95_mult64bitPow10(jule::U32, jule::I32, jule::I32);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1ee326e80_mult128bitPow10(jule::U64, jule::I32, jule::I32);
inline jule::Bool _1ee3272c1_divisibleByPow5(jule::U64, jule::I32);
inline __jule_tuple_u32__jule_tuple_u32 _1ee327568_divmod1e9(jule::U64);
inline void _1ee32a2d5_trim(_1ee328aec_decimal*);
inline void _1ee32a58d_rightShift(_1ee328aec_decimal*, jule::U32);
inline jule::Bool _1ee32aa00_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I32, jule::Str);
inline void _1ee32ac75_leftShift(_1ee328aec_decimal*, jule::U32);
inline jule::Bool _1ee32b0b6_shouldRoundUp(_1ee328aec_decimal*, jule::I32);
inline jule::Str _1ee32c6d3_FmtUint(jule::U64, jule::I32);
inline jule::Str _1ee32ca68_FmtInt(jule::I64, jule::I32);
inline jule::Str _1ee32cd10_Itoa(jule::I32);
inline jule::Str _1ee32d12e_small(jule::I32);
inline jule::Bool _1ee32d3c6_isPowerOfTwo(jule::I32);
inline __jule_tuple_su8__jule_tuple_str _1ee32d904_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline jule::Str _1ee32ebd0_RealKindOf(jule::Str);
inline jule::I32 _1ee32ee77_BitsizeOf(jule::Str);
inline jule::Str _1ee330296_IntFromBits(jule::I32);
inline jule::Str _1ee33053d_UintFromBits(jule::I32);
inline jule::Str _1ee3307d5_FloatFromBits(jule::I32);
inline jule::Bool _1ee331385_CheckBitFloat(jule::Str, jule::I32);
inline jule::I32 _1ee33162c_BitsizeOfFloat(jule::F64);
inline jule::I32 _1ee3318c4_BitsizeOfInt(jule::I64);
inline jule::I32 _1ee331b6b_BitsizeOfUint(jule::U64);
inline void _1ee331cd1_UpdateTarget(void);
inline void _1ee331e46_init(void);
inline jule::I64 _1ee335bd6_MinI(jule::Str);
inline jule::I64 _1ee335ec2_MaxI(jule::Str);
inline jule::U64 _1ee336269_MaxU(jule::Str);
inline jule::F64 _1ee336478_Min(jule::Str);
inline jule::F64 _1ee336720_Max(jule::Str);
inline jule::Bool _1ee336b71_IsI8Compatible(jule::Str);
inline jule::Bool _1ee336e5c_IsI16Compatible(jule::Str);
inline jule::Bool _1ee337204_IsI32Compatible(jule::Str);
inline jule::Bool _1ee337523_IsI64Compatible(jule::Str);
inline jule::Bool _1ee3377ba_IsU8Compatible(jule::Str);
inline jule::Bool _1ee337a62_IsU16Compatible(jule::Str);
inline jule::Bool _1ee337d09_IsU32Compatible(jule::Str);
inline jule::Bool _1ee33817d_IsU64Compatible(jule::Str);
inline jule::Bool _1ee338425_IsF32Compatible(jule::Str);
inline jule::Bool _1ee3386bc_IsF64Compatible(jule::Str);
inline jule::Bool _1ee338a0d_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1ee338ca5_IsI16Greater(jule::Str);
inline jule::Bool _1ee33904c_IsI32Greater(jule::Str);
inline jule::Bool _1ee3392e4_IsI64Greater(jule::Str);
inline jule::Bool _1ee33958b_IsU16Greater(jule::Str);
inline jule::Bool _1ee3399dc_IsU32Greater(jule::Str);
inline jule::Bool _1ee339c84_IsU64Greater(jule::Str);
inline jule::Bool _1ee33a02b_IsF32Greater(jule::Str);
inline jule::Bool _1ee33a2c3_IsF64Greater(jule::Str);
inline jule::Bool _1ee33a614_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1ee33b648_IsSigInt(jule::Str);
inline jule::Bool _1ee33b934_IsUnsigInt(jule::Str);
inline jule::Bool _1ee33bbcb_IsInt(jule::Str);
inline jule::Bool _1ee33beea_IsFloat(jule::Str);
inline jule::Bool _1ee33c292_IsNum(jule::Str);
inline jule::Bool _1ee33c539_IsSigNum(jule::Str);
inline void _1ee345e05_lshiftUnsig(_1ee33c6d2_Const*, _1ee33c6d2_Const*);
inline void _1ee346202_rshiftUnsig(_1ee33c6d2_Const*, _1ee33c6d2_Const*);
inline jule::Bool _2010bd1ec_IsAscii(jule::I32);
inline jule::I32 _2010bd32e_ToRune(jule::Slice<jule::U8>);
inline jule::Str _2010d4eb1_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _2010d52d0_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _2010d5577_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _2010d5885_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::Slice<jule::U8> _2010d5bc6_strEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::I32 _2011daa45_findFormatPrefix(jule::Slice<jule::U8>*, jule::I32*);
inline jule::Slice<jule::U8> _2011e15ea_getFormatRange(jule::I32*, jule::Slice<jule::U8>*);
inline void _2011e18a3_FmtByDefault(jule::Str*, jule::Any*);
inline void _2011e1c7c_applyFmtByDefault(jule::Str*, jule::I32*, jule::Slice<jule::Any>);
inline void _2011e2178_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I32*, jule::Slice<jule::Any>);
inline jule::Str _2011e2486_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _2011e4169_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _20102541d_parameterUsesGenerics(jule::Ptr<_20102243c_ParamIns>*, jule::Slice<jule::Ptr<_200ee7654_GenericDecl>>*);
inline jule::Ptr<_201137e9d_TypeSymbol> _2010278e8_buildType(jule::Ptr<_200eda6ad_TypeDecl>);
inline jule::Ptr<_2010eeb9b_Value> _201027bd4_buildExpr(jule::Ptr<_200ede838_Expr>);
inline jule::Ptr<_2011303a2_TypeAlias> _201027e7b_buildTypeAlias(jule::Ptr<_20100162a_TypeAliasDecl>);
inline jule::Ptr<_201007686_Field> _20102829a_buildField(jule::Ptr<_201004b06_FieldDecl>);
inline jule::Slice<jule::Ptr<_201007686_Field>> _201028542_buildFields(jule::Slice<jule::Ptr<_201004b06_FieldDecl>>*);
inline jule::Ptr<_20100a25a_Struct> _2010287d9_buildStruct(jule::Ptr<_201005453_StructDecl>);
inline jule::Ptr<_20101dd1d_Param> _201028a81_buildParam(jule::Ptr<_200eea9ba_ParamDecl>);
inline jule::Slice<jule::Ptr<_20101dd1d_Param>> _201028e05_buildParams(jule::Slice<jule::Ptr<_200eea9ba_ParamDecl>>*);
inline jule::Ptr<_20101d614_RetType> _20102919c_buildRetType(jule::Ptr<_200edd42a_RetTypeDecl>);
inline jule::Ptr<_20102065a_Fn> _201029444_buildFn(jule::Ptr<_200eebcda_FnDecl>);
inline jule::Slice<jule::Ptr<_20102065a_Fn>> _2010296db_buildMethods(jule::Slice<jule::Ptr<_200eebcda_FnDecl>>*);
inline jule::Slice<jule::Ptr<_201137e9d_TypeSymbol>> _201029983_buildTraitInherits(jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>*);
inline jule::Ptr<_20103287b_Trait> _201029c2a_buildTrait(jule::Ptr<_201005b29_TraitDecl>);
inline jule::Ptr<_201034619_EnumItem> _201029ec2_buildEnumItem(jule::Ptr<_201002e89_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_201034619_EnumItem>> _20102a269_buildEnumItems(jule::Slice<jule::Ptr<_201002e89_EnumItemDecl>>*);
inline jule::Ptr<_20103510e_Enum> _20102a6ba_buildEnum(jule::Ptr<_2010039b2_EnumDecl>);
inline jule::Ptr<_201036176_TypeEnumItem> _20102a962_buildTypeEnumItem(jule::Ptr<_201004287_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_201036176_TypeEnumItem>> _20102ac09_buildTypeEnumItems(jule::Slice<jule::Ptr<_201004287_TypeEnumItemDecl>>*);
inline jule::Ptr<_201036709_TypeEnum> _20102aea1_buildTypeEnum(jule::Ptr<_201004892_TypeEnumDecl>);
inline jule::Ptr<_2010a4975_Var> _20102b248_buildVar(jule::Ptr<_200eeccb9_VarDecl>);
inline jule::Slice<jule::Ptr<_2010a4975_Var>> _20102b4e0_buildVars(jule::Slice<jule::Ptr<_200eeccb9_VarDecl>>);
inline jule::Ptr<_2010578c3_Impl> _20102b787_buildImpl(jule::Ptr<_201006234_Impl>);
inline jule::Ptr<_2010edb23_Data> _201053704_buildAsComptimeMethodData(jule::Ptr<_20102330b_FnIns>*);
inline jule::Ptr<_20107b397_ImportInfo> _2010538e1_findComptimePackage(jule::Ptr<_201084669_Sema>*);
inline jule::Ptr<_2010edb23_Data> _201053c54_buildComptimeTypeInfoData(jule::Ptr<_201084669_Sema>*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Ptr<_2010edb23_Data> _201054084_buildComptimeValue(jule::Ptr<_2010edb23_Data>*);
inline jule::Bool _201056d01_matchConstraint(jule::Str*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _2010570dc_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_20106455b_scopeChecker> _20105995d_newScopeCheckerBase(jule::Ptr<_201084669_Sema>*, jule::Ptr<_20102330b_FnIns>);
inline jule::Ptr<_20106455b_scopeChecker> _201059ce3_newScopeChecker(jule::Ptr<_201084669_Sema>*, jule::Ptr<_20102330b_FnIns>);
inline jule::Ptr<_2010632c4_scopeLabel> _20105a134_findLabelParent(jule::Str, jule::Ptr<_20106455b_scopeChecker>);
inline jule::Bool _20105a4b9_modelIsGotoScope(jule::Any, jule::Ptr<_20105c92d_Scope>*);
inline jule::Bool _20105a80a_stmtIsGotoScope(jule::Any*, jule::Ptr<_20105c92d_Scope>*);
inline jule::I32 _20105ab4b_countMatchType(jule::Ptr<_201061745_Match>*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Slice<jule::Ptr<_2010edb23_Data>> _20105ade3_getDatasFromTupleData(jule::Ptr<_2010edb23_Data>*);
inline jule::Bool _20105b72e_checkMut(jule::Ptr<_201084669_Sema>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Bool _20105bbb3_checkAssign(jule::Ptr<_201084669_Sema>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Bool _20105be5a_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _20105c202_isValidStForNextSt(jule::Any*);
inline jule::Bool _20105c499_stmtIsDef(jule::Any*);
inline jule::Ptr<_2010a4975_Var> _201078aae_findVarInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_2011303a2_TypeAlias> _201078edd_findTypeAliasInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_20100a25a_Struct> _2010793c8_findStructInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_20102065a_Fn> _20107983a_findFnInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_20103287b_Trait> _201079b48_findTraitInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>*, jule::Str);
inline jule::Ptr<_20103510e_Enum> _201079e89_findEnumInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>*, jule::Str);
inline jule::Ptr<_201036709_TypeEnum> _20107a2ca_findTypeEnumInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>*, jule::Str);
inline jule::Any _20107a7c5_defByIdentPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _20108128c_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _201081ee6_isValidModelForRef(jule::Any*);
inline _2193a460d_Log _20108248b_compilerErr(jule::Ptr<_1ed694d8c_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2010827cc_impIsLookupable(jule::Ptr<_20107b397_ImportInfo>*, jule::Str);
inline void _201082ac9_appendRetVars(jule::Slice<jule::Ptr<_2010a4975_Var>>*, jule::Ptr<_20102330b_FnIns>*);
inline void _201082d82_appendParamVars(jule::Slice<jule::Ptr<_2010a4975_Var>>*, jule::Ptr<_20102330b_FnIns>*);
inline void _20108315c_appendGenericTypeAliases(jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>*, jule::Ptr<_20102330b_FnIns>*);
inline jule::Ptr<_2010e9118_SymbolTable> _2010834ae_findFile(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>*, jule::Ptr<_1ed69a227_File>*);
inline void _201083921_pushSuggestion(_2193a460d_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _2010a2e5c_pushImplemented(jule::Ptr<_20103287b_Trait>, jule::Ptr<_20100a25a_Struct>*);
inline void _2010a3215_pushImplements(jule::Ptr<_20100a25a_Struct>*, jule::Ptr<_20103287b_Trait>);
inline jule::Bool _2010d6325_traitHasReferenceReceiver(jule::Ptr<_20103287b_Trait>*);
inline jule::Bool _2010d65bc_floatAssignable(jule::Str, jule::Ptr<_2010edb23_Data>*);
inline jule::Bool _2010d690d_sigAssignable(jule::Str, jule::Ptr<_2010edb23_Data>*);
inline jule::Bool _2010d6c93_unsigAssignable(jule::Str, jule::Ptr<_2010edb23_Data>*);
inline jule::Bool _2010d70d4_intAssignable(jule::Str, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2011310ea_TypeKind> _2010e8007_lenKind(void);
inline jule::Bool _2010e829e_isGoodValueToInfer(jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_200d472d9_Directive> _20112a15a_findDirective(jule::Slice<jule::Ptr<_200d472d9_Directive>>*, jule::Str);
inline jule::Any _20112a4e0_findBuiltinsImport(jule::Str, jule::Ptr<_20107b397_ImportInfo>);
inline void _20112a6ee_fitBitsize(jule::Ptr<_2010edb23_Data>*);
inline void _20112a9eb_makeStructLitAlloc(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_201013142_StructLitExprModel>*);
inline jule::Ptr<_2010a4975_Var> _20112ad3c_buildErrorVar(jule::Ptr<_20105c92d_Scope>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Any _20112b17d_findBuiltinsSema(jule::Str, jule::Ptr<_201084669_Sema>);
inline jule::Bool _20112b425_isOkForShifting(jule::Ptr<_2010edb23_Data>*);
inline jule::Bool _20112b7cc_isInstancedStruct(jule::Ptr<_20100d071_StructIns>);
inline jule::Bool _20112bb40_isPtrArithmeticCompatible(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*);
inline void _20112bd82_applyCastKindModel(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2011310ea_TypeKind>*);
inline void _20112c13a_applyCastKind(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Ptr<_2010edb23_Data> _20112c338_buildVoidData(void);
inline jule::Str _20112c602_checkDataForIntegerIndexing(jule::Ptr<_2010edb23_Data>*);
inline void _20112c8bb_applyCastModelByEnum(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_20103510e_Enum>);
inline void _20112cb74_castConstByType(jule::Str*, jule::Ptr<_2010edb23_Data>*);
inline void _20112d180_updateModelToGenericIns(jule::Any*, jule::Ptr<_20102330b_FnIns>*);
inline jule::Bool _20112d3c2_pushSubIdentFromExpr(jule::Any, jule::Ptr<_200edb060_SubIdentTypeDecl>*);
inline jule::Str _20112d669_constoa(jule::Ptr<_1ee33c6d2_Const>*);
inline jule::Ptr<_2010edb23_Data> _20112d9aa_evalEnumStatic(jule::Ptr<_20103510e_Enum>*, jule::Ptr<_201034619_EnumItem>*);
inline jule::Bool _20114a4aa_kindUsesGenerics(jule::Ptr<_2011310ea_TypeKind>*, jule::Slice<jule::Ptr<_200ee7654_GenericDecl>>*);
inline jule::Bool _20114a840_hasDirective(jule::Slice<jule::Ptr<_200d472d9_Directive>>*, jule::Str);
inline jule::Bool _20114aad7_canGetPtr(jule::Ptr<_2010edb23_Data>*);
inline jule::Bool _20114ae06_isValidForSptrType(jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _20114b19d_isValidForRef(jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Bool _20114b467_isBuiltinStrConvertable(jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Str _20114b6dc_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_201138850_Prim> _20114ba94_buildPrimType(jule::Str);
inline jule::Ptr<_20100a25a_Struct> _20114bd3b_getStructFromKind(jule::Ptr<_2011310ea_TypeKind>);
inline void _20114c0e4_applyImplicitCast(jule::Ptr<_2011310ea_TypeKind>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Bool _20114c38b_validTypeForXof(jule::Ptr<_2011310ea_TypeKind>*);
inline __jule_tuple_x_2010e9118_SymbolTable__jule_tuple_s_2193a460d_Log _20115013b_buildSymbols(jule::Ptr<_200d46041_Ast>*, jule::Trait<_2010786e6_Importer>*, jule::Ptr<_20102bcd7_symbolBuilder>);
inline __jule_tuple_x_20107ded2_Package__jule_tuple_s_2193a460d_Log _20115056a_analyzePackage(jule::Slice<jule::Ptr<_200d46041_Ast>>*, jule::Trait<_2010786e6_Importer>*, jule::I32*);
inline __jule_tuple_x_20107ded2_Package__jule_tuple_s_2193a460d_Log _201150955_AnalyzePackage(jule::Slice<jule::Ptr<_200d46041_Ast>>, jule::Trait<_2010786e6_Importer>, jule::I32);
inline jule::Ptr<_20102330b_FnIns> _2011e492d_findBuiltinFn(jule::Str);
inline jule::Ptr<_2011303a2_TypeAlias> _2011e4b5e_primTypeAlias(jule::Ptr<_2011310ea_TypeKind>*);
inline jule::Ptr<_2011303a2_TypeAlias> _2011e847b_findBuiltinTypeAlias(jule::Str);
inline jule::Any _2011e868a_findBuiltinDef(jule::Str);
inline jule::Any _2011e8932_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _2011e8bc9_findBuiltinDefStdMem(jule::Str);
inline jule::Any _2011e8e93_findBuiltinDefStdComptime(jule::Str);
inline jule::Any _2011e934a_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _2011e9625_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_2010edb23_Data> _2011e9a32_builtinCallerCommonPlain(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011e9e2d_builtinCallerCommon(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011ea318_builtinCallerCommonMut(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011ea659_builtinCallerError(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*);
inline jule::Ptr<_2010edb23_Data> _2011eaa44_builtinCallerOut(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011eae2e_builtinCallerOutln(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011eb54a_builtinCallerNew(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011eb935_builtinCallerPanic(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011ebd20_builtinCallerMake(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011ec20a_builtinCallerAppend(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011ec68e_callerCopySlice(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011ecb23_callerCopyStr(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011ed00d_builtinCallerCopy(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011ed34e_callerLenSlice(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011ed690_callerLenMap(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011ed9d1_callerLenArr(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011edd22_callerLenStr(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011ee163_callerLenComptime(jule::Ptr<_2010edb23_Data>*, jule::I32);
inline jule::Ptr<_2010edb23_Data> _2011ee54d_builtinCallerLen(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011ee88e_callerCapSlice(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2011eebd0_callerCapStr(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2012000ba_builtinCallerCap(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201200681_callerDeleteMap(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201200a6b_builtinCallerDelete(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201200e56_builtinCallerClone(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201201341_builtinCallerAssert(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _20120174d_builtinCallerStdComptimeTypeOf(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201201b6b_builtinCallerStdComptimeValueOf(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201201e24_rangeData(jule::Trait<_201038684_comptimeRangeKind>);
inline jule::Ptr<_2010edb23_Data> _201202331_builtinCallerStdComptimeRange(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _20120274e_builtinCallerStdComptimeLine(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201202b6c_builtinCallerStdComptimeFile(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _20120308a_builtinCallerStdComptimeFiles(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2012034a8_builtinCallerStdMemSizeOf(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _2012038c6_builtinCallerStdMemAlignOf(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201203ce4_builtinCallerStdMemFree(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201204223_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201204641_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201204a81_builtinCallerStdDebugOut(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Ptr<_2010edb23_Data> _201204e6b_builtinCallerStdDebugOutln(jule::Ptr<_201100691_Eval>*, jule::Ptr<_200ee374e_FnCallExpr>*, jule::Ptr<_2010edb23_Data>*);
inline jule::Bool _2012ee84b_FindModuleFile(jule::Slice<jule::Ptr<_217d998b8_DirEntry>>*);
inline jule::Str _2012ee97d_FindModuleFileDeep(jule::Str);
inline jule::Slice<_2193a460d_Log> _2012eeb7b_CheckModuleFile(jule::Str);
inline jule::Ptr<_20152cc44_FileInfo> _201530928_ParseFile(jule::Ptr<_1ed69a227_File>);
inline __jule_tuple_x_200d46041_Ast__jule_tuple_s_2193a460d_Log _2031b3d18_parseFileset(jule::Ptr<_1ed69a227_File>);
inline jule::Ptr<_200eea2e4_ScopeTree> _2031b4742_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _2031b4a2d_isSt(jule::Ptr<_1ed694d8c_Token>, jule::Ptr<_1ed694d8c_Token>);
inline jule::Bool _2031b4d6e_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::I32*);
inline __jule_tuple_int__jule_tuple_bool _2031b5204_nextStPos(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::I32);
inline __jule_tuple_sx_1ed694d8c_Token__jule_tuple_bool _2031b5545_skipSt(jule::I32*, jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Slice<jule::Ptr<_2031b5842_stmt>> _2031b5bd8_splitStmts(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Bool _2031cc3c5_isTypeOp(jule::Str*);
inline jule::Bool _2031cc6b1_isTypeRange(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Slice<jule::Ptr<_1ed694d8c_Token>> _2031cc958_getBlockExpr(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline __jule_tuple_sx_1ed694d8c_Token__jule_tuple_sx_1ed694d8c_Token _2031cccdd_splitDelim(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::U32);
inline jule::I32 _2031cd085_findLowestPrecOp(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Ptr<_200ee142d_IdentExpr> _2031cd32c_buildIdentExpr(jule::Ptr<_1ed694d8c_Token>*);
inline __jule_tuple_sx_1ed694d8c_Token__jule_tuple_int _2031cd5c4_getRangeExprTokens(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Bool _2031ce32d_checkAssignTokens(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline _2193a460d_Log _2031d054e_makeErr(jule::I32, jule::I32, jule::Ptr<_1ed69a227_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ed694d8c_Token>> _2031d0a27_range(jule::I32*, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline __jule_tuple_sx_1ed694d8c_Token__jule_tuple_sx_1ed694d8c_Token _2031d0cbe_rangeLast(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline __jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log _2031d11a9_partsKind(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::Str, jule::Bool);
inline __jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log _2031d1594_parts(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*, jule::U32, jule::Bool);
inline jule::Str _2031d183b_getCloseKindOfBrace(jule::Str);
inline _2193a460d_Log _2031d1c26_compilerErr(jule::Ptr<_1ed694d8c_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _2031d2155_pushSuggestion(_2193a460d_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _2031d23ec_tokstoa(jule::Slice<jule::Ptr<_1ed694d8c_Token>>*);
inline jule::Bool _2031e253e_isPub(jule::Str*);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e2dd0_buildVoidType(void);
inline jule::Ptr<_200eda6ad_TypeDecl> _2031e3122_buildPrimType(jule::Ptr<_1ed694d8c_Token>);
inline __jule_tuple_bool__jule_tuple_bool _2012c8869_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _2012c3930_checkArch(jule::Str);
inline jule::Bool _2012c3b3e_isPassFileAnnotation(jule::Str);
inline void _2012dd72a_setOsVars(jule::Slice<jule::Str>*);
inline void _2012dd97d_setArchVars(jule::Slice<jule::Str>*);
inline void _2012ddc36_initVars(jule::Slice<jule::Str>*, _2012dd41c_CompileInfo*);
inline jule::Slice<jule::U8> _2031e6c4c_readBuff(jule::Str);
inline _2193a460d_Log _2031e6e8e_flatCompilerErr(jule::Str);
inline void _2031eb1e6_pushPasses(jule::Ptr<_20107ded2_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _2031eb57b_getAllUniquePasses(jule::Ptr<_20107ded2_Package>*, jule::Slice<jule::Ptr<_20107b397_ImportInfo>>);
inline _2012dd41c_CompileInfo _2031eb779_buildCompileInfo(void);
inline void _20332938a_EliminateDefines(jule::Ptr<_2031e99ca_IR>*);
inline jule::Ptr<_200d472d9_Directive> _203329720_findDirective(jule::Slice<jule::Ptr<_200d472d9_Directive>>*, jule::Str);
inline jule::Bool _203329a61_hasDirective(jule::Slice<jule::Ptr<_200d472d9_Directive>>*, jule::Str);
inline void _20332d6ad_eliminateDeadCodeOfScope(jule::Ptr<_20105c92d_Scope>);
inline void _20332d944_eliminateScopeFunctions(jule::Slice<jule::Ptr<_20102065a_Fn>>*);
inline void _20332db86_eliminateFunctionsScopePackage(jule::Ptr<_20107ded2_Package>*);
inline void _20332de2d_eliminateScopePackage(jule::Ptr<_20107ded2_Package>*);
inline void _20332e13c_EliminateScopes(jule::Ptr<_2031e99ca_IR>*);
inline jule::Bool _20120badd_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _20120bdeb_isConstantValidConditionalCase(jule::Ptr<_20105cd29_If>*);
inline jule::Bool _20120c1a4_isUnreachableExpr(jule::Any*);
inline jule::Bool _20120c4e5_isConstantValidMatchCase(jule::Ptr<_201062290_Case>*);
inline jule::Bool _20120c78c_isUnreachableConditionalCase(jule::Ptr<_20105cd29_If>*);
inline jule::Bool _20120ca45_isUnreachableMatchCase(jule::Ptr<_201062290_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _201215443_checkForBitShiftOpt(jule::Ptr<_201012020_OperandExprModel>*, jule::Ptr<_201012020_OperandExprModel>*);
inline jule::Bool _2012157c8_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _201217a83_PushOptLevel(jule::I32);
inline void _20333809c_detectEnabled(void);
inline void _20335b2bd_Throw(jule::Str);
inline jule::U64 _203b054e5_unix(void);
inline jule::U64 _203b05803_unixYearToSeconds(jule::U64, jule::Bool*);
inline jule::U64 _203b05b88_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _203a5380b_isCopyOptimizable(jule::Ptr<_2010edb23_Data>*);
inline jule::Bool _203a53b91_isIterCopyOptimizable(jule::Ptr<_2010edb23_Data>*, jule::Ptr<_2010a4975_Var>*);
inline jule::Str _203a63662_decomposeCommonEsq(jule::U8);
inline jule::Str _203a6394d_sbtoa(jule::U8);
inline jule::Str _203a63be5_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _203a64014_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _203a64322_ftoa(jule::F64, jule::I32);
inline jule::Str _203a645b9_itoa(jule::I64);
inline jule::Str _203a64861_utoa(jule::U64);
inline jule::Bool _203a64c18_isForwarded(jule::Ptr<_20105c92d_Scope>*);
inline jule::Bool _203a64ed2_isBuiltinCallHasDebuginf(jule::Ptr<_201014352_FnCallExprModel>*);
inline jule::Bool _203a65213_isExprComesFromBind(jule::Ptr<_2010edb23_Data>*);
inline jule::Bool _203a654aa_isAny(jule::Ptr<_2011310ea_TypeKind>*);
inline void _203b18c9a_iterFiles(jule::Ptr<_20107ded2_Package>*, jule::Fn<void(jule::Ptr<_2010e9118_SymbolTable>*)>);
inline jule::Str _203b19086_concatAllParts(jule::Slice<jule::Ptr<_1ed694d8c_Token>>);
inline jule::Bool _203b193c7_containsTraitMethod(jule::Ptr<_20103287b_Trait>*, jule::Str*);
inline void _203b196c4_pushMethodsFromInherit(jule::Ptr<_20103287b_Trait>*, jule::Ptr<_20103287b_Trait>*);
inline void _203b1999e_pushMethodsFromInherits(jule::Ptr<_20103287b_Trait>*, jule::Ptr<_20103287b_Trait>*);
inline jule::Ptr<_200d472d9_Directive> _203b2ca28_findDirective(jule::Slice<jule::Ptr<_200d472d9_Directive>>*, jule::Str);
inline jule::Bool _203b2cdad_hasDirective(jule::Slice<jule::Ptr<_200d472d9_Directive>>*, jule::Str);
inline jule::Bool _203b2d155_shouldInitialized(jule::Ptr<_2011310ea_TypeKind>*);
inline void _21ab685a7_printErrorMessage(jule::Str);
inline void _21ab6880a_help(jule::Slice<jule::Str>*);
inline void _21ab68a19_version(jule::Slice<jule::Str>*);
inline void _21ab68c06_toolDistos(void);
inline void _21ab68d6b_toolDistarch(void);
inline void _21ab6907a_tool(jule::Slice<jule::Str>*);
inline void _21ab69289_julenv(jule::Slice<jule::Str>*);
inline void _21ab69575_mod(jule::Slice<jule::Str>*);
inline jule::Bool _21ab6981c_processCommand(jule::Slice<jule::Str>*);
inline void _21ab69982_showInfo(void);
void entry_point(void);
inline void _21ab6a455_enableVtp(void);
inline void _21ab6a5ed_init(void);
inline void _203b8a03b_init(void);
inline jule::Ptr<_217da65ea_File> _203b8a2e4_openOutput(jule::Str*);
inline void _203b8a459_clearObjects(void);
inline void _203b8a756_compileIr(jule::Str, jule::Str);
inline jule::Bool _203b8a9ed_isCppSourceFile(jule::Str);
inline void _203b8ac0c_pushCompCmdClang(jule::Str*);
inline void _203b8ae1b_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _203b8b36c_genCompileCmd(jule::Str, jule::Ptr<_2031e99ca_IR>*);
inline jule::Str _203b8b56a_getCompilePath(void);
inline void _203b8b7ac_applyTargetIndependentOptimizations(jule::Ptr<_2031e99ca_IR>*);
inline void _203b8b922_checkCompilerFlag(void);
inline void _203b8badc_checkTargetArch(jule::Str);
inline void _203b8bceb_checkTargetOs(jule::Str);
inline void _203b8c00a_checkTargetFlag(jule::Str*);
inline void _203b8c219_checkOptFlag(jule::Str*);
inline void _203b8c58d_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _203b8c824_checkFlags(jule::Slice<jule::Str>*);
inline void _203b8ca33_setupSemaFlags(jule::I32*);
inline jule::Ptr<_2031e99ca_IR> _203b8ccca_buildIr(jule::Slice<jule::Str>*);
inline void _203b8ced9_compileCommand(jule::Slice<jule::Str>*);


struct _201038684_comptimeRangeKindMptrData {
	void(*_201037e14_ready)(jule::Trait<_201038684_comptimeRangeKind>, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
	void(*_2010382cc_step)(jule::Trait<_201038684_comptimeRangeKind>, jule::I32, jule::Ptr<_2010a4975_Var>*, jule::Ptr<_2010a4975_Var>*);
	jule::I32(*_201038541_len)(jule::Trait<_201038684_comptimeRangeKind>);
};

struct _2010786e6_ImporterMptrData {
	void(*_201077618_SetModPath)(jule::Trait<_2010786e6_Importer>, jule::Str);
	jule::Str(*_20107785a_GetModPath)(jule::Trait<_2010786e6_Importer>);
	jule::Str(*_201077b68_ModById)(jule::Trait<_2010786e6_Importer>, jule::I32);
	jule::Ptr<_20107b397_ImportInfo>(*_201077e76_GetImport)(jule::Trait<_2010786e6_Importer>, jule::Str);
	__jule_tuple_sx_200d46041_Ast__jule_tuple_s_2193a460d_Log(*_20107832d_ImportPackage)(jule::Trait<_2010786e6_Importer>, jule::Str, jule::Bool);
	void(*_2010785a3_Imported)(jule::Trait<_2010786e6_Importer>, jule::Ptr<_20107b397_ImportInfo>);
};

struct _201130b88_KindMptrData {
	jule::Str(*_201130737_Str)(jule::Trait<_201130b88_Kind>);
	jule::Bool(*_201130a45_Equal)(jule::Trait<_201130b88_Kind>, jule::Ptr<_2011310ea_TypeKind>);
};

struct _20114e426_LookupMptrData {
	jule::Ptr<_20107b397_ImportInfo>(*_20114c8db_SelectPackage)(jule::Trait<_20114e426_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)>);
	jule::Ptr<_2010a4975_Var>(*_20114cc93_FindVar)(jule::Trait<_20114e426_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_2011303a2_TypeAlias>(*_20114d14a_FindTypeAlias)(jule::Trait<_20114e426_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_20100a25a_Struct>(*_20114d502_FindStruct)(jule::Trait<_20114e426_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_20102065a_Fn>(*_20114d8a9_FindFn)(jule::Trait<_20114e426_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_20103287b_Trait>(*_20114dbb7_FindTrait)(jule::Trait<_20114e426_Lookup>, jule::Str);
	jule::Ptr<_20103510e_Enum>(*_20114dec5_FindEnum)(jule::Trait<_20114e426_Lookup>, jule::Str);
	jule::Ptr<_201036709_TypeEnum>(*_20114e2d3_FindTypeEnum)(jule::Trait<_20114e426_Lookup>, jule::Str);
};

struct _203b834c9_CommonFlagMptrData {
	jule::Str(*_203b538d9_Name)(jule::Trait<_203b834c9_CommonFlag>);
	jule::I32(*_203b53a1b_Short)(jule::Trait<_203b834c9_CommonFlag>);
	jule::Str(*_203b53bc5_What)(jule::Trait<_203b834c9_CommonFlag>);
	void(*_203b83397_Reset)(jule::Trait<_203b834c9_CommonFlag>);
};



inline void _201037e14_ready_comptimeRangeKind_0(jule::Trait<_201038684_comptimeRangeKind> _self_, jule::Ptr<_2010a4975_Var>* _1329_keyA, jule::Ptr<_2010a4975_Var>* _1346_keyB) {
	_20103b940_ready(_self_.safe_ptr<_20103ad7e_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _2010382cc_step_comptimeRangeKind_0(jule::Trait<_201038684_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_2010a4975_Var>* _1436_keyA, jule::Ptr<_2010a4975_Var>* _1453_keyB) {
	_20103bd08_step(_self_.safe_ptr<_20103ad7e_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _201038541_len_comptimeRangeKind_0(jule::Trait<_201038684_comptimeRangeKind> _self_) {
	return _20103c06c_len(_self_.safe_ptr<_20103ad7e_comptimeStructFields>());
}
inline void _201037e14_ready_comptimeRangeKind_1(jule::Trait<_201038684_comptimeRangeKind> _self_, jule::Ptr<_2010a4975_Var>* _1329_keyA, jule::Ptr<_2010a4975_Var>* _1346_keyB) {
	_20103e943_ready(_self_.safe_ptr<_20103de1a_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _2010382cc_step_comptimeRangeKind_1(jule::Trait<_201038684_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_2010a4975_Var>* _1436_keyA, jule::Ptr<_2010a4975_Var>* _1453_keyB) {
	_20103ed0b_step(_self_.safe_ptr<_20103de1a_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _201038541_len_comptimeRangeKind_1(jule::Trait<_201038684_comptimeRangeKind> _self_) {
	return _201040070_len(_self_.safe_ptr<_20103de1a_comptimeStatics>());
}
inline void _201037e14_ready_comptimeRangeKind_2(jule::Trait<_201038684_comptimeRangeKind> _self_, jule::Ptr<_2010a4975_Var>* _1329_keyA, jule::Ptr<_2010a4975_Var>* _1346_keyB) {
	_2010421b5_ready(_self_.safe_ptr<_20104157c_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _2010382cc_step_comptimeRangeKind_2(jule::Trait<_201038684_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_2010a4975_Var>* _1436_keyA, jule::Ptr<_2010a4975_Var>* _1453_keyB) {
	_20104257d_step(_self_.safe_ptr<_20104157c_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _201038541_len_comptimeRangeKind_2(jule::Trait<_201038684_comptimeRangeKind> _self_) {
	return _2010427e2_len(_self_.safe_ptr<_20104157c_comptimeEnumFields>());
}
inline void _201037e14_ready_comptimeRangeKind_3(jule::Trait<_201038684_comptimeRangeKind> _self_, jule::Ptr<_2010a4975_Var>* _1329_keyA, jule::Ptr<_2010a4975_Var>* _1346_keyB) {
	_201045729_ready(_self_.safe_ptr<_201044b79_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _2010382cc_step_comptimeRangeKind_3(jule::Trait<_201038684_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_2010a4975_Var>* _1436_keyA, jule::Ptr<_2010a4975_Var>* _1453_keyB) {
	_201045ae2_step(_self_.safe_ptr<_201044b79_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _201038541_len_comptimeRangeKind_3(jule::Trait<_201038684_comptimeRangeKind> _self_) {
	return _201045d56_len(_self_.safe_ptr<_201044b79_comptimeParams>());
}
inline void _201037e14_ready_comptimeRangeKind_4(jule::Trait<_201038684_comptimeRangeKind> _self_, jule::Ptr<_2010a4975_Var>* _1329_keyA, jule::Ptr<_2010a4975_Var>* _1346_keyB) {
	_201046be2_ready(_self_.safe_ptr<_201046142_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _2010382cc_step_comptimeRangeKind_4(jule::Trait<_201038684_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_2010a4975_Var>* _1436_keyA, jule::Ptr<_2010a4975_Var>* _1453_keyB) {
	_2010470aa_step(_self_.safe_ptr<_201046142_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _201038541_len_comptimeRangeKind_4(jule::Trait<_201038684_comptimeRangeKind> _self_) {
	return _20104731e_len(_self_.safe_ptr<_201046142_comptimeTypeInfos>());
}
inline void _201037e14_ready_comptimeRangeKind_5(jule::Trait<_201038684_comptimeRangeKind> _self_, jule::Ptr<_2010a4975_Var>* _1329_keyA, jule::Ptr<_2010a4975_Var>* _1346_keyB) {
	_2010512a1_ready(_self_.safe_ptr<_201050701_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _2010382cc_step_comptimeRangeKind_5(jule::Trait<_201038684_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_2010a4975_Var>* _1436_keyA, jule::Ptr<_2010a4975_Var>* _1453_keyB) {
	_201051669_step(_self_.safe_ptr<_201050701_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _201038541_len_comptimeRangeKind_5(jule::Trait<_201038684_comptimeRangeKind> _self_) {
	return _2010518cd_len(_self_.safe_ptr<_201050701_comptimeFiles>());
}
inline void _201077618_SetModPath_Importer_0(jule::Trait<_2010786e6_Importer> _self_, jule::Str _1729_path) {
	_2031e7e7e_SetModPath(_self_.safe_ptr<_2031e7423_JuleImporter>(), _1729_path);
}
inline jule::Str _20107785a_GetModPath_Importer_0(jule::Trait<_2010786e6_Importer> _self_) {
	return _2031e81e3_GetModPath(_self_.safe_ptr<_2031e7423_JuleImporter>());
}
inline jule::Str _201077b68_ModById_Importer_0(jule::Trait<_2010786e6_Importer> _self_, jule::I32 _2522_id) {
	return _2031e8501_ModById(_self_.safe_ptr<_2031e7423_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_20107b397_ImportInfo> _201077e76_GetImport_Importer_0(jule::Trait<_2010786e6_Importer> _self_, jule::Str _3128_path) {
	return _2031e880e_GetImport(_self_.safe_ptr<_2031e7423_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_200d46041_Ast__jule_tuple_s_2193a460d_Log _20107832d_ImportPackage_Importer_0(jule::Trait<_2010786e6_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _2031e8bb6_ImportPackage(_self_.safe_ptr<_2031e7423_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _2010785a3_Imported_Importer_0(jule::Trait<_2010786e6_Importer> _self_, jule::Ptr<_20107b397_ImportInfo> _4131__0) {
	_2031e8e3b_Imported(_self_.safe_ptr<_2031e7423_JuleImporter>(), _4131__0);
}
inline jule::Str _201130737_Str_Kind_0(jule::Trait<_201130b88_Kind> _self_) {
	return _20100d3d4_Str(_self_.safe_ptr<_20100d071_StructIns>());
}
inline jule::Bool _201130a45_Equal_Kind_0(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _20100d6e2_Equal(_self_.data.as<_20100d071_StructIns>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_1(jule::Trait<_201130b88_Kind> _self_) {
	return _20102363b_Str(_self_.safe_ptr<_20102330b_FnIns>());
}
inline jule::Bool _201130a45_Equal_Kind_1(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _201023949_Equal(_self_.data.as<_20102330b_FnIns>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_2(jule::Trait<_201130b88_Kind> _self_) {
	return _201032c33_Str(_self_.safe_ptr<_20103287b_Trait>());
}
inline jule::Bool _201130a45_Equal_Kind_2(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _201033041_Equal(_self_.data.as<_20103287b_Trait>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_3(jule::Trait<_201130b88_Kind> _self_) {
	return _201035472_Str(_self_.safe_ptr<_20103510e_Enum>());
}
inline jule::Bool _201130a45_Equal_Kind_3(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _201035780_Equal(_self_.data.as<_20103510e_Enum>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_4(jule::Trait<_201130b88_Kind> _self_) {
	return _201036a39_Str(_self_.safe_ptr<_201036709_TypeEnum>());
}
inline jule::Bool _201130a45_Equal_Kind_4(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _201036d47_Equal(_self_.data.as<_201036709_TypeEnum>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_5(jule::Trait<_201130b88_Kind> _self_) {
	return _201038c17_Str(_self_.safe_ptr<_201038860_comptimeRange>());
}
inline jule::Bool _201130a45_Equal_Kind_5(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _201039025_Equal(_self_.data.as<_201038860_comptimeRange>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_6(jule::Trait<_201130b88_Kind> _self_) {
	return _2010396b8_Str(_self_.safe_ptr<_201039355_comptimeStructField>());
}
inline jule::Bool _201130a45_Equal_Kind_6(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _2010399c6_Equal(_self_.data.as<_201039355_comptimeStructField>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_7(jule::Trait<_201130b88_Kind> _self_) {
	return _20103b203_Str(_self_.safe_ptr<_20103ad7e_comptimeStructFields>());
}
inline jule::Bool _201130a45_Equal_Kind_7(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _20103b511_Equal(_self_.data.as<_20103ad7e_comptimeStructFields>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_8(jule::Trait<_201130b88_Kind> _self_) {
	return _20103c6bb_Str(_self_.safe_ptr<_20103c358_comptimeStatic>());
}
inline jule::Bool _201130a45_Equal_Kind_8(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _20103c9c9_Equal(_self_.data.as<_20103c358_comptimeStatic>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_9(jule::Trait<_201130b88_Kind> _self_) {
	return _20103e27d_Str(_self_.safe_ptr<_20103de1a_comptimeStatics>());
}
inline jule::Bool _201130a45_Equal_Kind_9(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _20103e58b_Equal(_self_.data.as<_20103de1a_comptimeStatics>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_10(jule::Trait<_201130b88_Kind> _self_) {
	return _2010406be_Str(_self_.safe_ptr<_20104035b_comptimeEnumField>());
}
inline jule::Bool _201130a45_Equal_Kind_10(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _2010409cc_Equal(_self_.data.as<_20104035b_comptimeEnumField>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_11(jule::Trait<_201130b88_Kind> _self_) {
	return _201041a00_Str(_self_.safe_ptr<_20104157c_comptimeEnumFields>());
}
inline jule::Bool _201130a45_Equal_Kind_11(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _201041d0d_Equal(_self_.data.as<_20104157c_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_12(jule::Trait<_201130b88_Kind> _self_) {
	return _201042e41_Str(_self_.safe_ptr<_201042acd_comptimeParam>());
}
inline jule::Bool _201130a45_Equal_Kind_12(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _20104324e_Equal(_self_.data.as<_201042acd_comptimeParam>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_13(jule::Trait<_201130b88_Kind> _self_) {
	return _201044edc_Str(_self_.safe_ptr<_201044b79_comptimeParams>());
}
inline jule::Bool _201130a45_Equal_Kind_13(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _2010452ea_Equal(_self_.data.as<_201044b79_comptimeParams>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_14(jule::Trait<_201130b88_Kind> _self_) {
	return _2010464a5_Str(_self_.safe_ptr<_201046142_comptimeTypeInfos>());
}
inline jule::Bool _201130a45_Equal_Kind_14(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _2010467b3_Equal(_self_.data.as<_201046142_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_15(jule::Trait<_201130b88_Kind> _self_) {
	return _20104796d_Str(_self_.safe_ptr<_20104760a_comptimeTypeInfo>());
}
inline jule::Bool _201130a45_Equal_Kind_15(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _201047c7b_Equal(_self_.data.as<_20104760a_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_16(jule::Trait<_201130b88_Kind> _self_) {
	return _20104d468_Str(_self_.safe_ptr<_20104d105_comptimeValue>());
}
inline jule::Bool _201130a45_Equal_Kind_16(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _20104d776_Equal(_self_.data.as<_20104d105_comptimeValue>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_17(jule::Trait<_201130b88_Kind> _self_) {
	return _201050a64_Str(_self_.safe_ptr<_201050701_comptimeFiles>());
}
inline jule::Bool _201130a45_Equal_Kind_17(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _201050d72_Equal(_self_.data.as<_201050701_comptimeFiles>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_18(jule::Trait<_201130b88_Kind> _self_) {
	return _20105202c_Str(_self_.safe_ptr<_201051bb9_comptimeFile>());
}
inline jule::Bool _201130a45_Equal_Kind_18(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _20105233a_Equal(_self_.data.as<_201051bb9_comptimeFile>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_19(jule::Trait<_201130b88_Kind> _self_) {
	return _2011314a2_Str(_self_.safe_ptr<_2011310ea_TypeKind>());
}
inline jule::Bool _201130a45_Equal_Kind_19(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _2011317b0_Equal(_self_.data.as<_2011310ea_TypeKind>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_20(jule::Trait<_201130b88_Kind> _self_) {
	return _201138b80_Str(_self_.safe_ptr<_201138850_Prim>());
}
inline jule::Bool _201130a45_Equal_Kind_20(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _201138e8d_Equal(_self_.data.as<_201138850_Prim>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_21(jule::Trait<_201130b88_Kind> _self_) {
	return _20113c414_Str(_self_.safe_ptr<_20113c0a1_Sptr>());
}
inline jule::Bool _201130a45_Equal_Kind_21(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _20113c722_Equal(_self_.data.as<_20113c0a1_Sptr>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_22(jule::Trait<_201130b88_Kind> _self_) {
	return _20113ce81_Str(_self_.safe_ptr<_20113ca0d_Slc>());
}
inline jule::Bool _201130a45_Equal_Kind_22(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _20113d28e_Equal(_self_.data.as<_20113ca0d_Slc>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_23(jule::Trait<_201130b88_Kind> _self_) {
	return _20113d976_Str(_self_.safe_ptr<_20113d613_Tuple>());
}
inline jule::Bool _201130a45_Equal_Kind_23(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _20113dc84_Equal(_self_.data.as<_20113d613_Tuple>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_24(jule::Trait<_201130b88_Kind> _self_) {
	return _20113e427_Str(_self_.safe_ptr<_20113e0b4_Map>());
}
inline jule::Bool _201130a45_Equal_Kind_24(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _20113e735_Equal(_self_.data.as<_20113e0b4_Map>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_25(jule::Trait<_201130b88_Kind> _self_) {
	return _20114001b_Str(_self_.safe_ptr<_20113eba8_Arr>());
}
inline jule::Bool _201130a45_Equal_Kind_25(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _201140329_Equal(_self_.data.as<_20113eba8_Arr>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_26(jule::Trait<_201130b88_Kind> _self_) {
	return _201140978_Str(_self_.safe_ptr<_201140615_Ptr>());
}
inline jule::Bool _201130a45_Equal_Kind_26(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _201140c86_Equal(_self_.data.as<_201140615_Ptr>(), _5621_other);
}
inline jule::Str _201130737_Str_Kind_27(jule::Trait<_201130b88_Kind> _self_) {
	return _203b1a906_Str(_self_.safe_ptr<_203b1a692_customType>());
}
inline jule::Bool _201130a45_Equal_Kind_27(jule::Trait<_201130b88_Kind> _self_, jule::Ptr<_2011310ea_TypeKind> _5621_other) {
	return _203b1ac14_Equal(_self_.data.as<_203b1a692_customType>(), _5621_other);
}
inline jule::Ptr<_20107b397_ImportInfo> _20114c8db_SelectPackage_Lookup_0(jule::Trait<_20114e426_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)> _932_selector) {
	return _2010649ce_SelectPackage(_self_.safe_ptr<_20106455b_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_2010a4975_Var> _20114cc93_FindVar_Lookup_0(jule::Trait<_20114e426_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _201064d86_FindVar(_self_.safe_ptr<_20106455b_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_2011303a2_TypeAlias> _20114d14a_FindTypeAlias_Lookup_0(jule::Trait<_20114e426_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _20106523d_FindTypeAlias(_self_.safe_ptr<_20106455b_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_20100a25a_Struct> _20114d502_FindStruct_Lookup_0(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _2010655e5_FindStruct(_self_.safe_ptr<_20106455b_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_20102065a_Fn> _20114d8a9_FindFn_Lookup_0(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _20106599c_FindFn(_self_.safe_ptr<_20106455b_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_20103287b_Trait> _20114dbb7_FindTrait_Lookup_0(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2928_ident) {
	return _201065caa_FindTrait(_self_.safe_ptr<_20106455b_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_20103510e_Enum> _20114dec5_FindEnum_Lookup_0(jule::Trait<_20114e426_Lookup> _self_, jule::Str _3327_ident) {
	return _2010660b8_FindEnum(_self_.safe_ptr<_20106455b_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_201036709_TypeEnum> _20114e2d3_FindTypeEnum_Lookup_0(jule::Trait<_20114e426_Lookup> _self_, jule::Str _3731_ident) {
	return _2010663c6_FindTypeEnum(_self_.safe_ptr<_20106455b_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_20107b397_ImportInfo> _20114c8db_SelectPackage_Lookup_1(jule::Trait<_20114e426_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)> _932_selector) {
	return _20107b85e_SelectPackage(_self_.safe_ptr<_20107b397_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_2010a4975_Var> _20114cc93_FindVar_Lookup_1(jule::Trait<_20114e426_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _20107bc16_FindVar(_self_.safe_ptr<_20107b397_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_2011303a2_TypeAlias> _20114d14a_FindTypeAlias_Lookup_1(jule::Trait<_20114e426_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _20107c0bd_FindTypeAlias(_self_.safe_ptr<_20107b397_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_20100a25a_Struct> _20114d502_FindStruct_Lookup_1(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _20107c475_FindStruct(_self_.safe_ptr<_20107b397_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_20102065a_Fn> _20114d8a9_FindFn_Lookup_1(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _20107c82c_FindFn(_self_.safe_ptr<_20107b397_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_20103287b_Trait> _20114dbb7_FindTrait_Lookup_1(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2928_ident) {
	return _20107cb3a_FindTrait(_self_.safe_ptr<_20107b397_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_20103510e_Enum> _20114dec5_FindEnum_Lookup_1(jule::Trait<_20114e426_Lookup> _self_, jule::Str _3327_ident) {
	return _20107ce48_FindEnum(_self_.safe_ptr<_20107b397_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_201036709_TypeEnum> _20114e2d3_FindTypeEnum_Lookup_1(jule::Trait<_20114e426_Lookup> _self_, jule::Str _3731_ident) {
	return _20107d256_FindTypeEnum(_self_.safe_ptr<_20107b397_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_20107b397_ImportInfo> _20114c8db_SelectPackage_Lookup_2(jule::Trait<_20114e426_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)> _932_selector) {
	return _20107e455_SelectPackage(_self_.safe_ptr<_20107ded2_Package>(), _932_selector);
}
inline jule::Ptr<_2010a4975_Var> _20114cc93_FindVar_Lookup_2(jule::Trait<_20114e426_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _20107e80c_FindVar(_self_.safe_ptr<_20107ded2_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_2011303a2_TypeAlias> _20114d14a_FindTypeAlias_Lookup_2(jule::Trait<_20114e426_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _20107ebb4_FindTypeAlias(_self_.safe_ptr<_20107ded2_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_20100a25a_Struct> _20114d502_FindStruct_Lookup_2(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _20108006b_FindStruct(_self_.safe_ptr<_20107ded2_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_20102065a_Fn> _20114d8a9_FindFn_Lookup_2(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _201080423_FindFn(_self_.safe_ptr<_20107ded2_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_20103287b_Trait> _20114dbb7_FindTrait_Lookup_2(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2928_ident) {
	return _201080731_FindTrait(_self_.safe_ptr<_20107ded2_Package>(), _2928_ident);
}
inline jule::Ptr<_20103510e_Enum> _20114dec5_FindEnum_Lookup_2(jule::Trait<_20114e426_Lookup> _self_, jule::Str _3327_ident) {
	return _201080a3e_FindEnum(_self_.safe_ptr<_20107ded2_Package>(), _3327_ident);
}
inline jule::Ptr<_201036709_TypeEnum> _20114e2d3_FindTypeEnum_Lookup_2(jule::Trait<_20114e426_Lookup> _self_, jule::Str _3731_ident) {
	return _201080d4c_FindTypeEnum(_self_.safe_ptr<_20107ded2_Package>(), _3731_ident);
}
inline jule::Ptr<_20107b397_ImportInfo> _20114c8db_SelectPackage_Lookup_3(jule::Trait<_20114e426_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)> _932_selector) {
	return _201084adc_SelectPackage(_self_.safe_ptr<_201084669_Sema>(), _932_selector);
}
inline jule::Ptr<_2010a4975_Var> _20114cc93_FindVar_Lookup_3(jule::Trait<_20114e426_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _201084e94_FindVar(_self_.safe_ptr<_201084669_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_2011303a2_TypeAlias> _20114d14a_FindTypeAlias_Lookup_3(jule::Trait<_20114e426_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _20108534b_FindTypeAlias(_self_.safe_ptr<_201084669_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_20100a25a_Struct> _20114d502_FindStruct_Lookup_3(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _201085703_FindStruct(_self_.safe_ptr<_201084669_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_20102065a_Fn> _20114d8a9_FindFn_Lookup_3(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _201085aaa_FindFn(_self_.safe_ptr<_201084669_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_20103287b_Trait> _20114dbb7_FindTrait_Lookup_3(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2928_ident) {
	return _201085db8_FindTrait(_self_.safe_ptr<_201084669_Sema>(), _2928_ident);
}
inline jule::Ptr<_20103510e_Enum> _20114dec5_FindEnum_Lookup_3(jule::Trait<_20114e426_Lookup> _self_, jule::Str _3327_ident) {
	return _2010861c6_FindEnum(_self_.safe_ptr<_201084669_Sema>(), _3327_ident);
}
inline jule::Ptr<_201036709_TypeEnum> _20114e2d3_FindTypeEnum_Lookup_3(jule::Trait<_20114e426_Lookup> _self_, jule::Str _3731_ident) {
	return _2010864d4_FindTypeEnum(_self_.safe_ptr<_201084669_Sema>(), _3731_ident);
}
inline jule::Ptr<_20107b397_ImportInfo> _20114c8db_SelectPackage_Lookup_4(jule::Trait<_20114e426_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)> _932_selector) {
	return _2010e95d0_SelectPackage(_self_.safe_ptr<_2010e9118_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_2010a4975_Var> _20114cc93_FindVar_Lookup_4(jule::Trait<_20114e426_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _2010e9987_FindVar(_self_.safe_ptr<_2010e9118_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_2011303a2_TypeAlias> _20114d14a_FindTypeAlias_Lookup_4(jule::Trait<_20114e426_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _2010e9d3e_FindTypeAlias(_self_.safe_ptr<_2010e9118_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_20100a25a_Struct> _20114d502_FindStruct_Lookup_4(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _2010ea1e6_FindStruct(_self_.safe_ptr<_2010e9118_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_20102065a_Fn> _20114d8a9_FindFn_Lookup_4(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _2010ea59d_FindFn(_self_.safe_ptr<_2010e9118_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_20103287b_Trait> _20114dbb7_FindTrait_Lookup_4(jule::Trait<_20114e426_Lookup> _self_, jule::Str _2928_ident) {
	return _2010ea8ab_FindTrait(_self_.safe_ptr<_2010e9118_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_20103510e_Enum> _20114dec5_FindEnum_Lookup_4(jule::Trait<_20114e426_Lookup> _self_, jule::Str _3327_ident) {
	return _2010eabb9_FindEnum(_self_.safe_ptr<_2010e9118_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_201036709_TypeEnum> _20114e2d3_FindTypeEnum_Lookup_4(jule::Trait<_20114e426_Lookup> _self_, jule::Str _3731_ident) {
	return _2010eaec7_FindTypeEnum(_self_.safe_ptr<_2010e9118_SymbolTable>(), _3731_ident);
}
inline jule::Str _203b538d9_Name_CommonFlag_0(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _206641ddb_Name(_self_.safe_ptr<_206641b00_Flag>());
}
inline jule::I32 _203b53a1b_Short_CommonFlag_0(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _206642282_Short(_self_.safe_ptr<_206641b00_Flag>());
}
inline jule::Str _203b53bc5_What_CommonFlag_0(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _20664201d_What(_self_.safe_ptr<_206641b00_Flag>());
}
inline void _203b83397_Reset_CommonFlag_0(jule::Trait<_203b834c9_CommonFlag> _self_) {
	_206642150_Reset(_self_.safe_ptr<_206641b00_Flag>());
}
inline jule::Str _203b538d9_Name_CommonFlag_1(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _20664510e_Name(_self_.safe_ptr<_206645582_Flag>());
}
inline jule::I32 _203b53a1b_Short_CommonFlag_1(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _206645ad2_Short(_self_.safe_ptr<_206645582_Flag>());
}
inline jule::Str _203b53bc5_What_CommonFlag_1(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _20664586d_What(_self_.safe_ptr<_206645582_Flag>());
}
inline void _203b83397_Reset_CommonFlag_1(jule::Trait<_203b834c9_CommonFlag> _self_) {
	_2066459a0_Reset(_self_.safe_ptr<_206645582_Flag>());
}
inline jule::Str _203b538d9_Name_CommonFlag_2(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _2066487b6_Name(_self_.safe_ptr<_206648c39_Flag>());
}
inline jule::I32 _203b53a1b_Short_CommonFlag_2(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _206649289_Short(_self_.safe_ptr<_206648c39_Flag>());
}
inline jule::Str _203b53bc5_What_CommonFlag_2(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _206649025_What(_self_.safe_ptr<_206648c39_Flag>());
}
inline void _203b83397_Reset_CommonFlag_2(jule::Trait<_203b834c9_CommonFlag> _self_) {
	_206649157_Reset(_self_.safe_ptr<_206648c39_Flag>());
}
inline jule::Str _203b538d9_Name_CommonFlag_3(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _20664beb2_Name(_self_.safe_ptr<_20664c435_Flag>());
}
inline jule::I32 _203b53a1b_Short_CommonFlag_3(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _20664c985_Short(_self_.safe_ptr<_20664c435_Flag>());
}
inline jule::Str _203b53bc5_What_CommonFlag_3(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _20664c721_What(_self_.safe_ptr<_20664c435_Flag>());
}
inline void _203b83397_Reset_CommonFlag_3(jule::Trait<_203b834c9_CommonFlag> _self_) {
	_20664c853_Reset(_self_.safe_ptr<_20664c435_Flag>());
}
inline jule::Str _203b538d9_Name_CommonFlag_4(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _206650669_Name(_self_.safe_ptr<_206650adc_Flag>());
}
inline jule::I32 _203b53a1b_Short_CommonFlag_4(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _20665113c_Short(_self_.safe_ptr<_206650adc_Flag>());
}
inline jule::Str _203b53bc5_What_CommonFlag_4(jule::Trait<_203b834c9_CommonFlag> _self_) {
	return _206650dc8_What(_self_.safe_ptr<_206650adc_Flag>());
}
inline void _203b83397_Reset_CommonFlag_4(jule::Trait<_203b834c9_CommonFlag> _self_) {
	_20665100a_Reset(_self_.safe_ptr<_206650adc_Flag>());
}


static _201038684_comptimeRangeKindMptrData _201038684_comptimeRangeKind_mptr_data[] = {
	{
		._201037e14_ready=_201037e14_ready_comptimeRangeKind_0,
		._2010382cc_step=_2010382cc_step_comptimeRangeKind_0,
		._201038541_len=_201038541_len_comptimeRangeKind_0,
	},
	{
		._201037e14_ready=_201037e14_ready_comptimeRangeKind_1,
		._2010382cc_step=_2010382cc_step_comptimeRangeKind_1,
		._201038541_len=_201038541_len_comptimeRangeKind_1,
	},
	{
		._201037e14_ready=_201037e14_ready_comptimeRangeKind_2,
		._2010382cc_step=_2010382cc_step_comptimeRangeKind_2,
		._201038541_len=_201038541_len_comptimeRangeKind_2,
	},
	{
		._201037e14_ready=_201037e14_ready_comptimeRangeKind_3,
		._2010382cc_step=_2010382cc_step_comptimeRangeKind_3,
		._201038541_len=_201038541_len_comptimeRangeKind_3,
	},
	{
		._201037e14_ready=_201037e14_ready_comptimeRangeKind_4,
		._2010382cc_step=_2010382cc_step_comptimeRangeKind_4,
		._201038541_len=_201038541_len_comptimeRangeKind_4,
	},
	{
		._201037e14_ready=_201037e14_ready_comptimeRangeKind_5,
		._2010382cc_step=_2010382cc_step_comptimeRangeKind_5,
		._201038541_len=_201038541_len_comptimeRangeKind_5,
	},
};
static _2010786e6_ImporterMptrData _2010786e6_Importer_mptr_data[] = {
	{
		._201077618_SetModPath=_201077618_SetModPath_Importer_0,
		._20107785a_GetModPath=_20107785a_GetModPath_Importer_0,
		._201077b68_ModById=_201077b68_ModById_Importer_0,
		._201077e76_GetImport=_201077e76_GetImport_Importer_0,
		._20107832d_ImportPackage=_20107832d_ImportPackage_Importer_0,
		._2010785a3_Imported=_2010785a3_Imported_Importer_0,
	},
};
static _201130b88_KindMptrData _201130b88_Kind_mptr_data[] = {
	{
		._201130737_Str=_201130737_Str_Kind_0,
		._201130a45_Equal=_201130a45_Equal_Kind_0,
	},
	{
		._201130737_Str=_201130737_Str_Kind_1,
		._201130a45_Equal=_201130a45_Equal_Kind_1,
	},
	{
		._201130737_Str=_201130737_Str_Kind_2,
		._201130a45_Equal=_201130a45_Equal_Kind_2,
	},
	{
		._201130737_Str=_201130737_Str_Kind_3,
		._201130a45_Equal=_201130a45_Equal_Kind_3,
	},
	{
		._201130737_Str=_201130737_Str_Kind_4,
		._201130a45_Equal=_201130a45_Equal_Kind_4,
	},
	{
		._201130737_Str=_201130737_Str_Kind_5,
		._201130a45_Equal=_201130a45_Equal_Kind_5,
	},
	{
		._201130737_Str=_201130737_Str_Kind_6,
		._201130a45_Equal=_201130a45_Equal_Kind_6,
	},
	{
		._201130737_Str=_201130737_Str_Kind_7,
		._201130a45_Equal=_201130a45_Equal_Kind_7,
	},
	{
		._201130737_Str=_201130737_Str_Kind_8,
		._201130a45_Equal=_201130a45_Equal_Kind_8,
	},
	{
		._201130737_Str=_201130737_Str_Kind_9,
		._201130a45_Equal=_201130a45_Equal_Kind_9,
	},
	{
		._201130737_Str=_201130737_Str_Kind_10,
		._201130a45_Equal=_201130a45_Equal_Kind_10,
	},
	{
		._201130737_Str=_201130737_Str_Kind_11,
		._201130a45_Equal=_201130a45_Equal_Kind_11,
	},
	{
		._201130737_Str=_201130737_Str_Kind_12,
		._201130a45_Equal=_201130a45_Equal_Kind_12,
	},
	{
		._201130737_Str=_201130737_Str_Kind_13,
		._201130a45_Equal=_201130a45_Equal_Kind_13,
	},
	{
		._201130737_Str=_201130737_Str_Kind_14,
		._201130a45_Equal=_201130a45_Equal_Kind_14,
	},
	{
		._201130737_Str=_201130737_Str_Kind_15,
		._201130a45_Equal=_201130a45_Equal_Kind_15,
	},
	{
		._201130737_Str=_201130737_Str_Kind_16,
		._201130a45_Equal=_201130a45_Equal_Kind_16,
	},
	{
		._201130737_Str=_201130737_Str_Kind_17,
		._201130a45_Equal=_201130a45_Equal_Kind_17,
	},
	{
		._201130737_Str=_201130737_Str_Kind_18,
		._201130a45_Equal=_201130a45_Equal_Kind_18,
	},
	{
		._201130737_Str=_201130737_Str_Kind_19,
		._201130a45_Equal=_201130a45_Equal_Kind_19,
	},
	{
		._201130737_Str=_201130737_Str_Kind_20,
		._201130a45_Equal=_201130a45_Equal_Kind_20,
	},
	{
		._201130737_Str=_201130737_Str_Kind_21,
		._201130a45_Equal=_201130a45_Equal_Kind_21,
	},
	{
		._201130737_Str=_201130737_Str_Kind_22,
		._201130a45_Equal=_201130a45_Equal_Kind_22,
	},
	{
		._201130737_Str=_201130737_Str_Kind_23,
		._201130a45_Equal=_201130a45_Equal_Kind_23,
	},
	{
		._201130737_Str=_201130737_Str_Kind_24,
		._201130a45_Equal=_201130a45_Equal_Kind_24,
	},
	{
		._201130737_Str=_201130737_Str_Kind_25,
		._201130a45_Equal=_201130a45_Equal_Kind_25,
	},
	{
		._201130737_Str=_201130737_Str_Kind_26,
		._201130a45_Equal=_201130a45_Equal_Kind_26,
	},
	{
		._201130737_Str=_201130737_Str_Kind_27,
		._201130a45_Equal=_201130a45_Equal_Kind_27,
	},
};
static _20114e426_LookupMptrData _20114e426_Lookup_mptr_data[] = {
	{
		._20114c8db_SelectPackage=_20114c8db_SelectPackage_Lookup_0,
		._20114cc93_FindVar=_20114cc93_FindVar_Lookup_0,
		._20114d14a_FindTypeAlias=_20114d14a_FindTypeAlias_Lookup_0,
		._20114d502_FindStruct=_20114d502_FindStruct_Lookup_0,
		._20114d8a9_FindFn=_20114d8a9_FindFn_Lookup_0,
		._20114dbb7_FindTrait=_20114dbb7_FindTrait_Lookup_0,
		._20114dec5_FindEnum=_20114dec5_FindEnum_Lookup_0,
		._20114e2d3_FindTypeEnum=_20114e2d3_FindTypeEnum_Lookup_0,
	},
	{
		._20114c8db_SelectPackage=_20114c8db_SelectPackage_Lookup_1,
		._20114cc93_FindVar=_20114cc93_FindVar_Lookup_1,
		._20114d14a_FindTypeAlias=_20114d14a_FindTypeAlias_Lookup_1,
		._20114d502_FindStruct=_20114d502_FindStruct_Lookup_1,
		._20114d8a9_FindFn=_20114d8a9_FindFn_Lookup_1,
		._20114dbb7_FindTrait=_20114dbb7_FindTrait_Lookup_1,
		._20114dec5_FindEnum=_20114dec5_FindEnum_Lookup_1,
		._20114e2d3_FindTypeEnum=_20114e2d3_FindTypeEnum_Lookup_1,
	},
	{
		._20114c8db_SelectPackage=_20114c8db_SelectPackage_Lookup_2,
		._20114cc93_FindVar=_20114cc93_FindVar_Lookup_2,
		._20114d14a_FindTypeAlias=_20114d14a_FindTypeAlias_Lookup_2,
		._20114d502_FindStruct=_20114d502_FindStruct_Lookup_2,
		._20114d8a9_FindFn=_20114d8a9_FindFn_Lookup_2,
		._20114dbb7_FindTrait=_20114dbb7_FindTrait_Lookup_2,
		._20114dec5_FindEnum=_20114dec5_FindEnum_Lookup_2,
		._20114e2d3_FindTypeEnum=_20114e2d3_FindTypeEnum_Lookup_2,
	},
	{
		._20114c8db_SelectPackage=_20114c8db_SelectPackage_Lookup_3,
		._20114cc93_FindVar=_20114cc93_FindVar_Lookup_3,
		._20114d14a_FindTypeAlias=_20114d14a_FindTypeAlias_Lookup_3,
		._20114d502_FindStruct=_20114d502_FindStruct_Lookup_3,
		._20114d8a9_FindFn=_20114d8a9_FindFn_Lookup_3,
		._20114dbb7_FindTrait=_20114dbb7_FindTrait_Lookup_3,
		._20114dec5_FindEnum=_20114dec5_FindEnum_Lookup_3,
		._20114e2d3_FindTypeEnum=_20114e2d3_FindTypeEnum_Lookup_3,
	},
	{
		._20114c8db_SelectPackage=_20114c8db_SelectPackage_Lookup_4,
		._20114cc93_FindVar=_20114cc93_FindVar_Lookup_4,
		._20114d14a_FindTypeAlias=_20114d14a_FindTypeAlias_Lookup_4,
		._20114d502_FindStruct=_20114d502_FindStruct_Lookup_4,
		._20114d8a9_FindFn=_20114d8a9_FindFn_Lookup_4,
		._20114dbb7_FindTrait=_20114dbb7_FindTrait_Lookup_4,
		._20114dec5_FindEnum=_20114dec5_FindEnum_Lookup_4,
		._20114e2d3_FindTypeEnum=_20114e2d3_FindTypeEnum_Lookup_4,
	},
};
static _203b834c9_CommonFlagMptrData _203b834c9_CommonFlag_mptr_data[] = {
	{
		._203b538d9_Name=_203b538d9_Name_CommonFlag_0,
		._203b53a1b_Short=_203b53a1b_Short_CommonFlag_0,
		._203b53bc5_What=_203b53bc5_What_CommonFlag_0,
		._203b83397_Reset=_203b83397_Reset_CommonFlag_0,
	},
	{
		._203b538d9_Name=_203b538d9_Name_CommonFlag_1,
		._203b53a1b_Short=_203b53a1b_Short_CommonFlag_1,
		._203b53bc5_What=_203b53bc5_What_CommonFlag_1,
		._203b83397_Reset=_203b83397_Reset_CommonFlag_1,
	},
	{
		._203b538d9_Name=_203b538d9_Name_CommonFlag_2,
		._203b53a1b_Short=_203b53a1b_Short_CommonFlag_2,
		._203b53bc5_What=_203b53bc5_What_CommonFlag_2,
		._203b83397_Reset=_203b83397_Reset_CommonFlag_2,
	},
	{
		._203b538d9_Name=_203b538d9_Name_CommonFlag_3,
		._203b53a1b_Short=_203b53a1b_Short_CommonFlag_3,
		._203b53bc5_What=_203b53bc5_What_CommonFlag_3,
		._203b83397_Reset=_203b83397_Reset_CommonFlag_3,
	},
	{
		._203b538d9_Name=_203b538d9_Name_CommonFlag_4,
		._203b53a1b_Short=_203b53a1b_Short_CommonFlag_4,
		._203b53bc5_What=_203b53bc5_What_CommonFlag_4,
		._203b83397_Reset=_203b83397_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20102330b_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_20102330b_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2010a4975_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_2010a4975_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20100d071_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_20100d071_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20103287b_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_20103287b_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201006234_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_201006234_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20100162a_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_20100162a_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201005453_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_201005453_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200eebcda_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_200eebcda_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201005b29_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_201005b29_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200eeccb9_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_200eeccb9_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2010039b2_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_2010039b2_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201004892_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_201004892_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ee33c6d2_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1ee33c6d2_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200edac74_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_200edac74_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20106016c_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_20106016c_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20105c92d_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_20105c92d_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101b7bb_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_20101b7bb_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2010edb23_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_2010edb23_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101c866_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_20101c866_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101a27b_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_20101a27b_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201018b5e_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_201018b5e_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201018455_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_201018455_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201018840_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_201018840_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201019434_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_201019434_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2010198da_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_2010198da_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101b3d1_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_20101b3d1_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101b06d_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_20101b06d_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101cb52_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_20101cb52_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201014352_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_201014352_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20105d489_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_20105d489_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20105d775_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_20105d775_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200eee0a6_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_200eee0a6_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20105dbe8_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_20105dbe8_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200eee947_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_200eee947_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20105e5cd_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_20105e5cd_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20105e9c9_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_20105e9c9_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201060458_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_201060458_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201060810_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_201060810_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201060c83_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_201060c83_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201014b7c_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_201014b7c_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20106113a_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_20106113a_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201061745_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_201061745_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201062867_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_201062867_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20105ed81_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_20105ed81_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201062bb9_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_201062bb9_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200eea2e4_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_200eea2e4_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ede838_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_200ede838_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201000e54_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_201000e54_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200eed7d1_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_200eed7d1_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2010001a6_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_2010001a6_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee7a0b_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_200ee7a0b_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee7db3_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_200ee7db3_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee8ce8_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_200ee8ce8_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201002274_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_201002274_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee819e_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_200ee819e_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200eeecee_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_200eeecee_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200eed171_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_200eed171_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee01c9_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_200ee01c9_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20102065a_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_20102065a_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20100a25a_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_20100a25a_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2011303a2_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_2011303a2_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20103510e_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_20103510e_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201036709_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_201036709_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2010163dc_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_2010163dc_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201016bc3_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_201016bc3_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101771d_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_20101771d_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201017c7e_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_201017c7e_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101288e_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_20101288e_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200edc869_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_200edc869_ArrTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200edbabb_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_200edbabb_SlcTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200edc193_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_200edc193_PtrTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200edb6c0_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_200edb6c0_SptrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200edd073_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_200edd073_MapTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200edbda7_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_200edbda7_TupleTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee1ede_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_200ee1ede_VariadicExpr> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201014709_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_201014709_SliceExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee41cd_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_200ee41cd_FieldExprPair> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee580b_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_200ee580b_KeyValPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee142d_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_200ee142d_IdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee04b5_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_200ee04b5_TupleExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101807b_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_20101807b_TupleExprModel> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101c190_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_20101c190_RuneExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2011310ea_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_2011310ea_TypeKind> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201017432_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_201017432_ArrayExprModel> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee2bc1_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_200ee2bc1_SubIdentExpr> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200edb060_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_200edb060_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee1b37_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_200ee1b37_UnaryExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200eda6ad_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_200eda6ad_TypeDecl> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee274d_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_200ee274d_NsSelectionExpr> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200edb3d4_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_200edb3d4_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201015d9d_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_201015d9d_SlicingExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2010139a0_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_2010139a0_CastingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee5e7c_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_200ee5e7c_SliceExpr> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201013142_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_201013142_StructLitExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201017069_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_201017069_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101585e_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_20101585e_MapExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201015034_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_201015034_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200edeb24_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_200edeb24_RangeExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee086c_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_200ee086c_LitExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee0eaa_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_200ee0eaa_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee67da_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_200ee67da_IndexingExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee6de5_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_200ee6de5_SlicingExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee2396_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_200ee2396_CastExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee49a3_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_200ee49a3_StructLit> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee374e_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_200ee374e_FnCallExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee4e26_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_200ee4e26_BraceLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_200ee3144_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_200ee3144_BinopExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2010124d7_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_2010124d7_BinopExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201013450_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_201013450_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201019049_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_201019049_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201019d91_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_201019d91_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101a59a_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_20101a59a_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101a8b9_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_20101a8b9_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101bab8_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_20101bab8_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101bda4_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_20101bda4_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20101c49d_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_20101c49d_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2012068c9_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_2012068c9_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201206db3_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_201206db3_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2012054cc_StrAppendExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_2012054cc_StrAppendExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201205ed3_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_201205ed3_PushToSliceExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_20120638a_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_20120638a_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201205147_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_201205147_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2012057b8_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_2012057b8_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_201205b4d_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_201205b4d_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _21ab683cb_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _203b89942_OutDir = jule::Str("dist", 4);
jule::Str _203b89b62_OutName = jule::Str("ir.cpp", 6);
jule::Str _203b89d82_Out = jule::Str();
jule::Str _216de43d6_Compiler = jule::Str();
jule::Str _216de4606_CompilerPath = jule::Str();
jule::Str _216de4826_CppStd = jule::Str("cpp17", 5);
jule::Bool _216de4a46_Shadowing = false;
jule::Bool _216de4c66_Transpilation = false;
jule::Bool _216de500d_Test = false;
jule::Bool _216de52c7_RC = true;
jule::Bool _216de56a1_Safety = true;
jule::Bool _216de596a_Production = false;
jule::Uintptr _217d820ed_STDIN = _217d828b2_GetStdHandle(static_cast<jule::Uintptr>(4294967286LLU));
jule::Uintptr _217d823b7_STDOUT = _217d828b2_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));
jule::Uintptr _217d8264d_STDERR = _217d828b2_GetStdHandle(static_cast<jule::Uintptr>(4294967284LLU));
jule::Array<jule::U8,256> _217e85ca1_first = jule::Array<jule::U8,256>({});
jule::Array<_217e86334_acceptRange,16> _217e86642_acceptRanges = jule::Array<_217e86334_acceptRange,16>({_217e86334_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_217e86334_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_217e86334_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_217e86334_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_217e86334_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_2192d14a2_RangeTable> _219266d83__L = jule::new_ptr<_2192d14a2_RangeTable>(_2192d14a2_RangeTable{._field_R16=jule::Slice<_2192d0aab_Range16>::make({_2192d0aab_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_2192d0aab_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_2192d0aab_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_2192d0aab_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_2192d0aab_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_2192d0aab_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_2192d0aab_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_2192d0aab_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_2192d0aab_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_2192d0aab_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_2192d0aab_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_2192d0aab_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_2192d0aab_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_2192d0aab_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_2192d0aab_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_2192d0aab_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_2192d0aab_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_2192d0aab_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_2192d0aab_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_2192d0aab_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_2192d0aab_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_2192d0aab_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_2192d0aab_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_2192d0aab_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_2192d0aab_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_2192d0aab_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_2192d0aab_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_2192d0aab_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_2192d0aab_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_2192d0aab_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_2192d0aab_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_2192d0aab_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_2192d0aab_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_2192d0aab_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_2192d0aab_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_2192d0aab_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_2192d0aab_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_2192d0aab_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_2192d0aab_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_2192d0aab_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2192d0aab_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_2192d0aab_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_2192d0aab_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_2192d0aab_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_2192d0aab_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_2192d0aab_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_2192d0aab_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2192d0aab_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2192d0aab_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_2192d0aab_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_2192d0aab_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_2192d0aab_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_2192d0aab_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_2192d0aab_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_2192d0aab_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_2192d0aab_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_2192d0aab_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_2192d0aab_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_2192d0aab_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_2192d0aab_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_2192d102e_Range32>::make({_2192d102e_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_2192d102e_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_2192d102e_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_2192d102e_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_2192d102e_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_2192d102e_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_2192d102e_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_2192d102e_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_2192d102e_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_2192d102e_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_2192d102e_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_2192d102e_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_2192d102e_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_2192d102e_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_2192d102e_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_2192d102e_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_2192d102e_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_2192d102e_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_2192d102e_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_2192d102e_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_2192d102e_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_2192d102e_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_2192d102e_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_2192d102e_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_2192d102e_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_2192d102e_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_2192d102e_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_2192d102e_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_2192d102e_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_2192d102e_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_2192d102e_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_2192d14a2_RangeTable> _219267d73__LU = jule::new_ptr<_2192d14a2_RangeTable>(_2192d14a2_RangeTable{._field_R16=jule::Slice<_2192d0aab_Range16>::make({_2192d0aab_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_2192d0aab_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_2192d0aab_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_2192d0aab_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_2192d0aab_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_2192d0aab_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_2192d0aab_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2192d0aab_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2192d0aab_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2192d0aab_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_2192d0aab_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_2192d0aab_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_2192d0aab_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_2192d0aab_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_2192d0aab_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_2192d0aab_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_2192d0aab_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_2192d102e_Range32>::make({_2192d102e_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_2192d102e_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_2192d102e_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_2192d102e_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_2192d102e_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_2192d102e_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_2192d102e_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _2192c9e18__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _219326cbc_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _219326dbb_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _219394ec2_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _21ab64718_PathStdlib = jule::Str();
jule::Str _21ab64938_PathExec = jule::Str();
jule::Str _21ab64be1_PathWd = jule::Str();
jule::Str _21ab64eee_PathApi = jule::Str();
jule::Str _21ab652b8_Os = jule::Str("windows", 7);
jule::Str _21ab65582_Arch = jule::Str("i386", 4);
jule::Array<jule::I32,5> _1ed5e94c8_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1ed5e96e8_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1ed5e99e5_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1ed68ed21_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1ed69011d_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1ed69c009_kindPair,31> _1ed69c438_keywords = jule::Array<_1ed69c009_kindPair,31>({_1ed69c009_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U32>(5LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U32>(5LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U32>(5LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U32>(8LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U32>(3LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U32>(9LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U32>(11LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U32>(12LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U32>(13LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U32>(14LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U32>(15LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U32>(16LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U32>(18LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U32>(20LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U32>(22LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U32>(23LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U32>(24LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U32>(25LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U32>(26LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U32>(27LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U32>(28LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U32>(29LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U32>(30LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U32>(31LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U32>(32LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U32>(33LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U32>(34LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U32>(35LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U32>(36LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U32>(38LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U32>(39LLU)}});
jule::Array<_1ed69c009_kindPair,39> _1ed69c779_basicOps = jule::Array<_1ed69c009_kindPair,39>({_1ed69c009_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U32>(21LLU)},_1ed69c009_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U32>(10LLU)},_1ed69c009_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U32>(4LLU)},_1ed69c009_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U32>(19LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U32>(6LLU)},_1ed69c009_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U32>(37LLU)}});
jule::Array<jule::U8,32> _1ee2c2766__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1ee2c2d2c__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1ee316359_floatInfo _1ee31658a_f32info = _1ee316359_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1ee316359_floatInfo _1ee316898_f64info = _1ee316359_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1ee31db7a_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I32> _1ee320808_powtab = jule::Slice<jule::I32>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1ee321364_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1ee3216a5_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1ee3246ca_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1ee328129_leftCheat> _1ee328558_leftCheats = jule::Slice<_1ee328129_leftCheat>::make({_1ee328129_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1ee328129_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1ee328129_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1ee328129_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1ee328129_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1ee328129_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1ee328129_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1ee328129_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1ee328129_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1ee328129_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1ee328129_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1ee328129_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1ee328129_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1ee328129_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1ee328129_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1ee328129_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1ee328129_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1ee328129_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1ee328129_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1ee328129_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1ee328129_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1ee328129_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1ee328129_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1ee328129_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1ee328129_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1ee328129_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1ee328129_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1ee328129_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1ee328129_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1ee328129_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1ee328129_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1ee328129_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1ee328129_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1ee328129_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1ee328129_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1ee328129_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1ee328129_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1ee328129_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1ee328129_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1ee328129_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1ee328129_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1ee328129_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1ee328129_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1ee328129_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1ee328129_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1ee328129_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1ee328129_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1ee328129_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1ee328129_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1ee328129_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1ee328129_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1ee328129_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1ee328129_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1ee328129_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1ee328129_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1ee328129_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1ee328129_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1ee328129_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1ee328129_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1ee328129_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1ee328129_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I32 _1ee32e00e_BitSize = 0LL;
jule::Str _1ee32e22e_SysInt = jule::Str();
jule::Str _1ee32e4e8_SysUint = jule::Str();
jule::Slice<jule::Str> _201055261_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Ptr<_2011310ea_TypeKind> _2011e4e5b_primVoid = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("void", 4)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e5269_primAny = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("any", 3)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e5533_primStr = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("str", 3)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e5841_primBool = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("bool", 4)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e5b0a_primUintptr = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("uintptr", 7)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e5dc4_primUint = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("uint", 4)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e618d_primInt = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("int", 3)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e6567_primI8 = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("i8", 2)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e6831_primI16 = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("i16", 3)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e6aea_primI32 = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("i32", 3)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e6db4_primI64 = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("i64", 3)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e717d_primU8 = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("u8", 2)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e7447_primU16 = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("u16", 3)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e7711_primU32 = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("u32", 3)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e79ca_primU64 = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("u64", 3)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e7e4d_primF32 = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("f32", 3)), 20)});
jule::Ptr<_2011310ea_TypeKind> _2011e8217_primF64 = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(jule::Str("f64", 3)), 20)});
jule::Bool _201215ed2_Copy = false;
jule::Bool _2012162e0_Deadcode = false;
jule::Bool _2012165a9_Append = false;
jule::Bool _2012168b7_Math = false;
jule::Bool _201216b81_Access = false;
jule::Bool _201216e4a_Inline = false;
jule::Bool _201217214_Ptr = false;
jule::Bool _2012175dd_Cond = false;
jule::Bool _2012178a7_Str = false;
jule::Bool _2033360bc_exprEnabled = false;
jule::Bool _2033362dc_scopeEnabled = false;
jule::Array<jule::U64,12> _203b02448_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _203a4c481_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_2192d14a2_RangeTable> _219275578_Upper = _219267d73__LU;
jule::Ptr<_2192d14a2_RangeTable> _21926e022_Letter = _219266d83__L;





std::ostream &operator<<(std::ostream &_Stream, _217e86334_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2192d0aab_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2192d102e_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2192d14a2_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _219321e1b_index(_2193219dc_lazyBuff* _self_, jule::I32 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _219322191_append(_2193219dc_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _219322405_string(_2193219dc_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _2193219dc_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _217d998b8_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_217d998b8_DirEntry>>> static__2193245e4_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_217d998b8_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _1613_utf16Path = _217d54c91_Utf16FromStr(_21932314d_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str("*", 1)})));;
	WIN32_FIND_DATAW _1717_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _1813_handle = _217d862ab_FindFirstFile((&(_1613_utf16Path[0LL])), (&(_1717_data)));;
	if ((_1813_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_217d998b8_DirEntry>>>(jule::Any(), __jule_func_result);;
	};
	for (;;) {
		{
			jule::Ptr<_217d998b8_DirEntry> _2321_entry = jule::new_ptr<_217d998b8_DirEntry>(_217d998b8_DirEntry{._field_Name=_217d552e1_U16PtrToStr(((jule::U16*)(_1717_data.cFileName))), });;
			_2321_entry.get()._field_Stat=({
				auto except = static__219325419_Of(_21932314d_Join(jule::Slice<jule::Str>::make({_1520_path,_2321_entry.get()._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_217d998b8_DirEntry>>>(except.error);
				} jule::Ptr<_217da8c3a_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_217d998b8_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_2321_entry); };
			if ((_217d865ec_FindNextFile(_1813_handle, (&(_1717_data))) == 0LL)) {
				goto _iter_end_2044a79e0;
			};
		}
	_iter_next_2044a79e0:;
	}
	_iter_end_2044a79e0:;;
	_217d86894_FindClose(_1813_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_217d998b8_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__219324803_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _4413_utf16Path = _217d54c91_Utf16FromStr(_3922_path);;
	if ((!(_217d841aa_CreateDirectory((&(_4413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_217d99346_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__219324a12_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _5413_utf16Path = _217d54c91_Utf16FromStr(_5322_path);;
	if ((!(_217d84452_RemoveDirectory((&(_5413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_217d99346_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _217d99b2c_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_217da65ea_File> static__217da6a18_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_217da65ea_File>(_217da65ea_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_217da65ea_File>> static__217da6cb0_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_217da65ea_File>>(jule::Any(), ({
		auto except = static__217e89cc7_Open(_5622_path, static_cast<jule::I32>(770LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_217da65ea_File>>(except.error);
		} jule::Ptr<_217da65ea_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__217da7057_Read(jule::Str _6820_path) {
	jule::Ptr<_217da8c3a_Status> _6913_s = ({
		auto except = static__219325419_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_217da8c3a_Status>(nullptr);});
	});;
	if ((!(_217da9367_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0));
	};
	if ((_217da95cb_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_217da65ea_File> _7917_f = ({
		auto except = static__217e89cc7_Open(_6820_path, static_cast<jule::I32>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_217da65ea_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _217da8201_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I32>(_217da95cb_Size(_6913_s.ptr())), static_cast<jule::I32>(_217da95cb_Size(_6913_s.ptr())), 0);;
	jule::I32 _8313_n = ({
		auto except = _217e8a745_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__217da73a9_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I32 _9246_perm) {
	jule::Ptr<_217da65ea_File> _9317_f = ({
		auto except = static__217e89cc7_Open(_9221_path, static_cast<jule::I32>(769LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_217da65ea_File>(nullptr);});
	});;
	({
		auto except = _217e8a437_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _217da8201_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__217da770b_WriteStr(jule::Str _9924_path, jule::Str* _9936_data, jule::I32 _9947_perm) {
	({
		auto except = static__217da73a9_Write(_9924_path, _217da5011_Stobs(_9936_data), _9947_perm);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _217da7c17_Seek(_217da65ea_File* _self_, jule::I32 _11123_offset, jule::I32 _11136_origin) {
	jule::I32 _11213_pos = _217d883bd_Seek(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), _11123_offset, static_cast<jule::I32>(_11136_origin));;
	if ((_11213_pos == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_217d99346_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I32>(jule::Any(), _11213_pos);;
}



inline jule::Exceptional<jule::I32> _217da8025_WriteStr(_217da65ea_File* _self_, jule::Str* _12028_data) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result = static_cast<jule::I32>(({
		auto except = _217e8a437_Write(_self_, _217da5011_Stobs(_12028_data));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I32>(except.error);
		} 0;});
	}));
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional _217da8201_Close(_217da65ea_File* _self_) {
	if ((_217d88b2c_Close(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_217d99346_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_217da65ea_File>> static__217e89cc7_Open(jule::Str _2120_path, jule::I32 _2131_flag, jule::I32 _2144_mode) {
	jule::Slice<jule::U16> _2213_utf16Path = _217d54c91_Utf16FromStr(_2120_path);;
	jule::I32 _2313_handle = _217d83385_Wopen((&(_2213_utf16Path[0LL])), static_cast<jule::I32>(_2131_flag), _2144_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_217da65ea_File>>(jule::Any(_217d99346_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_217da65ea_File>>(jule::Any(), static__217da6a18_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));;
}



inline jule::VoidExceptional static__217e89ed6_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _3513_utf16Path = _217d54c91_Utf16FromStr(_3422_path);;
	if ((!(_217d83e13_DeleteFile((&(_3513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_217d99346_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _217e8a437_Write(_217da65ea_File* _self_, jule::Slice<jule::U8> _4924_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_4924_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	if (_217e8aa97_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16Buff = _217d54c91_Utf16FromStr(static_cast<jule::Str>(_4924_buff));;
		jule::Bool _5617_ok = _217d857d8_WriteConsole((*(_self_))._field_handle, (&(_5517_utf16Buff[0LL])), static_cast<jule::I32>(_5517_utf16Buff.len()), &(__jule_func_result), nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I32>(jule::Any(_217d99346_getLastFsError(), &__jule_any_type0));
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_217d89017_Write(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_4924_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_4924_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_217d99346_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I32> _217e8a745_Read(_217da65ea_File* _self_, jule::Slice<jule::U8> _7927_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_7927_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	if (_217e8aa97_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8521_codepage = jule::Slice<jule::U16>::alloc(_7927_buff.len(), _7927_buff.len(), 0);;
		jule::Bool _8617_ok = _217d85c6c_ReadConsole((*(_self_))._field_handle, (&(_8521_codepage[0LL])), static_cast<jule::I32>(_7927_buff.len()), &(__jule_func_result));;
		if ((!(_8617_ok))) {
			return jule::Exceptional<jule::I32>(jule::Any(_217d99346_getLastFsError(), &__jule_any_type0));
		};
		jule::Slice<jule::I32> _9117_runes = _217d54752_Decode(_8521_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9117_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2044bed15:;
			if (it != expr_end) {
				jule::I32 *_9320_r = it;
				{
					jule::I32 _9421_size = _217e879c8_RuneLen((*(_9320_r)));;
					if (((__jule_func_result + _9421_size) > _7927_buff.len())) {
						goto _iter_end_2044bed15;
					};
					_217e87de6_EncodeRune(_7927_buff.slice(__jule_func_result), (*(_9320_r)));
					__jule_func_result+=_9421_size;
				}
				_iter_next_2044bed15:;
				++it;
				goto _iter_begin_2044bed15;
			}
			_iter_end_2044bed15:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_217d887a8_Read(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_7927_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_7927_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_217d99346_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}







std::ostream &operator<<(std::ostream &_Stream, _217da65ea_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _217da9103_IsDir(_217da8c3a_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _217da9367_IsReg(_217da8c3a_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _217da95cb_Size(_217da8c3a_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_217da8c3a_Status>> static__219325419_Of(jule::Str _1218_path) {
	if (_1218_path.empty()) {
		return jule::Exceptional<jule::Ptr<_217da8c3a_Status>>(jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0));
	};
	jule::Slice<jule::U16> _1613_utf16Path = _217d54c91_Utf16FromStr(_1218_path);;
	struct _stat _1717_handle = (struct _stat){};;
	jule::I32 _1813_code = _217d82e9a_Wstat((&(_1613_utf16Path[0LL])), (&(_1717_handle)));;
	if ((_1813_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_217da8c3a_Status>>(jule::Any(_217d99346_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_217da8c3a_Status> _2217_stat = jule::new_ptr<_217da8c3a_Status>();;
	_2217_stat.get()._field_size=_1717_handle.st_size;
	if (((_1717_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_1717_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_217da8c3a_Status>>(jule::Any(), _2217_stat);;
}







std::ostream &operator<<(std::ostream &_Stream, _217da8c3a_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21ab61517_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2193a460d_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1ed695200_Prec(_1ed694d8c_Token* _self_) {
	if (((*(_self_))._field_Id != static_cast<jule::U32>(6LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_20457479e:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_2045757c2:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_204575838:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_2045758b0:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_204575937:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_2045755a2:;
			{
				return 0LLU;;
			}
		}
		_match_end_20457554c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ed694d8c_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1ed69a5e0_Fill(_1ed69a227_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1ed69a854_Dir(_1ed69a227_File* _self_) {
	return _219323ca8_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1ed69aab8_Name(_1ed69a227_File* _self_) {
	return _219323934_Base((*(_self_))._field_Path);;
}



inline jule::Uintptr _1ed69ad2c_Addr(_1ed69a227_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*(_self_)))))));;
}



inline jule::Str _1ed69b13a_GetRow(_1ed69a227_File* _self_, jule::I32 _3821_row) {
	jule::I32 _3917_n = 0LL;;
	jule::I32 _4017_lineStart = 0LL;;
	jule::I32 _4117_i = 0LL;;
	for (; (_4117_i < (*(_self_))._field_Data.len()); (_4117_i)++) {
		{
			if (((*(_self_))._field_Data[_4117_i] != '\n')) {
				goto _iter_next_20457a0bd;
			};
			(_3917_n)++;
			if ((_3917_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4017_lineStart, _4117_i));;
			};
			_4017_lineStart=static_cast<jule::I32>((_4117_i + 1LL));
		}
	_iter_next_20457a0bd:;
	}
	_iter_end_20457a0bd:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed69a227_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed69c009_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1ed6a30ba_pushErr(_1ed6a2a6a_lex* _self_, jule::Str _44226_fmt, jule::Slice<jule::Any> _44239_args) {
	{ jule::Slice<_2193a460d_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ed69cc74_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44226_fmt, _44239_args)); };
}



inline void _1ed6a33d9_pushErrTok(_1ed6a2a6a_lex* _self_, jule::Ptr<_1ed694d8c_Token>* _44730_token, jule::Str _44745_fmt) {
	{ jule::Slice<_2193a460d_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ed69cc74_makeErr((*(_44730_token)).get()._field_Row, (*(_44730_token)).get()._field_Column, &((*(_self_))._field_file), _44745_fmt, jule::Slice<jule::Any>())); };
}



inline void _1ed6a35b5_lex(_1ed6a2a6a_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1ed6a55b7_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1ed694d8c_Token> _45721_token = _1ed6a693c_token(_self_);;
			if ((_45721_token.get()._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1ed694d8c_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_45721_token); };
			};
		}
	_iter_next_2045a84a3:;
	}
	_iter_end_2045a84a3:;;
}



inline jule::Str _1ed6a38c3_id(_1ed6a2a6a_lex* _self_, jule::Slice<jule::U8>* _46622_ln) {
	if (((*(_46622_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _47014_r = 0;;
	jule::I32 _47021_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e86dc3_DecodeRune((*(_46622_ln)));
		_47014_r = __jule_assign_result.__jule_result_arg0;
		_47021_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_47014_r != '_') && (!(_1ed698368_IsLetter(_47014_r))))) {
		return jule::Str();;
	};
	while ((_47021_i < (*(_46622_ln)).len())) {
		{
			jule::I32 _47618_pr = 0;;
			jule::I32 _47622_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e86dc3_DecodeRune((*(_46622_ln)).slice(_47021_i));
				_47618_pr = __jule_assign_result.__jule_result_arg0;
				_47622_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_47618_pr != '_') && (!(_1ed6988a7_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_47618_pr)))))) && (!(_1ed698368_IsLetter(_47618_pr))))) {
				(*(_self_))._field_pos+=_47021_i;
				return static_cast<jule::Str>((*(_46622_ln)).slice(0LL, _47021_i));;
			};
			_47021_i+=_47622_n;
		}
	_iter_next_2045ab61b:;
	}
	_iter_end_2045ab61b:;;
	(*(_self_))._field_pos+=(*(_46622_ln)).len();
	return static_cast<jule::Str>((*(_46622_ln)));;
}



inline jule::Slice<jule::U8> _1ed6a3b37_resume(_1ed6a2a6a_lex* _self_) {
	jule::I32 _49117_i = (*(_self_))._field_pos;;
	for (; (_49117_i < (*(_self_))._field_file.get()._field_Data.len()); (_49117_i)++) {
		{
			jule::I32 _49317_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_49117_i]);;
			if (_1ed697e17_IsSpace(_49317_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49317_r };
					
					if (_match_expr == '\n') {
						_case_begin_2045b081d:;
						{
							_1ed6a55b7_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_2045b0301:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_2045ad6ea:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_2045b01d0:;
				};
				goto _iter_next_2045adb07;
			};
			jule::I32 _50821_j = _49117_i;;
			for (; (_50821_j < (*(_self_))._field_file.get()._field_Data.len()); (_50821_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_50821_j] == '\n')) {
						goto _iter_end_2045ae696;
					};
				}
			_iter_next_2045ae696:;
			}
			_iter_end_2045ae696:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_49117_i, _50821_j);;
		}
	_iter_next_2045adb07:;
	}
	_iter_end_2045adb07:;;
	return nullptr;;
}



inline void _1ed6a3dac_lexLineComment(_1ed6a2a6a_lex* _self_, jule::Ptr<_1ed694d8c_Token>* _51938_token) {
	jule::I32 _52013_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52317_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_52317_r == '\n') || (_52317_r == '\r'))) {
				goto _iter_end_2045b2b1c;
			};
		}
	_iter_next_2045b2b1c:;
	}
	_iter_end_2045b2b1c:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*(_51938_token)).get()._field_Id=static_cast<jule::U32>(17LLU);
		(*(_51938_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_52013_start, (*(_self_))._field_pos));
	};
}



inline void _1ed6a4132_lexRangeComment(_1ed6a2a6a_lex* _self_, jule::Ptr<_1ed694d8c_Token>* _53439_token) {
	jule::I32 _53513_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53817_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_53817_r == '\r')) {
				goto _iter_next_2045b5aa9;
			};
			if ((_53817_r == '\n')) {
				_1ed6a55b7_newLine(_self_);
				goto _iter_next_2045b5aa9;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_53817_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*(_53439_token)).get()._field_Id=static_cast<jule::U32>(17LLU);
					(*(_53439_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_53513_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_2045b5aa9:;
	}
	_iter_end_2045b5aa9:;;
	_1ed6a30ba_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1ed6a4440_num(_1ed6a2a6a_lex* _self_, jule::Slice<jule::U8>* _56223_txt) {
	jule::Str __jule_func_result;
	if (((*(_56223_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1ed6a1591_hexNum(_56223_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1ed6a12e9_octalNum(_56223_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1ed69ec43_binaryNum(_56223_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1ed69e99b_commonNum(_56223_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1ed6a474d_escapeSeq(_1ed6a2a6a_lex* _self_, jule::Slice<jule::U8>* _58429_txt) {
	jule::Str _58517_seq = jule::Str();;
	if (((*(_58429_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_58429_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_2045bea4c:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58429_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_2045be981:;
			{
				_58517_seq=_1ed6a1b79_bigUnicodePointEscape(_58429_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_2045be6b7:;
			{
				_58517_seq=_1ed6a1e43_littleUnicodePointEscape(_58429_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_2045be72d:;
			{
				_58517_seq=_1ed6a20ec_hexByteEscape(_58429_txt);
			}
		}
		else {
			_case_begin_2045be079:;
			{
				_58517_seq=_1ed6a2383_byteEscape(_58429_txt);
			}
		}
		_match_end_2045be596:;
	};
	_julec_label_end:;
	if (_58517_seq.empty()) {
		((*(_self_))._field_pos)++;
		_1ed6a30ba_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_58517_seq.len();
	return _58517_seq;;
}



inline jule::Str _1ed6a4b05_getRune(_1ed6a2a6a_lex* _self_, jule::Slice<jule::U8>* _61427_txt, jule::Bool _61440_raw) {
	if (((!(_61440_raw)) && ((*(_61427_txt))[0LL] == '\\'))) {
		return _1ed6a474d_escapeSeq(_self_, _61427_txt);;
	};
	jule::I32 _61814_r = 0;;
	jule::I32 _61817_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e86dc3_DecodeRune((*(_61427_txt)));
		_61814_r = __jule_assign_result.__jule_result_arg0;
		_61817_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_61817_n;
	return jule::Str::from_rune(_61814_r);;
}



inline jule::Str _1ed6a4e13_lexRune(_1ed6a2a6a_lex* _self_, jule::Slice<jule::U8>* _62327_txt) {
	jule::Str _62417_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I32 _62617_n = 0LL;;
	jule::I32 _62717_i = 1LL;;
	for (; (_62717_i < (*(_62327_txt)).len()); (_62717_i)++) {
		{
			if (((*(_62327_txt))[_62717_i] == '\r')) {
				goto _iter_next_2045c4bb7;
			};
			if (((*(_62327_txt))[_62717_i] == '\n')) {
				_1ed6a30ba_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1ed6a55b7_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _63917_part = (*(_62327_txt)).slice(_62717_i);;
			jule::Str _64017_r = _1ed6a4b05_getRune(_self_, &(_63917_part), false);;
			_62417_run+=_64017_r;
			(*(_self_))._field_column+=_217e88ab7_RuneCountStr(_64017_r);
			if (_64017_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_2045c4bb7;
			};
			if ((_64017_r.len() > 1LL)) {
				_62717_i+=(_64017_r.len() - 1LL);
			};
			(_62617_n)++;
		}
	_iter_next_2045c4bb7:;
	}
	_iter_end_2045c4bb7:;;
	if ((_62617_n == 0LL)) {
		_1ed6a30ba_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_62617_n > 1LL)) {
		_1ed6a30ba_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _62417_run;;
}



inline jule::Str _1ed6a5177_lexStr(_1ed6a2a6a_lex* _self_) {
	jule::Str _66317_s = jule::Str();;
	jule::U8 _66413_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _66613_raw = (_66413_mark == '`');;
	(_66317_s).append(_66413_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _67117_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_67117_ch == '\r')) {
				goto _iter_next_2045d0860;
			};
			if ((_67117_ch == '\n')) {
				_1ed6a55b7_newLine(_self_);
				if ((!(_66613_raw))) {
					_1ed6a30ba_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68321_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _68417_r = _1ed6a4b05_getRune(_self_, &(_68321_part), _66613_raw);;
			_66317_s+=_68417_r;
			(*(_self_))._field_column+=_217e88ab7_RuneCountStr(_68417_r);
			if ((_67117_ch == _66413_mark)) {
				goto _iter_end_2045d0860;
			};
		}
	_iter_next_2045d0860:;
	}
	_iter_end_2045d0860:;;
	return _66317_s;;
}



inline jule::Bool _1ed6a53db_isFirstTokenOfLine(_1ed6a2a6a_lex* _self_) {
	return ((*(_self_))._field_column == 1LL);;
}



inline void _1ed6a55b7_newLine(_1ed6a2a6a_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1ed6a5ab2_isOp(_1ed6a2a6a_lex* _self_, jule::Slice<jule::U8>* _70424_txt, jule::Str _70437_kind, jule::U32 _70448_id, jule::Ptr<_1ed694d8c_Token>* _70466_t) {
	if ((!(_1ed69d109_bytesHasPrefix(_70424_txt, _70437_kind)))) {
		return false;;
	};
	(*(_70466_t)).get()._field_Kind=_70437_kind;
	(*(_70466_t)).get()._field_Id=_70448_id;
	(*(_self_))._field_pos+=_70437_kind.len();
	return true;;
}



inline jule::Bool _1ed6a5e69_lexBasicOps(_1ed6a2a6a_lex* _self_, jule::Slice<jule::U8> _71430_txt, jule::Ptr<_1ed694d8c_Token>* _71448_tok) {
	{
		auto expr = &(_1ed69c779_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2045d66e0:;
		if (it != expr_end) {
			_1ed69c009_kindPair *_71516_pair = it;
			{
				if (_1ed6a5ab2_isOp(_self_, &(_71430_txt), (*(_71516_pair))._field_kind, (*(_71516_pair))._field_id, _71448_tok)) {
					return true;;
				};
			}
			_iter_next_2045d66e0:;
			++it;
			goto _iter_begin_2045d66e0;
		}
		_iter_end_2045d66e0:;
	};
	return false;;
}



inline jule::Bool _1ed6a6321_lexId(_1ed6a2a6a_lex* _self_, jule::Slice<jule::U8>* _72425_txt, jule::Ptr<_1ed694d8c_Token>* _72443_t) {
	jule::Str _72513_lex = _1ed6a38c3_id(_self_, _72425_txt);;
	if (_72513_lex.empty()) {
		return false;;
	};
	(*(_72443_t)).get()._field_Kind=_72513_lex;
	(*(_72443_t)).get()._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _1ed6a66c8_lexNum(_1ed6a2a6a_lex* _self_, jule::Slice<jule::U8>* _73426_txt, jule::Ptr<_1ed694d8c_Token>* _73444_t) {
	jule::Str _73513_lex = _1ed6a4440_num(_self_, _73426_txt);;
	if (_73513_lex.empty()) {
		return false;;
	};
	(*(_73444_t)).get()._field_Kind=_73513_lex;
	(*(_73444_t)).get()._field_Id=static_cast<jule::U32>(5LLU);
	return true;;
}



inline jule::Ptr<_1ed694d8c_Token> _1ed6a693c_token(_1ed6a2a6a_lex* _self_) {
	jule::Ptr<_1ed694d8c_Token> _74617_t = jule::new_ptr<_1ed694d8c_Token>(_1ed694d8c_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _75113_txt = _1ed6a3b37_resume(_self_);;
	if ((_75113_txt == nullptr)) {
		return _74617_t;;
	};
	_74617_t.get()._field_Column=(*(_self_))._field_column;
	_74617_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_1ed6a66c8_lexNum(_self_, &(_75113_txt), &(_74617_t))) {
			_case_begin_2045dc52b:;
			{
				goto _match_end_2045db959;
			}
		}
		else if ((_75113_txt[0LL] == '\'')) {
			_case_begin_2045dca48:;
			{
				_74617_t.get()._field_Kind=_1ed6a4e13_lexRune(_self_, &(_75113_txt));
				_74617_t.get()._field_Id=static_cast<jule::U32>(5LLU);
				return _74617_t;;
			}
		}
		else if (((_75113_txt[0LL] == '\"') || (_75113_txt[0LL] == '`'))) {
			_case_begin_2045dce77:;
			{
				_74617_t.get()._field_Kind=_1ed6a5177_lexStr(_self_);
				_74617_t.get()._field_Id=static_cast<jule::U32>(5LLU);
				return _74617_t;;
			}
		}
		else if (_1ed69d109_bytesHasPrefix(&(_75113_txt), jule::Str("//", 2))) {
			_case_begin_2045dcedd:;
			{
				_1ed6a3dac_lexLineComment(_self_, &(_74617_t));
				return _74617_t;;
			}
		}
		else if (_1ed69d109_bytesHasPrefix(&(_75113_txt), jule::Str("/*", 2))) {
			_case_begin_2045dd054:;
			{
				_1ed6a4132_lexRangeComment(_self_, &(_74617_t));
				return _74617_t;;
			}
		}
		else if (_1ed6a5ab2_isOp(_self_, &(_75113_txt), jule::Str("(", 1), static_cast<jule::U32>(2LLU), &(_74617_t)) || _1ed6a5ab2_isOp(_self_, &(_75113_txt), jule::Str(")", 1), static_cast<jule::U32>(2LLU), &(_74617_t)) || _1ed6a5ab2_isOp(_self_, &(_75113_txt), jule::Str("{", 1), static_cast<jule::U32>(2LLU), &(_74617_t)) || _1ed6a5ab2_isOp(_self_, &(_75113_txt), jule::Str("}", 1), static_cast<jule::U32>(2LLU), &(_74617_t)) || _1ed6a5ab2_isOp(_self_, &(_75113_txt), jule::Str("[", 1), static_cast<jule::U32>(2LLU), &(_74617_t)) || _1ed6a5ab2_isOp(_self_, &(_75113_txt), jule::Str("]", 1), static_cast<jule::U32>(2LLU), &(_74617_t)) || _1ed6a5e69_lexBasicOps(_self_, _75113_txt, &(_74617_t))) {
			_case_begin_2045db9c0:;
			{
				goto _match_end_2045db959;
			}
		}
		else if (_1ed6a6321_lexId(_self_, &(_75113_txt), &(_74617_t))) {
			_case_begin_2045dba36:;
			{
				{
					auto expr = &(_1ed69c438_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2045e2dd3:;
					if (it != expr_end) {
						_1ed69c009_kindPair *_78920_pair = it;
						{
							if (((*(_78920_pair))._field_kind == _74617_t.get()._field_Kind)) {
								_74617_t.get()._field_Id=(*(_78920_pair))._field_id;
								goto _iter_end_2045e2dd3;
							};
						}
						_iter_next_2045e2dd3:;
						++it;
						goto _iter_begin_2045e2dd3;
					}
					_iter_end_2045e2dd3:;
				};
			}
		}
		else {
			_case_begin_2045db140:;
			{
				jule::I32 _79618_r = 0;;
				jule::I32 _79621_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e86dc3_DecodeRune(_75113_txt);
					_79618_r = __jule_assign_result.__jule_result_arg0;
					_79621_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1ed6a30ba_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79618_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79621_sz;
				return _74617_t;;
			}
		}
		_match_end_2045db959:;
	};
	(*(_self_))._field_column+=_217e88ab7_RuneCountStr(_74617_t.get()._field_Kind);
	return _74617_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed6a2a6a_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ee316359_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ee316ce9_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ee328129_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ee320b27_set(_1ee328aec_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _23417_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_204ab221a:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_204ab2429:;
			{
				(*(_self_))._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_204ab233b:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_204ab3dba:;
					{
						goto _iter_next_204ab3738;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_204ab3e42:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_204ab3738;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_204ab3eb9:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_204ab3738;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23322_s[_23417_i];
							((*(_self_))._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_204ab3738;
					}
				}
				_match_end_204ab3c99:;
			};
			goto _iter_end_204ab3738;
		}
	_iter_next_204ab3738:;
	}
	_iter_end_204ab3738:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1ee31b46e_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_204ab9ae6;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I32>((((_30721_e * 10LL) + static_cast<jule::I32>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_204ab9ae6:;
		}
		_iter_end_204ab9ae6:;;
		(*(_self_))._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1ee320e35_floatBits(_1ee328aec_decimal* _self_, _1ee316359_floatInfo* _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _35421_n = 0LL;;
			if (((*(_self_))._field_dp >= _1ee320808_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1ee320808_powtab[(*(_self_))._field_dp];
			};
			_1ee329207_shift(_self_, static_cast<jule::I32>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_204ac0646:;
	}
	_iter_end_204ac0646:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _36421_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1ee320808_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1ee320808_powtab[(-((*(_self_))._field_dp))];
			};
			_1ee329207_shift(_self_, _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_204ac1416:;
	}
	_iter_end_204ac1416:;;
	(_32817_exp)--;
	if ((_32817_exp < ((*(_32729_flt))._field_bias + 1LL))) {
		jule::I32 _38117_n = (((*(_32729_flt))._field_bias + 1LL) - _32817_exp);;
		_1ee329207_shift(_self_, static_cast<jule::I32>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1ee329207_shift(_self_, static_cast<jule::I32>(static_cast<jule::I32>((1LL + (*(_32729_flt))._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1ee329bdb_roundedInteger(_self_));
	if ((_32917_mant == (2LLU << (*(_32729_flt))._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << (*(_32729_flt))._field_mantbits)) == 0LLU)) {
		_32817_exp=(*(_32729_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I32>(static_cast<jule::I32>((((static_cast<jule::U32>(1LLU) << (*(_32729_flt))._field_expbits) - 1LLU) + static_cast<jule::U32>((*(_32729_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << (*(_32729_flt))._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - (*(_32729_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) << (*(_32729_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_41717_bits|=((1LLU << (*(_32729_flt))._field_mantbits) << (*(_32729_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1ee328e82_assign(_1ee328aec_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I32 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_204accc5d:;
	}
	_iter_end_204accc5d:;;
	(*(_self_))._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_33117_buf[_33417_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_204acd6cb:;
	}
	_iter_end_204acd6cb:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1ee32a2d5_trim(_self_);
}



inline void _1ee329207_shift(_1ee328aec_decimal* _self_, jule::I32 _35528_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_204ad05bd:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_204ad0645:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1ee32ac75_leftShift(_self_, 60LLU);
						_35528_k-=60LL;
					}
				_iter_next_204ad125b:;
				}
				_iter_end_204ad125b:;;
				_1ee32ac75_leftShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_204ad06bc:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1ee32a58d_rightShift(_self_, 60LLU);
						_35528_k+=60LL;
					}
				_iter_next_204ad11a1:;
				}
				_iter_end_204ad11a1:;;
				_1ee32a58d_rightShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>((-(_35528_k)))));
			}
		}
		_match_end_204ad049c:;
	};
}



inline void _1ee32947c_roundDown(_1ee328aec_decimal* _self_, jule::I32 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_37528_nd;
	_1ee32a2d5_trim(_self_);
}



inline void _1ee329702_roundUp(_1ee328aec_decimal* _self_, jule::I32 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*(_self_))._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*(_self_))._field_d[_39017_i])++;
				(*(_self_))._field_nd=static_cast<jule::I32>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_204ad46c1:;
	}
	_iter_end_204ad46c1:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1ee329977_round(_1ee328aec_decimal* _self_, jule::I32 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1ee32b0b6_shouldRoundUp(_self_, _41124_nd)) {
		_1ee329702_roundUp(_self_, _41124_nd);
	} else {
		_1ee32947c_roundDown(_self_, _41124_nd);
	};
}



inline jule::U64 _1ee329bdb_roundedInteger(_1ee328aec_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*(_self_))._field_dp) && (_42817_i < (*(_self_))._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_42817_i] - '0'))));
		}
	_iter_next_204ad7053:;
	}
	_iter_end_204ad7053:;;
	for (; (_42817_i < (*(_self_))._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_204ad8a49:;
	}
	_iter_end_204ad8a49:;;
	if (_1ee32b0b6_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ee328aec_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ee33c6d2_Const> static__1ee33cb11_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1ee33c6d2_Const>(_1ee33c6d2_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1ee33c6d2_Const> static__1ee33cda8_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1ee33c6d2_Const>(_1ee33c6d2_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1ee33c6d2_Const> static__1ee33d150_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1ee33c6d2_Const>(_1ee33c6d2_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1ee33c6d2_Const> static__1ee33d3e7_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1ee33c6d2_Const>(_1ee33c6d2_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1ee33c6d2_Const> static__1ee33d68e_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1ee33c6d2_Const>(_1ee33c6d2_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1ee33c6d2_Const> static__1ee33d88c_NewNil(void) {
	return jule::new_ptr<_1ee33c6d2_Const>(_1ee33c6d2_Const{._field_data=nullptr});;
}



inline jule::I64 _1ee33deca_ReadI64(_1ee33c6d2_Const* _self_) {
	if ((!(_1ee341373_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _1ee33e23e_ReadU64(_1ee33c6d2_Const* _self_) {
	if ((!(_1ee3415d7_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _1ee33e4a3_ReadBool(_1ee33c6d2_Const* _self_) {
	if ((!(_1ee34184b_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1ee33e717_ReadStr(_1ee33c6d2_Const* _self_) {
	if ((!(_1ee341ab0_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1ee33e97b_ReadF64(_1ee33c6d2_Const* _self_) {
	if ((!(_1ee341d24_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _1ee33ebe0_AsI64(_1ee33c6d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_204b5ee33:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_204b60593:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_204b60609:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_204b60472:;
			{
				return 0LL;;
			}
		}
		_match_end_204b602c9:;
	};
}



inline jule::U64 _1ee33ee54_AsU64(_1ee33c6d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_204b61d36:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_204b61de1:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_204b61e57:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_204b60b8c:;
			{
				return 0LLU;;
			}
		}
		_match_end_204b60e67:;
	};
}



inline jule::F64 _1ee3401b8_AsF64(_1ee33c6d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_204b63ae6:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_204b635b8:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_204b63662:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_204b6240d:;
			{
				return 0LL;;
			}
		}
		_match_end_204b626d8:;
	};
}



inline void _1ee34043d_SetI64(_1ee33c6d2_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _1ee3406b3_SetU64(_1ee33c6d2_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _1ee340938_SetBool(_1ee33c6d2_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _1ee340bad_SetStr(_1ee33c6d2_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _1ee340e33_SetF64(_1ee33c6d2_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline void _1ee34110e_SetNil(_1ee33c6d2_Const* _self_) {
	(*(_self_))._field_data=nullptr;
}



inline jule::Bool _1ee341373_IsI64(_1ee33c6d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_204b67369:;
			{
				return true;;
			}
		}
		else {
			_case_begin_204b67600:;
			{
				return false;;
			}
		}
		_match_end_204b6759a:;
	};
}



inline jule::Bool _1ee3415d7_IsU64(_1ee33c6d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_204b67eb3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_204b678b9:;
			{
				return false;;
			}
		}
		_match_end_204b67864:;
	};
}



inline jule::Bool _1ee34184b_IsBool(_1ee33c6d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_204b68942:;
			{
				return true;;
			}
		}
		else {
			_case_begin_204b68359:;
			{
				return false;;
			}
		}
		_match_end_204b68304:;
	};
}



inline jule::Bool _1ee341ab0_IsStr(_1ee33c6d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_204b693c1:;
			{
				return true;;
			}
		}
		else {
			_case_begin_204b68cd8:;
			{
				return false;;
			}
		}
		_match_end_204b68c83:;
	};
}



inline jule::Bool _1ee341d24_IsF64(_1ee33c6d2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_204b69d50:;
			{
				return true;;
			}
		}
		else {
			_case_begin_204b69767:;
			{
				return false;;
			}
		}
		_match_end_204b69712:;
	};
}



inline jule::Bool _1ee342088_IsNil(_1ee33c6d2_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1ee342396_AreSameTypes(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _21327_x) {
	{
		
		if ((_1ee341373_IsI64(_self_) == _1ee341373_IsI64(&_21327_x))) {
			_case_begin_204b6b0d7:;
			{
				return true;;
			}
		}
		else if ((_1ee3415d7_IsU64(_self_) == _1ee3415d7_IsU64(&_21327_x))) {
			_case_begin_204b6b14d:;
			{
				return true;;
			}
		}
		else if ((_1ee341d24_IsF64(_self_) == _1ee341d24_IsF64(&_21327_x))) {
			_case_begin_204b6b1b4:;
			{
				return true;;
			}
		}
		else if ((_1ee34184b_IsBool(_self_) == _1ee34184b_IsBool(&_21327_x))) {
			_case_begin_204b6b439:;
			{
				return true;;
			}
		}
		else if ((_1ee341ab0_IsStr(_self_) == _1ee341ab0_IsStr(&_21327_x))) {
			_case_begin_204b6b4a0:;
			{
				return true;;
			}
		}
		else if ((_1ee342088_IsNil(_self_) == _1ee342088_IsNil(&_21327_x))) {
			_case_begin_204b6b516:;
			{
				return true;;
			}
		}
		else {
			_case_begin_204b6aee9:;
			{
				return false;;
			}
		}
		_match_end_204b6ae2d:;
	};
}



inline jule::Bool _1ee3426a4_And(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _23818_x) {
	{
		
		if ((_1ee34184b_IsBool(_self_) && _1ee34184b_IsBool(&_23818_x))) {
			_case_begin_204b6e23e:;
			{
				return (_1ee33e4a3_ReadBool(_self_) && _1ee33e4a3_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_204b6e1c8:;
			{
				return false;;
			}
		}
		_match_end_204b6dcbb:;
	};
}



inline jule::Bool _1ee3429b2_Or(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _24917_x) {
	{
		
		if ((_1ee34184b_IsBool(_self_) && _1ee34184b_IsBool(&_24917_x))) {
			_case_begin_204b70581:;
			{
				return (_1ee33e4a3_ReadBool(_self_) || _1ee33e4a3_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_204b6ec23:;
			{
				return false;;
			}
		}
		_match_end_204b6eb57:;
	};
}



inline jule::Bool _1ee342cc0_Eq(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _26017_x) {
	{
		
		if (_1ee342088_IsNil(_self_)) {
			_case_begin_204b71e45:;
			{
				return _1ee342088_IsNil(&_26017_x);;
			}
		}
		else if (_1ee34184b_IsBool(_self_)) {
			_case_begin_204b718e5:;
			{
				return (_1ee34184b_IsBool(&_26017_x) && (_1ee33e4a3_ReadBool(_self_) == _1ee33e4a3_ReadBool(&_26017_x)));;
			}
		}
		else if (_1ee341ab0_IsStr(_self_)) {
			_case_begin_204b7196c:;
			{
				return (_1ee341ab0_IsStr(&_26017_x) && (_1ee33e717_ReadStr(_self_) == _1ee33e717_ReadStr(&_26017_x)));;
			}
		}
		else if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b71bae:;
			{
				return (_1ee33deca_ReadI64(_self_) == _1ee33ebe0_AsI64(&_26017_x));;
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b71c25:;
			{
				return (_1ee33e23e_ReadU64(_self_) == _1ee33ee54_AsU64(&_26017_x));;
			}
		}
		else if (_1ee341d24_IsF64(_self_)) {
			_case_begin_204b71c8b:;
			{
				return (_1ee33e97b_ReadF64(_self_) == _1ee3401b8_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_204b70eee:;
			{
				return false;;
			}
		}
		_match_end_204b70e33:;
	};
}



inline jule::Bool _1ee3430cd_Lt(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _28717_x) {
	{
		
		if (_1ee341ab0_IsStr(_self_)) {
			_case_begin_204b75531:;
			{
				return (_1ee341ab0_IsStr(&_28717_x) && (_1ee33e717_ReadStr(_self_) < _1ee33e717_ReadStr(&_28717_x)));;
			}
		}
		else if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b75597:;
			{
				return (_1ee33deca_ReadI64(_self_) < _1ee33ebe0_AsI64(&_28717_x));;
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b7561e:;
			{
				return (_1ee33e23e_ReadU64(_self_) < _1ee33ee54_AsU64(&_28717_x));;
			}
		}
		else if (_1ee341d24_IsF64(_self_)) {
			_case_begin_204b75696:;
			{
				return (_1ee33e97b_ReadF64(_self_) < _1ee3401b8_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_204b722db:;
			{
				return false;;
			}
		}
		_match_end_204b72220:;
	};
}



inline jule::Bool _1ee3433db_LtEq(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _31019_x) {
	{
		
		if (_1ee341ab0_IsStr(_self_)) {
			_case_begin_204b781e3:;
			{
				return (_1ee341ab0_IsStr(&_31019_x) && (_1ee33e717_ReadStr(_self_) <= _1ee33e717_ReadStr(&_31019_x)));;
			}
		}
		else if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b78259:;
			{
				return (_1ee33deca_ReadI64(_self_) <= _1ee33ebe0_AsI64(&_31019_x));;
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b782d1:;
			{
				return (_1ee33e23e_ReadU64(_self_) <= _1ee33ee54_AsU64(&_31019_x));;
			}
		}
		else if (_1ee341d24_IsF64(_self_)) {
			_case_begin_204b78358:;
			{
				return (_1ee33e97b_ReadF64(_self_) <= _1ee3401b8_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_204b75e27:;
			{
				return false;;
			}
		}
		_match_end_204b75d5b:;
	};
}



inline jule::Bool _1ee3436e9_Gt(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _33317_x) {
	{
		
		if (_1ee341ab0_IsStr(_self_)) {
			_case_begin_204b7ada5:;
			{
				return (_1ee341ab0_IsStr(&_33317_x) && (_1ee33e717_ReadStr(_self_) > _1ee33e717_ReadStr(&_33317_x)));;
			}
		}
		else if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b7ae1b:;
			{
				return (_1ee33deca_ReadI64(_self_) > _1ee33ebe0_AsI64(&_33317_x));;
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b7ae93:;
			{
				return (_1ee33e23e_ReadU64(_self_) > _1ee33ee54_AsU64(&_33317_x));;
			}
		}
		else if (_1ee341d24_IsF64(_self_)) {
			_case_begin_204b7b01a:;
			{
				return (_1ee33e97b_ReadF64(_self_) > _1ee3401b8_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_204b78ad9:;
			{
				return false;;
			}
		}
		_match_end_204b78a1d:;
	};
}



inline jule::Bool _1ee343a07_GtEq(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _35619_x) {
	{
		
		if (_1ee341ab0_IsStr(_self_)) {
			_case_begin_204b7da67:;
			{
				return (_1ee341ab0_IsStr(&_35619_x) && (_1ee33e717_ReadStr(_self_) >= _1ee33e717_ReadStr(&_35619_x)));;
			}
		}
		else if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b7dacd:;
			{
				return (_1ee33deca_ReadI64(_self_) >= _1ee33ebe0_AsI64(&_35619_x));;
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b7db55:;
			{
				return (_1ee33e23e_ReadU64(_self_) >= _1ee33ee54_AsU64(&_35619_x));;
			}
		}
		else if (_1ee341d24_IsF64(_self_)) {
			_case_begin_204b7dbcc:;
			{
				return (_1ee33e97b_ReadF64(_self_) >= _1ee3401b8_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_204b7b79b:;
			{
				return false;;
			}
		}
		_match_end_204b7b6d0:;
	};
}



inline jule::Bool _1ee343d15_Add(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _37722_x) {
	{
		
		if (_1ee341ab0_IsStr(_self_)) {
			_case_begin_204b81729:;
			{
				if ((!(_1ee341ab0_IsStr(&_37722_x)))) {
					return false;;
				};
				_1ee340bad_SetStr(_self_, (_1ee33e717_ReadStr(_self_) + _1ee33e717_ReadStr(&_37722_x)));
			}
		}
		else if (_1ee341d24_IsF64(_self_)) {
			_case_begin_204b81790:;
			{
				_1ee340e33_SetF64(_self_, static_cast<jule::F64>((_1ee33e97b_ReadF64(_self_) + _1ee3401b8_AsF64(&_37722_x))));
			}
		}
		else if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b81817:;
			{
				if (_1ee341d24_IsF64(&_37722_x)) {
					_1ee340e33_SetF64(_self_, static_cast<jule::F64>((_1ee3401b8_AsF64(_self_) + _1ee33e97b_ReadF64(&_37722_x))));
				} else {
					_1ee34043d_SetI64(_self_, static_cast<jule::I64>((_1ee33deca_ReadI64(_self_) + _1ee33ebe0_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b8188e:;
			{
				if (_1ee341d24_IsF64(&_37722_x)) {
					_1ee340e33_SetF64(_self_, static_cast<jule::F64>((_1ee3401b8_AsF64(_self_) + _1ee33e97b_ReadF64(&_37722_x))));
				} else {
					_1ee3406b3_SetU64(_self_, static_cast<jule::U64>((_1ee33e23e_ReadU64(_self_) + _1ee33ee54_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_204b7e45d:;
			{
				return false;;
			}
		}
		_match_end_204b7e392:;
	};
	return true;;
}



inline jule::Bool _1ee344123_Sub(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _40622_x) {
	{
		
		if (_1ee341d24_IsF64(_self_)) {
			_case_begin_204b86674:;
			{
				_1ee340e33_SetF64(_self_, static_cast<jule::F64>((_1ee33e97b_ReadF64(_self_) - _1ee3401b8_AsF64(&_40622_x))));
			}
		}
		else if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b866da:;
			{
				if (_1ee341d24_IsF64(&_40622_x)) {
					_1ee340e33_SetF64(_self_, static_cast<jule::F64>((_1ee3401b8_AsF64(_self_) - _1ee33e97b_ReadF64(&_40622_x))));
				} else {
					_1ee34043d_SetI64(_self_, static_cast<jule::I64>((_1ee33deca_ReadI64(_self_) - _1ee33ebe0_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b86751:;
			{
				if (_1ee341d24_IsF64(&_40622_x)) {
					_1ee340e33_SetF64(_self_, static_cast<jule::F64>((_1ee3401b8_AsF64(_self_) - _1ee33e97b_ReadF64(&_40622_x))));
				} else {
					_1ee3406b3_SetU64(_self_, static_cast<jule::U64>((_1ee33e23e_ReadU64(_self_) - _1ee33ee54_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_204b85e9d:;
			{
				return false;;
			}
		}
		_match_end_204b85dd2:;
	};
	return true;;
}



inline jule::Bool _1ee344431_Mul(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _43022_x) {
	{
		
		if (_1ee341d24_IsF64(_self_)) {
			_case_begin_204b8a733:;
			{
				_1ee340e33_SetF64(_self_, static_cast<jule::F64>((_1ee33e97b_ReadF64(_self_) * _1ee3401b8_AsF64(&_43022_x))));
			}
		}
		else if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b8a799:;
			{
				if (_1ee341d24_IsF64(&_43022_x)) {
					_1ee340e33_SetF64(_self_, static_cast<jule::F64>((_1ee3401b8_AsF64(_self_) * _1ee33e97b_ReadF64(&_43022_x))));
				} else {
					_1ee34043d_SetI64(_self_, static_cast<jule::I64>((_1ee33deca_ReadI64(_self_) * _1ee33ebe0_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b8a810:;
			{
				if (_1ee341d24_IsF64(&_43022_x)) {
					_1ee340e33_SetF64(_self_, static_cast<jule::F64>((_1ee3401b8_AsF64(_self_) * _1ee33e97b_ReadF64(&_43022_x))));
				} else {
					_1ee3406b3_SetU64(_self_, static_cast<jule::U64>((_1ee33e23e_ReadU64(_self_) * _1ee33ee54_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_204b89e19:;
			{
				return false;;
			}
		}
		_match_end_204b89d4d:;
	};
	return true;;
}



inline jule::Bool _1ee34473e_Div(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _45822_x) {
	{
		
		if (_1ee341d24_IsF64(_self_)) {
			_case_begin_204b8e7e2:;
			{
				jule::F64 _46117_l = _1ee3401b8_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1ee340e33_SetF64(_self_, static_cast<jule::F64>(jule::div(_1ee33e97b_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b8e858:;
			{
				jule::F64 _46717_l = _1ee3401b8_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1ee340e33_SetF64(_self_, static_cast<jule::F64>(jule::div(_1ee3401b8_AsF64(_self_),_46717_l)));
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b8e8be:;
			{
				jule::F64 _47317_l = _1ee3401b8_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1ee340e33_SetF64(_self_, static_cast<jule::F64>(jule::div(_1ee3401b8_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_204b8dec8:;
			{
				return false;;
			}
		}
		_match_end_204b8de0c:;
	};
	return true;;
}



inline jule::Bool _1ee344a4c_Mod(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _48722_x) {
	{
		
		if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b939e4:;
			{
				jule::I64 _49017_l = _1ee33ebe0_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1ee34043d_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1ee33deca_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b93a5a:;
			{
				jule::U64 _49617_l = _1ee33ee54_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1ee3406b3_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1ee33e23e_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_204b9397d:;
			{
				return false;;
			}
		}
		_match_end_204b900b7:;
	};
	return true;;
}



inline jule::Bool _1ee344d5a_BitwiseAnd(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _50929_x) {
	{
		
		if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b9692b:;
			{
				_1ee34043d_SetI64(_self_, static_cast<jule::I64>((_1ee33deca_ReadI64(_self_) & _1ee33ebe0_AsI64(&_50929_x))));
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b96992:;
			{
				_1ee3406b3_SetU64(_self_, static_cast<jule::U64>((_1ee33e23e_ReadU64(_self_) & _1ee33ee54_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_204b968b5:;
			{
				return false;;
			}
		}
		_match_end_204b95584:;
	};
	return true;;
}



inline jule::Bool _1ee345168_BitwiseOr(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _52328_x) {
	{
		
		if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b98796:;
			{
				_1ee34043d_SetI64(_self_, static_cast<jule::I64>((_1ee33deca_ReadI64(_self_) | _1ee33ebe0_AsI64(&_52328_x))));
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b9880c:;
			{
				_1ee3406b3_SetU64(_self_, static_cast<jule::U64>((_1ee33e23e_ReadU64(_self_) | _1ee33ee54_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_204b98730:;
			{
				return false;;
			}
		}
		_match_end_204b98675:;
	};
	return true;;
}



inline jule::Bool _1ee345476_Xor(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _53722_x) {
	{
		
		if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b9a633:;
			{
				_1ee34043d_SetI64(_self_, static_cast<jule::I64>((_1ee33deca_ReadI64(_self_) ^ _1ee33ebe0_AsI64(&_53722_x))));
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b9a699:;
			{
				_1ee3406b3_SetU64(_self_, static_cast<jule::U64>((_1ee33e23e_ReadU64(_self_) ^ _1ee33ee54_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_204b9a5bc:;
			{
				return false;;
			}
		}
		_match_end_204b9a512:;
	};
	return true;;
}



inline jule::Bool _1ee345784_Lshift(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _55125_x) {
	{
		
		if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b9c4c0:;
			{
				jule::I64 _55417_l = _1ee33ebe0_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1ee33ee54_AsU64(&_55125_x);;
					_1ee34043d_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1ee345e05_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b9c536:;
			{
				_1ee345e05_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_204b9c459:;
			{
				return false;;
			}
		}
		_match_end_204b9c39e:;
	};
	return true;;
}



inline jule::Bool _1ee345a92_Rshift(_1ee33c6d2_Const* _self_, _1ee33c6d2_Const _57125_x) {
	{
		
		if (_1ee341373_IsI64(_self_)) {
			_case_begin_204b9ea99:;
			{
				jule::I64 _57417_l = _1ee33ebe0_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1ee33ee54_AsU64(&_57125_x);;
					_1ee34043d_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1ee346202_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1ee3415d7_IsU64(_self_)) {
			_case_begin_204b9eb10:;
			{
				_1ee346202_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_204b9ea33:;
			{
				return false;;
			}
		}
		_match_end_204b9e967:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ee33c6d2_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200d46041_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200d46ddd_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200d472d9_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200eda6ad_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200edac74_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200edb060_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200edb3d4_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200edb6c0_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200edbabb_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200edbda7_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _200edc4e5_IsUnsafe(_200edc193_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _200edc193_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _200edcbbb_AutoSized(_200edc869_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _200edc869_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200edd073_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200edd42a_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ede838_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200edeb24_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee01c9_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee04b5_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _200ee0bbe_IsNil(_200ee086c_LitExpr* _self_) {
	return (*(_self_))._field_Value.equal("nil", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee086c_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee0eaa_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _200ee1780_IsSelf(_200ee142d_IdentExpr* _self_) {
	return (*(_self_))._field_Ident.equal("self", 4);;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee142d_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee1b37_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee1ede_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee2396_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee274d_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee2bc1_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee3144_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _200ee3ab2_Unhandled(_200ee374e_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _200ee3d26_Ignored(_200ee374e_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee374e_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _200ee4530_IsTargeted(_200ee41cd_FieldExprPair* _self_) {
	return ((*(_self_))._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee41cd_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee49a3_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _200ee5278_IsEmpty(_200ee4e26_BraceLit* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee4e26_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee580b_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _200ee629b_IsEmpty(_200ee5e7c_SliceExpr* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee5e7c_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee67da_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee6de5_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee71d1_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee7654_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee7a0b_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee7db3_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee819e_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee87a9_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee8ce8_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200ee9bd9_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200eea2e4_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _200eead2d_IsSelf(_200eea9ba_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _200eeb092_IsRef(_200eea9ba_ParamDecl* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _200eea9ba_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _200eec13c_IsAnon(_200eebcda_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _200eebcda_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200eeccb9_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200eed171_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _200eedb33_IsInf(_200eed7d1_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _200eed7d1_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _200eee408_IsWhileNext(_200eee0a6_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _200eee0a6_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200eee947_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200eeecee_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2010001a6_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201000629_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2010009d1_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201000e54_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20100162a_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201001a9d_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201002274_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201002a16_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2010032db_AutoExpr(_201002e89_EnumItemDecl* _self_) {
	return ((*(_self_))._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _201002e89_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _201003d14_DefaultTyped(_2010039b2_EnumDecl* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2010039b2_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201004287_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201004892_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201004b06_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201005453_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201005b29_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _201006597_IsTraitImpl(_201006234_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _20100680b_IsStructImpl(_201006234_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _201006234_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20100c57b_FieldIns> _2010079e9_instance(jule::Ptr<_201007686_Field> _self_) {
	return jule::new_ptr<_20100c57b_FieldIns>(_20100c57b_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _201007686_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201009446_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20100d071_StructIns> _20100a6bc_instance(jule::Ptr<_20100a25a_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_20100d071_StructIns> _9917_ins = jule::new_ptr<_20100d071_StructIns>(_20100d071_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_20100c57b_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_2010a4975_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__201026474_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204e92155:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> _10621_s = *it;
			{
				{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = _9917_ins.get()._field_Statics; __jule_push_dest.push(jule::new_ptr<_2010a4975_Var>((*(_10621_s)))); };
			}
			_iter_next_204e92155:;
			++it;
			goto _iter_begin_204e92155;
		}
		_iter_end_204e92155:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204e934b9:;
		if (it != expr_end) {
			jule::Ptr<_201007686_Field> _11021_f = *it;
			{
				{ jule::Slice<jule::Ptr<_20100c57b_FieldIns>> &__jule_push_dest = _9917_ins.get()._field_Fields; __jule_push_dest.push(_2010079e9_instance(_11021_f)); };
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _20113288d_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_204e934b9:;
			++it;
			goto _iter_begin_204e934b9;
		}
		_iter_end_204e934b9:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_20102065a_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_204e95422:;
			if (it != expr_end) {
				jule::Ptr<_20102065a_Fn> _12125_f = *it;
				{
					jule::Ptr<_20102065a_Fn> _12225_fins = jule::new_ptr<_20102065a_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_20102065a_Fn>> &__jule_push_dest = _9917_ins.get()._field_Methods; __jule_push_dest.push(_12225_fins); };
				}
				_iter_next_204e95422:;
				++it;
				goto _iter_begin_204e95422;
			}
			_iter_end_204e95422:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_20100d071_StructIns> _20100a997_appendInstance(_20100a25a_Struct* _self_, jule::Ptr<_20100d071_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204e97688:;
		if (it != expr_end) {
			jule::Ptr<_20100d071_StructIns> _13921_ains = *it;
			{
				if (_20100db65_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_204e97688:;
			++it;
			goto _iter_begin_204e97688;
		}
		_iter_end_204e97688:;
	};
	{ jule::Slice<jule::Ptr<_20100d071_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13338_ins))); };
	return nullptr;;
}



inline jule::Ptr<_20102065a_Fn> _20100ad4e_FindMethod(_20100a25a_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204e98a96:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_204e98a96:;
			++it;
			goto _iter_begin_204e98a96;
		}
		_iter_end_204e98a96:;
	};
	return nullptr;;
}



inline jule::Ptr<_2010a4975_Var> _20100b15c_FindStatic(_20100a25a_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204e992b1:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_204e992b1:;
			++it;
			goto _iter_begin_204e992b1;
		}
		_iter_end_204e992b1:;
	};
	return nullptr;;
}



inline jule::Ptr<_201007686_Field> _20100b46a_FindField(_20100a25a_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204e9aa98:;
		if (it != expr_end) {
			jule::Ptr<_201007686_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_204e9aa98:;
			++it;
			goto _iter_begin_204e9aa98;
		}
		_iter_end_204e9aa98:;
	};
	return nullptr;;
}



inline jule::Bool _20100b778_IsImplements(_20100a25a_Struct* _self_, jule::Ptr<_20103287b_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204e9b978:;
		if (it != expr_end) {
			jule::Ptr<_20103287b_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_204e9b978:;
			++it;
			goto _iter_begin_204e9b978;
		}
		_iter_end_204e9b978:;
	};
	return false;;
}



inline jule::Bool _20100ba86_IsDerives(_20100a25a_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204e9beea:;
		if (it != expr_end) {
			jule::Ptr<_200d472d9_Directive> *_19416_d = it;
			{
				if ((*(_19416_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_204e9beea:;
			++it;
			goto _iter_begin_204e9beea;
		}
		_iter_end_204e9beea:;
	};
	return false;;
}



inline jule::Bool _20100bd94_IsUses(_20100a25a_Struct* _self_, jule::Ptr<_20100a25a_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204e9e3b5:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_204e9eb35:;
				}
				_iter_end_204e9eb35:;;
			}
			_iter_next_204e9e3b5:;
			++it;
			goto _iter_begin_204e9e3b5;
		}
		_iter_end_204e9e3b5:;
	};
	return false;;
}



inline jule::Bool _20100c108_HasRefAccessible(_20100a25a_Struct* _self_) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204ea01a7:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> *_21616_m = it;
			{
				if ((((*(_21616_m)).get()._field_Params.len() > 0LL) && _20101e66a_IsRef((*(_21616_m)).get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_204ea01a7:;
			++it;
			goto _iter_begin_204ea01a7;
		}
		_iter_end_204ea01a7:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _20100a25a_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20100c57b_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201012020_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2010124d7_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101288e_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201012c8a_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201013142_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201013450_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2010139a0_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201014352_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201014709_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201014b7c_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201015034_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2010153db_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101585e_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201015d9d_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2010163dc_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201016bc3_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201017069_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201017432_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101771d_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201017c7e_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101807b_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201018455_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201018840_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201018b5e_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201019049_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201019434_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2010198da_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201019d91_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101a27b_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101a59a_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101a8b9_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101b06d_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101b3d1_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101b7bb_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101bab8_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101bda4_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101c190_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101c49d_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101c866_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101cb52_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20101d614_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20102243c_ParamIns> _20101e192_instance(jule::Ptr<_20101dd1d_Param> _self_) {
	return jule::new_ptr<_20102243c_ParamIns>(_20102243c_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _20101e406_IsSelf(_20101dd1d_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _20101e66a_IsRef(_20101dd1d_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _20101dd1d_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _201020abc_IsVoid(_20102065a_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _201020d31_IsMethod(_20102065a_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _201021095_IsEntryPoint(_20102065a_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _201021309_IsInit(_20102065a_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _20102156d_IsAnon(_20102065a_Fn* _self_) {
	return _1ed6978c8_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _2010217d2_AnyVar(_20102065a_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_20102330b_FnIns> _201021a46_instanceForce(jule::Ptr<_20102065a_Fn> _self_) {
	jule::Ptr<_20102330b_FnIns> _10017_ins = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_20105c92d_Scope>(), ._field_Refers=static__201026474_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_20102243c_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204eb263c:;
		if (it != expr_end) {
			jule::Ptr<_20101dd1d_Param> _10721_p = *it;
			{
				{ jule::Slice<jule::Ptr<_20102243c_ParamIns>> &__jule_push_dest = _10017_ins.get()._field_Params; __jule_push_dest.push(_20101e192_instance(_10721_p)); };
			}
			_iter_next_204eb263c:;
			++it;
			goto _iter_begin_204eb263c;
		}
		_iter_end_204eb263c:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_20102330b_FnIns> _201021caa_instance(jule::Ptr<_20102065a_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _201021a46_instanceForce(_self_);;
}



inline jule::Ptr<_20102330b_FnIns> _201022085_appendInstance(_20102065a_Fn* _self_, jule::Ptr<_20102330b_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_20102330b_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_20102330b_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204eb6971:;
		if (it != expr_end) {
			jule::Ptr<_20102330b_FnIns> _14421_ains = *it;
			{
				if (_201024c14_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_204eb6971:;
			++it;
			goto _iter_begin_204eb6971;
		}
		_iter_end_204eb6971:;
	};
	{ jule::Slice<jule::Ptr<_20102330b_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20102065a_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20102278e_Str(_20102243c_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		(_16617_s).append("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		(_16617_s).append("&_:", 3);
	};
	if (_20101e406_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_20101e66a_IsRef((*(_self_))._field_Decl.ptr())) {
			(_16617_s).append("&", 1);
		};
		(_16617_s).append("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		(_16617_s).append("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_2011314a2_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _20102243c_ParamIns _Src) {
	_Stream << _20102278e_Str(&_Src);
	return _Stream;
}



inline jule::Str _20102363b_Str(_20102330b_FnIns* _self_) {
	;
	return _201025022_GetKindStr(_self_, false);;
}



inline jule::Bool _201023949_Equal(jule::Ptr<_20102330b_FnIns> _self_, jule::Ptr<_2011310ea_TypeKind> _21721_other) {
	jule::Ptr<_20102330b_FnIns> _21813_f = _201134a05_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _201023dab_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _201023dab_EqualFn(jule::Ptr<_20102330b_FnIns> _self_, jule::Ptr<_20102330b_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_201020abc_IsVoid(_self_.get()._field_Decl.ptr()) != _201020abc_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_20102243c_ParamIns>,jule::Ptr<_20102243c_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_20102243c_ParamIns>,jule::Ptr<_20102243c_ParamIns>)>([=](jule::Ptr<_20102243c_ParamIns> _23830_p1, jule::Ptr<_20102243c_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_20101e406_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_20101e406_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_20101e66a_IsRef(_23830_p1.get()._field_Decl.ptr()) != _20101e66a_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _2011317b0_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I32 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_204ec4154:;
	}
	_iter_end_204ec4154:;;
	if ((!(_201020abc_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_2011317b0_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _2010241b9_equalTrait(jule::Ptr<_20102330b_FnIns> _self_, jule::Ptr<_20102330b_FnIns>* _28727_other) {
	if ((_self_.get()._field_Decl.get()._field_Public != (*(_28727_other)).get()._field_Decl.get()._field_Public)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Ident != (*(_28727_other)).get()._field_Decl.get()._field_Ident)) {
		return false;;
	};
	if ((!(_201023dab_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_2011310ea_TypeKind>> _20102442d_Types(_20102330b_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_204ec8125:;
			{
				return nullptr;;
			}
		}
		else if ((_2011354a6_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_204ec818b:;
			{
				return jule::Slice<jule::Ptr<_2011310ea_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_204ec80ae:;
			{
				return _2011354a6_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_204ec7ee3:;
	};
}



inline jule::Bool _201024692_IsBuiltin(_20102330b_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _201024906_IsAnon(_20102330b_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _20102156d_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _201024c14_Same(_20102330b_FnIns* _self_, jule::Ptr<_20102330b_FnIns> _33019_f) {
	if ((((*(_self_))._field_Decl != _33019_f.get()._field_Decl) || (_33019_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204ecb458:;
		if (it != expr_end) {
			jule::I32 _33513_i = it - expr->begin();
			jule::Ptr<_20112e868_InsGeneric> *_33516_g = it;
			{
				jule::Ptr<_20112e868_InsGeneric> _33617_g2 = _33019_f.get()._field_Generics[_33513_i];;
				if ((((*(_33516_g)).get()._field_Kind.get()._field_BindIdent != _33617_g2.get()._field_Kind.get()._field_BindIdent) || (!(_2011317b0_Equal((*(_33516_g)).get()._field_Kind, _33617_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_204ecb458:;
			++it;
			_33513_i++;
			goto _iter_begin_204ecb458;
		}
		_iter_end_204ecb458:;
	};
	return true;;
}



inline jule::Str _201025022_GetKindStr(_20102330b_FnIns* _self_, jule::Bool _34725_ident) {
	jule::Str _34817_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		(_34817_s).append("unsafe ", 7);
	};
	(_34817_s).append("fn", 2);
	if ((_34725_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34817_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	(_34817_s).append("(", 1);
	jule::I32 _36113_n = (*(_self_))._field_Params.len();;
	if ((_36113_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_204ed04d4:;
			if (it != expr_end) {
				jule::Ptr<_20102243c_ParamIns> *_36320_p = it;
				{
					_34817_s+=_20102278e_Str((*(_36320_p)).ptr());
					(_34817_s).append(",", 1);
				}
				_iter_next_204ed04d4:;
				++it;
				goto _iter_begin_204ed04d4;
			}
			_iter_end_204ed04d4:;
		};
		(_34817_s).mut_slice(0LL, (_34817_s.len() - 1LL));;
	};
	(_34817_s).append(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		(_34817_s).append("!", 1);
	};
	if ((!(_201020abc_IsVoid((*(_self_))._field_Decl.ptr())))) {
		(_34817_s).append(":", 1);
		_34817_s+=_2011314a2_Str((*(_self_))._field_Result.ptr());
	};
	return _34817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _20102330b_FnIns _Src) {
	_Stream << _20102363b_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_201026265_ReferenceStack> static__201026474_new(void) {
	return jule::new_ptr<_201026265_ReferenceStack>(_201026265_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I32 _20102684d_Len(_201026265_ReferenceStack* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_buffer.len());;
}



inline jule::Any _201026b5b_At(_201026265_ReferenceStack* _self_, jule::I32 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _201026dd1_Push(_201026265_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _2056b9ecb_Exist(_201026265_ReferenceStack* _self_, jule::Ptr<_20102330b_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2056bb2a7:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_2056bb2a7:;
			++it;
			goto _iter_begin_2056bb2a7;
		}
		_iter_end_2056bb2a7:;
	};
	return false;;
}

inline jule::Bool _2056cd385_Exist(_201026265_ReferenceStack* _self_, jule::Ptr<_2010a4975_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2056ce61c:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_2056ce61c:;
			++it;
			goto _iter_begin_2056ce61c;
		}
		_iter_end_2056ce61c:;
	};
	return false;;
}

inline jule::Bool _20576c59a_Exist(_201026265_ReferenceStack* _self_, jule::Ptr<_20100d071_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20576d876:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_20576d876:;
			++it;
			goto _iter_begin_20576d876;
		}
		_iter_end_20576d876:;
	};
	return false;;
}

inline jule::Bool _205a05d2d_Exist(_201026265_ReferenceStack* _self_, jule::Ptr<_20103287b_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205a07082:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_205a07082:;
			++it;
			goto _iter_begin_205a07082;
		}
		_iter_end_205a07082:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _201026265_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201027596_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20102bcd7_symbolBuilder> _20102c26b_getRoot(jule::Ptr<_20102bcd7_symbolBuilder> _self_) {
	jule::Ptr<_20102bcd7_symbolBuilder> _32517_root = _self_;;
	while ((_32517_root.get()._field_owner != nullptr)) {
		{
			_32517_root=_32517_root.get()._field_owner;
		}
	_iter_next_204ee872d:;
	}
	_iter_end_204ee872d:;;
	return _32517_root;;
}



inline void _20102c612_pushErr(_20102bcd7_symbolBuilder* _self_, jule::Ptr<_1ed694d8c_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_2193a460d_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_20108248b_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _20102c9ca_pushErrText(_20102bcd7_symbolBuilder* _self_, jule::Ptr<_1ed694d8c_Token>* _33631_token, jule::Str _33646_fmt, jule::Slice<jule::Any> _33659_args) {
	{ jule::Slice<_2193a460d_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_20108248b_compilerErr(_33631_token, false, _33646_fmt, _33659_args)); };
}



inline void _20102cce9_pushSuggestion(_20102bcd7_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_201083921_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _20102d1a1_checkCppUseDeclPath(_20102bcd7_symbolBuilder* _self_, jule::Ptr<_201002a16_UseDecl>* _34539_decl, jule::Str _34555_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _2193233e5_Ext(_34555_path);;
	if (((!(_219396d92_IsValidHeaderExt(_34613_ext))) && (!(_219397139_IsValidCppExt(_34613_ext))))) {
		_20102c612_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_217da8c3a_Status> _35313_info = ({
		auto except = static__219325419_Of(_34555_path);
		(except.ok()) ? (except.result) : ({{
			_20102c612_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_217da8c3a_Status>(nullptr);});
	});;
	if (_217da9103_IsDir(_35313_info.ptr())) {
		_20102c612_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20107b397_ImportInfo> _20102d47b_buildCppHeaderImport(_20102bcd7_symbolBuilder* _self_, jule::Ptr<_201002a16_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*(_36544_decl)).get()._field_LinkPath;;
	if ((!(_219396ad9_IsStdHeaderPath((*(_36544_decl)).get()._field_LinkPath)))) {
		_36617_path=_21932314d_Join(jule::Slice<jule::Str>::make({_1ed69a854_Dir((*(_36544_decl)).get()._field_Token.get()._field_File.ptr()),(*(_36544_decl)).get()._field_LinkPath}));
		jule::Bool _37021_ok = _20102d1a1_checkCppUseDeclPath(_self_, _36544_decl, _36617_path);;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21932368c_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_20102c612_pushErr(_self_, &((*(_36544_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_36544_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_20107b397_ImportInfo>(_20107b397_ImportInfo{._field_Token=(*(_36544_decl)).get()._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*(_36544_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_20107b397_ImportInfo> _20102d789_buildStdImport(_20102bcd7_symbolBuilder* _self_, jule::Ptr<_201002a16_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*(_39338_decl)).get()._field_LinkPath.slice(5LL);;
	_39417_path=_21931e28c_Replace(_39417_path, jule::Str("::", 2), jule::Str("\\", 1), -1LL);
	_39417_path=_21932314d_Join(jule::Slice<jule::Str>::make({_21ab64718_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21932368c_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_20102c612_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_217da8c3a_Status> _40413_info = ({
		auto except = static__219325419_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_20102c612_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_217da8c3a_Status>(nullptr);});
	});;
	if ((!(_217da9103_IsDir(_40413_info.ptr())))) {
		_20102c612_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _41413_i = (_219319a7e_FindLast((*(_39338_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*(_39338_decl)).get()._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_20107b397_ImportInfo>(_20107b397_ImportInfo{._field_Token=(*(_39338_decl)).get()._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*(_39338_decl)).get()._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*(_39338_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*(_39338_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_20107ded2_Package>(_20107ded2_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_20107b397_ImportInfo> _20102da97_buildIdentImport(jule::Ptr<_20102bcd7_symbolBuilder> _self_, jule::Ptr<_201002a16_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _2010786e6_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20107785a_GetModPath(_self_.get()._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_20102c612_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_20102cce9_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*(_43241_decl)).get()._field_LinkPath;;
	_44017_path=_21931e28c_Replace(_44017_path, jule::Str("::", 2), jule::Str("\\", 1), -1LL);
	_44017_path=_21932314d_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21932368c_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_20102c612_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_217da8c3a_Status> _45113_info = ({
		auto except = static__219325419_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_20102c612_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_217da8c3a_Status>(nullptr);});
	});;
	if ((!(_217da9103_IsDir(_45113_info.ptr())))) {
		_20102c612_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _46113_i = (_219319a7e_FindLast((*(_43241_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*(_43241_decl)).get()._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_20107b397_ImportInfo>(_20107b397_ImportInfo{._field_Token=(*(_43241_decl)).get()._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*(_43241_decl)).get()._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*(_43241_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*(_43241_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_20107ded2_Package>(_20107ded2_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_20107b397_ImportInfo> _20102dda5_buildImport(jule::Ptr<_20102bcd7_symbolBuilder> _self_, jule::Ptr<_201002a16_UseDecl>* _47936_decl) {
	{
		
		if ((*(_47936_decl)).get()._field_Binded) {
			_case_begin_20501005d:;
			{
				return _20102d47b_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*(_47936_decl)).get()._field_Std) {
			_case_begin_2050102a0:;
			{
				return _20102d789_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_20500e865:;
			{
				return _20102da97_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_20500e7aa:;
	};
}



inline jule::Bool _20102e1b3_checkDuplicateUseDecl(_20102bcd7_symbolBuilder* _self_, jule::Ptr<_20107b397_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20107b397_ImportInfo> _49213_lpkg = _2010e95d0_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)>([=](jule::Ptr<_20107b397_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*(_49041_pkg)).get()._field_Path == _49248_spkg.get()._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_20102c612_pushErr(_self_, &((*(_49041_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_49041_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_20102cce9_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _20102e4d2_implImportSelections(_20102bcd7_symbolBuilder* _self_, jule::Ptr<_20107b397_ImportInfo>* _50444_imp, jule::Ptr<_201002a16_UseDecl>* _50467_decl) {
	(*(_50444_imp)).get()._field_Selected=(*(_50467_decl)).get()._field_Selected;
	{
		auto expr = &((*(_50444_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2050139bd:;
		if (it != expr_end) {
			jule::Ptr<_1ed694d8c_Token> _50616_item = *it;
			{
				{
					auto expr = &((*(_50444_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2050141e9:;
					if (it != expr_end) {
						jule::Ptr<_1ed694d8c_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_2050141e9;
							} else if ((_50616_item.get()._field_Kind == _50720_citem.get()._field_Kind)) {
								_20102c612_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_50616_item.get()._field_Kind, &__jule_any_type5)}));
								_20102cce9_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_2050141e9;
							};
						}
						_iter_next_2050141e9:;
						++it;
						goto _iter_begin_2050141e9;
					}
					_iter_end_2050141e9:;
				};
			}
			_iter_next_2050139bd:;
			++it;
			goto _iter_begin_2050139bd;
		}
		_iter_end_2050139bd:;
	};
}



inline jule::Str _20102e7e0_getAsLinkPath(jule::Ptr<_20102bcd7_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_219318297_HasPrefix(_51937_path, _21ab64718_PathStdlib)) {
		(_51937_path).mut_slice(_21ab64718_PathStdlib.len());;
		return (jule::Str("std", 3) + _21931e28c_Replace(_51937_path, jule::Str("\\", 1), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21932368c_Abs(_2010786e6_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20107785a_GetModPath(_self_.get()._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 92LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _21931e28c_Replace(_51937_path, jule::Str("\\", 1), jule::Str("::", 2), -1LL);;
}



inline void _20102eba8_pushCycleError(jule::Ptr<_20102bcd7_symbolBuilder> _self_, jule::Ptr<_20102bcd7_symbolBuilder>* _53335_sb, jule::Str _53355_path, jule::Str* _53371_message) {
	;
	jule::Str _53513_refersTo = _2193a4a4d_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_20102e7e0_getAsLinkPath(_self_, _1ed69a854_Dir((*(_53335_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_20102e7e0_getAsLinkPath(_self_, _53355_path), &__jule_any_type5)}));;
	((*(_53371_message))).buffer.insert(0, (((_219317a27_Repeat(jule::Str(" ", 1), 7LL) + _53513_refersTo) + jule::Str("\n", 1))));;
}



inline void _201030071_pushCrossCycleError(jule::Ptr<_20102bcd7_symbolBuilder> _self_, jule::Ptr<_20102bcd7_symbolBuilder>* _54240_target, jule::Ptr<_20107b397_ImportInfo>* _54265_imp, jule::Ptr<_1ed694d8c_Token>* _54284_errorToken) {
	jule::Str _54317_message = jule::Str();;
	_20102eba8_pushCycleError(_self_, &(_self_), (*(_54265_imp)).get()._field_Path, &(_54317_message));
	jule::Ptr<_20102bcd7_symbolBuilder> _54717_owner = _self_.get()._field_owner;;
	jule::Ptr<_20102bcd7_symbolBuilder> _54817_old = _self_;;
	while ((_54717_owner.get()._field_owner != nullptr)) {
		{
			_20102eba8_pushCycleError(_self_, &(_54817_old.get()._field_owner), _1ed69a854_Dir(_54817_old.get()._field_table.get()._field_File.ptr()), &(_54317_message));
			if ((_54717_owner.get()._field_owner == (*(_54240_target)))) {
				_20102eba8_pushCycleError(_self_, _54240_target, _1ed69a854_Dir(_54717_owner.get()._field_table.get()._field_File.ptr()), &(_54317_message));
				goto _iter_end_20501b344;
			};
			_54817_old=_54717_owner;
			_54717_owner=_54717_owner.get()._field_owner;
		}
	_iter_next_20501b344:;
	}
	_iter_end_20501b344:;;
	_20102c612_pushErr(_self_.ptr(), _54284_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_54317_message, &__jule_any_type5)}));
}



inline jule::Bool _201030428_checkImportCycles(jule::Ptr<_20102bcd7_symbolBuilder> _self_, jule::Ptr<_20107b397_ImportInfo> _56537_imp, jule::Ptr<_201002a16_UseDecl>* _56556_decl) {
	if ((_56537_imp.get()._field_Path == _1ed69a854_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_20102c612_pushErr(_self_.ptr(), &((*(_56556_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_20102e7e0_getAsLinkPath(_self_, _56537_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_1ed69a854_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_201030071_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_20102bcd7_symbolBuilder> _58017_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1ed69a854_Dir(_58017_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_201030071_pushCrossCycleError(_self_, &(_58017_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	if ((_58017_owner.get()._field_owner != nullptr)) {
		_58017_owner=_58017_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _201030813_checkPackageAccessibility(_20102bcd7_symbolBuilder* _self_, jule::Ptr<_201002a16_UseDecl>* _60145_decl, jule::Str* _60162_mod, jule::Str* _60173_path) {
	if (((_2010786e6_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._20107785a_GetModPath((*(_self_))._field_importer) != (*(_60162_mod))) && _21931cee4_Contains((*(_60173_path)), jule::Str("internal", 8)))) {
		_20102c612_pushErr(_self_, &((*(_60145_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _201030bcb_importPackage(jule::Ptr<_20102bcd7_symbolBuilder> _self_, jule::Ptr<_20107b397_ImportInfo>* _60738_imp, jule::Ptr<_201002a16_UseDecl>* _60761_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_60738_imp)).get()._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_20107b397_ImportInfo> _61217_port = _2010786e6_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._201077e76_GetImport(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path);;
	if ((_61217_port != nullptr)) {
		(*(_60738_imp)).get()._field_Package=_61217_port.get()._field_Package;
		(*(_60738_imp)).get()._field_Duplicate=true;
		jule::Str _61717_oldMod = _2010786e6_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20107785a_GetModPath(_self_.get()._field_importer);;
		_2010786e6_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._201077618_SetModPath(_self_.get()._field_importer, _2010786e6_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._201077b68_ModById(_self_.get()._field_importer, (*(_60738_imp)).get()._field_ModId));
		_201030813_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_61717_oldMod), &(_61217_port.get()._field_Path));
		_2010786e6_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._201077618_SetModPath(_self_.get()._field_importer, _61717_oldMod);
	} else {
		if ((!(_201030428_checkImportCycles(_self_, (*(_60738_imp)), _60761_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _62617_oldMod = _2010786e6_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20107785a_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_2010786e6_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._201077618_SetModPath(_self_.get()._field_importer, _62617_oldMod);
		});;
		if ((*(_60738_imp)).get()._field_Std) {
			_2010786e6_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._201077618_SetModPath(_self_.get()._field_importer, _21ab64718_PathStdlib);
		};
		jule::Slice<jule::Ptr<_200d46041_Ast>> _63122_asts;;
		jule::Slice<_2193a460d_Log> _63132_errors;;
		({
			__jule_tuple_sx_200d46041_Ast__jule_tuple_s_2193a460d_Log __jule_assign_result = _2010786e6_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._20107832d_ImportPackage(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path, (!((*(_60738_imp)).get()._field_Std)));
			_63122_asts = __jule_assign_result.__jule_result_arg0;
			_63132_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63132_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_63132_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_201030813_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_62617_oldMod), &((*(_60738_imp)).get()._field_Path));
		{
			auto expr = &(_63122_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2050297b4:;
			if (it != expr_end) {
				jule::Ptr<_200d46041_Ast> _63925_ast = *it;
				{
					jule::Ptr<_2010e9118_SymbolTable> _64025_table = nullptr;;
					({
						__jule_tuple_x_2010e9118_SymbolTable__jule_tuple_s_2193a460d_Log __jule_assign_result = _20115013b_buildSymbols(&(_63925_ast), &(_self_.get()._field_importer), _self_);
						_64025_table = __jule_assign_result.__jule_result_arg0;
						_63132_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63132_errors.len() > 0LL)) {
						(_self_.get()._field_errors).append(_63132_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_2010e9118_SymbolTable>> &__jule_push_dest = (*(_60738_imp)).get()._field_Package.get()._field_Files; __jule_push_dest.push(_64025_table); };
				}
				_iter_next_2050297b4:;
				++it;
				goto _iter_begin_2050297b4;
			}
			_iter_end_2050297b4:;
		};
	};
	_20102e4d2_implImportSelections(_self_.ptr(), _60738_imp, _60761_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20107b397_ImportInfo> _201030ed9_importUseDecl(jule::Ptr<_20102bcd7_symbolBuilder> _self_, jule::Ptr<_201002a16_UseDecl>* _65438_decl) {
	jule::Ptr<_20107b397_ImportInfo> _65517_imp = _20102dda5_buildImport(_self_, _65438_decl);;
	if ((_65517_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66117_ok = _20102e1b3_checkDuplicateUseDecl(_self_.ptr(), &(_65517_imp));;
	if ((!(_66117_ok))) {
		return nullptr;;
	};
	_66117_ok=_201030bcb_importPackage(_self_, &(_65517_imp), _65438_decl);
	{ jule::Slice<jule::Ptr<_20107b397_ImportInfo>> &__jule_push_dest = _self_.get()._field_table.get()._field_Imports; __jule_push_dest.push(_65517_imp); };
	if (_66117_ok) {
		_2010786e6_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._2010785a3_Imported(_self_.get()._field_importer, _65517_imp);
		return _65517_imp;;
	};
	return nullptr;;
}



inline void _2010311b5_importUseDecls(jule::Ptr<_20102bcd7_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20502e08d:;
		if (it != expr_end) {
			jule::Ptr<_201002a16_UseDecl> _67621_decl = *it;
			{
				_201030ed9_importUseDecl(_self_, &(_67621_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_20502e08d;
				};
			}
			_iter_next_20502e08d:;
			++it;
			goto _iter_begin_20502e08d;
		}
		_iter_end_20502e08d:;
	};
}



inline void _20103143a_appendNode(_20102bcd7_symbolBuilder* _self_, _200d46ddd_Node* _68534_node) {
	{
		auto &_match_expr{ (*(_68534_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_205030237:;
			{
				{ jule::Slice<jule::Ptr<_2010578c3_Impl>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Impls; __jule_push_dest.push(_20102b787_buildImpl((*(_68534_node))._field_Data.cast_ptr<_201006234_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_2050304ac:;
			{
				jule::Ptr<_2011303a2_TypeAlias> _69021_ta = _201027e7b_buildTypeAlias((*(_68534_node))._field_Data.cast_ptr<_20100162a_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeAliases; __jule_push_dest.push(_69021_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_205030523:;
			{
				jule::Ptr<_20100a25a_Struct> _69321_srct = _2010287d9_buildStruct((*(_68534_node))._field_Data.cast_ptr<_201005453_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_20100a25a_Struct>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Structs; __jule_push_dest.push(_69321_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_205030589:;
			{
				jule::Ptr<_20102065a_Fn> _69621_f = _201029444_buildFn((*(_68534_node))._field_Data.cast_ptr<_200eebcda_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_20102065a_Fn>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Funcs; __jule_push_dest.push(_69621_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_205030600:;
			{
				jule::Ptr<_20103287b_Trait> _69921_t = _201029c2a_buildTrait((*(_68534_node))._field_Data.cast_ptr<_201005b29_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_20103287b_Trait>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Traits; __jule_push_dest.push(_69921_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_205030d5e:;
			{
				jule::Ptr<_2010a4975_Var> _70221_v = _20102b248_buildVar((*(_68534_node))._field_Data.cast_ptr<_200eeccb9_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_70221_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_205030dc5:;
			{
				jule::Ptr<_20103510e_Enum> _70521_e = _20102a6ba_buildEnum((*(_68534_node))._field_Data.cast_ptr<_2010039b2_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_20103510e_Enum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Enums; __jule_push_dest.push(_70521_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_205030e3b:;
			{
				jule::Ptr<_201036709_TypeEnum> _70821_e = _20102aea1_buildTypeEnum((*(_68534_node))._field_Data.cast_ptr<_201004892_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_201036709_TypeEnum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeEnums; __jule_push_dest.push(_70821_e); };
			}
		}
		else {
			_case_begin_205030446:;
			{
				_20102c612_pushErr(_self_, &((*(_68534_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_2050303e1:;
	};
}



inline void _201031616_appendNodes(_20102bcd7_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2050382a6:;
		if (it != expr_end) {
			_200d46ddd_Node _71621_node = *it;
			{
				_20103143a_appendNode(_self_, &(_71621_node));
			}
			_iter_next_2050382a6:;
			++it;
			goto _iter_begin_2050382a6;
		}
		_iter_end_2050382a6:;
	};
}



inline void _20103188b_pushDirectivePass(_20102bcd7_symbolBuilder* _self_, jule::Ptr<_200d472d9_Directive>* _72141_d) {
	if (((*(_72141_d)).get()._field_Args.len() == 0LL)) {
		_20102c612_pushErr(_self_, &((*(_72141_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_72141_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1ed694d8c_Token> _72617_arg = (*(_72141_d)).get()._field_Args[1LL];;
		_20102c612_pushErr(_self_, &(_72617_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_72141_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1ed694d8c_Token> _73013_arg = (*(_72141_d)).get()._field_Args[0LL];;
	if ((_73013_arg.get()._field_Id != static_cast<jule::U32>(5LLU))) {
		_20102c612_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_73013_arg.get()._field_Kind[0LL] != '\"')) {
		_20102c612_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_201027596_Pass> &__jule_push_dest = (*(_self_))._field_table.get()._field_Passes; __jule_push_dest.push(_201027596_Pass{._field_Token=(*(_72141_d)).get()._field_Tag, ._field_Text=_73013_arg.get()._field_Kind.slice(1LL, (_73013_arg.get()._field_Kind.len() - 1LL))}); };
}



inline void _201031a67_appendTopDirectives(_20102bcd7_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20503ce59:;
		if (it != expr_end) {
			jule::Ptr<_200d472d9_Directive> _74821_d = *it;
			{
				{
					auto &_match_expr{ _74821_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_20503e70d:;
						{
							_20103188b_pushDirectivePass(_self_, &(_74821_d));
						}
					}
					_match_end_20503e686:;
				};
			}
			_iter_next_20503ce59:;
			++it;
			goto _iter_begin_20503ce59;
		}
		_iter_end_20503ce59:;
	};
}



inline void _201031c43_build(jule::Ptr<_20102bcd7_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_2010e9118_SymbolTable>(_2010e9118_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_201031a67_appendTopDirectives(_self_.ptr());
	_2010311b5_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_201031616_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20102bcd7_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _201032c33_Str(_20103287b_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _201033041_Equal(jule::Ptr<_20103287b_Trait> _self_, jule::Ptr<_2011310ea_TypeKind> _2621_other) {
	jule::Ptr<_20103287b_Trait> _2713_trt = _201134ecd_Trait(_2621_other.ptr());;
	return (_self_ == _2713_trt);;
}



inline jule::Bool _20103341a_IsBuiltin(_20103287b_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_20102065a_Fn> _201033728_FindMethod(_20103287b_Trait* _self_, jule::Str _4029_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205043091:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_Ident == _4029_ident)) {
					return _4121_f;;
				};
			}
			_iter_next_205043091:;
			++it;
			goto _iter_begin_205043091;
		}
		_iter_end_205043091:;
	};
	return _201033d44_findMethodInherit(_self_, &(_4029_ident));;
}



inline jule::Bool _201033a36_inherits(jule::Ptr<_20103287b_Trait> _self_, jule::Ptr<_20103287b_Trait>* _4929_t) {
	if ((_self_ == (*(_4929_t)))) {
		return true;;
	};
	{
		auto expr = &(_self_.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2050442d4:;
		if (it != expr_end) {
			jule::Ptr<_201137e9d_TypeSymbol> _5321_i = *it;
			{
				if (_201033a36_inherits(_201134ecd_Trait(_5321_i.get()._field_Kind.ptr()), _4929_t)) {
					return true;;
				};
			}
			_iter_next_2050442d4:;
			++it;
			goto _iter_begin_2050442d4;
		}
		_iter_end_2050442d4:;
	};
	return false;;
}



inline jule::Ptr<_20102065a_Fn> _201033d44_findMethodInherit(_20103287b_Trait* _self_, jule::Str* _6137_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205045747:;
		if (it != expr_end) {
			jule::Ptr<_201137e9d_TypeSymbol> _6221_i = *it;
			{
				if ((_6221_i.get()._field_Kind == nullptr)) {
					goto _iter_next_205045747;
				};
				jule::Ptr<_20103287b_Trait> _6621_t = _201134ecd_Trait(_6221_i.get()._field_Kind.ptr());;
				if ((_6621_t != nullptr)) {
					jule::Ptr<_20102065a_Fn> _6825_f2 = _201033728_FindMethod(_6621_t.ptr(), (*(_6137_ident)));;
					if ((_6825_f2 != nullptr)) {
						return _6825_f2;;
					};
				};
			}
			_iter_next_205045747:;
			++it;
			goto _iter_begin_205045747;
		}
		_iter_end_205045747:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20103287b_Trait _Src) {
	_Stream << _201032c33_Str(&_Src);
	return _Stream;
}



inline jule::Bool _2010349b0_AutoExpr(_201034619_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _201034619_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _201035472_Str(_20103510e_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _201035780_Equal(jule::Ptr<_20103510e_Enum> _self_, jule::Ptr<_2011310ea_TypeKind> _3821_other) {
	jule::Ptr<_20103510e_Enum> _3913_enm = _201134054_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_201034619_EnumItem> _201035b7b_FindItem(_20103510e_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2050491a7:;
		if (it != expr_end) {
			jule::Ptr<_201034619_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_2050491a7:;
			++it;
			goto _iter_begin_2050491a7;
		}
		_iter_end_2050491a7:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20103510e_Enum _Src) {
	_Stream << _201035472_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201036176_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _201036a39_Str(_201036709_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _201036d47_Equal(jule::Ptr<_201036709_TypeEnum> _self_, jule::Ptr<_2011310ea_TypeKind> _8021_other) {
	jule::Ptr<_201036709_TypeEnum> _8113_tenm = _2011342b8_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_201036176_TypeEnumItem> _201037243_FindItem(_201036709_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20504b275:;
		if (it != expr_end) {
			jule::Ptr<_201036176_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_20504b275:;
			++it;
			goto _iter_begin_20504b275;
		}
		_iter_end_20504b275:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _201036709_TypeEnum _Src) {
	_Stream << _201036a39_Str(&_Src);
	return _Stream;
}



inline jule::Str _201038c17_Str(_201038860_comptimeRange* _self_) {
	return jule::Str("comptimeRange", 13);;
}



inline jule::Bool _201039025_Equal(jule::Ptr<_201038860_comptimeRange> _self_, jule::Ptr<_2011310ea_TypeKind> _2521_other) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _201038860_comptimeRange _Src) {
	_Stream << _201038c17_Str(&_Src);
	return _Stream;
}



inline jule::Str _2010396b8_Str(_201039355_comptimeStructField* _self_) {
	return jule::Str("comptimeStructField", 19);;
}



inline jule::Bool _2010399c6_Equal(jule::Ptr<_201039355_comptimeStructField> _self_, jule::Ptr<_2011310ea_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_2010edb23_Data> _201039e9e__Name(jule::Ptr<_201039355_comptimeStructField> _self_, jule::Ptr<_201100691_Eval>* _3926_e, jule::Ptr<_200ee374e_FnCallExpr>* _3941_fc) {
	if (((*(_3941_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_3926_e)).ptr(), (*(_3941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _4417_constant = static__1ee33d3e7_NewStr(_self_.get()._field_field.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Model=jule::Any(_4417_constant, &__jule_any_type19), ._field_Constant=_4417_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20103a356__Type(jule::Ptr<_201039355_comptimeStructField> _self_, jule::Ptr<_201100691_Eval>* _5230_e, jule::Ptr<_200ee374e_FnCallExpr>* _5245_fc) {
	if (((*(_5245_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_5230_e)).ptr(), (*(_5245_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _201053c54_buildComptimeTypeInfoData(&((*(_5230_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind));;
}



inline jule::Ptr<_2010edb23_Data> _20103a70d__Public(jule::Ptr<_201039355_comptimeStructField> _self_, jule::Ptr<_201100691_Eval>* _6032_e, jule::Ptr<_200ee374e_FnCallExpr>* _6047_fc) {
	if (((*(_6047_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_6032_e)).ptr(), (*(_6047_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _6517_constant = static__1ee33d150_NewBool(_self_.get()._field_field.get()._field_Decl.get()._field_Public);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_6517_constant, &__jule_any_type19), ._field_Constant=_6517_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20103aa1b_subIdent(jule::Ptr<_201039355_comptimeStructField> _self_, jule::Str _7328_ident) {
	{
		auto &_match_expr{ _7328_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_2050562a2:;
			{
				jule::Ptr<_20102330b_FnIns> _7621_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _7733_e, jule::Ptr<_200ee374e_FnCallExpr>* _7748_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201039e9e__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_7621_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_205056318:;
			{
				jule::Ptr<_20102330b_FnIns> _8321_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _8433_e, jule::Ptr<_200ee374e_FnCallExpr>* _8448_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20103a70d__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_8321_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_2050560d7:;
			{
				jule::Ptr<_20102330b_FnIns> _9021_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _9133_e, jule::Ptr<_200ee374e_FnCallExpr>* _9148_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20103a356__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_9021_method));;
			}
		}
		else {
			_case_begin_205055b97:;
			{
				return nullptr;;
			}
		}
		_match_end_205055a65:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _201039355_comptimeStructField _Src) {
	_Stream << _2010396b8_Str(&_Src);
	return _Stream;
}



inline jule::Str _20103b203_Str(_20103ad7e_comptimeStructFields* _self_) {
	return jule::Str("comptimeStructFields", 20);;
}



inline jule::Bool _20103b511_Equal(jule::Ptr<_20103ad7e_comptimeStructFields> _self_, jule::Ptr<_2011310ea_TypeKind> _10921_other) {
	return false;;
}



inline void _20103b940_ready(_20103ad7e_comptimeStructFields* _self_, jule::Ptr<_2010a4975_Var>* _11329_keyA, jule::Ptr<_2010a4975_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*(_11329_keyA)).get()._field_Constant=true;
		(*(_11329_keyA)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		(*(_11329_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_11329_keyA)).get()._field_Kind=_2011e847b_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*(_11346_keyB)).get()._field_Constant=true;
		(*(_11346_keyB)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		(*(_11346_keyB)).get()._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_201039355_comptimeStructField>(), 6)})});
	};
}



inline void _20103bd08_step(_20103ad7e_comptimeStructFields* _self_, jule::I32 _13523_i, jule::Ptr<_2010a4975_Var>* _13536_keyA, jule::Ptr<_2010a4975_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		_201135be3_comptimeStructField((*(_13553_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I32 _20103c06c_len(_20103ad7e_comptimeStructFields* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _20103ad7e_comptimeStructFields _Src) {
	_Stream << _20103b203_Str(&_Src);
	return _Stream;
}



inline jule::Str _20103c6bb_Str(_20103c358_comptimeStatic* _self_) {
	return jule::Str("comptimeStatic", 14);;
}



inline jule::Bool _20103c9c9_Equal(jule::Ptr<_20103c358_comptimeStatic> _self_, jule::Ptr<_2011310ea_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_2010edb23_Data> _20103cea2__Name(jule::Ptr<_20103c358_comptimeStatic> _self_, jule::Ptr<_201100691_Eval>* _16326_e, jule::Ptr<_200ee374e_FnCallExpr>* _16341_fc) {
	if (((*(_16341_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_16326_e)).ptr(), (*(_16341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _16817_constant = static__1ee33d3e7_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Model=jule::Any(_16817_constant, &__jule_any_type19), ._field_Constant=_16817_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20103d359__Type(jule::Ptr<_20103c358_comptimeStatic> _self_, jule::Ptr<_201100691_Eval>* _17630_e, jule::Ptr<_200ee374e_FnCallExpr>* _17645_fc) {
	if (((*(_17645_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_17630_e)).ptr(), (*(_17645_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _201053c54_buildComptimeTypeInfoData(&((*(_17630_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind.get()._field_Kind));;
}



inline jule::Ptr<_2010edb23_Data> _20103d711__Public(jule::Ptr<_20103c358_comptimeStatic> _self_, jule::Ptr<_201100691_Eval>* _18432_e, jule::Ptr<_200ee374e_FnCallExpr>* _18447_fc) {
	if (((*(_18447_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_18432_e)).ptr(), (*(_18447_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _18917_constant = static__1ee33d150_NewBool(_self_.get()._field_field.get()._field_Public);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_18917_constant, &__jule_any_type19), ._field_Constant=_18917_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20103da1e_subIdent(jule::Ptr<_20103c358_comptimeStatic> _self_, jule::Str _19728_ident) {
	{
		auto &_match_expr{ _19728_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_205068517:;
			{
				jule::Ptr<_20102330b_FnIns> _20021_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _20133_e, jule::Ptr<_200ee374e_FnCallExpr>* _20148_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20103cea2__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_20021_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_20506857d:;
			{
				jule::Ptr<_20102330b_FnIns> _20721_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _20833_e, jule::Ptr<_200ee374e_FnCallExpr>* _20848_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20103d711__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_20721_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_20506833b:;
			{
				jule::Ptr<_20102330b_FnIns> _21421_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _21533_e, jule::Ptr<_200ee374e_FnCallExpr>* _21548_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20103d359__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_21421_method));;
			}
		}
		else {
			_case_begin_205067deb:;
			{
				return nullptr;;
			}
		}
		_match_end_205067d41:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20103c358_comptimeStatic _Src) {
	_Stream << _20103c6bb_Str(&_Src);
	return _Stream;
}



inline jule::Str _20103e27d_Str(_20103de1a_comptimeStatics* _self_) {
	return jule::Str("comptimeStatics", 15);;
}



inline jule::Bool _20103e58b_Equal(jule::Ptr<_20103de1a_comptimeStatics> _self_, jule::Ptr<_2011310ea_TypeKind> _23321_other) {
	return false;;
}



inline void _20103e943_ready(_20103de1a_comptimeStatics* _self_, jule::Ptr<_2010a4975_Var>* _23729_keyA, jule::Ptr<_2010a4975_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*(_23729_keyA)).get()._field_Constant=true;
		(*(_23729_keyA)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		(*(_23729_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_23729_keyA)).get()._field_Kind=_2011e847b_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*(_23746_keyB)).get()._field_Constant=true;
		(*(_23746_keyB)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		(*(_23746_keyB)).get()._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20103c358_comptimeStatic>(), 8)})});
	};
}



inline void _20103ed0b_step(_20103de1a_comptimeStatics* _self_, jule::I32 _25923_i, jule::Ptr<_2010a4975_Var>* _25936_keyA, jule::Ptr<_2010a4975_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		_2011373a9_comptimeStatic((*(_25953_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I32 _201040070_len(_20103de1a_comptimeStatics* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _20103de1a_comptimeStatics _Src) {
	_Stream << _20103e27d_Str(&_Src);
	return _Stream;
}



inline jule::Str _2010406be_Str(_20104035b_comptimeEnumField* _self_) {
	return jule::Str("comptimeEnumField", 17);;
}



inline jule::Bool _2010409cc_Equal(jule::Ptr<_20104035b_comptimeEnumField> _self_, jule::Ptr<_2011310ea_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_2010edb23_Data> _201040e83__Name(jule::Ptr<_20104035b_comptimeEnumField> _self_, jule::Ptr<_201100691_Eval>* _28726_e, jule::Ptr<_200ee374e_FnCallExpr>* _28741_fc) {
	if (((*(_28741_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_28726_e)).ptr(), (*(_28741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _29217_constant = static__1ee33d3e7_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Model=jule::Any(_29217_constant, &__jule_any_type19), ._field_Constant=_29217_constant});;
}



inline jule::Ptr<_2010edb23_Data> _201041291_subIdent(jule::Ptr<_20104035b_comptimeEnumField> _self_, jule::Str _30028_ident) {
	{
		auto &_match_expr{ _30028_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_205076932:;
			{
				jule::Ptr<_20102330b_FnIns> _30321_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _30433_e, jule::Ptr<_200ee374e_FnCallExpr>* _30448_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201040e83__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_30321_method));;
			}
		}
		else {
			_case_begin_20507669b:;
			{
				return nullptr;;
			}
		}
		_match_end_2050765e1:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20104035b_comptimeEnumField _Src) {
	_Stream << _2010406be_Str(&_Src);
	return _Stream;
}



inline jule::Str _201041a00_Str(_20104157c_comptimeEnumFields* _self_) {
	return jule::Str("comptimeEnumFields", 18);;
}



inline jule::Bool _201041d0d_Equal(jule::Ptr<_20104157c_comptimeEnumFields> _self_, jule::Ptr<_2011310ea_TypeKind> _32221_other) {
	return false;;
}



inline void _2010421b5_ready(_20104157c_comptimeEnumFields* _self_, jule::Ptr<_2010a4975_Var>* _32629_keyA, jule::Ptr<_2010a4975_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*(_32629_keyA)).get()._field_Constant=true;
		(*(_32629_keyA)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		(*(_32629_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_32629_keyA)).get()._field_Kind=_2011e847b_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*(_32646_keyB)).get()._field_Constant=true;
		(*(_32646_keyB)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		(*(_32646_keyB)).get()._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20104035b_comptimeEnumField>(), 10)})});
	};
}



inline void _20104257d_step(_20104157c_comptimeEnumFields* _self_, jule::I32 _34823_i, jule::Ptr<_2010a4975_Var>* _34836_keyA, jule::Ptr<_2010a4975_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		_2011361bb_comptimeEnumField((*(_34853_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I32 _2010427e2_len(_20104157c_comptimeEnumFields* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _20104157c_comptimeEnumFields _Src) {
	_Stream << _201041a00_Str(&_Src);
	return _Stream;
}



inline jule::Str _201042e41_Str(_201042acd_comptimeParam* _self_) {
	return jule::Str("comptimeParam", 13);;
}



inline jule::Bool _20104324e_Equal(jule::Ptr<_201042acd_comptimeParam> _self_, jule::Ptr<_2011310ea_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_2010edb23_Data> _201043738__Name(jule::Ptr<_201042acd_comptimeParam> _self_, jule::Ptr<_201100691_Eval>* _37626_e, jule::Ptr<_200ee374e_FnCallExpr>* _37641_fc) {
	if (((*(_37641_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_37626_e)).ptr(), (*(_37641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _38117_constant = static__1ee33d3e7_NewStr(_self_.get()._field_param.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Model=jule::Any(_38117_constant, &__jule_any_type19), ._field_Constant=_38117_constant});;
}



inline jule::Ptr<_2010edb23_Data> _201043ae0__Type(jule::Ptr<_201042acd_comptimeParam> _self_, jule::Ptr<_201100691_Eval>* _38930_e, jule::Ptr<_200ee374e_FnCallExpr>* _38945_fc) {
	if (((*(_38945_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_38930_e)).ptr(), (*(_38945_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _201053c54_buildComptimeTypeInfoData(&((*(_38930_e)).get()._field_s), &(_self_.get()._field_param.get()._field_Kind));;
}



inline jule::Ptr<_2010edb23_Data> _201043e97__Variadic(jule::Ptr<_201042acd_comptimeParam> _self_, jule::Ptr<_201100691_Eval>* _39734_e, jule::Ptr<_200ee374e_FnCallExpr>* _39749_fc) {
	if (((*(_39749_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_39734_e)).ptr(), (*(_39749_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Variadic", 8), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _40217_constant = static__1ee33d150_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Variadic);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_40217_constant, &__jule_any_type19), ._field_Constant=_40217_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20104434e__Reference(jule::Ptr<_201042acd_comptimeParam> _self_, jule::Ptr<_201100691_Eval>* _41035_e, jule::Ptr<_200ee374e_FnCallExpr>* _41050_fc) {
	if (((*(_41050_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_41035_e)).ptr(), (*(_41050_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Reference", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _41517_constant = static__1ee33d150_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Reference);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_41517_constant, &__jule_any_type19), ._field_Constant=_41517_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20104465c_subIdent(jule::Ptr<_201042acd_comptimeParam> _self_, jule::Str _42328_ident) {
	{
		auto &_match_expr{ _42328_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_20508c508:;
			{
				jule::Ptr<_20102330b_FnIns> _42621_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _42733_e, jule::Ptr<_200ee374e_FnCallExpr>* _42748_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201043738__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_42621_method));;
			}
		}
		else if (_match_expr == jule::Str("Variadic", 8)) {
			_case_begin_20508c56e:;
			{
				jule::Ptr<_20102330b_FnIns> _43321_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _43433_e, jule::Ptr<_200ee374e_FnCallExpr>* _43448_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201043e97__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_43321_method));;
			}
		}
		else if (_match_expr == jule::Str("Reference", 9)) {
			_case_begin_20508c33d:;
			{
				jule::Ptr<_20102330b_FnIns> _44021_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _44133_e, jule::Ptr<_200ee374e_FnCallExpr>* _44148_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104434e__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_44021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_20508c3a4:;
			{
				jule::Ptr<_20102330b_FnIns> _44721_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _44833_e, jule::Ptr<_200ee374e_FnCallExpr>* _44848_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201043ae0__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_44721_method));;
			}
		}
		else {
			_case_begin_20508bded:;
			{
				return nullptr;;
			}
		}
		_match_end_20508bcbb:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _201042acd_comptimeParam _Src) {
	_Stream << _201042e41_Str(&_Src);
	return _Stream;
}



inline jule::Str _201044edc_Str(_201044b79_comptimeParams* _self_) {
	return jule::Str("comptimeParams", 14);;
}



inline jule::Bool _2010452ea_Equal(jule::Ptr<_201044b79_comptimeParams> _self_, jule::Ptr<_2011310ea_TypeKind> _46621_other) {
	return false;;
}



inline void _201045729_ready(_201044b79_comptimeParams* _self_, jule::Ptr<_2010a4975_Var>* _47029_keyA, jule::Ptr<_2010a4975_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*(_47029_keyA)).get()._field_Constant=true;
		(*(_47029_keyA)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		(*(_47029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_47029_keyA)).get()._field_Kind=_2011e847b_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*(_47046_keyB)).get()._field_Constant=true;
		(*(_47046_keyB)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		(*(_47046_keyB)).get()._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_201042acd_comptimeParam>(), 12)})});
	};
}



inline void _201045ae2_step(_201044b79_comptimeParams* _self_, jule::I32 _49223_i, jule::Ptr<_2010a4975_Var>* _49236_keyA, jule::Ptr<_2010a4975_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		_201136694_comptimeParam((*(_49253_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I32 _201045d56_len(_201044b79_comptimeParams* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_params.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _201044b79_comptimeParams _Src) {
	_Stream << _201044edc_Str(&_Src);
	return _Stream;
}



inline jule::Str _2010464a5_Str(_201046142_comptimeTypeInfos* _self_) {
	return jule::Str("comptimeTypeInfos", 17);;
}



inline jule::Bool _2010467b3_Equal(jule::Ptr<_201046142_comptimeTypeInfos> _self_, jule::Ptr<_2011310ea_TypeKind> _51621_other) {
	return false;;
}



inline void _201046be2_ready(_201046142_comptimeTypeInfos* _self_, jule::Ptr<_2010a4975_Var>* _52029_keyA, jule::Ptr<_2010a4975_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*(_52029_keyA)).get()._field_Constant=true;
		(*(_52029_keyA)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		(*(_52029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_52029_keyA)).get()._field_Kind=_2011e847b_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*(_52046_keyB)).get()._field_Constant=true;
		(*(_52046_keyB)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		(*(_52046_keyB)).get()._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20104760a_comptimeTypeInfo>(), 15)})});
	};
}



inline void _2010470aa_step(_201046142_comptimeTypeInfos* _self_, jule::I32 _54223_i, jule::Ptr<_2010a4975_Var>* _54236_keyA, jule::Ptr<_2010a4975_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*(_54253_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_201130b88_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I32 _20104731e_len(_201046142_comptimeTypeInfos* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_types.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _201046142_comptimeTypeInfos _Src) {
	_Stream << _2010464a5_Str(&_Src);
	return _Stream;
}



inline jule::Str _20104796d_Str(_20104760a_comptimeTypeInfo* _self_) {
	return ((jule::Str("comptimeTypeInfo[", 17) + _2011314a2_Str((*(_self_))._field_base.ptr())) + jule::Str("]", 1));;
}



inline jule::Bool _201047c7b_Equal(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_2011310ea_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_2010edb23_Data> _201048375__Str(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _57025_e, jule::Ptr<_200ee374e_FnCallExpr>* _57040_fc) {
	if (((*(_57040_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_57025_e)).ptr(), (*(_57040_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Str", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _57517_constant = static__1ee33d3e7_NewStr(_2011314a2_Str(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Model=jule::Any(_57517_constant, &__jule_any_type19), ._field_Constant=_57517_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20104872c__Kind(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _58330_e, jule::Ptr<_200ee374e_FnCallExpr>* _58345_fc) {
	if (((*(_58345_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_58330_e)).ptr(), (*(_58345_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Kind", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20103510e_Enum> _58817_enm = _20107ce48_FindEnum(_2010538e1_findComptimePackage(&((*(_58330_e)).get()._field_s)).ptr(), jule::Str("Kind", 4));;
	jule::Ptr<_201034619_EnumItem> _58917_item = nullptr;;
	{
		
		if (_2011323b5_Void(_self_.get()._field_base.ptr())) {
			_case_begin_2050a52ac:;
			{
				_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Void", 4));
			}
		}
		else if ((_201134c69_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050a53cd:;
			{
				_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Struct", 6));
			}
		}
		else if ((_201134ecd_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050a50d1:;
			{
				_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Trait", 5));
			}
		}
		else if ((_201133ce0_Ptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050a5147:;
			{
				if (_2011410d8_IsUnsafe(_201133ce0_Ptr(_self_.get()._field_base.ptr()).ptr())) {
					_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("UnsafePtr", 9));
				} else {
					_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Ptr", 3));
				};
			}
		}
		else if ((_201133a7b_Sptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050a5950:;
			{
				_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Ref", 3));
			}
		}
		else if ((_201134054_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050a59b6:;
			{
				_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Enum", 4));
			}
		}
		else if ((_201135242_Map(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050a5a2c:;
			{
				_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Map", 3));
			}
		}
		else if ((_201134791_Slc(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050a5a93:;
			{
				_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Slice", 5));
			}
		}
		else if ((_20113452c_Arr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050a5b09:;
			{
				_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Array", 5));
			}
		}
		else if ((_201134a05_Fn(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050a5b70:;
			{
				_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Func", 4));
			}
		}
		else if ((_2011354a6_Tup(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050a5bd6:;
			{
				_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Tuple", 5));
			}
		}
		else if ((_201133817_Prim(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050a5c4c:;
			{
				jule::Ptr<_201138850_Prim> _61817_prim = _201133817_Prim(_self_.get()._field_base.ptr());;
				{
					
					if (_20113bcb5_IsAny(_61817_prim.ptr())) {
						_case_begin_2050ad5a1:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Any", 3));
						}
					}
					else if (_20113b7dc_IsBool(_61817_prim.ptr())) {
						_case_begin_2050adc66:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Bool", 4));
						}
					}
					else if (_20113ba51_IsStr(_61817_prim.ptr())) {
						_case_begin_2050adeec:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Str", 3));
						}
					}
					else if (_20113aac7_IsF32(_61817_prim.ptr())) {
						_case_begin_2050ae56e:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("F32", 3));
						}
					}
					else if (_20113ad3b_IsF64(_61817_prim.ptr())) {
						_case_begin_2050ae5d5:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("F64", 3));
						}
					}
					else if (_201139675_IsI8(_61817_prim.ptr())) {
						_case_begin_2050ae64b:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("I8", 2));
						}
					}
					else if (_2011398d9_IsI16(_61817_prim.ptr())) {
						_case_begin_2050ae6b2:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("I16", 3));
						}
					}
					else if (_201139b4d_IsI32(_61817_prim.ptr())) {
						_case_begin_2050ae728:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("I32", 3));
						}
					}
					else if (_201139db2_IsI64(_61817_prim.ptr())) {
						_case_begin_2050ae78e:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("I64", 3));
						}
					}
					else if (_20113a126_IsU8(_61817_prim.ptr())) {
						_case_begin_2050ae805:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("U8", 2));
						}
					}
					else if (_20113a38a_IsU16(_61817_prim.ptr())) {
						_case_begin_2050ae86b:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("U16", 3));
						}
					}
					else if (_20113a5ee_IsU32(_61817_prim.ptr())) {
						_case_begin_2050ae8d2:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("U32", 3));
						}
					}
					else if (_20113a863_IsU64(_61817_prim.ptr())) {
						_case_begin_2050ae948:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("U64", 3));
						}
					}
					else if (_20113b0a0_IsInt(_61817_prim.ptr())) {
						_case_begin_2050ae9ae:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Int", 3));
						}
					}
					else if (_20113b314_IsUint(_61817_prim.ptr())) {
						_case_begin_2050aea25:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Uint", 4));
						}
					}
					else if (_20113b578_IsUintptr(_61817_prim.ptr())) {
						_case_begin_2050aea9c:;
						{
							_58917_item=_201035b7b_FindItem(_58817_enm.ptr(), jule::Str("Uintptr", 7));
						}
					}
					else {
						_case_begin_2050adabd:;
						{
							jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _2011314a2_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_2050ada57:;
				};
			}
		}
		else {
			_case_begin_2050a4e7c:;
			{
				jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _2011314a2_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_2050a4e27:;
	};
	return _20112d9aa_evalEnumStatic(&(_58817_enm), &(_58917_item));;
}



inline jule::Ptr<_2010edb23_Data> _201048ad4__Bits(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _66130_e, jule::Ptr<_200ee374e_FnCallExpr>* _66145_fc) {
	if (((*(_66145_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_201138850_Prim> _66613_prim = _201133817_Prim(_self_.get()._field_base.ptr());;
	if ((_66613_prim == nullptr)) {
		_201100b9c_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _67113_n = _1ee32ee77_BitsizeOf(_66613_prim.get()._field_Kind);;
	if ((_67113_n == -1LL)) {
		_201100b9c_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _67617_constant = static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67113_n)));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Model=jule::Any(_67617_constant, &__jule_any_type19), ._field_Constant=_67617_constant});;
}



inline jule::Ptr<_2010edb23_Data> _201048e8b__Elem(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _68430_e, jule::Ptr<_200ee374e_FnCallExpr>* _68445_fc) {
	if (((*(_68445_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_201140615_Ptr> _68917_ptr = _201133ce0_Ptr(_self_.get()._field_base.ptr());;
	if ((_68917_ptr != nullptr)) {
		if (_2011410d8_IsUnsafe(_68917_ptr.ptr())) {
			_201100b9c_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		return _201053c54_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_68917_ptr.get()._field_Elem));;
	};
	jule::Ptr<_20113c0a1_Sptr> _69717_sptr = _201133a7b_Sptr(_self_.get()._field_base.ptr());;
	if ((_69717_sptr != nullptr)) {
		return _201053c54_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_69717_sptr.get()._field_Elem));;
	};
	jule::Ptr<_20113ca0d_Slc> _70117_slice = _201134791_Slc(_self_.get()._field_base.ptr());;
	if ((_70117_slice != nullptr)) {
		return _201053c54_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70117_slice.get()._field_Elem));;
	};
	jule::Ptr<_20113eba8_Arr> _70517_array = _20113452c_Arr(_self_.get()._field_base.ptr());;
	if ((_70517_array != nullptr)) {
		return _201053c54_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70517_array.get()._field_Elem));;
	};
	jule::Ptr<_20103510e_Enum> _70917_enm = _201134054_Enum(_self_.get()._field_base.ptr());;
	if ((_70917_enm != nullptr)) {
		return _201053c54_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70917_enm.get()._field_Kind.get()._field_Kind));;
	};
	_201100b9c_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_2010edb23_Data> _201049343__Size(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _71730_e, jule::Ptr<_200ee374e_FnCallExpr>* _71745_fc) {
	if (((*(_71745_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20113eba8_Arr> _72217_arr = _20113452c_Arr(_self_.get()._field_base.ptr());;
	if ((_72217_arr == nullptr)) {
		_201100b9c_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _72717_constant = static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_72217_arr.get()._field_N)));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e618d_primInt, ._field_Model=jule::Any(_72717_constant, &__jule_any_type19), ._field_Constant=_72717_constant});;
}



inline jule::Ptr<_2010edb23_Data> _2010496ea__Key(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _73529_e, jule::Ptr<_200ee374e_FnCallExpr>* _73544_fc) {
	if (((*(_73544_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20113e0b4_Map> _74017_m = _201135242_Map(_self_.get()._field_base.ptr());;
	if ((_74017_m == nullptr)) {
		_201100b9c_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	return _201053c54_buildComptimeTypeInfoData(&((*(_73529_e)).get()._field_s), &(_74017_m.get()._field_Key));;
}



inline jule::Ptr<_2010edb23_Data> _201049aa2__Value(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _74831_e, jule::Ptr<_200ee374e_FnCallExpr>* _74846_fc) {
	if (((*(_74846_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20113e0b4_Map> _75317_m = _201135242_Map(_self_.get()._field_base.ptr());;
	if ((_75317_m == nullptr)) {
		_201100b9c_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	return _201053c54_buildComptimeTypeInfoData(&((*(_74831_e)).get()._field_s), &(_75317_m.get()._field_Val));;
}



inline jule::Ptr<_2010edb23_Data> _201049e59__Fields(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _76132_e, jule::Ptr<_200ee374e_FnCallExpr>* _76147_fc) {
	if (((*(_76147_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20100d071_StructIns> _76617_s = _201134c69_Struct(_self_.get()._field_base.ptr());;
	if ((_76617_s != nullptr)) {
		return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20103ad7e_comptimeStructFields>(_20103ad7e_comptimeStructFields{._field_fields=_76617_s.get()._field_Fields}), 7)}), });;
	};
	jule::Ptr<_20103510e_Enum> _77617_enm = _201134054_Enum(_self_.get()._field_base.ptr());;
	if ((_77617_enm != nullptr)) {
		return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20104157c_comptimeEnumFields>(_20104157c_comptimeEnumFields{._field_fields=_77617_enm.get()._field_Items}), 11)}), });;
	};
	_201100b9c_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_2010edb23_Data> _20104a311__Statics(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _79033_e, jule::Ptr<_200ee374e_FnCallExpr>* _79048_fc) {
	if (((*(_79048_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Statics", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20100d071_StructIns> _79517_s = _201134c69_Struct(_self_.get()._field_base.ptr());;
	if ((_79517_s == nullptr)) {
		_201100b9c_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20103de1a_comptimeStatics>(_20103de1a_comptimeStatics{._field_fields=_79517_s.get()._field_Statics}), 9)}), });;
}



inline jule::Ptr<_2010edb23_Data> _20104a6b8__Public(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _80932_e, jule::Ptr<_200ee374e_FnCallExpr>* _80947_fc) {
	if (((*(_80947_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Bool _81417_public = false;;
	{
		
		if ((_201134c69_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050d5661:;
			{
				_81417_public=_201134c69_Struct(_self_.get()._field_base.ptr()).get()._field_Decl.get()._field_Public;
			}
		}
		else if ((_201134ecd_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050d56c7:;
			{
				_81417_public=_201134ecd_Trait(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_201134054_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050d54da:;
			{
				_81417_public=_201134054_Enum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_2011342b8_TypeEnum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_2050d5551:;
			{
				_81417_public=_2011342b8_TypeEnum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else {
			_case_begin_2050d36b4:;
			{
				_201100b9c_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2050d462c:;
	};
	jule::Ptr<_1ee33c6d2_Const> _82817_constant = static__1ee33d150_NewBool(_81417_public);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_82817_constant, &__jule_any_type19), ._field_Constant=_82817_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20104aa70__Binded(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _83632_e, jule::Ptr<_200ee374e_FnCallExpr>* _83647_fc) {
	if (((*(_83647_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_83632_e)).ptr(), (*(_83647_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Binded", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _84117_constant = static__1ee33d150_NewBool(_201131ddc_Binded(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_84117_constant, &__jule_any_type19), ._field_Constant=_84117_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20104ae27__Ordered(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _84929_e, jule::Ptr<_200ee374e_FnCallExpr>* _84944_fc) {
	if (((*(_84944_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_84929_e)).ptr(), (*(_84944_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Ordered", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _85417_constant = static__1ee33d150_NewBool(_201132b02_Ordered(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Model=jule::Any(_85417_constant, &__jule_any_type19), ._field_Constant=_85417_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20104b2ce__Comparable(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _86232_e, jule::Ptr<_200ee374e_FnCallExpr>* _86247_fc) {
	if (((*(_86247_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_86232_e)).ptr(), (*(_86247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Comparable", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _86717_constant = static__1ee33d150_NewBool(_201132629_Comparable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Model=jule::Any(_86717_constant, &__jule_any_type19), ._field_Constant=_86717_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20104b686__Mutable(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _87529_e, jule::Ptr<_200ee374e_FnCallExpr>* _87544_fc) {
	if (((*(_87544_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_87529_e)).ptr(), (*(_87544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _88017_constant = static__1ee33d150_NewBool(_20113288d_Mutable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_88017_constant, &__jule_any_type19), ._field_Constant=_88017_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20104ba3d__Types(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _88831_e, jule::Ptr<_200ee374e_FnCallExpr>* _88846_fc) {
	if (((*(_88846_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20113d613_Tuple> _89317_tup = _2011354a6_Tup(_self_.get()._field_base.ptr());;
	if ((_89317_tup == nullptr)) {
		_201100b9c_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_201046142_comptimeTypeInfos> _89817_infos = jule::new_ptr<_201046142_comptimeTypeInfos>(_201046142_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_20104760a_comptimeTypeInfo>>::alloc(0LL, _89317_tup.get()._field_Types.len())});;
	{
		auto expr = &(_89317_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2050e4bd1:;
		if (it != expr_end) {
			jule::Ptr<_2011310ea_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_20104760a_comptimeTypeInfo>> &__jule_push_dest = _89817_infos.get()._field_types; __jule_push_dest.push(_201084092_pushComptimeTypeInfo((*(_88831_e)).get()._field_s.get()._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_2050e4bd1:;
			++it;
			goto _iter_begin_2050e4bd1;
		}
		_iter_end_2050e4bd1:;
	};
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_89817_infos, 14)}), });;
}



inline jule::Ptr<_2010edb23_Data> _20104bde5__Exceptional(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _91137_e, jule::Ptr<_200ee374e_FnCallExpr>* _91152_fc) {
	if (((*(_91152_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20102330b_FnIns> _91617_f = _201134a05_Fn(_self_.get()._field_base.ptr());;
	if ((_91617_f == nullptr)) {
		_201100b9c_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _92117_constant = static__1ee33d150_NewBool(((_91617_f.get()._field_Decl != nullptr) && _91617_f.get()._field_Decl.get()._field_Exceptional));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_92117_constant, &__jule_any_type19), ._field_Constant=_92117_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20104c29c__CanNil(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _92932_e, jule::Ptr<_200ee374e_FnCallExpr>* _92947_fc) {
	if (((*(_92947_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_92932_e)).ptr(), (*(_92947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("CanNil", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _93417_constant = static__1ee33d150_NewBool(_201132d66_NilCompatible(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_93417_constant, &__jule_any_type19), ._field_Constant=_93417_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20104c654__Result(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _94232_e, jule::Ptr<_200ee374e_FnCallExpr>* _94247_fc) {
	if (((*(_94247_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20102330b_FnIns> _94717_f = _201134a05_Fn(_self_.get()._field_base.ptr());;
	if ((_94717_f == nullptr)) {
		_201100b9c_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	if ((_94717_f.get()._field_Result == nullptr)) {
		return _201053c54_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_2011e4e5b_primVoid));;
	};
	return _201053c54_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_94717_f.get()._field_Result));;
}



inline jule::Ptr<_2010edb23_Data> _20104ca0b__Params(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Ptr<_201100691_Eval>* _95832_e, jule::Ptr<_200ee374e_FnCallExpr>* _95847_fc) {
	if (((*(_95847_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20102330b_FnIns> _96317_f = _201134a05_Fn(_self_.get()._field_base.ptr());;
	if ((_96317_f == nullptr)) {
		_201100b9c_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_201044b79_comptimeParams>(_201044b79_comptimeParams{._field_params=_96317_f.get()._field_Params}), 13)}), });;
}



inline jule::Ptr<_2010edb23_Data> _20104cd19_subIdent(jule::Ptr<_20104760a_comptimeTypeInfo> _self_, jule::Str _97528_ident) {
	{
		auto &_match_expr{ _97528_ident };
		
		if (_match_expr == jule::Str("Str", 3)) {
			_case_begin_2051025e5:;
			{
				jule::Ptr<_20102330b_FnIns> _97821_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _97933_e, jule::Ptr<_200ee374e_FnCallExpr>* _97948_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201048375__Str(_self_, _97933_e, _97948_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_97821_method));;
			}
		}
		else if (_match_expr == jule::Str("Bits", 4)) {
			_case_begin_205103074:;
			{
				jule::Ptr<_20102330b_FnIns> _98521_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _98633_e, jule::Ptr<_200ee374e_FnCallExpr>* _98648_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201048ad4__Bits(_self_, _98633_e, _98648_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_98521_method));;
			}
		}
		else if (_match_expr == jule::Str("Elem", 4)) {
			_case_begin_2051030da:;
			{
				jule::Ptr<_20102330b_FnIns> _99221_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _99333_e, jule::Ptr<_200ee374e_FnCallExpr>* _99348_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201048e8b__Elem(_self_, _99333_e, _99348_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_99221_method));;
			}
		}
		else if (_match_expr == jule::Str("Size", 4)) {
			_case_begin_205102a68:;
			{
				jule::Ptr<_20102330b_FnIns> _99921_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _100033_e, jule::Ptr<_200ee374e_FnCallExpr>* _100048_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201049343__Size(_self_, _100033_e, _100048_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_99921_method));;
			}
		}
		else if (_match_expr == jule::Str("Key", 3)) {
			_case_begin_205102ace:;
			{
				jule::Ptr<_20102330b_FnIns> _100621_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _100733_e, jule::Ptr<_200ee374e_FnCallExpr>* _100748_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _2010496ea__Key(_self_, _100733_e, _100748_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_100621_method));;
			}
		}
		else if (_match_expr == jule::Str("Value", 5)) {
			_case_begin_205102b56:;
			{
				jule::Ptr<_20102330b_FnIns> _101321_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _101433_e, jule::Ptr<_200ee374e_FnCallExpr>* _101448_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201049aa2__Value(_self_, _101433_e, _101448_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_101321_method));;
			}
		}
		else if (_match_expr == jule::Str("Fields", 6)) {
			_case_begin_205102bcd:;
			{
				jule::Ptr<_20102330b_FnIns> _102021_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _102133_e, jule::Ptr<_200ee374e_FnCallExpr>* _102148_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201049e59__Fields(_self_, _102133_e, _102148_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_102021_method));;
			}
		}
		else if (_match_expr == jule::Str("Statics", 7)) {
			_case_begin_205103162:;
			{
				jule::Ptr<_20102330b_FnIns> _102721_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _102833_e, jule::Ptr<_200ee374e_FnCallExpr>* _102848_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104a311__Statics(_self_, _102833_e, _102848_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_102721_method));;
			}
		}
		else if (_match_expr == jule::Str("Params", 6)) {
			_case_begin_2051031d9:;
			{
				jule::Ptr<_20102330b_FnIns> _103421_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _103533_e, jule::Ptr<_200ee374e_FnCallExpr>* _103548_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104ca0b__Params(_self_, _103533_e, _103548_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_103421_method));;
			}
		}
		else if (_match_expr == jule::Str("Types", 5)) {
			_case_begin_205103261:;
			{
				jule::Ptr<_20102330b_FnIns> _104121_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _104233_e, jule::Ptr<_200ee374e_FnCallExpr>* _104248_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104ba3d__Types(_self_, _104233_e, _104248_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_104121_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_2051032d8:;
			{
				jule::Ptr<_20102330b_FnIns> _104821_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _104933_e, jule::Ptr<_200ee374e_FnCallExpr>* _104948_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104a6b8__Public(_self_, _104933_e, _104948_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_104821_method));;
			}
		}
		else if (_match_expr == jule::Str("Binded", 6)) {
			_case_begin_205103360:;
			{
				jule::Ptr<_20102330b_FnIns> _105521_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _105633_e, jule::Ptr<_200ee374e_FnCallExpr>* _105648_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104aa70__Binded(_self_, _105633_e, _105648_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_105521_method));;
			}
		}
		else if (_match_expr == jule::Str("Ordered", 7)) {
			_case_begin_2051033d7:;
			{
				jule::Ptr<_20102330b_FnIns> _106221_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _106333_e, jule::Ptr<_200ee374e_FnCallExpr>* _106348_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104ae27__Ordered(_self_, _106333_e, _106348_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_106221_method));;
			}
		}
		else if (_match_expr == jule::Str("Comparable", 10)) {
			_case_begin_20510345e:;
			{
				jule::Ptr<_20102330b_FnIns> _106921_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _107033_e, jule::Ptr<_200ee374e_FnCallExpr>* _107048_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104b2ce__Comparable(_self_, _107033_e, _107048_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_106921_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_2051034d6:;
			{
				jule::Ptr<_20102330b_FnIns> _107621_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _107733_e, jule::Ptr<_200ee374e_FnCallExpr>* _107748_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104b686__Mutable(_self_, _107733_e, _107748_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_107621_method));;
			}
		}
		else if (_match_expr == jule::Str("Exceptional", 11)) {
			_case_begin_20510355d:;
			{
				jule::Ptr<_20102330b_FnIns> _108321_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _108433_e, jule::Ptr<_200ee374e_FnCallExpr>* _108448_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104bde5__Exceptional(_self_, _108433_e, _108448_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_108321_method));;
			}
		}
		else if (_match_expr == jule::Str("CanNil", 6)) {
			_case_begin_2051035d5:;
			{
				jule::Ptr<_20102330b_FnIns> _109021_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _109133_e, jule::Ptr<_200ee374e_FnCallExpr>* _109148_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104c29c__CanNil(_self_, _109133_e, _109148_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_109021_method));;
			}
		}
		else if (_match_expr == jule::Str("Result", 6)) {
			_case_begin_20510365c:;
			{
				jule::Ptr<_20102330b_FnIns> _109721_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _109833_e, jule::Ptr<_200ee374e_FnCallExpr>* _109848_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104c654__Result(_self_, _109833_e, _109848_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_109721_method));;
			}
		}
		else if (_match_expr == jule::Str("Kind", 4)) {
			_case_begin_2051036d4:;
			{
				jule::Ptr<_20102330b_FnIns> _110421_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _110533_e, jule::Ptr<_200ee374e_FnCallExpr>* _110548_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104872c__Kind(_self_, _110533_e, _110548_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_110421_method));;
			}
		}
		else {
			_case_begin_205102958:;
			{
				return nullptr;;
			}
		}
		_match_end_205102837:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20104760a_comptimeTypeInfo _Src) {
	_Stream << _20104796d_Str(&_Src);
	return _Stream;
}



inline jule::Str _20104d468_Str(_20104d105_comptimeValue* _self_) {
	return jule::Str("comptimeValue", 13);;
}



inline jule::Bool _20104d776_Equal(jule::Ptr<_20104d105_comptimeValue> _self_, jule::Ptr<_2011310ea_TypeKind> _112321_other) {
	return false;;
}



inline jule::Ptr<_2010edb23_Data> _20104dc82__Unwrap(jule::Ptr<_20104d105_comptimeValue> _self_, jule::Ptr<_201100691_Eval>* _112732_e, jule::Ptr<_200ee374e_FnCallExpr>* _112747_fc) {
	if (((*(_112747_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_112732_e)).ptr(), (*(_112747_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Unwrap", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return _self_.get()._field_data;;
}



inline jule::Ptr<_2010edb23_Data> _20104e139__Type(jule::Ptr<_20104d105_comptimeValue> _self_, jule::Ptr<_201100691_Eval>* _113530_e, jule::Ptr<_200ee374e_FnCallExpr>* _113545_fc) {
	if (((*(_113545_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_113530_e)).ptr(), (*(_113545_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _201053c54_buildComptimeTypeInfoData(&((*(_113530_e)).get()._field_s), &(_self_.get()._field_data.get()._field_Kind));;
}



inline jule::Ptr<_2010edb23_Data> _20104e4e1__Lvalue(jule::Ptr<_20104d105_comptimeValue> _self_, jule::Ptr<_201100691_Eval>* _114332_e, jule::Ptr<_200ee374e_FnCallExpr>* _114347_fc) {
	if (((*(_114347_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_114332_e)).ptr(), (*(_114347_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Lvalue", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _114817_constant = static__1ee33d150_NewBool(_self_.get()._field_data.get()._field_Lvalue);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_114817_constant, &__jule_any_type19), ._field_Constant=_114817_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20104e898__Mutable(jule::Ptr<_20104d105_comptimeValue> _self_, jule::Ptr<_201100691_Eval>* _115633_e, jule::Ptr<_200ee374e_FnCallExpr>* _115648_fc) {
	if (((*(_115648_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_115633_e)).ptr(), (*(_115648_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _116117_constant = static__1ee33d150_NewBool(_self_.get()._field_data.get()._field_Mutable);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_116117_constant, &__jule_any_type19), ._field_Constant=_116117_constant});;
}



inline jule::Ptr<_2010edb23_Data> _20104ec50__Const(jule::Ptr<_20104d105_comptimeValue> _self_, jule::Ptr<_201100691_Eval>* _116931_e, jule::Ptr<_200ee374e_FnCallExpr>* _116946_fc) {
	if (((*(_116946_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_116931_e)).ptr(), (*(_116946_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Const", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _117417_constant = static__1ee33d150_NewBool(_2010ee492_IsConst(_self_.get()._field_data.ptr()));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_117417_constant, &__jule_any_type19), ._field_Constant=_117417_constant});;
}



inline jule::Ptr<_2010edb23_Data> _201050107__Field(jule::Ptr<_20104d105_comptimeValue> _self_, jule::Ptr<_201100691_Eval>* _118231_e, jule::Ptr<_200ee374e_FnCallExpr>* _118246_fc) {
	if (((*(_118246_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20100d071_StructIns> _118717_s = _201134c69_Struct(_self_.get()._field_data.get()._field_Kind.ptr());;
	if ((_118717_s == nullptr)) {
		_201100b9c_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_self_.get()._field_data.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_200ede838_Expr> _119217_arg = (*(_118246_fc)).get()._field_Args[0LL];;
	jule::Ptr<_2010edb23_Data> _119317_d = _201121eba_evalExpr((*(_118231_e)), _119217_arg);;
	if ((_119317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_2010ee492_IsConst(_119317_d.ptr())))) {
		_201100b9c_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_201138850_Prim> _120113_prim = _201133817_Prim(_119317_d.get()._field_Kind.ptr());;
	if (((_120113_prim == nullptr) || (!(_20113ba51_IsStr(_120113_prim.ptr()))))) {
		_201100b9c_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_2011314a2_Str(_119317_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Str _120613_ident = _1ee33e717_ReadStr(_119317_d.get()._field_Constant.ptr());;
	jule::Ptr<_20100c57b_FieldIns> _120717_f = _20100e32a_FindField(_118717_s.ptr(), _120613_ident);;
	if ((_120717_f == nullptr)) {
		_201100b9c_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_118717_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_120613_ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_119317_d=jule::new_ptr<_2010edb23_Data>((*(_self_.get()._field_data)));
	_119317_d=_201115783_evalStructSubIdentField((*(_118231_e)).ptr(), &(_119317_d), &(_118717_s), &(_119217_arg.get()._field_Token), &(_120717_f));
	return _201054084_buildComptimeValue(&(_119317_d));;
}



inline jule::Ptr<_2010edb23_Data> _201050415_subIdent(jule::Ptr<_20104d105_comptimeValue> _self_, jule::Str _121728_ident) {
	{
		auto &_match_expr{ _121728_ident };
		
		if (_match_expr == jule::Str("Unwrap", 6)) {
			_case_begin_20513a92a:;
			{
				jule::Ptr<_20102330b_FnIns> _122021_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _122133_e, jule::Ptr<_200ee374e_FnCallExpr>* _122148_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104dc82__Unwrap(_self_, _122133_e, _122148_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_122021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_20513a991:;
			{
				jule::Ptr<_20102330b_FnIns> _122721_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _122833_e, jule::Ptr<_200ee374e_FnCallExpr>* _122848_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104e139__Type(_self_, _122833_e, _122848_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_122721_method));;
			}
		}
		else if (_match_expr == jule::Str("Lvalue", 6)) {
			_case_begin_20513a771:;
			{
				jule::Ptr<_20102330b_FnIns> _123421_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _123533_e, jule::Ptr<_200ee374e_FnCallExpr>* _123548_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104e4e1__Lvalue(_self_, _123533_e, _123548_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_123421_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_20513a7e8:;
			{
				jule::Ptr<_20102330b_FnIns> _124121_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _124233_e, jule::Ptr<_200ee374e_FnCallExpr>* _124248_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104e898__Mutable(_self_, _124233_e, _124248_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_124121_method));;
			}
		}
		else if (_match_expr == jule::Str("Const", 5)) {
			_case_begin_20513a870:;
			{
				jule::Ptr<_20102330b_FnIns> _124821_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _124933_e, jule::Ptr<_200ee374e_FnCallExpr>* _124948_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _20104ec50__Const(_self_, _124933_e, _124948_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_124821_method));;
			}
		}
		else if (_match_expr == jule::Str("Field", 5)) {
			_case_begin_20513a463:;
			{
				jule::Ptr<_20102330b_FnIns> _125521_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _125633_e, jule::Ptr<_200ee374e_FnCallExpr>* _125648_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201050107__Field(_self_, _125633_e, _125648_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_125521_method));;
			}
		}
		else {
			_case_begin_20513a30e:;
			{
				return nullptr;;
			}
		}
		_match_end_20513a265:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20104d105_comptimeValue _Src) {
	_Stream << _20104d468_Str(&_Src);
	return _Stream;
}



inline jule::Str _201050a64_Str(_201050701_comptimeFiles* _self_) {
	return jule::Str("comptimeFiles", 13);;
}



inline jule::Bool _201050d72_Equal(jule::Ptr<_201050701_comptimeFiles> _self_, jule::Ptr<_2011310ea_TypeKind> _127421_other) {
	return false;;
}



inline void _2010512a1_ready(_201050701_comptimeFiles* _self_, jule::Ptr<_2010a4975_Var>* _127829_keyA, jule::Ptr<_2010a4975_Var>* _127846_keyB) {
	if (((*(_127829_keyA)) != nullptr)) {
		(*(_127829_keyA)).get()._field_Constant=true;
		(*(_127829_keyA)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		(*(_127829_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_127829_keyA)).get()._field_Kind=_2011e847b_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_127846_keyB)) != nullptr)) {
		(*(_127846_keyB)).get()._field_Constant=true;
		(*(_127846_keyB)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		(*(_127846_keyB)).get()._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_201051bb9_comptimeFile>(), 18)})});
	};
}



inline void _201051669_step(_201050701_comptimeFiles* _self_, jule::I32 _130023_i, jule::Ptr<_2010a4975_Var>* _130036_keyA, jule::Ptr<_2010a4975_Var>* _130053_keyB) {
	if (((*(_130036_keyA)) != nullptr)) {
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_130023_i)));
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_130053_keyB)) != nullptr)) {
		(*(_130053_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind.cast_ptr<_201051bb9_comptimeFile>(18).get()._field_file=(*(_self_))._field_files[_130023_i];
	};
}



inline jule::I32 _2010518cd_len(_201050701_comptimeFiles* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_files.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _201050701_comptimeFiles _Src) {
	_Stream << _201050a64_Str(&_Src);
	return _Stream;
}



inline jule::Str _20105202c_Str(_201051bb9_comptimeFile* _self_) {
	return jule::Str("comptimeFile", 12);;
}



inline jule::Bool _20105233a_Equal(jule::Ptr<_201051bb9_comptimeFile> _self_, jule::Ptr<_2011310ea_TypeKind> _132421_other) {
	return false;;
}



inline jule::Ptr<_2010edb23_Data> _201052813__Path(jule::Ptr<_201051bb9_comptimeFile> _self_, jule::Ptr<_201100691_Eval>* _132830_e, jule::Ptr<_200ee374e_FnCallExpr>* _132845_fc) {
	if (((*(_132845_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_132830_e)).ptr(), (*(_132845_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Path", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _133317_constant = static__1ee33d3e7_NewStr(_self_.get()._field_file.get()._field_File.get()._field_Path);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Model=jule::Any(_133317_constant, &__jule_any_type19), ._field_Constant=_133317_constant});;
}



inline jule::Ptr<_2010edb23_Data> _201052bba__Name(jule::Ptr<_201051bb9_comptimeFile> _self_, jule::Ptr<_201100691_Eval>* _134130_e, jule::Ptr<_200ee374e_FnCallExpr>* _134145_fc) {
	if (((*(_134145_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_134130_e)).ptr(), (*(_134145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _134617_constant = static__1ee33d3e7_NewStr(_1ed69aab8_Name(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Model=jule::Any(_134617_constant, &__jule_any_type19), ._field_Constant=_134617_constant});;
}



inline jule::Ptr<_2010edb23_Data> _201053072__Dir(jule::Ptr<_201051bb9_comptimeFile> _self_, jule::Ptr<_201100691_Eval>* _135429_e, jule::Ptr<_200ee374e_FnCallExpr>* _135444_fc) {
	if (((*(_135444_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_135429_e)).ptr(), (*(_135444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Dir", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ee33c6d2_Const> _135917_constant = static__1ee33d3e7_NewStr(_1ed69a854_Dir(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Model=jule::Any(_135917_constant, &__jule_any_type19), ._field_Constant=_135917_constant});;
}



inline jule::Ptr<_2010edb23_Data> _201053380_subIdent(jule::Ptr<_201051bb9_comptimeFile> _self_, jule::Str _136728_ident) {
	{
		auto &_match_expr{ _136728_ident };
		
		if (_match_expr == jule::Str("Path", 4)) {
			_case_begin_205153d94:;
			{
				jule::Ptr<_20102330b_FnIns> _137021_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _137133_e, jule::Ptr<_200ee374e_FnCallExpr>* _137148_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201052813__Path(_self_, _137133_e, _137148_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_137021_method));;
			}
		}
		else if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_205153e0a:;
			{
				jule::Ptr<_20102330b_FnIns> _137721_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _137833_e, jule::Ptr<_200ee374e_FnCallExpr>* _137848_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201052bba__Name(_self_, _137833_e, _137848_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_137721_method));;
			}
		}
		else if (_match_expr == jule::Str("Dir", 3)) {
			_case_begin_205153bb8:;
			{
				jule::Ptr<_20102330b_FnIns> _138421_method = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>([=](jule::Ptr<_201100691_Eval>* _138533_e, jule::Ptr<_200ee374e_FnCallExpr>* _138548_fc, jule::Ptr<_2010edb23_Data>* ) mutable -> jule::Ptr<_2010edb23_Data> {
					return _201053072__Dir(_self_, _138533_e, _138548_fc);;
				}), });;
				return _201053704_buildAsComptimeMethodData(&(_138421_method));;
			}
		}
		else {
			_case_begin_2051537ab:;
			{
				return nullptr;;
			}
		}
		_match_end_205153080:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _201051bb9_comptimeFile _Src) {
	_Stream << _20105202c_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_201084669_Sema>*,jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>*)> _201055e10_readyFn(jule::Ptr<_201055a25_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_201084669_Sema>*,jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>*)>([=](jule::Ptr<_201084669_Sema>* _6321_sema, jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205161c81:;
			if (it != expr_end) {
				jule::I32 _6418_i = it - expr->begin();
				jule::Ptr<_200ee7654_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_20112e868_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_205161c81;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_2011310ea_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_205163e3c:;
						if (it != expr_end) {
							jule::Ptr<_200eda6ad_TypeDecl> _7029_mask = *it;
							{
								jule::I32 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_2011310ea_TypeKind> _7229_kind = _20108b9e5_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_20114e426_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_205165adc:;
											{
												jule::Ptr<_200edac74_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_200edac74_IdentTypeDecl>(&__jule_any_type20);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _2010570dc_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(_7637_itd.get()._field_Ident), 20)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_205165a87:;
									};
									return false;;
								};
								_julec_label_success:;
								{ jule::Slice<jule::Ptr<_2011310ea_TypeKind>> &__jule_push_dest = _6525_generic.get()._field_Constraint; __jule_push_dest.push(_7229_kind); };
							}
							_iter_next_205163e3c:;
							++it;
							goto _iter_begin_205163e3c;
						}
						_iter_end_205163e3c:;
					};
				}
				_iter_next_205161c81:;
				++it;
				_6418_i++;
				goto _iter_begin_205161c81;
			}
			_iter_end_205161c81:;
		};
		return true;;
	});;
}



inline jule::Bool _201056174_readyFi(jule::Ptr<_201055a25_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _2010910c1_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _201055e10_readyFn(_self_)));;
}



inline jule::Bool _2010563d8_readySi(jule::Ptr<_201055a25_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _201055e10_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _20105664c_ready(jule::Ptr<_201055a25_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _201056174_readyFi(_self_);;
	};
	return _2010563d8_readySi(_self_);;
}



inline jule::Bool _2010568b1_check(jule::Ptr<_201055a25_constraintChecker> _self_) {
	if ((!(_20105664c_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20516c671:;
		if (it != expr_end) {
			jule::I32 _11914_i = it - expr->begin();
			jule::Ptr<_20112e868_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_20516c671;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20516d1cc:;
					if (it != expr_end) {
						jule::Ptr<_2011310ea_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_201138850_Prim> _12425_prim = _201133817_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _201139411_IsConstraint(_12425_prim.ptr()))) {
								if (_201056d01_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_20516c671;
								};
								goto _iter_next_20516d1cc;
							};
							if (_2011317b0_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_20516c671;
							};
						}
						_iter_next_20516d1cc:;
						++it;
						goto _iter_begin_20516d1cc;
					}
					_iter_end_20516d1cc:;
				};
				_201086eeb_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_20516c671:;
			++it;
			_11914_i++;
			goto _iter_begin_20516c671;
		}
		_iter_end_20516c671:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _201055a25_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _201057c7a_IsTraitImpl(_2010578c3_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _201057ede_IsStructImpl(_2010578c3_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2010578c3_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20105c92d_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20105cd29_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20105d115_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20105d489_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20105d775_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20105e04a_IsWhileNext(_20105dbe8_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _20105dbe8_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20105e5cd_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20105e9c9_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20105ed81_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20106016c_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201060458_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201060810_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201060c83_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20106113a_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _201061c51_IsGenericTypeMatch(_201061745_Match* _self_) {
	return (((*(_self_))._field_TypeMatch && ((*(_self_))._field_Expr != nullptr)) && (*(_self_))._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _201061745_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2010625e2_isDefault(_201062290_Case* _self_) {
	return ((*(_self_))._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _201062290_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201062867_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201062bb9_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2010632c4_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201063747_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20107b397_ImportInfo> _2010649ce_SelectPackage(_20106455b_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)> _45632_selector) {
	return _201084adc_SelectPackage((*(_self_))._field_s.ptr(), _45632_selector);;
}



inline jule::Ptr<_2010a4975_Var> _201064d86_FindVar(_20106455b_scopeChecker* _self_, jule::Str _46726_ident, jule::Bool _46738_binded) {
	;
	jule::Ptr<_2010a4975_Var> _47017_v = _2010eb58d_findVar((*(_self_))._field_table.ptr(), _46726_ident, _46738_binded, true);;
	if ((_47017_v != nullptr)) {
		return _47017_v;;
	};
	jule::Ptr<_20106455b_scopeChecker> _47517_parent = (*(_self_))._field_parent;;
	while ((_47517_parent != nullptr)) {
		{
			_47017_v=_2010eb58d_findVar(_47517_parent.get()._field_table.ptr(), _46726_ident, _46738_binded, true);
			if ((_47017_v != nullptr)) {
				return _47017_v;;
			};
			_47517_parent=_47517_parent.get()._field_parent;
		}
	_iter_next_20519580e:;
	}
	_iter_end_20519580e:;;
	return _201084e94_FindVar((*(_self_))._field_s.ptr(), _46726_ident, _46738_binded);;
}



inline jule::Ptr<_2011303a2_TypeAlias> _20106523d_FindTypeAlias(_20106455b_scopeChecker* _self_, jule::Str _49432_ident, jule::Bool _49444_binded) {
	;
	jule::Ptr<_2011303a2_TypeAlias> _49717_ta = _2010eb9de_findTypeAlias((*(_self_))._field_table.ptr(), _49432_ident, _49444_binded, true);;
	if ((_49717_ta != nullptr)) {
		return _49717_ta;;
	};
	jule::Ptr<_20106455b_scopeChecker> _50217_parent = (*(_self_))._field_parent;;
	while ((_50217_parent != nullptr)) {
		{
			_49717_ta=_2010eb9de_findTypeAlias(_50217_parent.get()._field_table.ptr(), _49432_ident, _49444_binded, true);
			if ((_49717_ta != nullptr)) {
				return _49717_ta;;
			};
			_50217_parent=_50217_parent.get()._field_parent;
		}
	_iter_next_2051983c2:;
	}
	_iter_end_2051983c2:;;
	return _20108534b_FindTypeAlias((*(_self_))._field_s.ptr(), _49432_ident, _49444_binded);;
}



inline jule::Ptr<_20100a25a_Struct> _2010655e5_FindStruct(_20106455b_scopeChecker* _self_, jule::Str _51929_ident, jule::Bool _51941_binded) {
	return _201085703_FindStruct((*(_self_))._field_s.ptr(), _51929_ident, _51941_binded);;
}



inline jule::Ptr<_20102065a_Fn> _20106599c_FindFn(_20106455b_scopeChecker* _self_, jule::Str _52825_ident, jule::Bool _52837_binded) {
	return _201085aaa_FindFn((*(_self_))._field_s.ptr(), _52825_ident, _52837_binded);;
}



inline jule::Ptr<_20103287b_Trait> _201065caa_FindTrait(_20106455b_scopeChecker* _self_, jule::Str _53728_ident) {
	return _201085db8_FindTrait((*(_self_))._field_s.ptr(), _53728_ident);;
}



inline jule::Ptr<_20103510e_Enum> _2010660b8_FindEnum(_20106455b_scopeChecker* _self_, jule::Str _54627_ident) {
	return _2010861c6_FindEnum((*(_self_))._field_s.ptr(), _54627_ident);;
}



inline jule::Ptr<_201036709_TypeEnum> _2010663c6_FindTypeEnum(_20106455b_scopeChecker* _self_, jule::Str _55531_ident) {
	return _2010864d4_FindTypeEnum((*(_self_))._field_s.ptr(), _55531_ident);;
}



inline jule::Bool _201066706_isUnsafe(jule::Ptr<_20106455b_scopeChecker> _self_) {
	jule::Ptr<_20106455b_scopeChecker> _56317_scope = _self_;;
	_julec_label_iter:;
	if (_56317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_56317_scope.get()._field_parent != nullptr)) {
		_56317_scope=_56317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _20106696a_isRoot(_20106455b_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _201066b46_stop(_20106455b_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _201066daa_stopped(_20106455b_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _20106711e_isDeferred(jule::Ptr<_20106455b_scopeChecker> _self_) {
	jule::Ptr<_20106455b_scopeChecker> _59617_scope = _self_;;
	_julec_label_iter:;
	if (_59617_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_59617_scope.get()._field_parent != nullptr)) {
		_59617_scope=_59617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_20106455b_scopeChecker> _201067383_getRoot(jule::Ptr<_20106455b_scopeChecker> _self_) {
	jule::Ptr<_20106455b_scopeChecker> _61417_root = _self_;;
	while (((_61417_root.get()._field_parent != nullptr) && (_61417_root.get()._field_owner == nullptr))) {
		{
			_61417_root=_61417_root.get()._field_parent;
		}
	_iter_next_2051a2376:;
	}
	_iter_end_2051a2376:;;
	return _61417_root;;
}



inline jule::Ptr<_20106455b_scopeChecker> _2010675e7_getHardRoot(jule::Ptr<_20106455b_scopeChecker> _self_) {
	jule::Ptr<_20106455b_scopeChecker> _62417_root = _self_;;
	while ((_62417_root.get()._field_parent != nullptr)) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_2051a3454:;
	}
	_iter_end_2051a3454:;;
	return _62417_root;;
}



inline jule::Ptr<_20106016c_Label> _201067905_findLabel(_20106455b_scopeChecker* _self_, jule::Str _63428_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2051a3e8d:;
		if (it != expr_end) {
			jule::Any _63521_st = *it;
			{
				{
					auto &_match_expr{ _63521_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_2051a49a5:;
						{
							jule::Ptr<_20106016c_Label> _63825_label = _63521_st.cast_ptr<_20106016c_Label>(&__jule_any_type21);;
							if ((_63825_label.get()._field_Ident == _63428_ident)) {
								return _63825_label;;
							};
						}
					}
					_match_end_2051a48a6:;
				};
			}
			_iter_next_2051a3e8d:;
			++it;
			goto _iter_begin_2051a3e8d;
		}
		_iter_end_2051a3e8d:;
	};
	return nullptr;;
}



inline jule::Ptr<_2010632c4_scopeLabel> _201067c13_findLabelScope(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Str _65034_ident) {
	jule::Ptr<_2010632c4_scopeLabel> _65117_label = _201068021_findLabelAll(_self_.ptr(), _65034_ident);;
	if (((_65117_label != nullptr) && (_65117_label.get()._field_scope == _self_))) {
		return _65117_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_2010632c4_scopeLabel> _201068021_findLabelAll(_20106455b_scopeChecker* _self_, jule::Str _66231_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2051a6a95:;
		if (it != expr_end) {
			jule::Ptr<_2010632c4_scopeLabel> _66321_lbl = *it;
			{
				if ((_66321_lbl.get()._field_label.get()._field_Ident == _66231_ident)) {
					return _66321_lbl;;
				};
			}
			_iter_next_2051a6a95:;
			++it;
			goto _iter_begin_2051a6a95;
		}
		_iter_end_2051a6a95:;
	};
	return nullptr;;
}



inline jule::Bool _2010683c8_isDuplicatedIdent(_20106455b_scopeChecker* _self_, jule::Uintptr _67436_itself, jule::Str _67453_ident) {
	jule::Ptr<_2010a4975_Var> _67513_v = _201064d86_FindVar(_self_, _67453_ident, false);;
	if (((_67513_v != nullptr) && (static_cast<jule::Uintptr>(_67513_v) != _67436_itself))) {
		if ((_67513_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_67513_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_2010868ad_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_2011303a2_TypeAlias> _68313_ta = _20106523d_FindTypeAlias(_self_, _67453_ident, false);;
	if (((_68313_ta != nullptr) && (static_cast<jule::Uintptr>(_68313_ta) != _67436_itself))) {
		if ((_68313_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_2010868ad_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _20106864d_checkVarDecl(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eeccb9_VarDecl> _69436_decl) {
	jule::Ptr<_2010a4975_Var> _69517_v = _20102b248_buildVar(_69436_decl);;
	_69517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = _self_.get()._field_table.get()._field_Vars; __jule_push_dest.push(_69517_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_69517_v, &__jule_any_type8)); };
	});;
	if (_2010683c8_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69517_v)), _69517_v.get()._field_Ident)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _69517_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_69517_v.get()._field_Ident, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_201066b46_stop(_self_.ptr());
		return;;
	};
	_201098194_checkVarDecl(_self_.get()._field_s, &(_69517_v), jule::Trait<_20114e426_Lookup>(_self_, 0));
	if (((!(_2010a505d_IsTypeInferred(_69517_v.ptr()))) && ((_69517_v.get()._field_Kind == nullptr) || (_69517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_20109bd68_checkTypeVar(_self_.get()._field_s, &(_69517_v), jule::Trait<_20114e426_Lookup>(_self_, 0));
}



inline void _2010688c3_checkTypeAliasDecl(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_20100162a_TypeAliasDecl> _71842_decl) {
	jule::Ptr<_2011303a2_TypeAlias> _71917_ta = _201027e7b_buildTypeAlias(_71842_decl);;
	if (_2010683c8_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_71917_ta)), _71917_ta.get()._field_Ident)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _71917_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_71917_ta.get()._field_Ident, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_201066b46_stop(_self_.ptr());
		return;;
	};
	_201092886_checkTypeAliasDecl(_self_.get()._field_s, &(_71917_ta), jule::Trait<_20114e426_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> &__jule_push_dest = _self_.get()._field_table.get()._field_TypeAliases; __jule_push_dest.push(_71917_ta); };
	if ((_71917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_201066b46_stop(_self_.ptr());
	};
}



inline jule::Ptr<_20105c92d_Scope> _201068b37_getChild(_20106455b_scopeChecker* _self_) {
	return jule::new_ptr<_20105c92d_Scope>(_20105c92d_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _201069000_checkChildSsc(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eea2e4_ScopeTree>* _74238_tree, jule::Ptr<_20105c92d_Scope>* _74261_s, jule::Ptr<_20106455b_scopeChecker>* _74277_ssc) {
	(*(_74277_ssc)).get()._field_parent=_self_;
	_2010744a0_check((*(_74277_ssc)), _74238_tree, _74261_s);
}



inline jule::Ptr<_20105c92d_Scope> _2010693a7_checkChildSc(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eea2e4_ScopeTree>* _74737_tree, jule::Ptr<_20106455b_scopeChecker>* _74760_ssc) {
	jule::Ptr<_20105c92d_Scope> _74817_s = _201068b37_getChild(_self_.ptr());;
	_201069000_checkChildSsc(_self_, _74737_tree, &(_74817_s), _74760_ssc);
	return _74817_s;;
}



inline jule::Ptr<_20105c92d_Scope> _2010696b5_checkChild(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eea2e4_ScopeTree>* _75335_tree) {
	jule::Ptr<_20106455b_scopeChecker> _75417_ssc = _201074714_newChildChecker(_self_);;
	return _2010693a7_checkChildSc(_self_, _75335_tree, &(_75417_ssc));;
}



inline void _20106993a_checkAnonScope(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eea2e4_ScopeTree> _75838_tree) {
	jule::Ptr<_20105c92d_Scope> _75917_s = _2010696b5_checkChild(_self_, &(_75838_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_75917_s, &__jule_any_type22)); };
}



inline void _201069c59_processErrorCall(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_20101b7bb_BuiltinErrorCallExprModel>* _76341_m, jule::Ptr<_1ed694d8c_Token> _76372_err) {
	if (_20106711e_isDeferred(_self_)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_20106455b_scopeChecker> _76817_root = _201067383_getRoot(_self_);;
	if ((!(_76817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_20108731a_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_76341_m)).get()._field_Func=_76817_root.get()._field_owner;
}



inline void _201069ece_checkExpr(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200ede838_Expr> _77633_expr) {
	jule::Ptr<_201100691_Eval> _77717_eval = _20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0));;
	_77717_eval.get()._field_ignored=true;
	jule::Ptr<_2010edb23_Data> _77917_d = _201121eba_evalExpr(_77717_eval, _77633_expr);;
	if ((_77917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _77917_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_2051bb4a0:;
			{
				jule::Ptr<_20101b7bb_BuiltinErrorCallExprModel> _78621_m = _77917_d.get()._field_Model.cast_ptr<_20101b7bb_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_201069c59_processErrorCall(_self_, &(_78621_m), _77633_expr.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_77917_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_2051bb6ae:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_77917_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_2051bb55a:;
			{
				_201086eeb_pushErr(_self_.get()._field_s.ptr(), _77633_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_2051bb648:;
	};
}



inline jule::Ptr<_20105cd29_If> _20106a2dc_checkIf(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_201000629_If> _80631_i) {
	jule::Ptr<_20105c92d_Scope> _80717_s = _2010696b5_checkChild(_self_, &(_80631_i.get()._field_Scope));;
	jule::Ptr<_2010edb23_Data> _80917_d = _201121eba_evalExpr(_20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0)), _80631_i.get()._field_Expr);;
	if ((_80917_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_201138850_Prim> _81417_prim = _201133817_Prim(_80917_d.get()._field_Kind.ptr());;
	if (((_81417_prim == nullptr) || (!(_20113b7dc_IsBool(_81417_prim.ptr()))))) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _80631_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_20105cd29_If>(_20105cd29_If{._field_Expr=_80917_d.get()._field_Model, ._field_Scope=_80717_s});;
}



inline jule::Ptr<_20105d115_Else> _20106a5ea_checkElse(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_2010009d1_Else> _82633_e) {
	return jule::new_ptr<_20105d115_Else>(_20105d115_Else{._field_Scope=_2010696b5_checkChild(_self_, &(_82633_e.get()._field_Scope))});;
}



inline void _20106a870_checkConditional(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_201000e54_Conditional> _83240_conditional) {
	jule::Ptr<_20105d489_Conditional> _83317_c = jule::new_ptr<_20105d489_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_83317_c, &__jule_any_type36)); };
	_83317_c.get()._field_Elifs=jule::Slice<jule::Ptr<_20105cd29_If>>::alloc(0LL, (_83240_conditional.get()._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_20105cd29_If>> &__jule_push_dest = _83317_c.get()._field_Elifs; __jule_push_dest.push(_20106a2dc_checkIf(_self_, _83240_conditional.get()._field_Head)); };
	{
		auto expr = &(_83240_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2051c5476:;
		if (it != expr_end) {
			jule::Ptr<_201000629_If> _83921_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_20105cd29_If>> &__jule_push_dest = _83317_c.get()._field_Elifs; __jule_push_dest.push(_20106a2dc_checkIf(_self_, _83921_elif)); };
			}
			_iter_next_2051c5476:;
			++it;
			goto _iter_begin_2051c5476;
		}
		_iter_end_2051c5476:;
	};
	if ((_83240_conditional.get()._field_Default != nullptr)) {
		_83317_c.get()._field_Default=_20106a5ea_checkElse(_self_, _83240_conditional.get()._field_Default);
	};
}



inline void _20106acd2_checkIterScopeSsc(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Uintptr _84837_it, jule::Ptr<_200eea2e4_ScopeTree> _84854_tree, jule::Ptr<_20105c92d_Scope>* _84877_s, jule::Ptr<_20106455b_scopeChecker> _84892_ssc) {
	_84892_ssc.get()._field_it=_84837_it;
	_201069000_checkChildSsc(_self_, &(_84854_tree), _84877_s, &(_84892_ssc));
}



inline jule::Ptr<_20105c92d_Scope> _20106b233_checkIterScopeSc(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Uintptr _85336_it, jule::Ptr<_200eea2e4_ScopeTree> _85353_tree, jule::Ptr<_20106455b_scopeChecker> _85375_ssc) {
	jule::Ptr<_20105c92d_Scope> _85417_scope = _201068b37_getChild(_self_.ptr());;
	_20106acd2_checkIterScopeSsc(_self_, _85336_it, _85353_tree, &(_85417_scope), _85375_ssc);
	return _85417_scope;;
}



inline jule::Ptr<_20105c92d_Scope> _20106b5da_checkIterScope(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Uintptr _85934_it, jule::Ptr<_200eea2e4_ScopeTree>* _85952_tree) {
	jule::Ptr<_20106455b_scopeChecker> _86017_ssc = _201074714_newChildChecker(_self_);;
	return _20106b233_checkIterScopeSc(_self_, _85934_it, (*(_85952_tree)), _86017_ssc);;
}



inline void _20106b860_checkInfIter(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eed7d1_Iter>* _86437_it) {
	jule::Ptr<_20105d775_InfIter> _86517_kind = jule::new_ptr<_20105d775_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_86517_kind, &__jule_any_type37)); };
	_86517_kind.get()._field_Scope=_20106b5da_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_86517_kind)), &((*(_86437_it)).get()._field_Scope));
}



inline void _20106bad5_checkWhileIter(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eed7d1_Iter>* _87039_it) {
	jule::Ptr<_200eee0a6_WhileKind> _87117_wh = (*(_87039_it)).get()._field_Kind.cast_ptr<_200eee0a6_WhileKind>(&__jule_any_type38);;
	if (((_87117_wh.get()._field_Expr == nullptr) && (_87117_wh.get()._field_Next == nullptr))) {
		_20106b860_checkInfIter(_self_, _87039_it);
		return;;
	};
	jule::Ptr<_20105dbe8_WhileIter> _87717_kind = jule::new_ptr<_20105dbe8_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_87717_kind, &__jule_any_type39)); };
	_87717_kind.get()._field_Scope=_20106b5da_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87717_kind)), &((*(_87039_it)).get()._field_Scope));
	if ((_87117_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_2010edb23_Data> _88221_d = _201121eba_evalExpr(_20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0)), _87117_wh.get()._field_Expr);;
		if ((_88221_d == nullptr)) {
			return;;
		};
		jule::Ptr<_201138850_Prim> _88717_prim = _201133817_Prim(_88221_d.get()._field_Kind.ptr());;
		if ((_88717_prim == nullptr)) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_20113b7dc_IsBool(_88717_prim.ptr())))) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_87717_kind.get()._field_Expr=_88221_d.get()._field_Model;
	};
	if (_200eee408_IsWhileNext(_87117_wh.ptr())) {
		if ((!(_20105be5a_isValidAstStForNextSt(&(_87117_wh.get()._field_Next))))) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _90717_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_20107324b_checkNode(_self_, &(_87117_wh.get()._field_Next));
		if ((_90717_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91025_st = _self_.get()._field_scope.get()._field_Stmts[_90717_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _90717_n);
			if ((!(_20105c202_isValidStForNextSt(&(_91025_st))))) {
				_201086eeb_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_87717_kind.get()._field_Next=_91025_st;
		};
	};
}



inline void _20106be9d_checkComptimeRangeIter(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eed7d1_Iter>* _92047_it, jule::Ptr<_20105e5cd_RangeIter>* _92063_kind, jule::Ptr<_2010edb23_Data>* _92086_d) {
	if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
		if (((!(_2010868ad_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _2010683c8_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyA.get()._field_Ident))) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_20108731a_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
		if (((!(_2010868ad_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _2010683c8_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyB.get()._field_Ident))) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_20108731a_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_201038860_comptimeRange> _93417_comptime = _201136908_comptimeRange((*(_92086_d)).get()._field_Kind.ptr());;
	_201038684_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._201037e14_ready(_93417_comptime.get()._field_kind, &((*(_92063_kind)).get()._field_KeyA), &((*(_92063_kind)).get()._field_KeyB));
	jule::I32 _93617_i = 0LL;;
	jule::I32 _93713_errors = _self_.get()._field_s.get()._field_errors.len();;
	for (; (_93617_i < _201038684_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._201038541_len(_93417_comptime.get()._field_kind)); (_93617_i)++) {
		{
			jule::Ptr<_20106455b_scopeChecker> _93921_ssc = _201074714_newChildChecker(_self_);;
			jule::Ptr<_20105c92d_Scope> _94021_scope = _201068b37_getChild(_self_.ptr());;
			if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
				(*(_92063_kind)).get()._field_KeyA.get()._field_Scope=_94021_scope;
				{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = _93921_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92063_kind)).get()._field_KeyA); };
			};
			if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
				(*(_92063_kind)).get()._field_KeyB.get()._field_Scope=_94021_scope;
				{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = _93921_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92063_kind)).get()._field_KeyB); };
			};
			_201038684_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._2010382cc_step(_93417_comptime.get()._field_kind, _93617_i, &((*(_92063_kind)).get()._field_KeyA), &((*(_92063_kind)).get()._field_KeyB));
			_201069000_checkChildSsc(_self_, &((*(_92047_it)).get()._field_Scope), &(_94021_scope), &(_93921_ssc));
			if ((_93713_errors != _self_.get()._field_s.get()._field_errors.len())) {
				goto _iter_end_2051e0194;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_94021_scope, &__jule_any_type22)); };
		}
	_iter_next_2051e0194:;
	}
	_iter_end_2051e0194:;;
}



inline void _20106c223_checkRangeIter(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eed7d1_Iter>* _95939_it) {
	jule::Ptr<_200eee947_RangeKind> _96017_rang = (*(_95939_it)).get()._field_Kind.cast_ptr<_200eee947_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_2010edb23_Data> _96217_d = _20111bd50_evalExpr1(_20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0)), _96017_rang.get()._field_Expr);;
	if ((_96217_d == nullptr)) {
		return;;
	};
	jule::Ptr<_20105e5cd_RangeIter> _96717_kind = jule::new_ptr<_20105e5cd_RangeIter>(_20105e5cd_RangeIter{._field_Expr=_96217_d, });;
	_2010e4a4d_rangeChecker _97117_rc = _2010e4a4d_rangeChecker{._field_sc=_self_, ._field_rang=_96017_rang, ._field_Kind=_96717_kind, ._field_d=_96217_d};;
	jule::Bool _97713_ok = _2010e6874_check(&_97117_rc);;
	if ((!(_97713_ok))) {
		return;;
	};
	jule::Ptr<_201038860_comptimeRange> _98217_comptimeRange = _201136908_comptimeRange(_96217_d.get()._field_Kind.ptr());;
	if ((_98217_comptimeRange != nullptr)) {
		_20106be9d_checkComptimeRangeIter(_self_, _95939_it, &(_96717_kind), &(_96217_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_96717_kind, &__jule_any_type41)); };
	jule::Ptr<_20106455b_scopeChecker> _99017_ssc = _201074714_newChildChecker(_self_);;
	jule::Ptr<_20105c92d_Scope> _99117_scope = _201068b37_getChild(_self_.ptr());;
	if ((_96717_kind.get()._field_KeyA != nullptr)) {
		if (((!(_2010868ad_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _2010683c8_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyA.get()._field_Ident))) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_20108731a_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyA.get()._field_Scope=_99117_scope;
		{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = _99017_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_96717_kind.get()._field_KeyA); };
	};
	if ((_96717_kind.get()._field_KeyB != nullptr)) {
		if (((!(_2010868ad_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _2010683c8_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyB.get()._field_Ident))) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_20108731a_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyB.get()._field_Scope=_99117_scope;
		{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = _99017_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_96717_kind.get()._field_KeyB); };
	};
	_20106acd2_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96717_kind)), (*(_95939_it)).get()._field_Scope, &(_99117_scope), _99017_ssc);
	_96717_kind.get()._field_Scope=_99117_scope;
}



inline void _20106c498_checkIter(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eed7d1_Iter> _101533_it) {
	if (_200eedb33_IsInf(_101533_it.ptr())) {
		_20106b860_checkInfIter(_self_, &(_101533_it));
		return;;
	};
	{
		auto &_match_expr{ _101533_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_205200ade:;
			{
				_20106bad5_checkWhileIter(_self_, &(_101533_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_205200649:;
			{
				_20106c223_checkRangeIter(_self_, &(_101533_it));
			}
		}
		else {
			_case_begin_205200061:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_20520000b:;
	};
}



inline jule::Bool _20106c7a6_checkValidContLabel(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Uintptr _103139_it) {
	jule::Ptr<_20106455b_scopeChecker> _103217_scope = _self_;;
	_julec_label_iter:;
	if ((_103217_scope.get()._field_it == _103139_it)) {
		return true;;
	};
	if ((_103217_scope.get()._field_parent != nullptr)) {
		_103217_scope=_103217_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _20106cab4_checkValidBreakLabel(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Uintptr _104740_ptr) {
	jule::Ptr<_20106455b_scopeChecker> _104817_scope = _self_;;
	_julec_label_iter:;
	if ((_104817_scope.get()._field_it == _104740_ptr)) {
		return true;;
	};
	if ((_104817_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _105617_mtch = static_cast<jule::Uintptr>(((_201062290_Case*)(_104817_scope.get()._field_cse))->_field_Owner);;
		if ((_105617_mtch == _104740_ptr)) {
			return true;;
		};
	};
	if ((_104817_scope.get()._field_parent != nullptr)) {
		_104817_scope=_104817_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_20105e9c9_ContSt> _20106cdc2_checkContValidScope(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_2010001a6_ContSt> _107039_c) {
	if (_20106711e_isDeferred(_self_)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_107039_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_20105e9c9_ContSt>();;
	};
	jule::Ptr<_20106455b_scopeChecker> _108017_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_108017_scope.get()._field_it == 0LLU) && (_108017_scope.get()._field_parent != nullptr)) && (_108017_scope.get()._field_owner == nullptr))) {
			_case_begin_205207a08:;
			{
				_108017_scope=_108017_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_108017_scope.get()._field_it != 0LLU)) {
			_case_begin_205207a80:;
			{
				return jule::new_ptr<_20105e9c9_ContSt>(_20105e9c9_ContSt{._field_It=_108017_scope.get()._field_it});;
			}
		}
		_match_end_20520794d:;
	};
	_201086eeb_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _20106d147_checkCont(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_2010001a6_ContSt> _109429_c) {
	jule::Ptr<_20105e9c9_ContSt> _109517_cont = _20106cdc2_checkContValidScope(_self_, _109429_c);;
	if ((_109517_cont == nullptr)) {
		return;;
	};
	if ((_109429_c.get()._field_Label != nullptr)) {
		jule::Ptr<_2010632c4_scopeLabel> _110121_label = _20105a134_findLabelParent(_109429_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_110121_label == nullptr)) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_110121_label.get()._field_used=true;
		if (((_110121_label.get()._field_pos + 1LL) >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I32 _111417_i = (_110121_label.get()._field_pos + 1LL);;
		if ((_111417_i >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _111825_st = _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_111417_i];;
			{
				auto &_match_expr{ _111825_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_205210192:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_20105d775_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_2052108ce:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_20105e5cd_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_205210945:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_20105dbe8_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_205210747:;
					{
						_201086eeb_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_2052106e2:;
			};
		};
	};
	if ((_109517_cont.get()._field_It != 0LLU)) {
		if ((!(_20106c7a6_checkValidContLabel(_self_, _109517_cont.get()._field_It)))) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_109517_cont, &__jule_any_type42)); };
}



inline void _20106d3bc_checkLabel(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200ee7a0b_LabelSt> _114134_l) {
	if ((_201067905_findLabel(_self_.ptr(), _114134_l.get()._field_Ident) != nullptr)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _114134_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_114134_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_20106016c_Label> _114717_label = jule::new_ptr<_20106016c_Label>(_20106016c_Label{._field_Ident=_114134_l.get()._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_114717_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_2010632c4_scopeLabel>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(jule::new_ptr<_2010632c4_scopeLabel>(_2010632c4_scopeLabel{._field_token=_114134_l.get()._field_Token, ._field_label=_114717_label, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _20106d642_pushGoto(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200ee7db3_GotoSt> _116032_gt) {
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_201060458_GotoSt>(_201060458_GotoSt{._field_Ident=_116032_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type43)); };
	{ jule::Slice<jule::Ptr<_201063747_scopeGoto>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(jule::new_ptr<_201063747_scopeGoto>(_201063747_scopeGoto{._field_gt=_116032_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})); };
}



inline void _20106d8b7_checkPostfix(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200ee8ce8_AssignSt> _117236_a) {
	if ((_117236_a.get()._field_Left.len() > 1LL)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_200ede838_Expr> _117817_expr = _117236_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_2010edb23_Data> _117917_d = _201121eba_evalExpr(_20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0)), _117817_expr);;
	if ((_117917_d == nullptr)) {
		return;;
	};
	_20105bbb3_checkAssign(&(_self_.get()._field_s), &(_117917_d), nullptr, _117236_a.get()._field_Setter);
	if ((_201133ce0_Ptr(_117917_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_201140615_Ptr> _118721_ptr = _201133ce0_Ptr(_117917_d.get()._field_Kind.ptr());;
		if (_2011410d8_IsUnsafe(_118721_ptr.ptr())) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_201133817_Prim(_117917_d.get()._field_Kind.ptr()) == nullptr) || (!(_1ee33c292_IsNum(_201133817_Prim(_117917_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_201060810_Postfix>(_201060810_Postfix{._field_Expr=_117917_d.get()._field_Model, ._field_Op=_117236_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type44)); };
}



inline jule::Bool _20106dbc5_isNewAssignIdent(_20106455b_scopeChecker* _self_, jule::Str _120535_ident) {
	if ((_1ed697631_IsIgnoreIdent(_120535_ident) || _120535_ident.empty())) {
		return false;;
	};
	return (_2010ebd96_defByIdent((*(_self_))._field_table.ptr(), _120535_ident, false) == nullptr);;
}



inline jule::Bool _20106e126_checkStructureAssignOp(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_20100d071_StructIns>* _121247_s, jule::Ptr<_200ee8ce8_AssignSt>* _121267_a, jule::Ptr<_2010edb23_Data>* _121286_r) {
	jule::Ptr<_20102330b_FnIns> _121517_overload = nullptr;;
	{
		auto &_match_expr{ (*(_121267_a)).get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_205223161:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_205221bdc:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_20522212c:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_205222193:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_205222209:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_205222270:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_2052231c7:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_20522323d:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_2052232a4:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_20522331a:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_2052220b6:;
			{
				_201086eeb_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_20100d3d4_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_205221a33:;
	};
	if ((_121517_overload == nullptr)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_20100d3d4_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_20102243c_ParamIns> _124717_p = _121517_overload.get()._field_Params[1LL];;
	return _20108e289_checkAssignType(_self_.get()._field_s, _124717_p.get()._field_Decl.get()._field_Reference, &(_124717_p.get()._field_Kind), _121286_r, (*(_121267_a)).get()._field_Setter);;
}



inline void _20106e39b_checkSingleAssign(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200ee8ce8_AssignSt>* _125142_a) {
	jule::Ptr<_2010edb23_Data> _125217_l = nullptr;;
	if ((!(_1ed697631_IsIgnoreIdent((*(_125142_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_200ede838_Expr> _125521_expr = (*(_125142_a)).get()._field_Left[0LL].get()._field_Expr;;
		_125217_l=_201121eba_evalExpr(_20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0)), _125521_expr);
		if ((_125217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_201100691_Eval> _126217_eval = nullptr;;
	if ((_125217_l != nullptr)) {
		_126217_eval=_20108d981_evalp(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0), _125217_l.get()._field_Kind);
	} else {
		_126217_eval=_20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0));
	};
	_126217_eval.get()._field_unsafety=_201066706_isUnsafe(_self_);
	jule::Ptr<_2010edb23_Data> _126917_r = _201121eba_evalExpr(_126217_eval, (*(_125142_a)).get()._field_Right);;
	if ((_126917_r == nullptr)) {
		return;;
	};
	if ((_125217_l == nullptr)) {
		if (_2011323b5_Void(_126917_r.get()._field_Kind.ptr())) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_126917_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_20105bbb3_checkAssign(&(_self_.get()._field_s), &(_125217_l), _126917_r, (*(_125142_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_2011354a6_Tup(_126917_r.get()._field_Kind.ptr()) != nullptr)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_201012020_OperandExprModel> _129117_lm = jule::new_ptr<_201012020_OperandExprModel>(_201012020_OperandExprModel{._field_Kind=_125217_l.get()._field_Kind, ._field_Model=_125217_l.get()._field_Model});;
	jule::Ptr<_201012020_OperandExprModel> _129517_rm = jule::new_ptr<_201012020_OperandExprModel>(_201012020_OperandExprModel{._field_Kind=_126917_r.get()._field_Kind, ._field_Model=_126917_r.get()._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_201060c83_Assign>(_201060c83_Assign{._field_L=_129117_lm, ._field_R=_129517_rm, ._field_Op=(*(_125142_a)).get()._field_Setter}), &__jule_any_type45)); };
	if ((!(*(_125142_a)).get()._field_Setter.get()._field_Kind.equal("=", 1))) {
		jule::Ptr<_20100d071_StructIns> _130221_strct = _201134c69_Struct(_125217_l.get()._field_Kind.ptr());;
		if ((_130221_strct != nullptr)) {
			_20106e126_checkStructureAssignOp(_self_, &(_130221_strct), _125142_a, &(_126917_r));
			return;;
		};
		(*(_125142_a)).get()._field_Setter.get()._field_Kind=(*(_125142_a)).get()._field_Setter.get()._field_Kind.slice(0LL, ((*(_125142_a)).get()._field_Setter.get()._field_Kind.len() - 1LL));
		_20112420e_binaryEval _130921_solver = static__201124ae4_new(_126217_eval, (*(_125142_a)).get()._field_Setter);;
		_126917_r=_201129951_solveExplicit(&_130921_solver, &(_125217_l), &(_126917_r));
		if ((_126917_r == nullptr)) {
			return;;
		};
		((*(_125142_a)).get()._field_Setter.get()._field_Kind).append("=", 1);
		return;;
	};
	_2010d91b3_assignTypeChecker _131817_checker = _2010d91b3_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_125217_l.get()._field_Kind, ._field_d=_126917_r, ._field_errorToken=(*(_125142_a)).get()._field_Setter};;
	if (_2010da33a_check(&_131817_checker)) {
		_129517_rm.get()._field_Model=_126917_r.get()._field_Model;
		_129117_lm.get()._field_Model=_125217_l.get()._field_Model;
	};
}



inline void _20106e8c9_processEndPartOfMultiAssign(_20106455b_scopeChecker* _self_, jule::Ptr<_20106113a_MultiAssign>* _133051_st, jule::Ptr<_200ee8ce8_AssignSt>* _133114_a, jule::Ptr<_200ee87a9_AssignLeft>* _133133_lexpr, jule::Ptr<_2010edb23_Data>* _133158_l, jule::Ptr<_2010edb23_Data>* _133173_r) {
	if (((!((*(_133133_lexpr)).get()._field_Reference)) && _1ed697631_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident))) {
		if (_2011323b5_Void((*(_133173_r)).get()._field_Kind.ptr())) {
			_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_133114_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_2010edb23_Data>> &__jule_push_dest = (*(_133051_st)).get()._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*(_133114_a)).get()._field_Declarative && ((*(_133133_lexpr)).get()._field_Reference || _20106dbc5_isNewAssignIdent(_self_, (*(_133133_lexpr)).get()._field_Ident)))) {
		if (_2010683c8_isDuplicatedIdent(_self_, 0LLU, (*(_133133_lexpr)).get()._field_Ident)) {
			_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_20108731a_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_201066b46_stop(_self_);
			return;;
		};
		if (_1ed697631_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident)) {
			_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_2010a4975_Var> _135221_v = jule::new_ptr<_2010a4975_Var>(_2010a4975_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_133133_lexpr)).get()._field_Token, ._field_Ident=(*(_133133_lexpr)).get()._field_Ident, ._field_Mutable=(*(_133133_lexpr)).get()._field_Mutable, ._field_Reference=(*(_133133_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Expr=(*(_133114_a)).get()._field_Right, ._field_Data=(*(_133173_r))}), });;
		_20109ba49_checkVar((*(_self_))._field_s, &(_135221_v));
		_135221_v.get()._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_2010edb23_Data>> &__jule_push_dest = (*(_133051_st)).get()._field_L; __jule_push_dest.push(jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_135221_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_135221_v.get()._field_Mutable, ._field_Reference=_135221_v.get()._field_Reference, ._field_Lvalue=(!(_135221_v.get()._field_Constant)), ._field_Model=jule::Any(_135221_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_135221_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_135221_v, &__jule_any_type8)); };
		return;;
	};
	if (((*(_133133_lexpr)).get()._field_Mutable || (*(_133133_lexpr)).get()._field_Reference)) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_20108731a_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_20105bbb3_checkAssign(&((*(_self_))._field_s), _133158_l, (*(_133173_r)), (*(_133114_a)).get()._field_Setter)))) {
		return;;
	};
	;
	_20109219e_checkValidityForInitExpr((*(_self_))._field_s, (*(_133158_l)).get()._field_Mutable, false, &((*(_133158_l)).get()._field_Kind), _133173_r, &((*(_133114_a)).get()._field_Setter));
	_2010d91b3_assignTypeChecker _139517_checker = _2010d91b3_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_133158_l)).get()._field_Kind, ._field_d=(*(_133173_r)), ._field_errorToken=(*(_133114_a)).get()._field_Setter};;
	_2010da33a_check(&_139517_checker);
	{ jule::Slice<jule::Ptr<_2010edb23_Data>> &__jule_push_dest = (*(_133051_st)).get()._field_L; __jule_push_dest.push((*(_133158_l))); };
}



inline void _20106eb60_checkMultiAssign(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200ee8ce8_AssignSt>* _140541_a) {
	jule::Ptr<_2010edb23_Data> _140617_rd = _201121eba_evalExpr(_20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0)), (*(_140541_a)).get()._field_Right);;
	if ((_140617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_2010edb23_Data>> _141017_right = _20105ade3_getDatasFromTupleData(&(_140617_rd));;
	if ((_141017_right.len() == 1LL)) {
		{
			auto &_match_expr{ _141017_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_205242e3e:;
				{
					jule::Ptr<_201014b7c_IndexingExprModel> _141425_iem = _141017_right[0LL].get()._field_Model.cast_ptr<_201014b7c_IndexingExprModel>(&__jule_any_type46);;
					if ((_201135242_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_141017_right=jule::Slice<jule::Ptr<_2010edb23_Data>>::make({jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_201135242_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, })});
					};
				}
			}
			_match_end_205242dd9:;
		};
	};
	{
		
		if (((*(_140541_a)).get()._field_Left.len() > _141017_right.len())) {
			_case_begin_205242a32:;
			{
				_201086eeb_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_140541_a)).get()._field_Left.len() < _141017_right.len())) {
			_case_begin_205242aa9:;
			{
				_201086eeb_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_2052427ce:;
	};
	jule::Ptr<_20106113a_MultiAssign> _143317_st = jule::new_ptr<_20106113a_MultiAssign>(_20106113a_MultiAssign{._field_R=_140617_rd.get()._field_Model});;
	{
		auto expr = &((*(_140541_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205246816:;
		if (it != expr_end) {
			jule::I32 _143613_i = it - expr->begin();
			{
				jule::Ptr<_200ee87a9_AssignLeft> _143721_lexpr = (*(_140541_a)).get()._field_Left[_143613_i];;
				jule::Ptr<_2010edb23_Data> _143821_l = nullptr;;
				if (((!(_1ed697631_IsIgnoreIdent(_143721_lexpr.get()._field_Ident))) && ((!((*(_140541_a)).get()._field_Declarative)) || (!(_20106dbc5_isNewAssignIdent(_self_.ptr(), _143721_lexpr.get()._field_Ident)))))) {
					_143821_l=_201121eba_evalExpr(_20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0)), _143721_lexpr.get()._field_Expr);
					if ((_143821_l == nullptr)) {
						goto _iter_next_205246816;
					};
				};
				jule::Ptr<_2010edb23_Data> _144621_r = _141017_right[_143613_i];;
				_20106e8c9_processEndPartOfMultiAssign(_self_.ptr(), &(_143317_st), _140541_a, &(_143721_lexpr), &(_143821_l), &(_144621_r));
			}
			_iter_next_205246816:;
			++it;
			_143613_i++;
			goto _iter_begin_205246816;
		}
		_iter_end_205246816:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_143317_st, &__jule_any_type47)); };
}



inline void _20106edd5_checkAssignSt(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200ee8ce8_AssignSt> _145237_a) {
	{
		
		if (_1ed6996cc_IsPostfixOp(_145237_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_20524a7b5:;
			{
				_20106d8b7_checkPostfix(_self_, _145237_a);
			}
		}
		else if (((_145237_a.get()._field_Left.len() == 1LL) && (!(_145237_a.get()._field_Declarative)))) {
			_case_begin_20524ab8e:;
			{
				_20106e39b_checkSingleAssign(_self_, &(_145237_a));
			}
		}
		else {
			_case_begin_205246e65:;
			{
				_20106eb60_checkMultiAssign(_self_, &(_145237_a));
			}
		}
		_match_end_205246d99:;
	};
}



inline jule::Ptr<_20105c92d_Scope> _20107028c_checkCaseScope(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_201062290_Case>* _146335_c, jule::Ptr<_200eea2e4_ScopeTree>* _146350_tree) {
	jule::Ptr<_20106455b_scopeChecker> _146417_ssc = _201074714_newChildChecker(_self_);;
	_146417_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_146335_c))));
	return _2010693a7_checkChildSc(_self_, _146350_tree, &(_146417_ssc));;
}



inline jule::Ptr<_201062290_Case> _201070787_checkCase(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_201061745_Match> _146933_m, jule::I32 _146944_i, jule::Ptr<_201001a9d_Case> _146956_c, jule::Ptr<_2010edb23_Data> _146975_expr) {
	jule::Ptr<_201062290_Case> _147017_case = _146933_m.get()._field_Cases[_146944_i];;
	_147017_case.get()._field_Exprs=jule::Slice<jule::Ptr<_2010edb23_Data>>::alloc(0LL, _146956_c.get()._field_Exprs.len());
	jule::Bool _147217_constMatched = false;;
	jule::Ptr<_201100691_Eval> _147317_eval = _20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0));;
	{
		auto expr = &(_146956_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20524ed91:;
		if (it != expr_end) {
			jule::Ptr<_200ede838_Expr> _147421_e = *it;
			{
				jule::Ptr<_2010edb23_Data> _147521_d = _20111b426_evalExprKind(_147317_eval, _147421_e.get()._field_Kind);;
				if ((_147521_d == nullptr)) {
					goto _iter_next_20524ed91;
				};
				if (_146933_m.get()._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_2010edb23_Data>> &__jule_push_dest = _147017_case.get()._field_Exprs; __jule_push_dest.push(_147521_d); };
					if ((_20105ab4b_countMatchType(&(_146933_m), &(_147521_d.get()._field_Kind)) > 1LL)) {
						_201086eeb_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_147521_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_146975_expr.get()._field_Kind.get()._field_Generic) {
						_147217_constMatched=(_147217_constMatched || _2011317b0_Equal(_146975_expr.get()._field_Kind, _147521_d.get()._field_Kind));
					} else {
						if ((_2011342b8_TypeEnum(_146975_expr.get()._field_Kind.ptr()) != nullptr)) {
							_20108e6da_checkTypeCompatibility(_self_.get()._field_s, &(_146975_expr.get()._field_Kind), &(_147521_d.get()._field_Kind), &(_147421_e.get()._field_Token));
						} else {
							jule::Ptr<_20103287b_Trait> _149029_trt = _201134ecd_Trait(_146975_expr.get()._field_Kind.ptr());;
							if ((_149029_trt != nullptr)) {
								_20108e6da_checkTypeCompatibility(_self_.get()._field_s, &(_146975_expr.get()._field_Kind), &(_147521_d.get()._field_Kind), &(_147421_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_20524ed91;
				} else if (_146933_m.get()._field_Comptime) {
					if ((!(_2010ee492_IsConst(_147521_d.ptr())))) {
						_201086eeb_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_147217_constMatched=(_147217_constMatched || _1ee33e4a3_ReadBool(_147521_d.get()._field_Constant.ptr()));
					};
				};
				if (_147521_d.get()._field_Decl) {
					_201086eeb_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_20108731a_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_20524ed91;
				};
				{ jule::Slice<jule::Ptr<_2010edb23_Data>> &__jule_push_dest = _147017_case.get()._field_Exprs; __jule_push_dest.push(_147521_d); };
				_2010d91b3_assignTypeChecker _151321_checker = _2010d91b3_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_146975_expr.get()._field_Kind, ._field_d=_147521_d, ._field_errorToken=_147421_e.get()._field_Token};;
				_2010da33a_check(&_151321_checker);
			}
			_iter_next_20524ed91:;
			++it;
			goto _iter_begin_20524ed91;
		}
		_iter_end_20524ed91:;
	};
	if (((!(_146933_m.get()._field_Comptime)) || _147217_constMatched)) {
		_147017_case.get()._field_Scope=_20107028c_checkCaseScope(_self_, &(_147017_case), &(_146956_c.get()._field_Scope));
	};
	return _147017_case;;
}



inline void _201070b50_checkCases(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_201002274_MatchCase>* _152735_m, jule::Ptr<_201061745_Match> _152754_rm, jule::Ptr<_2010edb23_Data> _152770_expr) {
	_152754_rm.get()._field_Cases=jule::Slice<jule::Ptr<_201062290_Case>>::alloc(0LL, (*(_152735_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_152735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20525950a:;
		if (it != expr_end) {
			jule::I32 _152913_i = it - expr->begin();
			{
				jule::Ptr<_201062290_Case> _153021_case = jule::new_ptr<_201062290_Case>(_201062290_Case{._field_Owner=_152754_rm, });;
				if ((_152913_i > 0LL)) {
					_152754_rm.get()._field_Cases[(_152913_i - 1LL)].get()._field_Next=_153021_case;
				};
				{ jule::Slice<jule::Ptr<_201062290_Case>> &__jule_push_dest = _152754_rm.get()._field_Cases; __jule_push_dest.push(_153021_case); };
			}
			_iter_next_20525950a:;
			++it;
			_152913_i++;
			goto _iter_begin_20525950a;
		}
		_iter_end_20525950a:;
	};
	if (((_152754_rm.get()._field_Default != nullptr) && ((*(_152735_m)).get()._field_Cases.len() > 0LL))) {
		_152754_rm.get()._field_Cases[(_152754_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_152754_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_152735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20525be7a:;
		if (it != expr_end) {
			jule::I32 _154314_i = it - expr->begin();
			jule::Ptr<_201001a9d_Case> _154321_c = *it;
			{
				_201070787_checkCase(_self_, _152754_rm, _154314_i, _154321_c, _152770_expr);
			}
			_iter_next_20525be7a:;
			++it;
			_154314_i++;
			goto _iter_begin_20525be7a;
		}
		_iter_end_20525be7a:;
	};
}



inline jule::Ptr<_201062290_Case> _201071007_checkDefault(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_201061745_Match> _154836_m, jule::Ptr<_2010009d1_Else> _154851_d) {
	jule::Ptr<_201062290_Case> _154917_def = jule::new_ptr<_201062290_Case>(_201062290_Case{._field_Owner=_154836_m, });;
	_154917_def.get()._field_Scope=_20107028c_checkCaseScope(_self_, &(_154917_def), &(_154851_d.get()._field_Scope));
	return _154917_def;;
}



inline void _201071326_checkComptimePanic(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_1ed694d8c_Token> _155638_callToken, jule::Ptr<_20105c92d_Scope>* _155658_s) {
	if (((*(_155658_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _156013_stmt = (*(_155658_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _156013_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_20526008d:;
			{
				jule::Ptr<_2010edb23_Data> _156317_d = _156013_stmt.cast_ptr<_2010edb23_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ _156317_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_205260de6:;
						{
							jule::Ptr<_201019434_BuiltinPanicCallExprModel> _156621_m = _156317_d.get()._field_Model.cast_ptr<_201019434_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ _156621_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_205261d81:;
									{
										jule::Ptr<_1ee33c6d2_Const> _156925_c = _156621_m.get()._field_Expr.cast_ptr<_1ee33c6d2_Const>(&__jule_any_type19);;
										if (_1ee341ab0_IsStr(_156925_c.ptr())) {
											if ((_155638_callToken == nullptr)) {
												jule::Ptr<_20106455b_scopeChecker> _157237_root = _2010675e7_getHardRoot(_self_);;
												_201086eeb_pushErr(_self_.get()._field_s.ptr(), _157237_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1ee33e717_ReadStr(_156925_c.ptr()), &__jule_any_type5)}));
											} else {
												_201086eeb_pushErr(_self_.get()._field_s.ptr(), _155638_callToken, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1ee33e717_ReadStr(_156925_c.ptr()), &__jule_any_type5)}));
											};
											_201066b46_stop(_self_.ptr());
										};
									}
								}
								_match_end_205261b72:;
							};
						}
					}
					_match_end_2052609ea:;
				};
			}
		}
		_match_end_205260027:;
	};
}



inline void _201071645_processConstMatch(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_201061745_Match>* _158442_tm, jule::Ptr<_201002274_MatchCase>* _158459_m) {
	{
		auto expr = &((*(_158442_tm)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052605bb:;
		if (it != expr_end) {
			jule::I32 _158514_i = it - expr->begin();
			jule::Ptr<_201062290_Case> _158521_c = *it;
			{
				if ((_158521_c.get()._field_Scope != nullptr)) {
					jule::Ptr<_1ed694d8c_Token> _158725_token = nullptr;;
					if (((!((*(_158442_tm)).get()._field_TypeMatch)) && (_158521_c.get()._field_Scope.get()._field_Stmts.len() > 0LL))) {
						_158725_token=(*(_158459_m)).get()._field_Cases[_158514_i].get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
					};
					_201071326_checkComptimePanic(_self_, _158725_token, &(_158521_c.get()._field_Scope));
					(*(_158442_tm)).get()._field_Default=_158521_c;
					(*(_158442_tm)).get()._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_2052605bb:;
			++it;
			_158514_i++;
			goto _iter_begin_2052605bb;
		}
		_iter_end_2052605bb:;
	};
	if (((*(_158459_m)).get()._field_Default != nullptr)) {
		(*(_158442_tm)).get()._field_Cases=nullptr;
		(*(_158442_tm)).get()._field_Default=_201071007_checkDefault(_self_, (*(_158442_tm)), (*(_158459_m)).get()._field_Default);
		if (((*(_158442_tm)).get()._field_Default != nullptr)) {
			jule::Ptr<_1ed694d8c_Token> _160125_token = nullptr;;
			if ((!((*(_158442_tm)).get()._field_TypeMatch))) {
				_160125_token=(*(_158459_m)).get()._field_Default.get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
			};
			_201071326_checkComptimePanic(_self_, _160125_token, &((*(_158442_tm)).get()._field_Default.get()._field_Scope));
		};
	} else {
		(*(_158442_tm)).get()._field_Cases=nullptr;
	};
}



inline void _2010718ba_checkTypeMatch(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_201002274_MatchCase>* _161339_m) {
	jule::Ptr<_2010edb23_Data> _161417_d = _20111ba42_eval(_20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0)), (*(_161339_m)).get()._field_Expr);;
	if ((_161417_d == nullptr)) {
		return;;
	};
	if (((!(_161417_d.get()._field_Kind.get()._field_Generic)) && (!(((((_201133817_Prim(_161417_d.get()._field_Kind.ptr()) != nullptr) && _20113bcb5_IsAny(_201133817_Prim(_161417_d.get()._field_Kind.ptr()).ptr())) || (_201134ecd_Trait(_161417_d.get()._field_Kind.ptr()) != nullptr)) || (_2011342b8_TypeEnum(_161417_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), (*(_161339_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_201061745_Match> _162517_tm = jule::new_ptr<_201061745_Match>(_201061745_Match{._field_Expr=_161417_d, ._field_TypeMatch=true, });;
	_162517_tm.get()._field_Comptime=_162517_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic;
	if (((!(_162517_tm.get()._field_Comptime)) && ((*(_161339_m)).get()._field_Default != nullptr))) {
		_162517_tm.get()._field_Default=_201071007_checkDefault(_self_, _162517_tm, (*(_161339_m)).get()._field_Default);
	};
	_201070b50_checkCases(_self_, _161339_m, _162517_tm, _161417_d);
	if (_162517_tm.get()._field_Comptime) {
		_201071645_processConstMatch(_self_, &(_162517_tm), _161339_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_162517_tm, &__jule_any_type48)); };
}



inline void _201071b40_checkCommonMatch(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_201002274_MatchCase>* _164641_m) {
	jule::Ptr<_2010edb23_Data> _164717_d = nullptr;;
	if (((*(_164641_m)).get()._field_Expr == nullptr)) {
		_164717_d=jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Constant=static__1ee33d150_NewBool(true)});
		_164717_d.get()._field_Model=jule::Any(_164717_d.get()._field_Constant, &__jule_any_type19);
	} else {
		_164717_d=_201121eba_evalExpr(_20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0)), (*(_164641_m)).get()._field_Expr);
		if ((_164717_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_201061745_Match> _166117_mc = jule::new_ptr<_201061745_Match>(_201061745_Match{._field_Expr=_164717_d, ._field_Comptime=(((((*(_164641_m)).get()._field_Expr != nullptr) && _2010ee492_IsConst(_164717_d.ptr())) && _1ee34184b_IsBool(_164717_d.get()._field_Constant.ptr())) && _1ee33e4a3_ReadBool(_164717_d.get()._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_166117_mc, &__jule_any_type48)); };
	if (((!(_166117_mc.get()._field_Comptime)) && ((*(_164641_m)).get()._field_Default != nullptr))) {
		_166117_mc.get()._field_Default=_201071007_checkDefault(_self_, _166117_mc, (*(_164641_m)).get()._field_Default);
	};
	_201070b50_checkCases(_self_, _164641_m, _166117_mc, _164717_d);
	if (_166117_mc.get()._field_Comptime) {
		_201071645_processConstMatch(_self_, &(_166117_mc), _164641_m);
	};
}



inline void _201071db5_checkMatch(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_201002274_MatchCase> _168434_m) {
	if (_168434_m.get()._field_TypeMatch) {
		_2010718ba_checkTypeMatch(_self_, &(_168434_m));
		return;;
	};
	_201071b40_checkCommonMatch(_self_, &(_168434_m));
}



inline void _20107213a_checkFall(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200ee819e_FallSt> _169229_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _20106711e_isDeferred(_self_))) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _169229_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_201062290_Case* _170017_case = ((_201062290_Case*)(_self_.get()._field_cse));;
	if (_170017_case->_field_Owner.get()._field_Comptime) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _169229_f.get()._field_Token, jule::Str("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if ((_170017_case->_field_Next == nullptr)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _169229_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_20108731a_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_201062867_FallSt>(_201062867_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170017_case->_field_Next))}), &__jule_any_type49)); };
}



inline jule::Ptr<_20105ed81_BreakSt> _201072448_checkBreakWithLabel(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eeecee_BreakSt> _171539_b) {
	jule::Ptr<_20105ed81_BreakSt> _171617_brk = _201072756_checkPlainBreak(_self_, _171539_b);;
	if ((_171617_brk == nullptr)) {
		return nullptr;;
	};
	_171617_brk.get()._field_It=0LLU;
	_171617_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_2010632c4_scopeLabel> _172617_label = _20105a134_findLabelParent(_171539_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_172617_label == nullptr)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_172617_label.get()._field_used=true;
	if (((_172617_label.get()._field_pos + 1LL) >= _172617_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _173913_i = (_172617_label.get()._field_pos + 1LL);;
	if ((_173913_i >= _172617_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _174321_st = _172617_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_173913_i];;
		{
			auto &_match_expr{ _174321_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_20528090a:;
				{
					_171617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174321_st.cast_ptr<_20105d775_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_205281147:;
				{
					_171617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174321_st.cast_ptr<_20105e5cd_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_2052811ad:;
				{
					_171617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174321_st.cast_ptr<_20105dbe8_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_205281235:;
				{
					_171617_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174321_st.cast_ptr<_201061745_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_205280e9e:;
				{
					_201086eeb_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_205280e49:;
		};
	};
	if ((_171617_brk.get()._field_It != 0LLU)) {
		if ((!(_20106cab4_checkValidBreakLabel(_self_, _171617_brk.get()._field_It)))) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_171617_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_20106cab4_checkValidBreakLabel(_self_, _171617_brk.get()._field_Mtch)))) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _171617_brk;;
}



inline jule::Ptr<_20105ed81_BreakSt> _201072756_checkPlainBreak(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eeecee_BreakSt> _177335_b) {
	if (_20106711e_isDeferred(_self_)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _177335_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20106455b_scopeChecker> _177917_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_177917_scope.get()._field_it == 0LLU) && (_177917_scope.get()._field_cse == 0LLU)) && (_177917_scope.get()._field_parent != nullptr)) && (_177917_scope.get()._field_owner == nullptr))) {
			_case_begin_205286d0c:;
			{
				_177917_scope=_177917_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_177917_scope.get()._field_it != 0LLU)) {
			_case_begin_205286d84:;
			{
				return jule::new_ptr<_20105ed81_BreakSt>(_20105ed81_BreakSt{._field_It=_177917_scope.get()._field_it, });;
			}
		}
		else if ((_177917_scope.get()._field_cse != 0LLU)) {
			_case_begin_205286e0b:;
			{
				return jule::new_ptr<_20105ed81_BreakSt>(_20105ed81_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_201062290_Case*)(_177917_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_205286c63:;
	};
	_201086eeb_pushErr(_self_.get()._field_s.ptr(), _177335_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _2010729cb_checkBreak(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eeecee_BreakSt> _179530_b) {
	if ((_179530_b.get()._field_Label != nullptr)) {
		jule::Ptr<_20105ed81_BreakSt> _179721_brk = _201072448_checkBreakWithLabel(_self_, _179530_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_179721_brk, &__jule_any_type50)); };
		return;;
	};
	jule::Ptr<_20105ed81_BreakSt> _180217_brk = _201072756_checkPlainBreak(_self_, _179530_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_180217_brk, &__jule_any_type50)); };
}



inline void _201072c51_checkRet(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eed171_RetSt> _180632_r) {
	if (_20106711e_isDeferred(_self_)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _180632_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_201062bb9_RetSt> _181117_rt = jule::new_ptr<_201062bb9_RetSt>(_201062bb9_RetSt{._field_Func=_201067383_getRoot(_self_).get()._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_181117_rt, &__jule_any_type51)); };
	jule::Ptr<_2010e704a_retTypeChecker> _181617_rtc = jule::new_ptr<_2010e704a_retTypeChecker>(_2010e704a_retTypeChecker{._field_sc=_self_, ._field_f=_181117_rt.get()._field_Func, ._field_errorToken=_180632_r.get()._field_Token, });;
	jule::Bool _182113_ok = _2010e7bb6_check(_181617_rtc.ptr(), &(_180632_r.get()._field_Expr));;
	if ((!(_182113_ok))) {
		return;;
	};
	if ((_180632_r.get()._field_Expr != nullptr)) {
		_181117_rt.get()._field_Expr=_181617_rtc.get()._field_model;
	};
}



inline void _201072ec6_checkUseExpr(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200ee01c9_UseExpr> _183132_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _183132_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_20106711e_isDeferred(_self_)) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _183132_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _183132_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _20107324b_checkNode(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Any* _184734_node) {
	{
		auto &_match_expr{ (*(_184734_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_2052939b7:;
			{
				_20106993a_checkAnonScope(_self_, (*(_184734_node)).cast_ptr<_200eea2e4_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_20529329c:;
			{
				_20106864d_checkVarDecl(_self_, (*(_184734_node)).cast_ptr<_200eeccb9_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_205293874:;
			{
				_2010688c3_checkTypeAliasDecl(_self_, (*(_184734_node)).cast_ptr<_20100162a_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_205293698:;
			{
				_201069ece_checkExpr(_self_, (*(_184734_node)).cast_ptr<_200ede838_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_205293aa5:;
			{
				_20106a870_checkConditional(_self_, (*(_184734_node)).cast_ptr<_201000e54_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_205293b1b:;
			{
				_20106c498_checkIter(_self_, (*(_184734_node)).cast_ptr<_200eed7d1_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_205293b82:;
			{
				_20106d147_checkCont(_self_, (*(_184734_node)).cast_ptr<_2010001a6_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_205293be8:;
			{
				_20106d3bc_checkLabel(_self_, (*(_184734_node)).cast_ptr<_200ee7a0b_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_205293c5e:;
			{
				_20106d642_pushGoto(_self_, (*(_184734_node)).cast_ptr<_200ee7db3_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_205293cc5:;
			{
				_20106edd5_checkAssignSt(_self_, (*(_184734_node)).cast_ptr<_200ee8ce8_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_205293d3b:;
			{
				_201071db5_checkMatch(_self_, (*(_184734_node)).cast_ptr<_201002274_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_205293da2:;
			{
				_20107213a_checkFall(_self_, (*(_184734_node)).cast_ptr<_200ee819e_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_205293e18:;
			{
				_2010729cb_checkBreak(_self_, (*(_184734_node)).cast_ptr<_200eeecee_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_205293e90:;
			{
				_201072c51_checkRet(_self_, (*(_184734_node)).cast_ptr<_200eed171_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_205294017:;
			{
				_201072ec6_checkUseExpr(_self_, (*(_184734_node)).cast_ptr<_200ee01c9_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_205293423:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_205293346:;
	};
}



inline void _201073427_checkResult(jule::Ptr<_20106455b_scopeChecker> _self_) {
	_200ee9bd9_Stmt _188517_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _188517_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_20529b816:;
			{
				jule::Ptr<_200ee01c9_UseExpr> _188821_ue = _188517_stmt._field_Data.cast_ptr<_200ee01c9_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_2010edb23_Data> _188921_d = _201121eba_evalExpr(_20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0)), _188821_ue.get()._field_Expr);;
				if ((_188921_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_188921_d, &__jule_any_type24)); };
				jule::Ptr<_2010e704a_retTypeChecker> _189421_rtc = jule::new_ptr<_2010e704a_retTypeChecker>(_2010e704a_retTypeChecker{._field_sc=_self_, ._field_types=_20102442d_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_188821_ue.get()._field_Expr.get()._field_Token, });;
				_2010e7bb6_check(_189421_rtc.ptr(), &(_188821_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_20529b0c9:;
			{
				jule::Ptr<_200ede838_Expr> _190121_expr = _188517_stmt._field_Data.cast_ptr<_200ede838_Expr>(&__jule_any_type53);;
				jule::Ptr<_2010edb23_Data> _190221_d = _201121eba_evalExpr(_20108dc8e_eval(_self_.get()._field_s, jule::Trait<_20114e426_Lookup>(_self_, 0)), _190121_expr);;
				if ((_190221_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _190221_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_2052a1233:;
						{
							jule::Ptr<_20101b7bb_BuiltinErrorCallExprModel> _190825_m = _190221_d.get()._field_Model.cast_ptr<_20101b7bb_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_201069c59_processErrorCall(_self_, &(_190825_m), _190121_expr.get()._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_190221_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_2052a0c8d:;
						{
							return;;
						}
					}
					_match_end_2052a0d7b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_20529b140:;
			{
				_20107324b_checkNode(_self_, &(_188517_stmt._field_Data));
			}
		}
		else {
			_case_begin_20529b063:;
			{
				_20107324b_checkNode(_self_, &(_188517_stmt._field_Data));
				return;;
			}
		}
		_match_end_20529addc:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _201073603_checkTree(jule::Ptr<_20106455b_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I32 _193017_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_193017_n)--;
	};
	for (; (_self_.get()._field_i < _193017_n); (_self_.get()._field_i)++) {
		{
			_200ee9bd9_Stmt _193821_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_20107324b_checkNode(_self_, &(_193821_stmt._field_Data));
			if (_201066daa_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_2052a3ec2:;
	}
	_iter_end_2052a3ec2:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_201073427_checkResult(_self_);
	};
}



inline void _201073922_checkGoto(_20106455b_scopeChecker* _self_, jule::Ptr<_201063747_scopeGoto>* _194933_gt, jule::Ptr<_2010632c4_scopeLabel>* _194954_label) {
	jule::Ptr<_20106455b_scopeChecker> _195017_gtsc = (*(_194933_gt)).get()._field_scope;;
	while (((_195017_gtsc.get()._field_childIndex - 1LL) > (*(_194954_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_195017_gtsc=_195017_gtsc.get()._field_parent;
		}
	_iter_next_2052a68a9:;
	}
	_iter_end_2052a68a9:;;
	jule::I32 _195517_n = 0LL;;
	if ((_195017_gtsc.get()._field_scope == (*(_194954_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_194933_gt)).get()._field_pos > (*(_194954_label)).get()._field_pos)) {
			return;;
		};
		_195517_n=(*(_194933_gt)).get()._field_pos;
	};
	jule::I32 _196817_i = ((*(_194954_label)).get()._field_pos - 1LL);;
	if ((_195517_n == 0LL)) {
		{
			auto expr = &((*(_194954_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2052a8d40:;
			if (it != expr_end) {
				jule::I32 _197117_j = it - expr->begin();
				jule::Any _197120_stmt = *it;
				{
					if (_20105a80a_stmtIsGotoScope(&(_197120_stmt), &(_195017_gtsc.get()._field_scope))) {
						_195517_n=_197117_j;
						goto _iter_end_2052a8d40;
					};
				}
				_iter_next_2052a8d40:;
				++it;
				_197117_j++;
				goto _iter_begin_2052a8d40;
			}
			_iter_end_2052a8d40:;
		};
	};
	for (; (_196817_i >= _195517_n); (_196817_i)--) {
		{
			jule::Any _198121_stmt = (*(_194954_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_196817_i];;
			if (_20105c499_stmtIsDef(&(_198121_stmt))) {
				_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_194933_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_194933_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_2052a9cdb:;
	}
	_iter_end_2052a9cdb:;;
}



inline void _201073aed_checkGotos(_20106455b_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052a8a65:;
		if (it != expr_end) {
			jule::Ptr<_201063747_scopeGoto> _199021_gt = *it;
			{
				jule::Ptr<_2010632c4_scopeLabel> _199121_label = _201068021_findLabelAll(_self_, _199021_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_199121_label == nullptr)) {
					_201086eeb_pushErr((*(_self_))._field_s.ptr(), _199021_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_199021_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_2052a8a65;
				};
				_199121_label.get()._field_used=true;
				_201073922_checkGoto(_self_, &(_199021_gt), &(_199121_label));
			}
			_iter_next_2052a8a65:;
			++it;
			goto _iter_begin_2052a8a65;
		}
		_iter_end_2052a8a65:;
	};
}



inline void _201073cc9_checkLabels(_20106455b_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052ab9ad:;
		if (it != expr_end) {
			jule::Ptr<_2010632c4_scopeLabel> _200316_l = *it;
			{
				if ((!(_200316_l.get()._field_used))) {
					_201086eeb_pushErr((*(_self_))._field_s.ptr(), _200316_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_200316_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_2052ab9ad:;
			++it;
			goto _iter_begin_2052ab9ad;
		}
		_iter_end_2052ab9ad:;
	};
}



inline void _201073ea5_checkVars(_20106455b_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052add78:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> _201116_v = *it;
			{
				if (((((!(_201116_v.get()._field_Used)) && (!(_201116_v.get()._field_Constant))) && (!(_1ed697631_IsIgnoreIdent(_201116_v.get()._field_Ident)))) && (!(_1ed6978c8_IsAnonIdent(_201116_v.get()._field_Ident))))) {
					_201086eeb_pushErr((*(_self_))._field_s.ptr(), _201116_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_201116_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_2052add78:;
			++it;
			goto _iter_begin_2052add78;
		}
		_iter_end_2052add78:;
	};
}



inline void _201074181_checkAliases(_20106455b_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052b1b7d:;
		if (it != expr_end) {
			jule::Ptr<_2011303a2_TypeAlias> _201916_a = *it;
			{
				if ((((!(_201916_a.get()._field_Used)) && (!(_1ed697631_IsIgnoreIdent(_201916_a.get()._field_Ident)))) && (!(_1ed6978c8_IsAnonIdent(_201916_a.get()._field_Ident))))) {
					_201086eeb_pushErr((*(_self_))._field_s.ptr(), _201916_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_201916_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_2052b1b7d:;
			++it;
			goto _iter_begin_2052b1b7d;
		}
		_iter_end_2052b1b7d:;
	};
}



inline void _2010744a0_check(jule::Ptr<_20106455b_scopeChecker> _self_, jule::Ptr<_200eea2e4_ScopeTree>* _202730_tree, jule::Ptr<_20105c92d_Scope>* _202753_s) {
	(*(_202753_s)).get()._field_Deferred=(*(_202730_tree)).get()._field_Deferred;
	(*(_202753_s)).get()._field_Unsafety=(*(_202730_tree)).get()._field_Unsafety;
	jule::I32 _203113_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_202730_tree));
	_self_.get()._field_scope=(*(_202753_s));
	_201073603_checkTree(_self_);
	if ((_203113_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_201073ea5_checkVars(_self_.ptr());
		_201074181_checkAliases(_self_.ptr());
		if (_20106696a_isRoot(_self_.ptr())) {
			_201073aed_checkGotos(_self_.ptr());
			_201073cc9_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_20106455b_scopeChecker> _201074714_newChildChecker(jule::Ptr<_20106455b_scopeChecker> _self_) {
	jule::Ptr<_20106455b_scopeChecker> _205117_base = _20105995d_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_205117_base.get()._field_parent=_self_;
	_205117_base.get()._field_labels=_self_.get()._field_labels;
	_205117_base.get()._field_gotos=_self_.get()._field_gotos;
	_205117_base.get()._field_childIndex=static_cast<jule::I32>((_self_.get()._field_childIndex + 1LL));
	return _205117_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _20106455b_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2010756b0_checkCdef(_2010752b4_directiveChecker* _self_, jule::Ptr<_200d472d9_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_2052b7777:;
			{
				if ((*(_self_))._field_o.cast_ptr<_20102065a_Fn>(&__jule_any_type65).get()._field_Binded) {
					goto _match_end_2052b79a8;
				};
				goto _case_begin_2052b7a0d;
			}
		}
		else {
			_case_begin_2052b7a0d:;
			{
				_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_2052b79a8:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _201075935_checkTypedef(_2010752b4_directiveChecker* _self_, jule::Ptr<_200d472d9_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2052b9bb9:;
			{
				if ((*(_self_))._field_o.cast_ptr<_20100a25a_Struct>(&__jule_any_type66).get()._field_Binded) {
					goto _match_end_2052b9dd9;
				};
				goto _case_begin_2052b9e3e;
			}
		}
		else {
			_case_begin_2052b9e3e:;
			{
				_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_2052b9dd9:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _201075baa_checkDerive(_2010752b4_directiveChecker* _self_, jule::Ptr<_200d472d9_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2052bc12d:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_20100a25a_Struct>(&__jule_any_type66).get()._field_Binded))) {
					goto _match_end_2052bc34d;
				};
				goto _case_begin_2052bc3a3;
			}
		}
		else {
			_case_begin_2052bc3a3:;
			{
				_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_2052bc34d:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_20108731a_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_2052c07c4:;
		}
		else {
			_case_begin_2052bcc44:;
			{
				_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_2052c040b:;
	};
}



inline void _201075e30_checkNamespace(_2010752b4_directiveChecker* _self_, jule::Ptr<_200d472d9_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2052c1ae4:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_20100a25a_Struct>(&__jule_any_type66).get()._field_Binded))) {
					_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_2052c1b5a:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_20102065a_Fn>(&__jule_any_type65).get()._field_Binded))) {
					_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2052c1bc1:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_2010a4975_Var>(&__jule_any_type8).get()._field_Binded))) {
					_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_2052c1a17:;
			{
				_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_2052c19b2:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1ed694d8c_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U32>(5LLU))) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2052c95e1:;
			{
				if ((_20112a15a_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_200d472d9_Directive> _11625_typedef = jule::new_ptr<_200d472d9_Directive>(_200d472d9_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					{ jule::Slice<jule::Ptr<_200d472d9_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_11625_typedef); };
				};
			}
		}
		_match_end_2052c958b:;
	};
}



inline void _2010761a5_checkDeprecated(_2010752b4_directiveChecker* _self_, jule::Ptr<_200d472d9_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2052cae72:;
			{
				if ((*(_self_))._field_o.cast_ptr<_20100a25a_Struct>(&__jule_any_type66).get()._field_Binded) {
					_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_2052cb802:;
			{
				if ((*(_self_))._field_o.cast_ptr<_20102065a_Fn>(&__jule_any_type65).get()._field_Binded) {
					_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2052cb868:;
			{
				if ((*(_self_))._field_o.cast_ptr<_2010a4975_Var>(&__jule_any_type8).get()._field_Binded) {
					_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_2052cb1a3:;
			{
				_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_2052cb00a:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1ed694d8c_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U32>(5LLU))) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _20107642a_checkTest(_2010752b4_directiveChecker* _self_, jule::Ptr<_200d472d9_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_2052d0691:;
			{
				jule::Ptr<_20102065a_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_20102065a_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_Binded)) && (!(_201021309_IsInit(_16717_f.ptr())))) && (!(_201021095_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_2052d3e8b;
				};
				if (_201020d31_IsMethod(_16717_f.ptr())) {
					_201086eeb_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_2052d3e8b;
				};
				goto _case_begin_2052d3ee1;
			}
		}
		else {
			_case_begin_2052d3ee1:;
			{
				_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_2052d3e8b:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _2010766a0_checkDirective(_2010752b4_directiveChecker* _self_, jule::Ptr<_200d472d9_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_2052d7984:;
			{
				_2010756b0_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_2052d79ea:;
			{
				_201075935_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_2052d7a61:;
			{
				_201075baa_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_2052d7ac7:;
			{
				_201075e30_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_2052d8611:;
			{
				_2010761a5_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_2052d8677:;
			{
				_20107642a_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_2052d86dd:;
			{
				_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_2052d791d:;
			{
				_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_2052d78b8:;
	};
}



inline void _20107687b_check(_2010752b4_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052da8bb:;
		if (it != expr_end) {
			jule::Ptr<_200d472d9_Directive> _20821_d = *it;
			{
				_2010766a0_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_2052da8bb:;
			++it;
			goto _iter_begin_2052da8bb;
		}
		_iter_end_2052da8bb:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2010752b4_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20107b397_ImportInfo> _20107b85e_SelectPackage(_20107b397_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_2010a4975_Var> _20107bc16_FindVar(_20107b397_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_20107d641_isLookupable(_self_, _18926_ident)))) {
		return nullptr;;
	};
	return _201078aae_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _18926_ident, false);;
}



inline jule::Ptr<_2011303a2_TypeAlias> _20107c0bd_FindTypeAlias(_20107b397_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_20107d641_isLookupable(_self_, _20132_ident)))) {
		return nullptr;;
	};
	return _201078edd_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20132_ident, false);;
}



inline jule::Ptr<_20100a25a_Struct> _20107c475_FindStruct(_20107b397_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_20107d641_isLookupable(_self_, _21329_ident)))) {
		return nullptr;;
	};
	return _2010793c8_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21329_ident, false);;
}



inline jule::Ptr<_20102065a_Fn> _20107c82c_FindFn(_20107b397_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_20107d641_isLookupable(_self_, _22525_ident)))) {
		return nullptr;;
	};
	return _20107983a_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22525_ident, false);;
}



inline jule::Ptr<_20103287b_Trait> _20107cb3a_FindTrait(_20107b397_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_20107d641_isLookupable(_self_, _23628_ident)))) {
		return nullptr;;
	};
	return _201079b48_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23628_ident);;
}



inline jule::Ptr<_20103510e_Enum> _20107ce48_FindEnum(_20107b397_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_20107d641_isLookupable(_self_, _24727_ident)))) {
		return nullptr;;
	};
	return _201079e89_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _24727_ident);;
}



inline jule::Ptr<_201036709_TypeEnum> _20107d256_FindTypeEnum(_20107b397_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_20107d641_isLookupable(_self_, _25831_ident)))) {
		return nullptr;;
	};
	return _20107a2ca_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25831_ident);;
}



inline jule::Bool _20107d641_isLookupable(_20107b397_ImportInfo* _self_, jule::Str _26727_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _20107d94e_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_20107d94e_existIdent(_self_, _26727_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _20107d94e_existIdent(_20107b397_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205300727:;
		if (it != expr_end) {
			jule::Ptr<_1ed694d8c_Token> *_28816_sident = it;
			{
				if (((*(_28816_sident)).get()._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_205300727:;
			++it;
			goto _iter_begin_205300727;
		}
		_iter_end_205300727:;
	};
	return false;;
}



inline jule::Bool _20107dbd5_isAccessibleViaSelection(_20107b397_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _20107d94e_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _20107b397_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20107b397_ImportInfo> _20107e455_SelectPackage(_20107ded2_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_2010a4975_Var> _20107e80c_FindVar(_20107ded2_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _201078aae_findVarInPackage(&((*(_self_))._field_Files), _31426_ident, _31438_binded);;
}



inline jule::Ptr<_2011303a2_TypeAlias> _20107ebb4_FindTypeAlias(_20107ded2_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _201078edd_findTypeAliasInPackage(&((*(_self_))._field_Files), _32032_ident, _32044_binded);;
}



inline jule::Ptr<_20100a25a_Struct> _20108006b_FindStruct(_20107ded2_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _2010793c8_findStructInPackage(&((*(_self_))._field_Files), _32629_ident, _32641_binded);;
}



inline jule::Ptr<_20102065a_Fn> _201080423_FindFn(_20107ded2_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _20107983a_findFnInPackage(&((*(_self_))._field_Files), _33225_ident, _33237_binded);;
}



inline jule::Ptr<_20103287b_Trait> _201080731_FindTrait(_20107ded2_Package* _self_, jule::Str _33828_ident) {
	return _201079b48_findTraitInPackage(&((*(_self_))._field_Files), _33828_ident);;
}



inline jule::Ptr<_20103510e_Enum> _201080a3e_FindEnum(_20107ded2_Package* _self_, jule::Str _34427_ident) {
	return _201079e89_findEnumInPackage(&((*(_self_))._field_Files), _34427_ident);;
}



inline jule::Ptr<_201036709_TypeEnum> _201080d4c_FindTypeEnum(_20107ded2_Package* _self_, jule::Str _35031_ident) {
	return _20107a2ca_findTypeEnumInPackage(&((*(_self_))._field_Files), _35031_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _20107ded2_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20104760a_comptimeTypeInfo> _201084092_pushComptimeTypeInfo(_201083b52_commonSemaMeta* _self_, jule::Ptr<_2011310ea_TypeKind>* _21344_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205325c03:;
		if (it != expr_end) {
			jule::Ptr<_20104760a_comptimeTypeInfo> _21421_t2 = *it;
			{
				if (((_21421_t2.get()._field_base.get()._field_BindIdent == (*(_21344_t)).get()._field_BindIdent) && _2011317b0_Equal(_21421_t2.get()._field_base, (*(_21344_t))))) {
					return _21421_t2;;
				};
			}
			_iter_next_205325c03:;
			++it;
			goto _iter_begin_205325c03;
		}
		_iter_end_205325c03:;
	};
	jule::Ptr<_20104760a_comptimeTypeInfo> _21917_t1 = jule::new_ptr<_20104760a_comptimeTypeInfo>(_20104760a_comptimeTypeInfo{._field_base=(*(_21344_t))});;
	{ jule::Slice<jule::Ptr<_20104760a_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_21917_t1); };
	return _21917_t1;;
}







std::ostream &operator<<(std::ostream &_Stream, _201083b52_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20107b397_ImportInfo> _201084adc_SelectPackage(_201084669_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)> _24232_selector) {
	return _2010e95d0_SelectPackage((*(_self_))._field_file.ptr(), _24232_selector);;
}



inline jule::Ptr<_2010a4975_Var> _201084e94_FindVar(_201084669_Sema* _self_, jule::Str _25226_ident, jule::Bool _25238_binded) {
	jule::Ptr<_2010a4975_Var> _25417_v = _201078aae_findVarInPackage(&((*(_self_))._field_files), _25226_ident, _25238_binded);;
	if ((_25417_v != nullptr)) {
		return _25417_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205328d16:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _26021_imp = *it;
			{
				if ((!(_2010827cc_impIsLookupable(&(_26021_imp), _25226_ident)))) {
					goto _iter_next_205328d16;
				};
				_25417_v=_20107bc16_FindVar(_26021_imp.ptr(), _25226_ident, _25238_binded);
				if (((_25417_v != nullptr) && _2010876c2_isAccessibleDefine(_self_, _25417_v.get()._field_Public, _25417_v.get()._field_Token))) {
					return _25417_v;;
				};
			}
			_iter_next_205328d16:;
			++it;
			goto _iter_begin_205328d16;
		}
		_iter_end_205328d16:;
	};
	return nullptr;;
}



inline jule::Ptr<_2011303a2_TypeAlias> _20108534b_FindTypeAlias(_201084669_Sema* _self_, jule::Str _27932_ident, jule::Bool _27944_binded) {
	jule::Ptr<_2011303a2_TypeAlias> _28117_ta = _201078edd_findTypeAliasInPackage(&((*(_self_))._field_files), _27932_ident, _27944_binded);;
	if ((_28117_ta != nullptr)) {
		return _28117_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20532b500:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _28721_imp = *it;
			{
				if ((!(_2010827cc_impIsLookupable(&(_28721_imp), _27932_ident)))) {
					goto _iter_next_20532b500;
				};
				_28117_ta=_20107c0bd_FindTypeAlias(_28721_imp.ptr(), _27932_ident, _27944_binded);
				if (((_28117_ta != nullptr) && _2010876c2_isAccessibleDefine(_self_, _28117_ta.get()._field_Public, _28117_ta.get()._field_Token))) {
					return _28117_ta;;
				};
			}
			_iter_next_20532b500:;
			++it;
			goto _iter_begin_20532b500;
		}
		_iter_end_20532b500:;
	};
	return nullptr;;
}



inline jule::Ptr<_20100a25a_Struct> _201085703_FindStruct(_201084669_Sema* _self_, jule::Str _30629_ident, jule::Bool _30641_binded) {
	jule::Ptr<_20100a25a_Struct> _30817_s = _2010793c8_findStructInPackage(&((*(_self_))._field_files), _30629_ident, _30641_binded);;
	if ((_30817_s != nullptr)) {
		return _30817_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20532dbd9:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _31321_imp = *it;
			{
				if ((!(_2010827cc_impIsLookupable(&(_31321_imp), _30629_ident)))) {
					goto _iter_next_20532dbd9;
				};
				_30817_s=_20107c475_FindStruct(_31321_imp.ptr(), _30629_ident, _30641_binded);
				if (((_30817_s != nullptr) && _2010876c2_isAccessibleDefine(_self_, _30817_s.get()._field_Public, _30817_s.get()._field_Token))) {
					return _30817_s;;
				};
			}
			_iter_next_20532dbd9:;
			++it;
			goto _iter_begin_20532dbd9;
		}
		_iter_end_20532dbd9:;
	};
	return nullptr;;
}



inline jule::Ptr<_20102065a_Fn> _201085aaa_FindFn(_201084669_Sema* _self_, jule::Str _33125_ident, jule::Bool _33137_binded) {
	jule::Ptr<_20102065a_Fn> _33317_f = _20107983a_findFnInPackage(&((*(_self_))._field_files), _33125_ident, _33137_binded);;
	if ((_33317_f != nullptr)) {
		return _33317_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2053313c3:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _33921_imp = *it;
			{
				if ((!(_2010827cc_impIsLookupable(&(_33921_imp), _33125_ident)))) {
					goto _iter_next_2053313c3;
				};
				_33317_f=_20107c82c_FindFn(_33921_imp.ptr(), _33125_ident, _33137_binded);
				if (((_33317_f != nullptr) && _2010876c2_isAccessibleDefine(_self_, _33317_f.get()._field_Public, _33317_f.get()._field_Token))) {
					return _33317_f;;
				};
			}
			_iter_next_2053313c3:;
			++it;
			goto _iter_begin_2053313c3;
		}
		_iter_end_2053313c3:;
	};
	return nullptr;;
}



inline jule::Ptr<_20103287b_Trait> _201085db8_FindTrait(_201084669_Sema* _self_, jule::Str _35828_ident) {
	jule::Ptr<_20103287b_Trait> _36017_t = _201079b48_findTraitInPackage(&((*(_self_))._field_files), _35828_ident);;
	if ((_36017_t != nullptr)) {
		return _36017_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20533379e:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _36621_imp = *it;
			{
				if ((!(_2010827cc_impIsLookupable(&(_36621_imp), _35828_ident)))) {
					goto _iter_next_20533379e;
				};
				_36017_t=_20107cb3a_FindTrait(_36621_imp.ptr(), _35828_ident);
				if (((_36017_t != nullptr) && _2010876c2_isAccessibleDefine(_self_, _36017_t.get()._field_Public, _36017_t.get()._field_Token))) {
					return _36017_t;;
				};
			}
			_iter_next_20533379e:;
			++it;
			goto _iter_begin_20533379e;
		}
		_iter_end_20533379e:;
	};
	return nullptr;;
}



inline jule::Ptr<_20103510e_Enum> _2010861c6_FindEnum(_201084669_Sema* _self_, jule::Str _38527_ident) {
	jule::Ptr<_20103510e_Enum> _38717_e = _201079e89_findEnumInPackage(&((*(_self_))._field_files), _38527_ident);;
	if ((_38717_e != nullptr)) {
		return _38717_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205335c35:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _39321_imp = *it;
			{
				if ((!(_2010827cc_impIsLookupable(&(_39321_imp), _38527_ident)))) {
					goto _iter_next_205335c35;
				};
				_38717_e=_20107ce48_FindEnum(_39321_imp.ptr(), _38527_ident);
				if (((_38717_e != nullptr) && _2010876c2_isAccessibleDefine(_self_, _38717_e.get()._field_Public, _38717_e.get()._field_Token))) {
					return _38717_e;;
				};
			}
			_iter_next_205335c35:;
			++it;
			goto _iter_begin_205335c35;
		}
		_iter_end_205335c35:;
	};
	return nullptr;;
}



inline jule::Ptr<_201036709_TypeEnum> _2010864d4_FindTypeEnum(_201084669_Sema* _self_, jule::Str _41231_ident) {
	jule::Ptr<_201036709_TypeEnum> _41417_e = _20107a2ca_findTypeEnumInPackage(&((*(_self_))._field_files), _41231_ident);;
	if ((_41417_e != nullptr)) {
		return _41417_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2053381bb:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _42021_imp = *it;
			{
				if ((!(_2010827cc_impIsLookupable(&(_42021_imp), _41231_ident)))) {
					goto _iter_next_2053381bb;
				};
				_41417_e=_20107d256_FindTypeEnum(_42021_imp.ptr(), _41231_ident);
				if (((_41417_e != nullptr) && _2010876c2_isAccessibleDefine(_self_, _41417_e.get()._field_Public, _41417_e.get()._field_Token))) {
					return _41417_e;;
				};
			}
			_iter_next_2053381bb:;
			++it;
			goto _iter_begin_2053381bb;
		}
		_iter_end_2053381bb:;
	};
	return nullptr;;
}



inline jule::Bool _2010868ad_isFlag(_201084669_Sema* _self_, jule::I32 _43621_flags) {
	return (((*(_self_))._field_flags & _43621_flags) == _43621_flags);;
}



inline void _201086b33_setCurrentFile(_201084669_Sema* _self_, jule::Ptr<_2010e9118_SymbolTable> _43837_f) {
	(*(_self_))._field_file=_43837_f;
}



inline void _201086eeb_pushErr(_201084669_Sema* _self_, jule::Ptr<_1ed694d8c_Token> _44026_token, jule::Str _44041_fmt, jule::Slice<jule::Any> _44054_args) {
	{ jule::Slice<_2193a460d_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_20108248b_compilerErr(&(_44026_token), true, _44041_fmt, _44054_args)); };
}



inline void _20108731a_pushSuggestion(_201084669_Sema* _self_, jule::Str _44533_fmt, jule::Slice<jule::Any> _44546_args) {
	{
		_201083921_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _44533_fmt, _44546_args);
	};
}



inline jule::Bool _2010876c2_isAccessibleDefine(_201084669_Sema* _self_, jule::Bool _45033_public, jule::Ptr<_1ed694d8c_Token> _45047_token) {
	return ((_45033_public || (_45047_token.get()._field_File == nullptr)) || (_1ed69a854_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _1ed69a854_Dir(_45047_token.get()._field_File.ptr())));;
}



inline jule::Bool _201087b23_isDuplicatedIdent(_201084669_Sema* _self_, jule::Uintptr _45732_itself, jule::Str _45749_ident, jule::Bool _45761_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205344370:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> *_45816_f = it;
			{
				if (_2010ec2e7_isDuplicatedIdent((*(_45816_f)).ptr(), _45732_itself, _45749_ident, _45761_binded)) {
					return true;;
				};
				{
					auto expr = &((*(_45816_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205344e0e:;
					if (it != expr_end) {
						jule::Ptr<_20107b397_ImportInfo> *_46320_imp = it;
						{
							{
								auto expr = &((*(_46320_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_20534597b:;
								if (it != expr_end) {
									jule::Ptr<_1ed694d8c_Token> *_46424_selected = it;
									{
										if (((*(_46424_selected)).get()._field_Kind == _45749_ident)) {
											return true;;
										};
									}
									_iter_next_20534597b:;
									++it;
									goto _iter_begin_20534597b;
								}
								_iter_end_20534597b:;
							};
						}
						_iter_next_205344e0e:;
						++it;
						goto _iter_begin_205344e0e;
					}
					_iter_end_205344e0e:;
				};
			}
			_iter_next_205344370:;
			++it;
			goto _iter_begin_205344370;
		}
		_iter_end_205344370:;
	};
	return false;;
}



inline void _201087e42_checkDirectives(jule::Ptr<_201084669_Sema> _self_, jule::Slice<jule::Ptr<_200d472d9_Directive>>* _47440_d, jule::Any _47466_o) {
	_2010752b4_directiveChecker _47517_dc = _2010752b4_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_200d472d9_Directive>>>)((&((*(_47440_d)))))), ._field_o=_47466_o};;
	_20107687b_check(&_47517_dc);
}



inline jule::Bool _201088393_checkGenericQuantity(_201084669_Sema* _self_, jule::I32 _48339_required, jule::I32 _48354_given, jule::Ptr<_1ed694d8c_Token> _48366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_48339_required == 0LL) && (_48354_given > 0LL))) {
			_case_begin_205347d57:;
			{
				_201086eeb_pushErr(_self_, _48366_token, jule::Str("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_48339_required > 0LL) && (_48354_given == 0LL))) {
			_case_begin_205347dce:;
			{
				_201086eeb_pushErr(_self_, _48366_token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required < _48354_given)) {
			_case_begin_205347e56:;
			{
				_201086eeb_pushErr(_self_, _48366_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required > _48354_given)) {
			_case_begin_205347ecd:;
			{
				_201086eeb_pushErr(_self_, _48366_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_205347cd0:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_205347c14:;
	};
}



inline jule::Bool _20108876c_isDuplicatedImportSelection(_201084669_Sema* _self_, jule::Uintptr _50242_itself, jule::Str _50259_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20534a8b5:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> *_50316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_50316_imp))) == _50242_itself)) {
					goto _iter_end_20534a8b5;
				};
				if (_20107d94e_existIdent((*(_50316_imp)).ptr(), _50259_ident)) {
					return true;;
				};
			}
			_iter_next_20534a8b5:;
			++it;
			goto _iter_begin_20534a8b5;
		}
		_iter_end_20534a8b5:;
	};
	return false;;
}



inline jule::Any _201088b35_getImportDef(_201084669_Sema* _self_, jule::Str _51527_ident, jule::Ptr<_20107b397_ImportInfo>* _51544_imp) {
	if ((_2011e9625_findPackageBuiltinDef((*(_51544_imp)).get()._field_LinkPath, _51527_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_51544_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20534c730:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _51921_f = *it;
			{
				;
				jule::Any _52221_def = _2010ebd96_defByIdent(_51921_f.ptr(), _51527_ident, false);;
				if ((_52221_def != nullptr)) {
					return _52221_def;;
				};
			}
			_iter_next_20534c730:;
			++it;
			goto _iter_begin_20534c730;
		}
		_iter_end_20534c730:;
	};
	return nullptr;;
}



inline jule::Bool _2053535c1_checkImportSelection(_201084669_Sema* _self_, jule::Ptr<_1ed694d8c_Token>* _53043_ident, jule::Ptr<_2010a4975_Var>* _53059_s) {
	if ((!(_2010876c2_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20107a7c5_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _20535722e_checkImportSelection(_201084669_Sema* _self_, jule::Ptr<_1ed694d8c_Token>* _53043_ident, jule::Ptr<_2011303a2_TypeAlias>* _53059_s) {
	if ((!(_2010876c2_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20107a7c5_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _20535ad37_checkImportSelection(_201084669_Sema* _self_, jule::Ptr<_1ed694d8c_Token>* _53043_ident, jule::Ptr<_20100a25a_Struct>* _53059_s) {
	if ((!(_2010876c2_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20107a7c5_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _20535eac7_checkImportSelection(_201084669_Sema* _self_, jule::Ptr<_1ed694d8c_Token>* _53043_ident, jule::Ptr<_20103287b_Trait>* _53059_s) {
	if ((!(_2010876c2_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20107a7c5_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _2053636d0_checkImportSelection(_201084669_Sema* _self_, jule::Ptr<_1ed694d8c_Token>* _53043_ident, jule::Ptr<_20103510e_Enum>* _53059_s) {
	if ((!(_2010876c2_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20107a7c5_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _2053672d8_checkImportSelection(_201084669_Sema* _self_, jule::Ptr<_1ed694d8c_Token>* _53043_ident, jule::Ptr<_201036709_TypeEnum>* _53059_s) {
	if ((!(_2010876c2_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20107a7c5_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _20536ade1_checkImportSelection(_201084669_Sema* _self_, jule::Ptr<_1ed694d8c_Token>* _53043_ident, jule::Ptr<_20102065a_Fn>* _53059_s) {
	if ((!(_2010876c2_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_20107a7c5_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_201086eeb_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _20108931c_checkImportSelectedSelections(_201084669_Sema* _self_, jule::Ptr<_20107b397_ImportInfo>* _54453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_54453_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20534e303:;
		if (it != expr_end) {
			jule::Ptr<_1ed694d8c_Token> _54616_ident = *it;
			{
				if (_54616_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_20534e303;
				};
				if (_20108876c_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_54453_imp)))), _54616_ident.get()._field_Kind)) {
					_201086eeb_pushErr(_self_, _54616_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
					_20108731a_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_20534e303;
				};
				jule::Any _55821_def = _201088b35_getImportDef(_self_, _54616_ident.get()._field_Kind, _54453_imp);;
				{
					auto &_match_expr{ _55821_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_205352306:;
						{
							goto _iter_next_20534e303;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_2053502e3:;
						{
							jule::Ptr<_2010a4975_Var> _56425_v = _55821_def.cast_ptr<_2010a4975_Var>(&__jule_any_type8);;
							__jule_func_result=(_2053535c1_checkImportSelection(_self_, &(_54616_ident), &(_56425_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_205351932:;
						{
							jule::Ptr<_2011303a2_TypeAlias> _56725_ta = _55821_def.cast_ptr<_2011303a2_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_20535722e_checkImportSelection(_self_, &(_54616_ident), &(_56725_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_205351998:;
						{
							jule::Ptr<_20100a25a_Struct> _57025_s = _55821_def.cast_ptr<_20100a25a_Struct>(&__jule_any_type66);;
							__jule_func_result=(_20535ad37_checkImportSelection(_self_, &(_54616_ident), &(_57025_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_205352438:;
						{
							jule::Ptr<_20103287b_Trait> _57325_t = _55821_def.cast_ptr<_20103287b_Trait>(&__jule_any_type10);;
							__jule_func_result=(_20535eac7_checkImportSelection(_self_, &(_54616_ident), &(_57325_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_20535249e:;
						{
							jule::Ptr<_20103510e_Enum> _57625_e = _55821_def.cast_ptr<_20103510e_Enum>(&__jule_any_type68);;
							__jule_func_result=(_2053636d0_checkImportSelection(_self_, &(_54616_ident), &(_57625_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_205352515:;
						{
							jule::Ptr<_201036709_TypeEnum> _57925_e = _55821_def.cast_ptr<_201036709_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_2053672d8_checkImportSelection(_self_, &(_54616_ident), &(_57925_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_20535257b:;
						{
							jule::Ptr<_20102065a_Fn> _58225_f = _55821_def.cast_ptr<_20102065a_Fn>(&__jule_any_type65);;
							__jule_func_result=(_20536ade1_checkImportSelection(_self_, &(_54616_ident), &(_58225_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_205351745:;
						{
							_201086eeb_pushErr(_self_, _54616_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_20534e303;
						}
					}
					_match_end_2053516e0:;
				};
			}
			_iter_next_20534e303:;
			++it;
			goto _iter_begin_20534e303;
		}
		_iter_end_20534e303:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20536edc3_checkImportsAllSelectionsFromCollection(_201084669_Sema* _self_, jule::Slice<jule::Ptr<_2010a4975_Var>>* _59362_s, jule::Ptr<_1ed694d8c_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205371930:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_2053535c1_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_205371930:;
			++it;
			goto _iter_begin_205371930;
		}
		_iter_end_205371930:;
	};
	return _59417_ok;;
}

inline jule::Bool _20537325b_checkImportsAllSelectionsFromCollection(_201084669_Sema* _self_, jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>* _59362_s, jule::Ptr<_1ed694d8c_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205374537:;
		if (it != expr_end) {
			jule::Ptr<_2011303a2_TypeAlias> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_20535722e_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_205374537:;
			++it;
			goto _iter_begin_205374537;
		}
		_iter_end_205374537:;
	};
	return _59417_ok;;
}

inline jule::Bool _2053738bb_checkImportsAllSelectionsFromCollection(_201084669_Sema* _self_, jule::Slice<jule::Ptr<_20100a25a_Struct>>* _59362_s, jule::Ptr<_1ed694d8c_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20537712d:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_20535ad37_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_20537712d:;
			++it;
			goto _iter_begin_20537712d;
		}
		_iter_end_20537712d:;
	};
	return _59417_ok;;
}

inline jule::Bool _20537646d_checkImportsAllSelectionsFromCollection(_201084669_Sema* _self_, jule::Slice<jule::Ptr<_20102065a_Fn>>* _59362_s, jule::Ptr<_1ed694d8c_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205379c46:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_20536ade1_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_205379c46:;
			++it;
			goto _iter_begin_205379c46;
		}
		_iter_end_205379c46:;
	};
	return _59417_ok;;
}

inline jule::Bool _2053779e1_checkImportsAllSelectionsFromCollection(_201084669_Sema* _self_, jule::Slice<jule::Ptr<_20103287b_Trait>>* _59362_s, jule::Ptr<_1ed694d8c_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20537c7e8:;
		if (it != expr_end) {
			jule::Ptr<_20103287b_Trait> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_20535eac7_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_20537c7e8:;
			++it;
			goto _iter_begin_20537c7e8;
		}
		_iter_end_20537c7e8:;
	};
	return _59417_ok;;
}

inline jule::Bool _20537bb7c_checkImportsAllSelectionsFromCollection(_201084669_Sema* _self_, jule::Slice<jule::Ptr<_20103510e_Enum>>* _59362_s, jule::Ptr<_1ed694d8c_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20538039a:;
		if (it != expr_end) {
			jule::Ptr<_20103510e_Enum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_2053636d0_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_20538039a:;
			++it;
			goto _iter_begin_20538039a;
		}
		_iter_end_20538039a:;
	};
	return _59417_ok;;
}

inline jule::Bool _20537e72e_checkImportsAllSelectionsFromCollection(_201084669_Sema* _self_, jule::Slice<jule::Ptr<_201036709_TypeEnum>>* _59362_s, jule::Ptr<_1ed694d8c_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205382ed5:;
		if (it != expr_end) {
			jule::Ptr<_201036709_TypeEnum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_2053672d8_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_205382ed5:;
			++it;
			goto _iter_begin_205382ed5;
		}
		_iter_end_205382ed5:;
	};
	return _59417_ok;;
}



inline jule::Bool _201089a48_checkImportAllSelections(_201084669_Sema* _self_, jule::Ptr<_20107b397_ImportInfo>* _60344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_60344_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20536b9e6:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> *_60516_file = it;
			{
				__jule_func_result=(_20536edc3_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Vars), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_20537325b_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeAliases), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_2053738bb_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Structs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_20537646d_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Funcs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_2053779e1_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Traits), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_20537bb7c_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Enums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_20537e72e_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeEnums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_20536b9e6:;
			++it;
			goto _iter_begin_20536b9e6;
		}
		_iter_end_20536b9e6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _201089d67_checkImportSelections(_201084669_Sema* _self_, jule::Ptr<_20107b397_ImportInfo>* _61745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_61745_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _20108931c_checkImportSelectedSelections(_self_, _61745_imp);
		return __jule_func_result;;
	} else if ((*(_61745_imp)).get()._field_ImportAll) {
		__jule_func_result = _201089a48_checkImportAllSelections(_self_, _61745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20108a175_isUseAliasDuplication(_201084669_Sema* _self_, jule::Ptr<_20107b397_ImportInfo>* _62641_imp) {
	if (((*(_62641_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205385559:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _63121_imp2 = *it;
			{
				if ((_63121_imp2 == (*(_62641_imp)))) {
					goto _iter_end_205385559;
				};
				if ((_63121_imp2.get()._field_Alias == (*(_62641_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_63121_imp2.get()._field_Ident == _63121_imp2.get()._field_LinkPath) && (_63121_imp2.get()._field_Ident == (*(_62641_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_205385559:;
			++it;
			goto _iter_begin_205385559;
		}
		_iter_end_205385559:;
	};
	return false;;
}



inline jule::Bool _20108a483_checkImport(_201084669_Sema* _self_, jule::Ptr<_20107b397_ImportInfo>* _64635_imp) {
	if (((*(_64635_imp)).get()._field_Binded || ((*(_64635_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_20108a175_isUseAliasDuplication(_self_, _64635_imp)) {
		_201086eeb_pushErr(_self_, (*(_64635_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_64635_imp)).get()._field_Alias, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_64635_imp)).get()._field_Duplicate))) {
		jule::Ptr<_201084669_Sema> _65721_sema = jule::new_ptr<_201084669_Sema>(_201084669_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_2010a1323_check(_65721_sema, &((*(_64635_imp)).get()._field_Package.get()._field_Files));
		if ((_65721_sema.get()._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append(_65721_sema.get()._field_errors);;
			_65721_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _201089d67_checkImportSelections(_self_, _64635_imp);;
}



inline void _20108a65e_checkImports(_201084669_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205389cbc:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _67221_file = *it;
			{
				_201086b33_setCurrentFile(_self_, _67221_file);
				{
					auto expr = &(_67221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20538b780:;
					if (it != expr_end) {
						jule::Ptr<_20107b397_ImportInfo> _67425_imp = *it;
						{
							jule::Bool _67521_ok = _20108a483_checkImport(_self_, &(_67425_imp));;
							if ((!(_67521_ok))) {
								return;;
							};
						}
						_iter_next_20538b780:;
						++it;
						goto _iter_begin_20538b780;
					}
					_iter_end_20538b780:;
				};
			}
			_iter_next_205389cbc:;
			++it;
			goto _iter_begin_205389cbc;
		}
		_iter_end_205389cbc:;
	};
}



inline void _20108a83a_implFileImpls(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20538b3d9:;
		if (it != expr_end) {
			jule::Ptr<_2010578c3_Impl> _68521_imp = *it;
			{
				_201097d75_implImpl(_self_, &(_68521_imp));
			}
			_iter_next_20538b3d9:;
			++it;
			goto _iter_begin_20538b3d9;
		}
		_iter_end_20538b3d9:;
	};
}



inline void _20108aa16_implImpls(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20538ccae:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _69121_file = *it;
			{
				_201086b33_setCurrentFile(_self_.ptr(), _69121_file);
				_20108a83a_implFileImpls(_self_);
			}
			_iter_next_20538ccae:;
			++it;
			goto _iter_begin_20538ccae;
		}
		_iter_end_20538ccae:;
	};
}



inline void _20108abe2_checkEnums(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20538e156:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _69821_file = *it;
			{
				_201086b33_setCurrentFile(_self_.ptr(), _69821_file);
				{
					
					if ((!(_201094679_checkEnumDecls(_self_)))) {
						_case_begin_20538eb29:;
					}
					else if ((!(_2010948dd_checkTypeEnumDecls(_self_)))) {
						_case_begin_20538eba1:;
					}
					_match_end_20538ea80:;
				};
			}
			_iter_next_20538e156:;
			++it;
			goto _iter_begin_20538e156;
		}
		_iter_end_20538e156:;
	};
}



inline void _20108adbd_checkFileInherits(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20538e60c:;
		if (it != expr_end) {
			jule::Ptr<_20103287b_Trait> _70821_t = *it;
			{
				jule::Bool _70917_ok = _20109612b__checkTraitDeclInherits(_self_, &(_70821_t));;
				if ((!(_70917_ok))) {
					return;;
				};
			}
			_iter_next_20538e60c:;
			++it;
			goto _iter_begin_20538e60c;
		}
		_iter_end_20538e60c:;
	};
}



inline void _20108b099_checkInherits(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2053908d8:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _71721_file = *it;
			{
				_201086b33_setCurrentFile(_self_.ptr(), _71721_file);
				_20108adbd_checkFileInherits(_self_);
			}
			_iter_next_2053908d8:;
			++it;
			goto _iter_begin_2053908d8;
		}
		_iter_end_2053908d8:;
	};
}



inline _20114243b_typeChecker _20108b4ea_typeChecker(jule::Ptr<_201084669_Sema> _self_, jule::Trait<_20114e426_Lookup> _72335_l, jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> _72350_generics, jule::Ptr<_20114155b_referencer> _72413_referencer) {
	_20114243b_typeChecker _72517_tc = _20114243b_typeChecker{._field_s=_self_, ._field_rootLookup=_72335_l, ._field_lookup=_72335_l, ._field_referencer=_72413_referencer, ._field_useGenerics=_72350_generics, };;
	{
		auto &_match_expr{ _72335_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_20539316b:;
			{
				jule::Ptr<_20106455b_scopeChecker> _73421_hard = _2010675e7_getHardRoot(_72335_l.cast_ptr<_20106455b_scopeChecker>(0));;
				_72517_tc._field_refers=_73421_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_20539306c:;
	};
	if (((_72413_referencer != nullptr) && (_72413_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _72413_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_205394524:;
				{
					_72517_tc._field_ownerAlias=_72413_referencer.get()._field_owner.cast_ptr<_2011303a2_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_2053944be:;
		};
	};
	return _72517_tc;;
}



inline jule::Ptr<_2011310ea_TypeKind> _20108b9e5_buildTypeWithRefers(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_200eda6ad_TypeDecl>* _75044_t, jule::Trait<_20114e426_Lookup> _75067_l, jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> _75113_generics, jule::Ptr<_20114155b_referencer> _75141_referencer) {
	return ({ auto _wrap_copy = _20108b4ea_typeChecker(_self_, _75067_l, _75113_generics, _75141_referencer); _201149388_checkDecl(&_wrap_copy, _75044_t); });;
}



inline jule::Bool _20108bee0_checkTypeWithRefers(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_201137e9d_TypeSymbol>* _75744_t, jule::Trait<_20114e426_Lookup> _75764_l, jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> _75813_generics, jule::Ptr<_20114155b_referencer> _75841_referencer) {
	jule::Bool __jule_func_result = false;
	if (_201138311_checked((*(_75744_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_75744_t)).get()._field_Kind=_20108b9e5_buildTypeWithRefers(_self_, &((*(_75744_t)).get()._field_Decl), _75764_l, _75813_generics, _75841_referencer);
	__jule_func_result = _201138311_checked((*(_75744_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_201055a25_constraintChecker> _20108c254_constraintChecker(jule::Ptr<_201084669_Sema> _self_) {
	return jule::new_ptr<_201055a25_constraintChecker>(_201055a25_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _20108c60b_checkType(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_201137e9d_TypeSymbol>* _77234_t, jule::Trait<_20114e426_Lookup> _77254_l) {
	return _20108bee0_checkTypeWithRefers(_self_, _77234_t, _77254_l, nullptr, nullptr);;
}



inline jule::Ptr<_2011310ea_TypeKind> _20108ca5c_buildTypeWithGenerics(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_200eda6ad_TypeDecl>* _77846_t, jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> _77913_generics, jule::Ptr<_201026265_ReferenceStack> _77941_refers) {
	jule::Ptr<_20114243b_typeChecker> _78017_tc = jule::new_ptr<_20114243b_typeChecker>(_20114243b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_20114e426_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_20114e426_Lookup>(_self_, 3), ._field_refers=_77941_refers, ._field_useGenerics=_77913_generics, });;
	return _201149388_checkDecl(_78017_tc.ptr(), _77846_t);;
}



inline jule::Ptr<_2011310ea_TypeKind> _20108cd6a_buildType(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_200eda6ad_TypeDecl>* _79134_t) {
	return _20108ca5c_buildTypeWithGenerics(_self_, _79134_t, nullptr, nullptr);;
}



inline jule::Ptr<_2011310ea_TypeKind> _20108d178_selectType(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_200eda6ad_TypeDecl>* _79635_t) {
	jule::Ptr<_20114243b_typeChecker> _79717_tc = jule::new_ptr<_20114243b_typeChecker>(_20114243b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_20114e426_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_20114e426_Lookup>(_self_, 3), ._field_selection=true, });;
	return _201149388_checkDecl(_79717_tc.ptr(), _79635_t);;
}



inline jule::Ptr<_201100691_Eval> _20108d5c9_evalpd(jule::Ptr<_201084669_Sema> _self_, jule::Trait<_20114e426_Lookup> _80830_l, jule::Ptr<_2011310ea_TypeKind> _80845_p, jule::Ptr<_2010a4975_Var> _80863_owner) {
	jule::Ptr<_201100691_Eval> _80917_e = jule::new_ptr<_201100691_Eval>(_201100691_Eval{._field_s=_self_, ._field_lookup=_80830_l, ._field_owner=_80863_owner, });;
	{
		auto &_match_expr{ _80830_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_20539c571:;
			{
				_80917_e.get()._field_unsafety=_201066706_isUnsafe(_80830_l.cast_ptr<_20106455b_scopeChecker>(0));
			}
		}
		_match_end_20539c50a:;
	};
	_80917_e.get()._field_prefix=_80845_p;
	return _80917_e;;
}



inline jule::Ptr<_201100691_Eval> _20108d981_evalp(jule::Ptr<_201084669_Sema> _self_, jule::Trait<_20114e426_Lookup> _82329_l, jule::Ptr<_2011310ea_TypeKind> _82344_p) {
	return _20108d5c9_evalpd(_self_, _82329_l, _82344_p, nullptr);;
}



inline jule::Ptr<_201100691_Eval> _20108dc8e_eval(jule::Ptr<_201084669_Sema> _self_, jule::Trait<_20114e426_Lookup> _82828_l) {
	return _20108d981_evalp(_self_, _82828_l, nullptr);;
}



inline jule::Bool _20108e289_checkAssignType(jule::Ptr<_201084669_Sema> _self_, jule::Bool _83235_destIsRef, jule::Ptr<_2011310ea_TypeKind>* _83257_dest, jule::Ptr<_2010edb23_Data>* _83314_d, jule::Ptr<_1ed694d8c_Token> _83328_errorToken) {
	if ((*(_83314_d)).get()._field_Decl) {
		_201086eeb_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_83235_destIsRef) {
		if ((!(_2011317b0_Equal((*(_83257_dest)), (*(_83314_d)).get()._field_Kind)))) {
			_201086eeb_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_83257_dest)).ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str((*(_83314_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_2010d91b3_assignTypeChecker> _84421_atc = jule::new_ptr<_2010d91b3_assignTypeChecker>(_2010d91b3_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_83257_dest)), ._field_d=(*(_83314_d)), ._field_errorToken=_83328_errorToken});;
		jule::Bool _85017_ok = _2010da33a_check(_84421_atc.ptr());;
		if ((!(_85017_ok))) {
			return false;;
		};
	};
	if (((!(_2010ee492_IsConst((*(_83314_d)).ptr()))) || (_201133817_Prim((*(_83257_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _86017_kind = _201133817_Prim((*(_83257_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_1ee33b648_IsSigInt(_86017_kind)) {
			_case_begin_2053a380d:;
			{
				_1ee34043d_SetI64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ee33ebe0_AsI64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1ee33b934_IsUnsigInt(_86017_kind)) {
			_case_begin_2053a3885:;
			{
				_1ee3406b3_SetU64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ee33ee54_AsU64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1ee33beea_IsFloat(_86017_kind)) {
			_case_begin_2053a390c:;
			{
				_1ee340e33_SetF64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1ee3401b8_AsF64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_2053a3742:;
	};
	return true;;
}



inline jule::Bool _20108e6da_checkTypeCompatibility(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_2011310ea_TypeKind>* _87447_dest, jule::Ptr<_2011310ea_TypeKind>* _87514_src, jule::Ptr<_1ed694d8c_Token>* _87535_errorToken) {
	if (((*(_87514_src)) == nullptr)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_2011354a6_Tup((*(_87514_src)).ptr()) != nullptr)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_2010d758a_typeCompatibilityChecker _88917_tcc = _2010d758a_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_87447_dest)), ._field_src=(*(_87514_src)), ._field_errorToken=(*(_87535_errorToken))};;
	if (_2010d8b30_check(&_88917_tcc)) {
		return true;;
	};
	_201086eeb_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_2011310ea_TypeKind> _20108eb5d_buildNonGenericTypeKind(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_200eda6ad_TypeDecl>* _91048_ast, jule::Slice<jule::Ptr<_200ee7654_GenericDecl>>* _91114_generics, jule::Slice<jule::Ptr<_2011310ea_TypeKind>>* _91150_ignored) {
	jule::Ptr<_20114243b_typeChecker> _91217_tc = jule::new_ptr<_20114243b_typeChecker>(_20114243b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_20114e426_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_20114e426_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_91114_generics)), ._field_ignoredGenerics=(&((*(_91150_ignored)))), });;
	return _201149388_checkDecl(_91217_tc.ptr(), _91048_ast);;
}



inline jule::Bool _201090048_buildFnNonGenericTypeKinds(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102330b_FnIns>* _92251_f, jule::Slice<jule::Ptr<_2011310ea_TypeKind>>* _92267_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_200ee7654_GenericDecl>> _92417_generics = nullptr;;
	if (_201020d31_IsMethod((*(_92251_f)).get()._field_Decl.ptr())) {
		_92417_generics=jule::append((*(_92251_f)).get()._field_Decl.get()._field_Generics,(*(_92251_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_92417_generics=(*(_92251_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_92251_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2053ac2ea:;
		if (it != expr_end) {
			jule::Ptr<_20102243c_ParamIns> _93121_p = *it;
			{
				if ((!(_20101e406_IsSelf(_93121_p.get()._field_Decl.ptr())))) {
					_93121_p.get()._field_Kind=_20108eb5d_buildNonGenericTypeKind(_self_, &(_93121_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
					__jule_func_result=(__jule_func_result && (_93121_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_2053ac2ea:;
			++it;
			goto _iter_begin_2053ac2ea;
		}
		_iter_end_2053ac2ea:;
	};
	if ((!(_201020abc_IsVoid((*(_92251_f)).get()._field_Decl.ptr())))) {
		(*(_92251_f)).get()._field_Result=_20108eb5d_buildNonGenericTypeKind(_self_, &((*(_92251_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
		__jule_func_result=(__jule_func_result && ((*(_92251_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_20102330b_FnIns> _201090367_getTraitCheckFnKind(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102065a_Fn>* _94444_f) {
	if (((*(_94444_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_94444_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_20102330b_FnIns> _94817_ins = _201021a46_instanceForce((*(_94444_f)));;
	jule::Ptr<_20114243b_typeChecker> _95017_tc = jule::new_ptr<_20114243b_typeChecker>(_20114243b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_20114e426_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_20114e426_Lookup>(_self_, 3), });;
	{
		auto expr = &(_94817_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2053b1420:;
		if (it != expr_end) {
			jule::Ptr<_20102243c_ParamIns> _95521_p = *it;
			{
				if ((!(_20101e406_IsSelf(_95521_p.get()._field_Decl.ptr())))) {
					_95521_p.get()._field_Kind=_201149388_checkDecl(_95017_tc.ptr(), &(_95521_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_2053b1420:;
			++it;
			goto _iter_begin_2053b1420;
		}
		_iter_end_2053b1420:;
	};
	if ((!(_201020abc_IsVoid((*(_94444_f)).ptr())))) {
		_94817_ins.get()._field_Result=_201149388_checkDecl(_95017_tc.ptr(), &((*(_94444_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _94817_ins;;
}



inline jule::Bool _2010907b8_checkConstraintsFn(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102330b_FnIns>* _96743_f, jule::Ptr<_1ed694d8c_Token>* _96759_et, jule::Ptr<_20102330b_FnIns> _96775_exist) {
	jule::Ptr<_201055a25_constraintChecker> _96817_cc = _20108c254_constraintChecker(_self_);;
	_96817_cc.get()._field_et=(*(_96759_et));
	_96817_cc.get()._field_fi=(*(_96743_f));
	if ((_96775_exist != nullptr)) {
		{
			auto expr = &(_96775_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2053b4720:;
			if (it != expr_end) {
				jule::I32 _97218_i = it - expr->begin();
				jule::Ptr<_20112e868_InsGeneric> _97225_g = *it;
				{
					(*(_96743_f)).get()._field_Generics[_97218_i].get()._field_Constraint=_97225_g.get()._field_Constraint;
				}
				_iter_next_2053b4720:;
				++it;
				_97218_i++;
				goto _iter_begin_2053b4720;
			}
			_iter_end_2053b4720:;
		};
	} else {
		_96817_cc.get()._field_uniq=true;
	};
	return _2010568b1_check(_96817_cc);;
}



inline jule::Bool _201090c19_checkConstraintsStruct(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100d071_StructIns>* _98147_s, jule::Ptr<_1ed694d8c_Token>* _98167_et, jule::Ptr<_20100d071_StructIns> _98183_exist) {
	jule::Ptr<_201055a25_constraintChecker> _98217_cc = _20108c254_constraintChecker(_self_);;
	_98217_cc.get()._field_et=(*(_98167_et));
	_98217_cc.get()._field_si=(*(_98147_s));
	if ((_98183_exist != nullptr)) {
		{
			auto expr = &(_98183_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2053b7008:;
			if (it != expr_end) {
				jule::I32 _98618_i = it - expr->begin();
				jule::Ptr<_20112e868_InsGeneric> _98625_g = *it;
				{
					(*(_98147_s)).get()._field_Generics[_98618_i].get()._field_Constraint=_98625_g.get()._field_Constraint;
				}
				_iter_next_2053b7008:;
				++it;
				_98618_i++;
				goto _iter_begin_2053b7008;
			}
			_iter_end_2053b7008:;
		};
	} else {
		_98217_cc.get()._field_uniq=true;
	};
	return _2010568b1_check(_98217_cc);;
}



inline jule::Bool _2010910c1_fnEnvironment(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102330b_FnIns>* _99838_f, jule::Fn<jule::Bool(jule::Ptr<_201084669_Sema>*,jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>*)> _99849_algo) {
	jule::Ptr<_201084669_Sema> _99917_sema = (*(_99838_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_2010e9118_SymbolTable> _100017_old = (*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_201086b33_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100017_old);
	});;
	jule::Ptr<_2010e9118_SymbolTable> _100217_file = _2010834ae_findFile(&((*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_99838_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_100217_file != nullptr)) {
		_201086b33_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100217_file);
	};
	jule::I32 _100717_size = (*(_99838_f)).get()._field_Generics.len();;
	if ((((*(_99838_f)).get()._field_Decl != nullptr) && ((*(_99838_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_100717_size+=(*(_99838_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> _101217_generics = jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>::alloc(0LL, _100717_size);;
	_20108315c_appendGenericTypeAliases(&(_101217_generics), _99838_f);
	jule::Bool _101513_ok = _99849_algo(&(_99917_sema), &(_101217_generics));;
	if ((_99917_sema != _self_)) {
		(_self_.get()._field_errors).append(_99917_sema.get()._field_errors);;
		_99917_sema.get()._field_errors=nullptr;
	};
	return _101513_ok;;
}



inline void _201091346_checkFnParamKind(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102243c_ParamIns>* _102541_p) {
	(*(_102541_p)).get()._field_Kind.get()._field_Variadic=(*(_102541_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_102541_p)).get()._field_Decl.get()._field_Reference && (!(_20114b19d_isValidForRef(&((*(_102541_p)).get()._field_Kind)))))) {
		_201086eeb_pushErr(_self_.ptr(), (*(_102541_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_102541_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _201091654_reloadFnInsTypes(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102330b_FnIns> _103240_f) {
	if ((_201024692_IsBuiltin(_103240_f.ptr()) || _201024906_IsAnon(_103240_f.ptr()))) {
		return true;;
	};
	return _2010910c1_fnEnvironment(_self_, &(_103240_f), jule::Fn<jule::Bool(jule::Ptr<_201084669_Sema>*,jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>*)>([=](jule::Ptr<_201084669_Sema>* _103643_sema, jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>* _103661_generics) mutable -> jule::Bool {
		jule::Bool _103721_ok = true;;
		{
			auto expr = &(_103240_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2053c261d:;
			if (it != expr_end) {
				jule::Ptr<_20102243c_ParamIns> _103825_p = *it;
				{
					if (_20101e406_IsSelf(_103825_p.get()._field_Decl.ptr())) {
						if (_20101e66a_IsRef(_103825_p.get()._field_Decl.ptr())) {
							_103825_p.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20113c0a1_Sptr>(_20113c0a1_Sptr{._field_Elem=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_103240_f.get()._field_Owner, 0)})}), 21)});
						} else {
							_103825_p.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_103240_f.get()._field_Owner, 0)});
						};
					} else {
						_103825_p.get()._field_Kind=_20108ca5c_buildTypeWithGenerics((*(_103643_sema)), &(_103825_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
						if ((_103825_p.get()._field_Kind != nullptr)) {
							_201091346_checkFnParamKind(_self_, &(_103825_p));
						} else {
							_103721_ok=false;
						};
					};
				}
				_iter_next_2053c261d:;
				++it;
				goto _iter_begin_2053c261d;
			}
			_iter_end_2053c261d:;
		};
		if ((!(_201020abc_IsVoid(_103240_f.get()._field_Decl.ptr())))) {
			_103240_f.get()._field_Result=_20108ca5c_buildTypeWithGenerics((*(_103643_sema)), &(_103240_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
			_103721_ok=((_103240_f.get()._field_Result != nullptr) && _103721_ok);
		};
		return _103721_ok;;
	}));;
}



inline jule::Bool _201091ac7_checkRefValidityForInitExpr(jule::Ptr<_201084669_Sema> _self_, jule::Bool _106847_leftMut, jule::Ptr<_2010edb23_Data>* _106867_d, jule::Ptr<_1ed694d8c_Token>* _106882_errorToken) {
	{
		auto &_match_expr{ (*(_106867_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2053c1a4b:;
			{
				goto _match_end_2053c6d1a;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_2053c769a:;
			{
				jule::Ptr<_2010163dc_TraitSubIdentExprModel> _107321_model = (*(_106867_d)).get()._field_Model.cast_ptr<_2010163dc_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_201081ee6_isValidModelForRef(&(_107321_model.get()._field_Expr))))) {
					_201086eeb_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107321_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_2053c7711:;
			{
				jule::Ptr<_201016bc3_StructSubIdentExprModel> _107921_model = (*(_106867_d)).get()._field_Model.cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_201081ee6_isValidModelForRef(&(_107921_model.get()._field_Expr.get()._field_Model))))) {
					_201086eeb_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107921_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_2053c6e6e:;
			{
				_201086eeb_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_2053c6ed5:;
			{
				jule::Ptr<_20101288e_UnaryExprModel> _108921_unary = (*(_106867_d)).get()._field_Model.cast_ptr<_20101288e_UnaryExprModel>(&__jule_any_type74);;
				if (_108921_unary.get()._field_Op.get()._field_Kind.equal("*", 1)) {
					if ((!(_201081ee6_isValidModelForRef(&((*(_106867_d)).get()._field_Model))))) {
						_201086eeb_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_2053c6d1a;
				};
				goto _case_begin_2053c6d70;
			}
		}
		else {
			_case_begin_2053c6d70:;
			{
				_201086eeb_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_2053c6d1a:;
	};
	if ((_106847_leftMut && (!((*(_106867_d)).get()._field_Mutable)))) {
		_201086eeb_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _20109219e_checkValidityForInitExpr(jule::Ptr<_201084669_Sema> _self_, jule::Bool _110944_leftMut, jule::Bool _110959_leftRef, jule::Ptr<_2011310ea_TypeKind>* _111010_leftKind, jule::Ptr<_2010edb23_Data>* _111036_d, jule::Ptr<_1ed694d8c_Token>* _111051_errorToken) {
	if (((_110944_leftMut && (!((*(_111036_d)).get()._field_Mutable))) && _20113288d_Mutable((*(_111036_d)).get()._field_Kind.ptr()))) {
		_201086eeb_pushErr(_self_.ptr(), (*(_111051_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_111036_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	if (_110959_leftRef) {
		if ((!(_201091ac7_checkRefValidityForInitExpr(_self_, _110944_leftMut, _111036_d, _111051_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_2010d91b3_assignTypeChecker> _112017_atc = jule::new_ptr<_2010d91b3_assignTypeChecker>(_2010d91b3_assignTypeChecker{._field_s=_self_, ._field_d=(*(_111036_d)), ._field_errorToken=(*(_111051_errorToken))});;
	return _2010d9889_checkValidity(_112017_atc.ptr());;
}



inline jule::Bool _201092567_checkTypeAliasDeclKind(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_2011303a2_TypeAlias>* _112847_ta, jule::Trait<_20114e426_Lookup> _112867_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2010e9118_SymbolTable> _112917_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_201086b33_setCurrentFile(_self_.ptr(), _112917_old);
	});;
	if (((*(_112847_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_2010e9118_SymbolTable> _113421_file = _2010834ae_findFile(&(_self_.get()._field_files), &((*(_112847_ta)).get()._field_Token.get()._field_File));;
		if ((_113421_file != nullptr)) {
			_201086b33_setCurrentFile(_self_.ptr(), _113421_file);
		};
	};
	__jule_func_result=_20108bee0_checkTypeWithRefers(_self_, &((*(_112847_ta)).get()._field_Kind), _112867_l, nullptr, jule::new_ptr<_20114155b_referencer>(_20114155b_referencer{._field_ident=(*(_112847_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_112847_ta)), &__jule_any_type67), ._field_refs=(&((*(_112847_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_20113452c_Arr((*(_112847_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _20113452c_Arr((*(_112847_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_112847_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _201092886_checkTypeAliasDecl(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_2011303a2_TypeAlias>* _115143_ta, jule::Trait<_20114e426_Lookup> _115163_l) {
	if (_1ed697631_IsIgnoreIdent((*(_115143_ta)).get()._field_Ident)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_115143_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_201092567_checkTypeAliasDeclKind(_self_, _115143_ta, _115163_l);
}



inline void _201092b0b_checkTypeAliasDeclDup(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_2011303a2_TypeAlias>* _115946_ta) {
	if (_1ed697631_IsIgnoreIdent((*(_115946_ta)).get()._field_Ident)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_115946_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_201087b23_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_115946_ta)))), (*(_115946_ta)).get()._field_Ident, (*(_115946_ta)).get()._field_Binded)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_115946_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115946_ta)).get()._field_Ident, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_201092567_checkTypeAliasDeclKind(_self_, _115946_ta, jule::Trait<_20114e426_Lookup>(_self_, 3));
}



inline jule::Bool _201092d70_checkTypeAliasDecls(jule::Ptr<_201084669_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2053d8524:;
		if (it != expr_end) {
			jule::Ptr<_2011303a2_TypeAlias> _117221_ta = *it;
			{
				_201092b0b_checkTypeAliasDeclDup(_self_, &(_117221_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2053d8524:;
			++it;
			goto _iter_begin_2053d8524;
		}
		_iter_end_2053d8524:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20540bbc9_checkEnumItemsDup(_201084669_Sema* _self_, jule::Slice<jule::Ptr<_201034619_EnumItem>> _118339_items) {
	{
		auto expr = &(_118339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20540ce50:;
		if (it != expr_end) {
			jule::Ptr<_201034619_EnumItem> *_118416_item = it;
			{
				if ((*(_118416_item)).get()._field_Ident.empty()) {
					goto _iter_next_20540ce50;
				} else if (_1ed697631_IsIgnoreIdent((*(_118416_item)).get()._field_Ident)) {
					_201086eeb_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_20540dadd:;
						if (it != expr_end) {
							jule::Ptr<_201034619_EnumItem> *_119024_citem = it;
							{
								if (((*(_118416_item)) == (*(_119024_citem)))) {
									goto _iter_end_20540dadd;
								} else if (((*(_118416_item)).get()._field_Ident == (*(_119024_citem)).get()._field_Ident)) {
									_201086eeb_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118416_item)).get()._field_Ident, &__jule_any_type5)}));
									_20108731a_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_20540dadd;
								};
							}
							_iter_next_20540dadd:;
							++it;
							goto _iter_begin_20540dadd;
						}
						_iter_end_20540dadd:;
					};
				};
			}
			_iter_next_20540ce50:;
			++it;
			goto _iter_begin_20540ce50;
		}
		_iter_end_20540ce50:;
	};
}

inline void _2054160e0_checkEnumItemsDup(_201084669_Sema* _self_, jule::Slice<jule::Ptr<_201036176_TypeEnumItem>> _118339_items) {
	{
		auto expr = &(_118339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205417322:;
		if (it != expr_end) {
			jule::Ptr<_201036176_TypeEnumItem> *_118416_item = it;
			{
				if ((*(_118416_item)).get()._field_Ident.empty()) {
					goto _iter_next_205417322;
				} else if (_1ed697631_IsIgnoreIdent((*(_118416_item)).get()._field_Ident)) {
					_201086eeb_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_205417eb0:;
						if (it != expr_end) {
							jule::Ptr<_201036176_TypeEnumItem> *_119024_citem = it;
							{
								if (((*(_118416_item)) == (*(_119024_citem)))) {
									goto _iter_end_205417eb0;
								} else if (((*(_118416_item)).get()._field_Ident == (*(_119024_citem)).get()._field_Ident)) {
									_201086eeb_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118416_item)).get()._field_Ident, &__jule_any_type5)}));
									_20108731a_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_205417eb0;
								};
							}
							_iter_next_205417eb0:;
							++it;
							goto _iter_begin_205417eb0;
						}
						_iter_end_205417eb0:;
					};
				};
			}
			_iter_next_205417322:;
			++it;
			goto _iter_begin_205417322;
		}
		_iter_end_205417322:;
	};
}



inline void _20109336a_checkEnumItemsStr(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20103510e_Enum>* _120342_e) {
	jule::Ptr<_201100691_Eval> _120417_eval = _20108dc8e_eval(_self_, jule::Trait<_20114e426_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_120342_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2053d9e1b:;
		if (it != expr_end) {
			jule::Ptr<_201034619_EnumItem> _120521_item = *it;
			{
				if (_2010349b0_AutoExpr(_120521_item.ptr())) {
					_120521_item.get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Constant=static__1ee33d3e7_NewStr(_120521_item.get()._field_Ident)})});
					_120521_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120521_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_2010edb23_Data> _121425_d = _201121eba_evalExpr(_120417_eval, _120521_item.get()._field_Value.get()._field_Expr);;
					if ((_121425_d == nullptr)) {
						goto _iter_next_2053d9e1b;
					};
					if ((!(_2010ee492_IsConst(_121425_d.ptr())))) {
						_201086eeb_pushErr(_self_.ptr(), _120521_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_20108e289_checkAssignType(_self_, false, &((*(_120342_e)).get()._field_Kind.get()._field_Kind), &(_121425_d), _120521_item.get()._field_Token);
					_120521_item.get()._field_Value.get()._field_Data=_121425_d;
				};
			}
			_iter_next_2053d9e1b:;
			++it;
			goto _iter_begin_2053d9e1b;
		}
		_iter_end_2053d9e1b:;
	};
}



inline void _2053e3265_checkEnumItemInt(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_201100691_Eval>* _122946_eval, jule::Ptr<_20103510e_Enum>* _122964_e, jule::Ptr<_201138850_Prim>* _122975_prim, jule::Ptr<_201034619_EnumItem>* _122993_item, jule::U64* _1229115_n) {
	if (_2010349b0_AutoExpr((*(_122993_item)).ptr())) {
		(*(_122993_item)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		{
			
{
				_case_begin_2053e5d39:;
				{
					(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ee33cda8_NewU64((*(_1229115_n)));
				}
			}
			_match_end_2053e56da:;
		};
		(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_2010edb23_Data> _124421_d = _201121eba_evalExpr((*(_122946_eval)), (*(_122993_item)).get()._field_Value.get()._field_Expr);;
		if ((_124421_d == nullptr)) {
			return;;
		};
		if ((!(_2010ee492_IsConst(_124421_d.ptr())))) {
			_201086eeb_pushErr(_self_.ptr(), (*(_122993_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_20108e289_checkAssignType(_self_, false, &((*(_122964_e)).get()._field_Kind.get()._field_Kind), &(_124421_d), (*(_122993_item)).get()._field_Token);
		(*(_122993_item)).get()._field_Value.get()._field_Data=_124421_d;
		{
			
{
				_case_begin_2053e9117:;
				{
					(*(_1229115_n))=static_cast<jule::U64>(_1ee33e23e_ReadU64((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_2053e9029:;
		};
	};
}

inline void _20540099d_checkEnumItemInt(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_201100691_Eval>* _122946_eval, jule::Ptr<_20103510e_Enum>* _122964_e, jule::Ptr<_201138850_Prim>* _122975_prim, jule::Ptr<_201034619_EnumItem>* _122993_item, jule::I64* _1229115_n) {
	if (_2010349b0_AutoExpr((*(_122993_item)).ptr())) {
		(*(_122993_item)).get()._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()});
		{
			
{
				_case_begin_2054034a6:;
				{
					(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ee33cb11_NewI64((*(_1229115_n)));
				}
			}
			_match_end_205402dce:;
		};
		(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_2010edb23_Data> _124421_d = _201121eba_evalExpr((*(_122946_eval)), (*(_122993_item)).get()._field_Value.get()._field_Expr);;
		if ((_124421_d == nullptr)) {
			return;;
		};
		if ((!(_2010ee492_IsConst(_124421_d.ptr())))) {
			_201086eeb_pushErr(_self_.ptr(), (*(_122993_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_20108e289_checkAssignType(_self_, false, &((*(_122964_e)).get()._field_Kind.get()._field_Kind), &(_124421_d), (*(_122993_item)).get()._field_Token);
		(*(_122993_item)).get()._field_Value.get()._field_Data=_124421_d;
		{
			
{
				_case_begin_20540691b:;
				{
					(*(_1229115_n))=static_cast<jule::I64>(_1ee33deca_ReadI64((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_2054068a5:;
		};
	};
}



inline void _2053de915_checkEnumItemsInt1(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_201138850_Prim>* _126444_prim, jule::Ptr<_20103510e_Enum>* _126462_e) {
	jule::U64 _126517_max = 0LLU;;
	{
		
{
			_case_begin_2053e175d:;
			{
				_126517_max=static_cast<jule::U64>(_1ee336269_MaxU(_201138b80_Str((*(_126444_prim)).ptr())));
			}
		}
		_match_end_2053e152c:;
	};
	jule::Ptr<_201100691_Eval> _127517_eval = _20108dc8e_eval(_self_, jule::Trait<_20114e426_Lookup>(_self_, 3));;
	jule::U64 _127617_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_201034619_EnumItem> _127717_first = (*(_126462_e)).get()._field_Items[0LL];;
	_2053e3265_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_127717_first), &(_127617_n));
	if ((_127717_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_2053e9843:;
				{
					_127617_n=static_cast<jule::U64>(_1ee33ee54_AsU64(_127717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_2053e3595:;
		};
	};
	{
		auto expr = (*(_126462_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_2053e50d0:;
		if (it != expr_end) {
			jule::Ptr<_201034619_EnumItem> _128921_item = *it;
			{
				if (((_2010349b0_AutoExpr(_128921_item.ptr()) && (_127617_n > 0LLU)) && ((_126517_max - _127617_n) <= 0LLU))) {
					_201086eeb_pushErr(_self_.ptr(), _128921_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_2053e50d0;
				};
				(_127617_n)++;
				_2053e3265_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_128921_item), &(_127617_n));
			}
			_iter_next_2053e50d0:;
			++it;
			goto _iter_begin_2053e50d0;
		}
		_iter_end_2053e50d0:;
	};
}

inline void _2053de250_checkEnumItemsInt1(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_201138850_Prim>* _126444_prim, jule::Ptr<_20103510e_Enum>* _126462_e) {
	jule::I64 _126517_max = 0LL;;
	{
		
{
			_case_begin_2053edc43:;
			{
				_126517_max=static_cast<jule::I64>(_1ee335ec2_MaxI(_201138b80_Str((*(_126444_prim)).ptr())));
			}
		}
		_match_end_2053edacd:;
	};
	jule::Ptr<_201100691_Eval> _127517_eval = _20108dc8e_eval(_self_, jule::Trait<_20114e426_Lookup>(_self_, 3));;
	jule::I64 _127617_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_201034619_EnumItem> _127717_first = (*(_126462_e)).get()._field_Items[0LL];;
	_20540099d_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_127717_first), &(_127617_n));
	if ((_127717_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_2054013b6:;
				{
					_127617_n=static_cast<jule::I64>(_1ee33ebe0_AsI64(_127717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_2053eeb89:;
		};
	};
	{
		auto expr = (*(_126462_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_205402131:;
		if (it != expr_end) {
			jule::Ptr<_201034619_EnumItem> _128921_item = *it;
			{
				if (((_2010349b0_AutoExpr(_128921_item.ptr()) && (_127617_n > 0LL)) && ((_126517_max - _127617_n) <= 0LL))) {
					_201086eeb_pushErr(_self_.ptr(), _128921_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_205402131;
				};
				(_127617_n)++;
				_20540099d_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_128921_item), &(_127617_n));
			}
			_iter_next_205402131:;
			++it;
			goto _iter_begin_205402131;
		}
		_iter_end_205402131:;
	};
}



inline void _201093e1a_checkEnumItemsInt(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20103510e_Enum>* _129942_e) {
	jule::Ptr<_201138850_Prim> _130013_prim = _201133817_Prim((*(_129942_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_1ee33b648_IsSigInt(_130013_prim.get()._field_Kind)) {
			_case_begin_2053eba10:;
			{
				_2053de250_checkEnumItemsInt1(_self_, &(_130013_prim), _129942_e);
			}
		}
		else {
			_case_begin_2053de1d9:;
			{
				_2053de915_checkEnumItemsInt1(_self_, &(_130013_prim), _129942_e);
			}
		}
		_match_end_2053de184:;
	};
}



inline void _201094190_checkEnumDecl(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20103510e_Enum>* _130938_e) {
	if (_1ed697631_IsIgnoreIdent((*(_130938_e)).get()._field_Ident)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_201087b23_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_130938_e)))), (*(_130938_e)).get()._field_Ident, false)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_130938_e)).get()._field_Ident, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_130938_e)).get()._field_Items.len() == 0LL)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_130938_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_20540bbc9_checkEnumItemsDup(_self_.ptr(), (*(_130938_e)).get()._field_Items);
	if (((*(_130938_e)).get()._field_Kind != nullptr)) {
		if ((!(_20108c60b_checkType(_self_, &((*(_130938_e)).get()._field_Kind), jule::Trait<_20114e426_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_130938_e)).get()._field_Kind=_2011e847b_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	jule::Ptr<_201138850_Prim> _133317_t = _201133817_Prim((*(_130938_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_133317_t == nullptr)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_20113ba51_IsStr(_133317_t.ptr())) {
			_case_begin_2054128b1:;
			{
				_20109336a_checkEnumItemsStr(_self_, _130938_e);
			}
		}
		else if (_1ee33bbcb_IsInt(_201138b80_Str(_133317_t.ptr()))) {
			_case_begin_2054124c6:;
			{
				_201093e1a_checkEnumItemsInt(_self_, _130938_e);
			}
		}
		else {
			_case_begin_205411904:;
			{
				_201086eeb_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_2054117a0:;
	};
}



inline void _201094415_checkTypeEnumDecl(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_201036709_TypeEnum>* _135042_e) {
	if (_1ed697631_IsIgnoreIdent((*(_135042_e)).get()._field_Ident)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_201087b23_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_135042_e)))), (*(_135042_e)).get()._field_Ident, false)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_135042_e)).get()._field_Ident, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_135042_e)).get()._field_Items.len() == 0LL)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_135042_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_2054160e0_checkEnumItemsDup(_self_.ptr(), (*(_135042_e)).get()._field_Items);
	{
		auto expr = &((*(_135042_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20541394a:;
		if (it != expr_end) {
			jule::Ptr<_201036176_TypeEnumItem> _136421_item = *it;
			{
				if ((_136421_item.get()._field_Kind == nullptr)) {
					_201086eeb_pushErr(_self_.ptr(), _136421_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_20541394a;
				};
				jule::Bool _136917_ok = _20108c60b_checkType(_self_, &(_136421_item.get()._field_Kind), jule::Trait<_20114e426_Lookup>(_self_, 3));;
				if ((!(_136917_ok))) {
					goto _iter_next_20541394a;
				};
				jule::Ptr<_201138850_Prim> _137317_p = _201133817_Prim(_136421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_137317_p != nullptr) && _20113bcb5_IsAny(_137317_p.ptr()))) {
					_201086eeb_pushErr(_self_.ptr(), _136421_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_20541394a:;
			++it;
			goto _iter_begin_20541394a;
		}
		_iter_end_20541394a:;
	};
	if (((*(_135042_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_201036176_TypeEnumItem> _137921_item = (*(_135042_e)).get()._field_Items[0LL];;
		_2011310ea_TypeKind _138017_tk = _2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>((*(_135042_e)), 4)};;
		if (((_137921_item.get()._field_Kind.get()._field_Kind != nullptr) && _2011317b0_Equal(_137921_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_2011310ea_TypeKind>)((&(_138017_tk))))))) {
			_201086eeb_pushErr(_self_.ptr(), _137921_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_201036a39_Str((*(_135042_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _201094679_checkEnumDecls(jule::Ptr<_201084669_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20541e934:;
		if (it != expr_end) {
			jule::Ptr<_20103510e_Enum> _139121_e = *it;
			{
				_201094190_checkEnumDecl(_self_, &(_139121_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_20541e934:;
			++it;
			goto _iter_begin_20541e934;
		}
		_iter_end_20541e934:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _2010948dd_checkTypeEnumDecls(jule::Ptr<_201084669_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205420ccb:;
		if (it != expr_end) {
			jule::Ptr<_201036709_TypeEnum> _140321_e = *it;
			{
				_201094415_checkTypeEnumDecl(_self_, &(_140321_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205420ccb:;
			++it;
			goto _iter_begin_205420ccb;
		}
		_iter_end_205420ccb:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _201094beb_checkDeclGenerics(_201084669_Sema* _self_, jule::Slice<jule::Ptr<_200ee7654_GenericDecl>>* _141337_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _141337_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20542210c:;
		if (it != expr_end) {
			jule::I32 _141513_i = it - expr->begin();
			jule::Ptr<_200ee7654_GenericDecl> *_141516_g = it;
			{
				if (_1ed697631_IsIgnoreIdent((*(_141516_g)).get()._field_Ident)) {
					_201086eeb_pushErr(_self_, (*(_141516_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_20542210c;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _141337_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205422e21:;
					if (it != expr_end) {
						jule::I32 _142417_j = it - expr->begin();
						jule::Ptr<_200ee7654_GenericDecl> *_142420_ct = it;
						{
							{
								
								if ((_142417_j >= _141513_i)) {
									_case_begin_2054243b7:;
									{
										goto _iter_end_205422e21;
									}
								}
								else if (((*(_141516_g)).get()._field_Ident == (*(_142420_ct)).get()._field_Ident)) {
									_case_begin_20542443e:;
									{
										_201086eeb_pushErr(_self_, (*(_141516_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141516_g)).get()._field_Ident, &__jule_any_type5)}));
										_20108731a_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_205422e21;
									}
								}
								_match_end_2054242a7:;
							};
						}
						_iter_next_205422e21:;
						++it;
						_142417_j++;
						goto _iter_begin_205422e21;
					}
					_iter_end_205422e21:;
				};
			}
			_iter_next_20542210c:;
			++it;
			_141513_i++;
			goto _iter_begin_20542210c;
		}
		_iter_end_20542210c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _201095009_checkFnDeclParamsDup(_201084669_Sema* _self_, jule::Ptr<_20102065a_Fn>* _144040_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_144040_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054262ed:;
		if (it != expr_end) {
			jule::I32 _144313_i = it - expr->begin();
			jule::Ptr<_20101dd1d_Param> *_144316_p = it;
			{
				{
					auto expr = &((*(_144040_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205426d9d:;
					if (it != expr_end) {
						jule::Ptr<_200ee7654_GenericDecl> *_144520_g = it;
						{
							if (((*(_144316_p)).get()._field_Ident == (*(_144520_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_201086eeb_pushErr(_self_, (*(_144316_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144316_p)).get()._field_Ident, &__jule_any_type5)}));
								_20108731a_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_2054262ed;
							};
						}
						_iter_next_205426d9d:;
						++it;
						goto _iter_begin_205426d9d;
					}
					_iter_end_205426d9d:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_144040_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20542771c:;
					if (it != expr_end) {
						jule::I32 _145517_j = it - expr->begin();
						jule::Ptr<_20101dd1d_Param> *_145520_jp = it;
						{
							{
								
								if ((_145517_j >= _144313_i)) {
									_case_begin_205429158:;
									{
										goto _iter_end_20542771c;
									}
								}
								else if (_1ed697631_IsIgnoreIdent((*(_144316_p)).get()._field_Ident) || _1ed697631_IsIgnoreIdent((*(_145520_jp)).get()._field_Ident) || _1ed6978c8_IsAnonIdent((*(_144316_p)).get()._field_Ident) || _1ed6978c8_IsAnonIdent((*(_145520_jp)).get()._field_Ident)) {
									_case_begin_2054291d0:;
									{
										goto _iter_end_20542771c;
									}
								}
								else if (((*(_144316_p)).get()._field_Ident == (*(_145520_jp)).get()._field_Ident)) {
									_case_begin_205429257:;
									{
										__jule_func_result=false;
										_201086eeb_pushErr(_self_, (*(_144316_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144316_p)).get()._field_Ident, &__jule_any_type5)}));
										_20108731a_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_2054262ed;
									}
								}
								_match_end_205429037:;
							};
						}
						_iter_next_20542771c:;
						++it;
						_145517_j++;
						goto _iter_begin_20542771c;
					}
					_iter_end_20542771c:;
				};
			}
			_iter_next_2054262ed:;
			++it;
			_144313_i++;
			goto _iter_begin_2054262ed;
		}
		_iter_end_2054262ed:;
	};
	return __jule_func_result;;
}



inline jule::Bool _201095317_checkFnDeclResultDup(_201084669_Sema* _self_, jule::Ptr<_20102065a_Fn>* _147740_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_201020abc_IsVoid((*(_147740_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_147740_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20542bcd7:;
		if (it != expr_end) {
			jule::I32 _148413_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> *_148416_v = it;
			{
				if ((_1ed697631_IsIgnoreIdent((*(_148416_v)).get()._field_Kind) || _1ed6978c8_IsAnonIdent((*(_148416_v)).get()._field_Kind))) {
					goto _iter_next_20542bcd7;
				};
				{
					auto expr = &((*(_147740_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20542d24a:;
					if (it != expr_end) {
						jule::Ptr<_200ee7654_GenericDecl> *_148920_g = it;
						{
							if (((*(_148416_v)).get()._field_Kind == (*(_148920_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_20542d24a:;
						++it;
						goto _iter_begin_20542d24a;
					}
					_iter_end_20542d24a:;
				};
				{
					auto expr = &((*(_147740_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20542e16e:;
					if (it != expr_end) {
						jule::Ptr<_20101dd1d_Param> *_149520_p = it;
						{
							if (((*(_148416_v)).get()._field_Kind == (*(_149520_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_20542e16e:;
						++it;
						goto _iter_begin_20542e16e;
					}
					_iter_end_20542e16e:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_147740_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205430505:;
					if (it != expr_end) {
						jule::I32 _150317_j = it - expr->begin();
						jule::Ptr<_1ed694d8c_Token> *_150320_jv = it;
						{
							{
								
								if ((_150317_j >= _148413_i)) {
									_case_begin_2054311e8:;
									{
										goto _iter_end_205430505;
									}
								}
								else if (((*(_150320_jv)).get()._field_Kind == (*(_148416_v)).get()._field_Kind)) {
									_case_begin_205431270:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_2054310d8:;
							};
						}
						_iter_next_205430505:;
						++it;
						_150317_j++;
						goto _iter_begin_205430505;
					}
					_iter_end_205430505:;
				};
				goto _iter_next_20542bcd7;
				_julec_label_exist:;
				_201086eeb_pushErr(_self_, (*(_148416_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_148416_v)).get()._field_Kind, &__jule_any_type5)}));
				_20108731a_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_20542bcd7:;
			++it;
			_148413_i++;
			goto _iter_begin_20542bcd7;
		}
		_iter_end_20542bcd7:;
	};
	return __jule_func_result;;
}



inline jule::Bool _201095625_checkFnVariadicParam(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102065a_Fn>* _152245_f) {
	if (((*(_152245_f)).get()._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_20101dd1d_Param> _152617_param = (*(_152245_f)).get()._field_Params[((*(_152245_f)).get()._field_Params.len() - 1LL)];;
	if ((_152617_param.get()._field_Variadic && _152617_param.get()._field_Reference)) {
		_201086eeb_pushErr(_self_.ptr(), _152617_param.get()._field_Token, jule::Str("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _20109589a_checkFnDeclPrototype(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102065a_Fn>* _153545_f) {
	if (((*(_153545_f)).get()._field_Exceptional && (*(_153545_f)).get()._field_Binded)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_153545_f)).get()._field_Exceptional) {
		if (_201021095_IsEntryPoint((*(_153545_f)).ptr())) {
			_201086eeb_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_201021309_IsInit((*(_153545_f)).ptr())) {
			_201086eeb_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_201094beb_checkDeclGenerics(_self_.ptr(), &((*(_153545_f)).get()._field_Generics))))) {
			_case_begin_205435c9c:;
		}
		else if ((!(_201095009_checkFnDeclParamsDup(_self_.ptr(), _153545_f)))) {
			_case_begin_205435d24:;
		}
		else if ((!(_201095317_checkFnDeclResultDup(_self_.ptr(), _153545_f)))) {
			_case_begin_205435d9b:;
		}
		else if ((!(_201095625_checkFnVariadicParam(_self_, _153545_f)))) {
			_case_begin_205437056:;
		}
		_match_end_205436363:;
	};
}



inline jule::Bool _201095ceb_catchTraitInheritCycle(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20103287b_Trait> _155742_t1, jule::Ptr<_20103287b_Trait> _155758_t2, jule::Str* _155775_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &(_155758_t2.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205438e37:;
		if (it != expr_end) {
			jule::Ptr<_201137e9d_TypeSymbol> _155921_i = *it;
			{
				if ((_155921_i.get()._field_Kind == nullptr)) {
					goto _iter_next_205438e37;
				};
				jule::Ptr<_20103287b_Trait> _156321_t3 = _201134ecd_Trait(_155921_i.get()._field_Kind.ptr());;
				if ((_155742_t1 == _156321_t3)) {
					_20109a570_pushCycleError(_self_.ptr(), &(_155758_t2.get()._field_Ident), &(_156321_t3.get()._field_Ident), _155775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_201095ceb_catchTraitInheritCycle(_self_, _155742_t1, _156321_t3, _155775_message)))) {
					_20109a570_pushCycleError(_self_.ptr(), &(_155758_t2.get()._field_Ident), &(_156321_t3.get()._field_Ident), _155775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205438e37:;
			++it;
			goto _iter_begin_205438e37;
		}
		_iter_end_205438e37:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20109612b__checkTraitDeclInherits(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20103287b_Trait>* _157648_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_157648_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20543bad8:;
		if (it != expr_end) {
			jule::I32 _157814_i = it - expr->begin();
			jule::Ptr<_201137e9d_TypeSymbol> _157821_it = *it;
			{
				if ((!(_20108c60b_checkType(_self_, &(_157821_it), jule::Trait<_20114e426_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_20543bad8;
				};
				jule::Ptr<_20103287b_Trait> _158321_t2 = _201134ecd_Trait(_157821_it.get()._field_Kind.ptr());;
				if ((_158321_t2 == nullptr)) {
					_201086eeb_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*(_157648_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_2011314a2_Str(_157821_it.get()._field_Kind.ptr()), &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_20543bad8;
				};
				{
					auto expr = &((*(_157648_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20543d524:;
					if (it != expr_end) {
						jule::I32 _158917_j = it - expr->begin();
						jule::Ptr<_201137e9d_TypeSymbol> _158920_it2 = *it;
						{
							if ((_158917_j >= _157814_i)) {
								goto _iter_end_20543d524;
							};
							if (((_158920_it2.get()._field_Kind != nullptr) && _2011317b0_Equal(_157821_it.get()._field_Kind, _158920_it2.get()._field_Kind))) {
								_201086eeb_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_158321_t2.get()._field_Ident, &__jule_any_type5)}));
								__jule_func_result=false;
								goto _iter_end_20543d524;
							};
						}
						_iter_next_20543d524:;
						++it;
						_158917_j++;
						goto _iter_begin_20543d524;
					}
					_iter_end_20543d524:;
				};
				if (((*(_157648_t)) == _158321_t2)) {
					_201086eeb_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_157648_t)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				} else {
					jule::Str _160325_message = jule::Str();;
					__jule_func_result=(__jule_func_result && _201095ceb_catchTraitInheritCycle(_self_, (*(_157648_t)), _158321_t2, &(_160325_message)));
					if ((_160325_message.len() > 0LL)) {
						jule::Str _160629_errMsg = _160325_message;;
						_160325_message=jule::Str();
						_20109a570_pushCycleError(_self_.ptr(), &((*(_157648_t)).get()._field_Ident), &(_158321_t2.get()._field_Ident), &(_160325_message));
						_160629_errMsg+=_160325_message;
						_201086eeb_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_160629_errMsg, &__jule_any_type5)}));
					};
				};
			}
			_iter_next_20543bad8:;
			++it;
			_157814_i++;
			goto _iter_begin_20543bad8;
		}
		_iter_end_20543bad8:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _2010963b2_checkTraitDeclInherits(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20103287b_Trait>* _161747_t) {
	{
		auto expr = &((*(_161747_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20543b7a8:;
		if (it != expr_end) {
			jule::I32 _161814_i = it - expr->begin();
			jule::Ptr<_201137e9d_TypeSymbol> _161821_it = *it;
			{
				jule::Ptr<_20103287b_Trait> _161921_t1 = _201134ecd_Trait(_161821_it.get()._field_Kind.ptr());;
				{
					auto expr = &((*(_161747_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205444e43:;
					if (it != expr_end) {
						jule::I32 _162018_j = it - expr->begin();
						jule::Ptr<_201137e9d_TypeSymbol> _162025_it2 = *it;
						{
							if ((_162018_j == _161814_i)) {
								goto _iter_next_205444e43;
							};
							jule::Ptr<_20103287b_Trait> _162425_t2 = _201134ecd_Trait(_162025_it2.get()._field_Kind.ptr());;
							{
								auto expr = &(_161921_t1.get()._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_20544631d:;
								if (it != expr_end) {
									jule::Ptr<_20102065a_Fn> _162529_t1m = *it;
									{
										jule::Ptr<_20102065a_Fn> _162629_t2m = _201033728_FindMethod(_162425_t2.ptr(), _162529_t1m.get()._field_Ident);;
										if ((_162629_t2m == nullptr)) {
											goto _iter_next_20544631d;
										};
										jule::Ptr<_20102330b_FnIns> _163025_t1f = _201090367_getTraitCheckFnKind(_self_, &(_162529_t1m));;
										jule::Ptr<_20102330b_FnIns> _163125_t2f = _201090367_getTraitCheckFnKind(_self_, &(_162629_t2m));;
										if ((!(_2010241b9_equalTrait(_163025_t1f, &(_163125_t2f))))) {
											_201086eeb_pushErr(_self_.ptr(), _161821_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*(_161747_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_162425_t2.get()._field_Ident, &__jule_any_type5),jule::Any(_201025022_GetKindStr(_163025_t1f.ptr(), true), &__jule_any_type5),jule::Any(_201025022_GetKindStr(_163125_t2f.ptr(), true), &__jule_any_type5)}));
											return;;
										};
									}
									_iter_next_20544631d:;
									++it;
									goto _iter_begin_20544631d;
								}
								_iter_end_20544631d:;
							};
						}
						_iter_next_205444e43:;
						++it;
						_162018_j++;
						goto _iter_begin_205444e43;
					}
					_iter_end_205444e43:;
				};
			}
			_iter_next_20543b7a8:;
			++it;
			_161814_i++;
			goto _iter_begin_20543b7a8;
		}
		_iter_end_20543b7a8:;
	};
}



inline void _201096637_checkTraitDeclMethod(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102065a_Fn>* _164245_f) {
	if (_1ed697631_IsIgnoreIdent((*(_164245_f)).get()._field_Ident)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_164245_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ed6978c8_IsAnonIdent((*(_164245_f)).get()._field_Ident)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_164245_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*(_164245_f)).get()._field_sema=_self_;
	_20109589a_checkFnDeclPrototype(_self_, _164245_f);
	jule::Ptr<_20102330b_FnIns> _165017_ins = _201021caa_instance((*(_164245_f)));;
	_201091654_reloadFnInsTypes(_self_, _165017_ins);
	_165017_ins.get()._field_reloaded=true;
	_201022085_appendInstance((*(_164245_f)).ptr(), &(_165017_ins));
}



inline void _2010968ac_checkTraitDeclMethods(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20103287b_Trait>* _165646_t) {
	{
		auto expr = &((*(_165646_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20544b6ec:;
		if (it != expr_end) {
			jule::I32 _165714_i = it - expr->begin();
			jule::Ptr<_20102065a_Fn> _165721_f = *it;
			{
				_201096637_checkTraitDeclMethod(_self_, &(_165721_f));
				(*(_165646_t)).get()._field_Mutable=((*(_165646_t)).get()._field_Mutable || _165721_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_201033d44_findMethodInherit((*(_165646_t)).ptr(), &(_165721_f.get()._field_Ident)) != nullptr)) {
					_201086eeb_pushErr(_self_.ptr(), _165721_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_165721_f.get()._field_Ident, &__jule_any_type5)}));
					_20108731a_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_20544b6ec;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_165646_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20544e403:;
					if (it != expr_end) {
						jule::I32 _167417_j = it - expr->begin();
						jule::Ptr<_20102065a_Fn> _167420_jf = *it;
						{
							{
								
								if ((_167417_j >= _165714_i)) {
									_case_begin_205450019:;
									{
										goto _iter_end_20544e403;
									}
								}
								else if ((_165721_f.get()._field_Ident == _167420_jf.get()._field_Ident)) {
									_case_begin_205450091:;
									{
										_201086eeb_pushErr(_self_.ptr(), _165721_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_165721_f.get()._field_Ident, &__jule_any_type5)}));
										_20108731a_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_20544e403;
									}
								}
								_match_end_20544ee09:;
							};
						}
						_iter_next_20544e403:;
						++it;
						_167417_j++;
						goto _iter_begin_20544e403;
					}
					_iter_end_20544e403:;
				};
			}
			_iter_next_20544b6ec:;
			++it;
			_165714_i++;
			goto _iter_begin_20544b6ec;
		}
		_iter_end_20544b6ec:;
	};
}



inline void _201096b32_checkTraitDecl(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20103287b_Trait>* _169339_t) {
	if (_1ed697631_IsIgnoreIdent((*(_169339_t)).get()._field_Ident)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_169339_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_201087b23_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_169339_t)))), (*(_169339_t)).get()._field_Ident, false)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_169339_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_169339_t)).get()._field_Ident, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_2010963b2_checkTraitDeclInherits(_self_, _169339_t);
	_2010968ac_checkTraitDeclMethods(_self_, _169339_t);
}



inline jule::Bool _201096d96_checkTraitDecls(jule::Ptr<_201084669_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205453b00:;
		if (it != expr_end) {
			jule::Ptr<_20103287b_Trait> _170721_t = *it;
			{
				_201096b32_checkTraitDecl(_self_, &(_170721_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205453b00:;
			++it;
			goto _iter_begin_205453b00;
		}
		_iter_end_205453b00:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20109724d_checkTraitImplMethods(_201084669_Sema* _self_, jule::Ptr<_20103287b_Trait>* _171745_base, jule::Ptr<_2010578c3_Impl>* _171760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_171760_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054553b5:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> *_171916_f = it;
			{
				if ((_201033728_FindMethod((*(_171745_base)).ptr(), (*(_171916_f)).get()._field_Ident) == nullptr)) {
					_201086eeb_pushErr(_self_, (*(_171916_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_171745_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_171916_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_2054553b5:;
			++it;
			goto _iter_begin_2054553b5;
		}
		_iter_end_2054553b5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _201097605_implToStruct(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100a25a_Struct>* _172837_dest, jule::Ptr<_2010578c3_Impl>* _172857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_172857_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20545741c:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _173221_f = *it;
			{
				if (((_20100ad4e_FindMethod((*(_172837_dest)).ptr(), _173221_f.get()._field_Ident, _173221_f.get()._field_Statically) != nullptr) || (_20100b46a_FindField((*(_172837_dest)).ptr(), _173221_f.get()._field_Ident) != nullptr))) {
					_201086eeb_pushErr(_self_.ptr(), _173221_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_172837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_173221_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_20545741c;
				};
				if ((((*(_172837_dest)).get()._field_Generics.len() > 0LL) && (_173221_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_173221_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_205459694:;
						if (it != expr_end) {
							jule::Ptr<_200ee7654_GenericDecl> _174024_fg = *it;
							{
								{
									auto expr = &((*(_172837_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_205459e7a:;
									if (it != expr_end) {
										jule::Ptr<_200ee7654_GenericDecl> _174128_dg = *it;
										{
											if ((_174024_fg.get()._field_Ident == _174128_dg.get()._field_Ident)) {
												_201086eeb_pushErr(_self_.ptr(), _174024_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_205459e7a:;
										++it;
										goto _iter_begin_205459e7a;
									}
									_iter_end_205459e7a:;
								};
							}
							_iter_next_205459694:;
							++it;
							goto _iter_begin_205459694;
						}
						_iter_end_205459694:;
					};
				};
				_201087e42_checkDirectives(_self_, &(_173221_f.get()._field_Directives), jule::Any(_173221_f, &__jule_any_type65));
				_173221_f.get()._field_sema=_self_;
				_173221_f.get()._field_Owner=(*(_172837_dest));
				{ jule::Slice<jule::Ptr<_20102065a_Fn>> &__jule_push_dest = (*(_172837_dest)).get()._field_Methods; __jule_push_dest.push(_173221_f); };
			}
			_iter_next_20545741c:;
			++it;
			goto _iter_begin_20545741c;
		}
		_iter_end_20545741c:;
	};
	{
		auto expr = &((*(_172857_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20545c279:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> _175721_v = *it;
			{
				;
				if (((_20100ad4e_FindMethod((*(_172837_dest)).ptr(), _175721_v.get()._field_Ident, true) != nullptr) || (_20100b15c_FindStatic((*(_172837_dest)).ptr(), _175721_v.get()._field_Ident) != nullptr))) {
					_201086eeb_pushErr(_self_.ptr(), _175721_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_172837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_175721_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_20545c279;
				};
				{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = (*(_172837_dest)).get()._field_Statics; __jule_push_dest.push(_175721_v); };
			}
			_iter_next_20545c279:;
			++it;
			goto _iter_begin_20545c279;
		}
		_iter_end_20545c279:;
	};
	return __jule_func_result;;
}



inline void _20109787a_implTrait(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_2010578c3_Impl>* _177034_decl) {
	jule::Ptr<_2011310ea_TypeKind> _177117_base_t = _20108d178_selectType(_self_, &((*(_177034_decl)).get()._field_Base));;
	if ((_177117_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_20103287b_Trait> _177517_base = _201134ecd_Trait(_177117_base_t.ptr());;
	if ((_177517_base == nullptr)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_177117_base_t.ptr()), &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2011310ea_TypeKind> _178217_destT = _20108d178_selectType(_self_, &((*(_177034_decl)).get()._field_Dest));;
	if ((_178217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_20100d071_StructIns> _178617_destS = _201134c69_Struct(_178217_destT.ptr());;
	if ((_178617_destS == nullptr)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_178217_destT.ptr()), &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20100a25a_Struct> _179317_dest = _178617_destS.get()._field_Decl;;
	if ((_1ed69a854_Dir(_179317_dest.get()._field_Token.get()._field_File.ptr()) != _1ed69a854_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_201086eeb_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_2010a2e5c_pushImplemented(_177517_base, &(_179317_dest));
	_2010a3215_pushImplements(&(_179317_dest), _177517_base);
	if (((*(_177034_decl)).get()._field_Statics.len() > 0LL)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_20109724d_checkTraitImplMethods(_self_.ptr(), &(_177517_base), _177034_decl)))) {
			_case_begin_205465518:;
		}
		else if ((!(_201097605_implToStruct(_self_, &(_179317_dest), _177034_decl)))) {
			_case_begin_205465590:;
		}
		_match_end_2054639cd:;
	};
}



inline void _201097b00_implStruct(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_2010578c3_Impl>* _181335_decl) {
	jule::Ptr<_2011310ea_TypeKind> _181417_destT = _20108d178_selectType(_self_, &((*(_181335_decl)).get()._field_Dest));;
	if ((_181417_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_20100d071_StructIns> _181817_destS = _201134c69_Struct(_181417_destT.ptr());;
	if ((_181817_destS == nullptr)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_181335_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_181417_destT.ptr()), &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20100a25a_Struct> _182517_dest = _181817_destS.get()._field_Decl;;
	if ((_1ed69a854_Dir(_182517_dest.get()._field_Token.get()._field_File.ptr()) != _1ed69a854_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_201086eeb_pushErr(_self_.ptr(), (*(_181335_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_201097605_implToStruct(_self_, &(_182517_dest), _181335_decl)))) {
			_case_begin_20546996d:;
		}
		_match_end_205467790:;
	};
}



inline void _201097d75_implImpl(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_2010578c3_Impl>* _183733_decl) {
	{
		
		if (_201057c7a_IsTraitImpl((*(_183733_decl)).ptr())) {
			_case_begin_20546a41e:;
			{
				_20109787a_implTrait(_self_, _183733_decl);
			}
		}
		else if (_201057ede_IsStructImpl((*(_183733_decl)).ptr())) {
			_case_begin_20546a496:;
			{
				_201097b00_implStruct(_self_, _183733_decl);
			}
		}
		_match_end_20546a30e:;
	};
}



inline void _201098194_checkVarDecl(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_2010a4975_Var>* _184837_decl, jule::Trait<_20114e426_Lookup> _184853_l) {
	if (_1ed697631_IsIgnoreIdent((*(_184837_decl)).get()._field_Ident)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_2010a505d_IsTypeInferred((*(_184837_decl)).ptr())) {
		if ((!(_2010a4ce9_IsInitialized((*(_184837_decl)).ptr())))) {
			_201086eeb_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_20108c60b_checkType(_self_, &((*(_184837_decl)).get()._field_Kind), _184853_l);
	};
	if (((*(_184837_decl)).get()._field_Constant && (*(_184837_decl)).get()._field_Reference)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_2010a4ce9_IsInitialized((*(_184837_decl)).ptr())))) {
		if ((*(_184837_decl)).get()._field_Constant) {
			_201086eeb_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_184837_decl)).get()._field_Statically) {
			_201086eeb_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_184837_decl)).get()._field_Reference) {
			_201086eeb_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _201098419_checkGlobalVarDecl(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_2010a4975_Var>* _188043_decl) {
	if (_201087b23_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_188043_decl)))), (*(_188043_decl)).get()._field_Ident, (*(_188043_decl)).get()._field_Binded)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_188043_decl)).get()._field_Ident, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_188043_decl)).get()._field_Binded && (*(_188043_decl)).get()._field_Constant)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*(_188043_decl)).get()._field_Binded)) && (!((*(_188043_decl)).get()._field_Constant))) && (!((*(_188043_decl)).get()._field_Statically)))) {
		_201086eeb_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_20108731a_pushSuggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_201087e42_checkDirectives(_self_, &((*(_188043_decl)).get()._field_Directives), jule::Any((*(_188043_decl)), &__jule_any_type8));
	_201098194_checkVarDecl(_self_, _188043_decl, jule::Trait<_20114e426_Lookup>(_self_, 3));
}



inline jule::Bool _20109867d_checkGlobalDecls(jule::Ptr<_201084669_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205473dc8:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> _189821_decl = *it;
			{
				_201098419_checkGlobalVarDecl(_self_, &(_189821_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205473dc8:;
			++it;
			goto _iter_begin_205473dc8;
		}
		_iter_end_205473dc8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _201098a35_checkStructTraitImpl(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100a25a_Struct>* _190845_strct, jule::Ptr<_20103287b_Trait>* _190866_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_190866_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054755b1:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _190921_tf = *it;
			{
				jule::Bool _191021_exist = false;;
				jule::Ptr<_20102065a_Fn> _191121_sf = _20100ad4e_FindMethod((*(_190845_strct)).ptr(), _190921_tf.get()._field_Ident, _190921_tf.get()._field_Statically);;
				jule::Ptr<_20102330b_FnIns> _191217_tfK = _201090367_getTraitCheckFnKind(_self_, &(_190921_tf));;
				if ((_191121_sf != nullptr)) {
					jule::Ptr<_20102330b_FnIns> _191425_sfK = _201090367_getTraitCheckFnKind(_self_, &(_191121_sf));;
					_191021_exist=_2010241b9_equalTrait(_191217_tfK, &(_191425_sfK));
				};
				if (_191021_exist) {
					jule::Ptr<_200d472d9_Directive> _191821_d = _20112a15a_findDirective(&(_191121_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_191821_d != nullptr)) {
						_201086eeb_pushErr(_self_.ptr(), _191821_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_201086eeb_pushErr(_self_.ptr(), (*(_190845_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_190866_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_201025022_GetKindStr(_191217_tfK.ptr(), true), &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_2054755b1:;
			++it;
			goto _iter_begin_2054755b1;
		}
		_iter_end_2054755b1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _201098d43_checkStructImpls(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100a25a_Struct>* _193241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_193241_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20547a2db:;
		if (it != expr_end) {
			jule::Ptr<_20103287b_Trait> _193421_trt = *it;
			{
				__jule_func_result=(_201098a35_checkStructTraitImpl(_self_, _193241_s, &(_193421_trt)) && __jule_func_result);
			}
			_iter_next_20547a2db:;
			++it;
			goto _iter_begin_20547a2db;
		}
		_iter_end_20547a2db:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _201099151_checkStructFields(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100a25a_Struct>* _194042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_194042_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20547b6c7:;
		if (it != expr_end) {
			jule::Ptr<_201007686_Field> _194221_f = *it;
			{
				_194221_f.get()._field_Owner=(*(_194042_st));
				{
					auto expr = &((*(_194042_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20547c222:;
					if (it != expr_end) {
						jule::Ptr<_201007686_Field> _194420_cf = *it;
						{
							if ((_194221_f == _194420_cf)) {
								goto _iter_end_20547c222;
							} else if ((_194221_f.get()._field_Ident == _194420_cf.get()._field_Ident)) {
								_201086eeb_pushErr(_self_.ptr(), _194221_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_194221_f.get()._field_Ident, &__jule_any_type5)}));
								_20108731a_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_20547c222:;
						++it;
						goto _iter_begin_20547c222;
					}
					_iter_end_20547c222:;
				};
			}
			_iter_next_20547b6c7:;
			++it;
			goto _iter_begin_20547b6c7;
		}
		_iter_end_20547b6c7:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _2010993c6_checkStructDecl(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100a25a_Struct>* _195740_s) {
	if (_1ed697631_IsIgnoreIdent((*(_195740_s)).get()._field_Ident)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_195740_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_201087b23_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_195740_s)))), (*(_195740_s)).get()._field_Ident, (*(_195740_s)).get()._field_Binded)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_195740_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_195740_s)).get()._field_Ident, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_201087e42_checkDirectives(_self_, &((*(_195740_s)).get()._field_Directives), jule::Any((*(_195740_s)), &__jule_any_type66));
	{
		
		if ((!(_201094beb_checkDeclGenerics(_self_.ptr(), &((*(_195740_s)).get()._field_Generics))))) {
			_case_begin_20547dd8e:;
		}
		else if ((!(_201099151_checkStructFields(_self_, _195740_s)))) {
			_case_begin_2054808eb:;
		}
		else if ((!(_201098d43_checkStructImpls(_self_, _195740_s)))) {
			_case_begin_205480962:;
		}
		else if ((!(_201099e43_checkFuncDecls(_self_, &((*(_195740_s)).get()._field_Methods))))) {
			_case_begin_2054809c8:;
		}
		_match_end_2054807b9:;
	};
}



inline jule::Bool _20109963a_checkStructDecls(jule::Ptr<_201084669_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054821e4:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> _197721_s = *it;
			{
				_2010993c6_checkStructDecl(_self_, &(_197721_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2054821e4:;
			++it;
			goto _iter_begin_2054821e4;
		}
		_iter_end_2054821e4:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _2010998b0_checkAnonFnDecl(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102065a_Fn>* _198740_f) {
	(*(_198740_f)).get()._field_sema=_self_;
	_20109589a_checkFnDeclPrototype(_self_, _198740_f);
}



inline void _201099b35_checkFnDecl(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102065a_Fn>* _199236_f) {
	if (_1ed697631_IsIgnoreIdent((*(_199236_f)).get()._field_Ident)) {
		_201086eeb_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_20102156d_IsAnon((*(_199236_f)).ptr())) {
		_201086eeb_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_201087e42_checkDirectives(_self_, &((*(_199236_f)).get()._field_Directives), jule::Any((*(_199236_f)), &__jule_any_type65));
	_2010998b0_checkAnonFnDecl(_self_, _199236_f);
	if ((((*(_199236_f)).get()._field_Owner == nullptr) && _201087b23_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_199236_f)))), (*(_199236_f)).get()._field_Ident, (*(_199236_f)).get()._field_Binded))) {
		if ((*(_199236_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_20102065a_Fn> _200421_init = _201085aaa_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_200421_init != nullptr)) {
				return;;
			};
		};
		_201086eeb_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_199236_f)).get()._field_Ident, &__jule_any_type5)}));
		_20108731a_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _201099e43_checkFuncDecls(jule::Ptr<_201084669_Sema> _self_, jule::Slice<jule::Ptr<_20102065a_Fn>>* _201439_funcs) {
	{
		auto expr = _201439_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205487ae0:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _201521_f = *it;
			{
				_201099b35_checkFnDecl(_self_, &(_201521_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_205487ae0:;
			++it;
			goto _iter_begin_205487ae0;
		}
		_iter_end_205487ae0:;
	};
	return true;;
}



inline jule::Bool _20109a1a7_checkFnDecls(jule::Ptr<_201084669_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _201099e43_checkFuncDecls(_self_, &(_self_.get()._field_file.get()._field_Funcs));
	return __jule_func_result;;
}



inline void _20109a570_pushCycleError(_201084669_Sema* _self_, jule::Str* _203030_st1, jule::Str* _203041_st2, jule::Str* _203056_message) {
	;
	jule::Str _203213_refers_to = _2193a4a4d_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_203030_st1)), &__jule_any_type5),jule::Any((*(_203041_st2)), &__jule_any_type5)}));;
	((*(_203056_message))).buffer.insert(0, (((_219317a27_Repeat(jule::Str(" ", 1), 7LL) + _203213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _20109a9c1_checkCrossCycle(_201084669_Sema* _self_, jule::Ptr<_20100a25a_Struct>* _203631_st1, jule::Ptr<_20100a25a_Struct>* _203646_st2, jule::Str* _203665_message) {
	{
		auto expr = &((*(_203646_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20548b20e:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> *_203716_u = it;
			{
				if (((*(_203716_u)) == (*(_203631_st1)))) {
					_20109a570_pushCycleError(_self_, &((*(_203646_st2)).get()._field_Ident), &((*(_203716_u)).get()._field_Ident), _203665_message);
					return false;;
				};
				if ((!(_20109a9c1_checkCrossCycle(_self_, _203631_st1, _203716_u, _203665_message)))) {
					_20109a570_pushCycleError(_self_, &((*(_203646_st2)).get()._field_Ident), &((*(_203716_u)).get()._field_Ident), _203665_message);
					return false;;
				};
			}
			_iter_next_20548b20e:;
			++it;
			goto _iter_begin_20548b20e;
		}
		_iter_end_20548b20e:;
	};
	return true;;
}



inline jule::Bool _20109ae44_checkStructDeriveIllegalCycles(_201084669_Sema* _self_, jule::Str _205049_derive, jule::Ptr<_20100a25a_Struct>* _205063_st1, jule::Ptr<_2011310ea_TypeKind>* _205082_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20100a25a_Struct> _205117_st2 = _20114bd3b_getStructFromKind((*(_205082_k)));;
	if ((_205117_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_205063_st1)) == _205117_st2)) {
		_201086eeb_pushErr(_self_, (*(_205063_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_205049_derive, &__jule_any_type5),jule::Any((*(_205063_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _206317_message = jule::Str();;
	if ((!(_20109a9c1_checkCrossCycle(_self_, _205063_st1, &(_205117_st2), &(_206317_message))))) {
		jule::Str _206521_errMsg = _206317_message;;
		_206317_message=jule::Str();
		_20109a570_pushCycleError(_self_, &((*(_205063_st1)).get()._field_Ident), &(_205117_st2.get()._field_Ident), &(_206317_message));
		_206521_errMsg+=_206317_message;
		_201086eeb_pushErr(_self_, (*(_205063_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_205049_derive, &__jule_any_type5),jule::Any(_206521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _20109b285_checkStructInsDeriveClone(_201084669_Sema* _self_, jule::Ptr<_20100d071_StructIns> _207548_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_20100ba86_IsDerives(_207548_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_207548_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205491e4b:;
		if (it != expr_end) {
			jule::Ptr<_20100c57b_FieldIns> _207921_f = *it;
			{
				if ((_207921_f.get()._field_Kind == nullptr)) {
					goto _iter_next_205491e4b;
				};
				if ((!(_20113333e_SupportsCloning(_207921_f.get()._field_Kind.ptr())))) {
					_201086eeb_pushErr(_self_, _207548_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_207921_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_20109ae44_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_207548_st.get()._field_Decl), &(_207921_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_205491e4b:;
			++it;
			goto _iter_begin_205491e4b;
		}
		_iter_end_205491e4b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20109b472_checkPackageDecls(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205491885:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _209721_f = *it;
			{
				_201086b33_setCurrentFile(_self_.ptr(), _209721_f);
				if ((!(_201092d70_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_205491885:;
			++it;
			goto _iter_begin_205491885;
		}
		_iter_end_205491885:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20549523a:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _210421_f = *it;
			{
				_201086b33_setCurrentFile(_self_.ptr(), _210421_f);
				if ((!(_201096d96_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_20549523a:;
			++it;
			goto _iter_begin_20549523a;
		}
		_iter_end_20549523a:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205494adb:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _211121_f = *it;
			{
				_201086b33_setCurrentFile(_self_.ptr(), _211121_f);
				if ((!(_20109867d_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_205494adb:;
			++it;
			goto _iter_begin_205494adb;
		}
		_iter_end_205494adb:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205495735:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _211821_f = *it;
			{
				_201086b33_setCurrentFile(_self_.ptr(), _211821_f);
				{
					
					if ((!(_20109a1a7_checkFnDecls(_self_)))) {
						_case_begin_20549755b:;
					}
					else if ((!(_20109963a_checkStructDecls(_self_)))) {
						_case_begin_2054975c2:;
					}
					else {
						_case_begin_2054974e5:;
						{
							goto _iter_next_205495735;
						}
					}
					_match_end_20549747e:;
				};
				return;;
			}
			_iter_next_205495735:;
			++it;
			goto _iter_begin_205495735;
		}
		_iter_end_205495735:;
	};
}



inline void _20109b7b3_checkDataForTypeInference(_201084669_Sema* _self_, jule::Ptr<_2010edb23_Data>* _213045_d, jule::Ptr<_1ed694d8c_Token>* _213056_err_token) {
	{
		
		if (_2010edeb9_IsNil((*(_213045_d)).ptr())) {
			_case_begin_20549842a:;
			{
				_201086eeb_pushErr(_self_, (*(_213056_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_2010ee22d_IsVoid((*(_213045_d)).ptr())) {
			_case_begin_2054984a2:;
			{
				_201086eeb_pushErr(_self_, (*(_213056_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_213045_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_205498529:;
			{
				_201086eeb_pushErr(_self_, (*(_213056_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_205498309:;
	};
}



inline void _20109ba49_checkVar(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_2010a4975_Var>* _214133_v) {
	if ((*(_214133_v)).get()._field_Binded) {
		return;;
	};
	if (_2010a505d_IsTypeInferred((*(_214133_v)).ptr())) {
		(*(_214133_v)).get()._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=(*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_20109b7b3_checkDataForTypeInference(_self_.ptr(), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_20109219e_checkValidityForInitExpr(_self_, (*(_214133_v)).get()._field_Mutable, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_20113eba8_Arr> _215821_arr = _20113452c_Arr((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_215821_arr != nullptr)) {
			if (_215821_arr.get()._field_Auto) {
				jule::Ptr<_20113eba8_Arr> _216125_dataArr = _20113452c_Arr((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_216125_dataArr != nullptr)) {
					_215821_arr.get()._field_N=_216125_dataArr.get()._field_N;
				};
			};
		};
		if (_20108e289_checkAssignType(_self_, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_20109219e_checkValidityForInitExpr(_self_, (*(_214133_v)).get()._field_Mutable, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_214133_v)).get()._field_Reference && (!(_20114b19d_isValidForRef(&((*(_214133_v)).get()._field_Kind.get()._field_Kind)))))) {
		_201086eeb_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_214133_v)).get()._field_Constant) {
		jule::Bool _218317_comptime = _20113571a_comptime((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
		if (((!(_2010ee492_IsConst((*(_214133_v)).get()._field_Value.get()._field_Data.ptr()))) && (!(_218317_comptime)))) {
			_201086eeb_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_218317_comptime && (_201136908_comptimeRange((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()) != nullptr))) {
			_201086eeb_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		(*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_2011354a6_Tup((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_214133_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _20109bd68_checkTypeVar(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_2010a4975_Var>* _220037_decl, jule::Trait<_20114e426_Lookup> _220053_l) {
	if (((*(_220037_decl)).get()._field_Binded || (!(_2010a4ce9_IsInitialized((*(_220037_decl)).ptr()))))) {
		return;;
	};
	jule::Ptr<_201100691_Eval> _220517_eval = nullptr;;
	if (((*(_220037_decl)).get()._field_Kind != nullptr)) {
		_220517_eval=_20108d5c9_evalpd(_self_, _220053_l, (*(_220037_decl)).get()._field_Kind.get()._field_Kind, (*(_220037_decl)));
	} else {
		_220517_eval=_20108d5c9_evalpd(_self_, _220053_l, nullptr, (*(_220037_decl)));
	};
	_220517_eval.get()._field_immutable=(!((*(_220037_decl)).get()._field_Mutable));
	(*(_220037_decl)).get()._field_Value.get()._field_Data=_201121eba_evalExpr(_220517_eval, (*(_220037_decl)).get()._field_Value.get()._field_Expr);
	if (((*(_220037_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_20109ba49_checkVar(_self_, _220037_decl);
}



inline void _20109c044_checkGlobalTypes(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054ad7b4:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> _222121_decl = *it;
			{
				if (((_2010a4ce9_IsInitialized(_222121_decl.ptr()) && (_222121_decl.get()._field_Value.get()._field_Data == nullptr)) || (_2010a505d_IsTypeInferred(_222121_decl.ptr()) && (_222121_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_20109bd68_checkTypeVar(_self_, &(_222121_decl), jule::Trait<_20114e426_Lookup>(_self_, 3));
				};
			}
			_iter_next_2054ad7b4:;
			++it;
			goto _iter_begin_2054ad7b4;
		}
		_iter_end_2054ad7b4:;
	};
}



inline jule::Ptr<_20102330b_FnIns> _20109c3eb_readyToCheckFn(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100d071_StructIns>* _223239_s, jule::Ptr<_20102065a_Fn>* _223259_f) {
	jule::Ptr<_20102330b_FnIns> _223317_ins = _201021caa_instance((*(_223259_f)));;
	if (((*(_223259_f)).get()._field_Instances.len() != 0LL)) {
		return _223317_ins;;
	};
	_223317_ins.get()._field_Owner=(*(_223239_s));
	_201022085_appendInstance((*(_223259_f)).ptr(), &(_223317_ins));
	_223317_ins.get()._field_reloaded=true;
	if (_201091654_reloadFnInsTypes(_self_, _223317_ins)) {
		return _223317_ins;;
	};
	return nullptr;;
}



inline void _20109c71a_checkTypeMethod(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100d071_StructIns>* _224640_s, jule::Ptr<_20102065a_Fn>* _224660_f) {
	if (((*(_224660_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_20102330b_FnIns> _225117_ins = (*(_224660_f)).get()._field_Instances[0LL];;
	if ((_225117_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_20109ede3_checkFnIns(_self_, &(_225117_ins));
}



inline jule::Ptr<_20102330b_FnIns> _20109cb6b_checkStructInsOp(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100d071_StructIns>* _225941_s, jule::Ptr<_20102065a_Fn>* _225961_f, jule::Fn<jule::Bool(jule::Ptr<_20102065a_Fn>)> _225969_p) {
	if (((((*(_225961_f)) == nullptr) || ((*(_225961_f)).get()._field_Generics.len() > 0LL)) || (!(_225969_p((*(_225961_f))))))) {
		return nullptr;;
	};
	return (*(_225961_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _20109d023_checkStructEnv(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100d071_StructIns>* _226939_s, jule::Ptr<_1ed694d8c_Token> _226958_errorToken) {
	jule::Bool __jule_func_result = false;
	_20114243b_typeChecker _227017_tc = _20114243b_typeChecker{._field_s=(*(_226939_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_20114e426_Lookup>((*(_226939_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_20114e426_Lookup>((*(_226939_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_20114155b_referencer>(_20114155b_referencer{._field_ident=(*(_226939_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_226939_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_226939_s)).get()._field_Refers, };;
	if (((*(_226939_s)).get()._field_Generics.len() > 0LL)) {
		_227017_tc._field_useGenerics=jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>::alloc(0LL, (*(_226939_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_226939_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2054b7070:;
			if (it != expr_end) {
				jule::I32 _228318_i = it - expr->begin();
				jule::Ptr<_20112e868_InsGeneric> _228325_g = *it;
				{
					jule::Ptr<_200ee7654_GenericDecl> _228425_decl = (*(_226939_s)).get()._field_Decl.get()._field_Generics[_228318_i];;
					{ jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> &__jule_push_dest = _227017_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_2011303a2_TypeAlias>(_2011303a2_TypeAlias{._field_Token=_228425_decl.get()._field_Token, ._field_Ident=_228425_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=_228325_g.get()._field_Kind}), })); };
				}
				_iter_next_2054b7070:;
				++it;
				_228318_i++;
				goto _iter_begin_2054b7070;
			}
			_iter_end_2054b7070:;
		};
	};
	jule::Ptr<_2010e9118_SymbolTable> _229317_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_201086b33_setCurrentFile(_self_.ptr(), _229317_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_226939_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_2010e9118_SymbolTable> _229721_file = _2010834ae_findFile(&(_self_.get()._field_files), &((*(_226939_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_229721_file != nullptr)) {
			_201086b33_setCurrentFile(_self_.ptr(), _229721_file);
		};
	};
	if (((*(_226939_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_201055a25_constraintChecker> _230421_cc = _20108c254_constraintChecker(_self_);;
		_230421_cc.get()._field_et=_226958_errorToken;
		_230421_cc.get()._field_si=(*(_226939_s));
		_230421_cc.get()._field_genericsA=_227017_tc._field_useGenerics;
		_230421_cc.get()._field_uniq=true;
		if ((!(_2010568b1_check(_230421_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_226939_s)).get()._field_Statics.len() > 0LL)) {
		jule::I32 _231721_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_227017_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_226939_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2054bd5b5:;
			if (it != expr_end) {
				jule::Ptr<_2010a4975_Var> _231925_v = *it;
				{
					_201098194_checkVarDecl(_self_, &(_231925_v), jule::Trait<_20114e426_Lookup>(_self_, 3));
					_20109bd68_checkTypeVar(_self_, &(_231925_v), jule::Trait<_20114e426_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _231721_n) == 0LL) && __jule_func_result);
				}
				_iter_next_2054bd5b5:;
				++it;
				goto _iter_begin_2054bd5b5;
			}
			_iter_end_2054bd5b5:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_227017_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_201100691_Eval> _233017_eval = _20108dc8e_eval(_self_, jule::Trait<_20114e426_Lookup>(_self_, 3));;
	(*(_226939_s)).get()._field_Comparable=(!((*(_226939_s)).get()._field_Decl.get()._field_Binded));
	{
		auto expr = &((*(_226939_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054c1134:;
		if (it != expr_end) {
			jule::Ptr<_20100c57b_FieldIns> _233221_f = *it;
			{
				jule::Ptr<_2011310ea_TypeKind> _233321_kind = _201149388_checkDecl(&_227017_tc, &(_233221_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_233321_kind != nullptr) && __jule_func_result);
				if ((_233321_kind == nullptr)) {
					if (((_self_ != (*(_226939_s)).get()._field_Decl.get()._field_sema) && ((*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						(_self_.get()._field_errors).append((*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors);;
						(*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_2054c1134;
				};
				_233221_f.get()._field_Kind=_233321_kind;
				(*(_226939_s)).get()._field_Mutable=((*(_226939_s)).get()._field_Mutable || ((!(_233221_f.get()._field_Decl.get()._field_Mutable)) && _20113288d_Mutable(_233221_f.get()._field_Kind.ptr())));
				(*(_226939_s)).get()._field_Comparable=((*(_226939_s)).get()._field_Comparable && _201132629_Comparable(_233221_f.get()._field_Kind.ptr()));
				_20109b285_checkStructInsDeriveClone(_self_.ptr(), (*(_226939_s)));
				if ((_233221_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_2054c1134;
				};
				_233017_eval.get()._field_prefix=_233221_f.get()._field_Kind;
				_233017_eval.get()._field_field=_233221_f;
				_233221_f.get()._field_Default=_201121eba_evalExpr(_233017_eval, _233221_f.get()._field_Decl.get()._field_Default);
				if ((_233221_f.get()._field_Default == nullptr)) {
					goto _iter_next_2054c1134;
				};
				;
				_20108e289_checkAssignType(_self_, false, &(_233221_f.get()._field_Kind), &(_233221_f.get()._field_Default), _233221_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_2054c1134:;
			++it;
			goto _iter_begin_2054c1134;
		}
		_iter_end_2054c1134:;
	};
	return __jule_func_result;;
}



inline jule::Bool _20109d3ca_precheckStructIns(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100d071_StructIns>* _236742_s, jule::Ptr<_1ed694d8c_Token> _236761_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_20109d023_checkStructEnv(_self_, _236742_s, _236761_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_236742_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054c7b63:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _237221_f = *it;
			{
				if ((_237221_f.get()._field_Generics.len() == 0LL)) {
					if ((_20109c3eb_readyToCheckFn(_self_, _236742_s, &(_237221_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_2054c7b63:;
			++it;
			goto _iter_begin_2054c7b63;
		}
		_iter_end_2054c7b63:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20109d650_checkStructIns(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100d071_StructIns>* _238239_s) {
	{
		auto expr = &((*(_238239_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054c93a1:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _238321_f = *it;
			{
				_20109c71a_checkTypeMethod(_self_, _238239_s, &(_238321_f));
			}
			_iter_next_2054c93a1:;
			++it;
			goto _iter_begin_2054c93a1;
		}
		_iter_end_2054c93a1:;
	};
}



inline void _20109d8c5_checkTypeStruct(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100a25a_Struct>* _238840_s) {
	if ((*(_238840_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_238840_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_238840_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054ca9ce:;
		if (it != expr_end) {
			jule::Ptr<_20100d071_StructIns> _240121_ins = *it;
			{
				_20109d650_checkStructIns(_self_, &(_240121_ins));
			}
			_iter_next_2054ca9ce:;
			++it;
			goto _iter_begin_2054ca9ce;
		}
		_iter_end_2054ca9ce:;
	};
}



inline void _20109daa1_checkStructTypes(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054cb172:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> _240721_s = *it;
			{
				_20109d8c5_checkTypeStruct(_self_, &(_240721_s));
			}
			_iter_next_2054cb172:;
			++it;
			goto _iter_begin_2054cb172;
		}
		_iter_end_2054cb172:;
	};
}



inline void _20109dd48_checkStructInsOperators(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100d071_StructIns> _241247_s) {
	{
		auto expr = &(_241247_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054cc33d:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _241321_m = *it;
			{
				{
					auto &_match_expr{ _241321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_2054cd097:;
						{
							_241247_s.get()._field_Operators._field_Eq=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a66d0_Eq);
							_241247_s.get()._field_Comparable=(_241247_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_2054cd10d:;
						{
							_241247_s.get()._field_Operators._field_Gt=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a6977_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_2054cd174:;
						{
							_241247_s.get()._field_Operators._field_GtEq=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a6c1e_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_2054cd1eb:;
						{
							_241247_s.get()._field_Operators._field_Lt=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a6eb6_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_2054cd273:;
						{
							_241247_s.get()._field_Operators._field_LtEq=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a725d_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_2054cd2ea:;
						{
							_241247_s.get()._field_Operators._field_Shl=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a7846_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_2054cd372:;
						{
							_241247_s.get()._field_Operators._field_Shr=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a7add_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_2054cd3e9:;
						{
							_241247_s.get()._field_Operators._field_Add=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a7d85_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_2054cd471:;
						{
							_241247_s.get()._field_Operators._field_Sub=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a812c_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_2054cd4e8:;
						{
							_241247_s.get()._field_Operators._field_Div=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a83c4_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_2054cd570:;
						{
							_241247_s.get()._field_Operators._field_Mul=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a866b_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_2054cd5e7:;
						{
							_241247_s.get()._field_Operators._field_Mod=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a8913_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_2054cd66e:;
						{
							_241247_s.get()._field_Operators._field_BitAnd=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a8baa_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_2054cd6e6:;
						{
							_241247_s.get()._field_Operators._field_BitOr=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a8e52_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_2054cd76d:;
						{
							_241247_s.get()._field_Operators._field_BitXor=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a91e9_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_2054cd7e5:;
						{
							_241247_s.get()._field_Operators._field_Neg=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a97d2_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_2054cd86c:;
						{
							_241247_s.get()._field_Operators._field_Pos=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a9a79_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_2054cd8e4:;
						{
							_241247_s.get()._field_Operators._field_BitNot=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010a9d21_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_2054cd96b:;
						{
							_241247_s.get()._field_Operators._field_AddAssign=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010aa409_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_2054cd9e3:;
						{
							_241247_s.get()._field_Operators._field_SubAssign=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010aa6a1_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_2054cda6a:;
						{
							_241247_s.get()._field_Operators._field_DivAssign=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010aa948_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_2054cdae2:;
						{
							_241247_s.get()._field_Operators._field_MulAssign=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010aabe0_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_2054cdb69:;
						{
							_241247_s.get()._field_Operators._field_ModAssign=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010aae87_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_2054cdbe1:;
						{
							_241247_s.get()._field_Operators._field_ShlAssign=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010ab22e_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_2054cdc68:;
						{
							_241247_s.get()._field_Operators._field_ShrAssign=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010ab4c6_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_2054cdce0:;
						{
							_241247_s.get()._field_Operators._field_BitOrAssign=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010ab76d_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_2054cdd67:;
						{
							_241247_s.get()._field_Operators._field_BitAndAssign=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010aba15_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_2054cddde:;
						{
							_241247_s.get()._field_Operators._field_BitXorAssign=_20109cb6b_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__2010abcac_BitXorAssign);
						}
					}
					_match_end_2054ccb79:;
				};
			}
			_iter_next_2054cc33d:;
			++it;
			goto _iter_begin_2054cc33d;
		}
		_iter_end_2054cc33d:;
	};
}



inline void _20109e0ce_precheckStructType(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20100a25a_Struct>* _247643_s) {
	if ((*(_247643_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_247643_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_247643_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_20100d071_StructIns> _248721_ins = _20100a6bc_instance((*(_247643_s)));;
		_248721_ins.get()._field_Checked=true;
		_20100a997_appendInstance((*(_247643_s)).ptr(), &(_248721_ins));
		_20109d3ca_precheckStructIns(_self_, &(_248721_ins), nullptr);
	};
	_20109dd48_checkStructInsOperators(_self_, (*(_247643_s)).get()._field_Instances[0LL]);
}



inline void _20109e2aa_precheckStructTypes(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054deb14:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> _249721_s = *it;
			{
				_20109e0ce_precheckStructType(_self_, &(_249721_s));
			}
			_iter_next_2054deb14:;
			++it;
			goto _iter_begin_2054deb14;
		}
		_iter_end_2054deb14:;
	};
}



inline void _20109e530_checkRets(_201084669_Sema* _self_, jule::Ptr<_20102330b_FnIns>* _250233_f) {
	if (_201020abc_IsVoid((*(_250233_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_2010a171e_missingRetChecker _250613_mrc = static__2010a1ad7_new();;
	jule::Bool _250713_ok = _2010a2ae9_check(&_250613_mrc, (*(_250233_f)).get()._field_Scope);;
	if ((!(_250713_ok))) {
		_201086eeb_pushErr(_self_, (*(_250233_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _20109e84e_checkFnInsSc(_201084669_Sema* _self_, jule::Ptr<_20102330b_FnIns>* _251336_f, jule::Ptr<_20106455b_scopeChecker>* _251352_sc) {
	_201082ac9_appendRetVars(&((*(_251352_sc)).get()._field_table.get()._field_Vars), _251336_f);
	_201082d82_appendParamVars(&((*(_251352_sc)).get()._field_table.get()._field_Vars), _251336_f);
	_20108315c_appendGenericTypeAliases(&((*(_251352_sc)).get()._field_table.get()._field_TypeAliases), _251336_f);
	_2010744a0_check((*(_251352_sc)), &((*(_251336_f)).get()._field_Decl.get()._field_Scope), &((*(_251336_f)).get()._field_Scope));
	if ((!(_201066daa_stopped((*(_251352_sc)).ptr())))) {
		_20109e530_checkRets(_self_, _251336_f);
	};
}



inline void _20109eb6d_checkFnInsCaller(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102330b_FnIns>* _252641_f, jule::Ptr<_1ed694d8c_Token> _252656_caller) {
	if ((*(_252641_f)).get()._field_Decl.get()._field_Binded) {
		return;;
	};
	jule::Ptr<_2010e9118_SymbolTable> _253117_old = (*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_201086b33_setCurrentFile((*(_252641_f)).get()._field_Decl.get()._field_sema.ptr(), _253117_old);
	});;
	jule::Ptr<_2010e9118_SymbolTable> _253317_file = _2010834ae_findFile(&((*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_252641_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_253317_file != nullptr)) {
		_201086b33_setCurrentFile((*(_252641_f)).get()._field_Decl.get()._field_sema.ptr(), _253317_file);
	};
	jule::Ptr<_20106455b_scopeChecker> _253817_sc = _201059ce3_newScopeChecker(&((*(_252641_f)).get()._field_Decl.get()._field_sema), (*(_252641_f)));;
	_253817_sc.get()._field_calledFrom=_252656_caller;
	_20109e84e_checkFnInsSc(_self_.ptr(), _252641_f, &(_253817_sc));
	if (((*(_252641_f)).get()._field_Decl.get()._field_sema != _self_)) {
		(_self_.get()._field_errors).append((*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_errors);;
		(*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _20109ede3_checkFnIns(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102330b_FnIns>* _254835_f) {
	_20109eb6d_checkFnInsCaller(_self_, _254835_f, nullptr);
}



inline void _2010a0168_checkTypeFn(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102065a_Fn>* _255236_f) {
	if ((*(_255236_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_255236_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_255236_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2054e9789:;
		if (it != expr_end) {
			jule::Ptr<_20102330b_FnIns> _256221_ins = *it;
			{
				_20109ede3_checkFnIns(_self_, &(_256221_ins));
			}
			_iter_next_2054e9789:;
			++it;
			goto _iter_begin_2054e9789;
		}
		_iter_end_2054e9789:;
	};
}



inline void _2010a03dd_checkTestFn(_201084669_Sema* _self_, jule::Ptr<_20102330b_FnIns>* _256735_f) {
	if ((*(_256735_f)).get()._field_Decl.get()._field_Public) {
		_201086eeb_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_20108731a_pushSuggestion(_self_, jule::Str("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_256735_f)).get()._field_Decl.get()._field_Unsafety || (!(_201020abc_IsVoid((*(_256735_f)).get()._field_Decl.ptr())))) || ((*(_256735_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_256735_f)).get()._field_Params.len() != 1LL)) || (*(_256735_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_256735_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_201086eeb_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_20108731a_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20113c0a1_Sptr> _258517_sptr = _201133a7b_Sptr((*(_256735_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_258517_sptr == nullptr)) {
		_201086eeb_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_20108731a_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_20100d071_StructIns> _259213_s = _201134c69_Struct(_258517_sptr.get()._field_Elem.ptr());;
	if (((_259213_s == nullptr) || (!(_20108128c_isStdPackage(_259213_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_201086eeb_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_20108731a_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _2010a0663_precheckTypeFn(jule::Ptr<_201084669_Sema> _self_, jule::Ptr<_20102065a_Fn>* _260039_f) {
	if ((*(_260039_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_260039_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_260039_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_20102330b_FnIns> _261121_ins = _201021a46_instanceForce((*(_260039_f)));;
		{ jule::Slice<jule::Ptr<_20102330b_FnIns>> &__jule_push_dest = (*(_260039_f)).get()._field_Instances; __jule_push_dest.push(_261121_ins); };
		jule::Bool _261317_ok = _201091654_reloadFnInsTypes(_self_, _261121_ins);;
		_261121_ins.get()._field_reloaded=true;
		if ((_261317_ok && _20114a840_hasDirective(&((*(_260039_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_2010a03dd_checkTestFn(_self_.ptr(), &(_261121_ins));
		};
	};
}



inline void _2010a083e_precheckFnTypes(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2055044ca:;
		if (it != expr_end) {
			jule::Ptr<_20103287b_Trait> _262421_decl = *it;
			{
				{
					auto expr = &(_262421_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205504d38:;
					if (it != expr_end) {
						jule::Ptr<_20102065a_Fn> _262525_m = *it;
						{
							_2010a0663_precheckTypeFn(_self_, &(_262525_m));
						}
						_iter_next_205504d38:;
						++it;
						goto _iter_begin_205504d38;
					}
					_iter_end_205504d38:;
				};
			}
			_iter_next_2055044ca:;
			++it;
			goto _iter_begin_2055044ca;
		}
		_iter_end_2055044ca:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205504970:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _262921_decl = *it;
			{
				_2010a0663_precheckTypeFn(_self_, &(_262921_decl));
			}
			_iter_next_205504970:;
			++it;
			goto _iter_begin_205504970;
		}
		_iter_end_205504970:;
	};
}



inline void _2010a0a1a_checkFnTypes(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205505b80:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _263621_decl = *it;
			{
				_2010a0168_checkTypeFn(_self_, &(_263621_decl));
			}
			_iter_next_205505b80:;
			++it;
			goto _iter_begin_205505b80;
		}
		_iter_end_205505b80:;
	};
}



inline void _2010a0be6_checkPackageTypes(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205506ce6:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _264421_f = *it;
			{
				_201086b33_setCurrentFile(_self_.ptr(), _264421_f);
				_20109c044_checkGlobalTypes(_self_);
				_2010a083e_precheckFnTypes(_self_);
				_20109e2aa_precheckStructTypes(_self_);
			}
			_iter_next_205506ce6:;
			++it;
			goto _iter_begin_205506ce6;
		}
		_iter_end_205506ce6:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20550808e:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _265521_f = *it;
			{
				_201086b33_setCurrentFile(_self_.ptr(), _265521_f);
				_2010a0a1a_checkFnTypes(_self_);
				_20109daa1_checkStructTypes(_self_);
			}
			_iter_next_20550808e:;
			++it;
			goto _iter_begin_20550808e;
		}
		_iter_end_20550808e:;
	};
}



inline void _2010a0dc2_setFileSemaFields(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20550918e:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _266321_f = *it;
			{
				_266321_f.get()._field_sema=_self_;
			}
			_iter_next_20550918e:;
			++it;
			goto _iter_begin_20550918e;
		}
		_iter_end_20550918e:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2055094be:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> _266621_st = *it;
			{
				_266621_st.get()._field_sema=_self_;
			}
			_iter_next_2055094be:;
			++it;
			goto _iter_begin_2055094be;
		}
		_iter_end_2055094be:;
	};
}



inline void _2010a109d_setSemaFields(jule::Ptr<_201084669_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20550a008:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _267221_file = *it;
			{
				_201086b33_setCurrentFile(_self_.ptr(), _267221_file);
				_2010a0dc2_setFileSemaFields(_self_);
			}
			_iter_next_20550a008:;
			++it;
			goto _iter_begin_20550a008;
		}
		_iter_end_20550a008:;
	};
}



inline void _2010a1323_check(jule::Ptr<_201084669_Sema> _self_, jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>* _267830_files) {
	_self_.get()._field_files=(*(_267830_files));
	_20108a65e_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_2010a109d_setSemaFields(_self_);
	_20108b099_checkInherits(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_20108aa16_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_20108abe2_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_20109b472_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_2010a0be6_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _201084669_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _2010a171e_missingRetChecker static__2010a1ad7_new(void) {
	return _2010a171e_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _2010a1db2_checkConditional(_2010a171e_missingRetChecker* _self_, jule::Ptr<_20105d489_Conditional> _272635_c) {
	{
		auto expr = &(_272635_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20550e6d3:;
		if (it != expr_end) {
			jule::Ptr<_20105cd29_If> _272721_elif = *it;
			{
				if ((_272721_elif == nullptr)) {
					return false;;
				};
				if ((!(_2010a27db_checkScope(_self_, _272721_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_20550e6d3:;
			++it;
			goto _iter_begin_20550e6d3;
		}
		_iter_end_20550e6d3:;
	};
	return ((_272635_c.get()._field_Default != nullptr) && _2010a27db_checkScope(_self_, _272635_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _2010a21c0_checkMatch(_2010a171e_missingRetChecker* _self_, jule::Ptr<_201061745_Match> _273829_m) {
	{
		auto expr = &(_273829_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205511372:;
		if (it != expr_end) {
			jule::Ptr<_201062290_Case> _273921_c = *it;
			{
				if ((_273921_c == nullptr)) {
					return false;;
				};
				jule::I32 _274317_n = (*(_self_))._field_breaked.len();;
				jule::Bool _274417_ok = _2010a27db_checkScope(_self_, _273921_c.get()._field_Scope);;
				{
					
					if ((_274317_n != (*(_self_))._field_breaked.len())) {
						_case_begin_205512d79:;
						{
							return false;;
						}
					}
					else if ((!(_274417_ok))) {
						_case_begin_205512de0:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_205512e56;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_205512e56:;
						{
							(*(_self_))._field_falled=false;
							if ((_273921_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_205511372;
						}
					}
					_match_end_205512351:;
				};
			}
			_iter_next_205511372:;
			++it;
			goto _iter_begin_205511372;
		}
		_iter_end_205511372:;
	};
	return ((_273829_m.get()._field_Default != nullptr) && _2010a27db_checkScope(_self_, _273829_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _2010a24cd_checkInfIter(_2010a171e_missingRetChecker* _self_, jule::Ptr<_20105d775_InfIter> _276431_it) {
	jule::I32 _276513_n = (*(_self_))._field_breaked.len();;
	if (_2010a27db_checkScope(_self_, _276431_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
		return true;;
	};
	if ((_276513_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _277117_itaddr = static_cast<jule::Uintptr>(_276431_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_276513_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_20551661e:;
			if (it != expr_end) {
				jule::Uintptr _277220_addr = *it;
				{
					if ((_277117_itaddr == _277220_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
						return false;;
					};
				}
				_iter_next_20551661e:;
				++it;
				goto _iter_begin_20551661e;
			}
			_iter_end_20551661e:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
	};
	return true;;
}



inline jule::Bool _2010a27db_checkScope(_2010a171e_missingRetChecker* _self_, jule::Ptr<_20105c92d_Scope> _278329_s) {
	if ((_278329_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_278329_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205517c2a:;
		if (it != expr_end) {
			jule::Any _278721_st = *it;
			{
				{
					auto &_match_expr{ _278721_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_205518a0b:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_205518ac7:;
						{
							jule::Uintptr _279321_addr = _278721_st.cast_ptr<_20105ed81_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_279321_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_279321_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_205518b3d:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_205518ba4:;
						{
							if (_2010a24cd_checkInfIter(_self_, _278721_st.cast_ptr<_20105d775_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_205518c1a:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_205518c81:;
						{
							if (_2010a27db_checkScope(_self_, _278721_st.cast_ptr<_20105c92d_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_205518d08:;
						{
							{
								auto &_match_expr{ _278721_st.cast_ptr<_2010edb23_Data>(&__jule_any_type24).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_20551c68b:;
									{
										return true;;
									}
								}
								_match_end_20551c3c2:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_205518d80:;
						{
							if (_2010a1db2_checkConditional(_self_, _278721_st.cast_ptr<_20105d489_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_205518e07:;
						{
							if (_2010a21c0_checkMatch(_self_, _278721_st.cast_ptr<_201061745_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_2055188c9:;
				};
			}
			_iter_next_205517c2a:;
			++it;
			goto _iter_begin_205517c2a;
		}
		_iter_end_205517c2a:;
	};
	return false;;
}



inline jule::Bool _2010a2ae9_check(_2010a171e_missingRetChecker* _self_, jule::Ptr<_20105c92d_Scope> _282924_s) {
	return _2010a27db_checkScope(_self_, _282924_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _2010a171e_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2010a3930_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2010a4ce9_IsInitialized(_2010a4975_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _2010a505d_IsTypeInferred(_2010a4975_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _2010a52c2_untypedConstant(_2010a4975_Var* _self_) {
	return (_2010a505d_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _2010a4975_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__2010a5d50_Dispose(jule::Ptr<_20102065a_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _201020abc_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_20101e66a_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__2010a60e7_Str(jule::Ptr<_20102065a_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _201020abc_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _20101e66a_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_20102330b_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_201138850_Prim> _3913_prim = _201133817_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _20113ba51_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__2010a6438_logical(jule::Ptr<_20102065a_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _201020abc_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _20101e66a_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_20102330b_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_201138850_Prim> _6413_prim = _201133817_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_20113b7dc_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _201134c69_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__2010a66d0_Eq(jule::Ptr<_20102065a_Fn> _7218_f) {
	return static__2010a6438_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__2010a6977_Gt(jule::Ptr<_20102065a_Fn> _7718_f) {
	return static__2010a6438_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__2010a6c1e_GtEq(jule::Ptr<_20102065a_Fn> _8220_f) {
	return static__2010a6438_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__2010a6eb6_Lt(jule::Ptr<_20102065a_Fn> _8718_f) {
	return static__2010a6438_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__2010a725d_LtEq(jule::Ptr<_20102065a_Fn> _9220_f) {
	return static__2010a6438_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__2010a759e_result(jule::Ptr<_20102065a_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _201020abc_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _20101e66a_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_20102330b_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_201134c69_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__2010a7846_Shl(jule::Ptr<_20102065a_Fn> _11819_f) {
	return static__2010a759e_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__2010a7add_Shr(jule::Ptr<_20102065a_Fn> _12319_f) {
	return static__2010a759e_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__2010a7d85_Add(jule::Ptr<_20102065a_Fn> _12819_f) {
	return static__2010a759e_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__2010a812c_Sub(jule::Ptr<_20102065a_Fn> _13319_f) {
	return static__2010a759e_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__2010a83c4_Div(jule::Ptr<_20102065a_Fn> _13819_f) {
	return static__2010a759e_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__2010a866b_Mul(jule::Ptr<_20102065a_Fn> _14319_f) {
	return static__2010a759e_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__2010a8913_Mod(jule::Ptr<_20102065a_Fn> _14819_f) {
	return static__2010a759e_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__2010a8baa_BitAnd(jule::Ptr<_20102065a_Fn> _15322_f) {
	return static__2010a759e_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__2010a8e52_BitOr(jule::Ptr<_20102065a_Fn> _15821_f) {
	return static__2010a759e_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__2010a91e9_BitXor(jule::Ptr<_20102065a_Fn> _16322_f) {
	return static__2010a759e_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__2010a953a_unary(jule::Ptr<_20102065a_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _201020abc_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _20101e66a_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_20102330b_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_201134c69_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__2010a97d2_Neg(jule::Ptr<_20102065a_Fn> _18719_f) {
	return static__2010a953a_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__2010a9a79_Pos(jule::Ptr<_20102065a_Fn> _19219_f) {
	return static__2010a953a_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__2010a9d21_BitNot(jule::Ptr<_20102065a_Fn> _19722_f) {
	return static__2010a953a_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__2010aa162_assign(jule::Ptr<_20102065a_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_201020abc_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _20101e66a_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__2010aa409_AddAssign(jule::Ptr<_20102065a_Fn> _22125_f) {
	return static__2010aa162_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__2010aa6a1_SubAssign(jule::Ptr<_20102065a_Fn> _22625_f) {
	return static__2010aa162_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__2010aa948_DivAssign(jule::Ptr<_20102065a_Fn> _23125_f) {
	return static__2010aa162_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__2010aabe0_MulAssign(jule::Ptr<_20102065a_Fn> _23625_f) {
	return static__2010aa162_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__2010aae87_ModAssign(jule::Ptr<_20102065a_Fn> _24125_f) {
	return static__2010aa162_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__2010ab22e_ShlAssign(jule::Ptr<_20102065a_Fn> _24625_f) {
	return static__2010aa162_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__2010ab4c6_ShrAssign(jule::Ptr<_20102065a_Fn> _25125_f) {
	return static__2010aa162_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__2010ab76d_BitOrAssign(jule::Ptr<_20102065a_Fn> _25627_f) {
	return static__2010aa162_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__2010aba15_BitAndAssign(jule::Ptr<_20102065a_Fn> _26128_f) {
	return static__2010aa162_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__2010abcac_BitXorAssign(jule::Ptr<_20102065a_Fn> _26628_f) {
	return static__2010aa162_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _2010a5723_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _2010d7a63_pushErr(_2010d758a_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _2010d7cc7_checkTrait(_2010d758a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_201132151_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_20103287b_Trait> _12517_trt = _201134ecd_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_201133a7b_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_2055511b4:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_201133a7b_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_201134c69_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_20555123b;
			}
		}
		else if ((_201134c69_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_20555123b:;
			{
				jule::Ptr<_20100d071_StructIns> _13617_s = _201134c69_Struct((*(_self_))._field_src.ptr());;
				if ((!(_20100b778_IsImplements(_13617_s.get()._field_Decl.ptr(), _12517_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _2010d6325_traitHasReferenceReceiver(&(_12517_trt)))) {
					_2010d7a63_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_201134ecd_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_2055512b3:;
			{
				jule::Ptr<_20103287b_Trait> _14621_base = _201134ecd_Trait((*(_self_))._field_src.ptr());;
				if ((_12517_trt == _14621_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_lookup:;
				{
					auto expr = &(_14621_base.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205555509:;
					if (it != expr_end) {
						jule::Ptr<_20100a25a_Struct> _15120_s1 = *it;
						{
							{
								auto expr = &(_12517_trt.get()._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_205556153:;
								if (it != expr_end) {
									jule::Ptr<_20100a25a_Struct> _15224_s2 = *it;
									{
										if ((_15120_s1 == _15224_s2)) {
											goto _iter_next_205555509;
										};
									}
									_iter_next_205556153:;
									++it;
									goto _iter_begin_205556153;
								}
								_iter_end_205556153:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_205555509:;
						++it;
						goto _iter_begin_205555509;
					}
					_iter_end_205555509:;
				};
				{
					auto expr = &(_12517_trt.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205556bd1:;
					if (it != expr_end) {
						jule::Ptr<_20102065a_Fn> _15925_m1 = *it;
						{
							jule::Ptr<_20102065a_Fn> _16025_m2 = _201033728_FindMethod(_14621_base.ptr(), _15925_m1.get()._field_Ident);;
							if ((_16025_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_20102330b_FnIns> _16421_m1k = _201090367_getTraitCheckFnKind((*(_self_))._field_s, &(_15925_m1));;
							jule::Ptr<_20102330b_FnIns> _16521_m2k = _201090367_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m2));;
							if ((!(_2010241b9_equalTrait(_16421_m1k, &(_16521_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_205556bd1:;
						++it;
						goto _iter_begin_205556bd1;
					}
					_iter_end_205556bd1:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_20555114d:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_2055510e8:;
	};
}



inline jule::Bool _2010d803b_checkPtr(_2010d758a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_201132151_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_201140615_Ptr> _18017_dest = _201133ce0_Ptr((*(_self_))._field_dest.ptr());;
	if (_2011410d8_IsUnsafe(_18017_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _2011317b0_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _2010d82a0_checkPrim(_2010d758a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_201138850_Prim> _18917_prim = _201133817_Prim((*(_self_))._field_dest.ptr());;
		if (((_18917_prim != nullptr) && _20113bcb5_IsAny(_18917_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _2011317b0_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _2010d8657_typeEnum(_2010d758a_typeCompatibilityChecker* _self_, jule::Ptr<_201036709_TypeEnum>* _19728_e, jule::Ptr<_2011310ea_TypeKind>* _19747_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_19728_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20555c522:;
		if (it != expr_end) {
			jule::Ptr<_201036176_TypeEnumItem> _19821_item = *it;
			{
				if (_2011317b0_Equal(_19821_item.get()._field_Kind.get()._field_Kind, (*(_19747_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_201036709_TypeEnum> _20221_ke = _2011342b8_TypeEnum(_19821_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_20221_ke == nullptr)) {
					goto _iter_next_20555c522;
				};
				if (_2010d8657_typeEnum(_self_, &(_20221_ke), _19747_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_20555c522:;
			++it;
			goto _iter_begin_20555c522;
		}
		_iter_end_20555c522:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _2010d88bb_checkTypeEnum(_2010d758a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_2011317b0_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_201036709_TypeEnum> _21717_e = _2011342b8_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _2010d8657_typeEnum(_self_, &(_21717_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _2010d8b30_check(_2010d758a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_201133ce0_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _2010d803b_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_201132d66_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_201132151_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_201133817_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_205562060:;
			{
				__jule_func_result = _2010d82a0_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_2011342b8_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_20556244a:;
			{
				__jule_func_result = _2010d88bb_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_201134ecd_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_2055624b1:;
			{
				__jule_func_result = _2010d7cc7_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_2055612d4:;
			{
				__jule_func_result = _2011317b0_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_20556113b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2010d758a_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _2010d9625_pushErr(_2010d91b3_assignTypeChecker* _self_, jule::Str _25326_fmt, jule::Slice<jule::Any> _25339_args) {
	_201086eeb_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25326_fmt, _25339_args);
}



inline jule::Bool _2010d9889_checkValidity(_2010d91b3_assignTypeChecker* _self_) {
	jule::Bool _25817_valid = true;;
	{
		
		if ((_201134a05_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205564b67:;
			{
				jule::Ptr<_20102330b_FnIns> _26117_f = _201134a05_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_201024692_IsBuiltin(_26117_f.ptr())) {
						_case_begin_205566097:;
						{
							_2010d9625_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (_26117_f.get()._field_Decl.get()._field_Binded) {
						_case_begin_20556611e:;
						{
							_2010d9625_pushErr(_self_, jule::Str("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((!(_26117_f.get()._field_Decl.get()._field_Statically)) && _201020d31_IsMethod(_26117_f.get()._field_Decl.ptr()))) {
						_case_begin_205566196:;
						{
							_2010d9625_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((_26117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_26117_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_20556621d:;
						{
							_2010d9625_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_20108731a_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					_match_end_205565eba:;
				};
			}
		}
		else if ((_2011354a6_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205564bde:;
			{
				_2010d9625_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25817_valid=false;
			}
		}
		_match_end_205564aac:;
	};
	return _25817_valid;;
}



inline jule::Bool _2010d9aed_checkConst(_2010d91b3_assignTypeChecker* _self_) {
	if (((((!(_2010ee492_IsConst((*(_self_))._field_d.ptr()))) || (_201133817_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_201133817_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1ee33c292_IsNum(_201133817_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _29813_kind = _201133817_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1ee33beea_IsFloat(_29813_kind)) {
			_case_begin_20556c2ce:;
			{
				if ((!(_2010d65bc_floatAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_2010d9625_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else if (_1ee33bbcb_IsInt(_29813_kind)) {
			_case_begin_20556c345:;
			{
				if ((!(_2010d70d4_intAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_2010d9625_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else {
			_case_begin_20556c268:;
			{
				return false;;
			}
		}
		_match_end_20556c213:;
	};
	return true;;
}



inline jule::Bool _2010d9d62_isPrim(_2010d91b3_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_201131ddc_Binded((*(_self_))._field_dest.ptr()) || _201131ddc_Binded((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_201133817_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_201133817_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _2010da0c6_checkCompatibility(_2010d91b3_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_205571668:;
			{
				return false;;
			}
		}
		else if ((!(_2010d9889_checkValidity(_self_)))) {
			_case_begin_2055716e0:;
			{
				return false;;
			}
		}
		else if (_2010d9aed_checkConst(_self_)) {
			_case_begin_205571767:;
			{
				return true;;
			}
		}
		else if ((_201134054_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2055717de:;
			{
				jule::Ptr<_2011310ea_TypeKind> _34221_dkind = (*(_self_))._field_dest;;
				if ((_201134054_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34221_dkind=_201134054_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_201133817_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_205571547;
				};
				if (_1ee338a0d_TypesAreCompatible(_201133817_Prim(_201134054_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _201133817_Prim(_34221_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_2010d9d62_isPrim(_self_)) {
			_case_begin_205571866:;
			{
				jule::Ptr<_201138850_Prim> _35217_dest = _201133817_Prim((*(_self_))._field_dest.ptr());;
				if (_20113bcb5_IsAny(_35217_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_201138850_Prim> _35621_src = _201133817_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1ee338a0d_TypesAreCompatible(_35217_dest.get()._field_Kind, _35621_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_205571547:;
	};
	return _20108e6da_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _2010da33a_check(_2010d91b3_assignTypeChecker* _self_) {
	jule::Bool _36513_ok = _2010da0c6_checkCompatibility(_self_);;
	if ((_36513_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_20114c0e4_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36513_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _2010d91b3_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _205588a26_annotateConstraintElem(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_20558a0cc:;
			{
				jule::Ptr<_2011310ea_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_20558ade1:;
						{
							_38821_elem=_20113452c_Arr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_20558a95c:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_200edc869_ArrTypeDecl>(&__jule_any_type75).get()._field_Elem;
				return _2010dc2a4_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_20558a022:;
	};
	return false;;
}

inline jule::Bool _205588d56_annotateConstraintElem(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_20558d498:;
			{
				jule::Ptr<_2011310ea_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_20558e345:;
						{
							_38821_elem=_201134791_Slc((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_20558dd28:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_200edbabb_SlcTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _2010dc2a4_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_20558d3dd:;
	};
	return false;;
}

inline jule::Bool _20558833e_annotateConstraintElem(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_205591864:;
			{
				jule::Ptr<_2011310ea_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_205592777:;
						{
							_38821_elem=_201133ce0_Ptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_2055921e4:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_200edc193_PtrTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _2010dc2a4_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_2055917a9:;
	};
	return false;;
}

inline jule::Bool _20559139c_annotateConstraintElem(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_205594911:;
			{
				jule::Ptr<_2011310ea_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_20559589b:;
						{
							_38821_elem=_201133a7b_Sptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_205595291:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_200edb6c0_SptrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _2010dc2a4_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_205594856:;
	};
	return false;;
}



inline jule::Bool _2010db539_annotateConstraintMap(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _40545_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_205578dac:;
			{
				jule::Ptr<_20113e0b4_Map> _40821_m = _201135242_Map((*(_40545_k)).ptr());;
				jule::Ptr<_200edd073_MapTypeDecl> _40921_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_200edd073_MapTypeDecl>(&__jule_any_type79);;
				(*(_self_))._field_c=_40921_m2.get()._field_Key;
				if ((!(_2010dc2a4_annotateConstraint(_self_, &(_40821_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_40921_m2.get()._field_Val;
				__jule_func_result = _2010dc2a4_annotateConstraint(_self_, &(_40821_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_205578d35:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _2010db847_annotateConstraintTup(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _42045_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_20557b530:;
			{
				jule::Ptr<_200edbda7_TupleTypeDecl> _42321_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_200edbda7_TupleTypeDecl>(&__jule_any_type80);;
				jule::Ptr<_20113d613_Tuple> _42421_tup2 = _2011354a6_Tup((*(_42045_k)).ptr());;
				{
					auto expr = &(_42421_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20557c91b:;
					if (it != expr_end) {
						jule::Ptr<_2011310ea_TypeKind> _42525_t2 = *it;
						{
							{
								auto expr = &(_42321_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_20557d1d0:;
								if (it != expr_end) {
									jule::Ptr<_200eda6ad_TypeDecl> _42629_t = *it;
									{
										(*(_self_))._field_c=_42629_t;
										if (_2010dc2a4_annotateConstraint(_self_, &(_42525_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_20557d1d0:;
									++it;
									goto _iter_begin_20557d1d0;
								}
								_iter_end_20557d1d0:;
							};
						}
						_iter_next_20557c91b:;
						++it;
						goto _iter_begin_20557c91b;
					}
					_iter_end_20557c91b:;
				};
			}
		}
		_match_end_205579341:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _2010dbb55_annotateConstraintFn(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _43744_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_20557ce9e:;
			{
				jule::Ptr<_200eebcda_FnDecl> _44021_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_200eebcda_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_20102330b_FnIns> _44121_f = _201134a05_Fn((*(_43744_k)).ptr());;
				{
					auto expr = &(_44121_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205580303:;
					if (it != expr_end) {
						jule::I32 _44218_i = it - expr->begin();
						jule::Ptr<_20102243c_ParamIns> _44225_fp = *it;
						{
							(*(_self_))._field_c=_44021_pf.get()._field_Params[_44218_i].get()._field_Kind;
							if (_2010dc2a4_annotateConstraint(_self_, &(_44225_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_205580303:;
						++it;
						_44218_i++;
						goto _iter_begin_205580303;
					}
					_iter_end_205580303:;
				};
				if ((_44021_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_44021_pf.get()._field_Result.get()._field_Kind;
					if (_2010dc2a4_annotateConstraint(_self_, &(_44121_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_20557ce49:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _2010dbe85_annotateConstraintIdent(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _45847_k) {
	jule::Ptr<_200edac74_IdentTypeDecl> _45917_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_200edac74_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_20100d071_StructIns> _46017_s = _201134c69_Struct((*(_45847_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205582db6:;
		if (it != expr_end) {
			jule::I32 _46113_i = it - expr->begin();
			jule::Ptr<_200ee7654_GenericDecl> _46116_g = *it;
			{
				if ((_46116_g.get()._field_Ident == _45917_ident.get()._field_Ident)) {
					jule::Ptr<_20112e868_InsGeneric> _46325_fg = (*(_self_))._field_f.get()._field_Generics[_46113_i];;
					if ((_46325_fg != nullptr)) {
						return false;;
					};
					_2010dc5c3_pushGeneric(_self_, _45847_k, _46113_i);
					return true;;
				};
				if ((_46017_s == nullptr)) {
					goto _iter_next_205582db6;
				};
				jule::Ptr<_200eda6ad_TypeDecl> _47321_c = (*(_self_))._field_c;;
				{
					auto expr = &(_45917_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2055855e4:;
					if (it != expr_end) {
						jule::Ptr<_200eda6ad_TypeDecl> _47425_ig = *it;
						{
							(*(_self_))._field_c=_47425_ig;
							{
								auto expr = &(_46017_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_20558635e:;
								if (it != expr_end) {
									jule::Ptr<_20112e868_InsGeneric> _47629_sg = *it;
									{
										if (_2010dc2a4_annotateConstraint(_self_, &(_47629_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_20558635e:;
									++it;
									goto _iter_begin_20558635e;
								}
								_iter_end_20558635e:;
							};
						}
						_iter_next_2055855e4:;
						++it;
						goto _iter_begin_2055855e4;
					}
					_iter_end_2055855e4:;
				};
				(*(_self_))._field_c=_47321_c;
			}
			_iter_next_205582db6:;
			++it;
			_46113_i++;
			goto _iter_begin_205582db6;
		}
		_iter_end_205582db6:;
	};
	return false;;
}



inline jule::Bool _2010dc2a4_annotateConstraint(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _48742_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_205585c98:;
			{
				return _2010dbe85_annotateConstraintIdent(_self_, _48742_k);;
			}
		}
		_match_end_205585c43:;
	};
	{
		
		if ((_20113452c_Arr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_205587cbc:;
			{
				return _205588a26_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_201134791_Slc((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_2055876d4:;
			{
				return _205588d56_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_201133ce0_Ptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_20558774a:;
			{
				return _20558833e_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_201133a7b_Sptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_20558733d:;
			{
				return _20559139c_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_201135242_Map((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_2055873a4:;
			{
				return _2010db539_annotateConstraintMap(_self_, _48742_k);;
			}
		}
		else if ((_201134a05_Fn((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_20558741a:;
			{
				return _2010dbb55_annotateConstraintFn(_self_, _48742_k);;
			}
		}
		else if ((_2011354a6_Tup((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_205587481:;
			{
				return _2010db847_annotateConstraintTup(_self_, _48742_k);;
			}
		}
		else {
			_case_begin_205585e1e:;
			{
				return false;;
			}
		}
		_match_end_205585da8:;
	};
}



inline void _2010dc5c3_pushGeneric(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _51235_k, jule::I32 _51249_i) {
	(*(_self_))._field_f.get()._field_Generics[_51249_i]=jule::new_ptr<_20112e868_InsGeneric>(_20112e868_InsGeneric{._field_Kind=(*(_51235_k)), });
	jule::Ptr<_200ee7654_GenericDecl> _51417_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_51249_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205598063:;
		if (it != expr_end) {
			jule::Ptr<_2011310ea_TypeKind> _51521_ignored = *it;
			{
				if ((_51417_gd.get()._field_Ident == _2011314a2_Str(_51521_ignored.ptr()))) {
					_51521_ignored.get()._field_Kind=(*(_51235_k)).get()._field_Kind;
				};
			}
			_iter_next_205598063:;
			++it;
			goto _iter_begin_205598063;
		}
		_iter_end_205598063:;
	};
	if (((_51417_gd.get()._field_Constraint == nullptr) || (_51417_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_51417_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_2010dc2a4_annotateConstraint(_self_, _51235_k);
}



inline jule::Bool _2010dc8d1_annotatePrim(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _52743_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _2010de707_annotateAny(_self_, _52743_k);
	return __jule_func_result;;
}



inline jule::Bool _2010dcbde_annotateArr(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20113eba8_Arr> _53217_parr = _20113452c_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53217_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20113eba8_Arr> _53617_arr = _20113452c_Arr((*(_53142_k)).ptr());;
	(*(_self_))._field_k=(&(_53217_parr.get()._field_Elem));
	__jule_func_result = _2010dea15_annotateKind(_self_, &(_53617_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _2010dceec_annotateSlc(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _54142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20113ca0d_Slc> _54217_pslc = _201134791_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54217_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20113ca0d_Slc> _54617_slc = _201134791_Slc((*(_54142_k)).ptr());;
	(*(_self_))._field_k=(&(_54217_pslc.get()._field_Elem));
	__jule_func_result = _2010dea15_annotateKind(_self_, &(_54617_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _2010dd3a4_checkMapKey(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _55141_k, jule::Ptr<_2011310ea_TypeKind>* _55161_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2011310ea_TypeKind>* _55217_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55141_k;
	__jule_func_result=_2010dea15_annotateKind(_self_, _55161_ck);
	(*(_self_))._field_k=_55217_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _2010dd6b2_annotateMap(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _55942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20113e0b4_Map> _56017_pmap = _201135242_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56017_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20113e0b4_Map> _56417_m = _201135242_Map((*(_55942_k)).ptr());;
	__jule_func_result = (_2010dd3a4_checkMapKey(_self_, (&(_56017_pmap.get()._field_Key)), &(_56417_m.get()._field_Key)) && _2010dd3a4_checkMapKey(_self_, (&(_56017_pmap.get()._field_Val)), &(_56417_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _2010dd9c0_annotateFn(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _56941_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20102330b_FnIns> _57017_pf = _201134a05_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57017_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20102330b_FnIns> _57417_f = _201134a05_Fn((*(_56941_k)).ptr());;
	{
		
		if ((_57017_pf.get()._field_Params.len() != _57417_f.get()._field_Params.len())) {
			_case_begin_2055a3d3d:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_201020abc_IsVoid(_57017_pf.get()._field_Decl.ptr()) != _201020abc_IsVoid(_57417_f.get()._field_Decl.ptr()))) {
			_case_begin_2055a3da4:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_2055a3cd8:;
	};
	__jule_func_result=true;
	jule::Ptr<_2011310ea_TypeKind>* _58317_old = (*(_self_))._field_k;;
	{
		auto expr = &(_57417_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2055a538e:;
		if (it != expr_end) {
			jule::I32 _58414_i = it - expr->begin();
			jule::Ptr<_20102243c_ParamIns> _58421_fp = *it;
			{
				(*(_self_))._field_k=(&(_57017_pf.get()._field_Params[_58414_i].get()._field_Kind));
				__jule_func_result=(_2010dea15_annotateKind(_self_, &(_58421_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_2055a538e:;
			++it;
			_58414_i++;
			goto _iter_begin_2055a538e;
		}
		_iter_end_2055a538e:;
	};
	if ((!(_201020abc_IsVoid(_57017_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_57017_pf.get()._field_Result));
		__jule_func_result=(_2010dea15_annotateKind(_self_, &(_57417_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _2010ddccd_annotatePtr(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _59842_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_201140615_Ptr> _59917_pptr = _201133ce0_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_59917_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_201140615_Ptr> _60317_ptr = _201133ce0_Ptr((*(_59842_k)).ptr());;
	(*(_self_))._field_k=(&(_59917_pptr.get()._field_Elem));
	__jule_func_result = _2010dea15_annotateKind(_self_, &(_60317_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _2010de0db_annotateSptr(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _60843_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20113c0a1_Sptr> _60917_ssptr = _201133a7b_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_60917_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20113c0a1_Sptr> _61317_sptr = _201133a7b_Sptr((*(_60843_k)).ptr());;
	(*(_self_))._field_k=(&(_60917_ssptr.get()._field_Elem));
	__jule_func_result = _2010dea15_annotateKind(_self_, &(_61317_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _2010de3e9_annotateStruct(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _61845_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20100d071_StructIns> _61917_s = _201134c69_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_61917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_20100d071_StructIns> _62317_s2 = _201134c69_Struct((*(_61845_k)).ptr());;
	if ((_61917_s.get()._field_Generics.len() != _62317_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_61917_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2055ad023:;
		if (it != expr_end) {
			jule::I32 _62714_i = it - expr->begin();
			jule::Ptr<_20112e868_InsGeneric> _62721_g = *it;
			{
				jule::Ptr<_20112e868_InsGeneric> _62821_g2 = _62317_s2.get()._field_Generics[_62714_i];;
				if (_2011317b0_Equal(_62721_g.get()._field_Kind, _62821_g2.get()._field_Kind)) {
					goto _iter_next_2055ad023;
				};
				(*(_self_))._field_k=(&(_62721_g.get()._field_Kind));
				if ((!(_2010dea15_annotateKind(_self_, &(_62821_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2055ad023:;
			++it;
			_62714_i++;
			goto _iter_begin_2055ad023;
		}
		_iter_end_2055ad023:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _2010de707_annotateAny(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _64042_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64113_kind = _2011314a2_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2055b07d9:;
		if (it != expr_end) {
			jule::I32 _64213_i = it - expr->begin();
			jule::Ptr<_200ee7654_GenericDecl> _64216_g = *it;
			{
				if ((_64113_kind != _64216_g.get()._field_Ident)) {
					goto _iter_next_2055b07d9;
				};
				jule::Ptr<_20112e868_InsGeneric> _64617_t = (*(_self_))._field_f.get()._field_Generics[_64213_i];;
				{
					
					if ((_64617_t == nullptr) || (_64617_t.get()._field_Kind == nullptr)) {
						_case_begin_2055b22e1:;
						{
							_2010dc5c3_pushGeneric(_self_, _64042_k, _64213_i);
						}
					}
					else if ((!(_2011317b0_Equal(_64617_t.get()._field_Kind, (*(_64042_k)))))) {
						_case_begin_2055b2357:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_2055b1664:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_64042_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_2055b07d9:;
			++it;
			_64213_i++;
			goto _iter_begin_2055b07d9;
		}
		_iter_end_2055b07d9:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _2010dea15_annotateKind(_2010dab98_dynamicTypeAnnotation* _self_, jule::Ptr<_2011310ea_TypeKind>* _66143_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_2010de707_annotateAny(_self_, _66143_k)) {
			_case_begin_2055b4a74:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_201133817_Prim((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2055b4535:;
			{
				__jule_func_result = _2010dc8d1_annotatePrim(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_20113452c_Arr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2055b45ac:;
			{
				__jule_func_result = _2010dcbde_annotateArr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_201134791_Slc((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2055b47dd:;
			{
				__jule_func_result = _2010dceec_annotateSlc(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_201135242_Map((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2055b4854:;
			{
				__jule_func_result = _2010dd6b2_annotateMap(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_201134a05_Fn((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2055b48cb:;
			{
				__jule_func_result = _2010dd9c0_annotateFn(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_201133ce0_Ptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2055b4953:;
			{
				__jule_func_result = _2010ddccd_annotatePtr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_201133a7b_Sptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2055b4ada:;
			{
				__jule_func_result = _2010de0db_annotateSptr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_201134c69_Struct((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_2055b4b51:;
			{
				__jule_func_result = _2010de3e9_annotateStruct(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_2055b4403:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_2055b3d92:;
	};
}



inline jule::Bool _2010dec79_annotate(_2010dab98_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _2010dea15_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _2010dab98_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _2010e0ae3_pushErrToken(_2010e0593_fnCallArgChecker* _self_, jule::Ptr<_1ed694d8c_Token> _70631_token, jule::Str _70646_fmt, jule::Slice<jule::Any> _70659_args) {
	_201086eeb_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _70631_token, _70646_fmt, _70659_args);
}



inline void _2010e0e12_pushErr(_2010e0593_fnCallArgChecker* _self_, jule::Str _71026_fmt, jule::Slice<jule::Any> _71039_args) {
	_2010e0ae3_pushErrToken(_self_, (*(_self_))._field_errorToken, _71026_fmt, _71039_args);
}



inline jule::Slice<jule::Ptr<_20102243c_ParamIns>> _2010e1176_getParams(_2010e0593_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _20101e406_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _2010e1451_checkCounts(_2010e0593_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_20102243c_ParamIns>>* _72331_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _72417_n = (*(_72331_params)).len();;
	if (((_72417_n > 0LL) && _20101e406_IsSelf((*(_72331_params))[0LL].get()._field_Decl.ptr()))) {
		(_72417_n)--;
	};
	jule::I32 _72917_diff = (_72417_n - (*(_self_))._field_args.len());;
	jule::Str _73017_log = jule::Str();;
	{
		
		if ((_72917_diff == 0LL)) {
			_case_begin_2055be1dd:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72417_n > 0LL) && (*(_72331_params))[(_72417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_2055bede2:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72917_diff < 0LL) || (_72917_diff > (*(_72331_params)).len()))) {
			_case_begin_2055bea18:;
			{
				_73017_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_2055be9a2:;
			{
				_73017_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_2055be94c:;
	};
	jule::Str _74117_err = (*(_self_))._field_f.get()._field_Decl.get()._field_Ident;;
	(_74117_err).append("\n       wanted (", 16);
	{
		auto expr = _72331_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2055c1ce5:;
		if (it != expr_end) {
			jule::I32 _74313_i = it - expr->begin();
			jule::Ptr<_20102243c_ParamIns> *_74316_p = it;
			{
				_74117_err+=_2011314a2_Str((*(_74316_p)).get()._field_Kind.ptr());
				if ((((*(_72331_params)).len() - _74313_i) > 1LL)) {
					(_74117_err).append(", ", 2);
				};
			}
			_iter_next_2055c1ce5:;
			++it;
			_74313_i++;
			goto _iter_begin_2055c1ce5;
		}
		_iter_end_2055c1ce5:;
	};
	(_74117_err).append(")", 1);
	_2010e0e12_pushErr(_self_, _73017_log, jule::Slice<jule::Any>::make({jule::Any(_74117_err, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _2010e18a2_checkArg(_2010e0593_fnCallArgChecker* _self_, jule::Ptr<_20102243c_ParamIns>* _75432_p, jule::Ptr<_2010edb23_Data>* _75451_arg, jule::Ptr<_1ed694d8c_Token>* _75468_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _20102541d_parameterUsesGenerics(_75432_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=((!((*(_75432_p)).get()._field_Decl.get()._field_Variadic)) && _2010e829e_isGoodValueToInfer(_75451_arg));
		if (__jule_func_result) {
			_2010dab98_dynamicTypeAnnotation _75925_dta = _2010dab98_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75432_p)), ._field_a=(*(_75451_arg)), ._field_errorToken=(*(_75468_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_2010dec79_annotate(&_75925_dta);
		};
		if ((!(__jule_func_result))) {
			_2010e0ae3_pushErrToken(_self_, (*(_75468_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_20109219e_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Mutable, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, _75468_errorToken)) {
		_20108e289_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, (*(_75468_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _2010e1c59_push(_2010e0593_fnCallArgChecker* _self_, jule::Ptr<_20102243c_ParamIns>* _78328_p, jule::Ptr<_200ede838_Expr> _78346_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2011310ea_TypeKind> _78417_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _78513_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_78328_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_78328_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_78328_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_2010edb23_Data> _79317_d = _201121eba_evalExpr((*(_self_))._field_e, _78346_arg);;
	(*(_self_))._field_e.get()._field_prefix=_78417_old;
	(*(_self_))._field_e.get()._field_immutable=_78513_oldImmut;
	if ((_79317_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_2010e18a2_checkArg(_self_, _78328_p, &(_79317_d), &(_78346_arg.get()._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_79317_d.get()._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _2010e2111_pushVariadic(_2010e0593_fnCallArgChecker* _self_, jule::Ptr<_20102243c_ParamIns>* _80736_p, jule::I32 _80754_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _80917_variadiced = false;;
	jule::Bool _81013_more = ((_80754_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_201014709_SliceExprModel> _81117_model = jule::new_ptr<_201014709_SliceExprModel>(_201014709_SliceExprModel{._field_ElemKind=(*(_80736_p)).get()._field_Kind, });;
	jule::Ptr<_2011310ea_TypeKind> _81517_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _82013_variadic = (*(_80736_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_80736_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_80736_p)).get()._field_Kind.get()._field_Variadic=_82013_variadic;
	});;
	for (; (_80754_i < (*(_self_))._field_args.len()); (_80754_i)++) {
		{
			jule::Ptr<_200ede838_Expr> _82721_arg = (*(_self_))._field_args[_80754_i];;
			{
				auto &_match_expr{ _82721_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type81) {
					_case_begin_2055ce83b:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20113ca0d_Slc>(_20113ca0d_Slc{._field_Elem=(*(_80736_p)).get()._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_2055d0122:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_80736_p)).get()._field_Kind;
					}
				}
				_match_end_2055d00bc:;
			};
			jule::Ptr<_2010edb23_Data> _84021_d = _20111ba42_eval((*(_self_))._field_e, _82721_arg);;
			if ((_84021_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_2055cdd46;
			};
			if (_84021_d.get()._field_Kind.get()._field_Variadic) {
				_80917_variadiced=true;
				(*(_80736_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _2010e18a2_checkArg(_self_, _80736_p, &(_84021_d), &(_82721_arg.get()._field_Token)));
				{
					auto &_match_expr{ _84021_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_2055d3554:;
						{
							_81117_model=_84021_d.get()._field_Model.cast_ptr<_201014709_SliceExprModel>(&__jule_any_type82);
							_81117_model.get()._field_ElemKind=(*(_80736_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_2055d2db1:;
						{
							_81117_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_84021_d.get()._field_Model); };
						}
					}
					_match_end_2055d2d5b:;
				};
				(_80754_i)++;
				goto _iter_end_2055cdd46;
			};
			__jule_func_result=(__jule_func_result && _2010e18a2_checkArg(_self_, _80736_p, &(_84021_d), &(_82721_arg.get()._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = _81117_model.get()._field_Elems; __jule_push_dest.push(_84021_d.get()._field_Model); };
		}
	_iter_next_2055cdd46:;
	}
	_iter_end_2055cdd46:;;
	(*(_self_))._field_e.get()._field_prefix=_81517_old;
	if ((_80917_variadiced && _81013_more)) {
		_2010e0ae3_pushErrToken(_self_, (*(_self_))._field_args[_80754_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81117_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81117_model, &__jule_any_type82)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _2010e241e_checkArgs(_2010e0593_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_20102243c_ParamIns>>* _88333_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88413_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I32 _88817_i = 0LL;;
	if ((((*(_88333_params)).len() > 0LL) && _20101e406_IsSelf((*(_88333_params))[0LL].get()._field_Decl.ptr()))) {
		(_88817_i)++;
	};
	_julec_label_iter:;
	while ((_88817_i < (*(_88333_params)).len())) {
		{
			jule::Ptr<_20102243c_ParamIns> _89521_p = (*(_88333_params))[_88817_i];;
			{
				
				if (_89521_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_2055d8aed:;
					{
						__jule_func_result=(_2010e2111_pushVariadic(_self_, &(_89521_p), _88817_i) && __jule_func_result);
						goto _iter_end_2055d5cd7;
					}
				}
				else if (((*(_self_))._field_args.len() <= _88817_i)) {
					_case_begin_2055d83c2:;
					{
						__jule_func_result=false;
						goto _iter_end_2055d5cd7;
					}
				}
				else {
					_case_begin_2055d8757:;
					{
						__jule_func_result=(_2010e1c59_push(_self_, &(_89521_p), (*(_self_))._field_args[_88817_i]) && __jule_func_result);
					}
				}
				_match_end_2055d8702:;
			};
			(_88817_i)++;
		}
	_iter_next_2055d5cd7:;
	}
	_iter_end_2055d5cd7:;;
	(*(_self_))._field_e.get()._field_arg=_88413_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _2010e26a5_checkDynamicTypeAnnotation(_2010e0593_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2055da7e2:;
		if (it != expr_end) {
			jule::Ptr<_20112e868_InsGeneric> _91516_g = *it;
			{
				if ((_91516_g == nullptr)) {
					_2010e0e12_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_2055da7e2:;
			++it;
			goto _iter_begin_2055da7e2;
		}
		_iter_end_2055da7e2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _2010e292a_check(_2010e0593_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_20102243c_ParamIns>> _92517_params = _2010e1176_getParams(_self_);;
	__jule_func_result=_2010e1451_checkCounts(_self_, &(_92517_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_2010e241e_checkArgs(_self_, &(_92517_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_2010e26a5_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _2010e0593_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _2010e3475_pushErr(_2010e2e69_structLitChecker* _self_, jule::Ptr<_1ed694d8c_Token> _94626_token, jule::Str _94641_fmt, jule::Slice<jule::Any> _94654_args) {
	_201100b9c_pushErr((*(_self_))._field_e.ptr(), _94626_token, _94641_fmt, _94654_args);
}



inline void _2010e3794_pushSuggestion(_2010e2e69_structLitChecker* _self_, jule::Str _95133_fmt, jule::Slice<jule::Any> _95146_args) {
	_201100ebb_pushSuggestion((*(_self_))._field_e.ptr(), _95133_fmt, _95146_args);
}



inline void _2010e3b5c_pushMatch(_2010e2e69_structLitChecker* _self_, jule::Ptr<_20100c57b_FieldIns>* _95533_f, jule::Ptr<_2010edb23_Data>* _95552_d, jule::Ptr<_1ed694d8c_Token>* _95567_errorToken) {
	;
	if (_20109219e_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (!((*(_self_))._field_e.get()._field_immutable)), false, &((*(_95533_f)).get()._field_Kind), _95552_d, _95567_errorToken)) {
		_20108e289_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_95533_f)).get()._field_Kind), _95552_d, (*(_95567_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_201012c8a_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_201012c8a_StructArgExprModel>(_201012c8a_StructArgExprModel{._field_Field=(*(_95533_f)), ._field_Expr=(*(_95552_d)).get()._field_Model})); };
}



inline void _2010e3e7b_checkPair(_2010e2e69_structLitChecker* _self_, jule::Ptr<_200ee41cd_FieldExprPair>* _96833_pair, jule::Slice<jule::Ptr<_200ede838_Expr>>* _96860_exprs) {
	jule::Ptr<_20100c57b_FieldIns> _97017_f = _20100e32a_FindField((*(_self_))._field_s.ptr(), (*(_96833_pair)).get()._field_Field.get()._field_Kind);;
	if ((_97017_f == nullptr)) {
		_2010e3475_pushErr(_self_, (*(_96833_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_96833_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _97017_f.get()._field_Decl.get()._field_Public, _97017_f.get()._field_Decl.get()._field_Token)))) {
		_2010e3475_pushErr(_self_, (*(_96833_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_96833_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_2010e3794_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _96860_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2055e4a2c:;
		if (it != expr_end) {
			jule::Ptr<_200ede838_Expr> _98221_expr = *it;
			{
				{
					auto &_match_expr{ _98221_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_2055e53ac:;
						{
							jule::Ptr<_200ee41cd_FieldExprPair> _98525_dpair = _98221_expr.get()._field_Kind.cast_ptr<_200ee41cd_FieldExprPair>(&__jule_any_type83);;
							{
								
								if (((*(_96833_pair)) == _98525_dpair)) {
									_case_begin_2055e628c:;
									{
										goto _iter_end_2055e4a2c;
									}
								}
								else if (((*(_96833_pair)).get()._field_Field.get()._field_Kind == _98525_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_2055e6314:;
									{
										_2010e3475_pushErr(_self_, (*(_96833_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_96833_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_2055e4a2c;
									}
								}
								_match_end_2055e61d2:;
							};
						}
					}
					_match_end_2055e5203:;
				};
			}
			_iter_next_2055e4a2c:;
			++it;
			goto _iter_begin_2055e4a2c;
		}
		_iter_end_2055e4a2c:;
	};
	jule::Ptr<_2011310ea_TypeKind> _99617_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_99617_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_97017_f.get()._field_Kind;
	jule::Ptr<_2010edb23_Data> _100017_d = _201121eba_evalExpr((*(_self_))._field_e, (*(_96833_pair)).get()._field_Expr);;
	if ((_100017_d == nullptr)) {
		return;;
	};
	_2010e3b5c_pushMatch(_self_, &(_97017_f), &(_100017_d), &((*(_96833_pair)).get()._field_Field));
}



inline jule::Bool _2010e4289_readyExprs(_2010e2e69_structLitChecker* _self_, jule::Slice<jule::Ptr<_200ede838_Expr>>* _100734_exprs) {
	jule::Bool _100817_ok = true;;
	{
		auto expr = _100734_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2055e9614:;
		if (it != expr_end) {
			jule::I32 _100914_i = it - expr->begin();
			jule::Ptr<_200ede838_Expr> _100921_expr = *it;
			{
				{
					auto &_match_expr{ _100921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_2055ea280:;
						{
							jule::Ptr<_200ee580b_KeyValPair> _101225_pair = _100921_expr.get()._field_Kind.cast_ptr<_200ee580b_KeyValPair>(&__jule_any_type84);;
							{
								auto &_match_expr{ _101225_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type85) {
									_case_begin_2055eaaaa:;
									{
										goto _match_end_2055eb02d;
									}
								}
								else {
									_case_begin_2055eb2a3:;
									{
										_2010e3475_pushErr(_self_, _101225_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_100817_ok=false;
										goto _iter_next_2055e9614;
									}
								}
								_match_end_2055eb02d:;
							};
							(*(_100734_exprs))[_100914_i].get()._field_Kind=jule::Any(jule::new_ptr<_200ee41cd_FieldExprPair>(_200ee41cd_FieldExprPair{._field_Field=_101225_pair.get()._field_Key.get()._field_Token, ._field_Expr=_101225_pair.get()._field_Val}), &__jule_any_type83);
						}
					}
					_match_end_2055ea0c6:;
				};
			}
			_iter_next_2055e9614:;
			++it;
			_100914_i++;
			goto _iter_begin_2055e9614;
		}
		_iter_end_2055e9614:;
	};
	return _100817_ok;;
}



inline void _2010e450e_check(_2010e2e69_structLitChecker* _self_, jule::Slice<jule::Ptr<_200ede838_Expr>>* _103129_exprs) {
	if (((*(_103129_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_2010e4289_readyExprs(_self_, _103129_exprs)))) {
		return;;
	};
	jule::Bool _103817_paired = false;;
	{
		auto expr = _103129_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2055ea01b:;
		if (it != expr_end) {
			jule::I32 _103914_i = it - expr->begin();
			jule::Ptr<_200ede838_Expr> _103921_expr = *it;
			{
				{
					auto &_match_expr{ _103921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_205603189:;
						{
							jule::Ptr<_200ee41cd_FieldExprPair> _104225_pair = _103921_expr.get()._field_Kind.cast_ptr<_200ee41cd_FieldExprPair>(&__jule_any_type83);;
							if (((_103914_i > 0LL) && (!(_103817_paired)))) {
								_2010e3475_pushErr(_self_, _104225_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103817_paired=true;
							_2010e3e7b_checkPair(_self_, &(_104225_pair), _103129_exprs);
						}
					}
					else {
						_case_begin_2055ede65:;
						{
							if (_103817_paired) {
								_2010e3475_pushErr(_self_, _103921_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_103914_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_2010e3475_pushErr(_self_, _103921_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_2055ea01b;
							};
							jule::Ptr<_20100c57b_FieldIns> _105725_field = (*(_self_))._field_s.get()._field_Fields[_103914_i];;
							if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _105725_field.get()._field_Decl.get()._field_Public, _105725_field.get()._field_Decl.get()._field_Token)))) {
								_2010e3475_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_2010e3794_pushSuggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_2011310ea_TypeKind> _106525_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_106525_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_105725_field.get()._field_Kind;
							jule::Ptr<_2010edb23_Data> _106925_d = _201121eba_evalExpr((*(_self_))._field_e, _103921_expr);;
							if ((_106925_d == nullptr)) {
								goto _iter_next_2055ea01b;
							};
							_2010e3b5c_pushMatch(_self_, &(_105725_field), &(_106925_d), &(_103921_expr.get()._field_Token));
						}
					}
					_match_end_2055edcde:;
				};
			}
			_iter_next_2055ea01b:;
			++it;
			_103914_i++;
			goto _iter_begin_2055ea01b;
		}
		_iter_end_2055ea01b:;
	};
	if ((!(_103817_paired))) {
		jule::I32 _108017_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I32 _108121_diff = (_108017_n - (*(_103129_exprs)).len());;
		{
			
			if ((_108121_diff <= 0LL)) {
				_case_begin_205603266:;
				{
					return;;
				}
			}
			_match_end_20560a7ce:;
		};
		jule::Str _108721_idents = jule::Str();;
		for (; (_108121_diff > 0LL); (_108121_diff)--) {
			{
				_108721_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_108017_n - _108121_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_20560b192:;
		}
		_iter_end_20560b192:;;
		(_108721_idents).mut_slice(2LL);;
		_2010e3475_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_108721_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2010e2e69_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2010a4975_Var> _2010e5015_buildVar(_2010e4a4d_rangeChecker* _self_, jule::Ptr<_200eeccb9_VarDecl>* _110628_decl) {
	jule::Ptr<_2010a4975_Var> _110717_v = _20102b248_buildVar((*(_110628_decl)));;
	return _110717_v;;
}



inline void _2010e51e1_setSizeKey(_2010e4a4d_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1ed697631_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_2010e5015_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=_2011e847b_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20560e690:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_2010a3930_IterRelation>(_2010a3930_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_2010a4975_Var>(&__jule_any_type8)});
			}
		}
		_match_end_20560e63a:;
	};
}



inline void _2010e55a9_checkRangeExprValidity(_2010e4a4d_rangeChecker* _self_, jule::Ptr<_2010edb23_Data>* _113346_d, jule::Ptr<_2010a4975_Var>* _113357_key, jule::Ptr<_2011310ea_TypeKind>* _113373_k) {
	jule::Bool _113417__mut = (*(_113357_key)).get()._field_Mutable;;
	if ((_113417__mut && (!(_20113288d_Mutable((*(_113373_k)).ptr()))))) {
		_113417__mut=false;
	};
	_20109219e_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _113417__mut, (*(_113357_key)).get()._field_Reference, &((*(_113357_key)).get()._field_Kind.get()._field_Kind), _113346_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _2010e5785_checkSlice(_2010e4a4d_rangeChecker* _self_) {
	_2010e51e1_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1ed697631_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_20113ca0d_Slc> _115217_slc = _201134791_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_2010e5015_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=_115217_slc.get()._field_Elem});
	_2010e55a9_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_115217_slc.get()._field_Elem));
}



inline void _2010e5961_checkArray(_2010e4a4d_rangeChecker* _self_) {
	_2010e51e1_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1ed697631_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_20113eba8_Arr> _116517_arr = _20113452c_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_2010e5015_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=_116517_arr.get()._field_Elem});
	_2010e55a9_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_116517_arr.get()._field_Elem));
}



inline void _2010e5b3c_checkMapKeyA(_2010e4a4d_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1ed697631_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_20113e0b4_Map> _117717_m = _201135242_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_2010e5015_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=_117717_m.get()._field_Key});
	jule::Ptr<_2010edb23_Data> _118117_d = jule::new_ptr<_2010edb23_Data>((*((*(_self_))._field_d)));;
	_118117_d.get()._field_Kind=_117717_m.get()._field_Key;
	_2010e55a9_checkRangeExprValidity(_self_, &(_118117_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_117717_m.get()._field_Key));
}



inline void _2010e5d18_checkMapKeyB(_2010e4a4d_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1ed697631_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_20113e0b4_Map> _119217_m = _201135242_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_2010e5015_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=_119217_m.get()._field_Val});
	jule::Ptr<_2010edb23_Data> _119617_d = jule::new_ptr<_2010edb23_Data>((*((*(_self_))._field_d)));;
	_119617_d.get()._field_Kind=_119217_m.get()._field_Val;
	_2010e55a9_checkRangeExprValidity(_self_, &(_119617_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_119217_m.get()._field_Val));
}



inline void _2010e5ee4_checkMap(_2010e4a4d_rangeChecker* _self_) {
	_2010e5b3c_checkMapKeyA(_self_);
	_2010e5d18_checkMapKeyB(_self_);
}



inline void _2010e61c0_checkStr(_2010e4a4d_rangeChecker* _self_) {
	_2010e51e1_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1ed697631_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_2010e5015_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=_2011e847b_findBuiltinTypeAlias(jule::Str("u8", 2)).get()._field_Kind;
}



inline void _2010e639b_checkComptime(_2010e4a4d_rangeChecker* _self_) {
	_2010e51e1_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyA != nullptr) && (*(_self_))._field_rang.get()._field_KeyA.get()._field_Mutable)) {
		_201086eeb_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyA.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB != nullptr) && (*(_self_))._field_rang.get()._field_KeyB.get()._field_Mutable)) {
		_201086eeb_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyB.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1ed697631_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_2010e5015_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
}



inline jule::Bool _2010e6610_checkComptimeRange(_2010e4a4d_rangeChecker* _self_) {
	jule::Ptr<_201038860_comptimeRange> _123117_range = _201136908_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _123117_range.get()._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_205626421:;
			{
				_2010e639b_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_205625673:;
			{
				_201086eeb_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_20562561d:;
	};
}



inline jule::Bool _2010e6874_check(_2010e4a4d_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_205627356:;
		}
		else if ((_201134791_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2056273bc:;
			{
				_2010e5785_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_20113452c_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205627433:;
			{
				_2010e5961_checkArray(_self_);
				return true;;
			}
		}
		else if ((_201135242_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205627499:;
			{
				_2010e5ee4_checkMap(_self_);
				return true;;
			}
		}
		else if ((_201136908_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2056286ed:;
			{
				return _2010e6610_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_205626bd5:;
			{
				jule::Ptr<_201138850_Prim> _126317_prim = _201133817_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_126317_prim != nullptr) && _20113ba51_IsStr(_126317_prim.ptr()))) {
					_2010e61c0_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_205627202:;
	};
	_201086eeb_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _2010e4a4d_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _2010e7457_prepareTypes(_2010e704a_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_20102442d_Types((*(_self_))._field_f.ptr());
	};
}



inline void _2010e76cc_prepareExprs(_2010e704a_retTypeChecker* _self_, jule::Ptr<_200ede838_Expr>* _129136_e) {
	if (((*(_129136_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_129136_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_20562d25d:;
			{
				(*(_self_))._field_exprs=(*(_129136_e)).get()._field_Kind.cast_ptr<_200ee04b5_TupleExpr>(&__jule_any_type86).get()._field_Expr;
			}
		}
		else {
			_case_begin_20562cd84:;
			{
				{ jule::Slice<jule::Ptr<_200ede838_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_129136_e))); };
			}
		}
		_match_end_20562cd2e:;
	};
}



inline void _2010e78a8_checkExprs(_2010e704a_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_2010edb23_Data>> _130717_datas = jule::Slice<jule::Ptr<_2010edb23_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_201100691_Eval> _130817_eval = _20108dc8e_eval((*(_self_))._field_sc.get()._field_s, jule::Trait<_20114e426_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20562daee:;
		if (it != expr_end) {
			jule::I32 _130914_i = it - expr->begin();
			jule::Ptr<_200ede838_Expr> _130921_expr = *it;
			{
				if ((_130914_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_20562daee;
				};
				jule::Ptr<_2011310ea_TypeKind> _131421_t = (*(_self_))._field_types[_130914_i];;
				_130817_eval.get()._field_prefix=_131421_t;
				jule::Ptr<_2010edb23_Data> _131721_d = _201121eba_evalExpr(_130817_eval, _130921_expr);;
				if ((_131721_d == nullptr)) {
					goto _iter_next_20562daee;
				};
				{ jule::Slice<jule::Ptr<_2010edb23_Data>> &__jule_push_dest = _130717_datas; __jule_push_dest.push(_131721_d); };
				if (((!(_131721_d.get()._field_Mutable)) && _20113288d_Mutable(_131721_d.get()._field_Kind.ptr()))) {
					_201086eeb_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_2010d91b3_assignTypeChecker _132921_ac = _2010d91b3_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_131421_t, ._field_d=_131721_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_2010da33a_check(&_132921_ac);
			}
			_iter_next_20562daee:;
			++it;
			_130914_i++;
			goto _iter_begin_20562daee;
		}
		_iter_end_20562daee:;
	};
	if ((_130717_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_20101807b_TupleExprModel>(_20101807b_TupleExprModel{._field_Datas=_130717_datas}), &__jule_any_type87);
	} else if ((_130717_datas.len() == 1LL)) {
		(*(_self_))._field_model=_130717_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _2010e7bb6_check(_2010e704a_retTypeChecker* _self_, jule::Ptr<_200ede838_Expr>* _134829_e) {
	_2010e7457_prepareTypes(_self_);
	_2010e76cc_prepareExprs(_self_, _134829_e);
	jule::I32 _135213_n = (*(_self_))._field_exprs.len();;
	if (((_135213_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_2010217d2_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_201086eeb_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_135213_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _201020abc_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_201086eeb_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_135213_n > (*(_self_))._field_types.len())) {
		_201086eeb_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_135213_n < (*(_self_))._field_types.len())) {
		_201086eeb_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_2010e78a8_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _2010e704a_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20107b397_ImportInfo> _2010e95d0_SelectPackage(_2010e9118_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20563a6bb:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_20563a6bb:;
			++it;
			goto _iter_begin_20563a6bb;
		}
		_iter_end_20563a6bb:;
	};
	return nullptr;;
}



inline jule::Ptr<_2010a4975_Var> _2010e9987_FindVar(_2010e9118_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _2010eb58d_findVar(_self_, _4126_ident, _4138_binded, false);;
}



inline jule::Ptr<_2011303a2_TypeAlias> _2010e9d3e_FindTypeAlias(_2010e9118_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _2010eb9de_findTypeAlias(_self_, _4732_ident, _4744_binded, false);;
}



inline jule::Ptr<_20100a25a_Struct> _2010ea1e6_FindStruct(_2010e9118_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20563ca31:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> _5421_s = *it;
			{
				if (((_5421_s.get()._field_Ident == _5329_ident) && (_5421_s.get()._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_20563ca31:;
			++it;
			goto _iter_begin_20563ca31;
		}
		_iter_end_20563ca31:;
	};
	return nullptr;;
}



inline jule::Ptr<_20102065a_Fn> _2010ea59d_FindFn(_2010e9118_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20563ddc8:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _6521_f = *it;
			{
				if (((_6521_f.get()._field_Ident == _6425_ident) && (_6521_f.get()._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_20563ddc8:;
			++it;
			goto _iter_begin_20563ddc8;
		}
		_iter_end_20563ddc8:;
	};
	return nullptr;;
}



inline jule::Ptr<_20103287b_Trait> _2010ea8ab_FindTrait(_2010e9118_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20563e59e:;
		if (it != expr_end) {
			jule::Ptr<_20103287b_Trait> _7621_t = *it;
			{
				if ((_7621_t.get()._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_20563e59e:;
			++it;
			goto _iter_begin_20563e59e;
		}
		_iter_end_20563e59e:;
	};
	return nullptr;;
}



inline jule::Ptr<_20103510e_Enum> _2010eabb9_FindEnum(_2010e9118_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205640d86:;
		if (it != expr_end) {
			jule::Ptr<_20103510e_Enum> _8721_e = *it;
			{
				if ((_8721_e.get()._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_205640d86:;
			++it;
			goto _iter_begin_205640d86;
		}
		_iter_end_205640d86:;
	};
	return nullptr;;
}



inline jule::Ptr<_201036709_TypeEnum> _2010eaec7_FindTypeEnum(_2010e9118_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205641c66:;
		if (it != expr_end) {
			jule::Ptr<_201036709_TypeEnum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_205641c66:;
			++it;
			goto _iter_begin_205641c66;
		}
		_iter_end_205641c66:;
	};
	return nullptr;;
}



inline jule::Ptr<_2010a4975_Var> _2010eb58d_findVar(_2010e9118_SymbolTable* _self_, jule::Str _10826_ident, jule::Bool _10838_binded, jule::Bool _10852_reverse) {
	if (_10852_reverse) {
		jule::I32 _11021_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_2010a4975_Var> _11225_v = (*(_self_))._field_Vars[_11021_i];;
				if (((_11225_v.get()._field_Ident == _10826_ident) && (_11225_v.get()._field_Binded == _10838_binded))) {
					return _11225_v;;
				};
			}
		_iter_next_205643b8b:;
		}
		_iter_end_205643b8b:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205644e45:;
			if (it != expr_end) {
				jule::Ptr<_2010a4975_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_Ident == _10826_ident) && (_11825_v.get()._field_Binded == _10838_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_205644e45:;
				++it;
				goto _iter_begin_205644e45;
			}
			_iter_end_205644e45:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_2011303a2_TypeAlias> _2010eb9de_findTypeAlias(_2010e9118_SymbolTable* _self_, jule::Str _12732_ident, jule::Bool _12744_binded, jule::Bool _12758_reverse) {
	if (_12758_reverse) {
		jule::I32 _12921_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_2011303a2_TypeAlias> _13125_ta = (*(_self_))._field_TypeAliases[_12921_i];;
				if (((_13125_ta.get()._field_Ident == _12732_ident) && (_13125_ta.get()._field_Binded == _12744_binded))) {
					return _13125_ta;;
				};
			}
		_iter_next_205646ac3:;
		}
		_iter_end_205646ac3:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205647d7c:;
			if (it != expr_end) {
				jule::Ptr<_2011303a2_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_Ident == _12732_ident) && (_13725_ta.get()._field_Binded == _12744_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_205647d7c:;
				++it;
				goto _iter_begin_205647d7c;
			}
			_iter_end_205647d7c:;
		};
	};
	return nullptr;;
}



inline jule::Any _2010ebd96_defByIdent(_2010e9118_SymbolTable* _self_, jule::Str _14829_ident, jule::Bool _14841_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205648d06:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_Ident == _14829_ident) && (_14921_v.get()._field_Binded == _14841_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_205648d06:;
			++it;
			goto _iter_begin_205648d06;
		}
		_iter_end_205648d06:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2056497b8:;
		if (it != expr_end) {
			jule::Ptr<_2011303a2_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_Ident == _14829_ident) && (_15521_ta.get()._field_Binded == _14841_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type67);;
				};
			}
			_iter_next_2056497b8:;
			++it;
			goto _iter_begin_2056497b8;
		}
		_iter_end_2056497b8:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20564a6cb:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_Ident == _14829_ident) && (_16121_s.get()._field_Binded == _14841_binded))) {
					return jule::Any(_16121_s, &__jule_any_type66);;
				};
			}
			_iter_next_20564a6cb:;
			++it;
			goto _iter_begin_20564a6cb;
		}
		_iter_end_20564a6cb:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20564b17c:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_Ident == _14829_ident) && (_16721_f.get()._field_Binded == _14841_binded))) {
					return jule::Any(_16721_f, &__jule_any_type65);;
				};
			}
			_iter_next_20564b17c:;
			++it;
			goto _iter_begin_20564b17c;
		}
		_iter_end_20564b17c:;
	};
	if (_14841_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20564c227:;
		if (it != expr_end) {
			jule::Ptr<_20103287b_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_Ident == _14829_ident)) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_20564c227:;
			++it;
			goto _iter_begin_20564c227;
		}
		_iter_end_20564c227:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20564ce09:;
		if (it != expr_end) {
			jule::Ptr<_20103510e_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18321_e, &__jule_any_type68);;
				};
			}
			_iter_next_20564ce09:;
			++it;
			goto _iter_begin_20564ce09;
		}
		_iter_end_20564ce09:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20564dba7:;
		if (it != expr_end) {
			jule::Ptr<_201036709_TypeEnum> _18921_te = *it;
			{
				if ((_18921_te.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18921_te, &__jule_any_type69);;
				};
			}
			_iter_next_20564dba7:;
			++it;
			goto _iter_begin_20564dba7;
		}
		_iter_end_20564dba7:;
	};
	return nullptr;;
}



inline jule::Bool _2010ec2e7_isDuplicatedIdent(_2010e9118_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str _20149_ident, jule::Bool _20161_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20564e856:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*(_20216_v)).get()._field_Ident == _20149_ident)) && ((*(_20216_v)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_20564e856:;
			++it;
			goto _iter_begin_20564e856;
		}
		_iter_end_20564e856:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20564e812:;
		if (it != expr_end) {
			jule::Ptr<_2011303a2_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*(_20816_ta)).get()._field_Ident == _20149_ident)) && ((*(_20816_ta)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_20564e812:;
			++it;
			goto _iter_begin_20564e812;
		}
		_iter_end_20564e812:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2056501b4:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*(_21416_s)).get()._field_Ident == _20149_ident)) && ((*(_21416_s)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_2056501b4:;
			++it;
			goto _iter_begin_2056501b4;
		}
		_iter_end_2056501b4:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20565289d:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*(_22016_f)).get()._field_Ident == _20149_ident)) && ((*(_22016_f)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_20565289d:;
			++it;
			goto _iter_begin_20565289d;
		}
		_iter_end_20565289d:;
	};
	if (_20161_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205653a7a:;
		if (it != expr_end) {
			jule::Ptr<_20103287b_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*(_23016_t)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_205653a7a:;
			++it;
			goto _iter_begin_205653a7a;
		}
		_iter_end_205653a7a:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205652eca:;
		if (it != expr_end) {
			jule::Ptr<_20103510e_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*(_23616_e)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_205652eca:;
			++it;
			goto _iter_begin_205652eca;
		}
		_iter_end_205652eca:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20565543e:;
		if (it != expr_end) {
			jule::Ptr<_201036709_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*(_24216_te)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_20565543e:;
			++it;
			goto _iter_begin_20565543e;
		}
		_iter_end_20565543e:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _2010e9118_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2010edeb9_IsNil(_2010edb23_Data* _self_) {
	return _201132151_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _2010ee22d_IsVoid(_2010edb23_Data* _self_) {
	return _2011323b5_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _2010ee492_IsConst(_2010edb23_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _2010ee7a0_GoodOperand(_2010edb23_Data* _self_, jule::Ptr<_2010edb23_Data>* _10031_other) {
	if ((_2011342b8_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_201133817_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_20113bcb5_IsAny(_201133817_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_201134ecd_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_201132151_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _2010edb23_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2010eeb9b_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _201100b9c_pushErr(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_201086eeb_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _201100ebb_pushSuggestion(_201100691_Eval* _self_, jule::Str _13633_fmt, jule::Slice<jule::Any> _13646_args) {
	_20108731a_pushSuggestion((*(_self_))._field_s.ptr(), _13633_fmt, _13646_args);
}



inline void _201101197_allowBuiltin(_201100691_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _201101373_disallowBuiltin(_201100691_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _2011015d7_isUnsafe(_201100691_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _20110184b_isGlobal(_201100691_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_2056853d6:;
			{
				return true;;
			}
		}
		else {
			_case_begin_205685480:;
			{
				return false;;
			}
		}
		_match_end_205685a02:;
	};
}



inline jule::Bool _201101b26_applyNumericPrefix(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_2010ee492_IsConst((*(_16342_d)).ptr())))) || (_201133817_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_201138850_Prim> _17013_prim = _201133817_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1ee33beea_IsFloat(_201138b80_Str(_17013_prim.ptr()))) {
			_case_begin_205687e11:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>((*((*(_self_))._field_prefix)));
				_1ee340e33_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1ee3401b8_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1ee33b648_IsSigInt(_201138b80_Str(_17013_prim.ptr()))) {
			_case_begin_205687e88:;
			{
				if ((!(_2010d690d_sigAssignable(_201138b80_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>((*((*(_self_))._field_prefix)));
				_1ee34043d_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ee33ebe0_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1ee33b934_IsUnsigInt(_201138b80_Str(_17013_prim.ptr()))) {
			_case_begin_205688010:;
			{
				if ((!(_2010d6c93_unsigAssignable(_201138b80_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>((*((*(_self_))._field_prefix)));
				_1ee3406b3_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ee33ee54_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_205688285:;
	};
	return true;;
}



inline jule::Ptr<_2010edb23_Data> _201101d8a_litNil(_201100691_Eval* _self_) {
	jule::Ptr<_1ee33c6d2_Const> _20217_constant = static__1ee33d88c_NewNil();;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type19), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_2010edb23_Data> _201102198_litStr(_201100691_Eval* _self_, jule::Ptr<_200ee086c_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_1ed6961e0_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_2010d4eb1_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_2010d52d0_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_1ee33c6d2_Const> _21817_constant = static__1ee33d3e7_NewStr(_21217_s);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type19), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_2010edb23_Data> _2011024a6_litBool(_201100691_Eval* _self_, jule::Ptr<_200ee086c_LitExpr>* _22823_l) {
	jule::Ptr<_1ee33c6d2_Const> _22917_constant = static__1ee33d150_NewBool((*(_22823_l)).get()._field_Value.equal("true", 4));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Mutable=true, ._field_Model=jule::Any(_22917_constant, &__jule_any_type19), ._field_Constant=_22917_constant});;
}



inline jule::Ptr<_2010edb23_Data> _2011027b4_litRune(_201100691_Eval* _self_, jule::Ptr<_200ee086c_LitExpr>* _23823_l) {
	jule::Str _24013_lt = (*(_23823_l)).get()._field_Value.slice(1LL, ((*(_23823_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24113_r = _2010bd32e_ToRune(static_cast<jule::Slice<jule::U8>>(_24013_lt));;
	jule::Ptr<_2010edb23_Data> _24217_data = jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Constant=static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24113_r)))});;
	jule::Bool _24613_isAscii = _2010bd1ec_IsAscii(_24113_r);;
	if (_24613_isAscii) {
		_24217_data.get()._field_Kind=_2011e717d_primU8;
	} else {
		_24217_data.get()._field_Kind=_2011e6aea_primI32;
	};
	_24217_data.get()._field_Mutable=true;
	_24217_data.get()._field_Model=jule::Any(jule::new_ptr<_20101c190_RuneExprModel>(_20101c190_RuneExprModel{._field_Code=_24113_r}), &__jule_any_type88);
	_24217_data.get()._field_IsRune=true;
	_24217_data.get()._field_untyped=true;
	return _24217_data;;
}



inline jule::Ptr<_2010edb23_Data> _201102ac2_litFloat(_201100691_Eval* _self_, jule::Ptr<_200ee086c_LitExpr>* _26024_l) {
	jule::F64 _26113_f = ({
		auto except = _1ee3236da_ParseFloat((*(_26024_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1ee33c6d2_Const> _26217_constant = static__1ee33d68e_NewF64(_26113_f);;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_untyped=true, ._field_Kind=_2011e8217_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_26217_constant, &__jule_any_type19), ._field_Constant=_26217_constant});;
}



inline jule::Ptr<_2010edb23_Data> _201102dd0_litInt(_201100691_Eval* _self_, jule::Ptr<_200ee086c_LitExpr>* _27226_l) {
	;
	jule::Str _27517_lit = (*(_27226_l)).get()._field_Value;;
	jule::I32 _27617_base = 0LL;;
	{
		
		if (_219318297_HasPrefix(_27517_lit, jule::Str("0x", 2))) {
			_case_begin_205696e64:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=16LLU;
			}
		}
		else if (_219318297_HasPrefix(_27517_lit, jule::Str("0b", 2))) {
			_case_begin_205696eca:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=2LLU;
			}
		}
		else if (_219318297_HasPrefix(_27517_lit, jule::Str("0o", 2))) {
			_case_begin_205696b78:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=8LLU;
			}
		}
		else if (((_27517_lit[0LL] == '0') && (_27517_lit.len() > 1LL))) {
			_case_begin_205696bde:;
			{
				(_27517_lit).mut_slice(1LL);;
				_27617_base=8LLU;
			}
		}
		else {
			_case_begin_205696b12:;
			{
				_27617_base=10LLU;
			}
		}
		_match_end_205696aac:;
	};
	jule::Ptr<_2010edb23_Data> _29617_d = jule::new_ptr<_2010edb23_Data>();;
	jule::Bool _29817_ok = true;;
	jule::I64 _29913_sig = ({
		auto except = _1ee31c1ea_ParseInt(_27517_lit, _27617_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_29817_ok=false;

			0LL;
		});
	});;
	if (_29817_ok) {
		_29617_d.get()._field_Constant=static__1ee33cb11_NewI64(_29913_sig);
		_29617_d.get()._field_Kind=_2011e618d_primInt;
	} else {
		jule::U64 _30717_unsig = ({
			auto except = _1ee31bc88_ParseUint(_27517_lit, _27617_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_201100b9c_pushErr(_self_, (*(_27226_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_201100ebb_pushSuggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_29617_d.get()._field_Constant=static__1ee33cda8_NewU64(_30717_unsig);
		_29617_d.get()._field_Kind=_2011e5dc4_primUint;
	};
	_29617_d.get()._field_Model=jule::Any(_29617_d.get()._field_Constant, &__jule_any_type19);
	if ((!(_201101b26_applyNumericPrefix(_self_, &(_29617_d))))) {
		_20112a6ee_fitBitsize(&(_29617_d));
	};
	_29617_d.get()._field_Mutable=true;
	_29617_d.get()._field_untyped=true;
	return _29617_d;;
}



inline jule::Ptr<_2010edb23_Data> _2011031dd_litNum(_201100691_Eval* _self_, jule::Ptr<_200ee086c_LitExpr>* _32826_l) {
	{
		
		if (_1ed696d4a_IsFloat((*(_32826_l)).get()._field_Value)) {
			_case_begin_20569dbb3:;
			{
				return _201102ac2_litFloat(_self_, _32826_l);;
			}
		}
		else {
			_case_begin_20569d4cb:;
			{
				return _201102dd0_litInt(_self_, _32826_l);;
			}
		}
		_match_end_20569d432:;
	};
}



inline jule::Ptr<_2010edb23_Data> _2011034eb_evalLit(_201100691_Eval* _self_, jule::Ptr<_200ee086c_LitExpr> _33726_lit) {
	{
		
		if (_200ee0bbe_IsNil(_33726_lit.ptr())) {
			_case_begin_20569e6b9:;
			{
				return _201101d8a_litNil(_self_);;
			}
		}
		else if (_1ed695e48_IsStr(_33726_lit.get()._field_Value)) {
			_case_begin_20569e730:;
			{
				return _201102198_litStr(_self_, &(_33726_lit));;
			}
		}
		else if (_1ed696aa3_IsBool(_33726_lit.get()._field_Value)) {
			_case_begin_20569e796:;
			{
				return _2011024a6_litBool(_self_, &(_33726_lit));;
			}
		}
		else if (_1ed696487_IsRune(_33726_lit.get()._field_Value)) {
			_case_begin_20569e80c:;
			{
				return _2011027b4_litRune(_self_, &(_33726_lit));;
			}
		}
		else if (_1ed6970e2_IsNum(_33726_lit.get()._field_Value)) {
			_case_begin_20569e950:;
			{
				return _2011031dd_litNum(_self_, &(_33726_lit));;
			}
		}
		else {
			_case_begin_20569e18b:;
			{
				return nullptr;;
			}
		}
		_match_end_20569d784:;
	};
}



inline jule::Any _201103809_findBuiltins(_201100691_Eval* _self_, jule::Str _35431_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_2056a1a51:;
			{
				jule::Any _35721_def = _20112a4e0_findBuiltinsImport(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_20107b397_ImportInfo>(1));;
				if ((_35721_def != nullptr)) {
					return _35721_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_2056a1ec4:;
			{
				jule::Any _36221_def = _20112b17d_findBuiltinsSema(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_201084669_Sema>(3));;
				if ((_36221_def != nullptr)) {
					return _36221_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_2056a203a:;
			{
				jule::Any _36721_def = _20112b17d_findBuiltinsSema(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_20106455b_scopeChecker>(0).get()._field_s);;
				if ((_36721_def != nullptr)) {
					return _36721_def;;
				};
			}
		}
		_match_end_2056a19eb:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _2011e868a_findBuiltinDef(_35431_ident);;
}



inline jule::Any _201103bb1_getDef(_201100691_Eval* _self_, jule::Str _37825_ident, jule::Bool _37837_binded) {
	jule::Ptr<_2010a4975_Var> _38317_v = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114cc93_FindVar((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_38317_v != nullptr)) {
		return jule::Any(_38317_v, &__jule_any_type8);;
	};
	jule::Ptr<_2011303a2_TypeAlias> _38817_ta = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114d14a_FindTypeAlias((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_38817_ta != nullptr)) {
		return jule::Any(_38817_ta, &__jule_any_type67);;
	};
	if ((!(_37837_binded))) {
		jule::Ptr<_20103510e_Enum> _39421_enm = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114dec5_FindEnum((*(_self_))._field_lookup, _37825_ident);;
		if ((_39421_enm != nullptr)) {
			return jule::Any(_39421_enm, &__jule_any_type68);;
		};
		jule::Ptr<_201036709_TypeEnum> _39921_tenm = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114e2d3_FindTypeEnum((*(_self_))._field_lookup, _37825_ident);;
		if ((_39921_tenm != nullptr)) {
			return jule::Any(_39921_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_20102065a_Fn> _40517_f = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114d8a9_FindFn((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_40517_f != nullptr)) {
		return jule::Any(_40517_f, &__jule_any_type65);;
	};
	jule::Ptr<_20100a25a_Struct> _41017_s = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114d502_FindStruct((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_41017_s != nullptr)) {
		return jule::Any(_41017_s, &__jule_any_type66);;
	};
	return _201103809_findBuiltins(_self_, _37825_ident);;
}



inline void _2056b758e_pushReference(_201100691_Eval* _self_, jule::Ptr<_20102330b_FnIns>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_2056b9041:;
			{
				jule::Ptr<_20106455b_scopeChecker> _42121_sc = _2010675e7_getHardRoot((*(_self_))._field_lookup.cast_ptr<_20106455b_scopeChecker>(0));;
				if ((!(_2056b9ecb_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_201026dd1_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_2056b8947:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_2056b9ecb_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_201026dd1_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_2056b88e2:;
	};
}

inline void _2056ca98c_pushReference(_201100691_Eval* _self_, jule::Ptr<_2010a4975_Var>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_2056cc3ea:;
			{
				jule::Ptr<_20106455b_scopeChecker> _42121_sc = _2010675e7_getHardRoot((*(_self_))._field_lookup.cast_ptr<_20106455b_scopeChecker>(0));;
				if ((!(_2056cd385_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_201026dd1_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_2056cbd01:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_2056cd385_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_201026dd1_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_2056cbc9b:;
	};
}

inline void _205769b3b_pushReference(_201100691_Eval* _self_, jule::Ptr<_20100d071_StructIns>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_20576b610:;
			{
				jule::Ptr<_20106455b_scopeChecker> _42121_sc = _2010675e7_getHardRoot((*(_self_))._field_lookup.cast_ptr<_20106455b_scopeChecker>(0));;
				if ((!(_20576c59a_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_201026dd1_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_20576b016:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_20576c59a_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_201026dd1_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_20576aeb1:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201104244__evalEnum(_201100691_Eval* _self_, jule::Ptr<_20103510e_Enum> _43528_enm) {
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_43528_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_2010edb23_Data> _2011045eb_evalEnum(_201100691_Eval* _self_, jule::Ptr<_20103510e_Enum> _44431_enm, jule::Ptr<_1ed694d8c_Token> _44443_errorToken) {
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), _44431_enm.get()._field_Public, _44431_enm.get()._field_Token)))) {
		_201100b9c_pushErr(_self_, _44443_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_44431_enm.get()._field_Ident, &__jule_any_type5)}));
		_201100ebb_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _201104244__evalEnum(_self_, _44431_enm);;
}



inline jule::Ptr<_2010edb23_Data> _201104909__evalTypeEnum(_201100691_Eval* _self_, jule::Ptr<_201036709_TypeEnum> _45332_enm) {
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_45332_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_2010edb23_Data> _201104cb1_evalTypeEnum(_201100691_Eval* _self_, jule::Ptr<_201036709_TypeEnum> _46235_enm, jule::Ptr<_1ed694d8c_Token> _46251_errorToken) {
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), _46235_enm.get()._field_Public, _46235_enm.get()._field_Token)))) {
		_201100b9c_pushErr(_self_, _46251_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_46235_enm.get()._field_Ident, &__jule_any_type5)}));
		_201100ebb_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _201104909__evalTypeEnum(_self_, _46235_enm);;
}



inline jule::Ptr<_2010edb23_Data> _2011050be__evalStruct(_201100691_Eval* _self_, jule::Ptr<_20100d071_StructIns> _47130_s) {
	jule::Ptr<_2010edb23_Data> _47217_d = jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_47130_s, 0)}), ._field_Model=jule::Any(_47130_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_47130_s.get()._field_Decl != nullptr) && _47130_s.get()._field_Decl.get()._field_Binded)) {
		_47217_d.get()._field_Kind.get()._field_BindIdent=_47130_s.get()._field_Decl.get()._field_Ident;
	};
	return _47217_d;;
}



inline jule::Ptr<_2010edb23_Data> _201105476_evalStruct(_201100691_Eval* _self_, jule::Ptr<_20100d071_StructIns> _48533_s, jule::Ptr<_1ed694d8c_Token> _48548_errorToken) {
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), _48533_s.get()._field_Decl.get()._field_Public, _48533_s.get()._field_Decl.get()._field_Token)))) {
		_201100b9c_pushErr(_self_, _48548_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_48533_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_201100ebb_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_201105aa3_checkDeprecated(_self_, &(_48533_s.get()._field_Decl.get()._field_Directives), _48548_errorToken);
	return _2011050be__evalStruct(_self_, _48533_s);;
}



inline jule::Ptr<_2010edb23_Data> _201105784_evalFnIns(_201100691_Eval* _self_, jule::Ptr<_20102330b_FnIns> _49528_f) {
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_49528_f, 1)}), ._field_Model=jule::Any(_49528_f, &__jule_any_type7), });;
}



inline void _201105aa3_checkDeprecated(_201100691_Eval* _self_, jule::Slice<jule::Ptr<_200d472d9_Directive>>* _50439_directives, jule::Ptr<_1ed694d8c_Token> _50470_tok) {
	if (_2011015d7_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_200d472d9_Directive> _50913_d = _20112a15a_findDirective(_50439_directives, jule::Str("deprecated", 10));;
	if ((_50913_d != nullptr)) {
		if ((_50913_d.get()._field_Args.len() == 0LL)) {
			_201100b9c_pushErr(_self_, _50470_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_201100b9c_pushErr(_self_, _50470_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_50913_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_201100ebb_pushSuggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_2010edb23_Data> _201105e5a_evalFn(_201100691_Eval* _self_, jule::Ptr<_20102065a_Fn> _52029_f, jule::Ptr<_1ed694d8c_Token> _52037_errorToken) {
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), _52029_f.get()._field_Public, _52029_f.get()._field_Token)))) {
		_201100b9c_pushErr(_self_, _52037_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_52029_f.get()._field_Ident, &__jule_any_type5)}));
		_201100ebb_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_201105aa3_checkDeprecated(_self_, &(_52029_f.get()._field_Directives), _52037_errorToken);
	jule::Ptr<_20102330b_FnIns> _52917_ins = _201021caa_instance(_52029_f);;
	_2056b758e_pushReference(_self_, &(_52917_ins));
	return _201105784_evalFnIns(_self_, _52917_ins);;
}



inline void _201106323_pushIllegalCycleError(_201100691_Eval* _self_, jule::Ptr<_2010a4975_Var>* _53441_v1, jule::Ptr<_2010a4975_Var>* _53452_v2, jule::Str* _53467_message) {
	;
	jule::Str _53613_refers_to = _2193a4a4d_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_53441_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_53452_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_53467_message))).buffer.insert(0, (((_219317a27_Repeat(jule::Str(" ", 1), 7LL) + _53613_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _2011066ca_checkCrossCycle(_201100691_Eval* _self_, jule::Ptr<_2010a4975_Var>* _54035_v, jule::Str* _54049_message) {
	{
		auto expr = &((*(_54035_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2056bebc3:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> *_54116_d = it;
			{
				if (((*(_54116_d)) == (*(_self_))._field_owner)) {
					_201106323_pushIllegalCycleError(_self_, _54035_v, _54116_d, _54049_message);
					return false;;
				};
				if ((!(_2011066ca_checkCrossCycle(_self_, _54116_d, _54049_message)))) {
					_201106323_pushIllegalCycleError(_self_, _54035_v, _54116_d, _54049_message);
					return false;;
				};
			}
			_iter_next_2056bebc3:;
			++it;
			goto _iter_begin_2056bebc3;
		}
		_iter_end_2056bebc3:;
	};
	return true;;
}



inline jule::Bool _201106a82_checkIllegalCycles(_201100691_Eval* _self_, jule::Ptr<_2010a4975_Var>* _55942_v, jule::Ptr<_1ed694d8c_Token> _55951_decl_token) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*(_self_))._field_owner.get()._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_55942_v)))) {
		_201100b9c_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _57217_message = jule::Str();;
	if ((!(_2011066ca_checkCrossCycle(_self_, _55942_v, &(_57217_message))))) {
		jule::Str _57521_errMsg = _57217_message;;
		_57217_message=jule::Str();
		_201106323_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _55942_v, &(_57217_message));
		_57521_errMsg+=_57217_message;
		_201100b9c_pushErr(_self_, _55951_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_57521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = (*(_self_))._field_owner.get()._field_Depends; __jule_push_dest.push((*(_55942_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_2010edb23_Data> _201106e39_evalVar(_201100691_Eval* _self_, jule::Ptr<_2010a4975_Var> _58730_v, jule::Ptr<_1ed694d8c_Token> _58739_errorToken) {
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), _58730_v.get()._field_Public, _58730_v.get()._field_Token)))) {
		_201100b9c_pushErr(_self_, _58739_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_58730_v.get()._field_Ident, &__jule_any_type5)}));
		_201100ebb_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_201105aa3_checkDeprecated(_self_, &(_58730_v.get()._field_Directives), _58739_errorToken);
	_58730_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_2056c6c0d:;
			{
				jule::Bool _60117_ok = _201106a82_checkIllegalCycles(_self_, &(_58730_v), _58739_errorToken);;
				if ((!(_60117_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_2056c6cb8:;
			{
				if (((!(_58730_v.get()._field_Reference)) || _2011015d7_isUnsafe(_self_))) {
					goto _match_end_2056c6ba8;
				};
				jule::Ptr<_20106455b_scopeChecker> _60921_s = (*(_self_))._field_lookup.cast_ptr<_20106455b_scopeChecker>(0);;
				while (((_60921_s.get()._field_owner == nullptr) && (_60921_s.get()._field_parent != nullptr))) {
					{
						_60921_s=_60921_s.get()._field_parent;
					}
				_iter_next_2056c8c87:;
				}
				_iter_end_2056c8c87:;;
				if ((((_60921_s.get()._field_owner != nullptr) && _60921_s.get()._field_owner.get()._field_Anon) && (_58730_v.get()._field_Scope != _60921_s.get()._field_owner.get()._field_Scope))) {
					_201100b9c_pushErr(_self_, _58739_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_58730_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_2056c6ba8:;
	};
	if ((_58730_v.get()._field_Scope == nullptr)) {
		_2056ca98c_pushReference(_self_, &(_58730_v));
	};
	if (((!(_58730_v.get()._field_Binded)) && ((_58730_v.get()._field_Value == nullptr) || (_58730_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_58730_v.get()._field_Constant) {
			_20109bd68_checkTypeVar((*(_self_))._field_s, &(_58730_v), jule::Trait<_20114e426_Lookup>((*(_self_))._field_s, 3));
			if (((_58730_v.get()._field_Value == nullptr) || (_58730_v.get()._field_Value.get()._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if (((_58730_v.get()._field_Kind == nullptr) || (_58730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_58730_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_20109bd68_checkTypeVar((*(_self_))._field_s, &(_58730_v), (*(_self_))._field_lookup);
		if (((_58730_v.get()._field_Kind == nullptr) || (_58730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_2010edb23_Data> _65217_d = jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_58730_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_58730_v.get()._field_Mutable, ._field_Reference=_58730_v.get()._field_Reference, ._field_Lvalue=(!(_58730_v.get()._field_Constant)), ._field_Model=jule::Any(_58730_v, &__jule_any_type8), });;
	if ((((!(_58730_v.get()._field_Binded)) && _2010a4ce9_IsInitialized(_58730_v.ptr())) && (_58730_v.get()._field_Value.get()._field_Data != nullptr))) {
		_65217_d.get()._field_IsRune=_58730_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_58730_v.get()._field_Constant && (_58730_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_65217_d.get()._field_Constant=jule::new_ptr<_1ee33c6d2_Const>((*(_58730_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_65217_d.get()._field_Model=jule::Any(_65217_d.get()._field_Constant, &__jule_any_type19);
		if (_2010a52c2_untypedConstant(_58730_v.ptr())) {
			_201101b26_applyNumericPrefix(_self_, &(_65217_d));
			_65217_d.get()._field_untyped=true;
		};
	};
	return _65217_d;;
}



inline jule::Ptr<_2010edb23_Data> _2011072e1_evalTypeAlias(_201100691_Eval* _self_, jule::Ptr<_2011303a2_TypeAlias> _67636_ta, jule::Ptr<_1ed694d8c_Token> _67652_errorToken) {
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), _67636_ta.get()._field_Public, _67636_ta.get()._field_Token)))) {
		_201100b9c_pushErr(_self_, _67652_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_67636_ta.get()._field_Ident, &__jule_any_type5)}));
		_201100ebb_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_67636_ta.get()._field_Used=true;
	jule::Trait<_201130b88_Kind> _68517_kind = _67636_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_2010edb23_Data> _68617_d = nullptr;;
	{
		auto &_match_expr{ _68517_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_2056db66d:;
			{
				_68617_d=_2011050be__evalStruct(_self_, _68517_kind.cast_ptr<_20100d071_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_2056dae20:;
			{
				_68617_d=_201104244__evalEnum(_self_, _68517_kind.cast_ptr<_20103510e_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_2056da24e:;
			{
				_68617_d=_201104909__evalTypeEnum(_self_, _68517_kind.cast_ptr<_201036709_TypeEnum>(4));
			}
		}
		else {
			_case_begin_2056da12d:;
			{
				_68617_d=jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=_67636_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_67636_ta.get()._field_Binded) {
					_68617_d.get()._field_Kind.get()._field_BindIdent=_67636_ta.get()._field_Ident;
				} else {
					_68617_d.get()._field_Kind.get()._field_BindIdent=_67636_ta.get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
				};
				_68617_d.get()._field_Model=jule::Any(_68617_d.get()._field_Kind, &__jule_any_type89);
			}
		}
		_match_end_2056da0c8:;
	};
	_68617_d.get()._field_Kind.get()._field_Generic=_67636_ta.get()._field_Generic;
	return _68617_d;;
}



inline jule::Ptr<_2010edb23_Data> _201107698_evalDef(_201100691_Eval* _self_, jule::Any _71230_def, jule::Ptr<_1ed694d8c_Token> _71240_ident) {
	{
		auto &_match_expr{ _71230_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2056dde01:;
			{
				return _201106e39_evalVar(_self_, _71230_def.cast_ptr<_2010a4975_Var>(&__jule_any_type8), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_2056dde67:;
			{
				return _2011045eb_evalEnum(_self_, _71230_def.cast_ptr<_20103510e_Enum>(&__jule_any_type68), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_2056ddecd:;
			{
				return _201104cb1_evalTypeEnum(_self_, _71230_def.cast_ptr<_201036709_TypeEnum>(&__jule_any_type69), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2056de055:;
			{
				return _201105476_evalStruct(_self_, _20100a6bc_instance(_71230_def.cast_ptr<_20100a25a_Struct>(&__jule_any_type66)), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_2056de0bb:;
			{
				jule::Ptr<_20102065a_Fn> _72321_f = _71230_def.cast_ptr<_20102065a_Fn>(&__jule_any_type65);;
				if ((!_72321_f.get()._field_Ident.equal("init", 4))) {
					return _201105e5a_evalFn(_self_, _72321_f, _71240_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2056de132:;
			{
				return _201105784_evalFnIns(_self_, _71230_def.cast_ptr<_20102330b_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_2056de1a9:;
			{
				return _2011072e1_evalTypeAlias(_self_, _71230_def.cast_ptr<_2011303a2_TypeAlias>(&__jule_any_type67), _71240_ident);;
			}
		}
		_match_end_2056ddd13:;
	};
	_201100b9c_pushErr(_self_, _71240_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_71240_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_2010edb23_Data> _2011079a6_evalIdent(_201100691_Eval* _self_, jule::Ptr<_200ee142d_IdentExpr> _73628_ident) {
	jule::Any _73717_def = _201103bb1_getDef(_self_, _73628_ident.get()._field_Ident, _73628_ident.get()._field_Binded);;
	return _201107698_evalDef(_self_, _73717_def, _73628_ident.get()._field_Token);;
}



inline jule::Ptr<_2010edb23_Data> _201107cb4_evalUnary(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee1b37_UnaryExpr> _74133_u) {
	_20112243d_unaryEval _74217_unary = static__20112286c_new(_self_);;
	return _201123b48_eval(&_74217_unary, _74133_u);;
}



inline jule::Ptr<_2010edb23_Data> _2011080c2_evalVariadic(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee1ede_VariadicExpr> _74636_v) {
	if ((_74636_v.get()._field_Expr == nullptr)) {
		_201100b9c_pushErr(_self_.ptr(), _74636_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2011310ea_TypeKind> _75217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75217_prefix;
	});;
	jule::Ptr<_2010edb23_Data> _75617_d = _201121eba_evalExpr(_self_, _74636_v.get()._field_Expr);;
	if ((_75617_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_2011335a3_Variadicable(_75617_d.get()._field_Kind.ptr())))) {
		_201100b9c_pushErr(_self_.ptr(), _74636_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_75617_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20113ca0d_Slc> _76613_slc = _201134791_Slc(_75617_d.get()._field_Kind.ptr());;
	_75617_d.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_BindIdent=_76613_slc.get()._field_Elem.get()._field_BindIdent, ._field_Generic=_76613_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_76613_slc.get()._field_Elem.get()._field_Kind});
	return _75617_d;;
}



inline jule::Ptr<_2010edb23_Data> _2011083d0_evalUnsafe(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee0eaa_UnsafeExpr> _77634_u) {
	jule::Bool _77713_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_2010edb23_Data> _77917_d = _201121eba_evalExpr(_self_, _77634_u.get()._field_Expr);;
	_self_.get()._field_unsafety=_77713_unsafety;
	return _77917_d;;
}



inline jule::Ptr<_2010edb23_Data> _2011086dd_evalArr(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee5e7c_SliceExpr> _78431_s) {
	jule::Ptr<_20113eba8_Arr> _78617_pt = _20113452c_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_20113eba8_Arr> _78817_arr = jule::new_ptr<_20113eba8_Arr>(_20113eba8_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_78617_pt.get()._field_Elem});;
	jule::Bool _79417_filled = false;;
	if ((_78431_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _78431_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_2056ec65c:;
				{
					if ((_78431_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_200ee1ede_VariadicExpr>(&__jule_any_type81).get()._field_Expr != nullptr)) {
						goto _match_end_2056ec607;
					};
					if (_78617_pt.get()._field_Auto) {
						_201100b9c_pushErr(_self_.ptr(), _78431_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_79417_filled=true;
					_78431_s.get()._field_Exprs=_78431_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_2056ec607:;
		};
	};
	_78817_arr.get()._field_N=static_cast<jule::I32>(_78431_s.get()._field_Exprs.len());
	if ((!(_78617_pt.get()._field_Auto))) {
		if ((_78817_arr.get()._field_N > _78617_pt.get()._field_N)) {
			_201100b9c_pushErr(_self_.ptr(), _78431_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_78817_arr.get()._field_N < _78617_pt.get()._field_N)) {
			_78817_arr.get()._field_N=_78617_pt.get()._field_N;
		};
	};
	jule::Ptr<_201017432_ArrayExprModel> _82317_model = jule::new_ptr<_201017432_ArrayExprModel>(_201017432_ArrayExprModel{._field_Kind=_78817_arr, });;
	if (_79417_filled) {
		_82317_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_82317_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _78431_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_2011310ea_TypeKind> _83217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78817_arr.get()._field_Elem;
	{
		auto expr = &(_78431_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205702453:;
		if (it != expr_end) {
			jule::Ptr<_200ede838_Expr> _83421_elem = *it;
			{
				jule::Ptr<_2010edb23_Data> _83521_d = _201121eba_evalExpr(_self_, _83421_elem);;
				if ((_83521_d == nullptr)) {
					goto _iter_next_205702453;
				};
				_20108e289_checkAssignType(_self_.get()._field_s, false, &(_78817_arr.get()._field_Elem), &(_83521_d), _78431_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _82317_model.get()._field_Elems; __jule_push_dest.push(_83521_d.get()._field_Model); };
			}
			_iter_next_205702453:;
			++it;
			goto _iter_begin_205702453;
		}
		_iter_end_205702453:;
	};
	_self_.get()._field_prefix=_83217_prefix;
	if (_79417_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _82317_model.get()._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_78817_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_82317_model, &__jule_any_type90), });;
}



inline jule::Ptr<_2010edb23_Data> _201108b3e_evalExpSlc(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee5e7c_SliceExpr> _85834_s, jule::Ptr<_2011310ea_TypeKind> _85853_t, jule::Any _85871_first) {
	jule::Ptr<_20113ca0d_Slc> _85917_slc = jule::new_ptr<_20113ca0d_Slc>(_20113ca0d_Slc{._field_Elem=_85853_t});;
	jule::I32 _86317_i = 0LL;;
	jule::Ptr<_201014709_SliceExprModel> _86417_model = jule::new_ptr<_201014709_SliceExprModel>(_201014709_SliceExprModel{._field_ElemKind=_85853_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _85834_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_85871_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _86417_model.get()._field_Elems; __jule_push_dest.push(_85871_first); };
		_86317_i=1LL;
	};
	jule::Ptr<_2011310ea_TypeKind> _87317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85917_slc.get()._field_Elem;
	{
		auto expr = _85834_s.get()._field_Exprs.slice(_86317_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_205707601:;
		if (it != expr_end) {
			jule::Ptr<_200ede838_Expr> _87521_elem = *it;
			{
				jule::Ptr<_2010edb23_Data> _87621_d = _201121eba_evalExpr(_self_, _87521_elem);;
				if ((_87621_d == nullptr)) {
					goto _iter_next_205707601;
				};
				_20108e289_checkAssignType(_self_.get()._field_s, false, &(_85917_slc.get()._field_Elem), &(_87621_d), _85834_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _86417_model.get()._field_Elems; __jule_push_dest.push(_87621_d.get()._field_Model); };
			}
			_iter_next_205707601:;
			++it;
			goto _iter_begin_205707601;
		}
		_iter_end_205707601:;
	};
	_self_.get()._field_prefix=_87317_prefix;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_85917_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_86417_model, &__jule_any_type82), });;
}



inline jule::Ptr<_2010edb23_Data> _201108e4c_evalSliceExpr(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee5e7c_SliceExpr> _89437_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_20113452c_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_20570a2d5:;
				{
					return _2011086dd_evalArr(_self_, _89437_s);;
				}
			}
			else if ((_201134791_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_20570a35c:;
				{
					jule::Ptr<_20113ca0d_Slc> _90025_pt = _201134791_Slc(_self_.get()._field_prefix.ptr());;
					return _201108b3e_evalExpSlc(_self_, _89437_s, _90025_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_20570a1c5:;
		};
	};
	jule::Ptr<_2011310ea_TypeKind> _90517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_89437_s.get()._field_Exprs.len() == 0LL)) {
		_201100b9c_pushErr(_self_.ptr(), _89437_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2010edb23_Data> _91317_firstElem = _201121eba_evalExpr(_self_, _89437_s.get()._field_Exprs[0LL]);;
	if ((_91317_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2010edb23_Data> _91817_d = _201108b3e_evalExpSlc(_self_, _89437_s, _91317_firstElem.get()._field_Kind, _91317_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_90517_prefix;
	return _91817_d;;
}



inline void _20110928d_checkIntegerIndexingByData(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data>* _92450_d, jule::Ptr<_1ed694d8c_Token> _92460_token) {
	jule::Str _92513_err_key = _20112c602_checkDataForIntegerIndexing(_92450_d);;
	{
		auto &_match_expr{ _92513_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_20570ed45:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_20571094a:;
			{
				_201100b9c_pushErr(_self_, _92460_token, _92513_err_key, jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_92450_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_2057101b9:;
			{
				_201100b9c_pushErr(_self_, _92460_token, _92513_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_2057100dc:;
	};
}



inline void _201109667_indexingPtr(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data>* _93635_d, jule::Ptr<_2010edb23_Data>* _93650_index, jule::Ptr<_200ee67da_IndexingExpr>* _93665_i) {
	_20110928d_checkIntegerIndexingByData(_self_, _93650_index, (*(_93665_i)).get()._field_Token);
	jule::Ptr<_201140615_Ptr> _93917_ptr = _201133ce0_Ptr((*(_93635_d)).get()._field_Kind.ptr());;
	{
		
		if (_2011410d8_IsUnsafe(_93917_ptr.ptr())) {
			_case_begin_20571272c:;
			{
				_201100b9c_pushErr(_self_, (*(_93665_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_2011015d7_isUnsafe(_self_)))) {
			_case_begin_205712793:;
			{
				_201100b9c_pushErr(_self_, (*(_93665_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_20571261c:;
	};
	(*(_93635_d)).get()._field_Kind=_93917_ptr.get()._field_Elem;
}



inline void _201109a30_indexingArr(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data>* _95135_d, jule::Ptr<_2010edb23_Data>* _95150_index, jule::Ptr<_200ee67da_IndexingExpr>* _95165_i) {
	jule::Ptr<_20113eba8_Arr> _95217_arr = _20113452c_Arr((*(_95135_d)).get()._field_Kind.ptr());;
	(*(_95135_d)).get()._field_Kind=_95217_arr.get()._field_Elem;
	_20110928d_checkIntegerIndexingByData(_self_, _95150_index, (*(_95165_i)).get()._field_Token);
	if ((_2010ee492_IsConst((*(_95150_index)).ptr()) && (_1ee3401b8_AsF64((*(_95150_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_95217_arr.get()._field_N)))) {
		_201100b9c_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _201109de8_indexingSlc(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data>* _96035_d, jule::Ptr<_2010edb23_Data>* _96050_index, jule::Ptr<_200ee67da_IndexingExpr>* _96065_i) {
	jule::Ptr<_20113ca0d_Slc> _96117_slc = _201134791_Slc((*(_96035_d)).get()._field_Kind.ptr());;
	(*(_96035_d)).get()._field_Kind=_96117_slc.get()._field_Elem;
	_20110928d_checkIntegerIndexingByData(_self_, _96050_index, (*(_96065_i)).get()._field_Token);
	if ((!(_2010ee492_IsConst((*(_96050_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_96035_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_205717a51:;
			{
				jule::Ptr<_201014709_SliceExprModel> _97121_m = (*(_96035_d)).get()._field_Model.cast_ptr<_201014709_SliceExprModel>(&__jule_any_type82);;
				jule::F64 _97217_indx = _1ee3401b8_AsF64((*(_96050_index)).get()._field_Constant.ptr());;
				if ((_97217_indx >= static_cast<jule::F64>(_97121_m.get()._field_Elems.len()))) {
					_201100b9c_pushErr(_self_, (*(_96065_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_96035_d)).get()._field_Model=_97121_m.get()._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_97217_indx))];
					(*(_96035_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_2057179b8:;
	};
}



inline void _20110a2b1_indexingMap(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data>* _98235_d, jule::Ptr<_2010edb23_Data>* _98250_index, jule::Ptr<_200ee67da_IndexingExpr>* _98269_i) {
	if (((*(_98250_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_20113e0b4_Map> _98617_m = _201135242_Map((*(_98235_d)).get()._field_Kind.ptr());;
	_2010d91b3_assignTypeChecker _98717_atc = _2010d91b3_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_98617_m.get()._field_Key, ._field_d=(*(_98250_index)), ._field_errorToken=(*(_98269_i)).get()._field_Token};;
	_2010da33a_check(&_98717_atc);
	(*(_98235_d)).get()._field_Kind=_98617_m.get()._field_Val;
}



inline void _20110a679_indexingStr(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data>* _99735_d, jule::Ptr<_2010edb23_Data>* _99750_index, jule::Ptr<_200ee67da_IndexingExpr>* _99765_i) {
	(*(_99735_d)).get()._field_Kind=_2011e717d_primU8;
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	_20110928d_checkIntegerIndexingByData(_self_, _99750_index, (*(_99765_i)).get()._field_Token);
	if ((!(_2010ee492_IsConst((*(_99750_index)).ptr())))) {
		(*(_99735_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_2010ee492_IsConst((*(_99735_d)).ptr())) {
		jule::Ptr<_1ed694d8c_Token> _101217_errorToken = (*(_99765_i)).get()._field_Token;;
		jule::I64 _101317_j = _1ee33ebe0_AsI64((*(_99750_index)).get()._field_Constant.ptr());;
		jule::Str _101417_s = _1ee33e717_ReadStr((*(_99735_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I32>(_101317_j) >= _101417_s.len())) {
			_201100b9c_pushErr(_self_, _101217_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1ee3406b3_SetU64((*(_99735_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101417_s[static_cast<jule::I32>(_101317_j)])));
		};
	};
}



inline void _20110aa42_toIndexing(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data>* _102334_d, jule::Ptr<_2010edb23_Data>* _102349_index, jule::Ptr<_200ee67da_IndexingExpr>* _102368_i) {
	{
		
		if ((_201133ce0_Ptr((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205721461:;
			{
				_201109667_indexingPtr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_20113452c_Arr((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2057214d8:;
			{
				_201109a30_indexingArr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_201134791_Slc((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205721560:;
			{
				_201109de8_indexingSlc(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_201135242_Map((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2057215d7:;
			{
				_20110a2b1_indexingMap(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_201133817_Prim((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20572165e:;
			{
				jule::Ptr<_201138850_Prim> _103817_prim = _201133817_Prim((*(_102334_d)).get()._field_Kind.ptr());;
				{
					
					if (_20113ba51_IsStr(_103817_prim.ptr())) {
						_case_begin_205724d05:;
						{
							_20110a679_indexingStr(_self_, _102334_d, _102349_index, _102368_i);
							return;;
						}
					}
					_match_end_205724c5b:;
				};
			}
		}
		_match_end_20572131d:;
	};
	_201100b9c_pushErr(_self_, (*(_102368_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_102334_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _20110aeb5_pushGenericsFromExprSubIdent(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee2bc1_SubIdentExpr>* _104853_sexpr, jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>* _104914_generics, jule::Ptr<_200ede838_Expr>* _104942_expr) {
	jule::Ptr<_200edb060_SubIdentTypeDecl> _105017_t = jule::new_ptr<_200edb060_SubIdentTypeDecl>();;
	if ((!(_20112d3c2_pushSubIdentFromExpr(jule::Any((*(_104853_sexpr)), &__jule_any_type91), &(_105017_t))))) {
		_201100b9c_pushErr(_self_.ptr(), (*(_104942_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> &__jule_push_dest = (*(_104914_generics)); __jule_push_dest.push(jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Kind=jule::Any(_105017_t, &__jule_any_type92)})); };
	return true;;
}



inline jule::Bool _20110b37d_pushGenericsFromData(jule::Ptr<_201100691_Eval> _self_, jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>* _105945_generics, jule::Ptr<_200ede838_Expr>* _105973_expr) {
	{
		auto &_match_expr{ (*(_105973_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_205728611:;
			{
				jule::Ptr<_200ee1b37_UnaryExpr> _106221_u = (*(_105973_expr)).get()._field_Kind.cast_ptr<_200ee1b37_UnaryExpr>(&__jule_any_type93);;
				{
					auto &_match_expr{ _106221_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_20572906d:;
						{
							jule::Ptr<_200edc193_PtrTypeDecl> _106525_kind = jule::new_ptr<_200edc193_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _106625__generics = jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>::alloc(0LL, 1LL);;
							_20110b37d_pushGenericsFromData(_self_, &(_106625__generics), &(_106221_u.get()._field_Expr));
							_106525_kind.get()._field_Elem=_106625__generics[0LL];
							{ jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=(*(_105973_expr)).get()._field_Token, ._field_Kind=jule::Any(_106525_kind, &__jule_any_type77)})); };
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_205729cb6:;
						{
							jule::Ptr<_200edb6c0_SptrTypeDecl> _107425_kind = jule::new_ptr<_200edb6c0_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _107525__generics = jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>::alloc(0LL, 1LL);;
							_20110b37d_pushGenericsFromData(_self_, &(_107525__generics), &(_106221_u.get()._field_Expr));
							_107425_kind.get()._field_Elem=_107525__generics[0LL];
							{ jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=(*(_105973_expr)).get()._field_Token, ._field_Kind=jule::Any(_107425_kind, &__jule_any_type78)})); };
						}
					}
					else {
						_case_begin_205729766:;
						{
							_201100b9c_pushErr(_self_.ptr(), _106221_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_2057294e1:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_205728886:;
			{
				{ jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push((*(_105973_expr)).get()._field_Kind.cast_ptr<_200eda6ad_TypeDecl>(&__jule_any_type94)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_205728787:;
			{
				jule::Ptr<_200ee2bc1_SubIdentExpr> _108921_sexpr = (*(_105973_expr)).get()._field_Kind.cast_ptr<_200ee2bc1_SubIdentExpr>(&__jule_any_type91);;
				return _20110aeb5_pushGenericsFromExprSubIdent(_self_, &(_108921_sexpr), _105945_generics, _105973_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_205727de6:;
			{
				jule::Ptr<_200ee142d_IdentExpr> _109221_ident = (*(_105973_expr)).get()._field_Kind.cast_ptr<_200ee142d_IdentExpr>(&__jule_any_type85);;
				{ jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_200edac74_IdentTypeDecl>(_200edac74_IdentTypeDecl{._field_Token=_109221_ident.get()._field_Token, ._field_Ident=_109221_ident.get()._field_Ident, ._field_Binded=_109221_ident.get()._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_205727e5c:;
			{
				{
					auto expr = &((*(_105973_expr)).get()._field_Kind.cast_ptr<_200ee04b5_TupleExpr>(&__jule_any_type86).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20573022d:;
					if (it != expr_end) {
						jule::Ptr<_200ede838_Expr> _110125_texpr = *it;
						{
							if ((!(_20110b37d_pushGenericsFromData(_self_, _105945_generics, &(_110125_texpr))))) {
								return false;;
							};
						}
						_iter_next_20573022d:;
						++it;
						goto _iter_begin_20573022d;
					}
					_iter_end_20573022d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_205727ec3:;
			{
				jule::Ptr<_200ee274d_NsSelectionExpr> _110721_ns = (*(_105973_expr)).get()._field_Kind.cast_ptr<_200ee274d_NsSelectionExpr>(&__jule_any_type95);;
				jule::Ptr<_200edac74_IdentTypeDecl> _110821_decl = jule::new_ptr<_200edac74_IdentTypeDecl>(_200edac74_IdentTypeDecl{._field_Token=_110721_ns.get()._field_Ident, ._field_Ident=_110721_ns.get()._field_Ident.get()._field_Kind, });;
				{ jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_110821_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_200edb3d4_NamespaceTypeDecl>(_200edb3d4_NamespaceTypeDecl{._field_Idents=_110721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_110821_decl.get()._field_Token, ._field_Kind=jule::Any(_110821_decl, &__jule_any_type20)})}), &__jule_any_type96)})); };
			}
		}
		else {
			_case_begin_205727d4c:;
			{
				_201100b9c_pushErr(_self_.ptr(), (*(_105973_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_205727ba4:;
	};
	return true;;
}



inline void _20110b6be_evalIdentDeclFromIndexing(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_2010edb23_Data>* _112950_d, jule::Ptr<_200ee67da_IndexingExpr>* _112965_i) {
	jule::Ptr<_20100d071_StructIns> _113017_s = _201134c69_Struct((*(_112950_d)).get()._field_Kind.ptr());;
	if ((_113017_s == nullptr)) {
		_201100b9c_pushErr(_self_.ptr(), (*(_112965_i)).get()._field_Expr.get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_112950_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_112950_d))=nullptr;
		return;;
	};
	jule::Ptr<_200edac74_IdentTypeDecl> _113717_decl = nullptr;;
	{
		auto &_match_expr{ (*(_112965_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_2057352cc:;
			{
				jule::Ptr<_200ee142d_IdentExpr> _114021_expr = (*(_112965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_200ee142d_IdentExpr>(&__jule_any_type85);;
				_113717_decl=jule::new_ptr<_200edac74_IdentTypeDecl>(_200edac74_IdentTypeDecl{._field_Token=_114021_expr.get()._field_Token, ._field_Ident=_114021_expr.get()._field_Ident, ._field_Binded=_114021_expr.get()._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_205736322:;
			{
				jule::Ptr<_200ee274d_NsSelectionExpr> _114721_expr = (*(_112965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_200ee274d_NsSelectionExpr>(&__jule_any_type95);;
				_113717_decl=jule::new_ptr<_200edac74_IdentTypeDecl>(_200edac74_IdentTypeDecl{._field_Token=_114721_expr.get()._field_Ident, ._field_Ident=_114721_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_2057356ea:;
			{
				_201100b9c_pushErr(_self_.ptr(), (*(_112965_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112950_d))=nullptr;
				return;;
			}
		}
		_match_end_205735695:;
	};
	if ((!(_20110b37d_pushGenericsFromData(_self_, &(_113717_decl.get()._field_Generics), &((*(_112965_i)).get()._field_Index))))) {
		(*(_112950_d))=nullptr;
		return;;
	};
	_113017_s=({ auto _wrap_copy = _201112928_typeChecker(_self_.ptr()); _201145e9a_fromStruct(&_wrap_copy, &(_113717_decl), &(_113017_s.get()._field_Decl)); });
	if ((_113017_s == nullptr)) {
		(*(_112950_d))=nullptr;
		return;;
	};
	(*(_112950_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_201130b88_Kind>(_113017_s, 0);
}



inline jule::Bool _20110bb31_checkGenericFn(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_20102330b_FnIns>* _117239_f, jule::Ptr<_1ed694d8c_Token>* _117255_et, jule::Any* _117272_model) {
	jule::Bool _117313_ok = _201091654_reloadFnInsTypes(_self_.get()._field_s, (*(_117239_f)));;
	(*(_117239_f)).get()._field_reloaded=true;
	if ((!(_117313_ok))) {
		return false;;
	};
	jule::Ptr<_20102330b_FnIns> _117817_existInstance = _201022085_appendInstance((*(_117239_f)).get()._field_Decl.ptr(), _117239_f);;
	if ((!(_2010907b8_checkConstraintsFn(_self_.get()._field_s, _117239_f, _117255_et, _117817_existInstance)))) {
		return false;;
	};
	if ((_117817_existInstance != nullptr)) {
		(*(_117239_f))=_117817_existInstance;
		_20112d180_updateModelToGenericIns(_117272_model, &(_117817_existInstance));
	} else {
		_20109eb6d_checkFnInsCaller(_self_.get()._field_s, _117239_f, (*(_117255_et)));
	};
	return true;;
}



inline void _20110be72_evalFnGenericFromIndexing(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_2010edb23_Data>* _119750_d, jule::Ptr<_200ee67da_IndexingExpr>* _119765_i) {
	jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _119817_generics = jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_20110b37d_pushGenericsFromData(_self_, &(_119817_generics), &((*(_119765_i)).get()._field_Index))))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	jule::Ptr<_20102330b_FnIns> _120417_f = _201134a05_Fn((*(_119750_d)).get()._field_Kind.ptr());;
	jule::I32 _120517_genericsLen = 0LL;;
	if ((_120417_f.get()._field_Decl != nullptr)) {
		_120517_genericsLen=static_cast<jule::I32>(_120417_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_201088393_checkGenericQuantity(_self_.get()._field_s.ptr(), _120517_genericsLen, static_cast<jule::I32>(_119817_generics.len()), (*(_119765_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	_120417_f.get()._field_Generics=jule::Slice<jule::Ptr<_20112e868_InsGeneric>>::alloc(0LL, _120417_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_119817_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205740309:;
		if (it != expr_end) {
			jule::Ptr<_200eda6ad_TypeDecl> _121621_g = *it;
			{
				jule::Ptr<_2010edb23_Data> _121721_k = _201112c36_evalType(_self_.ptr(), _121621_g);;
				if ((_121721_k == nullptr)) {
					(*(_119750_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_20112e868_InsGeneric>> &__jule_push_dest = _120417_f.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_20112e868_InsGeneric>(_20112e868_InsGeneric{._field_Kind=_121721_k.get()._field_Kind, })); };
			}
			_iter_next_205740309:;
			++it;
			goto _iter_begin_205740309;
		}
		_iter_end_205740309:;
	};
	if (_201024692_IsBuiltin(_120417_f.ptr())) {
		return;;
	};
	if (_20110bb31_checkGenericFn(_self_, &(_120417_f), &((*(_119765_i)).get()._field_Expr.get()._field_Token), &((*(_119750_d)).get()._field_Model))) {
		(*(_119750_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_201130b88_Kind>(_120417_f, 1);
	} else {
		(*(_119750_d))=nullptr;
	};
}



inline jule::Ptr<_2010edb23_Data> _20110c291_evalIndexing(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee67da_IndexingExpr> _123636_i) {
	jule::Ptr<_2011310ea_TypeKind> _123717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_123717_prefix;
	});;
	jule::Ptr<_2010edb23_Data> _124117_d = _20111b426_evalExprKind(_self_, _123636_i.get()._field_Expr.get()._field_Kind);;
	if ((_124117_d == nullptr)) {
		return nullptr;;
	};
	if (_124117_d.get()._field_Decl) {
		_20110b6be_evalIdentDeclFromIndexing(_self_, &(_124117_d), &(_123636_i));
		return _124117_d;;
	};
	if ((_201134a05_Fn(_124117_d.get()._field_Kind.ptr()) != nullptr)) {
		_20110be72_evalFnGenericFromIndexing(_self_, &(_124117_d), &(_123636_i));
		return _124117_d;;
	};
	_2010edb23_Data _125717_old_d = (*(_124117_d));;
	jule::Ptr<_2010edb23_Data> _125917_index = _201121eba_evalExpr(_self_, _123636_i.get()._field_Index);;
	if ((_125917_index == nullptr)) {
		return nullptr;;
	};
	_124117_d.get()._field_Decl=false;
	_20110aa42_toIndexing(_self_.ptr(), &(_124117_d), &(_125917_index), &(_123636_i));
	if (_2010ee492_IsConst(_124117_d.ptr())) {
		_124117_d.get()._field_Decl=false;
		_124117_d.get()._field_Model=jule::Any(_124117_d.get()._field_Constant, &__jule_any_type19);
	} else if (_124117_d.get()._field_Decl) {
		_124117_d.get()._field_Decl=false;
	} else {
		_124117_d.get()._field_Model=jule::Any(jule::new_ptr<_201014b7c_IndexingExprModel>(_201014b7c_IndexingExprModel{._field_Token=_123636_i.get()._field_Token, ._field_Expr=jule::new_ptr<_2010edb23_Data>(_125717_old_d), ._field_Index=_125917_index}), &__jule_any_type46);
	};
	return _124117_d;;
}



inline __jule_tuple_x_2010edb23_Data__jule_tuple_x_2010edb23_Data _20110c59e_evalSlicingExprs(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee6de5_SlicingExpr>* _129041_s) {
	__jule_tuple_x_2010edb23_Data__jule_tuple_x_2010edb23_Data __jule_func_result;
	jule::Ptr<_2011310ea_TypeKind> _129117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_129117_prefix;
	});;
	jule::Ptr<_2010edb23_Data> _129517_l = nullptr;;
	jule::Ptr<_2010edb23_Data> _129617_r = nullptr;;
	if (((*(_129041_s)).get()._field_Start != nullptr)) {
		_129517_l=_201121eba_evalExpr(_self_, (*(_129041_s)).get()._field_Start);
		if ((_129517_l != nullptr)) {
			_20110928d_checkIntegerIndexingByData(_self_.ptr(), &(_129517_l), (*(_129041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129517_l=jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e618d_primInt, ._field_Constant=static__1ee33cb11_NewI64(0LL)});
		_129517_l.get()._field_Constant.get()._field_Kind=jule::Str("int", 3);
		_129517_l.get()._field_Model=jule::Any(_129517_l.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_129041_s)).get()._field_To != nullptr)) {
		_129617_r=_201121eba_evalExpr(_self_, (*(_129041_s)).get()._field_To);
		if ((_129617_r != nullptr)) {
			_20110928d_checkIntegerIndexingByData(_self_.ptr(), &(_129617_r), (*(_129041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129517_l;
	__jule_func_result.__jule_result_arg1 = _129617_r;
	return __jule_func_result;;
}



inline void _20110c824_slicingArr(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data>* _132630_d) {
	jule::Ptr<_2011310ea_TypeKind> _132717_elemType = _20113452c_Arr((*(_132630_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_132630_d)).get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20113ca0d_Slc>(_20113ca0d_Slc{._field_Elem=_132717_elemType}), 22)});
	(*(_132630_d)).get()._field_Lvalue=false;
	(*(_132630_d)).get()._field_Mutable=((*(_132630_d)).get()._field_Mutable || (!(_20113288d_Mutable(_132717_elemType.ptr()))));
}



inline void _20110cbdc_slicingStr(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data>* _134130_d, jule::Ptr<_2010edb23_Data>* _134141_l, jule::Ptr<_2010edb23_Data>* _134152_r) {
	(*(_134130_d)).get()._field_Lvalue=false;
	(*(_134130_d)).get()._field_Mutable=true;
	if ((!(_2010ee492_IsConst((*(_134130_d)).ptr())))) {
		return;;
	};
	if ((((*(_134141_l)) == nullptr) || ((*(_134152_r)) == nullptr))) {
		(*(_134130_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_2010ee492_IsConst((*(_134141_l)).ptr()) && _2010ee492_IsConst((*(_134152_r)).ptr()))) {
		jule::I64 _135417_left = _1ee33ebe0_AsI64((*(_134141_l)).get()._field_Constant.ptr());;
		if ((_135417_left < 0LL)) {
			return;;
		};
		jule::Str _135917_s = _1ee33e717_ReadStr((*(_134130_d)).get()._field_Constant.ptr());;
		jule::I64 _136021_right = 0LL;;
		if (((*(_134152_r)) == nullptr)) {
			_136021_right=static_cast<jule::I64>(static_cast<jule::I64>(_135917_s.len()));
		} else {
			_136021_right=static_cast<jule::I64>(_1ee33ebe0_AsI64((*(_134152_r)).get()._field_Constant.ptr()));
		};
		if ((_135417_left > _136021_right)) {
			return;;
		};
		_1ee340bad_SetStr((*(_134130_d)).get()._field_Constant.ptr(), _135917_s.slice(static_cast<jule::I32>(_135417_left), static_cast<jule::I32>(_136021_right)));
		(*(_134130_d)).get()._field_Decl=true;
	} else {
		(*(_134130_d)).get()._field_Constant=nullptr;
	};
}



inline void _20110d14e_checkSlicing(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data>* _137736_d, jule::Ptr<_2010edb23_Data>* _137747_l, jule::Ptr<_2010edb23_Data>* _137758_r, jule::Ptr<_200ee6de5_SlicingExpr>* _137769_s) {
	{
		
		if ((_20113452c_Arr((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205755cd1:;
			{
				_20110c824_slicingArr(_self_, _137736_d);
				return;;
			}
		}
		else if ((_201134791_Slc((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205755d58:;
			{
				return;;
			}
		}
		else if ((_201133817_Prim((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205755dd0:;
			{
				jule::Ptr<_201138850_Prim> _138517_prim = _201133817_Prim((*(_137736_d)).get()._field_Kind.ptr());;
				{
					
					if (_20113ba51_IsStr(_138517_prim.ptr())) {
						_case_begin_205757e8c:;
						{
							_20110cbdc_slicingStr(_self_, _137736_d, _137747_l, _137758_r);
							return;;
						}
					}
					_match_end_205757de3:;
				};
			}
		}
		_match_end_205755bb0:;
	};
	_201100b9c_pushErr(_self_, (*(_137769_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_137736_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_2010edb23_Data> _20110d45c_evalSlicing(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee6de5_SlicingExpr> _139635_s) {
	jule::Ptr<_2010edb23_Data> _139717_d = _201121eba_evalExpr(_self_, _139635_s.get()._field_Expr);;
	if ((_139717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2010edb23_Data> _140218_l;;
	jule::Ptr<_2010edb23_Data> _140225_r;;
	({
		__jule_tuple_x_2010edb23_Data__jule_tuple_x_2010edb23_Data __jule_assign_result = _20110c59e_evalSlicingExprs(_self_, &(_139635_s));
		_140218_l = __jule_assign_result.__jule_result_arg0;
		_140225_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140218_l == nullptr)) {
		return _139717_d;;
	};
	_139717_d.get()._field_Decl=false;
	_20110d14e_checkSlicing(_self_.ptr(), &(_139717_d), &(_140218_l), &(_140225_r), &(_139635_s));
	if (_2010ee492_IsConst(_139717_d.ptr())) {
		_139717_d.get()._field_Decl=false;
		_139717_d.get()._field_Model=jule::Any(_139717_d.get()._field_Constant, &__jule_any_type19);
	} else if (_139717_d.get()._field_Decl) {
		_139717_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_201015d9d_SlicingExprModel> _142021_model = jule::new_ptr<_201015d9d_SlicingExprModel>(_201015d9d_SlicingExprModel{._field_Token=_139635_s.get()._field_Token, ._field_Expr=_139717_d.get()._field_Model, ._field_Left=_140218_l.get()._field_Model, });;
		if ((_140225_r != nullptr)) {
			_142021_model.get()._field_Right=_140225_r.get()._field_Model;
		};
		_139717_d.get()._field_Model=jule::Any(_142021_model, &__jule_any_type97);
	};
	return _139717_d;;
}



inline void _20110d825_castPtr(_201100691_Eval* _self_, jule::Ptr<_2011310ea_TypeKind> _143330_t, jule::Ptr<_2010edb23_Data> _143348_d, jule::Ptr<_1ed694d8c_Token> _143358_errorToken) {
	_143348_d.get()._field_Constant=nullptr;
	jule::Ptr<_20113c0a1_Sptr> _143513_sptr = _201133a7b_Sptr(_143348_d.get()._field_Kind.ptr());;
	if ((_143513_sptr != nullptr)) {
		if ((!(_2011317b0_Equal(_201133ce0_Ptr(_143330_t.ptr()).get()._field_Elem, _143513_sptr.get()._field_Elem)))) {
			_201100b9c_pushErr(_self_, _143358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_143348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_143330_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_2011015d7_isUnsafe(_self_)))) {
		_201100b9c_pushErr(_self_, _143358_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_201138850_Prim> _144813_prim = _201133817_Prim(_143348_d.get()._field_Kind.ptr());;
	if (((_201133ce0_Ptr(_143348_d.get()._field_Kind.ptr()) == nullptr) && ((_144813_prim == nullptr) || (!(_1ee33bbcb_IsInt(_201138b80_Str(_144813_prim.ptr()))))))) {
		_201100b9c_pushErr(_self_, _143358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_143348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_143330_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _20110dbdd_castStruct(_201100691_Eval* _self_, jule::Ptr<_2011310ea_TypeKind> _145433_t, jule::Ptr<_2010edb23_Data> _145451_d, jule::Ptr<_1ed694d8c_Token> _145461_errorToken) {
	_145451_d.get()._field_Constant=nullptr;
	jule::Ptr<_20103287b_Trait> _145617_tr = _201134ecd_Trait(_145451_d.get()._field_Kind.ptr());;
	if ((_145617_tr == nullptr)) {
		_201100b9c_pushErr(_self_, _145461_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_145451_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_145433_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_20100d071_StructIns> _146217_s = _201134c69_Struct(_145433_t.ptr());;
	_205769b3b_pushReference(_self_, &(_146217_s));
	if ((!(_20100b778_IsImplements(_146217_s.get()._field_Decl.ptr(), _145617_tr)))) {
		_201100b9c_pushErr(_self_, _145461_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_145451_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_145433_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _20110e0a6_castRef(_201100691_Eval* _self_, jule::Ptr<_2011310ea_TypeKind> _147030_t, jule::Ptr<_2010edb23_Data> _147048_d, jule::Ptr<_1ed694d8c_Token> _147058_errorToken) {
	_147048_d.get()._field_Constant=nullptr;
	jule::Ptr<_20113c0a1_Sptr> _147217_sptr = _201133a7b_Sptr(_147030_t.ptr());;
	jule::Ptr<_201140615_Ptr> _147417_ptr = _201133ce0_Ptr(_147048_d.get()._field_Kind.ptr());;
	if (((_147417_ptr != nullptr) && _2011317b0_Equal(_147217_sptr.get()._field_Elem, _147417_ptr.get()._field_Elem))) {
		if ((!(_2011015d7_isUnsafe(_self_)))) {
			_201100b9c_pushErr(_self_, _147058_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_201134c69_Struct(_147217_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_20110dbdd_castStruct(_self_, _147217_sptr.get()._field_Elem, _147048_d, _147058_errorToken);
		return;;
	};
	_201100b9c_pushErr(_self_, _147058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_147048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_147030_t.ptr()), &__jule_any_type5)}));
}



inline void _20110e46e_castSlc(_201100691_Eval* _self_, jule::Ptr<_2011310ea_TypeKind> _149230_t, jule::Ptr<_2010edb23_Data> _149248_d, jule::Ptr<_1ed694d8c_Token> _149258_errorToken) {
	jule::Ptr<_1ee33c6d2_Const> _149313_c = _149248_d.get()._field_Constant;;
	_149248_d.get()._field_Constant=nullptr;
	if ((_201134054_Enum(_149248_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_201133817_Prim(_201134054_Enum(_149248_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_20113ba51_IsStr(_201133817_Prim(_201134054_Enum(_149248_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_201100b9c_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_149230_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_201133817_Prim(_149248_d.get()._field_Kind.ptr()) == nullptr) || (!(_20113ba51_IsStr(_201133817_Prim(_149248_d.get()._field_Kind.ptr()).ptr()))))) {
		_201100b9c_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_149230_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_149230_t=_201134791_Slc(_149230_t.ptr()).get()._field_Elem;
	jule::Ptr<_201138850_Prim> _150713_prim = _201133817_Prim(_149230_t.ptr());;
	if (((_150713_prim == nullptr) || ((!(_20113a126_IsU8(_150713_prim.ptr()))) && (!(_201139b4d_IsI32(_150713_prim.ptr())))))) {
		_201100b9c_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_149230_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	if ((_149313_c != nullptr)) {
		{
			
			if (_20113a126_IsU8(_150713_prim.ptr())) {
				_case_begin_20577b202:;
				{
					jule::Slice<jule::U8> _151721_bytes = static_cast<jule::Slice<jule::U8>>(_1ee33e717_ReadStr(_149313_c.ptr()));;
					jule::Ptr<_201014709_SliceExprModel> _151825_model = jule::new_ptr<_201014709_SliceExprModel>(_201014709_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _151721_bytes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_151721_bytes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_20577c786:;
						if (it != expr_end) {
							jule::U8 *_152224_b = it;
							{
								jule::Ptr<_1ee33c6d2_Const> _152329_bc = static__1ee33cda8_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_152224_b)))));;
								_152329_bc.get()._field_Kind=_150713_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _151825_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_152329_bc, &__jule_any_type19)); };
							}
							_iter_next_20577c786:;
							++it;
							goto _iter_begin_20577c786;
						}
						_iter_end_20577c786:;
					};
					_149248_d.get()._field_Model=jule::Any(_151825_model, &__jule_any_type82);
					_149248_d.get()._field_Decl=true;
				}
			}
			else if (_201139b4d_IsI32(_150713_prim.ptr())) {
				_case_begin_20577b279:;
				{
					jule::Slice<jule::I32> _153021_runes = static_cast<jule::Slice<jule::I32>>(_1ee33e717_ReadStr(_149313_c.ptr()));;
					jule::Ptr<_201014709_SliceExprModel> _153125_model = jule::new_ptr<_201014709_SliceExprModel>(_201014709_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153021_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153021_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2057801c3:;
						if (it != expr_end) {
							jule::I32 *_153524_r = it;
							{
								jule::Ptr<_1ee33c6d2_Const> _153629_rc = static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_153524_r)))));;
								_153629_rc.get()._field_Kind=_150713_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _153125_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_153629_rc, &__jule_any_type19)); };
							}
							_iter_next_2057801c3:;
							++it;
							goto _iter_begin_2057801c3;
						}
						_iter_end_2057801c3:;
					};
					_149248_d.get()._field_Model=jule::Any(_153125_model, &__jule_any_type82);
					_149248_d.get()._field_Decl=true;
				}
			}
			_match_end_20577b0e2:;
		};
	};
}



inline void _20110e78d_castStr(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data> _154630_d, jule::Ptr<_1ed694d8c_Token> _154640_errorToken) {
	if ((_201134054_Enum(_154630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20103510e_Enum> _154821_e = _201134054_Enum(_154630_d.get()._field_Kind.ptr());;
		if (((_201133817_Prim(_154821_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _20113ba51_IsStr(_201133817_Prim(_154821_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ee33c6d2_Const> _155413_c = _154630_d.get()._field_Constant;;
	_154630_d.get()._field_Constant=nullptr;
	if ((_201133817_Prim(_154630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_201138850_Prim> _155717_prim = _201133817_Prim(_154630_d.get()._field_Kind.ptr());;
		if (((!(_20113a126_IsU8(_155717_prim.ptr()))) && (!(_201139b4d_IsI32(_155717_prim.ptr()))))) {
			_201100b9c_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_2011314a2_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
		if ((_155413_c != nullptr)) {
			{
				
				if (_20113a126_IsU8(_155717_prim.ptr())) {
					_case_begin_205785cab:;
					{
						_154630_d.get()._field_Constant=static__1ee33d3e7_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1ee33ee54_AsU64(_155413_c.ptr()))));
						_154630_d.get()._field_Model=jule::Any(_154630_d.get()._field_Constant, &__jule_any_type19);
						_154630_d.get()._field_Decl=true;
					}
				}
				else if (_201139b4d_IsI32(_155717_prim.ptr())) {
					_case_begin_205785d33:;
					{
						_154630_d.get()._field_Constant=static__1ee33d3e7_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1ee33ebe0_AsI64(_155413_c.ptr()))));
						_154630_d.get()._field_Model=jule::Any(_154630_d.get()._field_Constant, &__jule_any_type19);
						_154630_d.get()._field_Decl=true;
					}
				}
				_match_end_205785b9b:;
			};
		};
		return;;
	};
	jule::Ptr<_20113ca0d_Slc> _157817_s = _201134791_Slc(_154630_d.get()._field_Kind.ptr());;
	if ((_157817_s == nullptr)) {
		_201100b9c_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_2011314a2_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_2011310ea_TypeKind> _158417_t = _157817_s.get()._field_Elem;;
	jule::Ptr<_201138850_Prim> _158513_prim = _201133817_Prim(_158417_t.ptr());;
	if (((_158513_prim == nullptr) || ((!(_20113a126_IsU8(_158513_prim.ptr()))) && (!(_201139b4d_IsI32(_158513_prim.ptr())))))) {
		_201100b9c_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_2011314a2_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
}



inline void _20110eb56_castInt(_201100691_Eval* _self_, jule::Ptr<_2011310ea_TypeKind> _159230_t, jule::Ptr<_2010edb23_Data> _159248_d, jule::Ptr<_1ed694d8c_Token> _159258_errorToken) {
	if (_2010ee492_IsConst(_159248_d.ptr())) {
		jule::Ptr<_201138850_Prim> _159417_prim = _201133817_Prim(_159230_t.ptr());;
		{
			
			if (_1ee33b648_IsSigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_20578c356:;
				{
					_1ee34043d_SetI64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ee33ebe0_AsI64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ee33b934_IsUnsigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_20578c3cd:;
				{
					_1ee3406b3_SetU64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ee33ee54_AsU64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_20578c29b:;
		};
	} else {
		_159248_d.get()._field_Constant=nullptr;
	};
	if ((_201134054_Enum(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20103510e_Enum> _160617_e = _201134054_Enum(_159248_d.get()._field_Kind.ptr());;
		if (_1ee33c292_IsNum(_2011314a2_Str(_160617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_201133a7b_Sptr(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_201138850_Prim> _161317_prim = _201133817_Prim(_159230_t.ptr());;
		if ((!(_20113b578_IsUintptr(_161317_prim.ptr())))) {
			_201100b9c_pushErr(_self_, _159258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_159230_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_201133ce0_Ptr(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_201138850_Prim> _162017_prim = _201133817_Prim(_159230_t.ptr());;
		if (_20113b578_IsUintptr(_162017_prim.ptr())) {
		} else if ((!(_2011015d7_isUnsafe(_self_)))) {
			_201100b9c_pushErr(_self_, _159258_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_201138850_Prim> _162913_prim = _201133817_Prim(_159248_d.get()._field_Kind.ptr());;
	if (((_162913_prim != nullptr) && _1ee33c292_IsNum(_201138b80_Str(_162913_prim.ptr())))) {
		return;;
	};
	_201100b9c_pushErr(_self_, _159258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_159230_t.ptr()), &__jule_any_type5)}));
}



inline void _20111001e_castNum(_201100691_Eval* _self_, jule::Ptr<_2011310ea_TypeKind> _163730_t, jule::Ptr<_2010edb23_Data> _163748_d, jule::Ptr<_1ed694d8c_Token> _163758_errorToken) {
	if (_2010ee492_IsConst(_163748_d.ptr())) {
		jule::Ptr<_201138850_Prim> _163917_prim = _201133817_Prim(_163730_t.ptr());;
		{
			
			if (_1ee33beea_IsFloat(_163917_prim.get()._field_Kind)) {
				_case_begin_205795826:;
				{
					_1ee340e33_SetF64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1ee3401b8_AsF64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ee33b648_IsSigInt(_163917_prim.get()._field_Kind)) {
				_case_begin_20579589d:;
				{
					_1ee34043d_SetI64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ee33ebe0_AsI64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ee33b934_IsUnsigInt(_163917_prim.get()._field_Kind)) {
				_case_begin_205795925:;
				{
					_1ee3406b3_SetU64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ee33ee54_AsU64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_20579575a:;
		};
	} else {
		_163748_d.get()._field_Constant=nullptr;
	};
	if ((_201134054_Enum(_163748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_20103510e_Enum> _165317_e = _201134054_Enum(_163748_d.get()._field_Kind.ptr());;
		if (_1ee33c292_IsNum(_2011314a2_Str(_165317_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_201138850_Prim> _165913_prim = _201133817_Prim(_163748_d.get()._field_Kind.ptr());;
	if (((_165913_prim != nullptr) && _1ee33c292_IsNum(_201138b80_Str(_165913_prim.ptr())))) {
		return;;
	};
	_201100b9c_pushErr(_self_, _163758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_163748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_163730_t.ptr()), &__jule_any_type5)}));
}



inline void _2011103d7_castPrim(_201100691_Eval* _self_, jule::Ptr<_2011310ea_TypeKind> _166731_t, jule::Ptr<_2010edb23_Data> _166749_d, jule::Ptr<_1ed694d8c_Token> _166759_errorToken) {
	jule::Ptr<_201138850_Prim> _166813_prim = _201133817_Prim(_166731_t.ptr());;
	{
		
		if (_20113bcb5_IsAny(_166813_prim.ptr())) {
			_case_begin_20579ae14:;
			{
				_166749_d.get()._field_Constant=nullptr;
			}
		}
		else if (_20113ba51_IsStr(_166813_prim.ptr())) {
			_case_begin_20579b3cb:;
			{
				_20110e78d_castStr(_self_, _166749_d, _166759_errorToken);
			}
		}
		else if (_1ee33bbcb_IsInt(_201138b80_Str(_166813_prim.ptr()))) {
			_case_begin_20579b442:;
			{
				_20110eb56_castInt(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else if (_1ee33c292_IsNum(_201138b80_Str(_166813_prim.ptr()))) {
			_case_begin_20579b4b9:;
			{
				_20111001e_castNum(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else {
			_case_begin_20579b365:;
			{
				_201100b9c_pushErr(_self_, _166759_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_166731_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_20579b2ee:;
	};
}



inline void _201110706_castConstant(_201100691_Eval* _self_, jule::Ptr<_2011310ea_TypeKind>* _168436_t, jule::Ptr<_2010edb23_Data>* _168455_d) {
	if ((((*(_168455_d)) == nullptr) || (!(_2010ee492_IsConst((*(_168455_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_201138850_Prim> _168813_prim = _201133817_Prim((*(_168436_t)).ptr());;
	_20112cb74_castConstByType(&(_168813_prim.get()._field_Kind), _168455_d);
	(*(_168455_d)).get()._field_Model=jule::Any((*(_168455_d)).get()._field_Constant, &__jule_any_type19);
}



inline void _201110abe_castTypeEnum(_201100691_Eval* _self_, jule::Ptr<_2011310ea_TypeKind>* _169336_t, jule::Ptr<_2010edb23_Data>* _169355_d, jule::Ptr<_1ed694d8c_Token>* _169370_errorToken) {
	jule::I32 _169413_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_20108e6da_checkTypeCompatibility((*(_self_))._field_s, &((*(_169355_d)).get()._field_Kind), _169336_t, _169370_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _169413_n);
		_201100b9c_pushErr(_self_, (*(_169370_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_169355_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str((*(_169336_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_169355_d)).get()._field_Constant=nullptr;
}



inline void _201110e87_castTypeEnumT(_201100691_Eval* _self_, jule::Ptr<_2011310ea_TypeKind>* _170237_t, jule::Ptr<_2010edb23_Data>* _170256_d, jule::Ptr<_1ed694d8c_Token>* _170271_errorToken) {
	jule::I32 _170313_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_20108e6da_checkTypeCompatibility((*(_self_))._field_s, _170237_t, &((*(_170256_d)).get()._field_Kind), _170271_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _170313_n);
		_201100b9c_pushErr(_self_, (*(_170271_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_170256_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str((*(_170237_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_170256_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_2010edb23_Data> _2011113d8_evalCastByTypeNData(_201100691_Eval* _self_, jule::Ptr<_2011310ea_TypeKind> _171142_t, jule::Ptr<_2010edb23_Data> _171160_d, jule::Ptr<_1ed694d8c_Token> _171174_errorToken) {
	if (((_171160_d != nullptr) && _171160_d.get()._field_Decl)) {
		_201100b9c_pushErr(_self_, _171174_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_2010edeb9_IsNil(_171160_d.ptr())) {
			_case_begin_2057a6b67:;
			{
				if ((!(_201132d66_NilCompatible(_171142_t.ptr())))) {
					_201100b9c_pushErr(_self_, _171174_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_2011314a2_Str(_171142_t.ptr()), &__jule_any_type5)}));
				};
				_171160_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_201133817_Prim(_171160_d.get()._field_Kind.ptr()) != nullptr) && _20113bcb5_IsAny(_201133817_Prim(_171160_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2057a63a3:;
			{
				if ((_201134054_Enum(_171142_t.ptr()) != nullptr)) {
					_201100b9c_pushErr(_self_, _171174_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_201100ebb_pushSuggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_2011342b8_TypeEnum(_171142_t.ptr()) != nullptr)) {
					_201100b9c_pushErr(_self_, _171174_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_171160_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_2011342b8_TypeEnum(_171160_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2057a61a5:;
			{
				_201110abe_castTypeEnum(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_2011342b8_TypeEnum(_171142_t.ptr()) != nullptr)) {
			_case_begin_2057a621b:;
			{
				_201110e87_castTypeEnumT(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_201133ce0_Ptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_2057a6caa:;
			{
				_20110d825_castPtr(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_201133a7b_Sptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_2057a6d21:;
			{
				_20110e0a6_castRef(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_201134791_Slc(_171142_t.ptr()) != nullptr)) {
			_case_begin_2057a6d87:;
			{
				_20110e46e_castSlc(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_201134c69_Struct(_171142_t.ptr()) != nullptr)) {
			_case_begin_2057a6ded:;
			{
				_20110dbdd_castStruct(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_201133817_Prim(_171142_t.ptr()) != nullptr)) {
			_case_begin_2057a6e64:;
			{
				_2011103d7_castPrim(_self_, _171142_t, _171160_d, _171174_errorToken);
				_201110706_castConstant(_self_, &(_171142_t), &(_171160_d));
			}
		}
		else {
			_case_begin_2057a57c0:;
			{
				_201100b9c_pushErr(_self_, _171174_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_171142_t.ptr()), &__jule_any_type5)}));
				_171160_d=nullptr;
			}
		}
		_match_end_2057a5902:;
	};
	if ((_171160_d == nullptr)) {
		return nullptr;;
	};
	_171160_d.get()._field_Mutable=(_171160_d.get()._field_Mutable || ((!(_20113288d_Mutable(_171160_d.get()._field_Kind.ptr()))) && _20113288d_Mutable(_171142_t.ptr())));
	if (((!(_171160_d.get()._field_Decl)) && ((_201134054_Enum(_171160_d.get()._field_Kind.ptr()) == nullptr) || (!(_2011317b0_Equal(_201134054_Enum(_171160_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _171142_t)))))) {
		_20112c13a_applyCastKind(&(_171160_d), &(_171142_t));
		_171160_d.get()._field_Model.cast_ptr<_2010139a0_CastingExprModel>(&__jule_any_type98).get()._field_Token=_171174_errorToken;
	} else {
		_171160_d.get()._field_Kind=_171142_t;
	};
	_171160_d.get()._field_Decl=false;
	_171160_d.get()._field_Lvalue=false;
	_171160_d.get()._field_untyped=false;
	if (_2010ee492_IsConst(_171160_d.ptr())) {
		_171160_d.get()._field_Constant.get()._field_Kind=_201133817_Prim(_171142_t.ptr()).get()._field_Kind;
	};
	return _171160_d;;
}



inline jule::Ptr<_2010edb23_Data> _201111839_evalCastT(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_2011310ea_TypeKind>* _178234_t, jule::Ptr<_200ede838_Expr>* _178253_e, jule::Ptr<_1ed694d8c_Token>* _178268_et) {
	jule::Ptr<_2011310ea_TypeKind> _178317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_178317_prefix;
	});;
	if ((_201134791_Slc((*(_178234_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_178253_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_2057b3877:;
				{
					_self_.get()._field_prefix=(*(_178234_t));
				}
			}
			_match_end_2057b37cd:;
		};
	};
	jule::Ptr<_2010edb23_Data> _179217_d = _201121eba_evalExpr(_self_, (*(_178253_e)));;
	if (((_179217_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _179217_d;;
	};
	return _2011113d8_evalCastByTypeNData(_self_.ptr(), (*(_178234_t)), _179217_d, (*(_178268_et)));;
}



inline jule::Ptr<_2010edb23_Data> _201111b47_evalCast(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee2396_CastExpr> _179932_c) {
	jule::Ptr<_201137e9d_TypeSymbol> _180017_t = _2010278e8_buildType(_179932_c.get()._field_Kind);;
	jule::Bool _180113_ok = _20108c60b_checkType(_self_.get()._field_s, &(_180017_t), _self_.get()._field_lookup);;
	if ((!(_180113_ok))) {
		return nullptr;;
	};
	return _201111839_evalCastT(_self_, &(_180017_t.get()._field_Kind), &(_179932_c.get()._field_Expr), &(_179932_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_2010edb23_Data> _201111e55_evalNsSelection(_201100691_Eval* _self_, jule::Ptr<_200ee274d_NsSelectionExpr> _180834_s) {
	jule::Str _180913_path = _20114b6dc_buildLinkPathByTokens(&(_180834_s.get()._field_Ns));;
	jule::Ptr<_20107b397_ImportInfo> _181017_imp = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114c8db_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)>([=](jule::Ptr<_20107b397_ImportInfo> _181052_imp) mutable -> jule::Bool {
		if (((_180834_s.get()._field_Ns.len() == 1LL) && (_181052_imp.get()._field_Alias == _180913_path))) {
			return true;;
		};
		return ((_181052_imp.get()._field_LinkPath == _180913_path) && _20107dbd5_isAccessibleViaSelection(_181052_imp.ptr()));;
	}));;
	if ((_181017_imp == nullptr)) {
		_201100b9c_pushErr(_self_, _180834_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_180913_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_20114e426_Lookup> _182217_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_20114e426_Lookup>(_181017_imp, 1);
	;
	_201101373_disallowBuiltin(_self_);
	jule::Any _182717_def = _201103bb1_getDef(_self_, _180834_s.get()._field_Ident.get()._field_Kind, false);;
	_201101197_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_182217_lookup;
	jule::Ptr<_2010edb23_Data> _183017_d = _201107698_evalDef(_self_, _182717_def, _180834_s.get()._field_Ident);;
	return _183017_d;;
}



inline jule::Ptr<_2010edb23_Data> _2011123a6_evalStructLitExplicit(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_20100d071_StructIns> _183445_s, jule::Slice<jule::Ptr<_200ede838_Expr>> _183513_exprs, jule::Ptr<_1ed694d8c_Token> _183533_errorToken) {
	jule::Bool _183613_ok = _201088393_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_183445_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_183445_s.get()._field_Generics.len()), _183533_errorToken);;
	if ((!(_183613_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _183445_s.get()._field_Decl))) {
		_201100b9c_pushErr(_self_.ptr(), _183533_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_183445_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_205769b3b_pushReference(_self_.ptr(), &(_183445_s));
	_201105aa3_checkDeprecated(_self_.ptr(), &(_183445_s.get()._field_Decl.get()._field_Directives), _183533_errorToken);
	_2010e2e69_structLitChecker _184917_slc = _2010e2e69_structLitChecker{._field_e=_self_, ._field_errorToken=_183533_errorToken, ._field_s=_183445_s, };;
	_2010e450e_check(&_184917_slc, &(_183513_exprs));
	jule::Ptr<_2010edb23_Data> _185617_d = jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_183445_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_201013142_StructLitExprModel>(_201013142_StructLitExprModel{._field_Strct=_183445_s, ._field_Args=_184917_slc._field_args}), &__jule_any_type100), });;
	if (_183445_s.get()._field_Decl.get()._field_Binded) {
		_185617_d.get()._field_Kind.get()._field_BindIdent=_183445_s.get()._field_Decl.get()._field_Ident;
	};
	return _185617_d;;
}



inline jule::Ptr<_2010edb23_Data> _2011126b4_evalStructLit(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee49a3_StructLit> _187237_lit) {
	jule::Ptr<_201137e9d_TypeSymbol> _187317_t = _2010278e8_buildType(_187237_lit.get()._field_Kind);;
	jule::Bool _187413_ok = _20108c60b_checkType(_self_.get()._field_s, &(_187317_t), _self_.get()._field_lookup);;
	if ((!(_187413_ok))) {
		return nullptr;;
	};
	jule::Ptr<_20100d071_StructIns> _187917_s = _201134c69_Struct(_187317_t.get()._field_Kind.ptr());;
	if ((_187917_s == nullptr)) {
		if ((_201133a7b_Sptr(_187317_t.get()._field_Kind.ptr()) != nullptr)) {
			_187917_s=_201134c69_Struct(_201133a7b_Sptr(_187317_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_187917_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_201100b9c_pushErr(_self_.ptr(), _187237_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_2010edb23_Data> _189217_d = _2011123a6_evalStructLitExplicit(_self_, _187917_s, _187237_lit.get()._field_Exprs, _187237_lit.get()._field_Kind.get()._field_Token);;
	if ((_201133a7b_Sptr(_187317_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_201013142_StructLitExprModel> _189421_model = _189217_d.get()._field_Model.cast_ptr<_201013142_StructLitExprModel>(&__jule_any_type100);;
		_20112a9eb_makeStructLitAlloc(&(_189217_d), &(_189421_model));
	};
	return _189217_d;;
}



inline _20114243b_typeChecker _201112928_typeChecker(_201100691_Eval* _self_) {
	return _20108b4ea_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_2010edb23_Data> _201112c36_evalType(_201100691_Eval* _self_, jule::Ptr<_200eda6ad_TypeDecl> _190431_t) {
	jule::Ptr<_201137e9d_TypeSymbol> _190517_tk = _2010278e8_buildType(_190431_t);;
	jule::Bool _190613_ok = _20108c60b_checkType((*(_self_))._field_s, &(_190517_tk), (*(_self_))._field_lookup);;
	if ((!(_190613_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_190517_tk.get()._field_Kind, ._field_Model=jule::Any(_190517_tk.get()._field_Kind, &__jule_any_type89), ._field_Decl=true, });;
}



inline void _201113055_callTypeFn(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee374e_FnCallExpr>* _191735_fc, jule::Ptr<_2010edb23_Data>* _191757_d) {
	if (((*(_191735_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_191735_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_191757_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_191735_fc)).get()._field_IsCo) {
		_201100b9c_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	} else if (((*(_191735_fc)).get()._field_Exception != nullptr)) {
		_201100b9c_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	};
	if (((*(_191735_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_200ede838_Expr> _193321_arg = (*(_191735_fc)).get()._field_Args[0LL];;
		(*(_191757_d))=_201111839_evalCastT(_self_, &((*(_191757_d)).get()._field_Kind), &(_193321_arg), &(_193321_arg.get()._field_Token));
		return;;
	};
	if (((*(_191757_d)) != nullptr)) {
		(*(_191757_d)).get()._field_Decl=false;
	};
}



inline void _201113374_callBuiltinFn(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee374e_FnCallExpr>* _194338_fc, jule::Ptr<_2010edb23_Data>* _194360_d) {
	if ((!(_200ee3ab2_Unhandled((*(_194338_fc)).ptr())))) {
		_201100b9c_pushErr(_self_.ptr(), (*(_194338_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_194360_d))=_201134a05_Fn((*(_194360_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _194338_fc, _194360_d);
	if (((*(_194360_d)) == nullptr)) {
		return;;
	};
	(*(_194360_d)).get()._field_Mutable=true;
}



inline void _2011136b5_checkFnOfConcurrentCall(_201100691_Eval* _self_, jule::Ptr<_20102330b_FnIns>* _195543_f, jule::Ptr<_1ed694d8c_Token> _195554_errorToken) {
	if (_2011015d7_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_195543_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2057d22ad:;
		if (it != expr_end) {
			jule::Ptr<_20102243c_ParamIns> *_195916_p = it;
			{
				if (_20101e406_IsSelf((*(_195916_p)).get()._field_Decl.ptr())) {
					if ((!(_20101e66a_IsRef((*(_195916_p)).get()._field_Decl.ptr())))) {
						_201100b9c_pushErr(_self_, _195554_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_201100ebb_pushSuggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_195916_p)).get()._field_Decl.get()._field_Reference) {
					_201100b9c_pushErr(_self_, _195554_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_201100ebb_pushSuggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_2057d22ad:;
			++it;
			goto _iter_begin_2057d22ad;
		}
		_iter_end_2057d22ad:;
	};
}



inline void _201113ab1_processExceptionalHandler(_201100691_Eval* _self_, jule::Ptr<_20102330b_FnIns>* _197449_f, jule::Ptr<_200ee374e_FnCallExpr>* _197465_fc, jule::Ptr<_2010edb23_Data>* _197487_d) {
	jule::Bool _197513_resultNeeded = ((!(_201020abc_IsVoid((*(_197449_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_20106455b_scopeChecker> _197617_csc = nullptr;;
	jule::Ptr<_20105c92d_Scope> _197717_ch = nullptr;;
	jule::Ptr<_201014352_FnCallExprModel> _197917_model = (*(_197487_d)).get()._field_Model.cast_ptr<_201014352_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_20106455b_scopeChecker> _198317_sc = (*(_self_))._field_lookup.cast_ptr<_20106455b_scopeChecker>(0);;
	_197617_csc=_201074714_newChildChecker(_198317_sc);
	if (_197513_resultNeeded) {
		_197617_csc.get()._field_result=(*(_197449_f));
	};
	_197717_ch=_201068b37_getChild(_198317_sc.ptr());
	(*(_197465_fc)).get()._field_Exception.get()._field_Parent=_198317_sc.get()._field_tree;
	{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = _197617_csc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_20112ad3c_buildErrorVar(&(_197717_ch), _197465_fc)); };
	_201069000_checkChildSsc(_198317_sc, &((*(_197465_fc)).get()._field_Exception), &(_197717_ch), &(_197617_csc));
	_197917_model.get()._field_Assigned=_197513_resultNeeded;
	_197917_model.get()._field_Except=_197717_ch;
	if ((_197513_resultNeeded && (_197617_csc.get()._field_result != nullptr))) {
		_201100b9c_pushErr(_self_, (*(_197465_fc)).get()._field_Token, jule::Str("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _201113de1_callFn(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee374e_FnCallExpr>* _200131_fc, jule::Ptr<_2010edb23_Data>* _200153_d) {
	jule::Ptr<_20102330b_FnIns> _200217_f = _201134a05_Fn((*(_200153_d)).get()._field_Kind.ptr());;
	if (_201024692_IsBuiltin(_200217_f.ptr())) {
		_201113374_callBuiltinFn(_self_, _200131_fc, _200153_d);
		return;;
	};
	if ((_20110184b_isGlobal(_self_.ptr()) && _200217_f.get()._field_Decl.get()._field_Exceptional)) {
		_201100b9c_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_201100ebb_pushSuggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((!(_201020d31_IsMethod(_200217_f.get()._field_Decl.ptr()))) && _20114a840_hasDirective(&(_200217_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_201100b9c_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((((!((*(_200153_d)).get()._field_Mutable)) && _201020d31_IsMethod(_200217_f.get()._field_Decl.ptr())) && (!(_200217_f.get()._field_Decl.get()._field_Statically))) && _200217_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_201100b9c_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	} else if (((!(_2011015d7_isUnsafe(_self_.ptr()))) && _200217_f.get()._field_Decl.get()._field_Unsafety)) {
		_201100b9c_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _202617_dynamicAnnotation = (((_200217_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_200217_f.get()._field_Generics.len() == 0LL)) && (_200217_f.get()._field_Params.len() > 0LL));;
	if (_202617_dynamicAnnotation) {
		_200217_f.get()._field_Generics=jule::Slice<jule::Ptr<_20112e868_InsGeneric>>::alloc(_200217_f.get()._field_Decl.get()._field_Generics.len(), _200217_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_200217_f.get()._field_Generics.len() != _200217_f.get()._field_Decl.get()._field_Generics.len())) {
		_201088393_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_200217_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_200217_f.get()._field_Generics.len()), (*(_200131_fc)).get()._field_Token);
		(*(_200153_d))=nullptr;
		return;;
	};
	jule::Ptr<_201084669_Sema> _203517_old = _self_.get()._field_s;;
	if ((_200217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_200217_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_203517_old != _self_.get()._field_s)) {
			(_203517_old.get()._field_errors).append(_self_.get()._field_s.get()._field_errors);;
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_203517_old;
	});;
	_2010e0593_fnCallArgChecker _204817_fcac = _2010e0593_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_200131_fc)).get()._field_Args, ._field_errorToken=(*(_200131_fc)).get()._field_Token, ._field_dynamicAnnotation=_202617_dynamicAnnotation, };;
	if ((!(_202617_dynamicAnnotation))) {
		if ((!(_200217_f.get()._field_reloaded))) {
			jule::Bool _205721_ok = _201091654_reloadFnInsTypes(_self_.get()._field_s, _200217_f);;
			_200217_f.get()._field_reloaded=true;
			if ((!(_205721_ok))) {
				(*(_200153_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_20102330b_FnIns> _206421_existInstance = _201022085_appendInstance(_200217_f.get()._field_Decl.ptr(), &(_200217_f));;
		if ((_206421_existInstance != nullptr)) {
			_200217_f=_206421_existInstance;
		};
	} else if ((!(_201090048_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_200217_f), &(_204817_fcac._field_ignored))))) {
		(*(_200153_d))=nullptr;
		return;;
	};
	_204817_fcac._field_f=_200217_f;
	jule::Bool _207517_ok = false;;
	if ((_200217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_201084669_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_201084669_Sema> _1___jule_assign_arg = _203517_old;
			_203517_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_207517_ok=_2010e292a_check(&_204817_fcac);
		({
			jule::Ptr<_201084669_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_201084669_Sema> _1___jule_assign_arg = _203517_old;
			_203517_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_207517_ok=_2010e292a_check(&_204817_fcac);
	};
	if (_202617_dynamicAnnotation) {
		if ((!(_207517_ok))) {
			(*(_200153_d))=nullptr;
			return;;
		};
		if ((!(_20110bb31_checkGenericFn(_self_, &(_200217_f), &((*(_200131_fc)).get()._field_Token), &((*(_200153_d)).get()._field_Model))))) {
			(*(_200153_d))=nullptr;
			return;;
		};
	};
	jule::Any _209517_callModel = (*(_200153_d)).get()._field_Model;;
	if (_201020abc_IsVoid(_200217_f.get()._field_Decl.ptr())) {
		(*(_200153_d))=_20112c338_buildVoidData();
	} else {
		(*(_200153_d)).get()._field_Kind=_200217_f.get()._field_Result;
		(*(_200153_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_201014352_FnCallExprModel> _210417_model = jule::new_ptr<_201014352_FnCallExprModel>(_201014352_FnCallExprModel{._field_Token=(*(_200131_fc)).get()._field_Token, ._field_Func=_200217_f, ._field_IsCo=(*(_200131_fc)).get()._field_IsCo, ._field_Expr=_209517_callModel, ._field_Args=_204817_fcac._field_argModels, });;
	(*(_200153_d)).get()._field_Model=jule::Any(_210417_model, &__jule_any_type35);
	(*(_200153_d)).get()._field_Mutable=true;
	if (_200217_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_200131_fc)).get()._field_IsCo) {
			_201086eeb_pushErr(_self_.get()._field_s.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_20108731a_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_200ee3ab2_Unhandled((*(_200131_fc)).ptr())) {
				_case_begin_2057ed42d:;
				{
					_201100b9c_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_201100ebb_pushSuggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_200ee3d26_Ignored((*(_200131_fc)).ptr())) {
				_case_begin_2057ecd78:;
				{
					goto _match_end_2057ec570;
				}
			}
			else {
				_case_begin_2057ec2c8:;
				{
					_201113ab1_processExceptionalHandler(_self_.ptr(), &(_200217_f), _200131_fc, _200153_d);
				}
			}
			_match_end_2057ec570:;
		};
	} else if ((!(_200ee3ab2_Unhandled((*(_200131_fc)).ptr())))) {
		_201100b9c_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_200131_fc)).get()._field_IsCo) {
		_2011136b5_checkFnOfConcurrentCall(_self_.ptr(), &(_210417_model.get()._field_Func), (*(_200131_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_2010edb23_Data> _2011141ee_evalFnCall(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee374e_FnCallExpr> _213934_fc) {
	jule::Ptr<_2011310ea_TypeKind> _214017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_214017_prefix;
	});;
	{
		auto &_match_expr{ _213934_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_205800bd3:;
			{
				if (_213934_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _2011ea659_builtinCallerError(&(_self_), &(_213934_fc));;
				};
			}
		}
		_match_end_205800b7d:;
	};
	jule::Ptr<_2010edb23_Data> _215317_d = _20111b426_evalExprKind(_self_, _213934_fc.get()._field_Expr.get()._field_Kind);;
	if ((_215317_d == nullptr)) {
		return nullptr;;
	};
	if (_215317_d.get()._field_Decl) {
		_201113055_callTypeFn(_self_, &(_213934_fc), &(_215317_d));
		return _215317_d;;
	};
	if ((_201134a05_Fn(_215317_d.get()._field_Kind.ptr()) == nullptr)) {
		_201100b9c_pushErr(_self_.ptr(), _213934_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_201113de1_callFn(_self_, &(_213934_fc), &(_215317_d));
	return _215317_d;;
}



inline jule::Ptr<_2010edb23_Data> _2011145a6_evalEnumStatic(_201100691_Eval* _self_, jule::Ptr<_20103510e_Enum> _217237_enm, jule::Ptr<_1ed694d8c_Token> _217249_ident) {
	jule::Ptr<_201034619_EnumItem> _217317_item = _201035b7b_FindItem(_217237_enm.ptr(), _217249_ident.get()._field_Kind);;
	if ((_217317_item == nullptr)) {
		_201100b9c_pushErr(_self_, _217249_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_217237_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_217249_ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _20112d9aa_evalEnumStatic(&(_217237_enm), &(_217317_item));;
}



inline jule::Ptr<_2010edb23_Data> _20111495d_evalTypeEnumStatic(_201100691_Eval* _self_, jule::Ptr<_201036709_TypeEnum> _218041_enm, jule::Ptr<_1ed694d8c_Token> _218057_ident) {
	jule::Ptr<_201036176_TypeEnumItem> _218117_item = _201037243_FindItem(_218041_enm.ptr(), _218057_ident.get()._field_Kind);;
	if ((_218117_item == nullptr)) {
		_201100b9c_pushErr(_self_, _218057_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_218041_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_218057_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_201134054_Enum(_218117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2058072d3:;
			{
				return _201104244__evalEnum(_self_, _201134054_Enum(_218117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_2011342b8_TypeEnum(_218117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205807976:;
			{
				return _201104909__evalTypeEnum(_self_, _2011342b8_TypeEnum(_218117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_201134c69_Struct(_218117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205806da4:;
			{
				return _2011050be__evalStruct(_self_, _201134c69_Struct(_218117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_205806bea:;
			{
				jule::Ptr<_2010edb23_Data> _219421_d = jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_218117_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_219421_d.get()._field_Model=jule::Any(_219421_d.get()._field_Kind, &__jule_any_type89);
				return _219421_d;;
			}
		}
		_match_end_205805b72:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201114d15_evalStructStatic(_201100691_Eval* _self_, jule::Ptr<_20100d071_StructIns> _220339_s, jule::Ptr<_1ed694d8c_Token> _220354_ident) {
	jule::Ptr<_2010edb23_Data> _220417_d = jule::new_ptr<_2010edb23_Data>();;
	;
	jule::Ptr<_20102065a_Fn> _220817_method = _20100e01c_FindMethod(_220339_s.ptr(), _220354_ident.get()._field_Kind, true);;
	if ((_220817_method != nullptr)) {
		if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), _220817_method.get()._field_Public, _220817_method.get()._field_Token)))) {
			_201100b9c_pushErr(_self_, _220354_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_220354_ident.get()._field_Kind, &__jule_any_type5)}));
			_201100ebb_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_20102330b_FnIns> _221521_ins = _201021caa_instance(_220817_method);;
		_221521_ins.get()._field_Owner=_220339_s;
		_2056b758e_pushReference(_self_, &(_221521_ins));
		_220417_d.get()._field_Model=jule::Any(jule::new_ptr<_201017069_StructStaticIdentExprModel>(_201017069_StructStaticIdentExprModel{._field_Structure=_220339_s, ._field_Expr=_220417_d.get()._field_Model, ._field_Method=_221521_ins}), &__jule_any_type101);
		_220417_d.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_221521_ins, 1)});
		return _220417_d;;
	};
	jule::Ptr<_2010a4975_Var> _222917_sttc = _20100e638_FindStatic(_220339_s.ptr(), _220354_ident.get()._field_Kind);;
	if ((_222917_sttc != nullptr)) {
		return _201106e39_evalVar(_self_, _222917_sttc, _220354_ident);;
	};
	_201100b9c_pushErr(_self_, _220354_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_220339_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_220354_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_2010edb23_Data> _201115266_evalTraitSubIdent(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data> _223840_d, jule::Ptr<_20103287b_Trait> _223854_trt, jule::Ptr<_1ed694d8c_Token> _223871_ident) {
	jule::Ptr<_20102065a_Fn> _223917_f = _201033728_FindMethod(_223854_trt.ptr(), _223871_ident.get()._field_Kind);;
	if ((_223917_f == nullptr)) {
		_201100b9c_pushErr(_self_, _223871_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_223854_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_223871_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_201021caa_instance(_223917_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_2010163dc_TraitSubIdentExprModel>(_2010163dc_TraitSubIdentExprModel{._field_Token=_223871_ident, ._field_Expr=_223840_d.get()._field_Model, ._field_Method=_223917_f, ._field_Trt=_223854_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_2010edb23_Data> _201115783_evalStructSubIdentField(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data>* _225847_d, jule::Ptr<_20100d071_StructIns>* _225862_s, jule::Ptr<_1ed694d8c_Token>* _225882_tok, jule::Ptr<_20100c57b_FieldIns>* _2258100_f) {
	jule::Ptr<_201016bc3_StructSubIdentExprModel> _225917_model = jule::new_ptr<_201016bc3_StructSubIdentExprModel>(_201016bc3_StructSubIdentExprModel{._field_Token=(*(_225882_tok)), ._field_Expr=jule::new_ptr<_2010edb23_Data>((*((*(_225847_d))))), ._field_Field=(*(_2258100_f)), ._field_Owner=(*(_225862_s))});;
	(*(_225847_d)).get()._field_Model=jule::Any(_225917_model, &__jule_any_type71);
	(*(_225847_d)).get()._field_Kind=(*(_2258100_f)).get()._field_Kind;
	(*(_225847_d)).get()._field_Lvalue=true;
	if (((*(_2258100_f)).get()._field_Decl.get()._field_Mutable && (!((*(_225847_d)).get()._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_205815500:;
				{
					jule::Ptr<_20106455b_scopeChecker> _227321_scope = _201067383_getRoot((*(_self_))._field_lookup.cast_ptr<_20106455b_scopeChecker>(0));;
					(*(_225847_d)).get()._field_Mutable=((_227321_scope.get()._field_owner != nullptr) && (_227321_scope.get()._field_owner.get()._field_Owner == (*(_225862_s))));
				}
			}
			_match_end_20581549a:;
		};
	};
	return (*(_225847_d));;
}



inline jule::Ptr<_2010edb23_Data> _201115c8e_evalStructSubIdent(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data> _228141_d, jule::Ptr<_20100d071_StructIns> _228155_s, jule::Ptr<_200ee2bc1_SubIdentExpr> _228174_si, jule::Bool _228193_ref) {
	jule::Ptr<_20100c57b_FieldIns> _228217_f = _20100e32a_FindField(_228155_s.ptr(), _228174_si.get()._field_Ident.get()._field_Kind);;
	if ((_228217_f != nullptr)) {
		if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), _228217_f.get()._field_Decl.get()._field_Public, _228217_f.get()._field_Decl.get()._field_Token)))) {
			_201100b9c_pushErr(_self_, _228174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_228217_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_201100ebb_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _201115783_evalStructSubIdentField(_self_, &(_228141_d), &(_228155_s), &(_228174_si.get()._field_Ident), &(_228217_f));;
	};
	;
	jule::Ptr<_20102065a_Fn> _229217_m = _20100e01c_FindMethod(_228155_s.ptr(), _228174_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_229217_m == nullptr)) {
		_201100b9c_pushErr(_self_, _228174_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_228155_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_228174_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), _229217_m.get()._field_Public, _229217_m.get()._field_Token)))) {
		_201100b9c_pushErr(_self_, _228174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_229217_m.get()._field_Ident, &__jule_any_type5)}));
		_201100ebb_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_20101e66a_IsRef(_229217_m.get()._field_Params[0LL].ptr()) && (!(_228193_ref)))) {
		_201100b9c_pushErr(_self_, _228174_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_201105aa3_checkDeprecated(_self_, &(_229217_m.get()._field_Directives), _228174_si.get()._field_Ident);
	jule::Ptr<_20102330b_FnIns> _230817_ins = _201021caa_instance(_229217_m);;
	_230817_ins.get()._field_Owner=_228155_s;
	_2056b758e_pushReference(_self_, &(_230817_ins));
	jule::Ptr<_2010edb23_Data> _231117_model = jule::new_ptr<_2010edb23_Data>((*(_228141_d)));;
	_228141_d.get()._field_Model=jule::Any(jule::new_ptr<_201016bc3_StructSubIdentExprModel>(_201016bc3_StructSubIdentExprModel{._field_Token=_228174_si.get()._field_Ident, ._field_Expr=_231117_model, ._field_Method=_230817_ins, ._field_Owner=_228155_s}), &__jule_any_type71);
	_228141_d.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_230817_ins, 1)});
	return _228141_d;;
}



inline jule::Ptr<_2010edb23_Data> _201116146_evalSliceSubIdent(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data> _232240_d, jule::Ptr<_1ed694d8c_Token> _232254_ident) {
	{
		auto &_match_expr{ _232254_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_205820bc0:;
			{
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_Params=jule::Slice<jule::Ptr<_20102243c_ParamIns>>::make({jule::new_ptr<_20102243c_ParamIns>(_20102243c_ParamIns{._field_Decl=jule::new_ptr<_20101dd1d_Param>(_20101dd1d_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_2010e8007_lenKind()}),jule::new_ptr<_20102243c_ParamIns>(_20102243c_ParamIns{._field_Decl=jule::new_ptr<_20101dd1d_Param>(_20101dd1d_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_2010e8007_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2011ea318_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_232240_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_201017c7e_CommonSubIdentExprModel>(_201017c7e_CommonSubIdentExprModel{._field_ExprKind=_232240_d.get()._field_Kind, ._field_Expr=_232240_d.get()._field_Model, ._field_Token=_232254_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_205820e9a:;
			{
				_201100b9c_pushErr(_self_, _232254_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_232240_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_232254_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205820c58:;
	};
}



inline jule::Ptr<_2010edb23_Data> _2011164ed_evalArraySubIdent(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data> _235940_d, jule::Ptr<_1ed694d8c_Token> _235954_ident) {
	{
		auto &_match_expr{ _235954_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_205821198:;
			{
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_Params=jule::Slice<jule::Ptr<_20102243c_ParamIns>>::make({jule::new_ptr<_20102243c_ParamIns>(_20102243c_ParamIns{._field_Decl=jule::new_ptr<_20101dd1d_Param>(_20101dd1d_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_2010e8007_lenKind()}),jule::new_ptr<_20102243c_ParamIns>(_20102243c_ParamIns{._field_Decl=jule::new_ptr<_20101dd1d_Param>(_20101dd1d_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_2010e8007_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2011ea318_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_235940_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_201017c7e_CommonSubIdentExprModel>(_201017c7e_CommonSubIdentExprModel{._field_ExprKind=_235940_d.get()._field_Kind, ._field_Expr=_235940_d.get()._field_Model, ._field_Token=_235954_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_205823ba1:;
			{
				_201100b9c_pushErr(_self_, _235954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_235940_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_235954_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205821231:;
	};
}



inline jule::Ptr<_2010edb23_Data> _20111680b_evalIntTypeStatic(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _239636_ident) {
	;
	{
		auto &_match_expr{ _239636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2058276dd:;
			{
				jule::Ptr<_1ee33c6d2_Const> _240021_c = static__1ee33cb11_NewI64(static_cast<jule::I64>(_1ee335ec2_MaxI(jule::Str("int", 3))));;
				_240021_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e618d_primInt, ._field_Model=jule::Any(_240021_c, &__jule_any_type19), ._field_Constant=_240021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_205826984:;
			{
				jule::Ptr<_1ee33c6d2_Const> _240821_c = static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ee336478_Min(jule::Str("int", 3)))));;
				_240821_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e618d_primInt, ._field_Model=jule::Any(_240821_c, &__jule_any_type19), ._field_Constant=_240821_c});;
			}
		}
		else {
			_case_begin_205826c1a:;
			{
				_201100b9c_pushErr(_self_, _239636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_239636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205826b71:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201116b19_evalUintTypeStatic(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _242137_ident) {
	;
	{
		auto &_match_expr{ _242137_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2058298ee:;
			{
				jule::Ptr<_1ee33c6d2_Const> _242521_c = static__1ee33cda8_NewU64(static_cast<jule::U64>(_1ee336269_MaxU(jule::Str("uint", 4))));;
				_242521_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5dc4_primUint, ._field_Model=jule::Any(_242521_c, &__jule_any_type19), ._field_Constant=_242521_c});;
			}
		}
		else {
			_case_begin_205829dc7:;
			{
				_201100b9c_pushErr(_self_, _242137_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_242137_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205829d72:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201116e27_evalI8TypeStatic(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _243835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _243835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20582c1a4:;
			{
				jule::Ptr<_1ee33c6d2_Const> _244421_c = static__1ee33cb11_NewI64(127LL);;
				_244421_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e6567_primI8, ._field_Model=jule::Any(_244421_c, &__jule_any_type19), ._field_Constant=_244421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_20582d44c:;
			{
				jule::Ptr<_1ee33c6d2_Const> _245221_c = static__1ee33cb11_NewI64(-128LL);;
				_245221_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e6567_primI8, ._field_Model=jule::Any(_245221_c, &__jule_any_type19), ._field_Constant=_245221_c});;
			}
		}
		else {
			_case_begin_20582c935:;
			{
				_201100b9c_pushErr(_self_, _243835_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_243835_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20582c836:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201117235_evalI16TypeStatic(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _246536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _246536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_205830828:;
			{
				jule::Ptr<_1ee33c6d2_Const> _247121_c = static__1ee33cb11_NewI64(32767LL);;
				_247121_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e6831_primI16, ._field_Model=jule::Any(_247121_c, &__jule_any_type19), ._field_Constant=_247121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_205831ae3:;
			{
				jule::Ptr<_1ee33c6d2_Const> _247921_c = static__1ee33cb11_NewI64(-32768LL);;
				_247921_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e6831_primI16, ._field_Model=jule::Any(_247921_c, &__jule_any_type19), ._field_Constant=_247921_c});;
			}
		}
		else {
			_case_begin_2058310cb:;
			{
				_201100b9c_pushErr(_self_, _246536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_246536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205830ecc:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201117543_evalI32TypeStatic(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _249236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _249236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_205833ebe:;
			{
				jule::Ptr<_1ee33c6d2_Const> _249821_c = static__1ee33cb11_NewI64(2147483647LL);;
				_249821_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e6aea_primI32, ._field_Model=jule::Any(_249821_c, &__jule_any_type19), ._field_Constant=_249821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_205835289:;
			{
				jule::Ptr<_1ee33c6d2_Const> _250621_c = static__1ee33cb11_NewI64(-2147483648LL);;
				_250621_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e6aea_primI32, ._field_Model=jule::Any(_250621_c, &__jule_any_type19), ._field_Constant=_250621_c});;
			}
		}
		else {
			_case_begin_205834772:;
			{
				_201100b9c_pushErr(_self_, _249236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_249236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205834673:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201117851_evalI64TypeStatic(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _251936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _251936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_205837665:;
			{
				jule::Ptr<_1ee33c6d2_Const> _252521_c = static__1ee33cb11_NewI64(jule::MAX_I64);;
				_252521_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e6db4_primI64, ._field_Model=jule::Any(_252521_c, &__jule_any_type19), ._field_Constant=_252521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_205838930:;
			{
				jule::Ptr<_1ee33c6d2_Const> _253321_c = static__1ee33cb11_NewI64(jule::MIN_I64);;
				_253321_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e6db4_primI64, ._field_Model=jule::Any(_253321_c, &__jule_any_type19), ._field_Constant=_253321_c});;
			}
		}
		else {
			_case_begin_205837e18:;
			{
				_201100b9c_pushErr(_self_, _251936_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_251936_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205837d19:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201117b5e_evalU8TypeStatic(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _254635_ident) {
	;
	;
	{
		auto &_match_expr{ _254635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20583badc:;
			{
				jule::Ptr<_1ee33c6d2_Const> _255121_c = static__1ee33cda8_NewU64(255LLU);;
				_255121_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e717d_primU8, ._field_Model=jule::Any(_255121_c, &__jule_any_type19), ._field_Constant=_255121_c});;
			}
		}
		else {
			_case_begin_20583ad0b:;
			{
				_201100b9c_pushErr(_self_, _254635_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_254635_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20583ae60:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201117e6c_evalU16TypeStatic(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _256436_ident) {
	;
	;
	{
		auto &_match_expr{ _256436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20583d9ac:;
			{
				jule::Ptr<_1ee33c6d2_Const> _256921_c = static__1ee33cda8_NewU64(65535LLU);;
				_256921_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e7447_primU16, ._field_Model=jule::Any(_256921_c, &__jule_any_type19), ._field_Constant=_256921_c});;
			}
		}
		else {
			_case_begin_20583ce51:;
			{
				_201100b9c_pushErr(_self_, _256436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_256436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20583d57d:;
	};
}



inline jule::Ptr<_2010edb23_Data> _20111827a_evalU32TypeStatic(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _258236_ident) {
	;
	;
	{
		auto &_match_expr{ _258236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20584166e:;
			{
				jule::Ptr<_1ee33c6d2_Const> _258721_c = static__1ee33cda8_NewU64(4294967295LLU);;
				_258721_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e7711_primU32, ._field_Model=jule::Any(_258721_c, &__jule_any_type19), ._field_Constant=_258721_c});;
			}
		}
		else {
			_case_begin_20584085a:;
			{
				_201100b9c_pushErr(_self_, _258236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_258236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2058409e2:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201118588_evalU64TypeStatic(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _260036_ident) {
	;
	;
	{
		auto &_match_expr{ _260036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20584353e:;
			{
				jule::Ptr<_1ee33c6d2_Const> _260521_c = static__1ee33cda8_NewU64(jule::MAX_U64);;
				_260521_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e79ca_primU64, ._field_Model=jule::Any(_260521_c, &__jule_any_type19), ._field_Constant=_260521_c});;
			}
		}
		else {
			_case_begin_2058429d3:;
			{
				_201100b9c_pushErr(_self_, _260036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_260036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205843110:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201118896_evalF32TypeStatic(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _261836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_205846a3c:;
			{
				jule::Ptr<_1ee33c6d2_Const> _262521_c = static__1ee33d68e_NewF64(340282346638528860000000000000000000000.0);;
				_262521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e7e4d_primF32, ._field_Model=jule::Any(_262521_c, &__jule_any_type19), ._field_Constant=_262521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_205846498:;
			{
				jule::Ptr<_1ee33c6d2_Const> _263321_c = static__1ee33d68e_NewF64(-340282346638528860000000000000000000000.0);;
				_263321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e7e4d_primF32, ._field_Model=jule::Any(_263321_c, &__jule_any_type19), ._field_Constant=_263321_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_205846b2a:;
			{
				jule::Ptr<_1ee33c6d2_Const> _264121_c = static__1ee33d68e_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_264121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e7e4d_primF32, ._field_Model=jule::Any(_264121_c, &__jule_any_type19), ._field_Constant=_264121_c});;
			}
		}
		else {
			_case_begin_205845e59:;
			{
				_201100b9c_pushErr(_self_, _261836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type5),jule::Any(_261836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205845e04:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201118ba4_evalF64TypeStatic(_201100691_Eval* _self_, jule::Ptr<_1ed694d8c_Token> _265436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _265436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20584b2c2:;
			{
				jule::Ptr<_1ee33c6d2_Const> _266121_c = static__1ee33d68e_NewF64(jule::MAX_F64);;
				_266121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e8217_primF64, ._field_Model=jule::Any(_266121_c, &__jule_any_type19), ._field_Constant=_266121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_20584ac2d:;
			{
				jule::Ptr<_1ee33c6d2_Const> _266921_c = static__1ee33d68e_NewF64(jule::MIN_F64);;
				_266921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e8217_primF64, ._field_Model=jule::Any(_266921_c, &__jule_any_type19), ._field_Constant=_266921_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_20584b3b0:;
			{
				jule::Ptr<_1ee33c6d2_Const> _267721_c = static__1ee33d68e_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_267721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e8217_primF64, ._field_Model=jule::Any(_267721_c, &__jule_any_type19), ._field_Constant=_267721_c});;
			}
		}
		else {
			_case_begin_20584a6de:;
			{
				_201100b9c_pushErr(_self_, _265436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type5),jule::Any(_265436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20584a689:;
	};
}



inline jule::Ptr<_2010edb23_Data> _20111905b_evalPrimStatic(_201100691_Eval* _self_, jule::Str _269033_kind, jule::Ptr<_1ed694d8c_Token> _269044_ident) {
	{
		auto &_match_expr{ _269033_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_20584e935:;
			{
				return _20111680b_evalIntTypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_20584d7be:;
			{
				return _201116b19_evalUintTypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_20584ea67:;
			{
				return _201116e27_evalI8TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_20584eb66:;
			{
				return _201117235_evalI16TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_20584ebcc:;
			{
				return _201117543_evalI32TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_20584e281:;
			{
				return _201117851_evalI64TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_20584e2e7:;
			{
				return _201117b5e_evalU8TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_20584ec43:;
			{
				return _201117e6c_evalU16TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_20584eca9:;
			{
				return _20111827a_evalU32TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_20584ed20:;
			{
				return _201118588_evalU64TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_20584ed86:;
			{
				return _201118896_evalF32TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_20584edec:;
			{
				return _201118ba4_evalF64TypeStatic(_self_, _269044_ident);;
			}
		}
		else {
			_case_begin_20584e0b6:;
			{
				_201100b9c_pushErr(_self_, _269044_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_269033_kind, &__jule_any_type5),jule::Any(_269044_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20584dadd:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201119413_evalTypeStatic(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data> _272237_d, jule::Ptr<_200ee2bc1_SubIdentExpr> _272251_si) {
	{
		
		if ((_201133817_Prim(_272237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205854be3:;
			{
				return _20111905b_evalPrimStatic(_self_, _201138b80_Str(_201133817_Prim(_272237_d.get()._field_Kind.ptr()).ptr()), _272251_si.get()._field_Ident);;
			}
		}
		else if ((_201134054_Enum(_272237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205854c59:;
			{
				return _2011145a6_evalEnumStatic(_self_, _201134054_Enum(_272237_d.get()._field_Kind.ptr()), _272251_si.get()._field_Ident);;
			}
		}
		else if ((_2011342b8_TypeEnum(_272237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205854a5b:;
			{
				return _20111495d_evalTypeEnumStatic(_self_, _2011342b8_TypeEnum(_272237_d.get()._field_Kind.ptr()), _272251_si.get()._field_Ident);;
			}
		}
		else if ((_201134c69_Struct(_272237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205854ac2:;
			{
				return _201114d15_evalStructStatic(_self_, _201134c69_Struct(_272237_d.get()._field_Kind.ptr()), _272251_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_205853d13:;
			{
				_201100b9c_pushErr(_self_, _272251_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_272237_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205851b9b:;
	};
}



inline jule::Ptr<_2010edb23_Data> _20585a5cd_comptimeObjSubIdent(_201100691_Eval* _self_, jule::Ptr<_20104760a_comptimeTypeInfo>* _273857_ct, jule::Ptr<_2010edb23_Data>* _273877_d, jule::Ptr<_200ee2bc1_SubIdentExpr>* _273888_si) {
	jule::Ptr<_2010edb23_Data> _273917_cd = _20104cd19_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_201100b9c_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_2010edb23_Data> _20585dc96_comptimeObjSubIdent(_201100691_Eval* _self_, jule::Ptr<_201039355_comptimeStructField>* _273857_ct, jule::Ptr<_2010edb23_Data>* _273877_d, jule::Ptr<_200ee2bc1_SubIdentExpr>* _273888_si) {
	jule::Ptr<_2010edb23_Data> _273917_cd = _20103aa1b_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_201100b9c_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_2010edb23_Data> _20586241a_comptimeObjSubIdent(_201100691_Eval* _self_, jule::Ptr<_20104035b_comptimeEnumField>* _273857_ct, jule::Ptr<_2010edb23_Data>* _273877_d, jule::Ptr<_200ee2bc1_SubIdentExpr>* _273888_si) {
	jule::Ptr<_2010edb23_Data> _273917_cd = _201041291_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_201100b9c_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_2010edb23_Data> _205865bb0_comptimeObjSubIdent(_201100691_Eval* _self_, jule::Ptr<_201042acd_comptimeParam>* _273857_ct, jule::Ptr<_2010edb23_Data>* _273877_d, jule::Ptr<_200ee2bc1_SubIdentExpr>* _273888_si) {
	jule::Ptr<_2010edb23_Data> _273917_cd = _20104465c_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_201100b9c_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_2010edb23_Data> _20586939a_comptimeObjSubIdent(_201100691_Eval* _self_, jule::Ptr<_20103c358_comptimeStatic>* _273857_ct, jule::Ptr<_2010edb23_Data>* _273877_d, jule::Ptr<_200ee2bc1_SubIdentExpr>* _273888_si) {
	jule::Ptr<_2010edb23_Data> _273917_cd = _20103da1e_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_201100b9c_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_2010edb23_Data> _20586ca1e_comptimeObjSubIdent(_201100691_Eval* _self_, jule::Ptr<_20104d105_comptimeValue>* _273857_ct, jule::Ptr<_2010edb23_Data>* _273877_d, jule::Ptr<_200ee2bc1_SubIdentExpr>* _273888_si) {
	jule::Ptr<_2010edb23_Data> _273917_cd = _201050415_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_201100b9c_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_2010edb23_Data> _205871193_comptimeObjSubIdent(_201100691_Eval* _self_, jule::Ptr<_201051bb9_comptimeFile>* _273857_ct, jule::Ptr<_2010edb23_Data>* _273877_d, jule::Ptr<_200ee2bc1_SubIdentExpr>* _273888_si) {
	jule::Ptr<_2010edb23_Data> _273917_cd = _201053380_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_201100b9c_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}



inline jule::Ptr<_2010edb23_Data> _201119c1b_evalObjSubIdent(_201100691_Eval* _self_, jule::Ptr<_2010edb23_Data> _274638_d, jule::Ptr<_200ee2bc1_SubIdentExpr> _274652_si) {
	if (_1ed697631_IsIgnoreIdent(_274652_si.get()._field_Ident.get()._field_Kind)) {
		_201100b9c_pushErr(_self_, _274652_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if ((_201136dd1_comptimeTypeInfo(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205858455:;
			{
				jule::Ptr<_20104760a_comptimeTypeInfo> _275421_ct = _201136dd1_comptimeTypeInfo(_274638_d.get()._field_Kind.ptr());;
				return _20585a5cd_comptimeObjSubIdent(_self_, &(_275421_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_201135be3_comptimeStructField(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205858ce6:;
			{
				jule::Ptr<_201039355_comptimeStructField> _275721_ct = _201135be3_comptimeStructField(_274638_d.get()._field_Kind.ptr());;
				return _20585dc96_comptimeObjSubIdent(_self_, &(_275721_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_2011361bb_comptimeEnumField(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205858d5c:;
			{
				jule::Ptr<_20104035b_comptimeEnumField> _276021_ct = _2011361bb_comptimeEnumField(_274638_d.get()._field_Kind.ptr());;
				return _20586241a_comptimeObjSubIdent(_self_, &(_276021_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_201136694_comptimeParam(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205858dc3:;
			{
				jule::Ptr<_201042acd_comptimeParam> _276321_ct = _201136694_comptimeParam(_274638_d.get()._field_Kind.ptr());;
				return _205865bb0_comptimeObjSubIdent(_self_, &(_276321_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_2011373a9_comptimeStatic(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205858e39:;
			{
				jule::Ptr<_20103c358_comptimeStatic> _276621_ct = _2011373a9_comptimeStatic(_274638_d.get()._field_Kind.ptr());;
				return _20586939a_comptimeObjSubIdent(_self_, &(_276621_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_20113761d_comptimeValue(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205858ea0:;
			{
				jule::Ptr<_20104d105_comptimeValue> _276921_ct = _20113761d_comptimeValue(_274638_d.get()._field_Kind.ptr());;
				return _20586ca1e_comptimeObjSubIdent(_self_, &(_276921_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_201137882_comptimeFile(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205859016:;
			{
				jule::Ptr<_201051bb9_comptimeFile> _277221_ct = _201137882_comptimeFile(_274638_d.get()._field_Kind.ptr());;
				return _205871193_comptimeObjSubIdent(_self_, &(_277221_ct), &(_274638_d), &(_274652_si));;
			}
		}
		_match_end_205858521:;
	};
	jule::Ptr<_2011310ea_TypeKind> _277617_kind = _274638_d.get()._field_Kind;;
	{
		
		if ((_201133ce0_Ptr(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20586c678:;
			{
				jule::Ptr<_201140615_Ptr> _277917_ptr = _201133ce0_Ptr(_274638_d.get()._field_Kind.ptr());;
				if (_2011410d8_IsUnsafe(_277917_ptr.ptr())) {
					goto _match_end_2058590c1;
				};
				if (((!(_274652_si.get()._field_IsSelf)) && (!(_2011015d7_isUnsafe(_self_))))) {
					_201100b9c_pushErr(_self_, _274652_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_277617_kind=_201133ce0_Ptr(_274638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_201133a7b_Sptr(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205872c99:;
			{
				_277617_kind=_201133a7b_Sptr(_274638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_2058590c1:;
	};
	{
		
		if ((_201134ecd_Trait(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205876165:;
			{
				return _201115266_evalTraitSubIdent(_self_, _274638_d, _201134ecd_Trait(_274638_d.get()._field_Kind.ptr()), _274652_si.get()._field_Ident);;
			}
		}
		else if ((_201134c69_Struct(_277617_kind.ptr()) != nullptr)) {
			_case_begin_2058761dc:;
			{
				jule::Ptr<_20100d071_StructIns> _279517_s = _201134c69_Struct(_277617_kind.ptr());;
				if (_20112b7cc_isInstancedStruct(_279517_s)) {
					jule::Bool _279725_usedReferenceElem = (_201133a7b_Sptr(_274638_d.get()._field_Kind.ptr()) != nullptr);;
					return _201115c8e_evalStructSubIdent(_self_, _274638_d, _201134c69_Struct(_277617_kind.ptr()), _274652_si, _279725_usedReferenceElem);;
				};
			}
		}
		else if ((_201134791_Slc(_277617_kind.ptr()) != nullptr)) {
			_case_begin_205876264:;
			{
				return _201116146_evalSliceSubIdent(_self_, _274638_d, _274652_si.get()._field_Ident);;
			}
		}
		else if ((_20113452c_Arr(_277617_kind.ptr()) != nullptr)) {
			_case_begin_2058762db:;
			{
				return _2011164ed_evalArraySubIdent(_self_, _274638_d, _274652_si.get()._field_Ident);;
			}
		}
		_match_end_205876088:;
	};
	_201100b9c_pushErr(_self_, _274652_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_274638_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_2010edb23_Data> _20111a029_evalSubIdent(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee2bc1_SubIdentExpr> _280936_si) {
	jule::Ptr<_2011310ea_TypeKind> _281017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_281017_prefix;
	});;
	jule::Ptr<_2010edb23_Data> _281317_d = _20111b426_evalExprKind(_self_, _280936_si.get()._field_Expr.get()._field_Kind);;
	if ((_281317_d == nullptr)) {
		return nullptr;;
	};
	if (_281317_d.get()._field_Decl) {
		return _201119413_evalTypeStatic(_self_.ptr(), _281317_d, _280936_si);;
	};
	return _201119c1b_evalObjSubIdent(_self_.ptr(), _281317_d, _280936_si);;
}



inline jule::Ptr<_2010edb23_Data> _20111a337_evalTuple(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee04b5_TupleExpr> _282333_tup) {
	jule::Ptr<_20113d613_Tuple> _282417_tupT = jule::new_ptr<_20113d613_Tuple>();;
	_282417_tupT.get()._field_Types=jule::Slice<jule::Ptr<_2011310ea_TypeKind>>::alloc(0LL, _282333_tup.get()._field_Expr.len());
	jule::Ptr<_20101807b_TupleExprModel> _282717_model = jule::new_ptr<_20101807b_TupleExprModel>(_20101807b_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_2010edb23_Data>>::alloc(0LL, _282333_tup.get()._field_Expr.len())});;
	jule::Bool _283117_ok = true;;
	{
		auto expr = &(_282333_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20587e6ac:;
		if (it != expr_end) {
			jule::Ptr<_200ede838_Expr> _283221_expr = *it;
			{
				jule::Ptr<_2010edb23_Data> _283321_d = _201121eba_evalExpr(_self_, _283221_expr);;
				if ((_283321_d == nullptr)) {
					_283117_ok=false;
					goto _iter_next_20587e6ac;
				};
				{ jule::Slice<jule::Ptr<_2011310ea_TypeKind>> &__jule_push_dest = _282417_tupT.get()._field_Types; __jule_push_dest.push(_283321_d.get()._field_Kind); };
				{ jule::Slice<jule::Ptr<_2010edb23_Data>> &__jule_push_dest = _282717_model.get()._field_Datas; __jule_push_dest.push(_283321_d); };
			}
			_iter_next_20587e6ac:;
			++it;
			goto _iter_begin_20587e6ac;
		}
		_iter_end_20587e6ac:;
	};
	if ((!(_283117_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_282417_tupT, 23)}), ._field_Model=jule::Any(_282717_model, &__jule_any_type87), });;
}



inline jule::Ptr<_2010edb23_Data> _20111a6de_evalMap(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_20113e0b4_Map> _285231_m, jule::Ptr<_200ee4e26_BraceLit> _285244_lit) {
	jule::Ptr<_20101585e_MapExprModel> _285317_model = jule::new_ptr<_20101585e_MapExprModel>(_20101585e_MapExprModel{._field_KeyKind=_285231_m.get()._field_Key, ._field_ValKind=_285231_m.get()._field_Val, });;
	{
		auto expr = &(_285244_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2058825c2:;
		if (it != expr_end) {
			jule::Ptr<_200ede838_Expr> _285821_expr = *it;
			{
				{
					auto &_match_expr{ _285821_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_205882cdc:;
						{
							goto _match_end_205882d86;
						}
					}
					else {
						_case_begin_20588301d:;
						{
							_201100b9c_pushErr(_self_.ptr(), _285244_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_205882d86:;
				};
				jule::Ptr<_200ee580b_KeyValPair> _286821_pair = _285821_expr.get()._field_Kind.cast_ptr<_200ee580b_KeyValPair>(&__jule_any_type84);;
				jule::Ptr<_2010edb23_Data> _287021_key = _201121eba_evalExpr(_self_, _286821_pair.get()._field_Key);;
				if ((_287021_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_2010edb23_Data> _287521_val = _201121eba_evalExpr(_self_, _286821_pair.get()._field_Val);;
				if ((_287521_val == nullptr)) {
					return nullptr;;
				};
				_20108e289_checkAssignType(_self_.get()._field_s, false, &(_285231_m.get()._field_Key), &(_287021_key), _286821_pair.get()._field_Colon);
				_20108e289_checkAssignType(_self_.get()._field_s, false, &(_285231_m.get()._field_Val), &(_287521_val), _286821_pair.get()._field_Colon);
				{ jule::Slice<jule::Ptr<_2010153db_KeyValPairExprModel>> &__jule_push_dest = _285317_model.get()._field_Entries; __jule_push_dest.push(jule::new_ptr<_2010153db_KeyValPairExprModel>(_2010153db_KeyValPairExprModel{._field_Key=_287021_key.get()._field_Model, ._field_Val=_287521_val.get()._field_Model})); };
			}
			_iter_next_2058825c2:;
			++it;
			goto _iter_begin_2058825c2;
		}
		_iter_end_2058825c2:;
	};
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_285231_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_285317_model, &__jule_any_type102), });;
}



inline jule::Ptr<_2010edb23_Data> _20111a9ec_evalBraceLit(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee4e26_BraceLit> _289636_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_2058877c5:;
			{
				_201100b9c_pushErr(_self_.ptr(), _289636_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_201135242_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_205887b7c:;
			{
				return _20111a6de_evalMap(_self_, _201135242_Map(_self_.get()._field_prefix.ptr()), _289636_lit);;
			}
		}
		else if ((_201134c69_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_205887c7b:;
			{
				return _2011123a6_evalStructLitExplicit(_self_, _201134c69_Struct(_self_.get()._field_prefix.ptr()), _289636_lit.get()._field_Exprs, _289636_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_205887198:;
			{
				_201100b9c_pushErr(_self_.ptr(), _289636_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2058870ee:;
	};
}



inline jule::Ptr<_2010edb23_Data> _20111ad0a_evalAnonFn(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200eebcda_FnDecl> _291134_decl) {
	_20114243b_typeChecker _291217_tc = _20114243b_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_20102330b_FnIns> _291717_ins = _20114895e_buildFn(&_291217_tc, _291134_decl);;
	if ((_291717_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_20588b5a9:;
			{
				jule::Ptr<_20106455b_scopeChecker> _292321_sc = _self_.get()._field_lookup.cast_ptr<_20106455b_scopeChecker>(0);;
				jule::Ptr<_20106455b_scopeChecker> _292421_scc = _201074714_newChildChecker(_292321_sc);;
				_292421_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2010632c4_scopeLabel>>>(nullptr);
				_292421_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_201063747_scopeGoto>>>(nullptr);
				_292421_scc.get()._field_owner=nullptr;
				_292421_scc.get()._field_childIndex=0LL;
				_292421_scc.get()._field_it=0LLU;
				_292421_scc.get()._field_cse=0LLU;
				_292421_scc.get()._field_owner=_291717_ins;
				_20109e84e_checkFnInsSc(_self_.get()._field_s.ptr(), &(_291717_ins), &(_292421_scc));
			}
		}
		else {
			_case_begin_20588b466:;
			{
				_20109ede3_checkFnIns(_self_.get()._field_s, &(_291717_ins));
			}
		}
		_match_end_20588b411:;
	};
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_291717_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_201015034_AnonFnExprModel>(_201015034_AnonFnExprModel{._field_Func=_291717_ins, ._field_Global=_20110184b_isGlobal(_self_.ptr())}), &__jule_any_type103), });;
}



inline jule::Ptr<_2010edb23_Data> _20111b118_evalBinop(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ee3144_BinopExpr> _294633_op) {
	_20112420e_binaryEval _294717_bs = static__2011247d6_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_201138850_Prim> _295017_prim = _201133817_Prim(_self_.get()._field_prefix.ptr());;
		if (((_295017_prim == nullptr) || (!(_1ee33c292_IsNum(_201138b80_Str(_295017_prim.ptr())))))) {
			jule::Ptr<_2011310ea_TypeKind> _295225_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_295225_prefix;
			});;
			return _201129c5e_eval(&_294717_bs, &(_294633_op));;
		};
	};
	return _201129c5e_eval(&_294717_bs, &(_294633_op));;
}



inline jule::Ptr<_2010edb23_Data> _20111b426_evalExprKind(jule::Ptr<_201100691_Eval> _self_, jule::Any _296136_kind) {
	{
		auto &_match_expr{ _296136_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_20589278b:;
			{
				jule::Ptr<_200edeb24_RangeExpr> _296421_e = _296136_kind.cast_ptr<_200edeb24_RangeExpr>(&__jule_any_type104);;
				return _20111b426_evalExprKind(_self_, _296421_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_205893429:;
			{
				return _2011034eb_evalLit(_self_.ptr(), _296136_kind.cast_ptr<_200ee086c_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_205893490:;
			{
				return _2011079a6_evalIdent(_self_.ptr(), _296136_kind.cast_ptr<_200ee142d_IdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_205892e73:;
			{
				return _201107cb4_evalUnary(_self_, _296136_kind.cast_ptr<_200ee1b37_UnaryExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_205892ed9:;
			{
				return _2011080c2_evalVariadic(_self_, _296136_kind.cast_ptr<_200ee1ede_VariadicExpr>(&__jule_any_type81));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_205893061:;
			{
				return _2011083d0_evalUnsafe(_self_, _296136_kind.cast_ptr<_200ee0eaa_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_2058930d8:;
			{
				return _201108e4c_evalSliceExpr(_self_, _296136_kind.cast_ptr<_200ee5e7c_SliceExpr>(&__jule_any_type99));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_205893517:;
			{
				return _20110c291_evalIndexing(_self_, _296136_kind.cast_ptr<_200ee67da_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_20589358e:;
			{
				return _20110d45c_evalSlicing(_self_, _296136_kind.cast_ptr<_200ee6de5_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_205893616:;
			{
				return _201111b47_evalCast(_self_, _296136_kind.cast_ptr<_200ee2396_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_20589368d:;
			{
				return _201111e55_evalNsSelection(_self_.ptr(), _296136_kind.cast_ptr<_200ee274d_NsSelectionExpr>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_205893715:;
			{
				return _2011126b4_evalStructLit(_self_, _296136_kind.cast_ptr<_200ee49a3_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_20589378c:;
			{
				return _201112c36_evalType(_self_.ptr(), _296136_kind.cast_ptr<_200eda6ad_TypeDecl>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_205893814:;
			{
				return _2011141ee_evalFnCall(_self_, _296136_kind.cast_ptr<_200ee374e_FnCallExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_20589388b:;
			{
				return _20111a029_evalSubIdent(_self_, _296136_kind.cast_ptr<_200ee2bc1_SubIdentExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_205893913:;
			{
				return _20111a337_evalTuple(_self_, _296136_kind.cast_ptr<_200ee04b5_TupleExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_20589398a:;
			{
				return _20111a9ec_evalBraceLit(_self_, _296136_kind.cast_ptr<_200ee4e26_BraceLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_205893a12:;
			{
				return _20111ad0a_evalAnonFn(_self_, _296136_kind.cast_ptr<_200eebcda_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_205893a89:;
			{
				return _20111b118_evalBinop(_self_, _296136_kind.cast_ptr<_200ee3144_BinopExpr>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_205892d74:;
			{
				return nullptr;;
			}
		}
		_match_end_205892d1e:;
	};
}



inline jule::Ptr<_2010edb23_Data> _20111b734_eval1(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ede838_Expr> _300929_expr) {
	jule::Ptr<_2010edb23_Data> _301017_d = _20111b426_evalExprKind(_self_, _300929_expr.get()._field_Kind);;
	if (((_301017_d == nullptr) || (_301017_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_201134a05_Fn(_301017_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20589cc91:;
			{
				jule::Ptr<_20102330b_FnIns> _301721_f = _201134a05_Fn(_301017_d.get()._field_Kind.ptr());;
				if (_201024692_IsBuiltin(_301721_f.ptr())) {
					_201086eeb_pushErr(_self_.get()._field_s.ptr(), _300929_expr.get()._field_Token, jule::Str("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_20589c6a8;
				};
				if ((_301721_f.get()._field_Generics.len() != _301721_f.get()._field_Decl.get()._field_Generics.len())) {
					_201086eeb_pushErr(_self_.get()._field_s.ptr(), _300929_expr.get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!(_301721_f.get()._field_Decl.get()._field_Statically)) && _201020d31_IsMethod(_301721_f.get()._field_Decl.ptr()))) {
					_201086eeb_pushErr(_self_.get()._field_s.ptr(), _300929_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_20589c6a8:;
	};
	return _301017_d;;
}



inline jule::Ptr<_2010edb23_Data> _20111ba42_eval(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ede838_Expr> _303628_expr) {
	jule::Ptr<_2010edb23_Data> _303717_d = _20111b734_eval1(_self_, _303628_expr);;
	if ((_303717_d == nullptr)) {
		return nullptr;;
	};
	if ((((_self_.get()._field_owner == nullptr) || (!(_self_.get()._field_owner.get()._field_Constant))) && _20113571a_comptime(_303717_d.get()._field_Kind.ptr()))) {
		_201086eeb_pushErr(_self_.get()._field_s.ptr(), _303628_expr.get()._field_Token, jule::Str("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _303717_d;;
}



inline jule::Ptr<_2010edb23_Data> _20111bd50_evalExpr1(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ede838_Expr> _305133_expr) {
	jule::Ptr<_2010edb23_Data> _305217_d = _20111b734_eval1(_self_, _305133_expr);;
	{
		
		if ((_305217_d == nullptr)) {
			_case_begin_2058a3956:;
			{
				return nullptr;;
			}
		}
		else if (_305217_d.get()._field_Decl) {
			_case_begin_2058a39cd:;
			{
				_201100b9c_pushErr(_self_.ptr(), _305133_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_2058a38ac:;
			{
				return _305217_d;;
			}
		}
		_match_end_2058a3824:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201121eba_evalExpr(jule::Ptr<_201100691_Eval> _self_, jule::Ptr<_200ede838_Expr> _306732_expr) {
	jule::Ptr<_2010edb23_Data> _306817_d = _20111ba42_eval(_self_, _306732_expr);;
	{
		
		if ((_306817_d == nullptr)) {
			_case_begin_2058a545d:;
			{
				return nullptr;;
			}
		}
		else if (_306817_d.get()._field_Decl) {
			_case_begin_2058a54d5:;
			{
				_201100b9c_pushErr(_self_.ptr(), _306732_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_2058a53b4:;
			{
				return _306817_d;;
			}
		}
		_match_end_2058a531a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _201100691_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _20112243d_unaryEval static__20112286c_new(jule::Ptr<_201100691_Eval> _308823_e) {
	return _20112243d_unaryEval{._field_e=_308823_e, };;
}



inline void _201122a48_minus(_20112243d_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_2058a6cab:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_201133817_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2058a71c9:;
			{
				if ((!(_1ee33c292_IsNum(_2011314a2_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_201134c69_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2058a69ae:;
			{
				if ((_201134c69_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2058a6948:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2058a67b1:;
	};
	if (_2010ee492_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ee341d24_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2058aa067:;
				{
					_1ee340e33_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1ee33e97b_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ee341373_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2058aa0de:;
				{
					_1ee34043d_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1ee33deca_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ee3415d7_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2058aa166:;
				{
					_1ee34043d_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1ee33ebe0_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_2058a9e79:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_20101288e_UnaryExprModel>(_20101288e_UnaryExprModel{._field_Expr=jule::new_ptr<_2010edb23_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _201122c24_plus(_20112243d_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_2058ae115:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_201133817_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2058adcd5:;
			{
				if ((!(_1ee33c292_IsNum(_2011314a2_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_201134c69_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2058add4b:;
			{
				if ((_201134c69_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2058adc6e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2058adba3:;
	};
	if (_2010ee492_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ee341d24_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2058b23e3:;
				{
					_1ee340e33_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1ee33e97b_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ee341373_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2058b246a:;
				{
					_1ee34043d_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1ee33deca_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ee3415d7_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2058b24e2:;
				{
					_1ee34043d_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1ee33ebe0_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_2058b2305:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_20101288e_UnaryExprModel>(_20101288e_UnaryExprModel{._field_Expr=jule::new_ptr<_2010edb23_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _201122e00_caret(_20112243d_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_2058b6491:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_201133817_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2058b6161:;
			{
				if ((!(_1ee33bbcb_IsInt(_2011314a2_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_201134c69_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2058b61c7:;
			{
				if ((_201134c69_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2058b60ea:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2058b602e:;
	};
	if (_2010ee492_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ee341373_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2058b975d:;
				{
					_1ee34043d_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1ee33deca_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ee3415d7_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2058b97d5:;
				{
					_1ee3406b3_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1ee33e23e_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_2058b9681:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_20101288e_UnaryExprModel>(_20101288e_UnaryExprModel{._field_Expr=jule::new_ptr<_2010edb23_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _2011230cb_excl(_20112243d_unaryEval* _self_) {
	jule::Ptr<_201138850_Prim> _320713_t = _201133817_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_320713_t == nullptr) || (!(_20113b7dc_IsBool(_320713_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	if (_2010ee492_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ee34184b_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_2058c39a9:;
				{
					_1ee340938_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_1ee33e4a3_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_2058c38aa:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_20101288e_UnaryExprModel>(_20101288e_UnaryExprModel{._field_Expr=jule::new_ptr<_2010edb23_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _2011232a7_star(_20112243d_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_20101288e_UnaryExprModel>(_20101288e_UnaryExprModel{._field_Expr=jule::new_ptr<_2010edb23_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_201133ce0_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2058c666b:;
			{
				if ((!(_2011015d7_isUnsafe((*(_self_))._field_e.ptr())))) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_201140615_Ptr> _323921_t = _201133ce0_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_2011410d8_IsUnsafe(_323921_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_323921_t.get()._field_Elem;
			}
		}
		else if ((_201133a7b_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2058c635d:;
			{
				(*(_self_))._field_d.get()._field_Kind=_201133a7b_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_2058c62e7:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2058c5703:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _201123483_amper(_20112243d_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_2058cab6a:;
			{
				jule::Ptr<_201013142_StructLitExprModel> _325921_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_201013142_StructLitExprModel>(&__jule_any_type100);;
				_20112a9eb_makeStructLitAlloc(&((*(_self_))._field_d), &(_325921_lit));
			}
		}
		else {
			_case_begin_2058ca609:;
			{
				{
					
					if (_20114aad7_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_2058cb1a9:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_201140615_Ptr>(_201140615_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 26)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_20101288e_UnaryExprModel>(_20101288e_UnaryExprModel{._field_Expr=jule::new_ptr<_2010edb23_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_2058cab04:;
						{
							(*(_self_))._field_d=nullptr;
						}
					}
					_match_end_2058caa38:;
				};
			}
		}
		_match_end_2058ca582:;
	};
	if (((*(_self_))._field_d != nullptr)) {
		(*(_self_))._field_d.get()._field_Constant=nullptr;
		(*(_self_))._field_d.get()._field_Lvalue=false;
	};
}



inline void _20112365e_typeDecl(_20112243d_unaryEval* _self_) {
	_20114243b_typeChecker _328317_tc = _20114243b_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2058ce0be:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_2011472ed_buildPtrFromType(&_328317_tc, &((*(_self_))._field_d.get()._field_Kind)), 26)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2058d15ee:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_201146bd2_buildSptrFromType(&_328317_tc, &((*(_self_))._field_d.get()._field_Kind)), 21)});
			}
		}
		else {
			_case_begin_2058d006a:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2058d0015:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _20112383a_evalData(_20112243d_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_2058d38a9:;
			{
				jule::Ptr<_2011310ea_TypeKind> _330621_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_20111ba42_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
				(*(_self_))._field_e.get()._field_prefix=_330621_prefix;
			}
		}
		else {
			_case_begin_2058d347a:;
			{
				(*(_self_))._field_d=_20111ba42_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
			}
		}
		_match_end_2058d3425:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201123b48_eval(_20112243d_unaryEval* _self_, jule::Ptr<_200ee1b37_UnaryExpr> _331527_u) {
	(*(_self_))._field_u=_331527_u;
	_20112383a_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_20112365e_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_2011310ea_TypeKind> _332613_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2058d7748:;
			{
				_201122a48_minus(_self_);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2058d723c:;
			{
				_201122c24_plus(_self_);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_2058d72a3:;
			{
				_201122e00_caret(_self_);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_2058d7319:;
			{
				_2011230cb_excl(_self_);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2058d7380:;
			{
				_2011232a7_star(_self_);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2058d78e1:;
			{
				_201123483_amper(_self_);
			}
		}
		else {
			_case_begin_2058d71c6:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_2058d7171:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_2058d7957:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str(_332613_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_2010ee492_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_2058d941a:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_2058d93b5:;
	};
	(*(_self_))._field_d.get()._field_Mutable=true;
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _20112243d_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _20112420e_binaryEval static__2011247d6_newPlain(jule::Ptr<_201100691_Eval> _336428_e) {
	return _20112420e_binaryEval{._field_e=_336428_e, };;
}



inline _20112420e_binaryEval static__201124ae4_new(jule::Ptr<_201100691_Eval> _337023_e, jule::Ptr<_1ed694d8c_Token> _337037_op) {
	return _20112420e_binaryEval{._field_e=_337023_e, ._field_op=_337037_op};;
}



inline jule::Bool _201124d58_checkTypeCompatibility(_20112420e_binaryEval* _self_) {
	return _20108e6da_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _201125100_checkStructCommonOperatorCompatibility(_20112420e_binaryEval* _self_) {
	jule::Ptr<_20102330b_FnIns> _338417_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_2058de84e:;
			{
				_338417_overload=_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_2058dd243:;
			{
				_338417_overload=_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2058de750:;
			{
				_338417_overload=_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2058dd7a4:;
			{
				_338417_overload=_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_2058dd81a:;
			{
				_338417_overload=_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2058de8b5:;
			{
				_338417_overload=_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2058de92b:;
			{
				_338417_overload=_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2058de992:;
			{
				_338417_overload=_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_2058dea08:;
			{
				_338417_overload=_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_2058dea6e:;
			{
				_338417_overload=_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_2058dd672:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_2058dd5ea:;
	};
	if ((_338417_overload == nullptr)) {
		_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_20102243c_ParamIns> _341617_p = _338417_overload.get()._field_Params[1LL];;
	return _20108e289_checkAssignType((*(_self_))._field_e.get()._field_s, _341617_p.get()._field_Decl.get()._field_Reference, &(_341617_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_2010edb23_Data> _201125397_evalComptimeTypeInfo(_20112420e_binaryEval* _self_) {
	jule::Ptr<_20104760a_comptimeTypeInfo> _342117_r = _201136dd1_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((_342117_r == nullptr)) {
		_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("comptimeTypeInfo", 16), &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_20104760a_comptimeTypeInfo> _342617_l = _201136dd1_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_2057c7ea7:;
			{
				jule::Ptr<_1ee33c6d2_Const> _342921_constant = static__1ee33d150_NewBool(_2011317b0_Equal(_342617_l.get()._field_base, _342117_r.get()._field_base));;
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_342921_constant, &__jule_any_type19), ._field_Constant=_342921_constant});;
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_2058ea21c:;
			{
				jule::Ptr<_1ee33c6d2_Const> _343621_constant = static__1ee33d150_NewBool((!(_2011317b0_Equal(_342617_l.get()._field_base, _342117_r.get()._field_base))));;
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, ._field_Model=jule::Any(_343621_constant, &__jule_any_type19), ._field_Constant=_343621_constant});;
			}
		}
		else {
			_case_begin_2058e9183:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2058e912d:;
	};
}



inline jule::Ptr<_2010edb23_Data> _20112560b_evalNil(_20112420e_binaryEval* _self_) {
	if ((!(_201132d66_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2058ebe00:;
			{
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else {
			_case_begin_2058ed330:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2058ed286:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201125870_evalEnum(_20112420e_binaryEval* _self_) {
	jule::Ptr<_20103510e_Enum> _346717_enm = _201134054_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2059000ac:;
			{
				jule::Ptr<_2011310ea_TypeKind> _347121_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_201134054_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_347121_rkind=_201134054_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_20108e6da_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_346717_enm.get()._field_Kind.get()._field_Kind), &(_347121_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		_match_end_205900035:;
	};
	if (((_201134054_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_346717_enm != _201134054_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_346717_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_2058ee441:;
			{
				if ((!(_1ee33c292_IsNum(_2011314a2_Str(_346717_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_346717_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_205904c2c:;
			{
				jule::Ptr<_201034619_EnumItem> _350117_first = _346717_enm.get()._field_Items[0LL];;
				{
					
					if (_1ee341373_IsI64(_350117_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_20590748d:;
						{
							if ((_1ee33deca_ReadI64(_350117_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else if (_1ee3415d7_IsU64(_350117_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_205906aec:;
						{
							if ((_1ee33e23e_ReadU64(_350117_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else {
						_case_begin_2059070e7:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3514:17"));;
						}
					}
					_match_end_205907081:;
				};
				_julec_label_err:;
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_346717_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_201100ebb_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_next:;
				goto _case_begin_205904c93;
			}
		}
		else if (_match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_205904c93:;
			{
				if (((_201133817_Prim(_346717_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1ee33bbcb_IsInt(_201138b80_Str(_201133817_Prim(_346717_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_346717_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_205903d2a:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_346717_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205903c3c:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201125ad4_evalTypeEnum(_20112420e_binaryEval* _self_) {
	jule::Ptr<_201036709_TypeEnum> _353417_enm = _2011342b8_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_201124d58_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_20590e594:;
			{
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else {
			_case_begin_20590e154:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_201036a39_Str(_353417_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20590dd24:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201125d48_evalSptr(_20112420e_binaryEval* _self_) {
	if ((!(_201124d58_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_205910cd2:;
			{
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else {
			_case_begin_2059106d8:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205910683:;
	};
}



inline jule::Ptr<_2010edb23_Data> _2011260ac_evalPtr(_20112420e_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_20591229a:;
			{
				if ((!(_201124d58_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_205913873:;
			{
				if ((_201133ce0_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_2010edb23_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_2011410d8_IsUnsafe(_201133ce0_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_20112bb40_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_2059124a9:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205912047:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201126321_evalArr(_20112420e_binaryEval* _self_) {
	if ((!(_201124d58_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_20591834a:;
			{
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else {
			_case_begin_205918427:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2059141d1:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201126585_evalSlc(_20112420e_binaryEval* _self_) {
	if ((!(_201124d58_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_20591a11b:;
			{
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else {
			_case_begin_205919a22:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2059199bc:;
	};
}



inline jule::Ptr<_2010edb23_Data> _2011267e9_evalStruct(_20112420e_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_20591b859:;
			{
				if ((_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_20591b8c0:;
			{
				if ((_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_20591bc00:;
			{
				if ((_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_20591bc66:;
			{
				if ((_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_20591bccc:;
			{
				if ((!(_201124d58_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		_match_end_20591b381:;
	};
	if ((!(_201125100_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_2010edb23_Data> _201126a5d_evalTrait(_20112420e_binaryEval* _self_) {
	if ((!(_201124d58_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_205924994:;
			{
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else {
			_case_begin_205924ab5:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2059247da:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201126cc2_evalAny(_20112420e_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_205925e5c:;
			{
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else {
			_case_begin_20592616b:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205925be8:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201127036_evalBool(_20112420e_binaryEval* _self_) {
	if ((!(_201124d58_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_205927d71:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_205927777:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205927722:;
	};
}



inline jule::Ptr<_2010edb23_Data> _20112729a_evalStr(_20112420e_binaryEval* _self_) {
	jule::Str _373317_rk = _2011314a2_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_373317_rk.equal("str", 3))) {
		_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_373317_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_205929845:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_20592bb66:;
			{
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		else {
			_case_begin_20592a1a3:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20592a14d:;
	};
}



inline void _201127476_setTypeToGreater(_20112420e_binaryEval* _self_) {
	jule::Ptr<_201138850_Prim> _375813_lp = _201133817_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_201138850_Prim> _375913_rp = _201133817_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_2010ee492_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_2010ee492_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_375913_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_2010ee492_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_375813_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_2010ee492_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_375913_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1ee33a614_IsGreater(_375913_rp.get()._field_Kind, _375813_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_2010ee492_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_375913_rp.get()._field_Kind;
		};
	};
}



inline void _2011276b8_checkModData(_20112420e_binaryEval* _self_, jule::Ptr<_2010edb23_Data>* _379136_d) {
	if ((!(_2010ee492_IsConst((*(_379136_d)).ptr())))) {
		if (((_201133817_Prim((*(_379136_d)).get()._field_Kind.ptr()) == nullptr) || (!(_1ee33bbcb_IsInt(_201133817_Prim((*(_379136_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_2010d690d_sigAssignable(jule::Str("i64", 3), _379136_d)) {
			_case_begin_205935d90:;
			{
				_1ee34043d_SetI64((*(_379136_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ee33ebe0_AsI64((*(_379136_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_2010d6c93_unsigAssignable(jule::Str("u64", 3), _379136_d)) {
			_case_begin_205935a93:;
			{
				_1ee3406b3_SetU64((*(_379136_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ee33ee54_AsU64((*(_379136_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_20593461e:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_2059345b9:;
	};
}



inline void _201127894_mod(_20112420e_binaryEval* _self_) {
	_2011276b8_checkModData(_self_, &((*(_self_))._field_l));
	_2011276b8_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _201127c4b_numbersAreCompatibile(_20112420e_binaryEval* _self_, jule::Str* _381337_lk, jule::Str* _381347_rk) {
	if ((!(_1ee33c292_IsNum((*(_381347_rk)))))) {
		return false;;
	};
	if ((_2010ee492_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_381337_lk)).equal("f32", 3)) {
		if ((_2010ee492_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_381347_rk)).equal("f32", 3);;
	};
	if ((*(_381337_lk)).equal("f64", 3)) {
		if ((_2010ee492_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_381347_rk)).equal("f64", 3);;
	};
	if ((_2010ee492_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_381337_lk)) == (*(_381347_rk)));;
}



inline jule::Ptr<_2010edb23_Data> _201127eb0_evalFloat(_20112420e_binaryEval* _self_) {
	jule::Str _383913_lk = _201133817_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _384013_rk = _201133817_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_201127c4b_numbersAreCompatibile(_self_, &(_383913_lk), &(_384013_rk))))) {
		_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_383913_lk, &__jule_any_type5),jule::Any(_384013_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_20593d837:;
			{
				if (((!(_2010ee492_IsConst((*(_self_))._field_l.ptr()))) || (!(_2010d70d4_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_383913_lk, &__jule_any_type5),jule::Any(_384013_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_2010ee492_IsConst((*(_self_))._field_r.ptr()))) || (!(_2010d70d4_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_383913_lk, &__jule_any_type5),jule::Any(_384013_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1ee34043d_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ee33ebe0_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_1ee3406b3_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ee33ee54_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_20112b425_isOkForShifting(&((*(_self_))._field_r))))) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_20593cced:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_205942dad:;
			{
				_201127476_setTypeToGreater(_self_);
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		_match_end_205942c26:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_20593cb00:;
			{
				_201127476_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_205944981:;
			{
				if ((!(_1ee33bbcb_IsInt(_384013_rk)))) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_383913_lk, &__jule_any_type5),jule::Any(_384013_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_201127894_mod(_self_);
				_201127476_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_205943dc0:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2059438c5:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201128224_evalInt(_20112420e_binaryEval* _self_) {
	jule::Str _390313_lk = _201133817_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _390413_rk = _201133817_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_205944a6e:;
			{
				if (((!(_1ee33bbcb_IsInt(_390313_lk))) || (!(_1ee33bbcb_IsInt(_390413_rk))))) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_390313_lk, &__jule_any_type5),jule::Any(_390413_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_20112b425_isOkForShifting(&((*(_self_))._field_r))))) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_2059478c9:;
	};
	if ((!(_201127c4b_numbersAreCompatibile(_self_, &(_390313_lk), &(_390413_rk))))) {
		_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_390313_lk, &__jule_any_type5),jule::Any(_390413_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_20594a5be:;
			{
				return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5841_primBool, });;
			}
		}
		_match_end_205949bea:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_205947a0b:;
			{
				_201127476_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_20594c0c6:;
			{
				_201127894_mod(_self_);
				_201127476_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_20594b3b1:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20594b35b:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201128488_evalPrim(_20112420e_binaryEval* _self_) {
	jule::Ptr<_201138850_Prim> _396013_prim = _201133817_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_20113b7dc_IsBool(_396013_prim.ptr())) {
			_case_begin_20594de1e:;
			{
				return _201127036_evalBool(_self_);;
			}
		}
		else if (_20113ba51_IsStr(_396013_prim.ptr())) {
			_case_begin_20594de96:;
			{
				return _20112729a_evalStr(_self_);;
			}
		}
		_match_end_20594dd64:;
	};
	if ((_201133817_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_201138b80_Str(_396013_prim.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_1ee33beea_IsFloat(_396013_prim.get()._field_Kind)) {
			_case_begin_20595153c:;
			{
				return _201127eb0_evalFloat(_self_);;
			}
		}
		else if (_1ee33bbcb_IsInt(_396013_prim.get()._field_Kind)) {
			_case_begin_205950e10:;
			{
				return _201128224_evalInt(_self_);;
			}
		}
		else {
			_case_begin_205950d99:;
			{
				return nullptr;;
			}
		}
		_match_end_20594cea6:;
	};
}



inline void _201128664_checkSpecialCases(_20112420e_binaryEval* _self_) {
	if (((!(_201132629_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_201132151_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_201132629_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_201132151_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_2010edb23_Data> _2011288c8_evalOp(_20112420e_binaryEval* _self_) {
	_201128664_checkSpecialCases(_self_);
	{
		
		if (_2011323b5_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_205955189:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if ((_201136dd1_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205954a6d:;
			{
				({
					jule::Ptr<_2010edb23_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_205956102;
			}
		}
		else if ((_201136dd1_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205956102:;
			{
				return _201125397_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_201133817_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _20113bcb5_IsAny(_201133817_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2059561e0:;
			{
				({
					jule::Ptr<_2010edb23_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2059562ab;
			}
		}
		else if (_201132151_IsNil((*(_self_))._field_r.get()._field_Kind.ptr())) {
			_case_begin_2059562ab:;
			{
				({
					jule::Ptr<_2010edb23_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_205956322;
			}
		}
		else if (_201132151_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_205956322:;
			{
				return _20112560b_evalNil(_self_);;
			}
		}
		else if (((_201133817_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _20113bcb5_IsAny(_201133817_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_205956388:;
			{
				return _201126cc2_evalAny(_self_);;
			}
		}
		else if ((_2011342b8_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2059563ee:;
			{
				({
					jule::Ptr<_2010edb23_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_205956465;
			}
		}
		else if ((_2011342b8_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205956465:;
			{
				return _201125ad4_evalTypeEnum(_self_);;
			}
		}
		else if ((_201134054_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2059564cb:;
			{
				({
					jule::Ptr<_2010edb23_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_205956542;
			}
		}
		else if ((_201134054_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205956542:;
			{
				return _201125870_evalEnum(_self_);;
			}
		}
		else if ((_201133a7b_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2059565a8:;
			{
				({
					jule::Ptr<_2010edb23_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_20595661e;
			}
		}
		else if ((_201133a7b_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20595661e:;
			{
				return _201125d48_evalSptr(_self_);;
			}
		}
		else if ((_201133ce0_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205956685:;
			{
				({
					jule::Ptr<_2010edb23_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2059566eb;
			}
		}
		else if ((_201133ce0_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2059566eb:;
			{
				return _2011260ac_evalPtr(_self_);;
			}
		}
		else if ((_20113452c_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205956762:;
			{
				return _201126321_evalArr(_self_);;
			}
		}
		else if ((_201134791_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2059567c8:;
			{
				return _201126585_evalSlc(_self_);;
			}
		}
		else if ((_201134ecd_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20595683e:;
			{
				({
					jule::Ptr<_2010edb23_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2059568a5;
			}
		}
		else if ((_201134ecd_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2059568a5:;
			{
				return _201126a5d_evalTrait(_self_);;
			}
		}
		else if ((_201134c69_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20595691b:;
			{
				return _2011267e9_evalStruct(_self_);;
			}
		}
		else if ((_201133817_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205956982:;
			{
				return _201128488_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_205954e8b:;
			{
				_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_2011314a2_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205954e25:;
	};
}



inline void _201128b4d_evalConst(_20112420e_binaryEval* _self_, jule::Ptr<_2010edb23_Data>* _405133_d) {
	{
		
		if (((*(_405133_d)) == nullptr) || ((*(_self_))._field_l.get()._field_Model == nullptr) || ((*(_self_))._field_r.get()._field_Model == nullptr)) {
			_case_begin_2059660ce:;
			{
				return;;
			}
		}
		else if ((!(_2010ee492_IsConst((*(_self_))._field_l.ptr()))) || (!(_2010ee492_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_2059666c8:;
			{
				(*(_405133_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_205965ebe:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_20596839a:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ee33d150_NewBool(_1ee342cc0_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_205968411:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ee33d150_NewBool((!(_1ee342cc0_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_205968477:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ee33d150_NewBool(_1ee3429b2_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_2059684dd:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ee33d150_NewBool(_1ee3426a4_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_205968554:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ee33d150_NewBool(_1ee3436e9_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_2059685ba:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ee33d150_NewBool(_1ee3430cd_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_205968631:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ee33d150_NewBool(_1ee343a07_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_205968697:;
			{
				(*(_405133_d)).get()._field_Constant=static__1ee33d150_NewBool(_1ee3433db_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_20596870d:;
			{
				_1ee343d15_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_205968774:;
			{
				_1ee344123_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2059687da:;
			{
				_1ee344431_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_205968851:;
			{
				jule::Bool _409017_ok = _1ee34473e_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_409017_ok)) && (_1ee3401b8_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_201138850_Prim> _409521_prim = _201133817_Prim((*(_405133_d)).get()._field_Kind.ptr());;
				{
					
					if (_1ee33b648_IsSigInt(_409521_prim.get()._field_Kind)) {
						_case_begin_205974b9d:;
						{
							_1ee34043d_SetI64((*(_405133_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ee33ebe0_AsI64((*(_405133_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_1ee33b934_IsUnsigInt(_409521_prim.get()._field_Kind)) {
						_case_begin_205974c25:;
						{
							_1ee3406b3_SetU64((*(_405133_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ee33ee54_AsU64((*(_405133_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_205974ae3:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2059688c8:;
			{
				jule::Bool _410317_ok = _1ee344a4c_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_410317_ok)) && (_1ee3401b8_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_205968950:;
			{
				_1ee345168_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2059689c7:;
			{
				_1ee344d5a_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_205968a4e:;
			{
				_1ee345476_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_205968ac6:;
			{
				_1ee345784_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_205968b4d:;
			{
				_1ee345a92_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_405133_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_205967b5d:;
	};
	(*(_405133_d)).get()._field_Model=jule::Any((*(_405133_d)).get()._field_Constant, &__jule_any_type19);
	_20112c8bb_applyCastModelByEnum(_405133_d, _201134054_Enum((*(_405133_d)).get()._field_Kind.ptr()));
}



inline void _201128dc3_checkData(_20112420e_binaryEval* _self_, jule::Ptr<_2010edb23_Data>* _412833_d) {
	jule::Ptr<_20102330b_FnIns> _412913_f = _201134a05_Fn((*(_412833_d)).get()._field_Kind.ptr());;
	if ((((_412913_f != nullptr) && (_412913_f.get()._field_Decl != nullptr)) && _201020d31_IsMethod(_412913_f.get()._field_Decl.ptr()))) {
		_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _20112909e_checkDatas(_20112420e_binaryEval* _self_) {
	_201128dc3_checkData(_self_, &((*(_self_))._field_l));
	_201128dc3_checkData(_self_, &((*(_self_))._field_r));
}



inline void _201129324_setModel(_20112420e_binaryEval* _self_, jule::Ptr<_2010edb23_Data>* _414032_d) {
	if (_2010ee492_IsConst((*(_414032_d)).ptr())) {
		if (((_2010ee492_IsConst((*(_self_))._field_l.ptr()) && _2010ee492_IsConst((*(_self_))._field_r.ptr())) || (((*(_self_))._field_l.get()._field_Model == nullptr) && ((*(_self_))._field_r.get()._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_2010edb23_Data> _414918_l;;
	jule::Ptr<_2010edb23_Data> _414925_r;;
	({
		jule::Ptr<_2010edb23_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_414918_l = ___jule_assign_arg;
		_414925_r = _1___jule_assign_arg;
	});
	if ((!(_2010ee7a0_GoodOperand(_414918_l.ptr(), &(_414925_r))))) {
		({
			jule::Ptr<_2010edb23_Data> ___jule_assign_arg = _414925_r;
			jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = _414918_l;
			_414918_l = ___jule_assign_arg;
			_414925_r = _1___jule_assign_arg;
		});
	};
	(*(_414032_d)).get()._field_Model=jule::Any(jule::new_ptr<_2010124d7_BinopExprModel>(_2010124d7_BinopExprModel{._field_Left=jule::new_ptr<_201012020_OperandExprModel>(_201012020_OperandExprModel{._field_Kind=_414918_l.get()._field_Kind, ._field_Model=_414918_l.get()._field_Model}), ._field_Right=jule::new_ptr<_201012020_OperandExprModel>(_201012020_OperandExprModel{._field_Kind=_414925_r.get()._field_Kind, ._field_Model=_414925_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _201129599_postEval(_20112420e_binaryEval* _self_, jule::Ptr<_2010edb23_Data>* _416732_d) {
	(*(_416732_d)).get()._field_Lvalue=false;
	_201129324_setModel(_self_, _416732_d);
}



inline jule::Ptr<_2010edb23_Data> _201129951_solveExplicit(_20112420e_binaryEval* _self_, jule::Ptr<_2010edb23_Data>* _417237_l, jule::Ptr<_2010edb23_Data>* _417252_r) {
	({
		jule::Ptr<_2010edb23_Data> ___jule_assign_arg = (*(_417237_l));
		jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = (*(_417252_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_20112909e_checkDatas(_self_);
	jule::Ptr<_2010edb23_Data> _417717_d = _2011288c8_evalOp(_self_);;
	({
		jule::Ptr<_2010edb23_Data> ___jule_assign_arg = (*(_417237_l));
		jule::Ptr<_2010edb23_Data> _1___jule_assign_arg = (*(_417252_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_201128b4d_evalConst(_self_, &(_417717_d));
	if ((_417717_d != nullptr)) {
		_417717_d.get()._field_Mutable=true;
		_201129599_postEval(_self_, &(_417717_d));
	};
	return _417717_d;;
}



inline jule::Ptr<_2010edb23_Data> _201129c5e_eval(_20112420e_binaryEval* _self_, jule::Ptr<_200ee3144_BinopExpr>* _419228_op) {
	if ((*(_419228_op)).get()._field_Op.get()._field_Kind.equal("=", 1)) {
		_201100b9c_pushErr((*(_self_))._field_e.ptr(), (*(_419228_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_201100ebb_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2010edb23_Data> _419917_l = _20111bd50_evalExpr1((*(_self_))._field_e, (*(_419228_op)).get()._field_Left);;
	if (((_419917_l == nullptr) || (_419917_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_2011310ea_TypeKind> _420417_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_419917_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_420417_prefix;
	});;
	jule::Ptr<_2010edb23_Data> _420717_r = _20111bd50_evalExpr1((*(_self_))._field_e, (*(_419228_op)).get()._field_Right);;
	if (((_420717_r == nullptr) || (_420717_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_419228_op)).get()._field_Op;
	jule::Ptr<_2010edb23_Data> _421417_d = _201129951_solveExplicit(_self_, &(_419917_l), &(_420717_r));;
	if ((((_421417_d != nullptr) && _419917_l.get()._field_IsRune) && _420717_r.get()._field_IsRune)) {
		_421417_d.get()._field_IsRune=true;
	};
	return _421417_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _20112420e_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20112e868_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2011303a2_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2011314a2_Str(_2011310ea_TypeKind* _self_) {
	if (_201132151_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		(_7417_kind).append("...", 3);
	};
	if (_201131ddc_Binded(_self_)) {
		(_7417_kind).append("cpp.", 4);
		_7417_kind+=(*(_self_))._field_BindIdent;
	} else {
		_7417_kind+=_201130b88_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._201130737_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _2011317b0_Equal(jule::Ptr<_2011310ea_TypeKind> _self_, jule::Ptr<_2011310ea_TypeKind> _9021_other) {
	if (_201132151_IsNil(_self_.ptr())) {
		return _201132151_IsNil(_9021_other.ptr());;
	};
	if (_201131ddc_Binded(_self_.ptr())) {
		return (_201131ddc_Binded(_9021_other.ptr()) && (_self_.get()._field_BindIdent == _9021_other.get()._field_BindIdent));;
	};
	return _201130b88_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._201130a45_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _201131ddc_Binded(_2011310ea_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _201132151_IsNil(_2011310ea_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _2011323b5_Void(_2011310ea_TypeKind* _self_) {
	jule::Ptr<_201138850_Prim> _11013_prim = _201133817_Prim(_self_);;
	return ((_11013_prim != nullptr) && _11013_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _201132629_Comparable(_2011310ea_TypeKind* _self_) {
	{
		_2011310ea_TypeKind* _11721__self = (&((*(_self_))));;
		if ((_201134c69_Struct(_11721__self) != nullptr)) {
			return _201134c69_Struct(_11721__self).get()._field_Comparable;;
		};
		return (((_201135242_Map(_11721__self) == nullptr) && (_201134791_Slc(_11721__self) == nullptr)) && (_201134a05_Fn(_11721__self) == nullptr));;
	};
}



inline jule::Bool _20113288d_Mutable(_2011310ea_TypeKind* _self_) {
	{
		_2011310ea_TypeKind* _12821__self = (&((*(_self_))));;
		if ((_201134c69_Struct(_12821__self) != nullptr)) {
			return _201134c69_Struct(_12821__self).get()._field_Mutable;;
		};
		if ((_201134ecd_Trait(_12821__self) != nullptr)) {
			return _201134ecd_Trait(_12821__self).get()._field_Mutable;;
		};
		if ((_201133817_Prim(_12821__self) != nullptr)) {
			jule::Ptr<_201138850_Prim> _13621_p = _201133817_Prim(_12821__self);;
			return _20113bcb5_IsAny(_13621_p.ptr());;
		};
		if ((_20113452c_Arr(_12821__self) != nullptr)) {
			return _20113288d_Mutable(_20113452c_Arr(_12821__self).get()._field_Elem.ptr());;
		};
		return (((_201134791_Slc(_12821__self) != nullptr) || (_201133ce0_Ptr(_12821__self) != nullptr)) || (_201133a7b_Sptr(_12821__self) != nullptr));;
	};
}



inline jule::Bool _201132b02_Ordered(_2011310ea_TypeKind* _self_) {
	{
		_2011310ea_TypeKind* _15121__self = (&((*(_self_))));;
		jule::Ptr<_201138850_Prim> _15217_prim = _201133817_Prim(_15121__self);;
		if ((_15217_prim != nullptr)) {
			return (_1ee33c292_IsNum(_15217_prim.get()._field_Kind) || _20113ba51_IsStr(_15217_prim.ptr()));;
		};
		if ((_201133ce0_Ptr(_15121__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_20100d071_StructIns> _15917_s = _201134c69_Struct(_15121__self);;
		if ((_15917_s != nullptr)) {
			return ((((_15917_s.get()._field_Operators._field_Gt != nullptr) && (_15917_s.get()._field_Operators._field_GtEq != nullptr)) && (_15917_s.get()._field_Operators._field_Lt != nullptr)) && (_15917_s.get()._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_20103510e_Enum> _16617_enm = _201134054_Enum(_15121__self);;
		if ((_16617_enm != nullptr)) {
			return _1ee33c292_IsNum(_2011314a2_Str(_16617_enm.get()._field_Kind.get()._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _201132d66_NilCompatible(_2011310ea_TypeKind* _self_) {
	{
		_2011310ea_TypeKind* _17721__self = (&((*(_self_))));;
		jule::Ptr<_201138850_Prim> _17917_prim = _201133817_Prim(_17721__self);;
		if (((_17917_prim != nullptr) && _20113bcb5_IsAny(_17917_prim.ptr()))) {
			return true;;
		};
		return (((((((_201132151_IsNil(_17721__self) || (_201134a05_Fn(_17721__self) != nullptr)) || (_201133a7b_Sptr(_17721__self) != nullptr)) || (_201133ce0_Ptr(_17721__self) != nullptr)) || (_201134ecd_Trait(_17721__self) != nullptr)) || (_201134791_Slc(_17721__self) != nullptr)) || (_201135242_Map(_17721__self) != nullptr)) || (_2011342b8_TypeEnum(_17721__self) != nullptr));;
	};
}



inline jule::Bool _2011330ca_PerformsRC(_2011310ea_TypeKind* _self_) {
	{
		_2011310ea_TypeKind* _19821__self = (&((*(_self_))));;
		jule::Ptr<_201138850_Prim> _19917_prim = _201133817_Prim(_19821__self);;
		if ((_19917_prim != nullptr)) {
			return _20113bcb5_IsAny(_19917_prim.ptr());;
		};
		return (((_201133a7b_Sptr(_19821__self) != nullptr) || (_201134791_Slc(_19821__self) != nullptr)) || (_201134ecd_Trait(_19821__self) != nullptr));;
	};
}



inline jule::Bool _20113333e_SupportsCloning(_2011310ea_TypeKind* _self_) {
	{
		_2011310ea_TypeKind* _21021__self = (&((*(_self_))));;
		{
			
			if ((_201133817_Prim(_21021__self) != nullptr)) {
				_case_begin_2059b2b31:;
				{
					return (!(_20113bcb5_IsAny(_201133817_Prim(_21021__self).ptr())));;
				}
			}
			else if ((_201134054_Enum(_21021__self) != nullptr)) {
				_case_begin_2059b357c:;
				{
					return true;;
				}
			}
			else if ((_201134a05_Fn(_21021__self) != nullptr)) {
				_case_begin_2059b35e3:;
				{
					return true;;
				}
			}
			else if ((_201133ce0_Ptr(_21021__self) != nullptr)) {
				_case_begin_2059b30e8:;
				{
					return true;;
				}
			}
			else if ((_201134791_Slc(_21021__self) != nullptr)) {
				_case_begin_2059b315e:;
				{
					return _20113333e_SupportsCloning(_201134791_Slc(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_201135242_Map(_21021__self) != nullptr)) {
				_case_begin_2059b31c5:;
				{
					jule::Ptr<_20113e0b4_Map> _22321_m = _201135242_Map(_21021__self);;
					return (_20113333e_SupportsCloning(_22321_m.get()._field_Key.ptr()) && _20113333e_SupportsCloning(_22321_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_20113452c_Arr(_21021__self) != nullptr)) {
				_case_begin_2059b323b:;
				{
					return _20113333e_SupportsCloning(_20113452c_Arr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_201133a7b_Sptr(_21021__self) != nullptr)) {
				_case_begin_2059b3736:;
				{
					return _20113333e_SupportsCloning(_201133a7b_Sptr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_201134c69_Struct(_21021__self) != nullptr)) {
				_case_begin_2059b379c:;
				{
					jule::Ptr<_20100d071_StructIns> _23025_s = _201134c69_Struct(_21021__self);;
					return (((_23025_s.get()._field_Decl != nullptr) && (!(_23025_s.get()._field_Decl.get()._field_Binded))) && _20100ba86_IsDerives(_23025_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_2059b3082:;
				{
					return false;;
				}
			}
			_match_end_2059b301b:;
		};
	};
}



inline jule::Bool _2011335a3_Variadicable(_2011310ea_TypeKind* _self_) {
	{
		_2011310ea_TypeKind* _24121__self = (&((*(_self_))));;
		return (_201134791_Slc(_24121__self) != nullptr);;
	};
}



inline jule::Ptr<_201138850_Prim> _201133817_Prim(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_2059ba023:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_201138850_Prim>(20);;
			}
		}
		else {
			_case_begin_2059a8231:;
			{
				return nullptr;;
			}
		}
		_match_end_2059a81cb:;
	};
}



inline jule::Ptr<_20113c0a1_Sptr> _201133a7b_Sptr(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_2059ba2a9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20113c0a1_Sptr>(21);;
			}
		}
		else {
			_case_begin_2059ba908:;
			{
				return nullptr;;
			}
		}
		_match_end_2059ba8a3:;
	};
}



inline jule::Ptr<_201140615_Ptr> _201133ce0_Ptr(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_2059ba991:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_201140615_Ptr>(26);;
			}
		}
		else {
			_case_begin_2059bb574:;
			{
				return nullptr;;
			}
		}
		_match_end_2059bb9a3:;
	};
}



inline jule::Ptr<_20103510e_Enum> _201134054_Enum(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_2059bb62e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20103510e_Enum>(3);;
			}
		}
		else {
			_case_begin_2059bc245:;
			{
				return nullptr;;
			}
		}
		_match_end_2059bc674:;
	};
}



inline jule::Ptr<_201036709_TypeEnum> _2011342b8_TypeEnum(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_2059bc300:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_201036709_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_2059bce16:;
			{
				return nullptr;;
			}
		}
		_match_end_2059bd345:;
	};
}



inline jule::Ptr<_20113eba8_Arr> _20113452c_Arr(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_2059bcec1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20113eba8_Arr>(25);;
			}
		}
		else {
			_case_begin_2059bdad7:;
			{
				return nullptr;;
			}
		}
		_match_end_2059be016:;
	};
}



inline jule::Ptr<_20113ca0d_Slc> _201134791_Slc(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_2059bdb92:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20113ca0d_Slc>(22);;
			}
		}
		else {
			_case_begin_2059be7a8:;
			{
				return nullptr;;
			}
		}
		_match_end_2059bebd7:;
	};
}



inline jule::Ptr<_20102330b_FnIns> _201134a05_Fn(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_2059be863:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20102330b_FnIns>(1);;
			}
		}
		else {
			_case_begin_2059c0479:;
			{
				return nullptr;;
			}
		}
		_match_end_2059c08a8:;
	};
}



inline jule::Ptr<_20100d071_StructIns> _201134c69_Struct(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_2059c0534:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20100d071_StructIns>(0);;
			}
		}
		else {
			_case_begin_2059c114a:;
			{
				return nullptr;;
			}
		}
		_match_end_2059c1579:;
	};
}



inline jule::Ptr<_20103287b_Trait> _201134ecd_Trait(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_2059c1205:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20103287b_Trait>(2);;
			}
		}
		else {
			_case_begin_2059c1d1b:;
			{
				return nullptr;;
			}
		}
		_match_end_2059c224a:;
	};
}



inline jule::Ptr<_20113e0b4_Map> _201135242_Map(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_2059c1dc6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20113e0b4_Map>(24);;
			}
		}
		else {
			_case_begin_2059c29dc:;
			{
				return nullptr;;
			}
		}
		_match_end_2059c2e1b:;
	};
}



inline jule::Ptr<_20113d613_Tuple> _2011354a6_Tup(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_2059c2a97:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20113d613_Tuple>(23);;
			}
		}
		else {
			_case_begin_2059c36ad:;
			{
				return nullptr;;
			}
		}
		_match_end_2059c3adc:;
	};
}



inline jule::Bool _20113571a_comptime(_2011310ea_TypeKind* _self_) {
	return ((((((((((((((_201136b6c_comptimeTypeInfos(_self_) != nullptr) || (_201136dd1_comptimeTypeInfo(_self_) != nullptr)) || (_20113597e_comptimeStructFields(_self_) != nullptr)) || (_201135be3_comptimeStructField(_self_) != nullptr)) || (_201135e57_comptimeEnumFields(_self_) != nullptr)) || (_2011361bb_comptimeEnumField(_self_) != nullptr)) || (_201137145_comptimeStatics(_self_) != nullptr)) || (_2011373a9_comptimeStatic(_self_) != nullptr)) || (_201136430_comptimeParams(_self_) != nullptr)) || (_201136694_comptimeParam(_self_) != nullptr)) || (_201136908_comptimeRange(_self_) != nullptr)) || (_20113761d_comptimeValue(_self_) != nullptr)) || (_201137ae6_comptimeFiles(_self_) != nullptr)) || (_201137882_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_20103ad7e_comptimeStructFields> _20113597e_comptimeStructFields(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_2059c8b14:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20103ad7e_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_2059c852b:;
			{
				return nullptr;;
			}
		}
		_match_end_2059c84c6:;
	};
}



inline jule::Ptr<_201039355_comptimeStructField> _201135be3_comptimeStructField(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_2059c87c3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_201039355_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_2059c8d78:;
			{
				return nullptr;;
			}
		}
		_match_end_2059c8bd0:;
	};
}



inline jule::Ptr<_20104157c_comptimeEnumFields> _201135e57_comptimeEnumFields(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_2059c8e11:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20104157c_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_2059c9a7c:;
			{
				return nullptr;;
			}
		}
		_match_end_2059c9a27:;
	};
}



inline jule::Ptr<_20104035b_comptimeEnumField> _2011361bb_comptimeEnumField(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_2059c9b15:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20104035b_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_2059ca74d:;
			{
				return nullptr;;
			}
		}
		_match_end_2059ca6e8:;
	};
}



inline jule::Ptr<_201044b79_comptimeParams> _201136430_comptimeParams(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_2059ca7d6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_201044b79_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_2059cb41e:;
			{
				return nullptr;;
			}
		}
		_match_end_2059cb3b9:;
	};
}



inline jule::Ptr<_201042acd_comptimeParam> _201136694_comptimeParam(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_2059cb4a7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_201042acd_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_2059cc0e0:;
			{
				return nullptr;;
			}
		}
		_match_end_2059cc08a:;
	};
}



inline jule::Ptr<_201038860_comptimeRange> _201136908_comptimeRange(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_2059cc178:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_201038860_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_2059cccb1:;
			{
				return nullptr;;
			}
		}
		_match_end_2059ccc5b:;
	};
}



inline jule::Ptr<_201046142_comptimeTypeInfos> _201136b6c_comptimeTypeInfos(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_2059ccd49:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_201046142_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_2059cd982:;
			{
				return nullptr;;
			}
		}
		_match_end_2059cd92c:;
	};
}



inline jule::Ptr<_20104760a_comptimeTypeInfo> _201136dd1_comptimeTypeInfo(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_2059cda1a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20104760a_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_2059ce653:;
			{
				return nullptr;;
			}
		}
		_match_end_2059ce5ed:;
	};
}



inline jule::Ptr<_20103de1a_comptimeStatics> _201137145_comptimeStatics(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_2059ce6db:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20103de1a_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_2059d0324:;
			{
				return nullptr;;
			}
		}
		_match_end_2059d02be:;
	};
}



inline jule::Ptr<_20103c358_comptimeStatic> _2011373a9_comptimeStatic(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_2059d03ac:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20103c358_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_2059d0ee5:;
			{
				return nullptr;;
			}
		}
		_match_end_2059d0e90:;
	};
}



inline jule::Ptr<_20104d105_comptimeValue> _20113761d_comptimeValue(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_2059d107d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_20104d105_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_2059d1bb6:;
			{
				return nullptr;;
			}
		}
		_match_end_2059d1b61:;
	};
}



inline jule::Ptr<_201051bb9_comptimeFile> _201137882_comptimeFile(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_2059d1c4e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_201051bb9_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_2059d2887:;
			{
				return nullptr;;
			}
		}
		_match_end_2059d2832:;
	};
}



inline jule::Ptr<_201050701_comptimeFiles> _201137ae6_comptimeFiles(_2011310ea_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_2059d2920:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_201050701_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_2059d3558:;
			{
				return nullptr;;
			}
		}
		_match_end_2059d3503:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2011310ea_TypeKind _Src) {
	_Stream << _2011314a2_Str(&_Src);
	return _Stream;
}



inline jule::Bool _201138311_checked(_201137e9d_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}



inline void _2011384dc_removeKind(_201137e9d_TypeSymbol* _self_) {
	(*(_self_))._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _201137e9d_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _201138b80_Str(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _201138e8d_Equal(jule::Ptr<_201138850_Prim> _self_, jule::Ptr<_2011310ea_TypeKind> _53821_other) {
	jule::Ptr<_201138850_Prim> _53913_prim = _201133817_Prim(_53821_other.ptr());;
	if ((_53913_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _53913_prim.get()._field_Kind);;
}



inline jule::Bool _201139411_IsConstraint(_201138850_Prim* _self_) {
	return ((((!(_20113ba51_IsStr(_self_))) && (!(_20113bcb5_IsAny(_self_)))) && (!(_20113b7dc_IsBool(_self_)))) && (!(_1ee33c292_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _201139675_IsI8(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _2011398d9_IsI16(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _201139b4d_IsI32(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _201139db2_IsI64(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _20113a126_IsU8(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _20113a38a_IsU16(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _20113a5ee_IsU32(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _20113a863_IsU64(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _20113aac7_IsF32(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _20113ad3b_IsF64(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _20113b0a0_IsInt(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _20113b314_IsUint(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _20113b578_IsUintptr(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _20113b7dc_IsBool(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _20113ba51_IsStr(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _20113bcb5_IsAny(_201138850_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _201138850_Prim _Src) {
	_Stream << _201138b80_Str(&_Src);
	return _Stream;
}



inline jule::Str _20113c414_Str(_20113c0a1_Sptr* _self_) {
	return (jule::Str("&", 1) + _2011314a2_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _20113c722_Equal(jule::Ptr<_20113c0a1_Sptr> _self_, jule::Ptr<_2011310ea_TypeKind> _61521_other) {
	jule::Ptr<_20113c0a1_Sptr> _61613_sptr = _201133a7b_Sptr(_61521_other.ptr());;
	if ((_61613_sptr == nullptr)) {
		return false;;
	};
	return _2011317b0_Equal(_self_.get()._field_Elem, _61613_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _20113c0a1_Sptr _Src) {
	_Stream << _20113c414_Str(&_Src);
	return _Stream;
}



inline jule::Str _20113ce81_Str(_20113ca0d_Slc* _self_) {
	return (jule::Str("[]", 2) + _2011314a2_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _20113d28e_Equal(jule::Ptr<_20113ca0d_Slc> _self_, jule::Ptr<_2011310ea_TypeKind> _63421_other) {
	jule::Ptr<_20113ca0d_Slc> _63513_slc = _201134791_Slc(_63421_other.ptr());;
	if ((_63513_slc == nullptr)) {
		return false;;
	};
	return _2011317b0_Equal(_self_.get()._field_Elem, _63513_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _20113ca0d_Slc _Src) {
	_Stream << _20113ce81_Str(&_Src);
	return _Stream;
}



inline jule::Str _20113d976_Str(_20113d613_Tuple* _self_) {
	jule::Str _65117_s = jule::Str("(", 1);;
	_65117_s+=_2011314a2_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_2059e2765:;
		if (it != expr_end) {
			jule::Ptr<_2011310ea_TypeKind> *_65316_t = it;
			{
				(_65117_s).append(",", 1);
				_65117_s+=_2011314a2_Str((*(_65316_t)).ptr());
			}
			_iter_next_2059e2765:;
			++it;
			goto _iter_begin_2059e2765;
		}
		_iter_end_2059e2765:;
	};
	(_65117_s).append(")", 1);
	return _65117_s;;
}



inline jule::Bool _20113dc84_Equal(jule::Ptr<_20113d613_Tuple> _self_, jule::Ptr<_2011310ea_TypeKind> _66221_other) {
	jule::Ptr<_20113d613_Tuple> _66313_tup = _2011354a6_Tup(_66221_other.ptr());;
	if ((_66313_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _66313_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I32 _67017_i = 0LL;;
	for (; (_67017_i < _self_.get()._field_Types.len()); (_67017_i)++) {
		{
			if ((!(_2011317b0_Equal(_self_.get()._field_Types[_67017_i], _66313_tup.get()._field_Types[_67017_i])))) {
				return false;;
			};
		}
	_iter_next_2059e4d72:;
	}
	_iter_end_2059e4d72:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _20113d613_Tuple _Src) {
	_Stream << _20113d976_Str(&_Src);
	return _Stream;
}



inline jule::Str _20113e427_Str(_20113e0b4_Map* _self_) {
	jule::Str _69017_s = jule::Str("map[", 4);;
	_69017_s+=_2011314a2_Str((*(_self_))._field_Key.ptr());
	(_69017_s).append("]", 1);
	_69017_s+=_2011314a2_Str((*(_self_))._field_Val.ptr());
	return _69017_s;;
}



inline jule::Bool _20113e735_Equal(jule::Ptr<_20113e0b4_Map> _self_, jule::Ptr<_2011310ea_TypeKind> _69821_other) {
	jule::Ptr<_20113e0b4_Map> _69913_m = _201135242_Map(_69821_other.ptr());;
	if ((_69913_m == nullptr)) {
		return false;;
	};
	return (_2011317b0_Equal(_self_.get()._field_Key, _69913_m.get()._field_Key) && _2011317b0_Equal(_self_.get()._field_Val, _69913_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _20113e0b4_Map _Src) {
	_Stream << _20113e427_Str(&_Src);
	return _Stream;
}



inline jule::Str _20114001b_Str(_20113eba8_Arr* _self_) {
	jule::Str _71717_s = jule::Str("[", 1);;
	_71717_s+=_1ee32cd10_Itoa((*(_self_))._field_N);
	(_71717_s).append("]", 1);
	_71717_s+=_2011314a2_Str((*(_self_))._field_Elem.ptr());
	return _71717_s;;
}



inline jule::Bool _201140329_Equal(jule::Ptr<_20113eba8_Arr> _self_, jule::Ptr<_2011310ea_TypeKind> _72521_other) {
	jule::Ptr<_20113eba8_Arr> _72613_arr = _20113452c_Arr(_72521_other.ptr());;
	if ((_72613_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _72613_arr.get()._field_N) && _2011317b0_Equal(_self_.get()._field_Elem, _72613_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _20113eba8_Arr _Src) {
	_Stream << _20114001b_Str(&_Src);
	return _Stream;
}



inline jule::Str _201140978_Str(_201140615_Ptr* _self_) {
	if (_2011410d8_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _2011314a2_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _201140c86_Equal(jule::Ptr<_201140615_Ptr> _self_, jule::Ptr<_2011310ea_TypeKind> _74921_other) {
	jule::Ptr<_201140615_Ptr> _75013_ptr = _201133ce0_Ptr(_74921_other.ptr());;
	if ((_75013_ptr == nullptr)) {
		return false;;
	};
	return _2011317b0_Equal(_self_.get()._field_Elem, _75013_ptr.get()._field_Elem);;
}



inline jule::Bool _2011410d8_IsUnsafe(_201140615_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _201140615_Ptr _Src) {
	_Stream << _201140978_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20114155b_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _201142b34_pushErr(_20114243b_typeChecker* _self_, jule::Ptr<_1ed694d8c_Token> _83526_token, jule::Str _83541_fmt, jule::Slice<jule::Any> _83554_args) {
	_201086eeb_pushErr((*(_self_))._field_s.ptr(), _83526_token, _83541_fmt, _83554_args);
}



inline void _201142d10_allowBuiltin(_20114243b_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _201142edb_disallowBuiltin(_20114243b_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _205a015ba_pushReference(_20114243b_typeChecker* _self_, jule::Ptr<_20100d071_StructIns>* _84740_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_20576c59a_Exist((*(_self_))._field_refers.ptr(), (*(_84740_t)))) {
		return;;
	};
	_201026dd1_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84740_t)), &__jule_any_type9));
}

inline void _205a041e4_pushReference(_20114243b_typeChecker* _self_, jule::Ptr<_20103287b_Trait>* _84740_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_205a05d2d_Exist((*(_self_))._field_refers.ptr(), (*(_84740_t)))) {
		return;;
	};
	_201026dd1_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84740_t)), &__jule_any_type10));
}



inline void _2011434d6_pushReferenceByKind(_20114243b_typeChecker* _self_, jule::Ptr<_2011310ea_TypeKind>* _85743_k) {
	{
		
		if ((_201134c69_Struct((*(_85743_k)).ptr()) != nullptr)) {
			_case_begin_205a00322:;
			{
				jule::Ptr<_20100d071_StructIns> _86021_t = _201134c69_Struct((*(_85743_k)).ptr());;
				_205a015ba_pushReference(_self_, &(_86021_t));
			}
		}
		else if ((_201134ecd_Trait((*(_85743_k)).ptr()) != nullptr)) {
			_case_begin_205a00399:;
			{
				jule::Ptr<_20103287b_Trait> _86321_t = _201134ecd_Trait((*(_85743_k)).ptr());;
				_205a041e4_pushReference(_self_, &(_86321_t));
			}
		}
		_match_end_205a00212:;
	};
}



inline void _20114389e_pushCycleError(_20114243b_typeChecker* _self_, jule::Any _86829_def1, jule::Any _86840_def2, jule::Str* _86856_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _87013_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _87028_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_87028_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_205a08858:;
				{
					return (*(_87028_def)).cast_ptr<_2011303a2_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_205a08e0d:;
				{
					return (*(_87028_def)).cast_ptr<_20100a25a_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_205a089ce:;
				{
					return jule::Str();;
				}
			}
			_match_end_205a08902:;
		};
	});;
	jule::Str _88013_def1Ident = _87013_getIdent(&(_86829_def1));;
	jule::Str _88113_def2Ident = _87013_getIdent(&(_86840_def2));;
	jule::Str _88213_refersTo = _2193a4a4d_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_88013_def1Ident, &__jule_any_type5),jule::Any(_88113_def2Ident, &__jule_any_type5)}));;
	((*(_86856_message))).buffer.insert(0, (((_219317a27_Repeat(jule::Str(" ", 1), 7LL) + _88213_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _201143c56_checkCrossCycle(_20114243b_typeChecker* _self_, jule::Any _88630_decl, jule::Str* _88646_message) {
	{
		auto &_match_expr{ _88630_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_205a0b21d:;
			{
				jule::Ptr<_2011303a2_TypeAlias> _88917_ta = _88630_decl.cast_ptr<_2011303a2_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_88917_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205a0bb9c:;
					if (it != expr_end) {
						jule::Any *_89020_d = it;
						{
							{
								
								if (((*(_89020_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_205a0c7e6:;
									{
										_20114389e_pushCycleError(_self_, jule::Any(_88917_ta, &__jule_any_type67), (*(_89020_d)), _88646_message);
										return false;;
									}
								}
								else if ((!(_201143c56_checkCrossCycle(_self_, (*(_89020_d)), _88646_message)))) {
									_case_begin_205a0c86d:;
									{
										_20114389e_pushCycleError(_self_, jule::Any(_88917_ta, &__jule_any_type67), (*(_89020_d)), _88646_message);
										return false;;
									}
								}
								_match_end_205a0c6d6:;
							};
						}
						_iter_next_205a0bb9c:;
						++it;
						goto _iter_begin_205a0bb9c;
					}
					_iter_end_205a0bb9c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205a0b284:;
			{
				jule::Ptr<_20100a25a_Struct> _90117_s = _88630_decl.cast_ptr<_20100a25a_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_90117_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205a0c51b:;
					if (it != expr_end) {
						jule::Ptr<_20100a25a_Struct> *_90220_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_90220_d))))) {
									_case_begin_205a0e83c:;
									{
										_20114389e_pushCycleError(_self_, jule::Any(_90117_s, &__jule_any_type66), jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message);
										return false;;
									}
								}
								else if ((!(_201143c56_checkCrossCycle(_self_, jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message)))) {
									_case_begin_205a0e8b4:;
									{
										_20114389e_pushCycleError(_self_, jule::Any(_90117_s, &__jule_any_type66), jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message);
										return false;;
									}
								}
								_match_end_205a0e72c:;
							};
						}
						_iter_next_205a0c51b:;
						++it;
						goto _iter_begin_205a0c51b;
					}
					_iter_end_205a0c51b:;
				};
			}
		}
		_match_end_205a0b1b8:;
	};
	return true;;
}



inline jule::Bool _20114410d_checkIllegalCycles(_20114243b_typeChecker* _self_, jule::Ptr<_200edac74_IdentTypeDecl>* _92038_ident, jule::Any _92065_decl) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92065_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205a11443:;
			{
				if (((*(_self_))._field_notPlain || _92065_decl.cast_ptr<_20100a25a_Struct>(&__jule_any_type66).get()._field_Binded)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_205a115db:;
			{
				if (_92065_decl.cast_ptr<_2011303a2_TypeAlias>(&__jule_any_type67).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_205a11311:;
	};
	if ((_92065_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_201142b34_pushErr(_self_, (*(_92038_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _94317_message = jule::Str();;
	if ((!(_201143c56_checkCrossCycle(_self_, _92065_decl, &(_94317_message))))) {
		jule::Str _94621_errMsg = _94317_message;;
		_94317_message=jule::Str();
		_20114389e_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _92065_decl, &(_94317_message));
		_94621_errMsg+=_94317_message;
		_201142b34_pushErr(_self_, (*(_92038_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_94621_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_205a139d9:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*(_self_))._field_referencer.get()._field_refs; __jule_push_dest->push(_92065_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205a15139:;
			{
				{
					auto &_match_expr{ _92065_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_205a15887:;
						{
							jule::Ptr<_20100a25a_Struct> _96225_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_20100a25a_Struct>(&__jule_any_type66);;
							{ jule::Slice<jule::Ptr<_20100a25a_Struct>> &__jule_push_dest = _96225_s.get()._field_Depends; __jule_push_dest.push(_92065_decl.cast_ptr<_20100a25a_Struct>(&__jule_any_type66)); };
						}
					}
					_match_end_205a15799:;
				};
			}
		}
		_match_end_205a14ee6:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_201130b88_Kind> _2011444b5_fromTypeAlias(_20114243b_typeChecker* _self_, jule::Ptr<_200edac74_IdentTypeDecl>* _97033_decl, jule::Ptr<_2011303a2_TypeAlias>* _97060_ta) {
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_97060_ta)).get()._field_Public, (*(_97060_ta)).get()._field_Token)))) {
		_201142b34_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_97060_ta)).get()._field_Used=true;
	if (((*(_97033_decl)).get()._field_Generics.len() > 0LL)) {
		_201142b34_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205a19913:;
			if (it != expr_end) {
				jule::Ptr<_2011303a2_TypeAlias> _98720_bg = *it;
				{
					if (((_98720_bg == (*(_97060_ta))) || (((*(_97060_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _2011317b0_Equal((*(_97060_ta)).get()._field_Kind.get()._field_Kind, _98720_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_205a19913;
					};
				}
				_iter_next_205a19913:;
				++it;
				goto _iter_begin_205a19913;
			}
			_iter_end_205a19913:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205a1b481:;
			if (it != expr_end) {
				jule::Ptr<_2011303a2_TypeAlias> _99820_bg = *it;
				{
					if ((_99820_bg == (*(_97060_ta)))) {
						_201142b34_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_97060_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_205a1c97c:;
						if (it != expr_end) {
							jule::Ptr<_2011303a2_TypeAlias> _100324_dg = *it;
							{
								if ((_99820_bg == _100324_dg)) {
									_201142b34_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_205a1c97c:;
							++it;
							goto _iter_begin_205a1c97c;
						}
						_iter_end_205a1c97c:;
					};
				}
				_iter_next_205a1b481:;
				++it;
				goto _iter_begin_205a1b481;
			}
			_iter_end_205a1b481:;
		};
	};
	jule::Bool _101217_ok = _20114410d_checkIllegalCycles(_self_, _97033_decl, jule::Any((*(_97060_ta)), &__jule_any_type67));;
	if ((!(_101217_ok))) {
		return nullptr;;
	};
	if (((*(_97060_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_101217_ok=_201092567_checkTypeAliasDeclKind((*(_self_))._field_s, _97060_ta, (*(_self_))._field_lookup);
		if ((!(_101217_ok))) {
			return nullptr;;
		};
	};
	if (((*(_97060_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> &__jule_push_dest = (*(_self_))._field_ownerAlias.get()._field_Generics; __jule_push_dest.push((*(_97060_ta))); };
	};
	jule::Ptr<_2011310ea_TypeKind> _103117_tk = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Generic=(*(_97060_ta)).get()._field_Generic, ._field_Kind=(*(_97060_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_2011434d6_pushReferenceByKind(_self_, &(_103117_tk));
	if ((*(_97060_ta)).get()._field_Binded) {
		_103117_tk.get()._field_BindIdent=(*(_97060_ta)).get()._field_Ident;
	} else {
		_103117_tk.get()._field_BindIdent=(*(_97060_ta)).get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
	};
	return jule::Trait<_201130b88_Kind>(_103117_tk, 19);;
}



inline jule::Ptr<_20103510e_Enum> _20114486c_fromEnum(_20114243b_typeChecker* _self_, jule::Ptr<_200edac74_IdentTypeDecl>* _104428_decl, jule::Ptr<_20103510e_Enum>* _104455_e) {
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_104455_e)).get()._field_Public, (*(_104455_e)).get()._field_Token)))) {
		_201142b34_pushErr(_self_, (*(_104428_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_104428_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_104428_decl)).get()._field_Generics.len() > 0LL)) {
		_201142b34_pushErr(_self_, (*(_104428_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_104428_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_104455_e));;
}



inline jule::Ptr<_201036709_TypeEnum> _201144c24_fromTypeEnum(_20114243b_typeChecker* _self_, jule::Ptr<_200edac74_IdentTypeDecl>* _105632_decl, jule::Ptr<_201036709_TypeEnum>* _105659_e) {
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_105659_e)).get()._field_Public, (*(_105659_e)).get()._field_Token)))) {
		_201142b34_pushErr(_self_, (*(_105632_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_105632_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_105632_decl)).get()._field_Generics.len() > 0LL)) {
		_201142b34_pushErr(_self_, (*(_105632_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_105632_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_105659_e));;
}



inline jule::Ptr<_20103287b_Trait> _2011450cb_fromTrait(_20114243b_typeChecker* _self_, jule::Ptr<_200edac74_IdentTypeDecl>* _106829_decl, jule::Ptr<_20103287b_Trait>* _106856_t) {
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_106856_t)).get()._field_Public, (*(_106856_t)).get()._field_Token)))) {
		_201142b34_pushErr(_self_, (*(_106829_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106829_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_106829_decl)).get()._field_Generics.len() > 0LL)) {
		_201142b34_pushErr(_self_, (*(_106829_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_106829_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_205a041e4_pushReference(_self_, _106856_t);
	return (*(_106856_t));;
}



inline jule::Bool _201145483_checkStructIns(_20114243b_typeChecker* _self_, jule::Ptr<_20100d071_StructIns>* _108138_ins, jule::Ptr<_1ed694d8c_Token>* _108160_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_108138_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_108138_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_108138_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_20109d3ca_precheckStructIns((*(_self_))._field_s, _108138_ins, (*(_108160_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_108138_ins)).get()._field_Generics.len() > 0LL)) {
		_20109dd48_checkStructInsOperators((*(_self_))._field_s, (*(_108138_ins)));
		_20109d650_checkStructIns((*(_self_))._field_s, _108138_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _20114572a_appendUsedStructReference(_20114243b_typeChecker* _self_, jule::Ptr<_20100a25a_Struct>* _110249_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_205a31ac3:;
			{
				jule::Ptr<_20100a25a_Struct> _110821_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_20100a25a_Struct>(&__jule_any_type66);;
				if ((!(_20100bd94_IsUses(_110821_refS.ptr(), (*(_110249_s)))))) {
					{ jule::Slice<jule::Ptr<_20100a25a_Struct>> &__jule_push_dest = _110821_refS.get()._field_Uses; __jule_push_dest.push((*(_110249_s))); };
				};
			}
		}
		_match_end_205a31a6d:;
	};
}



inline jule::Ptr<_20100d071_StructIns> _201145ae3_buildStructInstance(_20114243b_typeChecker* _self_, jule::Ptr<_200edac74_IdentTypeDecl>* _111543_decl, jule::Ptr<_20100a25a_Struct>* _111570_s) {
	jule::Ptr<_20114155b_referencer> _111717_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> _111917_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_205a34697:;
				{
					jule::Ptr<_20106455b_scopeChecker> _112625_sc = (*(_self_))._field_lookup.cast_ptr<_20106455b_scopeChecker>(0);;
					jule::Ptr<_20106455b_scopeChecker> _112725_hard = _2010675e7_getHardRoot(_112625_sc);;
					if (((_112725_hard.get()._field_owner.get()._field_Owner == nullptr) || (_112725_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_111570_s))))) {
						goto _match_end_205a34642;
					};
					jule::I32 _113121_n = (_112725_hard.get()._field_owner.get()._field_Generics.len() + _112725_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_112725_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _113121_n);
				}
			}
			_match_end_205a34642:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_20114e426_Lookup> _114117_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_20100d071_StructIns> _114517_ins = _20100a6bc_instance((*(_111570_s)));;
	_114517_ins.get()._field_Generics=jule::Slice<jule::Ptr<_20112e868_InsGeneric>>::alloc(0LL, (*(_111543_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_111543_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205a37c94:;
		if (it != expr_end) {
			jule::Ptr<_200eda6ad_TypeDecl> _114721_g = *it;
			{
				jule::Ptr<_2011310ea_TypeKind> _114821_kind = _20114907a_build(_self_, &(_114721_g.get()._field_Kind));;
				if ((_114821_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_20112e868_InsGeneric>> &__jule_push_dest = _114517_ins.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_20112e868_InsGeneric>(_20112e868_InsGeneric{._field_Kind=_114821_kind, })); };
			}
			_iter_next_205a37c94:;
			++it;
			goto _iter_begin_205a37c94;
		}
		_iter_end_205a37c94:;
	};
	(*(_self_))._field_lookup=_114117_lookup;
	(*(_self_))._field_bannedGenerics=_111917_bannedGenerics;
	(*(_self_))._field_referencer=_111717_referencer;
	return _114517_ins;;
}



inline jule::Ptr<_20100d071_StructIns> _201145e9a_fromStruct(_20114243b_typeChecker* _self_, jule::Ptr<_200edac74_IdentTypeDecl>* _116334_decl, jule::Ptr<_20100a25a_Struct>* _116361_s) {
	if ((!(_2010876c2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_116361_s)).get()._field_Public, (*(_116361_s)).get()._field_Token)))) {
		_201142b34_pushErr(_self_, (*(_116334_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_116334_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_116334_decl)).get()._field_Generics.len() > 0LL)) {
			_201142b34_pushErr(_self_, (*(_116334_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_20100d071_StructIns>(_20100d071_StructIns{._field_Decl=(*(_116361_s)), });;
	};
	jule::Bool _118117_ok = ((*(_self_))._field_notPlain || _20114410d_checkIllegalCycles(_self_, _116334_decl, jule::Any((*(_116361_s)), &__jule_any_type66)));;
	if ((!(_118117_ok))) {
		return nullptr;;
	};
	_20114572a_appendUsedStructReference(_self_, _116361_s);
	jule::Ptr<_20100d071_StructIns> _118717_ins = _201145ae3_buildStructInstance(_self_, _116334_decl, _116361_s);;
	if ((_118717_ins == nullptr)) {
		return nullptr;;
	};
	_118117_ok=_201088393_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I32>(_118717_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_118717_ins.get()._field_Generics.len()), (*(_116334_decl)).get()._field_Token);
	if ((!(_118117_ok))) {
		return nullptr;;
	};
	jule::Ptr<_20100d071_StructIns> _119717_existInstance = _20100a997_appendInstance((*(_116361_s)).ptr(), &(_118717_ins));;
	if ((_119717_existInstance != nullptr)) {
		if ((!(_201090c19_checkConstraintsStruct((*(_self_))._field_s, &(_118717_ins), &((*(_116334_decl)).get()._field_Token), _119717_existInstance)))) {
			return nullptr;;
		};
		_205a015ba_pushReference(_self_, &(_119717_existInstance));
		return _119717_existInstance;;
	};
	if ((!(_201145483_checkStructIns(_self_, &(_118717_ins), &((*(_116334_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_205a015ba_pushReference(_self_, &(_118717_ins));
	return _118717_ins;;
}



inline jule::Trait<_201130b88_Kind> _2011462a8_getDef(_20114243b_typeChecker* _self_, jule::Ptr<_200edac74_IdentTypeDecl>* _122130_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205a426e9:;
		if (it != expr_end) {
			jule::Ptr<_200ee7654_GenericDecl> _122216_g = *it;
			{
				if ((_122216_g.get()._field_Ident == (*(_122130_decl)).get()._field_Ident)) {
					return jule::Trait<_201130b88_Kind>(_20114ba94_buildPrimType(_122216_g.get()._field_Ident), 20);;
				};
			}
			_iter_next_205a426e9:;
			++it;
			goto _iter_begin_205a426e9;
		}
		_iter_end_205a426e9:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205a42ee1:;
		if (it != expr_end) {
			jule::Ptr<_2011303a2_TypeAlias> _122821_g = *it;
			{
				if ((_122821_g.get()._field_Ident == (*(_122130_decl)).get()._field_Ident)) {
					if (((*(_122130_decl)).get()._field_Generics.len() > 0LL)) {
						_201142b34_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_122130_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_20100d071_StructIns> _123425_st = _201134c69_Struct(_122821_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_123425_st != nullptr)) {
						jule::Bool _123625_ok = _20114410d_checkIllegalCycles(_self_, _122130_decl, jule::Any(_123425_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_123625_ok))) {
							return nullptr;;
						};
					};
					return _122821_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_205a42ee1:;
			++it;
			goto _iter_begin_205a42ee1;
		}
		_iter_end_205a42ee1:;
	};
	if ((!((*(_122130_decl)).get()._field_Binded))) {
		jule::Ptr<_20103510e_Enum> _124621_e = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114dec5_FindEnum((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_124621_e != nullptr)) {
			return jule::Trait<_201130b88_Kind>(_20114486c_fromEnum(_self_, _122130_decl, &(_124621_e)), 3);;
		};
		jule::Ptr<_201036709_TypeEnum> _125121_te = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114e2d3_FindTypeEnum((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_125121_te != nullptr)) {
			return jule::Trait<_201130b88_Kind>(_201144c24_fromTypeEnum(_self_, _122130_decl, &(_125121_te)), 4);;
		};
		jule::Ptr<_20103287b_Trait> _125621_t = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114dbb7_FindTrait((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_125621_t != nullptr)) {
			return jule::Trait<_201130b88_Kind>(_2011450cb_fromTrait(_self_, _122130_decl, &(_125621_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_201142b34_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20100a25a_Struct> _126517_s = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114d502_FindStruct((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident, (*(_122130_decl)).get()._field_Binded);;
	if ((_126517_s != nullptr)) {
		return jule::Trait<_201130b88_Kind>(_201145e9a_fromStruct(_self_, _122130_decl, &(_126517_s)), 0);;
	};
	jule::Ptr<_2011303a2_TypeAlias> _127017_ta = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114d14a_FindTypeAlias((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident, (*(_122130_decl)).get()._field_Binded);;
	if (((_127017_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_127017_ta=_2011e847b_findBuiltinTypeAlias((*(_122130_decl)).get()._field_Ident);
	};
	if ((_127017_ta != nullptr)) {
		return _2011444b5_fromTypeAlias(_self_, _122130_decl, &(_127017_ta));;
	};
	_201142b34_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_122130_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_201130b88_Kind> _2011465b6_buildIdent(_20114243b_typeChecker* _self_, jule::Ptr<_200edac74_IdentTypeDecl> _128233_decl) {
	return _2011462a8_getDef(_self_, &(_128233_decl));;
}



inline jule::Trait<_201130b88_Kind> _2011468c4_buildSubIdent(_20114243b_typeChecker* _self_, jule::Ptr<_200edb060_SubIdentTypeDecl> _128636_decl) {
	jule::Trait<_201130b88_Kind> _128717_ident = _2011465b6_buildIdent(_self_, _128636_decl.get()._field_Idents[0LL]);;
	if ((_128717_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _128717_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_205a4db78:;
			{
				goto _match_end_205a4d958;
			}
		}
		else {
			_case_begin_205a4d6a0:;
			{
				_201142b34_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_205a4d958:;
	};
	jule::Ptr<_201036709_TypeEnum> _129817_t = _128717_ident.cast_ptr<_201036709_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_200edac74_IdentTypeDecl>> _129917_idents = _128636_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_129917_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205a4eeed:;
		if (it != expr_end) {
			jule::I32 _130013_i = it - expr->begin();
			jule::Ptr<_200edac74_IdentTypeDecl> _130016_id = *it;
			{
				jule::Ptr<_201036176_TypeEnumItem> _130121_item = _201037243_FindItem(_129817_t.ptr(), _130016_id.get()._field_Ident);;
				if ((_130121_item == nullptr)) {
					_201142b34_pushErr(_self_, _130016_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_129817_t.get()._field_Ident, &__jule_any_type5),jule::Any(_130016_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_129917_idents.len() - _130013_i) == 1LL)) {
					_2011434d6_pushReferenceByKind(_self_, &(_130121_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_201130b88_Kind>(_130121_item.get()._field_Kind.get()._field_Kind, 19);;
				};
				_129817_t=_2011342b8_TypeEnum(_130121_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_129817_t == nullptr)) {
					_201142b34_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_205a4eeed:;
			++it;
			_130013_i++;
			goto _iter_begin_205a4eeed;
		}
		_iter_end_205a4eeed:;
	};
	return nullptr;;
}



inline jule::Ptr<_20113c0a1_Sptr> _201146bd2_buildSptrFromType(_20114243b_typeChecker* _self_, jule::Ptr<_2011310ea_TypeKind>* _132041_elem) {
	{
		
		if (((*(_132041_elem)) == nullptr)) {
			_case_begin_205a538a3:;
			{
				return nullptr;;
			}
		}
		else if ((_201134c69_Struct((*(_132041_elem)).ptr()) != nullptr)) {
			_case_begin_205a5392a:;
			{
				jule::Ptr<_20100d071_StructIns> _132617_s = _201134c69_Struct((*(_132041_elem)).ptr());;
				if (((_132617_s.get()._field_Decl != nullptr) && _132617_s.get()._field_Decl.get()._field_Binded)) {
					_201142b34_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_20113452c_Arr((*(_132041_elem)).ptr()) != nullptr) && _20113452c_Arr((*(_132041_elem)).ptr()).get()._field_Auto)) {
			_case_begin_205a539a2:;
			{
				_201142b34_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_205a507c3:;
	};
	return jule::new_ptr<_20113c0a1_Sptr>(_20113c0a1_Sptr{._field_Elem=(*(_132041_elem))});;
}



inline jule::Ptr<_20113c0a1_Sptr> _201146ee0_buildSptr(_20114243b_typeChecker* _self_, jule::Ptr<_200edb6c0_SptrTypeDecl> _134032_decl) {
	jule::Bool _134113_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_134113_notPlain;
	});;
	jule::Ptr<_2011310ea_TypeKind> _134517_elem = _201149388_checkDecl(_self_, &(_134032_decl.get()._field_Elem));;
	return _201146bd2_buildSptrFromType(_self_, &(_134517_elem));;
}



inline jule::Ptr<_201140615_Ptr> _2011472ed_buildPtrFromType(_20114243b_typeChecker* _self_, jule::Ptr<_2011310ea_TypeKind>* _134940_elem) {
	{
		
		if (((*(_134940_elem)) == nullptr)) {
			_case_begin_205a58149:;
			{
				return nullptr;;
			}
		}
		else if (((_20113452c_Arr((*(_134940_elem)).ptr()) != nullptr) && _20113452c_Arr((*(_134940_elem)).ptr()).get()._field_Auto)) {
			_case_begin_205a581c1:;
			{
				_201142b34_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_201140615_Ptr>();;
			}
		}
		_match_end_205a58039:;
	};
	return jule::new_ptr<_201140615_Ptr>(_201140615_Ptr{._field_Elem=(*(_134940_elem))});;
}



inline jule::Ptr<_201140615_Ptr> _20114760b_buildPtr(_20114243b_typeChecker* _self_, jule::Ptr<_200edc193_PtrTypeDecl> _136431_decl) {
	jule::Bool _136513_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_136513_notPlain;
	});;
	jule::Ptr<_2011310ea_TypeKind> _136917_elem = nullptr;;
	if ((!(_200edc4e5_IsUnsafe(_136431_decl.ptr())))) {
		_136917_elem=_201149388_checkDecl(_self_, &(_136431_decl.get()._field_Elem));
		return _2011472ed_buildPtrFromType(_self_, &(_136917_elem));;
	};
	return jule::new_ptr<_201140615_Ptr>(_201140615_Ptr{._field_Elem=_136917_elem});;
}



inline jule::Ptr<_20113ca0d_Slc> _201147919_buildSlc(_20114243b_typeChecker* _self_, jule::Ptr<_200edbabb_SlcTypeDecl> _138131_decl) {
	jule::Bool _138213_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_138213_notPlain;
	});;
	jule::Ptr<_2011310ea_TypeKind> _138617_elem = _201149388_checkDecl(_self_, &(_138131_decl.get()._field_Elem));;
	{
		
		if ((_138617_elem == nullptr)) {
			_case_begin_205a5cc0e:;
			{
				return nullptr;;
			}
		}
		else if (((_20113452c_Arr(_138617_elem.ptr()) != nullptr) && _20113452c_Arr(_138617_elem.ptr()).get()._field_Auto)) {
			_case_begin_205a5cc86:;
			{
				_201142b34_pushErr(_self_, _138131_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_205a5cb54:;
	};
	return jule::new_ptr<_20113ca0d_Slc>(_20113ca0d_Slc{._field_Elem=_138617_elem});;
}



inline jule::Ptr<_20113eba8_Arr> _201147c27_buildArr(_20114243b_typeChecker* _self_, jule::Ptr<_200edc869_ArrTypeDecl> _140231_decl) {
	jule::Bool _140313_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_140313_notPlain;
	});;
	jule::I32 _140717_n = 0LL;;
	if ((!(_200edcbbb_AutoSized(_140231_decl.ptr())))) {
		jule::Ptr<_2010edb23_Data> _141021_size = _201121eba_evalExpr(_20108dc8e_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _140231_decl.get()._field_Size);;
		if ((_141021_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_2010ee492_IsConst(_141021_size.ptr())))) {
			_201142b34_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_201133817_Prim(_141021_size.get()._field_Kind.ptr()) == nullptr) || (!(_1ee33bbcb_IsInt(_201133817_Prim(_141021_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_201142b34_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_140717_n=static_cast<jule::I32>(static_cast<jule::I32>(_1ee33ebe0_AsI64(_141021_size.get()._field_Constant.ptr())));
		if ((_140717_n < 0LL)) {
			_201142b34_pushErr(_self_, _140231_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _142821_max = _1ee335ec2_MaxI(jule::Str("int", 3));;
			if (((_1ee32e00e_BitSize != 64LL) && (static_cast<jule::I64>(_140717_n) > _142821_max))) {
				_201142b34_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_20112d669_constoa(&(_141021_size.get()._field_Constant)), &__jule_any_type5),jule::Any(_1ee32ca68_FmtInt(_142821_max, 10LL), &__jule_any_type5)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_2011310ea_TypeKind> _143717_elem = _201149388_checkDecl(_self_, &(_140231_decl.get()._field_Elem));;
	{
		
		if ((_143717_elem == nullptr)) {
			_case_begin_205a66212:;
			{
				return nullptr;;
			}
		}
		else if (((_20113452c_Arr(_143717_elem.ptr()) != nullptr) && _20113452c_Arr(_143717_elem.ptr()).get()._field_Auto)) {
			_case_begin_205a66278:;
			{
				_201142b34_pushErr(_self_, _140231_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_205a6065c:;
	};
	return jule::new_ptr<_20113eba8_Arr>(_20113eba8_Arr{._field_Auto=_200edcbbb_AutoSized(_140231_decl.ptr()), ._field_N=_140717_n, ._field_Elem=_143717_elem});;
}



inline jule::Ptr<_20113e0b4_Map> _201148035_buildMap(_20114243b_typeChecker* _self_, jule::Ptr<_200edd073_MapTypeDecl> _145531_decl) {
	jule::Bool _145613_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_145613_notPlain;
	});;
	jule::Ptr<_2011310ea_TypeKind> _146017_key = _201149388_checkDecl(_self_, &(_145531_decl.get()._field_Key));;
	if ((_146017_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2011310ea_TypeKind> _146517_val = _201149388_checkDecl(_self_, &(_145531_decl.get()._field_Val));;
	if ((_146517_val == nullptr)) {
		return nullptr;;
	};
	if ((_201134054_Enum(_146517_val.ptr()) != nullptr)) {
		_201142b34_pushErr(_self_, _145531_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_20113e0b4_Map>(_20113e0b4_Map{._field_Key=_146017_key, ._field_Val=_146517_val});;
}



inline jule::Ptr<_20113d613_Tuple> _201148343_buildTuple(_20114243b_typeChecker* _self_, jule::Ptr<_200edbda7_TupleTypeDecl> _147933_decl) {
	jule::Slice<jule::Ptr<_2011310ea_TypeKind>> _148017_types = jule::Slice<jule::Ptr<_2011310ea_TypeKind>>::alloc(0LL, _147933_decl.get()._field_Types.len());;
	{
		auto expr = &(_147933_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205a6b26c:;
		if (it != expr_end) {
			jule::Ptr<_200eda6ad_TypeDecl> _148121_t = *it;
			{
				jule::Ptr<_2011310ea_TypeKind> _148221_kind = _201149388_checkDecl(_self_, &(_148121_t));;
				if ((_148221_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_2011310ea_TypeKind>> &__jule_push_dest = _148017_types; __jule_push_dest.push(_148221_kind); };
			}
			_iter_next_205a6b26c:;
			++it;
			goto _iter_begin_205a6b26c;
		}
		_iter_end_205a6b26c:;
	};
	return jule::new_ptr<_20113d613_Tuple>(_20113d613_Tuple{._field_Types=_148017_types});;
}



inline jule::Bool _201148651_checkFnTypes(_20114243b_typeChecker* _self_, jule::Ptr<_20102330b_FnIns>* _149236_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_149236_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205a6d22a:;
		if (it != expr_end) {
			jule::Ptr<_20102243c_ParamIns> _149321_p = *it;
			{
				_149321_p.get()._field_Kind=_20114907a_build(_self_, &(_149321_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_149321_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_201091346_checkFnParamKind((*(_self_))._field_s, &(_149321_p));
			}
			_iter_next_205a6d22a:;
			++it;
			goto _iter_begin_205a6d22a;
		}
		_iter_end_205a6d22a:;
	};
	if ((!(_201020abc_IsVoid((*(_149236_f)).get()._field_Decl.ptr())))) {
		(*(_149236_f)).get()._field_Result=_20114907a_build(_self_, &((*(_149236_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_149236_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_20102330b_FnIns> _20114895e_buildFn(_20114243b_typeChecker* _self_, jule::Ptr<_200eebcda_FnDecl> _151030_decl) {
	if ((_151030_decl.get()._field_Generics.len() > 0LL)) {
		_201142b34_pushErr(_self_, _151030_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20102065a_Fn> _151617_f = _201029444_buildFn(_151030_decl);;
	jule::I32 _151813_n = (*(_self_))._field_s.get()._field_errors.len();;
	_2010998b0_checkAnonFnDecl((*(_self_))._field_s, &(_151617_f));
	if ((_151813_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_20102330b_FnIns> _152417_ins = _201021a46_instanceForce(_151617_f);;
	_152417_ins.get()._field_Anon=true;
	jule::Bool _152713_ok = _201148651_checkFnTypes(_self_, &(_152417_ins));;
	if ((!(_152713_ok))) {
		return nullptr;;
	};
	return _152417_ins;;
}



inline jule::Trait<_201130b88_Kind> _201148c6c_buildByNamespace(_20114243b_typeChecker* _self_, jule::Ptr<_200edb3d4_NamespaceTypeDecl> _153539_decl) {
	jule::Str _153613_path = _20114b6dc_buildLinkPathByTokens(&(_153539_decl.get()._field_Idents));;
	jule::Ptr<_20107b397_ImportInfo> _153717_imp = _20114e426_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._20114c8db_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)>([=](jule::Ptr<_20107b397_ImportInfo> _153752_imp) mutable -> jule::Bool {
		if (((_153539_decl.get()._field_Idents.len() == 1LL) && (_153752_imp.get()._field_Alias == _153613_path))) {
			return true;;
		};
		return ((_153752_imp.get()._field_LinkPath == _153613_path) && _20107dbd5_isAccessibleViaSelection(_153752_imp.ptr()));;
	}));;
	if (((_153717_imp == nullptr) || (!(_20107d641_isLookupable(_153717_imp.ptr(), jule::Str("self", 4)))))) {
		_201142b34_pushErr(_self_, _153539_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_153613_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_201142edb_disallowBuiltin(_self_);
	jule::Trait<_20114e426_Lookup> _155017_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_20114e426_Lookup>(_153717_imp, 1);
	jule::Ptr<_2011310ea_TypeKind> _155217_kind = _201149388_checkDecl(_self_, &(_153539_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_155017_lookup;
	_201142d10_allowBuiltin(_self_);
	return jule::Trait<_201130b88_Kind>(_155217_kind, 19);;
}



inline jule::Ptr<_2011310ea_TypeKind> _20114907a_build(_20114243b_typeChecker* _self_, jule::Any* _155829_declKind) {
	jule::Trait<_201130b88_Kind> _155917_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155829_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_205a790d2:;
			{
				jule::Trait<_201130b88_Kind> _156221_t = _2011465b6_buildIdent(_self_, (*(_155829_declKind)).cast_ptr<_200edac74_IdentTypeDecl>(&__jule_any_type20));;
				if ((_156221_t != nullptr)) {
					_155917_kind=_156221_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_205a79e5c:;
			{
				jule::Trait<_201130b88_Kind> _156721_t = _2011468c4_buildSubIdent(_self_, (*(_155829_declKind)).cast_ptr<_200edb060_SubIdentTypeDecl>(&__jule_any_type92));;
				if ((_156721_t != nullptr)) {
					_155917_kind=_156721_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_205a79ec3:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20113c0a1_Sptr> _157321_t = _201146ee0_buildSptr(_self_, (*(_155829_declKind)).cast_ptr<_200edb6c0_SptrTypeDecl>(&__jule_any_type78));;
				if ((_157321_t != nullptr)) {
					_155917_kind=jule::Trait<_201130b88_Kind>(_157321_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_205a795aa:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_201140615_Ptr> _157921_t = _20114760b_buildPtr(_self_, (*(_155829_declKind)).cast_ptr<_200edc193_PtrTypeDecl>(&__jule_any_type77));;
				if ((_157921_t != nullptr)) {
					_155917_kind=jule::Trait<_201130b88_Kind>(_157921_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_205a79621:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20113ca0d_Slc> _158521_t = _201147919_buildSlc(_self_, (*(_155829_declKind)).cast_ptr<_200edbabb_SlcTypeDecl>(&__jule_any_type76));;
				if ((_158521_t != nullptr)) {
					_155917_kind=jule::Trait<_201130b88_Kind>(_158521_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_205a79687:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20113eba8_Arr> _159121_t = _201147c27_buildArr(_self_, (*(_155829_declKind)).cast_ptr<_200edc869_ArrTypeDecl>(&__jule_any_type75));;
				if ((_159121_t != nullptr)) {
					_155917_kind=jule::Trait<_201130b88_Kind>(_159121_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_205a796ed:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20113e0b4_Map> _159721_t = _201148035_buildMap(_self_, (*(_155829_declKind)).cast_ptr<_200edd073_MapTypeDecl>(&__jule_any_type79));;
				if ((_159721_t != nullptr)) {
					_155917_kind=jule::Trait<_201130b88_Kind>(_159721_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_205a7a039:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20113d613_Tuple> _160321_t = _201148343_buildTuple(_self_, (*(_155829_declKind)).cast_ptr<_200edbda7_TupleTypeDecl>(&__jule_any_type80));;
				if ((_160321_t != nullptr)) {
					_155917_kind=jule::Trait<_201130b88_Kind>(_160321_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_205a7a0a0:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_20102330b_FnIns> _160921_t = _20114895e_buildFn(_self_, (*(_155829_declKind)).cast_ptr<_200eebcda_FnDecl>(&__jule_any_type14));;
				if ((_160921_t != nullptr)) {
					_155917_kind=jule::Trait<_201130b88_Kind>(_160921_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_205a7a116:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_201130b88_Kind> _161521_t = _201148c6c_buildByNamespace(_self_, (*(_155829_declKind)).cast_ptr<_200edb3d4_NamespaceTypeDecl>(&__jule_any_type96));;
				if ((_161521_t != nullptr)) {
					_155917_kind=_161521_t;
				};
			}
		}
		else {
			_case_begin_205a79456:;
			{
				_201142b34_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_205a79368:;
	};
	if ((_155917_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _155917_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_205a88102:;
			{
				return _155917_kind.cast_ptr<_2011310ea_TypeKind>(19);;
			}
		}
		else {
			_case_begin_205a85550:;
			{
				jule::Ptr<_2011310ea_TypeKind> _163021_tk = jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=_155917_kind});;
				{
					auto &_match_expr{ _155917_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_205a86441:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_2011310ea_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_163021_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_205a864b8:;
						{
							jule::Ptr<_20100d071_StructIns> _163721_s = _155917_kind.cast_ptr<_20100d071_StructIns>(0);;
							if (((_163721_s.get()._field_Decl != nullptr) && _163721_s.get()._field_Decl.get()._field_Binded)) {
								_163021_tk.get()._field_BindIdent=_163721_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_205a86331:;
				};
				return _163021_tk;;
			}
		}
		_match_end_205a7a3d0:;
	};
}



inline jule::Ptr<_2011310ea_TypeKind> _201149388_checkDecl(_20114243b_typeChecker* _self_, jule::Ptr<_200eda6ad_TypeDecl>* _164633_decl) {
	jule::Ptr<_1ed694d8c_Token> _164817_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_164633_decl)).get()._field_Token;
	jule::Ptr<_2011310ea_TypeKind> _165117_kind = _20114907a_build(_self_, &((*(_164633_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_164817_errorToken;
	return _165117_kind;;
}



inline void _20114960d_check(_20114243b_typeChecker* _self_, jule::Ptr<_201137e9d_TypeSymbol>* _165729_t) {
	if (((*(_165729_t)).get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_2011310ea_TypeKind> _166117_kind = _201149388_checkDecl(_self_, &((*(_165729_t)).get()._field_Decl));;
	if ((_166117_kind == nullptr)) {
		_2011384dc_removeKind((*(_165729_t)).ptr());
		return;;
	};
	(*(_165729_t)).get()._field_Kind=_166117_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _20114243b_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__201149c6d_prim(jule::Str* _167321_ident, jule::Ptr<_201138850_Prim> _167333_t) {
	return (_167333_t.get()._field_Kind == (*(_167321_ident)));;
}



inline jule::Bool static__20114a0ae_exist(jule::Str* _167722_ident, jule::Ptr<_2011310ea_TypeKind>* _167739_k) {
	{
		
		if ((_201133817_Prim((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_205a8c106:;
			{
				return static__201149c6d_prim(_167722_ident, _201133817_Prim((*(_167739_k)).ptr()));;
			}
		}
		else if ((_201133a7b_Sptr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_205a8c16c:;
			{
				jule::Ptr<_20113c0a1_Sptr> _168221_sptr = _201133a7b_Sptr((*(_167739_k)).ptr());;
				return static__20114a0ae_exist(_167722_ident, &(_168221_sptr.get()._field_Elem));;
			}
		}
		else if ((_201133ce0_Ptr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_205a8c1d3:;
			{
				jule::Ptr<_201140615_Ptr> _168521_ptr = _201133ce0_Ptr((*(_167739_k)).ptr());;
				return static__20114a0ae_exist(_167722_ident, &(_168521_ptr.get()._field_Elem));;
			}
		}
		else if ((_201134791_Slc((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_205a8c425:;
			{
				jule::Ptr<_20113ca0d_Slc> _168821_slc = _201134791_Slc((*(_167739_k)).ptr());;
				return static__20114a0ae_exist(_167722_ident, &(_168821_slc.get()._field_Elem));;
			}
		}
		else if ((_20113452c_Arr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_205a8c48b:;
			{
				jule::Ptr<_20113eba8_Arr> _169121_arr = _20113452c_Arr((*(_167739_k)).ptr());;
				return static__20114a0ae_exist(_167722_ident, &(_169121_arr.get()._field_Elem));;
			}
		}
		else if ((_201135242_Map((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_205a8c513:;
			{
				jule::Ptr<_20113e0b4_Map> _169421_m = _201135242_Map((*(_167739_k)).ptr());;
				return (static__20114a0ae_exist(_167722_ident, &(_169421_m.get()._field_Key)) || static__20114a0ae_exist(_167722_ident, &(_169421_m.get()._field_Val)));;
			}
		}
		else if ((_201134c69_Struct((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_205a8c58a:;
			{
				jule::Ptr<_20100d071_StructIns> _169821_s = _201134c69_Struct((*(_167739_k)).ptr());;
				{
					auto expr = &(_169821_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205a93085:;
					if (it != expr_end) {
						jule::Ptr<_20112e868_InsGeneric> _169925_g = *it;
						{
							if (static__20114a0ae_exist(_167722_ident, &(_169925_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_205a93085:;
						++it;
						goto _iter_begin_205a93085;
					}
					_iter_end_205a93085:;
				};
				return false;;
			}
		}
		else if ((_201134a05_Fn((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_205a8c722:;
			{
				jule::Ptr<_20102330b_FnIns> _170621_f = _201134a05_Fn((*(_167739_k)).ptr());;
				{
					auto expr = &(_170621_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205a946d5:;
					if (it != expr_end) {
						jule::Ptr<_20102243c_ParamIns> _170725_p = *it;
						{
							if (_20101e406_IsSelf(_170725_p.get()._field_Decl.ptr())) {
								goto _iter_next_205a946d5;
							};
							if (static__20114a0ae_exist(_167722_ident, &(_170725_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_205a946d5:;
						++it;
						goto _iter_begin_205a946d5;
					}
					_iter_end_205a946d5:;
				};
				if ((_170621_f.get()._field_Result != nullptr)) {
					return static__20114a0ae_exist(_167722_ident, &(_170621_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_2011354a6_Tup((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_205a8c788:;
			{
				jule::Ptr<_20113d613_Tuple> _172021_tup = _2011354a6_Tup((*(_167739_k)).ptr());;
				{
					auto expr = &(_172021_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205a96770:;
					if (it != expr_end) {
						jule::Ptr<_2011310ea_TypeKind> _172125_t = *it;
						{
							if (static__20114a0ae_exist(_167722_ident, &(_172125_t))) {
								return true;;
							};
						}
						_iter_next_205a96770:;
						++it;
						goto _iter_begin_205a96770;
					}
					_iter_end_205a96770:;
				};
				return false;;
			}
		}
		else {
			_case_begin_205a8bed5:;
			{
				return false;;
			}
		}
		_match_end_205a8be19:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20114982d_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20152cc44_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2031b5842_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _2031b67aa_stop(_2031b616c_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _2031b6a1e_stopped(_2031b616c_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _2031b6c83_finished(_2031b616c_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _2031b6ee7_isLastSt(_2031b616c_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _2031b7316_pushErr(_2031b616c_scopeParser* _self_, jule::Ptr<_1ed694d8c_Token> _19126_token, jule::Str _19141_fmt) {
	_2031d3299_pushErr((*(_self_))._field_p.ptr(), _19126_token, _19141_fmt, jule::Slice<jule::Any>());
}



inline void _2031b7635_pushSuggestion(_2031b616c_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_2031d35b8_pushSuggestion((*(_self_))._field_p.ptr(), _19633_fmt, _19646_args);
}



inline void _2031b78aa_insertAsNext(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _20036_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_2031b5842_stmt>(_2031b5842_stmt{._field_tokens=(*(_20036_tokens)), });
}



inline jule::Ptr<_2031b5842_stmt> _2031b7b1e_next(_2031b616c_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_200eea2e4_ScopeTree> _2031b7ec6_buildScope(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _21034_tokens, jule::Ptr<_1ed694d8c_Token> _21056_end) {
	jule::Ptr<_200eea2e4_ScopeTree> _21117_s = _2031b4742_newScope();;
	_21117_s.get()._field_Parent=(*(_self_))._field_s;
	_21117_s.get()._field_End=_21056_end;
	_2031b616c_scopeParser _21417_ssp = _2031b616c_scopeParser{._field_p=(*(_self_))._field_p, };;
	_2031c1bb1_build(&_21417_ssp, _21034_tokens, &(_21117_s));
	return _21117_s;;
}



inline jule::Ptr<_200eeccb9_VarDecl> _2031b82d4_buildVarSt(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _22134_tokens) {
	jule::Ptr<_200eeccb9_VarDecl> _22217_v = _2031d5cd5_buildVar((*(_self_))._field_p, (*(_22134_tokens)));;
	_22217_v.get()._field_Scope=(*(_self_))._field_s;
	return _22217_v;;
}



inline jule::Ptr<_200eed171_RetSt> _2031b85e2_buildRetSt(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _22733_tokens) {
	jule::Ptr<_200eed171_RetSt> _22817_st = jule::new_ptr<_200eed171_RetSt>(_200eed171_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_2031d38c6_buildExpr((*(_self_))._field_p, &(_22733_tokens));
	};
	return _22817_st;;
}



inline jule::Ptr<_200eed7d1_Iter> _2031b8900_buildWhileNextIter(_2031b616c_scopeParser* _self_, jule::Ptr<_2031b5842_stmt>* _23842_s) {
	jule::Ptr<_200eed7d1_Iter> _23917_it = jule::new_ptr<_200eed7d1_Iter>(_200eed7d1_Iter{._field_Token=(*(_23842_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _24217_tokens = (*(_23842_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_200eee0a6_WhileKind> _24317_kind = jule::new_ptr<_200eee0a6_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_2031d38c6_buildExpr((*(_self_))._field_p, &(_24217_tokens));
	};
	if (_2031b6ee7_isLastSt(_self_)) {
		_2031b7316_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_2031b7b1e_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _25517_stTokens = _2031cc958_getBlockExpr(&(_24217_tokens));;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_2031b5842_stmt> _25721_stmt = jule::new_ptr<_2031b5842_stmt>(_2031b5842_stmt{._field_tokens=_25517_stTokens, ._field_terminated=(*(_23842_s)).get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_2031c1892_buildSt(_self_, &(_25721_stmt));
	};
	jule::I32 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _26617_blockTokens = _2031d0a27_range(&(_26517_i), jule::Str("{", 1), jule::Str("}", 1), &(_24217_tokens));;
	if ((_26617_blockTokens == nullptr)) {
		_2031b67aa_stop(_self_);
		_2031b7316_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("body is not exist", 17));
		_2031b7635_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_2031b7316_pushErr(_self_, _24217_tokens[_26517_i], jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_2031b7ec6_buildScope(_self_, &(_26617_blockTokens), _24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type38);
	return _23917_it;;
}



inline jule::Ptr<_200eee0a6_WhileKind> _2031b8c0d_buildWhileIterKind(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _28342_tokens) {
	return jule::new_ptr<_200eee0a6_WhileKind>(_200eee0a6_WhileKind{._field_Expr=_2031d38c6_buildExpr((*(_self_))._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _2031b901b_getRangeKindKeysTokens(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _29018_vars;;
	jule::Slice<_2193a460d_Log> _29024_errs;;
	({
		__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031d1594_parts(_28946_toks, static_cast<jule::U32>(7LLU), true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_29024_errs);;
	return _29018_vars;;
}



inline jule::Ptr<_200eeccb9_VarDecl> _2031b9329_buildRangeKindKey(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _29541_tokens) {
	if (((*(_29541_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_200eeccb9_VarDecl> _29917_key = jule::new_ptr<_200eeccb9_VarDecl>(_200eeccb9_VarDecl{._field_Token=(*(_29541_tokens))[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		_29917_key.get()._field_Mutable=true;
		if (((*(_29541_tokens)).len() == 1LL)) {
			_2031b7316_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=(*(_29541_tokens))[1LL];
	} else if (((*(_29541_tokens)).len() > 1LL)) {
		_2031b7316_pushErr(_self_, (*(_29541_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031b7316_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_2031b7635_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_200eeccb9_VarDecl>> _2031b9637_buildRangeKindKeys(_2031b616c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>>* _32042_parts) {
	jule::Slice<jule::Ptr<_200eeccb9_VarDecl>> _32117_keys = nullptr;;
	{
		auto expr = _32042_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c360e6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _32221_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_200eeccb9_VarDecl>> &__jule_push_dest = _32117_keys; __jule_push_dest.push(_2031b9329_buildRangeKindKey(_self_, &(_32221_tokens))); };
			}
			_iter_next_205c360e6:;
			++it;
			goto _iter_begin_205c360e6;
		}
		_iter_end_205c360e6:;
	};
	return _32117_keys;;
}



inline void _2031b9978_setupRangeKindKeysPlain(_2031b616c_scopeParser* _self_, jule::Ptr<_200eee947_RangeKind>* _32847_rng, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _32917_keyTokens = _2031b901b_getRangeKindKeysTokens(_self_, _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_2031b7316_pushErr(_self_, (*(_32847_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_200eeccb9_VarDecl>> _33617_keys = _2031b9637_buildRangeKindKeys(_self_, &(_32917_keyTokens));;
	(*(_32847_rng)).get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		(*(_32847_rng)).get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _2031b9cca_setupRangeKindKeysExplicit(_2031b616c_scopeParser* _self_, jule::Ptr<_200eee947_RangeKind>* _34350_rng, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _34372_tokens) {
	jule::I32 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _34517_rang = _2031d0a27_range(&(_34417_i), jule::Str("(", 1), jule::Str(")", 1), _34372_tokens);;
	if ((_34417_i < (*(_34372_tokens)).len())) {
		_2031b7316_pushErr(_self_, (*(_34350_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_2031b9978_setupRangeKindKeysPlain(_self_, _34350_rng, &(_34517_rang));
}



inline void _2031ba10a_setupRangeKindKeys(_2031b616c_scopeParser* _self_, jule::Ptr<_200eee947_RangeKind>* _35242_rng, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _35264_tokens) {
	if (((*(_35264_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(2LLU))) {
		if ((!(*(_35264_tokens))[0LL].get()._field_Kind.equal("(", 1))) {
			_2031b7316_pushErr(_self_, (*(_35264_tokens))[0LL], jule::Str("invalid syntax", 14));
			return;;
		};
		_2031b9cca_setupRangeKindKeysExplicit(_self_, _35242_rng, _35264_tokens);
		return;;
	};
	_2031b9978_setupRangeKindKeysPlain(_self_, _35242_rng, _35264_tokens);
}



inline jule::Ptr<_200eee947_RangeKind> _2031ba55b_buildRangeIterKind(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _36442_var_tokens, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _36514_exprTokens, jule::Ptr<_1ed694d8c_Token>* _36541_inToken) {
	jule::Ptr<_200eee947_RangeKind> _36617_rng = jule::new_ptr<_200eee947_RangeKind>(_200eee947_RangeKind{._field_InToken=(*(_36541_inToken)), });;
	if (((*(_36514_exprTokens)).len() == 0LL)) {
		_2031b7316_pushErr(_self_, _36617_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_2031d38c6_buildExpr((*(_self_))._field_p, _36514_exprTokens);
	if (((*(_36442_var_tokens)).len() > 0LL)) {
		_2031ba10a_setupRangeKindKeys(_self_, &(_36617_rng), _36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _2031ba913_buildCommonIterKind(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _38043_tokens, jule::Ptr<_1ed694d8c_Token>* _38062_err_tok) {
	jule::I32 _38117_braceN = 0LL;;
	{
		auto expr = _38043_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c40919:;
		if (it != expr_end) {
			jule::I32 _38214_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U32>(2LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_205c41750:;
							{
								(_38117_braceN)++;
								goto _iter_next_205c40919;
							}
						}
						else {
							_case_begin_205c41a2a:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_205c4181b:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_205c40919;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(14LLU)) {
						_case_begin_205c4162e:;
						{
							jule::Slice<jule::Ptr<_1ed694d8c_Token>> _39925_declTokens = (*(_38043_tokens)).slice(0LL, _38214_i);;
							jule::Slice<jule::Ptr<_1ed694d8c_Token>> _40025_exprTokens = (*(_38043_tokens)).slice((_38214_i + 1LL));;
							return jule::Any(_2031ba55b_buildRangeIterKind(_self_, &(_39925_declTokens), &(_40025_exprTokens), &(_38221_tok)), &__jule_any_type40);;
						}
					}
					_match_end_205c4271d:;
				};
			}
			_iter_next_205c40919:;
			++it;
			_38214_i++;
			goto _iter_begin_205c40919;
		}
		_iter_end_205c40919:;
	};
	return jule::Any(_2031b8c0d_buildWhileIterKind(_self_, _38043_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_200eed7d1_Iter> _2031bac21_buildCommonIter(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _40738_tokens) {
	jule::Ptr<_200eed7d1_Iter> _40817_it = jule::new_ptr<_200eed7d1_Iter>(_200eed7d1_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_2031b67aa_stop(_self_);
		_2031b7316_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_2031b7635_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _41817_exprTokens = _2031cc958_getBlockExpr(&(_40738_tokens));;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_2031ba913_buildCommonIterKind(_self_, &(_41817_exprTokens), &(_40817_it.get()._field_Token));
	};
	jule::I32 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _42317_scopeTokens = _2031d0a27_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_40738_tokens));;
	if ((_42317_scopeTokens == nullptr)) {
		_2031b67aa_stop(_self_);
		_2031b7316_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_2031b7635_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_2031b7316_pushErr(_self_, _40738_tokens[_42217_i], jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_2031b7ec6_buildScope(_self_, &(_42317_scopeTokens), _40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_200eed7d1_Iter> _2031bb02e_buildIterSt(_2031b616c_scopeParser* _self_, jule::Ptr<_2031b5842_stmt>* _43735_st) {
	if ((*(_43735_st)).get()._field_terminated) {
		return _2031b8900_buildWhileNextIter(_self_, _43735_st);;
	};
	return _2031bac21_buildCommonIter(_self_, (*(_43735_st)).get()._field_tokens);;
}



inline jule::Ptr<_200eeecee_BreakSt> _2031bb33c_buildBreakSt(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _44436_tokens) {
	jule::Ptr<_200eeecee_BreakSt> _44517_brk = jule::new_ptr<_200eeecee_BreakSt>(_200eeecee_BreakSt{._field_Token=(*(_44436_tokens))[0LL], });;
	if (((*(_44436_tokens)).len() > 1LL)) {
		if (((*(_44436_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(1LLU))) {
			_2031b7316_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			_2031b7635_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=(*(_44436_tokens))[1LL];
			if (((*(_44436_tokens)).len() > 2LL)) {
				_2031b7316_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_2010001a6_ContSt> _2031bb64a_buildContSt(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _46235_tokens) {
	jule::Ptr<_2010001a6_ContSt> _46317_cont = jule::new_ptr<_2010001a6_ContSt>(_2010001a6_ContSt{._field_Token=(*(_46235_tokens))[0LL], });;
	if (((*(_46235_tokens)).len() > 1LL)) {
		if (((*(_46235_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(1LLU))) {
			_2031b7316_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			_2031b7635_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=(*(_46235_tokens))[1LL];
			if (((*(_46235_tokens)).len() > 2LL)) {
				_2031b7316_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_201000629_If> _2031bb958_buildIf(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _48031_tokens) {
	jule::Ptr<_201000629_If> _48117_model = jule::new_ptr<_201000629_If>(_201000629_If{._field_Token=(*(_48031_tokens))[0LL], });;
	(*(_48031_tokens))=(*(_48031_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _48517_exprTokens = _2031cc958_getBlockExpr(_48031_tokens);;
	jule::I32 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_2031b7316_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I32>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _49217_scopeTokens = _2031d0a27_range(&(_48617_i), jule::Str("{", 1), jule::Str("}", 1), _48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_2031b67aa_stop(_self_);
		_2031b7316_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("body is not exist", 17));
		_2031b7635_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ed694d8c_Token> _49917_end = (*(_48031_tokens))[(_48617_i - 1LL)];;
	if ((_48617_i < (*(_48031_tokens)).len())) {
		if (((*(_48031_tokens))[_48617_i].get()._field_Id == static_cast<jule::U32>(16LLU))) {
			(*(_48031_tokens))=(*(_48031_tokens)).slice(_48617_i);
		} else {
			_2031b7316_pushErr(_self_, (*(_48031_tokens))[_48617_i], jule::Str("invalid syntax", 14));
			(*(_48031_tokens))=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_2031d38c6_buildExpr((*(_self_))._field_p, &(_48517_exprTokens));
	_48117_model.get()._field_Scope=_2031b7ec6_buildScope(_self_, &(_49217_scopeTokens), _49917_end);
	return _48117_model;;
}



inline jule::Ptr<_2010009d1_Else> _2031bbc66_buildElse(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _51333_tokens) {
	jule::Ptr<_2010009d1_Else> _51417_els = jule::new_ptr<_2010009d1_Else>(_2010009d1_Else{._field_Token=(*(_51333_tokens))[0LL], });;
	(*(_51333_tokens))=(*(_51333_tokens)).slice(1LL);
	jule::I32 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _51917_scopeTokens = _2031d0a27_range(&(_51817_i), jule::Str("{", 1), jule::Str("}", 1), _51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < (*(_51333_tokens)).len())) {
			_2031b7316_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_2031b67aa_stop(_self_);
			_2031b7316_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("body is not exist", 17));
			_2031b7635_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < (*(_51333_tokens)).len())) {
		_2031b7316_pushErr(_self_, (*(_51333_tokens))[_51817_i], jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_2031b7ec6_buildScope(_self_, &(_51917_scopeTokens), (*(_51333_tokens))[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_201000e54_Conditional> _2031bc074_buildIfElseChain(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _53739_tokens) {
	jule::Ptr<_201000e54_Conditional> _53817_chain = jule::new_ptr<_201000e54_Conditional>(_201000e54_Conditional{._field_Head=_2031bb958_buildIf(_self_, &(_53739_tokens)), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U32>(16LLU))) {
				goto _iter_end_205c5a417;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U32>(15LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_201000629_If> _55025_elif = _2031bb958_buildIf(_self_, &(_53739_tokens));;
				{ jule::Slice<jule::Ptr<_201000629_If>> &__jule_push_dest = _53817_chain.get()._field_Tail; __jule_push_dest.push(_55025_elif); };
				goto _iter_next_205c5a417;
			};
			_53817_chain.get()._field_Default=_2031bbc66_buildElse(_self_, &(_53739_tokens));
			goto _iter_end_205c5a417;
		}
	_iter_next_205c5a417:;
	}
	_iter_end_205c5a417:;;
	return _53817_chain;;
}



inline jule::Ptr<_200ede838_Expr> _2031bc382_buildCoCallSt(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _56036_tokens) {
	jule::Ptr<_1ed694d8c_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_200ede838_Expr> _56317_e = _2031d38c6_buildExpr((*(_self_))._field_p, &(_56036_tokens));;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_205c5e471:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_200ee374e_FnCallExpr>(&__jule_any_type111).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_205c5e0a8:;
			{
				_2031b7316_pushErr(_self_, _56113_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_205c5e053:;
	};
	return _56317_e;;
}



inline jule::Ptr<_200ee7db3_GotoSt> _2031bc690_buildGotoSt(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _57635_tokens) {
	jule::Ptr<_200ee7db3_GotoSt> _57717_gt = jule::new_ptr<_200ee7db3_GotoSt>(_200ee7db3_GotoSt{._field_Token=(*(_57635_tokens))[0LL], });;
	if (((*(_57635_tokens)).len() == 1LL)) {
		_2031b7316_pushErr(_self_, _57717_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57635_tokens)).len() > 2LL)) {
		_2031b7316_pushErr(_self_, (*(_57635_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1ed694d8c_Token> _58617_identToken = (*(_57635_tokens))[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031b7316_pushErr(_self_, _58617_identToken, jule::Str("invalid syntax", 14));
		_2031b7635_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_200ee819e_FallSt> _2031bc99d_buildFallSt(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _59635_tokens) {
	jule::Ptr<_200ee819e_FallSt> _59717_fll = jule::new_ptr<_200ee819e_FallSt>(_200ee819e_FallSt{._field_Token=(*(_59635_tokens))[0LL]});;
	if (((*(_59635_tokens)).len() > 1LL)) {
		_2031b7316_pushErr(_self_, (*(_59635_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_20100162a_TypeAliasDecl> _2031bccab_buildTypeAliasSt(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _60640_tokens) {
	jule::Ptr<_20100162a_TypeAliasDecl> _60717_tad = _2031d4ec1_buildTypeAliasDecl((*(_self_))._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60717_tad;;
}



inline void _2031bd21d_pushCaseExpr(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _61235_tokens, jule::Ptr<_1ed694d8c_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_200ede838_Expr>>* _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I32 _61921_i = 0LL;;
		jule::Ptr<_200eda6ad_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType((*(_self_))._field_p, &(_61235_tokens), (&(_61921_i)), true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			{ jule::Slice<jule::Ptr<_200ede838_Expr>> &__jule_push_dest = (*(_61331_exprs)); __jule_push_dest.push(jule::new_ptr<_200ede838_Expr>(_200ede838_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type94)})); };
			if ((_61921_i < _61235_tokens.len())) {
				_2031b7316_pushErr(_self_, _61235_tokens[_61921_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_200ede838_Expr>> &__jule_push_dest = (*(_61331_exprs)); __jule_push_dest.push(_2031d38c6_buildExpr((*(_self_))._field_p, &(_61235_tokens))); };
}



inline jule::Slice<jule::Ptr<_200ede838_Expr>> _2031bd66e_buildCaseExprs(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _63638_tokens, jule::Ptr<_1ed694d8c_Token>* _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_200ede838_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_200ede838_Expr>>::alloc(0LL, 1LL);;
	jule::I32 _63917_braceN = 0LL;;
	jule::I32 _64017_j = 0LL;;
	{
		auto expr = _63638_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c6924a:;
		if (it != expr_end) {
			jule::I32 _64114_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U32>(2LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_205c6ac74:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_205c6b04e:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_205c6ad40:;
					};
					goto _iter_next_205c6924a;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_205c6924a;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U32>(6LLU)) && _64121_tok.get()._field_Kind.equal("|", 1))) {
						_case_begin_205c6b967:;
						{
							jule::Slice<jule::Ptr<_1ed694d8c_Token>> _65721_exprTokens = (*(_63638_tokens)).slice(_64017_j, _64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_2031b7316_pushErr(_self_, _64121_tok, jule::Str("expression missing", 18));
							} else {
								_2031bd21d_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							};
							_64017_j=static_cast<jule::I32>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U32>(10LLU))) {
						_case_begin_205c6b9de:;
						{
							(*(_63661_colon))=_64121_tok;
							_2031bd21d_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							(*(_63638_tokens))=(*(_63638_tokens)).slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_205c6b8bd:;
				};
			}
			_iter_next_205c6924a:;
			++it;
			_64114_i++;
			goto _iter_begin_205c6924a;
		}
		_iter_end_205c6924a:;
	};
	_2031b7316_pushErr(_self_, (*(_63638_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63638_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_200eea2e4_ScopeTree> _2031bd97c_buildCaseScope(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _67638_tokens) {
	jule::I32 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I32 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _68022_next;;
			({
				__jule_tuple_sx_1ed694d8c_Token__jule_tuple_bool __jule_assign_result = _2031b5545_skipSt(&(_67921_i), (*(_67638_tokens)).slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_205c6eeba;
			};
			jule::Ptr<_1ed694d8c_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U32>(6LLU)) || (!_68417_tok.get()._field_Kind.equal("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_205c6eeba;
			};
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _68921_scopeTokens = (*(_67638_tokens)).slice(0LL, _67717_n);;
			jule::Ptr<_200eea2e4_ScopeTree> _69021_scope = _2031b7ec6_buildScope(_self_, &(_68921_scopeTokens), (*(_67638_tokens))[_67717_n]);;
			(*(_67638_tokens))=(*(_67638_tokens)).slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_205c6eeba:;
	}
	_iter_end_205c6eeba:;;
	jule::Ptr<_1ed694d8c_Token> _69417_end;;
	if (((*(_67638_tokens)).len() > 0LL)) {
		_69417_end=(*(_67638_tokens))[((*(_67638_tokens)).len() - 1LL)];
	};
	jule::Ptr<_200eea2e4_ScopeTree> _69817_scope = _2031b7ec6_buildScope(_self_, _67638_tokens, _69417_end);;
	(*(_67638_tokens))=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_201001a9d_Case__jule_tuple_bool _2031bdd34_buildCase(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_201001a9d_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_201001a9d_Case> _70417_c = jule::new_ptr<_201001a9d_Case>(_201001a9d_Case{._field_Token=(*(_70333_tokens))[0LL], });;
	(*(_70333_tokens))=(*(_70333_tokens)).slice(1LL);
	jule::Ptr<_1ed694d8c_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_2031bd66e_buildCaseExprs(_self_, _70333_tokens, &(_70817_colon), _70351_typeMatch);
	_70417_c.get()._field_Scope=_2031bd97c_buildCaseScope(_self_, _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_201001a9d_Case__jule_tuple_x_2010009d1_Else _2031be1db_buildCases(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_201001a9d_Case__jule_tuple_x_2010009d1_Else __jule_func_result;
	jule::Slice<jule::Ptr<_201001a9d_Case>> _71917_cases = nullptr;;
	jule::Ptr<_2010009d1_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1ed694d8c_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U32>(6LLU)) || (!_72321_tok.get()._field_Kind.equal("|", 1)))) {
				_2031b7316_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_205c77ec3;
			};
			jule::Ptr<_201001a9d_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_201001a9d_Case__jule_tuple_bool __jule_assign_result = _2031bdd34_buildCase(_self_, &(_71833_tokens), _71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_2010009d1_Else>(_2010009d1_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_2031b7316_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				{ jule::Slice<jule::Ptr<_201001a9d_Case>> &__jule_push_dest = _71917_cases; __jule_push_dest.push(_72822_c); };
			};
		}
	_iter_next_205c77ec3:;
	}
	_iter_end_205c77ec3:;;
	if (_72117_defNotLast) {
		_2031b7316_pushErr(_self_, _72017_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_201002274_MatchCase> _2031be4e9_buildMatchCase(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _75237_tokens) {
	jule::Ptr<_201002274_MatchCase> _75317_m = jule::new_ptr<_201002274_MatchCase>(_201002274_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U32>(9LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _76317_exprTokens = _2031cc958_getBlockExpr(&(_75237_tokens));;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_2031d38c6_buildExpr((*(_self_))._field_p, &(_76317_exprTokens));
	} else if (_75317_m.get()._field_TypeMatch) {
		_2031b7316_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I32 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _77117_blockToks = _2031d0a27_range(&(_77017_i), jule::Str("{", 1), jule::Str("}", 1), &(_75237_tokens));;
	if ((_77117_blockToks == nullptr)) {
		_2031b67aa_stop(_self_);
		_2031b7316_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("body is not exist", 17));
		_2031b7635_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_2031b7316_pushErr(_self_, _75237_tokens[_77017_i], jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_201001a9d_Case__jule_tuple_x_2010009d1_Else __jule_assign_result = _2031be1db_buildCases(_self_, _77117_blockToks, _75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_200eea2e4_ScopeTree> _2031be807_buildScopeSt(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_1ed694d8c_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U32>(33LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_2031b7316_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U32>(35LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_2031b7316_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U32>(35LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_2031b7316_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I32 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _81517_scopeTokens = _2031d0a27_range(&(_81417_i), jule::Str("{", 1), jule::Str("}", 1), &(_78535_tokens));;
	if ((_81517_scopeTokens == nullptr)) {
		_2031b7316_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_2031b7316_pushErr(_self_, _78535_tokens[_81417_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_200eea2e4_ScopeTree> _82217_scope = _2031b7ec6_buildScope(_self_, &(_81517_scopeTokens), _78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_200ee7a0b_LabelSt> _2031beb15_buildLabelSt(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _82836_tokens) {
	jule::Ptr<_200ee7a0b_LabelSt> _82917_lbl = jule::new_ptr<_200ee7a0b_LabelSt>(_200ee7a0b_LabelSt{._field_Token=(*(_82836_tokens))[0LL], ._field_Ident=(*(_82836_tokens))[0LL].get()._field_Kind});;
	if (((*(_82836_tokens)).len() > 2LL)) {
		(*(_82836_tokens))=(*(_82836_tokens)).slice(2LL);
		_2031b78aa_insertAsNext(_self_, _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__200ee99a8_StmtData__jule_tuple_bool _2031bee23_buildIdSt(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _84333_tokens) {
	__jule_tuple__200ee99a8_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84333_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ed694d8c_Token> _84817_token = (*(_84333_tokens))[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_205c8be60:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_2031beb15_buildLabelSt(_self_, _84333_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_205c8be0a:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_2031cde87_assignInfo> _2031c0231_buildAssignInfo(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _85739_tokens) {
	jule::Ptr<_2031cde87_assignInfo> _85817_info = jule::new_ptr<_2031cde87_assignInfo>(_2031cde87_assignInfo{._field_ok=true});;
	jule::I32 _86117_braceN = 0LL;;
	{
		auto expr = _85739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c8d57c:;
		if (it != expr_end) {
			jule::I32 _86214_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_205c8e3d5:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_205c8e6b0:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_205c8e4a1:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_205c8ed64:;
						{
							goto _iter_next_205c8d57c;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U32>(6LLU))) {
						_case_begin_205c8edca:;
						{
							goto _iter_next_205c8d57c;
						}
					}
					else if ((!(_1ed699974_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_205c8ee41:;
						{
							goto _iter_next_205c8d57c;
						}
					}
					_match_end_205c8e2e7:;
				};
				_85817_info.get()._field_l=(*(_85739_tokens)).slice(0LL, _86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= (*(_85739_tokens)).len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_1ed6996cc_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_205c8d57c;
				};
				_85817_info.get()._field_r=(*(_85739_tokens)).slice((_86214_i + 1LL));
				if (_1ed6996cc_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_2031b7316_pushErr(_self_, _85817_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_205c8d57c;
			}
			_iter_next_205c8d57c:;
			++it;
			_86214_i++;
			goto _iter_begin_205c8d57c;
		}
		_iter_end_205c8d57c:;
	};
	return _85817_info;;
}



inline jule::Ptr<_200ee87a9_AssignLeft> _2031c053e_buildAssignL(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _90536_tokens) {
	jule::Ptr<_200ee87a9_AssignLeft> _90617_l = jule::new_ptr<_200ee87a9_AssignLeft>(_200ee87a9_AssignLeft{._field_Token=(*(_90536_tokens))[0LL], });;
	if (((*(_90536_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(1LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_2031d38c6_buildExpr((*(_self_))._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_200ee87a9_AssignLeft>> _2031c084c_buildAssignLs(_2031b616c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>>* _91637_parts) {
	jule::Slice<jule::Ptr<_200ee87a9_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto expr = _91637_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205c96288:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _91821_part = *it;
			{
				jule::Ptr<_200ee87a9_AssignLeft> _91921_l = _2031c053e_buildAssignL(_self_, &(_91821_part));;
				{ jule::Slice<jule::Ptr<_200ee87a9_AssignLeft>> &__jule_push_dest = _91717_lefts; __jule_push_dest.push(_91921_l); };
			}
			_iter_next_205c96288:;
			++it;
			goto _iter_begin_205c96288;
		}
		_iter_end_205c96288:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool _2031c0b5a_buildPlainAssign(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _92640_tokens) {
	__jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_2031cde87_assignInfo> _92717_info = _2031c0231_buildAssignInfo(_self_, _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_200ee8ce8_AssignSt> _93217_assign = jule::new_ptr<_200ee8ce8_AssignSt>(_200ee8ce8_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _93618_parts;;
	jule::Slice<_2193a460d_Log> _93625_errs;;
	({
		__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031d1594_parts(&(_92717_info.get()._field_l), static_cast<jule::U32>(7LLU), true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_93625_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_2031c084c_buildAssignLs(_self_, &(_93618_parts));
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_2031d38c6_buildExpr((*(_self_))._field_p, &(_92717_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool _2031c0e68_buildDeclAssign(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _95038_tokens) {
	__jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_1ed694d8c_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U32>(2LLU)) || (!_95617_token.get()._field_Kind.equal("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_200ee8ce8_AssignSt> _96117_assign = jule::new_ptr<_200ee8ce8_AssignSt>(_200ee8ce8_AssignSt{._field_Declarative=true, });;
	jule::I32 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _96617_rang = _2031d0a27_range(&(_96517_i), jule::Str("(", 1), jule::Str(")", 1), &(_95038_tokens));;
	if ((_96617_rang == nullptr)) {
		_2031b7316_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_1ed694d8c_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_2031d38c6_buildExpr((*(_self_))._field_p, &(_97321_exprTokens));
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _97818_parts;;
	jule::Slice<_2193a460d_Log> _97825_errs;;
	({
		__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031d1594_parts(&(_96617_rang), static_cast<jule::U32>(7LLU), true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_97825_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_97818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205ca177c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_2031b7316_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_205ca177c;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U32>(6LLU)) && _98421_part[0LL].get()._field_Kind.equal("&", 1))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_2031b7316_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_205ca177c;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U32>(1LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U32>(2LLU))) && (!_98421_part[0LL].get()._field_Kind.equal("(", 1)))) {
					_2031b7316_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
					goto _iter_next_205ca177c;
				};
				jule::Ptr<_200ee87a9_AssignLeft> _101421_l = _2031c053e_buildAssignL(_self_, &(_98421_part));;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				{ jule::Slice<jule::Ptr<_200ee87a9_AssignLeft>> &__jule_push_dest = _96117_assign.get()._field_Left; __jule_push_dest.push(_101421_l); };
			}
			_iter_next_205ca177c:;
			++it;
			goto _iter_begin_205ca177c;
		}
		_iter_end_205ca177c:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool _2031c1276_buildAssignSt(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _102337_tokens) {
	__jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_2031ce32d_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_102337_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_205ca8a81:;
			{
				({
					__jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool __jule_assign_result = _2031c0e68_buildDeclAssign(_self_, (*(_102337_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_205ca8696:;
			{
				({
					__jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool __jule_assign_result = _2031c0b5a_buildPlainAssign(_self_, _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_205ca8641:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_200ee01c9_UseExpr> _2031c1584_buildUseExpr(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _103836_tokens) {
	if (((*(_103836_tokens)).len() == 1LL)) {
		_2031b7316_pushErr(_self_, (*(_103836_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_200ee01c9_UseExpr> _104317_ue = jule::new_ptr<_200ee01c9_UseExpr>(_200ee01c9_UseExpr{._field_Token=(*(_103836_tokens))[0LL], });;
	(*(_103836_tokens))=(*(_103836_tokens)).slice(1LL);
	_104317_ue.get()._field_Expr=_2031d38c6_buildExpr((*(_self_))._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _2031c1892_buildSt(_2031b616c_scopeParser* _self_, jule::Ptr<_2031b5842_stmt>* _105131_st) {
	jule::Ptr<_1ed694d8c_Token> _105217_token = (*(_105131_st)).get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__200ee99a8_StmtData__jule_tuple_bool __jule_assign_result = _2031bee23_buildIdSt(_self_, &((*(_105131_st)).get()._field_tokens));
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_200ee8ce8_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_200ee8ce8_AssignSt__jule_tuple_bool __jule_assign_result = _2031c1276_buildAssignSt(_self_, &((*(_105131_st)).get()._field_tokens));
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_205cad866:;
			{
				return jule::Any(_2031c1584_buildUseExpr(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(36LLU) || _match_expr == static_cast<jule::U32>(8LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_205cad646:;
			{
				return jule::Any(_2031b82d4_buildVarSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_205cad6ac:;
			{
				return jule::Any(_2031b85e2_buildRetSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_205cad723:;
			{
				return jule::Any(_2031bb02e_buildIterSt(_self_, _105131_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(12LLU)) {
			_case_begin_205cad976:;
			{
				return jule::Any(_2031bb33c_buildBreakSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_205cad9dc:;
			{
				return jule::Any(_2031bb64a_buildContSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(15LLU)) {
			_case_begin_205cada53:;
			{
				return jule::Any(_2031bc074_buildIfElseChain(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(24LLU)) {
			_case_begin_205cadaca:;
			{
				return jule::Any(_2031bc382_buildCoCallSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_205cadb52:;
			{
				return jule::Any(_2031bc690_buildGotoSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_205cadbc9:;
			{
				return jule::Any(_2031bc99d_buildFallSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_205cadc51:;
			{
				return jule::Any(_2031bccab_buildTypeAliasSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_205cadcc8:;
			{
				return jule::Any(_2031be4e9_buildMatchCase(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_205cadd50:;
			{
				return jule::Any(_2031be807_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_205caddc7:;
			{
				if (_105217_token.get()._field_Kind.equal("{", 1)) {
					return jule::Any(_2031be807_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_205cad349:;
	};
	jule::Ptr<_200ede838_Expr> _110117_expr = _2031d38c6_buildExpr((*(_self_))._field_p, &((*(_105131_st)).get()._field_tokens));;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type53);;
	};
	_2031b7316_pushErr(_self_, _105217_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _2031c1bb1_build(_2031b616c_scopeParser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _110929_tokens, jule::Ptr<_200eea2e4_ScopeTree>* _110952_s) {
	if (((*(_110952_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_2031b5bd8_splitStmts(_110929_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_110952_s));
	while (((!(_2031b6ee7_isLastSt(_self_))) && (!(_2031b6c83_finished(_self_))))) {
		{
			jule::Ptr<_2031b5842_stmt> _111721_st = _2031b7b1e_next(_self_);;
			jule::Any _111821_data = _2031c1892_buildSt(_self_, &(_111721_st));;
			if ((_111821_data != nullptr)) {
				{ jule::Slice<_200ee9bd9_Stmt> &__jule_push_dest = (*(_self_))._field_s.get()._field_Stmts; __jule_push_dest.push(_200ee9bd9_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data}); };
			};
			if (_2031b6a1e_stopped(_self_)) {
				goto _iter_end_205cb7089;
			};
		}
	_iter_next_205cb7089:;
	}
	_iter_end_205cb7089:;;
}







std::ostream &operator<<(std::ostream &_Stream, _2031b616c_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _2031c2dd2_pushErr(_2031c2651_exprBuilder* _self_, jule::Ptr<_1ed694d8c_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_2031d3299_pushErr((*(_self_))._field_p.ptr(), _4426_token, _4441_fmt, _4454_args);
}



inline void _2031c3201_pushSuggestion(_2031c2651_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_2031d35b8_pushSuggestion((*(_self_))._field_p.ptr(), _4933_fmt, _4946_args);
}



inline jule::Ptr<_200ee04b5_TupleExpr> _2031c350e_buildTuple(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>>* _5334_parts) {
	jule::Ptr<_200ee04b5_TupleExpr> _5417_tuple = jule::new_ptr<_200ee04b5_TupleExpr>(_200ee04b5_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_200ede838_Expr>>::alloc(0LL, (*(_5334_parts)).len())});;
	{
		auto expr = _5334_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205cd4abd:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _5721_part = *it;
			{
				{ jule::Slice<jule::Ptr<_200ede838_Expr>> &__jule_push_dest = _5417_tuple.get()._field_Expr; __jule_push_dest.push(_2031cc02e_buildFromTokens(_self_, _5721_part)); };
			}
			_iter_next_205cd4abd:;
			++it;
			goto _iter_begin_205cd4abd;
		}
		_iter_end_205cd4abd:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_200ee086c_LitExpr> _2031c381c_buildLit(_2031c2651_exprBuilder* _self_, jule::Ptr<_1ed694d8c_Token> _6327_token) {
	return jule::new_ptr<_200ee086c_LitExpr>(_200ee086c_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031c3b2a_buildPrimitiveType(_2031c2651_exprBuilder* _self_, jule::Ptr<_1ed694d8c_Token>* _7038_token) {
	return _2031e3122_buildPrimType((*(_7038_token)));;
}



inline jule::Any _2031c3e38_buildSingle(_2031c2651_exprBuilder* _self_, jule::Ptr<_1ed694d8c_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(5LLU)) {
			_case_begin_205cd6581:;
			{
				return jule::Any(_2031c381c_buildLit(_self_, _7434_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_205cd65e7:;
			{
				if (_7434_token.get()._field_Kind.equal("...", 3)) {
					return jule::Any(jule::new_ptr<_200ee1ede_VariadicExpr>(_200ee1ede_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type81);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(26LLU) || _match_expr == static_cast<jule::U32>(38LLU)) {
			_case_begin_205cd665d:;
			{
				return jule::Any(_2031cd32c_buildIdentExpr(&(_7434_token)), &__jule_any_type85);;
			}
		}
		_match_end_205cd64c6:;
	};
	_2031c2dd2_pushErr(_self_, _7434_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_200ee142d_IdentExpr> _2031c4246_buildBindIdent(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _9338_tokens) {
	if (((*(_9338_tokens))[0LL].get()._field_Id != static_cast<jule::U32>(29LLU))) {
		return nullptr;;
	} else if (((*(_9338_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(19LLU))) {
		_2031c2dd2_pushErr(_self_, (*(_9338_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031c3201_pushSuggestion(_self_, jule::Str("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ed694d8c_Token> _10117_token = (*(_9338_tokens))[2LL];;
	if ((_10117_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031c2dd2_pushErr(_self_, (*(_9338_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031c3201_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_200ee142d_IdentExpr> _10717_expr = _2031cd32c_buildIdentExpr(&(_10117_token));;
	_10717_expr.get()._field_Binded=true;
	return _10717_expr;;
}



inline jule::Ptr<_200ee1b37_UnaryExpr> _2031c4554_buildUnary(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _11233_tokens) {
	jule::Ptr<_1ed694d8c_Token> _11317_op = _11233_tokens[0LL];;
	if ((_11233_tokens.len() == 1LL)) {
		_2031c2dd2_pushErr(_self_, _11317_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1ed695596_IsUnaryOp(_11317_op.get()._field_Kind)))) {
		_2031c2dd2_pushErr(_self_, _11317_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11317_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11233_tokens=_11233_tokens.slice(1LL);
	return jule::new_ptr<_200ee1b37_UnaryExpr>(_200ee1b37_UnaryExpr{._field_Op=_11317_op, ._field_Expr=_2031cc02e_buildFromTokens(_self_, _11233_tokens)});;
}



inline jule::Ptr<_200ee2bc1_SubIdentExpr> _2031c4862_buildObjSubIdent(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _13339_tokens) {
	jule::I32 _13417_i = (_13339_tokens.len() - 1LL);;
	jule::Ptr<_1ed694d8c_Token> _13517_identToken = _13339_tokens[_13417_i];;
	(_13417_i)--;
	_13339_tokens=_13339_tokens.slice(0LL, _13417_i);
	if ((_13339_tokens.len() == 0LL)) {
		_2031c2dd2_pushErr(_self_, _13517_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_200ee2bc1_SubIdentExpr>(_200ee2bc1_SubIdentExpr{._field_Expr=_2031cc02e_buildFromTokens(_self_, _13339_tokens), ._field_Ident=_13517_identToken});;
}



inline jule::Ptr<_200ee274d_NsSelectionExpr> _2031c4b70_buildNsSubIdent(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _14839_tokens) {
	jule::Ptr<_200ee274d_NsSelectionExpr> _14917_ns = jule::new_ptr<_200ee274d_NsSelectionExpr>();;
	{
		auto expr = _14839_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205ce60b8:;
		if (it != expr_end) {
			jule::I32 _15014_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _15021_token = *it;
			{
				if (((_15014_i & 1LL) == 0LL)) {
					if ((_15021_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
						_2031c2dd2_pushErr(_self_, _15021_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_2031c3201_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					{ jule::Slice<jule::Ptr<_1ed694d8c_Token>> &__jule_push_dest = _14917_ns.get()._field_Ns; __jule_push_dest.push(_15021_token); };
				} else if ((_15021_token.get()._field_Id != static_cast<jule::U32>(21LLU))) {
					_2031c2dd2_pushErr(_self_, _15021_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_2031c3201_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_205ce60b8:;
			++it;
			_15014_i++;
			goto _iter_begin_205ce60b8;
		}
		_iter_end_205ce60b8:;
	};
	_14917_ns.get()._field_Ident=_14917_ns.get()._field_Ns[(_14917_ns.get()._field_Ns.len() - 1LL)];
	_14917_ns.get()._field_Ns=_14917_ns.get()._field_Ns.slice(0LL, (_14917_ns.get()._field_Ns.len() - 1LL));
	return _14917_ns;;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031c4e7d_buildType(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _16733_tokens) {
	jule::I32 _16817_i = 0LL;;
	jule::Ptr<_200eda6ad_TypeDecl> _16918_t;;
	jule::Bool _16921_ok = false;;
	({
		__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType((*(_self_))._field_p, _16733_tokens, (&(_16817_i)), false);
		_16918_t = __jule_assign_result.__jule_result_arg0;
		_16921_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_16921_ok))) {
		_2031c2dd2_pushErr(_self_, (*(_16733_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16817_i < (*(_16733_tokens)).len())) {
		_2031c2dd2_pushErr(_self_, (*(_16733_tokens))[_16817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _16918_t;;
}



inline jule::Any _2031c528b_buildSubIdent(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _18137_tokens) {
	jule::I32 _18213_i = ((*(_18137_tokens)).len() - 2LL);;
	jule::Ptr<_1ed694d8c_Token> _18313_token = (*(_18137_tokens))[_18213_i];;
	{
		auto &_match_expr{ _18313_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_205cecde4:;
			{
				return jule::Any(_2031c4862_buildObjSubIdent(_self_, (*(_18137_tokens))), &__jule_any_type91);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_205cec344:;
			{
				return jule::Any(_2031c4b70_buildNsSubIdent(_self_, _18137_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_205ced026:;
			{
				if (_18313_token.get()._field_Kind.equal("]", 1)) {
					return jule::Any(_2031c4e7d_buildType(_self_, _18137_tokens), &__jule_any_type94);;
				};
			}
		}
		_match_end_205cecd8e:;
	};
	_2031c2dd2_pushErr(_self_, _18313_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_200ee1ede_VariadicExpr> _2031c5599_buildVariadic(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _19936_tokens) {
	jule::Ptr<_1ed694d8c_Token> _20017_token = _19936_tokens[(_19936_tokens.len() - 1LL)];;
	_19936_tokens=_19936_tokens.slice(0LL, (_19936_tokens.len() - 1LL));
	return jule::new_ptr<_200ee1ede_VariadicExpr>(_200ee1ede_VariadicExpr{._field_Token=_20017_token, ._field_Expr=_2031cc02e_buildFromTokens(_self_, _19936_tokens)});;
}



inline jule::Any _2031c58a7_buildOpRight(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _20836_tokens) {
	jule::Ptr<_1ed694d8c_Token> _20917_token = (*(_20836_tokens))[((*(_20836_tokens)).len() - 1LL)];;
	{
		auto &_match_expr{ _20917_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_205d01bb7:;
			{
				(*(_20836_tokens))=(*(_20836_tokens)).slice(0LL, ((*(_20836_tokens)).len() - 1LL));
				jule::Any _21321_d = _2031cb913_build(_self_, _20836_tokens);;
				if ((_21321_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21321_d };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_205d02e3d:;
						{
							_21321_d.cast_ptr<_200ee374e_FnCallExpr>(&__jule_any_type111).get()._field_Exception=jule::new_ptr<_200eea2e4_ScopeTree>(_200eea2e4_ScopeTree{._field_Deferred=true, });
							return _21321_d;;
						}
					}
					_match_end_205d031d5:;
				};
			}
		}
		_match_end_205d01a0d:;
	};
	_2031c2dd2_pushErr(_self_, _20917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_200edeb24_RangeExpr> _2031c5bd7_buildBetweenParentheses(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _22946_tokens) {
	if ((_22946_tokens.len() == 2LL)) {
		_2031c2dd2_pushErr(_self_, _22946_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_2031c3201_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_22946_tokens=_22946_tokens.slice(1LL, (_22946_tokens.len() - 1LL));
	return jule::new_ptr<_200edeb24_RangeExpr>(_200edeb24_RangeExpr{._field_Expr=_2031cc02e_buildFromTokens(_self_, _22946_tokens)});;
}



inline jule::Ptr<_200ee2396_CastExpr> _2031c6006_tryBuildCast(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _24136_tokens) {
	jule::I32 _24217_rangeN = 0LL;;
	{
		auto expr = _24136_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d06084:;
		if (it != expr_end) {
			jule::I32 _24313_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _24316_token = *it;
			{
				if ((_24316_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
					{
						auto &_match_expr{ _24316_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_205d06d98:;
							{
								(_24217_rangeN)++;
								goto _iter_next_205d06084;
							}
						}
						else {
							_case_begin_205d07173:;
							{
								(_24217_rangeN)--;
							}
						}
						_match_end_205d06e64:;
					};
				};
				if ((_24217_rangeN > 0LL)) {
					goto _iter_next_205d06084;
				} else if (((_24313_i + 1LL) == (*(_24136_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1ed694d8c_Token>> _26221_typeTokens = (*(_24136_tokens)).slice(0LL, (_24313_i + 1LL));;
				jule::Slice<jule::Ptr<_1ed694d8c_Token>> _26321_exprTokens = (*(_24136_tokens)).slice((_24313_i + 1LL));;
				if ((_26321_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1ed694d8c_Token> _27017_tok = _26321_exprTokens[0LL];;
				if (((_27017_tok.get()._field_Id != static_cast<jule::U32>(2LLU)) || (!_27017_tok.get()._field_Kind.equal("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_200ee2396_CastExpr> _27521_cast = jule::new_ptr<_200ee2396_CastExpr>(_200ee2396_CastExpr{});;
				if ((_26321_exprTokens.len() == 2LL)) {
					_2031c2dd2_pushErr(_self_, _26321_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_2031c3201_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_26221_typeTokens.len() == 2LL)) {
					_2031c2dd2_pushErr(_self_, _26221_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_2031c3201_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_26221_typeTokens=_26221_typeTokens.slice(1LL, (_26221_typeTokens.len() - 1LL));
					jule::I32 _28925_typeIndex = 0LL;;
					jule::Ptr<_200eda6ad_TypeDecl> _29026_t;;
					jule::Bool _29029_ok = false;;
					({
						__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType((*(_self_))._field_p, &(_26221_typeTokens), (&(_28925_typeIndex)), true);
						_29026_t = __jule_assign_result.__jule_result_arg0;
						_29029_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29029_ok && (_28925_typeIndex < _26221_typeTokens.len()))) {
						_2031c2dd2_pushErr(_self_, _26221_typeTokens[_28925_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_29029_ok))) {
						return _27521_cast;;
					};
					_27521_cast.get()._field_Kind=_29026_t;
					if ((_26321_exprTokens.len() > 2LL)) {
						jule::I32 _30029_j = 0LL;;
						_2031d0a27_range(&(_30029_j), jule::Str("(", 1), jule::Str(")", 1), &(_26321_exprTokens));
						if ((_30029_j < _26321_exprTokens.len())) {
							return nullptr;;
						};
						_26321_exprTokens=_26321_exprTokens.slice(0LL, _30029_j);
						_27521_cast.get()._field_Expr=_2031cc02e_buildFromTokens(_self_, _26321_exprTokens);
					};
				};
				return _27521_cast;;
			}
			_iter_next_205d06084:;
			++it;
			_24313_i++;
			goto _iter_begin_205d06084;
		}
		_iter_end_205d06084:;
	};
	return nullptr;;
}



inline void _2031c63be_pushArg(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_200ede838_Expr>>* _31531_args, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _31550_tokens, jule::Ptr<_1ed694d8c_Token> _31568_err_token) {
	if ((_31550_tokens.len() == 0LL)) {
		_2031c2dd2_pushErr(_self_, _31568_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031c3201_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_200ede838_Expr>> &__jule_push_dest = (*(_31531_args)); __jule_push_dest.push(_2031cc02e_buildFromTokens(_self_, _31550_tokens)); };
}



inline jule::Slice<jule::Ptr<_200ede838_Expr>> _2031c66cc_buildArgs(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _32432_tokens) {
	if ((_32432_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_200ede838_Expr>> _33017_args = nullptr;;
	jule::I32 _33117_last = 0LL;;
	jule::I32 _33217_rangeN = 0LL;;
	_32432_tokens=_32432_tokens.slice(1LL, (_32432_tokens.len() - 1LL));
	{
		auto expr = &(_32432_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d13602:;
		if (it != expr_end) {
			jule::I32 _33413_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _33416_token = *it;
			{
				if ((_33416_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
					{
						auto &_match_expr{ _33416_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_205d14735:;
							{
								(_33217_rangeN)++;
							}
						}
						else {
							_case_begin_205d14a10:;
							{
								(_33217_rangeN)--;
							}
						}
						_match_end_205d14801:;
					};
				};
				if (((_33217_rangeN > 0LL) || (_33416_token.get()._field_Id != static_cast<jule::U32>(7LLU)))) {
					goto _iter_next_205d13602;
				};
				_2031c63be_pushArg(_self_, &(_33017_args), _32432_tokens.slice(_33117_last, _33413_i), _33416_token);
				_33117_last=static_cast<jule::I32>((_33413_i + 1LL));
			}
			_iter_next_205d13602:;
			++it;
			_33413_i++;
			goto _iter_begin_205d13602;
		}
		_iter_end_205d13602:;
	};
	if ((_33117_last < _32432_tokens.len())) {
		if ((_33117_last == 0LL)) {
			if ((_32432_tokens.len() > 0LL)) {
				_2031c63be_pushArg(_self_, &(_33017_args), _32432_tokens.slice(_33117_last), _32432_tokens[_33117_last]);
			};
		} else {
			_2031c63be_pushArg(_self_, &(_33017_args), _32432_tokens.slice(_33117_last), _32432_tokens[(_33117_last - 1LL)]);
		};
	};
	return _33017_args;;
}



inline jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _2031c69da_buildCallGenerics(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _36640_tokens) {
	if ((_36640_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36640_tokens=_36640_tokens.slice(1LL, (_36640_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _37218_parts;;
	jule::Slice<_2193a460d_Log> _37225_errs;;
	({
		__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031d1594_parts(&(_36640_tokens), static_cast<jule::U32>(7LLU), true);
		_37218_parts = __jule_assign_result.__jule_result_arg0;
		_37225_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _37317_generics = jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>::alloc(0LL, _37218_parts.len());;
	((*(_self_))._field_p.get()._field_errors).append(_37225_errs);;
	{
		auto expr = &(_37218_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d18eed:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _37521_part = *it;
			{
				if ((_37521_part.len() == 0LL)) {
					goto _iter_next_205d18eed;
				};
				jule::I32 _37921_j = 0LL;;
				jule::Ptr<_200eda6ad_TypeDecl> _38022_generic;;
				({
					__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType((*(_self_))._field_p, &(_37521_part), (&(_37921_j)), true);
					_38022_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_37921_j < _37521_part.len())) {
					_2031c2dd2_pushErr(_self_, _37521_part[_37921_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> &__jule_push_dest = _37317_generics; __jule_push_dest.push(_38022_generic); };
			}
			_iter_next_205d18eed:;
			++it;
			goto _iter_begin_205d18eed;
		}
		_iter_end_205d18eed:;
	};
	return _37317_generics;;
}



inline jule::Ptr<_200ee374e_FnCallExpr> _2031c6e3b_buildFnCall(_2031c2651_exprBuilder* _self_, jule::Ptr<_1ed694d8c_Token>* _39035_token, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _39055_expr, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _39076_args) {
	return jule::new_ptr<_200ee374e_FnCallExpr>(_200ee374e_FnCallExpr{._field_Token=(*(_39035_token)), ._field_Expr=_2031cc02e_buildFromTokens(_self_, (*(_39055_expr))), ._field_Args=_2031c66cc_buildArgs(_self_, (*(_39076_args))), });;
}



inline jule::Any _2031c7249_buildParenthesesRange(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _39845_tokens) {
	jule::Ptr<_1ed694d8c_Token> _39917_token = (*(_39845_tokens))[0LL];;
	{
		auto &_match_expr{ _39917_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_205d1d288:;
			{
				{
					auto &_match_expr{ _39917_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_205d1db07:;
						{
							jule::Ptr<_200ee2396_CastExpr> _40425_expr = _2031c6006_tryBuildCast(_self_, _39845_tokens);;
							if ((_40425_expr != nullptr)) {
								return jule::Any(_40425_expr, &__jule_any_type109);;
							};
						}
					}
					_match_end_205d1d93c:;
				};
			}
		}
		_match_end_205d1d0ce:;
	};
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _41018_exprTokens;;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _41034_args_tokens;;
	({
		__jule_tuple_sx_1ed694d8c_Token__jule_tuple_sx_1ed694d8c_Token __jule_assign_result = _2031d0cbe_rangeLast(_39845_tokens);
		_41018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41034_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41018_exprTokens.len() == 0LL)) {
		return jule::Any(_2031c5bd7_buildBetweenParentheses(_self_, _41034_args_tokens), &__jule_any_type104);;
	};
	return jule::Any(_2031c6e3b_buildFnCall(_self_, &(_39917_token), &(_41018_exprTokens), &(_41034_args_tokens)), &__jule_any_type111);;
}



inline jule::Ptr<_200ee0eaa_UnsafeExpr> _2031c7557_buildUnsafeExpr(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _41938_tokens) {
	jule::Ptr<_1ed694d8c_Token> _42017_token = _41938_tokens[0LL];;
	_41938_tokens=_41938_tokens.slice(1LL);
	jule::I32 _42217_i = 0LL;;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _42317_rangeTokens = _2031d0a27_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_41938_tokens));;
	if ((_42317_rangeTokens.len() == 0LL)) {
		_2031c2dd2_pushErr(_self_, _41938_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_200ee0eaa_UnsafeExpr>(_200ee0eaa_UnsafeExpr{._field_Token=_42017_token, ._field_Expr=_2031cc02e_buildFromTokens(_self_, _42317_rangeTokens)});;
}



inline jule::Ptr<_200eebcda_FnDecl> _2031c7865_buildAnonFn(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _43435_tokens) {
	jule::Ptr<_200eebcda_FnDecl> _43517_f = _2031d8d0a_buildFn((*(_self_))._field_p, _43435_tokens, false, false);;
	if ((!(_200eec13c_IsAnon(_43517_f.ptr())))) {
		_2031c2dd2_pushErr(_self_, _43517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031c3201_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _43517_f;;
}



inline jule::Any _2031c7b73_buildUnsafe(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _44335_tokens) {
	{
		auto &_match_expr{ (*(_44335_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_205d24602:;
			{
				return jule::Any(_2031c7865_buildAnonFn(_self_, _44335_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_205d249cb:;
			{
				return jule::Any(_2031c7557_buildUnsafeExpr(_self_, (*(_44335_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_205d24954:;
	};
}



inline void _2031c803b_pushRangeLitPart(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _45339_part, jule::Ptr<_1ed694d8c_Token> _4549_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>>* _45434_parts) {
	if ((_45339_part.len() == 0LL)) {
		_2031c2dd2_pushErr(_self_, _4549_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031c3201_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> &__jule_push_dest = (*(_45434_parts)); __jule_push_dest.push(_45339_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _2031c836b_getBraceRangeLitExprParts(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _46448_tokens) {
	if ((_46448_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _47017_parts = nullptr;;
	jule::I32 _47217_last = 0LL;;
	jule::I32 _47317_rangeN = 0LL;;
	_46448_tokens=_46448_tokens.slice(1LL, (_46448_tokens.len() - 1LL));
	{
		auto expr = &(_46448_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d2854b:;
		if (it != expr_end) {
			jule::I32 _47513_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _47516_token = *it;
			{
				if ((_47516_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
					{
						auto &_match_expr{ _47516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_205d2967e:;
							{
								(_47317_rangeN)++;
							}
						}
						else {
							_case_begin_205d29959:;
							{
								(_47317_rangeN)--;
							}
						}
						_match_end_205d2974a:;
					};
				};
				if (((_47317_rangeN > 0LL) || (_47516_token.get()._field_Id != static_cast<jule::U32>(7LLU)))) {
					goto _iter_next_205d2854b;
				};
				_2031c803b_pushRangeLitPart(_self_, _46448_tokens.slice(_47217_last, _47513_i), _47516_token, &(_47017_parts));
				_47217_last=static_cast<jule::I32>((_47513_i + 1LL));
			}
			_iter_next_205d2854b:;
			++it;
			_47513_i++;
			goto _iter_begin_205d2854b;
		}
		_iter_end_205d2854b:;
	};
	if ((_47217_last < _46448_tokens.len())) {
		if ((_47217_last == 0LL)) {
			if ((_46448_tokens.len() > 0LL)) {
				_2031c803b_pushRangeLitPart(_self_, _46448_tokens.slice(_47217_last), _46448_tokens[_47217_last], &(_47017_parts));
			};
		} else {
			_2031c803b_pushRangeLitPart(_self_, _46448_tokens.slice(_47217_last), _46448_tokens[(_47217_last - 1LL)], &(_47017_parts));
		};
	};
	return _47017_parts;;
}



inline jule::Ptr<_200ee41cd_FieldExprPair> _2031c868a_buildFieldExprPair(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _50641_tokens) {
	if (((_50641_tokens.len() - 2LL) == 0LL)) {
		_2031c2dd2_pushErr(_self_, _50641_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_200ee41cd_FieldExprPair> _51117_pair = jule::new_ptr<_200ee41cd_FieldExprPair>(_200ee41cd_FieldExprPair{._field_Field=_50641_tokens[0LL], });;
	_50641_tokens=_50641_tokens.slice(2LL);
	_51117_pair.get()._field_Expr=_2031cc02e_buildFromTokens(_self_, _50641_tokens);
	return _51117_pair;;
}



inline jule::Ptr<_200ede838_Expr> _2031c8998_buildStructLitExpr(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _51942_tokens) {
	jule::Ptr<_1ed694d8c_Token> _52017_token = (*(_51942_tokens))[0LL];;
	if (((_52017_token.get()._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_51942_tokens)).len() > 1LL))) {
		_52017_token=(*(_51942_tokens))[1LL];
		if ((_52017_token.get()._field_Id == static_cast<jule::U32>(10LLU))) {
			return jule::new_ptr<_200ede838_Expr>(_200ede838_Expr{._field_Token=_52017_token, ._field_End=(*(_51942_tokens))[((*(_51942_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_2031c868a_buildFieldExprPair(_self_, (*(_51942_tokens))), &__jule_any_type83)});;
		};
	};
	return _2031cc02e_buildFromTokens(_self_, (*(_51942_tokens)));;
}



inline jule::Slice<jule::Ptr<_200ede838_Expr>> _2031c8ca6_buildStructLitExprs(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _53443_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _53517_parts = _2031c836b_getBraceRangeLitExprParts(_self_, (*(_53443_tokens)));;
	if ((_53517_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_200ede838_Expr>> _54017_pairs = jule::Slice<jule::Ptr<_200ede838_Expr>>::alloc(0LL, _53517_parts.len());;
	{
		auto expr = &(_53517_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d32104:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _54121_part = *it;
			{
				{ jule::Slice<jule::Ptr<_200ede838_Expr>> &__jule_push_dest = _54017_pairs; __jule_push_dest.push(_2031c8998_buildStructLitExpr(_self_, &(_54121_part))); };
			}
			_iter_next_205d32104:;
			++it;
			goto _iter_begin_205d32104;
		}
		_iter_end_205d32104:;
	};
	return _54017_pairs;;
}



inline jule::Ptr<_200ee49a3_StructLit> _2031c90d6_buildTypedStructLiteral(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _54746_tokens) {
	jule::I32 _54817_i = 0LL;;
	jule::Ptr<_200eda6ad_TypeDecl> _54918_t;;
	jule::Bool _54921_ok = false;;
	({
		__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType((*(_self_))._field_p, &(_54746_tokens), (&(_54817_i)), true);
		_54918_t = __jule_assign_result.__jule_result_arg0;
		_54921_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_54921_ok))) {
		return nullptr;;
	} else if ((_54817_i >= _54746_tokens.len())) {
		_2031c2dd2_pushErr(_self_, _54746_tokens[_54817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54746_tokens=_54746_tokens.slice(_54817_i);
	jule::Ptr<_1ed694d8c_Token> _55813_token = _54746_tokens[0LL];;
	if (((_55813_token.get()._field_Id != static_cast<jule::U32>(2LLU)) || (!_55813_token.get()._field_Kind.equal("{", 1)))) {
		_2031c2dd2_pushErr(_self_, _55813_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_200ee49a3_StructLit>(_200ee49a3_StructLit{._field_End=_54746_tokens[(_54746_tokens.len() - 1LL)], ._field_Kind=_54918_t, ._field_Exprs=_2031c8ca6_buildStructLitExprs(_self_, &(_54746_tokens))});;
}



inline jule::Ptr<_200ede838_Expr> _2031c9405_buildBraceLitPart(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _57141_tokens) {
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _57218_l;;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _57225_r;;
	({
		__jule_tuple_sx_1ed694d8c_Token__jule_tuple_sx_1ed694d8c_Token __jule_assign_result = _2031cccdd_splitDelim(_57141_tokens, static_cast<jule::U32>(10LLU));
		_57218_l = __jule_assign_result.__jule_result_arg0;
		_57225_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57218_l != nullptr)) {
		return jule::new_ptr<_200ede838_Expr>(_200ede838_Expr{._field_Token=(*(_57141_tokens))[0LL], ._field_End=(*(_57141_tokens))[((*(_57141_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_200ee580b_KeyValPair>(_200ee580b_KeyValPair{._field_Key=_2031cc02e_buildFromTokens(_self_, _57218_l), ._field_Val=_2031cc02e_buildFromTokens(_self_, _57225_r), ._field_Colon=(*(_57141_tokens))[_57218_l.len()]}), &__jule_any_type84)});;
	};
	return _2031cc02e_buildFromTokens(_self_, (*(_57141_tokens)));;
}



inline jule::Ptr<_200ee4e26_BraceLit> _2031c9713_buildBraceLit(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _58837_tokens) {
	jule::Ptr<_200ee4e26_BraceLit> _58917_lit = jule::new_ptr<_200ee4e26_BraceLit>(_200ee4e26_BraceLit{._field_Token=(*(_58837_tokens))[0LL], ._field_End=(*(_58837_tokens))[((*(_58837_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _59417_parts = _2031c836b_getBraceRangeLitExprParts(_self_, (*(_58837_tokens)));;
	if ((_59417_parts == nullptr)) {
		return _58917_lit;;
	};
	_58917_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_200ede838_Expr>>::alloc(0LL, _59417_parts.len());
	{
		auto expr = &(_59417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d3ad00:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _60021_part = *it;
			{
				{ jule::Slice<jule::Ptr<_200ede838_Expr>> &__jule_push_dest = _58917_lit.get()._field_Exprs; __jule_push_dest.push(_2031c9405_buildBraceLitPart(_self_, &(_60021_part))); };
			}
			_iter_next_205d3ad00:;
			++it;
			goto _iter_begin_205d3ad00;
		}
		_iter_end_205d3ad00:;
	};
	return _58917_lit;;
}



inline jule::Any _2031c9a21_buildBraceRange(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _60739_tokens) {
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _60818_exprTokens;;
	jule::I32 _60830_rangeN = 0;;
	({
		__jule_tuple_sx_1ed694d8c_Token__jule_tuple_int __jule_assign_result = _2031cd5c4_getRangeExprTokens(_60739_tokens);
		_60818_exprTokens = __jule_assign_result.__jule_result_arg0;
		_60830_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_60818_exprTokens.len() == 0LL)) {
			_case_begin_205d3c692:;
			{
				return jule::Any(_2031c9713_buildBraceLit(_self_, _60739_tokens), &__jule_any_type112);;
			}
		}
		else if ((_60830_rangeN > 0LL)) {
			_case_begin_205d3c94a:;
			{
				_2031c2dd2_pushErr(_self_, (*(_60739_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_205d3bd78:;
	};
	jule::Ptr<_1ed694d8c_Token> _61913_elseToken = _60818_exprTokens[(_60818_exprTokens.len() - 1LL)];;
	if ((_60818_exprTokens[(_60818_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U32>(16LLU))) {
		_60818_exprTokens=_60818_exprTokens.slice(0LL, (_60818_exprTokens.len() - 1LL));
		jule::Any _62221_d = _2031cb913_build(_self_, &(_60818_exprTokens));;
		if ((_62221_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62221_d };
			
			if (_match_expr.type == &__jule_any_type111) {
				_case_begin_205d4072d:;
				{
					(*(_60739_tokens))=(*(_60739_tokens)).slice((_60818_exprTokens.len() + 1LL));
					jule::I32 _62925_i = 0LL;;
					jule::Slice<jule::Ptr<_1ed694d8c_Token>> _63025_rangeTokens = _2031d0a27_range(&(_62925_i), jule::Str("{", 1), jule::Str("}", 1), _60739_tokens);;
					jule::Ptr<_200ee374e_FnCallExpr> _63125_model = _62221_d.cast_ptr<_200ee374e_FnCallExpr>(&__jule_any_type111);;
					if (_200ee3d26_Ignored(_63125_model.ptr())) {
						_2031c2dd2_pushErr(_self_, _61913_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_2031c3201_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_63125_model.get()._field_Exception=_2031d4311_buildScope((*(_self_))._field_p, &(_63025_rangeTokens), (*(_60739_tokens))[(_62925_i - 1LL)]);
					return _62221_d;;
				}
			}
			else {
				_case_begin_205d40266:;
				{
					_2031c2dd2_pushErr(_self_, _60818_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_205d4050d:;
		};
	};
	{
		auto &_match_expr{ _60818_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_205d449a7:;
			{
				return _2031c7b73_buildUnsafe(_self_, _60739_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_205d44a1d:;
			{
				return jule::Any(_2031c7865_buildAnonFn(_self_, _60739_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_205d44842:;
			{
				return jule::Any(_2031c90d6_buildTypedStructLiteral(_self_, (*(_60739_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_205d41069:;
			{
				_2031c2dd2_pushErr(_self_, _60818_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_205d3e397:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _2031c9d2e_getEnumerableParts(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _65941_tokens) {
	_65941_tokens=_65941_tokens.slice(1LL, (_65941_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _66118_parts;;
	jule::Slice<_2193a460d_Log> _66125_errors;;
	({
		__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031d1594_parts(&(_65941_tokens), static_cast<jule::U32>(7LLU), true);
		_66118_parts = __jule_assign_result.__jule_result_arg0;
		_66125_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_66125_errors);;
	return _66118_parts;;
}



inline jule::Ptr<_200ee5e7c_SliceExpr> _2031ca13c_buildSlice(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _66633_tokens) {
	jule::Ptr<_200ee5e7c_SliceExpr> _66717_slc = jule::new_ptr<_200ee5e7c_SliceExpr>(_200ee5e7c_SliceExpr{._field_Token=_66633_tokens[0LL], ._field_End=_66633_tokens[(_66633_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _67217_parts = _2031c9d2e_getEnumerableParts(_self_, _66633_tokens);;
	if ((_67217_parts.len() == 0LL)) {
		return _66717_slc;;
	};
	_66717_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_200ede838_Expr>>::alloc(0LL, _67217_parts.len());
	{
		auto expr = &(_67217_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d48acc:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _67821_p = *it;
			{
				if ((_67821_p.len() == 0LL)) {
					goto _iter_next_205d48acc;
				};
				{ jule::Slice<jule::Ptr<_200ede838_Expr>> &__jule_push_dest = _66717_slc.get()._field_Exprs; __jule_push_dest.push(_2031cc02e_buildFromTokens(_self_, _67821_p)); };
			}
			_iter_next_205d48acc:;
			++it;
			goto _iter_begin_205d48acc;
		}
		_iter_end_205d48acc:;
	};
	return _66717_slc;;
}



inline jule::Ptr<_200ee67da_IndexingExpr> _2031ca58d_buildIndexing(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _68836_exprTokens, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _68913_tokens, jule::Ptr<_1ed694d8c_Token> _68935_errorToken) {
	jule::Ptr<_1ed694d8c_Token> _69017_end = _68913_tokens[(_68913_tokens.len() - 1LL)];;
	_68913_tokens=_68913_tokens.slice(1LL, (_68913_tokens.len() - 1LL));
	if ((_68913_tokens.len() == 0LL)) {
		_2031c2dd2_pushErr(_self_, _68935_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_200ede838_Expr> _69617_expr = _2031cc02e_buildFromTokens(_self_, _68836_exprTokens);;
	if ((_69617_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_200ede838_Expr> _70017_index = _2031cc02e_buildFromTokens(_self_, _68913_tokens);;
	if ((_70017_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_200ee67da_IndexingExpr>(_200ee67da_IndexingExpr{._field_Token=_68935_errorToken, ._field_End=_69017_end, ._field_Expr=_69617_expr, ._field_Index=_70017_index});;
}



inline jule::Ptr<_200ee6de5_SlicingExpr> _2031cab32_buildSlicing(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _71236_exprTokens, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _71263_start, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _71314_to, jule::Ptr<_1ed694d8c_Token>* _71333_errorToken, jule::Ptr<_1ed694d8c_Token> _71357_end) {
	jule::Ptr<_200ee6de5_SlicingExpr> _71417_slc = jule::new_ptr<_200ee6de5_SlicingExpr>(_200ee6de5_SlicingExpr{._field_Token=(*(_71333_errorToken)), ._field_End=_71357_end, ._field_Expr=_2031cc02e_buildFromTokens(_self_, (*(_71236_exprTokens))), });;
	if (((*(_71263_start)).len() > 0LL)) {
		_71417_slc.get()._field_Start=_2031cc02e_buildFromTokens(_self_, (*(_71263_start)));
	};
	if (((*(_71314_to)).len() > 0LL)) {
		_71417_slc.get()._field_To=_2031cc02e_buildFromTokens(_self_, (*(_71314_to)));
	};
	return _71417_slc;;
}



inline jule::Any _2031cae40_buildBracketRange(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _72840_tokens) {
	jule::Ptr<_1ed694d8c_Token> _72917_errorToken = _72840_tokens[0LL];;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _73018_exprTokens;;
	jule::I32 _73030_rangeN = 0;;
	({
		__jule_tuple_sx_1ed694d8c_Token__jule_tuple_int __jule_assign_result = _2031cd5c4_getRangeExprTokens(&(_72840_tokens));
		_73018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73018_exprTokens.len() == 0LL)) {
		return jule::Any(_2031ca13c_buildSlice(_self_, _72840_tokens), &__jule_any_type99);;
	} else if ((_73030_rangeN > 0LL)) {
		_2031c2dd2_pushErr(_self_, _72917_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_72840_tokens=_72840_tokens.slice(_73018_exprTokens.len());
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _74517_splitTokens = _72840_tokens.slice(1LL, (_72840_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _74618_start;;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _74629_to;;
	({
		__jule_tuple_sx_1ed694d8c_Token__jule_tuple_sx_1ed694d8c_Token __jule_assign_result = _2031cccdd_splitDelim(&(_74517_splitTokens), static_cast<jule::U32>(10LLU));
		_74618_start = __jule_assign_result.__jule_result_arg0;
		_74629_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74618_start != nullptr) || (_74629_to != nullptr))) {
		return jule::Any(_2031cab32_buildSlicing(_self_, &(_73018_exprTokens), &(_74618_start), &(_74629_to), &(_72917_errorToken), _72840_tokens[(_72840_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_2031ca58d_buildIndexing(_self_, _73018_exprTokens, _72840_tokens, _72917_errorToken), &__jule_any_type107);;
}



inline jule::Any _2031cb24d_buildData(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _75333_tokens) {
	{
		auto _match_expr{ (*(_75333_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_205d54e29:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_205d54e90:;
			{
				return _2031c3e38_buildSingle(_self_, (*(_75333_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_205d5506c:;
			{
				if (((*(_75333_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(29LLU))) {
					return jule::Any(_2031c4246_buildBindIdent(_self_, _75333_tokens), &__jule_any_type85);;
				};
			}
		}
		_match_end_205d54a1c:;
	};
	jule::Ptr<_1ed694d8c_Token> _76517_token = (*(_75333_tokens))[((*(_75333_tokens)).len() - 1LL)];;
	if (((_76517_token.get()._field_Id == static_cast<jule::U32>(6LLU)) && _76517_token.get()._field_Kind.equal("...", 3))) {
		return jule::Any(_2031c5599_buildVariadic(_self_, (*(_75333_tokens))), &__jule_any_type81);;
	};
	_76517_token=(*(_75333_tokens))[0LL];
	{
		auto &_match_expr{ _76517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_205d57aec:;
			{
				if ((((*(_75333_tokens)).len() > 1LL) && _76517_token.get()._field_Kind.equal("*", 1))) {
					_76517_token=(*(_75333_tokens))[1LL];
					if ((_76517_token.get()._field_Id == static_cast<jule::U32>(33LLU))) {
						return jule::Any(_2031c4e7d_buildType(_self_, _75333_tokens), &__jule_any_type94);;
					};
				};
				return jule::Any(_2031c4554_buildUnary(_self_, (*(_75333_tokens))), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_205d57b74:;
			{
				if (((*(_75333_tokens)).len() < 3LL)) {
					goto _match_end_205d57a20;
				};
				if (((*(_75333_tokens)).len() > 3LL)) {
					jule::Ptr<_1ed694d8c_Token> _78721_t = (*(_75333_tokens))[((*(_75333_tokens)).len() - 1LL)];;
					if (((_78721_t.get()._field_Id == static_cast<jule::U32>(2LLU)) && _78721_t.get()._field_Kind.equal(")", 1))) {
						goto _match_end_205d57a20;
					};
				};
				jule::Ptr<_1ed694d8c_Token> _79317_next = (*(_75333_tokens))[1LL];;
				if (((_79317_next.get()._field_Id != static_cast<jule::U32>(2LLU)) || (!_79317_next.get()._field_Kind.equal("]", 1)))) {
					goto _match_end_205d57a20;
				};
				return jule::Any(_2031c4e7d_buildType(_self_, _75333_tokens), &__jule_any_type94);;
			}
		}
		_match_end_205d57a20:;
	};
	_76517_token=(*(_75333_tokens))[((*(_75333_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _76517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_205d580c5:;
			{
				return _2031c528b_buildSubIdent(_self_, _75333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_205d5813b:;
			{
				return _2031c58a7_buildOpRight(_self_, _75333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_205d5c7b1:;
			{
				{
					auto &_match_expr{ _76517_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_205d5da26:;
						{
							return _2031c7249_buildParenthesesRange(_self_, _75333_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_205d5da9d:;
						{
							return _2031c9a21_buildBraceRange(_self_, _75333_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_205d5db25:;
						{
							return _2031cae40_buildBracketRange(_self_, (*(_75333_tokens)));;
						}
					}
					_match_end_205d5d8c2:;
				};
			}
		}
		_match_end_205d5805e:;
	};
	if ((_76517_token.get()._field_Id == static_cast<jule::U32>(31LLU))) {
		return jule::Any(_2031c4e7d_buildType(_self_, _75333_tokens), &__jule_any_type94);;
	};
	_2031c2dd2_pushErr(_self_, _76517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _2031cb605_buildBinop(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _82634_tokens, jule::I32 _82652_i) {
	jule::Ptr<_1ed694d8c_Token> _82717_op = (*(_82634_tokens))[_82652_i];;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _82817_leftTokens = (*(_82634_tokens)).slice(0LL, _82652_i);;
	if ((_2031cc3c5_isTypeOp(&(_82717_op.get()._field_Kind)) && _2031cc6b1_isTypeRange(&(_82817_leftTokens)))) {
		return jule::Any(_2031c4e7d_buildType(_self_, _82634_tokens), &__jule_any_type94);;
	};
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _83317_rightTokens = (*(_82634_tokens)).slice((_82652_i + 1LL));;
	if ((_82817_leftTokens.len() == 0LL)) {
		_2031c2dd2_pushErr(_self_, (*(_82634_tokens))[_82652_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031c3201_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83317_rightTokens.len() == 0LL)) {
		_2031c2dd2_pushErr(_self_, (*(_82634_tokens))[_82652_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031c3201_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_200ee3144_BinopExpr>(_200ee3144_BinopExpr{._field_Left=_2031cc02e_buildFromTokens(_self_, _82817_leftTokens), ._field_Right=_2031cc02e_buildFromTokens(_self_, _83317_rightTokens), ._field_Op=_82717_op}), &__jule_any_type113);;
}



inline jule::Any _2031cb913_build(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _85129_tokens) {
	if (((*(_85129_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_2031c4e7d_buildType(_self_, _85129_tokens), &__jule_any_type94);;
	};
	jule::I32 _85513_i = _2031cd085_findLowestPrecOp(_85129_tokens);;
	if ((_85513_i == -1LL)) {
		return _2031cb24d_buildData(_self_, _85129_tokens);;
	};
	return _2031cb605_buildBinop(_self_, _85129_tokens, _85513_i);;
}



inline jule::Any _2031cbc21_buildKind(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _86233_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _86318_parts;;
	jule::Slice<_2193a460d_Log> _86325_errors;;
	({
		__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031d1594_parts(_86233_tokens, static_cast<jule::U32>(7LLU), true);
		_86318_parts = __jule_assign_result.__jule_result_arg0;
		_86325_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86325_errors != nullptr)) {
		((*(_self_))._field_p.get()._field_errors).append(_86325_errors);;
		return nullptr;;
	} else if ((_86318_parts.len() > 1LL)) {
		return jule::Any(_2031c350e_buildTuple(_self_, &(_86318_parts)), &__jule_any_type86);;
	};
	return _2031cb913_build(_self_, _86233_tokens);;
}



inline jule::Ptr<_200ede838_Expr> _2031cc02e_buildFromTokens(_2031c2651_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _87338_tokens) {
	if ((_87338_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87717_kind = _2031cbc21_buildKind(_self_, &(_87338_tokens));;
	if ((_87717_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_200ede838_Expr>(_200ede838_Expr{._field_Token=_87338_tokens[0LL], ._field_End=_87338_tokens[(_87338_tokens.len() - 1LL)], ._field_Kind=_87717_kind});;
}







std::ostream &operator<<(std::ostream &_Stream, _2031c2651_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2031cde87_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _2031d2b6c_stop(_2031d2881_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _2031d2dd1_stopped(_2031d2881_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _2031d3299_pushErr(_2031d2881_parser* _self_, jule::Ptr<_1ed694d8c_Token> _28326_token, jule::Str _28341_fmt, jule::Slice<jule::Any> _28354_args) {
	{ jule::Slice<_2193a460d_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_2031d1c26_compilerErr(&(_28326_token), &(_28341_fmt), _28354_args)); };
}



inline void _2031d35b8_pushSuggestion(_2031d2881_parser* _self_, jule::Str _28833_fmt, jule::Slice<jule::Any> _28846_args) {
	{
		_2031d2155_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _28833_fmt, _28846_args);
	};
}



inline jule::Ptr<_200ede838_Expr> _2031d38c6_buildExpr(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _29234_tokens) {
	return _2031cc02e_buildFromTokens(_self_.get()._field_ep.ptr(), (*(_29234_tokens)));;
}



inline jule::Ptr<_200d472d9_Directive> _2031d3bd4_buildDirective(_2031d2881_parser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _29637_tokens) {
	if ((_29637_tokens.len() == 1LL)) {
		_2031d3299_pushErr(_self_, _29637_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29637_tokens[1LL].get()._field_Column != (_29637_tokens[0LL].get()._field_Column + 1LL))) {
		_2031d3299_pushErr(_self_, _29637_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_200d472d9_Directive>(_200d472d9_Directive{._field_Tag=_29637_tokens[1LL], ._field_Args=_29637_tokens.slice(2LL)});;
}



inline void _2031d3e59_pushDirective(_2031d2881_parser* _self_, jule::Ptr<_200d472d9_Directive> _31136_d) {
	if ((_31136_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d8eb45:;
		if (it != expr_end) {
			jule::Ptr<_200d472d9_Directive> _31616_pd = *it;
			{
				if ((_31136_d.get()._field_Tag.get()._field_Kind == _31616_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_205d8eb45:;
			++it;
			goto _iter_begin_205d8eb45;
		}
		_iter_end_205d8eb45:;
	};
	{ jule::Slice<jule::Ptr<_200d472d9_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_31136_d); };
}



inline jule::Ptr<_200eea2e4_ScopeTree> _2031d4311_buildScope(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _32435_tokens, jule::Ptr<_1ed694d8c_Token> _32457_end) {
	jule::Ptr<_200eea2e4_ScopeTree> _32517_s = _2031b4742_newScope();;
	_32517_s.get()._field_End=_32457_end;
	_2031b616c_scopeParser _32717_sp = _2031b616c_scopeParser{._field_p=_self_, };;
	_2031c1bb1_build(&_32717_sp, _32435_tokens, &(_32517_s));
	return _32517_s;;
}



inline __jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool _2031d4762__buildType(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _33442_tokens, jule::I32* _33513_i, jule::Bool _33522_err) {
	__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_2031e35a6_typeBuilder _33617_tb = _2031e35a6_typeBuilder{._field_p=_self_, ._field_tokens=(*(_33442_tokens)), ._field_i=_33513_i, ._field_err=_33522_err};;
	jule::Ptr<_200eda6ad_TypeDecl> _34218_decl;;
	jule::Bool _34224_ok = false;;
	({
		__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031e6587_build(&_33617_tb);
		_34218_decl = __jule_assign_result.__jule_result_arg0;
		_34224_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34218_decl;
	__jule_func_result.__jule_result_arg1 = _34224_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool _2031d4bb3_buildType(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _34741_tokens, jule::I32* _34813_i, jule::Bool _34822_err) {
	__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ed694d8c_Token> _34913_token = (*(_34741_tokens))[(*(_34813_i))];;
	jule::Ptr<_200eda6ad_TypeDecl> _35018_t;;
	jule::Bool _35021_ok = false;;
	({
		__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4762__buildType(_self_, _34741_tokens, _34813_i, _34822_err);
		_35018_t = __jule_assign_result.__jule_result_arg0;
		_35021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_34822_err && (!(_35021_ok)))) {
		_2031d3299_pushErr(_self_.ptr(), _34913_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35018_t;
	__jule_func_result.__jule_result_arg1 = _35021_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_20100162a_TypeAliasDecl> _2031d4ec1_buildTypeAliasDecl(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _35743_tokens) {
	jule::I32 _35817_i = 1LL;;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_2031d3299_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20100162a_TypeAliasDecl> _36317_tad = jule::new_ptr<_20100162a_TypeAliasDecl>(_20100162a_TypeAliasDecl{._field_Token=(*(_35743_tokens))[1LL], ._field_Ident=(*(_35743_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_1ed694d8c_Token> _36717_token = (*(_35743_tokens))[_35817_i];;
	if ((_36717_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031d3299_pushErr(_self_.ptr(), _36717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_35817_i)++;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_2031d3299_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	_36717_token=(*(_35743_tokens))[_35817_i];
	if ((_36717_token.get()._field_Id != static_cast<jule::U32>(10LLU))) {
		_2031d3299_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	(_35817_i)++;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_2031d3299_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	jule::Ptr<_200eda6ad_TypeDecl> _38818_t;;
	jule::Bool _38821_ok = false;;
	({
		__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, _35743_tokens, (&(_35817_i)), true);
		_38818_t = __jule_assign_result.__jule_result_arg0;
		_38821_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36317_tad.get()._field_Kind=_38818_t;
	if ((_38821_ok && (_35817_i < (*(_35743_tokens)).len()))) {
		_2031d3299_pushErr(_self_.ptr(), (*(_35743_tokens))[_35817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_36317_tad.get()._field_Public=_2031e253e_isPub(&(_36317_tad.get()._field_Ident));
	return _36317_tad;;
}



inline void _2031d52e0_buildVarTypeAndExpr(jule::Ptr<_2031d2881_parser> _self_, jule::Ptr<_200eeccb9_VarDecl>* _39744_v, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _39762_tokens) {
	jule::I32 _39817_i = 0LL;;
	jule::Ptr<_1ed694d8c_Token> _39917_tok = (*(_39762_tokens))[_39817_i];;
	if ((_39917_tok.get()._field_Id == static_cast<jule::U32>(10LLU))) {
		(_39817_i)++;
		if (((_39817_i >= (*(_39762_tokens)).len()) || (((*(_39762_tokens))[_39817_i].get()._field_Id == static_cast<jule::U32>(6LLU)) && (*(_39762_tokens))[_39817_i].get()._field_Kind.equal("=", 1)))) {
			_2031d3299_pushErr(_self_.ptr(), _39917_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_200eda6ad_TypeDecl> _40722_t;;
		jule::Bool _40725_ok = false;;
		({
			__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, _39762_tokens, (&(_39817_i)), true);
			_40722_t = __jule_assign_result.__jule_result_arg0;
			_40725_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40725_ok) {
			(*(_39744_v)).get()._field_Kind=_40722_t;
			if ((_39817_i >= (*(_39762_tokens)).len())) {
				return;;
			};
			_39917_tok=(*(_39762_tokens))[_39817_i];
		};
	};
	if ((_39917_tok.get()._field_Id == static_cast<jule::U32>(6LLU))) {
		if ((!_39917_tok.get()._field_Kind.equal("=", 1))) {
			_2031d3299_pushErr(_self_.ptr(), _39917_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1ed694d8c_Token>> _42221_exprTokens = (*(_39762_tokens)).slice((_39817_i + 1LL));;
		if ((_42221_exprTokens.len() == 0LL)) {
			_2031d3299_pushErr(_self_.ptr(), _39917_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return;;
		};
		(*(_39744_v)).get()._field_Expr=_2031d38c6_buildExpr(_self_, &(_42221_exprTokens));
	} else {
		_2031d3299_pushErr(_self_.ptr(), _39917_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _2031d560e_buildVarCommon(jule::Ptr<_2031d2881_parser> _self_, jule::Ptr<_200eeccb9_VarDecl>* _43339_v, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _43356_tokens) {
	(*(_43339_v)).get()._field_Token=_43356_tokens[0LL];
	if (((*(_43339_v)).get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031d3299_pushErr(_self_.ptr(), (*(_43339_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_43339_v)).get()._field_Ident=(*(_43339_v)).get()._field_Token.get()._field_Kind;
	(*(_43339_v)).get()._field_Public=_2031e253e_isPub(&((*(_43339_v)).get()._field_Ident));
	(*(_43339_v)).get()._field_Kind=nullptr;
	if ((_43356_tokens.len() > 1LL)) {
		_43356_tokens=_43356_tokens.slice(1LL);
		_2031d52e0_buildVarTypeAndExpr(_self_, _43339_v, &(_43356_tokens));
	};
}



inline void _2031d59c7_buildVarBegin(_2031d2881_parser* _self_, jule::Ptr<_200eeccb9_VarDecl>* _44937_v, jule::I32* _44955_i, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _44964_tokens) {
	jule::Ptr<_1ed694d8c_Token> _45013_tok = (*(_44964_tokens))[(*(_44955_i))];;
	{
		auto &_match_expr{ _45013_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_205da6e15:;
			{
				(*(_44937_v)).get()._field_Statically=true;
				goto _case_begin_205da7ba2;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_205da7ba2:;
			{
				((*(_44955_i)))++;
				if (((*(_44955_i)) >= (*(_44964_tokens)).len())) {
					_2031d3299_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_44964_tokens))[(*(_44955_i))].get()._field_Id == static_cast<jule::U32>(34LLU))) {
					(*(_44937_v)).get()._field_Mutable=true;
					((*(_44955_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_205da7432:;
			{
				((*(_44955_i)))++;
				(*(_44937_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_205da7377:;
			{
				_2031d3299_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_205da7201:;
	};
	if (((*(_44955_i)) >= (*(_44964_tokens)).len())) {
		_2031d3299_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_200eeccb9_VarDecl> _2031d5cd5_buildVar(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _47932_tokens) {
	jule::I32 _48017_i = 0LL;;
	jule::Ptr<_200eeccb9_VarDecl> _48117_v = jule::new_ptr<_200eeccb9_VarDecl>(_200eeccb9_VarDecl{._field_Token=_47932_tokens[0LL], });;
	_2031d59c7_buildVarBegin(_self_.ptr(), &(_48117_v), &(_48017_i), &(_47932_tokens));
	if ((_48017_i >= _47932_tokens.len())) {
		return nullptr;;
	};
	_47932_tokens=_47932_tokens.slice(_48017_i);
	if (((_47932_tokens[0LL].get()._field_Id == static_cast<jule::U32>(6LLU)) && _47932_tokens[0LL].get()._field_Kind.equal("&", 1))) {
		_48117_v.get()._field_Reference=true;
		if ((_47932_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_47932_tokens=_47932_tokens.slice(1LL);
	};
	_2031d560e_buildVarCommon(_self_, &(_48117_v), _47932_tokens);
	return _48117_v;;
}



inline jule::Ptr<_200ee7654_GenericDecl> _2031d60e3_buildGeneric(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _50137_tokens) {
	jule::Ptr<_200ee7654_GenericDecl> _50217_g = jule::new_ptr<_200ee7654_GenericDecl>(_200ee7654_GenericDecl{._field_Token=(*(_50137_tokens))[0LL], });;
	if ((_50217_g.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031d3299_pushErr(_self_.ptr(), _50217_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_50217_g.get()._field_Ident=_50217_g.get()._field_Token.get()._field_Kind;
	if (((*(_50137_tokens)).len() > 1LL)) {
		if (((*(_50137_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(10LLU))) {
			_2031d3299_pushErr(_self_.ptr(), (*(_50137_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_50137_tokens)).len() == 2LL)) {
			_2031d3299_pushErr(_self_.ptr(), (*(_50137_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1ed694d8c_Token>> _51921_constraintTokens = (*(_50137_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _52022_parts;;
		jule::Slice<_2193a460d_Log> _52029_errors;;
		({
			__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031d11a9_partsKind(&(_51921_constraintTokens), jule::Str("|", 1), true);
			_52022_parts = __jule_assign_result.__jule_result_arg0;
			_52029_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52029_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_52029_errors);;
			return nullptr;;
		};
		_50217_g.get()._field_Constraint=jule::new_ptr<_200ee71d1_Constraint>(_200ee71d1_Constraint{._field_Mask=jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>::alloc(0LL, _52022_parts.len())});
		{
			auto expr = &(_52022_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205db29d1:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1ed694d8c_Token>> _52625_part = *it;
				{
					jule::I32 _52725_i = 0LL;;
					jule::Ptr<_200eda6ad_TypeDecl> _52826_kind;;
					({
						__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, &(_52625_part), (&(_52725_i)), true);
						_52826_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> &__jule_push_dest = _50217_g.get()._field_Constraint.get()._field_Mask; __jule_push_dest.push(_52826_kind); };
					if ((_52725_i < _52625_part.len())) {
						_2031d3299_pushErr(_self_.ptr(), _52625_part[_52725_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_205db29d1:;
				++it;
				goto _iter_begin_205db29d1;
			}
			_iter_end_205db29d1:;
		};
	};
	return _50217_g;;
}



inline jule::Slice<jule::Ptr<_200ee7654_GenericDecl>> _2031d649a_buildGenerics(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _53838_tokens, jule::Ptr<_1ed694d8c_Token>* _53857_errorToken) {
	if (((*(_53838_tokens)).len() == 0LL)) {
		_2031d3299_pushErr(_self_.ptr(), (*(_53857_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _54418_parts;;
	jule::Slice<_2193a460d_Log> _54425_errors;;
	({
		__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031d1594_parts(_53838_tokens, static_cast<jule::U32>(7LLU), true);
		_54418_parts = __jule_assign_result.__jule_result_arg0;
		_54425_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54425_errors.len() > 0LL)) {
		(_self_.get()._field_errors).append(_54425_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_200ee7654_GenericDecl>> _55017_generics = jule::Slice<jule::Ptr<_200ee7654_GenericDecl>>::alloc(0LL, _54418_parts.len());;
	{
		auto expr = &(_54418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205db7420:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _55121_part = *it;
			{
				{ jule::Slice<jule::Ptr<_200ee7654_GenericDecl>> &__jule_push_dest = _55017_generics; __jule_push_dest.push(_2031d60e3_buildGeneric(_self_, &(_55121_part))); };
			}
			_iter_next_205db7420:;
			++it;
			goto _iter_begin_205db7420;
		}
		_iter_end_205db7420:;
	};
	return _55017_generics;;
}



inline jule::Ptr<_200eea9ba_ParamDecl> _2031d67a8_buildSelfParam(_2031d2881_parser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _55837_tokens) {
	if ((_55837_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_200eea9ba_ParamDecl> _56317_param = jule::new_ptr<_200eea9ba_ParamDecl>();;
	jule::I32 _56617_i = 0LL;;
	if ((_55837_tokens[_56617_i].get()._field_Id == static_cast<jule::U32>(34LLU))) {
		_56317_param.get()._field_Mutable=true;
		(_56617_i)++;
		if ((_56617_i >= _55837_tokens.len())) {
			_2031d3299_pushErr(_self_, _55837_tokens[(_56617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (_55837_tokens[_56617_i].get()._field_Kind.equal("&", 1)) {
		_56317_param.get()._field_Ident=jule::Str("&", 1);
		(_56617_i)++;
		if ((_56617_i >= _55837_tokens.len())) {
			_2031d3299_pushErr(_self_, _55837_tokens[(_56617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_55837_tokens[_56617_i].get()._field_Id == static_cast<jule::U32>(26LLU))) {
		(_56317_param.get()._field_Ident).append("self", 4);
		_56317_param.get()._field_Token=_55837_tokens[_56617_i];
		(_56617_i)++;
		if ((_56617_i < _55837_tokens.len())) {
			_2031d3299_pushErr(_self_, _55837_tokens[_56617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _56317_param;;
}



inline void _2031d6b71_paramTypeBegin(_2031d2881_parser* _self_, jule::Ptr<_200eea9ba_ParamDecl>* _59738_param, jule::I32* _59762_i, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _59771_tokens) {
	for (; ((*(_59762_i)) < (*(_59771_tokens)).len()); ((*(_59762_i)))++) {
		{
			jule::Ptr<_1ed694d8c_Token> _59917_token = (*(_59771_tokens))[(*(_59762_i))];;
			if ((_59917_token.get()._field_Id != static_cast<jule::U32>(6LLU))) {
				return;;
			} else if ((!_59917_token.get()._field_Kind.equal("...", 3))) {
				return;;
			};
			if ((*(_59738_param)).get()._field_Variadic) {
				_2031d3299_pushErr(_self_, _59917_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_205dbda0e;
			};
			(*(_59738_param)).get()._field_Variadic=true;
		}
	_iter_next_205dbda0e:;
	}
	_iter_end_205dbda0e:;;
}



inline void _2031d6e90_buildParamType(jule::Ptr<_2031d2881_parser> _self_, jule::Ptr<_200eea9ba_ParamDecl>* _61439_param, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _61463_tokens) {
	jule::I32 _61517_i = 0LL;;
	_2031d6b71_paramTypeBegin(_self_.ptr(), _61439_param, &(_61517_i), _61463_tokens);
	if ((_61517_i >= (*(_61463_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, _61463_tokens, (&(_61517_i)), true);
		(*(_61439_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61517_i < (*(_61463_tokens)).len())) {
		_2031d3299_pushErr(_self_.ptr(), (*(_61463_tokens))[_61517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _2031d72ae_buildParamBody(jule::Ptr<_2031d2881_parser> _self_, jule::Ptr<_200eea9ba_ParamDecl>* _62739_param, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _62762_tokens) {
	jule::Ptr<_1ed694d8c_Token> _62817_tok = _62762_tokens[0LL];;
	if ((_62762_tokens.len() == 1LL)) {
		(*(_62739_param)).get()._field_Ident=_62817_tok.get()._field_Kind;
		return;;
	} else if ((_62762_tokens.len() < 3LL)) {
		_2031d3299_pushErr(_self_.ptr(), _62817_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_62762_tokens[1LL].get()._field_Id != static_cast<jule::U32>(10LLU))) {
		(*(_62739_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_2031d6e90_buildParamType(_self_, _62739_param, &(_62762_tokens));
		return;;
	};
	(*(_62739_param)).get()._field_Ident=_62817_tok.get()._field_Kind;
	_62762_tokens=_62762_tokens.slice(2LL);
	_2031d6e90_buildParamType(_self_, _62739_param, &(_62762_tokens));
}



inline jule::Ptr<_200eea9ba_ParamDecl> _2031d75bc_buildParam(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _64734_tokens) {
	jule::Ptr<_200eea9ba_ParamDecl> _64817_param = jule::new_ptr<_200eea9ba_ParamDecl>(_200eea9ba_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_2031d3299_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U32>(6LLU)) && _64817_param.get()._field_Token.get()._field_Kind.equal("&", 1))) {
			if ((_64734_tokens.len() == 1LL)) {
				_2031d3299_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U32>(1LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U32>(10LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_2031d6e90_buildParamType(_self_, &(_64817_param), &(_64734_tokens));
	} else {
		_2031d72ae_buildParamBody(_self_, &(_64817_param), _64734_tokens);
	};
	return _64817_param;;
}



inline void _2031d7842_checkParams(_2031d2881_parser* _self_, jule::Slice<jule::Ptr<_200eea9ba_ParamDecl>>* _69035_params) {
	{
		auto expr = _69035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205dcb478:;
		if (it != expr_end) {
			jule::Ptr<_200eea9ba_ParamDecl> _69121_param = *it;
			{
				if ((_200eead2d_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_205dcb478;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_2031d3299_pushErr(_self_, _69121_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_200edac74_IdentTypeDecl>(_200edac74_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type20)});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_205dcb478:;
			++it;
			goto _iter_begin_205dcb478;
		}
		_iter_end_205dcb478:;
	};
}



inline jule::Slice<jule::Ptr<_200eea9ba_ParamDecl>> _2031d7be9_buildParams(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _71118_parts;;
	jule::Slice<_2193a460d_Log> _71125_errs;;
	({
		__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031d1594_parts(_71036_tokens, static_cast<jule::U32>(7LLU), true);
		_71118_parts = __jule_assign_result.__jule_result_arg0;
		_71125_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_71125_errs);;
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_200eea9ba_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_200eea9ba_ParamDecl> _71921_param = _2031d67a8_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _200eead2d_IsSelf(_71921_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_200eea9ba_ParamDecl>> &__jule_push_dest = _71717_params; __jule_push_dest.push(_71921_param); };
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_71118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205dd0823:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _72621_part = *it;
			{
				jule::Ptr<_200eea9ba_ParamDecl> _72721_param = _2031d75bc_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_200eea9ba_ParamDecl>> &__jule_push_dest = _71717_params; __jule_push_dest.push(_72721_param); };
				};
			}
			_iter_next_205dd0823:;
			++it;
			goto _iter_begin_205dd0823;
		}
		_iter_end_205dd0823:;
	};
	_2031d7842_checkParams(_self_.ptr(), &(_71717_params));
	return _71717_params;;
}



inline __jule_tuple_x_200edd42a_RetTypeDecl__jule_tuple_bool _2031d80a1_buildMultiRetType(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _73742_tokens, jule::I32* _73765_i) {
	__jule_tuple_x_200edd42a_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_200edd42a_RetTypeDecl>();
	((*(_73765_i)))++;
	if (((*(_73765_i)) >= (*(_73742_tokens)).len())) {
		((*(_73765_i)))--;
		({
			__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, _73742_tokens, (&((*(_73765_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_73765_i)))--;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _74717_rangeTokens = _2031d0a27_range(_73765_i, jule::Str("(", 1), jule::Str(")", 1), _73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _74918_parts;;
	jule::Slice<_2193a460d_Log> _74925_errs;;
	({
		__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031d1594_parts(&(_74717_rangeTokens), static_cast<jule::U32>(7LLU), true);
		_74918_parts = __jule_assign_result.__jule_result_arg0;
		_74925_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_74925_errs);;
	if ((_74918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_1ed694d8c_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto expr = &(_74918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205dd6928:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _75721_part = *it;
			{
				jule::Ptr<_1ed694d8c_Token> _75821_token = _75721_part[0LL];;
				jule::I32 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U32>(10LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_2031d3299_pushErr(_self_.ptr(), _75821_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_205dd6928;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_1ed694d8c_Token> _77525_newToken = jule::new_ptr<_1ed694d8c_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_1ed694d8c_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_77525_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_1ed694d8c_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_75821_token); };
				};
				jule::Ptr<_200eda6ad_TypeDecl> _78222_tk;;
				({
					__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, &(_75721_part), (&(_75921_offset)), true);
					_78222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_75921_offset < _75721_part.len())) {
					_2031d3299_pushErr(_self_.ptr(), _75721_part[_75921_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> &__jule_push_dest = _75517_types; __jule_push_dest.push(_78222_tk); };
			}
			_iter_next_205dd6928:;
			++it;
			goto _iter_begin_205dd6928;
		}
		_iter_end_205dd6928:;
	};
	if ((_75517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=(*(_73742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_200edbda7_TupleTypeDecl>(_200edbda7_TupleTypeDecl{._field_Types=_75517_types}), &__jule_any_type80)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_200edd42a_RetTypeDecl__jule_tuple_bool _2031d8458_buildRetType(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _80537_tokens, jule::I32* _80560_i) {
	__jule_tuple_x_200edd42a_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_200edd42a_RetTypeDecl>();
	if (((*(_80560_i)) >= (*(_80537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ed694d8c_Token> _81117_token = (*(_80537_tokens))[(*(_80560_i))];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_205dde788:;
			{
				if (_81117_token.get()._field_Kind.equal("{", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_205dde7ee:;
			{
				if (_81117_token.get()._field_Kind.equal("=", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_205dde865:;
			{
				if ((((*(_80560_i)) + 1LL) >= (*(_80537_tokens)).len())) {
					_2031d3299_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_80560_i)))++;
				_81117_token=(*(_80537_tokens))[(*(_80560_i))];
				if ((_81117_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_205de2093:;
							{
								({
									__jule_tuple_x_200edd42a_RetTypeDecl__jule_tuple_bool __jule_assign_result = _2031d80a1_buildMultiRetType(_self_, _80537_tokens, _80560_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_205de2109:;
							{
								_2031d3299_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_205de1d95:;
					};
				};
				({
					__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, _80537_tokens, (&((*(_80560_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_205dde722:;
	};
	((*(_80560_i)))++;
	_2031d3299_pushErr(_self_.ptr(), _81117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_200eebcda_FnDecl> _2031d88a9_buildFnPrototype(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _85041_tokens, jule::I32* _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_200eebcda_FnDecl> _85117_f = jule::new_ptr<_200eebcda_FnDecl>(_200eebcda_FnDecl{._field_Token=(*(_85041_tokens))[(*(_85064_i))], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U32>(36LLU))) {
		_85117_f.get()._field_Statically=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_2031d3299_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U32>(33LLU))) {
		_85117_f.get()._field_Unsafety=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_2031d3299_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	((*(_85064_i)))++;
	if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
		_2031d3299_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ed694d8c_Token> _88413_tok = (*(_85041_tokens))[(*(_85064_i))];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_2031d3299_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1ed694d8c_Token> _89613_errorToken = (*(_85041_tokens))[(*(_85064_i))];;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _89717_genericsTokens = _2031d0a27_range(_85064_i, jule::Str("[", 1), jule::Str("]", 1), _85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_2031d649a_buildGenerics(_self_, &(_89717_genericsTokens), &(_89613_errorToken));
	};
	if ((!(*(_85041_tokens))[(*(_85064_i))].get()._field_Kind.equal("(", 1))) {
		_2031d3299_pushErr(_self_.ptr(), (*(_85041_tokens))[(*(_85064_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _90717_paramsToks = _2031d0a27_range(_85064_i, jule::Str("(", 1), jule::Str(")", 1), _85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_2031d7be9_buildParams(_self_, &(_90717_paramsToks), _85072_method);
	};
	if (((*(_85064_i)) < (*(_85041_tokens)).len())) {
		jule::Ptr<_1ed694d8c_Token> _91317_token = (*(_85041_tokens))[(*(_85064_i))];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U32>(6LLU)) && _91317_token.get()._field_Kind.equal("!", 1))) {
			_85117_f.get()._field_Exceptional=true;
			((*(_85064_i)))++;
		};
	};
	_85117_f.get()._field_Public=_2031e253e_isPub(&(_85117_f.get()._field_Ident));
	({
		__jule_tuple_x_200edd42a_RetTypeDecl__jule_tuple_bool __jule_assign_result = _2031d8458_buildRetType(_self_, _85041_tokens, _85064_i);
		_85117_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85117_f;;
}



inline jule::Ptr<_200eebcda_FnDecl> _2031d8d0a_buildFn(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I32 _92817_i = 0LL;;
	jule::Ptr<_200eebcda_FnDecl> _92917_f = _2031d88a9_buildFnPrototype(_self_, _92732_tokens, &(_92817_i), _92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_2031d3299_pushErr(_self_.ptr(), (*(_92732_tokens))[(_92817_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _92917_f;;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;;
	};
	if ((_92817_i >= (*(_92732_tokens)).len())) {
		_2031d2b6c_stop(_self_.ptr());
		_2031d3299_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _94517_blockTokens = _2031d0a27_range(&(_92817_i), jule::Str("{", 1), jule::Str("}", 1), _92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_2031d4311_buildScope(_self_, &(_94517_blockTokens), (*(_92732_tokens))[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_2031d3299_pushErr(_self_.ptr(), (*(_92732_tokens))[_92817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_2031d2b6c_stop(_self_.ptr());
		_2031d3299_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _92917_f;;
}



inline jule::Slice<jule::Ptr<_1ed694d8c_Token>> _2031d9118_getUseDeclSelectors(_2031d2881_parser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _96142_tokens) {
	jule::I32 _96217_i = 0LL;;
	_96142_tokens=_2031d0a27_range(&(_96217_i), jule::Str("{", 1), jule::Str("}", 1), &(_96142_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _96418_parts;;
	jule::Slice<_2193a460d_Log> _96425_errs;;
	({
		__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031d1594_parts(&(_96142_tokens), static_cast<jule::U32>(7LLU), true);
		_96418_parts = __jule_assign_result.__jule_result_arg0;
		_96425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96425_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_96425_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _97017_selectors = jule::Slice<jule::Ptr<_1ed694d8c_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto expr = &(_96418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205e05dcb:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_2031d3299_pushErr(_self_, _97121_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ed694d8c_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U32>(1LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U32>(26LLU)))) {
					_2031d3299_pushErr(_self_, _97521_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_2031d35b8_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_205e05dcb;
				};
				{ jule::Slice<jule::Ptr<_1ed694d8c_Token>> &__jule_push_dest = _97017_selectors; __jule_push_dest.push(_97521_tok); };
			}
			_iter_next_205e05dcb:;
			++it;
			goto _iter_begin_205e05dcb;
		}
		_iter_end_205e05dcb:;
	};
	return _97017_selectors;;
}



inline void _2031d9437_buildBindUseDecl(_2031d2881_parser* _self_, jule::Ptr<_201002a16_UseDecl>* _98640_decl, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _98657_tokens) {
	if (((*(_98657_tokens)).len() > 1LL)) {
		_2031d3299_pushErr(_self_, (*(_98657_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ed694d8c_Token> _99013_token = (*(_98657_tokens))[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U32>(5LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_2031d3299_pushErr(_self_, _99013_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_98640_decl)).get()._field_Binded=true;
	(*(_98640_decl)).get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL, (_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _2031d9756_buildStdUseDecl(_2031d2881_parser* _self_, jule::Ptr<_201002a16_UseDecl>* _99939_decl, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _99959_tokens) {
	(*(_99939_decl)).get()._field_Std=true;
	jule::Ptr<_1ed694d8c_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_2031d3299_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_205e0db92:;
			{
				_2031d3299_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_205e0dc19:;
			{
				if ((!_100217_token.get()._field_Kind.equal("}", 1))) {
					_2031d3299_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1ed694d8c_Token>> _101921_selectors = nullptr;;
				({
					__jule_tuple_sx_1ed694d8c_Token__jule_tuple_sx_1ed694d8c_Token __jule_assign_result = _2031d0cbe_rangeLast(&(_99959_tokens));
					_99959_tokens = __jule_assign_result.__jule_result_arg0;
					_101921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_99939_decl)).get()._field_Selected=_2031d9118_getUseDeclSelectors(_self_, _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_2031d3299_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U32>(21LLU))) {
					_2031d3299_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_2031d3299_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_205e0dc91:;
			{
				if ((!_100217_token.get()._field_Kind.equal("*", 1))) {
					_2031d3299_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_2031d3299_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U32>(21LLU))) {
					_2031d3299_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_2031d3299_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_99939_decl)).get()._field_Full=true;
			}
		}
		_match_end_205e0db1a:;
	};
	(*(_99939_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _2031d23ec_tokstoa(&(_99959_tokens)));
}



inline void _2031d9a75_buildIdentUseDecl(_2031d2881_parser* _self_, jule::Ptr<_201002a16_UseDecl>* _106141_decl, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _106161_tokens) {
	(*(_106141_decl)).get()._field_Std=false;
	jule::Ptr<_1ed694d8c_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_205e1741a:;
			{
				_2031d3299_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_205e17948:;
			{
				if ((!_106417_token.get()._field_Kind.equal("}", 1))) {
					_2031d3299_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1ed694d8c_Token>> _107521_selectors = nullptr;;
				({
					__jule_tuple_sx_1ed694d8c_Token__jule_tuple_sx_1ed694d8c_Token __jule_assign_result = _2031d0cbe_rangeLast(&(_106161_tokens));
					_106161_tokens = __jule_assign_result.__jule_result_arg0;
					_107521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_106141_decl)).get()._field_Selected=_2031d9118_getUseDeclSelectors(_self_, _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_2031d3299_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U32>(21LLU))) {
					_2031d3299_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_2031d3299_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_205e17ae1:;
			{
				if ((!_106417_token.get()._field_Kind.equal("*", 1))) {
					_2031d3299_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_2031d3299_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U32>(21LLU))) {
					_2031d3299_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_2031d3299_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_106141_decl)).get()._field_Full=true;
			}
		}
		_match_end_205e178e3:;
	};
	(*(_106141_decl)).get()._field_LinkPath=_2031d23ec_tokstoa(&(_106161_tokens));
}



inline void _2031d9d94_parseUseDecl(_2031d2881_parser* _self_, jule::Ptr<_201002a16_UseDecl>* _112436_decl, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _112456_tokens) {
	if ((*(_112436_decl)).get()._field_Binded) {
		_2031d9437_buildBindUseDecl(_self_, _112436_decl, &(_112456_tokens));
		return;;
	};
	jule::Ptr<_1ed694d8c_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031d3299_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U32>(11LLU)))) {
		(*(_112436_decl)).get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U32>(1LLU))) {
			_2031d3299_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_2031d35b8_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if (_113017_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_205e22c94:;
			{
				_2031d9756_buildStdUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		else {
			_case_begin_205e2469c:;
			{
				_2031d9a75_buildIdentUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		_match_end_205e24636:;
	};
}



inline jule::Ptr<_201002a16_UseDecl> _2031da24b_buildUseDecl(_2031d2881_parser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _115835_tokens, jule::Bool _115853_binded) {
	jule::Ptr<_201002a16_UseDecl> _115917_decl = jule::new_ptr<_201002a16_UseDecl>(_201002a16_UseDecl{._field_Token=_115835_tokens[0LL], ._field_Binded=_115853_binded, });;
	if ((_115835_tokens.len() < 2LL)) {
		_2031d3299_pushErr(_self_, _115917_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_2031d9d94_parseUseDecl(_self_, &(_115917_decl), _115835_tokens);
	return _115917_decl;;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031da603_buildTypeEnumItemKind(jule::Ptr<_2031d2881_parser> _self_, jule::I32* _117246_i, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _117259_tokens) {
	jule::I32 _117317_braceN = 0LL;;
	jule::I32 _117413_exprStart = (*(_117246_i));;
	for (; ((*(_117246_i)) < (*(_117259_tokens)).len()); ((*(_117246_i)))++) {
		{
			jule::Ptr<_1ed694d8c_Token> _117617_t = (*(_117259_tokens))[(*(_117246_i))];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U32>(2LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_205e28481:;
						{
							(_117317_braceN)++;
							goto _iter_next_205e27caa;
						}
					}
					else {
						_case_begin_205e28d44:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_205e28b35:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_205e27caa;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U32>(7LLU)) || (((*(_117246_i)) + 1LL) >= (*(_117259_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ed694d8c_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U32>(7LLU))) {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart, (*(_117246_i)));
				} else {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart);
				};
				jule::I32 _119825_j = 0LL;;
				jule::Ptr<_200eda6ad_TypeDecl> _119926_kind;;
				({
					__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, &(_119225_kindTokens), (&(_119825_j)), true);
					_119926_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_119825_j < _119225_kindTokens.len())) {
					_2031d3299_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _119926_kind;;
			};
		}
	_iter_next_205e27caa:;
	}
	_iter_end_205e27caa:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_201004287_TypeEnumItemDecl>> _2031da911_buildTypeEnumItems(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _120943_tokens) {
	jule::Slice<jule::Ptr<_201004287_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_201004287_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _121117_i = 0LL;;
	for (; (_121117_i < (*(_120943_tokens)).len()); (_121117_i)++) {
		{
			jule::Ptr<_1ed694d8c_Token> _121321_t = (*(_120943_tokens))[_121117_i];;
			jule::Ptr<_201004287_TypeEnumItemDecl> _121421_item = jule::new_ptr<_201004287_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_120943_tokens)).len() - _121117_i) > 2LL))) {
				_121321_t=(*(_120943_tokens))[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U32>(10LLU))) {
					_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
					_121117_i+=2LL;
					if (((_121117_i >= (*(_120943_tokens)).len()) || ((*(_120943_tokens))[_121117_i].get()._field_Id == static_cast<jule::U32>(7LLU)))) {
						_2031d3299_pushErr(_self_.ptr(), _121321_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_205e2d4ca;
					};
				};
			};
			_121421_item.get()._field_Kind=_2031da603_buildTypeEnumItemKind(_self_, &(_121117_i), _120943_tokens);
			{ jule::Slice<jule::Ptr<_201004287_TypeEnumItemDecl>> &__jule_push_dest = _121017_items; __jule_push_dest.push(_121421_item); };
		}
	_iter_next_205e2d4ca:;
	}
	_iter_end_205e2d4ca:;;
	return _121017_items;;
}



inline jule::Ptr<_201004892_TypeEnumDecl> _2031dac1e_buildTypeEnumDecl(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _123342_tokens) {
	jule::I32 _123417_i = 1LL;;
	jule::Ptr<_201004892_TypeEnumDecl> _123517_e = jule::new_ptr<_201004892_TypeEnumDecl>(_201004892_TypeEnumDecl{._field_Token=(*(_123342_tokens))[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031d3299_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _124517_itemTokens = _2031d0a27_range(&(_123417_i), jule::Str("{", 1), jule::Str("}", 1), _123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_2031d2b6c_stop(_self_.ptr());
		_2031d3299_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _123517_e;;
	} else if ((_123417_i < (*(_123342_tokens)).len())) {
		_2031d3299_pushErr(_self_.ptr(), (*(_123342_tokens))[_123417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_2031e253e_isPub(&(_123517_e.get()._field_Ident));
	_123517_e.get()._field_End=(*(_123342_tokens))[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_2031da911_buildTypeEnumItems(_self_, &(_124517_itemTokens));
	return _123517_e;;
}



inline jule::Ptr<_200ede838_Expr> _2031db0c6_buildEnumItemExpr(jule::Ptr<_2031d2881_parser> _self_, jule::I32* _126042_i, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _126055_tokens) {
	jule::I32 _126117_braceN = 0LL;;
	jule::I32 _126213_exprStart = (*(_126042_i));;
	for (; ((*(_126042_i)) < (*(_126055_tokens)).len()); ((*(_126042_i)))++) {
		{
			jule::Ptr<_1ed694d8c_Token> _126417_t = (*(_126055_tokens))[(*(_126042_i))];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U32>(2LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_205e381b6:;
						{
							(_126117_braceN)++;
							goto _iter_next_205e379e0;
						}
					}
					else {
						_case_begin_205e38a79:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_205e3886a:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_205e379e0;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U32>(7LLU)) || (((*(_126042_i)) + 1LL) >= (*(_126055_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ed694d8c_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U32>(7LLU))) {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart, (*(_126042_i)));
				} else {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart);
				};
				return _2031d38c6_buildExpr(_self_, &(_128025_exprTokens));;
			};
		}
	_iter_next_205e379e0:;
	}
	_iter_end_205e379e0:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_201002e89_EnumItemDecl>> _2031db3d4_buildEnumItems(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _129239_tokens) {
	jule::Slice<jule::Ptr<_201002e89_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_201002e89_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _129417_i = 0LL;;
	for (; (_129417_i < (*(_129239_tokens)).len()); (_129417_i)++) {
		{
			jule::Ptr<_1ed694d8c_Token> _129621_t = (*(_129239_tokens))[_129417_i];;
			jule::Ptr<_201002e89_EnumItemDecl> _129721_item = jule::new_ptr<_201002e89_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
				_2031d3299_pushErr(_self_.ptr(), _129721_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U32>(7LLU)))) {
				if (((_129417_i + 1LL) < (*(_129239_tokens)).len())) {
					(_129417_i)++;
				};
				{ jule::Slice<jule::Ptr<_201002e89_EnumItemDecl>> &__jule_push_dest = _129317_items; __jule_push_dest.push(_129721_item); };
				goto _iter_next_205e3c077;
			};
			(_129417_i)++;
			_129621_t=(*(_129239_tokens))[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U32>(10LLU))) {
				_2031d3299_pushErr(_self_.ptr(), _129621_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_205e3c077;
			};
			if (((_129417_i >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[_129417_i].get()._field_Id == static_cast<jule::U32>(7LLU)))) {
				_2031d3299_pushErr(_self_.ptr(), _129621_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_205e3c077;
			};
			_129721_item.get()._field_Expr=_2031db0c6_buildEnumItemExpr(_self_, &(_129417_i), _129239_tokens);
			{ jule::Slice<jule::Ptr<_201002e89_EnumItemDecl>> &__jule_push_dest = _129317_items; __jule_push_dest.push(_129721_item); };
		}
	_iter_next_205e3c077:;
	}
	_iter_end_205e3c077:;;
	return _129317_items;;
}



inline jule::Ptr<_2010039b2_EnumDecl> _2031db6e2_buildEnumDecl(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _132938_tokens) {
	if (((*(_132938_tokens)).len() < 3LL)) {
		_2031d3299_pushErr(_self_.ptr(), (*(_132938_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2010039b2_EnumDecl> _133417_e = jule::new_ptr<_2010039b2_EnumDecl>(_2010039b2_EnumDecl{._field_Token=(*(_132938_tokens))[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031d3299_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I32 _134217_i = 2LL;;
	if (((*(_132938_tokens))[_134217_i].get()._field_Id == static_cast<jule::U32>(10LLU))) {
		(_134217_i)++;
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_2031d3299_pushErr(_self_.ptr(), (*(_132938_tokens))[(_134217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _133417_e;;
		};
		({
			__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, _132938_tokens, (&(_134217_i)), true);
			_133417_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_2031d2b6c_stop(_self_.ptr());
			_2031d3299_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _133417_e;;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _135917_itemTokens = _2031d0a27_range(&(_134217_i), jule::Str("{", 1), jule::Str("}", 1), _132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_2031d2b6c_stop(_self_.ptr());
		_2031d3299_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _133417_e;;
	} else if ((_134217_i < (*(_132938_tokens)).len())) {
		_2031d3299_pushErr(_self_.ptr(), (*(_132938_tokens))[_134217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_2031e253e_isPub(&(_133417_e.get()._field_Ident));
	_133417_e.get()._field_End=(*(_132938_tokens))[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_2031db3d4_buildEnumItems(_self_, &(_135917_itemTokens));
	return _133417_e;;
}



inline jule::Any _2031dba00_buildNodeEnumDecl(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _137442_tokens) {
	if ((((*(_137442_tokens)).len() > 3LL) && ((*(_137442_tokens))[2LL].get()._field_Id == static_cast<jule::U32>(10LLU)))) {
		if (((*(_137442_tokens))[3LL].get()._field_Id == static_cast<jule::U32>(9LLU))) {
			return jule::Any(_2031dac1e_buildTypeEnumDecl(_self_, _137442_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_2031db6e2_buildEnumDecl(_self_, _137442_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_201004b06_FieldDecl> _2031dbd0d_buildField(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _138334_tokens) {
	jule::Ptr<_201004b06_FieldDecl> _138417_f = jule::new_ptr<_201004b06_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U32>(34LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_2031d3299_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031d3299_pushErr(_self_.ptr(), _138417_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_2031d3299_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U32>(10LLU))) {
		_2031d3299_pushErr(_self_.ptr(), _138334_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I32 _141217_i = 0LL;;
	({
		__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, &(_138334_tokens), (&(_141217_i)), true);
		_138417_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_1ed694d8c_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U32>(6LLU)) || (!_141517_token.get()._field_Kind.equal("=", 1)))) {
			_2031d3299_pushErr(_self_.ptr(), _138334_tokens[_141217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_2031d3299_pushErr(_self_.ptr(), _141517_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_2031d38c6_buildExpr(_self_, &(_138334_tokens));
	};
	_138417_f.get()._field_Public=_2031e253e_isPub(&(_138417_f.get()._field_Ident));
	return _138417_f;;
}



inline jule::Slice<jule::Ptr<_201004b06_FieldDecl>> _2031dc11b_buildStructDeclFields(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_201004b06_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_2031b5842_stmt>> _143417_stmts = _2031b5bd8_splitStmts(&(_143245_tokens));;
	{
		auto expr = &(_143417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205e5abde:;
		if (it != expr_end) {
			jule::Ptr<_2031b5842_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_201004b06_FieldDecl> _143721_f = _2031dbd0d_buildField(_self_, _143245_tokens);;
				{ jule::Slice<jule::Ptr<_201004b06_FieldDecl>> &__jule_push_dest = _143317_fields; __jule_push_dest.push(_143721_f); };
			}
			_iter_next_205e5abde:;
			++it;
			goto _iter_begin_205e5abde;
		}
		_iter_end_205e5abde:;
	};
	return _143317_fields;;
}



inline jule::Ptr<_201005453_StructDecl> _2031dc429_buildStructDecl(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _144340_tokens) {
	if (((*(_144340_tokens)).len() < 3LL)) {
		_2031d3299_pushErr(_self_.ptr(), (*(_144340_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _144917_i = 1LL;;
	jule::Ptr<_201005453_StructDecl> _145017_s = jule::new_ptr<_201005453_StructDecl>(_201005453_StructDecl{._field_Token=(*(_144340_tokens))[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031d3299_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_2031d3299_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1ed694d8c_Token> _146413_errorToken = (*(_144340_tokens))[_144917_i];;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _146517_genericsTokens = _2031d0a27_range(&(_144917_i), jule::Str("[", 1), jule::Str("]", 1), _144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_2031d649a_buildGenerics(_self_, &(_146517_genericsTokens), &(_146413_errorToken));
	};
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_2031d3299_pushErr(_self_.ptr(), (*(_144340_tokens))[(_144917_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _147517_bodyTokens = _2031d0a27_range(&(_144917_i), jule::Str("{", 1), jule::Str("}", 1), _144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_2031d2b6c_stop(_self_.ptr());
		_2031d3299_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	if ((_144917_i < (*(_144340_tokens)).len())) {
		_2031d3299_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_2031e253e_isPub(&(_145017_s.get()._field_Ident));
	_145017_s.get()._field_Fields=_2031dc11b_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=(*(_144340_tokens))[(_144917_i - 1LL)];
	return _145017_s;;
}



inline void _2031dc69e_checkMethodReceiver(_2031d2881_parser* _self_, jule::Ptr<_200eebcda_FnDecl>* _149139_f) {
	if ((*(_149139_f)).get()._field_Statically) {
		if ((((*(_149139_f)).get()._field_Params.len() > 0LL) && _200eead2d_IsSelf((*(_149139_f)).get()._field_Params[0LL].ptr()))) {
			_2031d3299_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_149139_f)).get()._field_Params.len() == 0LL)) {
		_2031d3299_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_200eea9ba_ParamDecl> _150313_param = (*(_149139_f)).get()._field_Params[0LL];;
	if ((!(_200eead2d_IsSelf(_150313_param.ptr())))) {
		_2031d3299_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _2031dc9bd_buildTraitBody(jule::Ptr<_2031d2881_parser> _self_, jule::Ptr<_201005b29_TraitDecl>* _151039_t, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _151058_tokens) {
	jule::Slice<jule::Ptr<_2031b5842_stmt>> _151117_stmts = _2031b5bd8_splitStmts(&(_151058_tokens));;
	{
		auto expr = &(_151117_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205e68603:;
		if (it != expr_end) {
			jule::Ptr<_2031b5842_stmt> _151221_stmt = *it;
			{
				_151058_tokens=_151221_stmt.get()._field_tokens;
				if ((_151058_tokens.len() == 0LL)) {
					goto _iter_next_205e68603;
				};
				{
					auto &_match_expr{ _151058_tokens[0LL].get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_205e6ad64:;
						{
							jule::Ptr<_200eebcda_FnDecl> _151925_f = _2031d8d0a_buildFn(_self_, &(_151058_tokens), true, true);;
							if ((_151925_f == nullptr)) {
								goto _match_end_205e69703;
							};
							_2031dc69e_checkMethodReceiver(_self_.ptr(), &(_151925_f));
							if ((_151925_f.get()._field_Generics.len() > 0LL)) {
								_2031d3299_pushErr(_self_.ptr(), _151925_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_200eebcda_FnDecl>> &__jule_push_dest = (*(_151039_t)).get()._field_Methods; __jule_push_dest.push(_151925_f); };
						}
					}
					else {
						_case_begin_205e6914d:;
						{
							jule::I32 _152925_i = 0LL;;
							jule::Ptr<_200eda6ad_TypeDecl> _153026_ti;;
							jule::Bool _153030_ok = false;;
							({
								__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, &(_151058_tokens), (&(_152925_i)), true);
								_153026_ti = __jule_assign_result.__jule_result_arg0;
								_153030_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_153030_ok))) {
								goto _match_end_205e69703;
							};
							if ((_152925_i < _151058_tokens.len())) {
								_2031d3299_pushErr(_self_.ptr(), _151058_tokens[_152925_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> &__jule_push_dest = (*(_151039_t)).get()._field_Inherits; __jule_push_dest.push(_153026_ti); };
						}
					}
					_match_end_205e69703:;
				};
			}
			_iter_next_205e68603:;
			++it;
			goto _iter_begin_205e68603;
		}
		_iter_end_205e68603:;
	};
}



inline jule::Ptr<_201005b29_TraitDecl> _2031dcccb_buildTraitDecl(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _154239_tokens) {
	if (((*(_154239_tokens)).len() < 3LL)) {
		_2031d3299_pushErr(_self_.ptr(), (*(_154239_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_201005b29_TraitDecl> _154717_t = jule::new_ptr<_201005b29_TraitDecl>(_201005b29_TraitDecl{._field_Token=(*(_154239_tokens))[1LL], });;
	if ((_154717_t.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031d3299_pushErr(_self_.ptr(), _154717_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_154717_t.get()._field_Ident=_154717_t.get()._field_Token.get()._field_Kind;
	jule::I32 _155517_i = 2LL;;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _155617_bodyTokens = _2031d0a27_range(&(_155517_i), jule::Str("{", 1), jule::Str("}", 1), _154239_tokens);;
	if ((_155617_bodyTokens == nullptr)) {
		_2031d2b6c_stop(_self_.ptr());
		_2031d3299_pushErr(_self_.ptr(), _154717_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_155517_i < (*(_154239_tokens)).len())) {
		_2031d3299_pushErr(_self_.ptr(), (*(_154239_tokens))[_155517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_154717_t.get()._field_Public=_2031e253e_isPub(&(_154717_t.get()._field_Ident));
	_2031dc9bd_buildTraitBody(_self_, &(_154717_t), _155617_bodyTokens);
	_154717_t.get()._field_End=(*(_154239_tokens))[(_155517_i - 1LL)];
	return _154717_t;;
}



inline jule::Ptr<_200eebcda_FnDecl> _2031dd0d9_buildBindFn(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _157235_tokens) {
	_157235_tokens=_157235_tokens.slice(1LL);
	jule::Ptr<_200eebcda_FnDecl> _157417_f = _2031d8d0a_buildFn(_self_, &(_157235_tokens), false, true);;
	if ((_157417_f != nullptr)) {
		_157417_f.get()._field_Public=false;
		_157417_f.get()._field_Binded=true;
	};
	return _157417_f;;
}



inline jule::Ptr<_200eeccb9_VarDecl> _2031dd3e7_buildBindVar(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _158236_tokens) {
	_158236_tokens=_158236_tokens.slice(1LL);
	jule::Ptr<_200eeccb9_VarDecl> _158417_v = _2031d5cd5_buildVar(_self_, _158236_tokens);;
	if ((_158417_v != nullptr)) {
		_158417_v.get()._field_Public=false;
		_158417_v.get()._field_Binded=true;
		if ((_158417_v.get()._field_Expr != nullptr)) {
			_2031d3299_pushErr(_self_.ptr(), _158417_v.get()._field_Token, jule::Str("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _158417_v;;
}



inline jule::Ptr<_201005453_StructDecl> _2031dd705_buildBindStruct(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _159539_tokens) {
	_159539_tokens=_159539_tokens.slice(1LL);
	jule::Ptr<_201005453_StructDecl> _159717_s = _2031dc429_buildStructDecl(_self_, &(_159539_tokens));;
	if ((_159717_s != nullptr)) {
		_159717_s.get()._field_Public=false;
		{
			auto expr = &(_159717_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_205e77eb4:;
			if (it != expr_end) {
				jule::Ptr<_201004b06_FieldDecl> _160025_f = *it;
				{
					_160025_f.get()._field_Public=true;
				}
				_iter_next_205e77eb4:;
				++it;
				goto _iter_begin_205e77eb4;
			}
			_iter_end_205e77eb4:;
		};
		_159717_s.get()._field_Binded=true;
	};
	return _159717_s;;
}



inline jule::Ptr<_20100162a_TypeAliasDecl> _2031dda13_buildBindTypeAlias(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _160942_tokens) {
	_160942_tokens=_160942_tokens.slice(1LL);
	jule::Ptr<_20100162a_TypeAliasDecl> _161117_t = _2031d4ec1_buildTypeAliasDecl(_self_, &(_160942_tokens));;
	if ((_161117_t != nullptr)) {
		_161117_t.get()._field_Public=false;
		_161117_t.get()._field_Binded=true;
	};
	return _161117_t;;
}



inline jule::Ptr<_201002a16_UseDecl> _2031ddd21_buildBindUse(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _161936_tokens) {
	if ((_161936_tokens.len() == 1LL)) {
		_2031d3299_pushErr(_self_.ptr(), _161936_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161936_tokens=_161936_tokens.slice(1LL);
	;
	return _2031da24b_buildUseDecl(_self_.ptr(), _161936_tokens, true);;
}



inline jule::Any _2031de12e_buildBind(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _163034_tokens) {
	jule::Ptr<_1ed694d8c_Token> _163117_token = (*(_163034_tokens))[0LL];;
	if (((*(_163034_tokens)).len() == 1LL)) {
		_2031d3299_pushErr(_self_.ptr(), _163117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_163117_token=(*(_163034_tokens))[1LL];
	{
		auto &_match_expr{ _163117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU) || _match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_205e7c4d5:;
			{
				return jule::Any(_2031dd0d9_buildBindFn(_self_, (*(_163034_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_205e7cea8:;
			{
				return jule::Any(_2031dd3e7_buildBindVar(_self_, (*(_163034_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_205e7d01e:;
			{
				return jule::Any(_2031dd705_buildBindStruct(_self_, (*(_163034_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_205e7d085:;
			{
				return jule::Any(_2031dda13_buildBindTypeAlias(_self_, (*(_163034_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_205e7ce42:;
			{
				_2031d3299_pushErr(_self_.ptr(), _163117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_205e7cddc:;
	};
	return nullptr;;
}



inline jule::Ptr<_200eebcda_FnDecl> _2031de43c_getMethod(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _165434_tokens) {
	jule::I32 _165517_i = 0LL;;
	jule::Ptr<_1ed694d8c_Token> _165617_token = (*(_165434_tokens))[_165517_i];;
	if ((_165617_token.get()._field_Id == static_cast<jule::U32>(36LLU))) {
		if (((_165517_i + 1LL) >= (*(_165434_tokens)).len())) {
			_2031d3299_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165517_i)++;
		_165617_token=(*(_165434_tokens))[_165517_i];
	};
	if ((_165617_token.get()._field_Id == static_cast<jule::U32>(33LLU))) {
		if (((_165517_i + 1LL) >= (*(_165434_tokens)).len())) {
			_2031d3299_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165517_i)++;
		_165617_token=(*(_165434_tokens))[_165517_i];
	};
	if ((_165617_token.get()._field_Id != static_cast<jule::U32>(31LLU))) {
		_2031d3299_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _2031d8d0a_buildFn(_self_, _165434_tokens, true, false);;
}



inline void _2031de75b_parseImplBody(jule::Ptr<_2031d2881_parser> _self_, jule::Ptr<_201006234_Impl>* _168338_ipl, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _168355_tokens) {
	jule::Slice<jule::Ptr<_2031b5842_stmt>> _168417_stmts = _2031b5bd8_splitStmts(_168355_tokens);;
	{
		auto expr = &(_168417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205e848a5:;
		if (it != expr_end) {
			jule::Ptr<_2031b5842_stmt> _168521_stmt = *it;
			{
				(*(_168355_tokens))=_168521_stmt.get()._field_tokens;
				jule::Ptr<_1ed694d8c_Token> _168721_token = (*(_168355_tokens))[0LL];;
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(37LLU)) {
						_case_begin_205e8593e:;
						{
							_2031d3e59_pushDirective(_self_.ptr(), _2031d3bd4_buildDirective(_self_.ptr(), (*(_168355_tokens))));
							goto _iter_next_205e848a5;
						}
					}
					_match_end_205e858d9:;
				};
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(8LLU)) {
						_case_begin_205e85a93:;
						{
							jule::Ptr<_200eeccb9_VarDecl> _169625_v = _2031d5cd5_buildVar(_self_, (*(_168355_tokens)));;
							if ((_169625_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_200eeccb9_VarDecl>> &__jule_push_dest = (*(_168338_ipl)).get()._field_Statics; __jule_push_dest.push(_169625_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(36LLU) || _match_expr == static_cast<jule::U32>(31LLU) || _match_expr == static_cast<jule::U32>(33LLU)) {
						_case_begin_205e866a9:;
						{
							jule::Ptr<_200eebcda_FnDecl> _170325_f = _2031de43c_getMethod(_self_, _168355_tokens);;
							if ((_170325_f != nullptr)) {
								_2031dc69e_checkMethodReceiver(_self_.ptr(), &(_170325_f));
								_2031e00ec_applyFnMeta(_self_.ptr(), &(_170325_f));
								{ jule::Slice<jule::Ptr<_200eebcda_FnDecl>> &__jule_push_dest = (*(_168338_ipl)).get()._field_Methods; __jule_push_dest.push(_170325_f); };
							};
						}
					}
					else {
						_case_begin_205e85e5b:;
						{
							_2031d3299_pushErr(_self_.ptr(), _168721_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_205e848a5;
						}
					}
					_match_end_205e85e06:;
				};
			}
			_iter_next_205e848a5:;
			++it;
			goto _iter_begin_205e848a5;
		}
		_iter_end_205e848a5:;
	};
}



inline jule::Ptr<_201006234_Impl> _2031dea69_buildImpl(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _171633_tokens) {
	jule::Ptr<_1ed694d8c_Token> _171717_token = _171633_tokens[0LL];;
	if ((_171633_tokens.len() < 2LL)) {
		_2031d3299_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _172317_i = 1LL;;
	jule::Ptr<_200eda6ad_TypeDecl> _172518_base;;
	jule::Bool _172528_ok = false;;
	({
		__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_172518_base = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_2031d3299_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_201006234_Impl> _173417_ipl = jule::new_ptr<_201006234_Impl>(_201006234_Impl{._field_Base=_172518_base, });;
	_171717_token=_171633_tokens[_172317_i];
	if ((_171717_token.get()._field_Id != static_cast<jule::U32>(11LLU))) {
		if (((_171717_token.get()._field_Id == static_cast<jule::U32>(2LLU)) && _171717_token.get()._field_Kind.equal("{", 1))) {
			({
				jule::Ptr<_200eda6ad_TypeDecl> ___jule_assign_arg = _173417_ipl.get()._field_Dest;
				jule::Ptr<_200eda6ad_TypeDecl> _1___jule_assign_arg = _173417_ipl.get()._field_Base;
				_173417_ipl.get()._field_Base = ___jule_assign_arg;
				_173417_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_2031d2b6c_stop(_self_.ptr());
		_2031d3299_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172317_i)++;
	if ((_172317_i >= _171633_tokens.len())) {
		_2031d2b6c_stop(_self_.ptr());
		_2031d3299_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_173417_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_2031d2b6c_stop(_self_.ptr());
		_2031d3299_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _177217_bodyTokens = _2031d0a27_range(&(_172317_i), jule::Str("{", 1), jule::Str("}", 1), &(_171633_tokens));;
	if ((_177217_bodyTokens == nullptr)) {
		_2031d2b6c_stop(_self_.ptr());
		_2031d3299_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172317_i < _171633_tokens.len())) {
		_2031d3299_pushErr(_self_.ptr(), _171633_tokens[_172317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_173417_ipl.get()._field_End=_171633_tokens[(_172317_i - 1LL)];
	_2031de75b_parseImplBody(_self_, &(_173417_ipl), &(_177217_bodyTokens));
	return _173417_ipl;;
}



inline jule::Any _2031ded77_buildNodeData(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _178738_tokens) {
	jule::Ptr<_1ed694d8c_Token> _178817_token = (*(_178738_tokens))[0LL];;
	{
		auto &_match_expr{ _178817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU) || _match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_205e94ac4:;
			{
				jule::Ptr<_200eebcda_FnDecl> _179221_f = _2031d8d0a_buildFn(_self_, _178738_tokens, false, false);;
				if ((_179221_f != nullptr)) {
					_179221_f.get()._field_Global=true;
				};
				return jule::Any(_179221_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(8LLU) || _match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_205e958e9:;
			{
				return jule::Any(_2031d5cd5_buildVar(_self_, (*(_178738_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_205e95960:;
			{
				return jule::Any(_2031d4ec1_buildTypeAliasDecl(_self_, _178738_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_205e9519b:;
			{
				return _2031dba00_buildNodeEnumDecl(_self_, _178738_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_205e95212:;
			{
				return jule::Any(_2031dc429_buildStructDecl(_self_, _178738_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_205e95278:;
			{
				return jule::Any(_2031dcccb_buildTraitDecl(_self_, _178738_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_205e952de:;
			{
				return jule::Any(_2031dea69_buildImpl(_self_, (*(_178738_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_205e95b3b:;
			{
				return _2031de12e_buildBind(_self_, _178738_tokens);;
			}
		}
		else {
			_case_begin_205e95113:;
			{
				_2031d3299_pushErr(_self_.ptr(), _178817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_205e94e6a:;
	};
}



inline void _2031e00ec_applyFnMeta(_2031d2881_parser* _self_, jule::Ptr<_200eebcda_FnDecl>* _182035_f) {
	(*(_182035_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _2031e0372_applyMeta(_2031d2881_parser* _self_, _200d46ddd_Node* _182533_node) {
	{
		auto &_match_expr{ (*(_182533_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_205e9a811:;
			{
				jule::Ptr<_200eeccb9_VarDecl> _182821_v = (*(_182533_node))._field_Data.cast_ptr<_200eeccb9_VarDecl>(&__jule_any_type16);;
				if ((_182821_v == nullptr)) {
					return;;
				};
				_182821_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_205e9a877:;
			{
				jule::Ptr<_200eebcda_FnDecl> _183521_f = (*(_182533_node))._field_Data.cast_ptr<_200eebcda_FnDecl>(&__jule_any_type14);;
				if ((_183521_f == nullptr)) {
					return;;
				};
				_2031e00ec_applyFnMeta(_self_, &(_183521_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_205e9a8dd:;
			{
				jule::Ptr<_201005453_StructDecl> _184121_sd = (*(_182533_node))._field_Data.cast_ptr<_201005453_StructDecl>(&__jule_any_type13);;
				if ((_184121_sd == nullptr)) {
					return;;
				};
				_184121_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_205e9a602:;
	};
}



inline void _2031e05e7_pushUseDecl(jule::Ptr<_2031d2881_parser> _self_, jule::Ptr<_201002a16_UseDecl>* _185036_decl) {
	{ jule::Slice<jule::Ptr<_201002a16_UseDecl>> &__jule_push_dest = _self_.get()._field_ast.get()._field_UseDecls; __jule_push_dest.push((*(_185036_decl))); };
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_2031d3299_pushErr(_self_.ptr(), (*(_185036_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_2031d35b8_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _2031e0905_pushMetaNodes(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _185838_tokens) {
	{
		auto &_match_expr{ (*(_185838_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_205ea0e76:;
			{
				;
				jule::Ptr<_201002a16_UseDecl> _186221_decl = _2031da24b_buildUseDecl(_self_.ptr(), (*(_185838_tokens)), false);;
				_2031e05e7_pushUseDecl(_self_, &(_186221_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_205ea0eed:;
			{
				if ((((*(_185838_tokens)).len() > 1LL) && ((*(_185838_tokens))[1LL].get()._field_Id == static_cast<jule::U32>(18LLU)))) {
					jule::Ptr<_201002a16_UseDecl> _186725_decl = _2031ddd21_buildBindUse(_self_, (*(_185838_tokens)));;
					_2031e05e7_pushUseDecl(_self_, &(_186725_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_205ea1075:;
			{
				_2031d3e59_pushDirective(_self_.ptr(), _2031d3bd4_buildDirective(_self_.ptr(), (*(_185838_tokens))));
				return true;;
			}
		}
		_match_end_205ea0d99:;
	};
	return false;;
}



inline _200d46ddd_Node _2031e0c13_parseNode(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _187834_st) {
	_200d46ddd_Node _187917_node = _200d46ddd_Node{._field_Token=(*(_187834_st))[0LL], };;
	if (_2031e0905_pushMetaNodes(_self_, _187834_st)) {
		return _187917_node;;
	};
	jule::Any _188717_data = _2031ded77_buildNodeData(_self_, _187834_st);;
	if ((_188717_data == nullptr)) {
		return _187917_node;;
	};
	_187917_node._field_Data=_188717_data;
	_2031e0372_applyMeta(_self_.ptr(), &(_187917_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_2031d3299_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _187917_node;;
}



inline void _2031e0e88_appendNode(jule::Ptr<_2031d2881_parser> _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _190235_st) {
	if (((*(_190235_st)).len() == 0LL)) {
		return;;
	};
	_200d46ddd_Node _190617_node = _2031e0c13_parseNode(_self_, _190235_st);;
	if (((_190617_node._field_Data == nullptr) || _2031d2dd1_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_200d46ddd_Node> &__jule_push_dest = _self_.get()._field_ast.get()._field_Nodes; __jule_push_dest.push(_190617_node); };
}



inline void _2031e13ea_removeRange(_2031d2881_parser* _self_, jule::I32 _191330_i, jule::Str _191338_kind, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _191350_tokens, jule::Slice<jule::I32>* _191373_ranges) {
	jule::Str _191413_close = _2031d183b_getCloseKindOfBrace(_191338_kind);;
	for (; (_191330_i >= 0LL); (_191330_i)--) {
		{
			jule::Ptr<_1ed694d8c_Token> _191617_tok = (*(_191350_tokens))[(*(_191373_ranges))[_191330_i]];;
			if ((_191617_tok.get()._field_Kind != _191413_close)) {
				goto _iter_next_205ea99da;
			};
			(*(_191373_ranges))=jule::append((*(_191373_ranges)).slice(0LL, _191330_i),(*(_191373_ranges)).slice((_191330_i + 1LL)));
			goto _iter_end_205ea99da;
		}
	_iter_next_205ea99da:;
	}
	_iter_end_205ea99da:;;
}



inline void _2031e17b3_pushWrongOrderCloseErr(_2031d2881_parser* _self_, jule::Ptr<_1ed694d8c_Token>* _192542_t, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _192554_tokens, jule::Slice<jule::I32>* _192573_ranges) {
	{
		auto &_match_expr{ (*(_192554_tokens))[(*(_192573_ranges))[((*(_192573_ranges)).len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_205eab9cb:;
			{
				_2031d3299_pushErr(_self_, (*(_192542_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_205eaba53:;
			{
				_2031d3299_pushErr(_self_, (*(_192542_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_205eabaca:;
			{
				_2031d3299_pushErr(_self_, (*(_192542_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_205eab8aa:;
	};
}



inline void _2031e1c25_pushRangeClose(_2031d2881_parser* _self_, jule::Ptr<_1ed694d8c_Token> _193633_t, jule::Str _193644_left, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _193656_tokens, jule::Slice<jule::I32>* _193679_ranges) {
	jule::I32 _193713_n = (*(_193679_ranges)).len();;
	if ((_193713_n == 0LL)) {
		{
			auto &_match_expr{ _193633_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_205eae32a:;
				{
					_2031d3299_pushErr(_self_, _193633_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_205eae3a2:;
				{
					_2031d3299_pushErr(_self_, _193633_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_205eae429:;
				{
					_2031d3299_pushErr(_self_, _193633_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_205eae0e9:;
		};
		return;;
	} else if (((*(_193656_tokens))[(*(_193679_ranges))[(_193713_n - 1LL)]].get()._field_Kind != _193644_left)) {
		_2031e17b3_pushWrongOrderCloseErr(_self_, &(_193633_t), _193656_tokens, _193679_ranges);
	};
	_2031e13ea_removeRange(_self_, static_cast<jule::I32>((_193713_n - 1LL)), _193633_t.get()._field_Kind, _193656_tokens, _193679_ranges);
}



inline void _2031e1e9a_checkRanges(_2031d2881_parser* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _195431_tokens) {
	jule::Slice<jule::I32> _195517_ranges = nullptr;;
	{
		auto expr = _195431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205eb20b9:;
		if (it != expr_end) {
			jule::I32 _195713_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> *_195716_token = it;
			{
				if (((*(_195716_token)).get()._field_Id != static_cast<jule::U32>(2LLU))) {
					goto _iter_next_205eb20b9;
				};
				{
					auto &_match_expr{ (*(_195716_token)).get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_205eb32eb:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _195517_ranges; __jule_push_dest.push(_195713_i); };
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_205eb3362:;
						{
							_2031e1c25_pushRangeClose(_self_, (*(_195716_token)), jule::Str("(", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_205eb33c8:;
						{
							_2031e1c25_pushRangeClose(_self_, (*(_195716_token)), jule::Str("{", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_205eb343e:;
						{
							_2031e1c25_pushRangeClose(_self_, (*(_195716_token)), jule::Str("[", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					_match_end_205eb31db:;
				};
			}
			_iter_next_205eb20b9:;
			++it;
			_195713_i++;
			goto _iter_begin_205eb20b9;
		}
		_iter_end_205eb20b9:;
	};
	{
		auto expr = &(_195517_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205eb4594:;
		if (it != expr_end) {
			jule::I32 _197516_i = *it;
			{
				jule::Ptr<_1ed694d8c_Token> _197617_token = (*(_195431_tokens))[_197516_i];;
				{
					auto &_match_expr{ _197617_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_205eb571b:;
						{
							_2031d3299_pushErr(_self_, _197617_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_205eb5793:;
						{
							_2031d3299_pushErr(_self_, _197617_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_205eb581a:;
						{
							_2031d3299_pushErr(_self_, _197617_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_205eb5540:;
				};
			}
			_iter_next_205eb4594:;
			++it;
			goto _iter_begin_205eb4594;
		}
		_iter_end_205eb4594:;
	};
}



inline void _2031e2220_parse(jule::Ptr<_2031d2881_parser> _self_, jule::Ptr<_1ed69a227_File>* _198830_f) {
	_self_.get()._field_ast=jule::new_ptr<_200d46041_Ast>(_200d46041_Ast{._field_File=(*(_198830_f)), });
	_self_.get()._field_ep=jule::new_ptr<_2031c2651_exprBuilder>(_2031c2651_exprBuilder{._field_p=_self_});
	_2031e1e9a_checkRanges(_self_.ptr(), &((*(_198830_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_2031b5842_stmt>> _200117_stmts = _2031b5bd8_splitStmts(&((*(_198830_f)).get()._field_Tokens));;
	jule::I32 _200417_i = 0LL;;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_2031b5842_stmt> _200621_stmt = _200117_stmts[_200417_i];;
			if ((_200621_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200621_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U32>(37LLU))) {
				goto _iter_end_205eb870d;
			};
			if ((!(_2193a64de_IsTopDirective(_200621_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_205eb870d;
			};
			{ jule::Slice<jule::Ptr<_200d472d9_Directive>> &__jule_push_dest = _self_.get()._field_ast.get()._field_TopDirectives; __jule_push_dest.push(_2031d3bd4_buildDirective(_self_.ptr(), _200621_stmt.get()._field_tokens)); };
		}
	_iter_next_205eb870d:;
	}
	_iter_end_205eb870d:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_2031b5842_stmt> _202321_stmt = _200117_stmts[_200417_i];;
			_2031e0e88_appendNode(_self_, &(_202321_stmt.get()._field_tokens));
			if (_2031d2dd1_stopped(_self_.ptr())) {
				goto _iter_end_205eb8a60;
			};
		}
	_iter_next_205eb8a60:;
	}
	_iter_end_205eb8a60:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_2031d3299_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2031d2881_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _2031e3b28_pushErr(_2031e35a6_typeBuilder* _self_, jule::Ptr<_1ed694d8c_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_2031d3299_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _2031e3e47_pushSuggestion(_2031e35a6_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_2031d35b8_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e41ab_buildNamespace(_2031e35a6_typeBuilder* _self_) {
	jule::Ptr<_200eda6ad_TypeDecl> _5517_t = jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_200edb3d4_NamespaceTypeDecl> _5917_nst = jule::new_ptr<_200edb3d4_NamespaceTypeDecl>();;
	jule::I32 _6017_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ed694d8c_Token> _6221_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6017_n & 1LL) == 0LL)) {
				if ((_6221_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
					_2031e3b28_pushErr(_self_, _6221_token, jule::Str("invalid syntax", 14));
					_2031e3e47_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1ed694d8c_Token>> &__jule_push_dest = _5917_nst.get()._field_Idents; __jule_push_dest.push(_6221_token); };
			} else if ((_6221_token.get()._field_Id != static_cast<jule::U32>(21LLU))) {
				goto _iter_end_205ec0b33;
			};
			(_6017_n)++;
		}
	_iter_next_205ec0b33:;
	}
	_iter_end_205ec0b33:;;
	_5917_nst.get()._field_Idents=_5917_nst.get()._field_Idents.slice(0LL, (_5917_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_5917_nst.get()._field_Kind=_2031e48e8_buildIdent(_self_);
	_5517_t.get()._field_Kind=jule::Any(_5917_nst, &__jule_any_type96);
	return _5517_t;;
}



inline jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _2031e4420_buildGenerics(_2031e35a6_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ed694d8c_Token> _8813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((_8813_token.get()._field_Id != static_cast<jule::U32>(2LLU)) || (!_8813_token.get()._field_Kind.equal("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _9317_parts = _2031e4684_identGenerics(_self_);;
	if ((_9317_parts.len() == 0LL)) {
		_2031e3b28_pushErr(_self_, _8813_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> _9917_types = jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>::alloc(0LL, _9317_parts.len());;
	{
		auto expr = &(_9317_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205ec7981:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _10021_part = *it;
			{
				jule::I32 _10121_j = 0LL;;
				jule::Ptr<_200eda6ad_TypeDecl> _10222_t;;
				({
					__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType((*(_self_))._field_p, &(_10021_part), (&(_10121_j)), true);
					_10222_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10121_j < _10021_part.len())) {
					_2031e3b28_pushErr(_self_, _10021_part[_10121_j], jule::Str("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>> &__jule_push_dest = _9917_types; __jule_push_dest.push(_10222_t); };
			}
			_iter_next_205ec7981:;
			++it;
			goto _iter_begin_205ec7981;
		}
		_iter_end_205ec7981:;
	};
	return _9917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _2031e4684_identGenerics(_2031e35a6_typeBuilder* _self_) {
	jule::I32 _11213_first = (*((*(_self_))._field_i));;
	jule::I32 _11317_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ed694d8c_Token> _11517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if ((_11517_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
				{
					auto &_match_expr{ _11517_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_205ecb3be:;
						{
							(_11317_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_205ecb446:;
						{
							(_11317_rangeN)--;
						}
					}
					_match_end_205ecb19e:;
				};
			};
			if ((_11317_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_205eca0d2;
			};
		}
	_iter_next_205eca0d2:;
	}
	_iter_end_205eca0d2:;;
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _12917_tokens = (*(_self_))._field_tokens.slice((_11213_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _13018_parts;;
	jule::Slice<_2193a460d_Log> _13025_errors;;
	({
		__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031d1594_parts(&(_12917_tokens), static_cast<jule::U32>(7LLU), true);
		_13018_parts = __jule_assign_result.__jule_result_arg0;
		_13025_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*(_self_))._field_p.get()._field_errors).append(_13025_errors);;
	};
	return _13018_parts;;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e48e8_buildIdent(_2031e35a6_typeBuilder* _self_) {
	jule::Bool _13817_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13817_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U32>(21LLU)))) {
		return _2031e41ab_buildNamespace(_self_);;
	};
	jule::Ptr<_1ed694d8c_Token> _14217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_200edac74_IdentTypeDecl> _14317_it = jule::new_ptr<_200edac74_IdentTypeDecl>(_200edac74_IdentTypeDecl{._field_Token=_14217_token, ._field_Ident=_14217_token.get()._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_200eda6ad_TypeDecl> _14917_itd = jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_14217_token, ._field_Kind=jule::Any(_14317_it, &__jule_any_type20)});;
	if (((!(_13817_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U32>(19LLU)))) {
		_14317_it.get()._field_Generics=_2031e4420_buildGenerics(_self_);
		return _14917_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_2031e3b28_pushErr(_self_, _14217_token, jule::Str("invalid syntax", 14));
		return _14917_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_2031e3b28_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _14917_itd;;
	};
	jule::Ptr<_200edb060_SubIdentTypeDecl> _16617_sit = jule::new_ptr<_200edb060_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_200edac74_IdentTypeDecl>> &__jule_push_dest = _16617_sit.get()._field_Idents; __jule_push_dest.push(_14317_it); };
	jule::Ptr<_200eda6ad_TypeDecl> _16817_ident = _2031e48e8_buildIdent(_self_);;
	{
		auto &_match_expr{ _16817_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_205ed5b6a:;
			{
				{ jule::Slice<jule::Ptr<_200edac74_IdentTypeDecl>> &__jule_push_dest = _16617_sit.get()._field_Idents; __jule_push_dest.push(_16817_ident.get()._field_Kind.cast_ptr<_200edac74_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_205ed5be2:;
			{
				(_16617_sit.get()._field_Idents).append(_16817_ident.get()._field_Kind.cast_ptr<_200edb060_SubIdentTypeDecl>(&__jule_any_type92).get()._field_Idents);;
			}
		}
		_match_end_205ed5a9e:;
	};
	return jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_14217_token, ._field_Kind=jule::Any(_16617_sit, &__jule_any_type92)});;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e4b5c_buildCppLink(_2031e35a6_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U32>(19LLU)))) {
		_2031e3b28_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_200eda6ad_TypeDecl> _18717_t = _2031e48e8_buildIdent(_self_);;
	_18717_t.get()._field_Kind.cast_ptr<_200edac74_IdentTypeDecl>(&__jule_any_type20).get()._field_Binded=true;
	return _18717_t;;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e4dc1_buildFn(_2031e35a6_typeBuilder* _self_) {
	jule::Ptr<_1ed694d8c_Token> _19317_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_200eebcda_FnDecl> _19417_f = _2031d88a9_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19417_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_200eec13c_IsAnon(_19417_f.ptr())))) {
		_2031e3b28_pushErr(_self_, _19417_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_19317_token, ._field_Kind=jule::Any(_19417_f, &__jule_any_type14)});;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e5135_buildPtr(_2031e35a6_typeBuilder* _self_) {
	jule::Ptr<_1ed694d8c_Token> _20817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_2031e3b28_pushErr(_self_, _20817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U32>(33LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_20817_token, ._field_Kind=jule::Any(jule::new_ptr<_200edc193_PtrTypeDecl>(_200edc193_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type77)});;
	};
	jule::Ptr<_200eda6ad_TypeDecl> _22517_elem = _2031e6323_step(_self_);;
	if ((_22517_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_20817_token, ._field_Kind=jule::Any(jule::new_ptr<_200edc193_PtrTypeDecl>(_200edc193_PtrTypeDecl{._field_Elem=_22517_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e5399_buildSptr(_2031e35a6_typeBuilder* _self_) {
	jule::Ptr<_1ed694d8c_Token> _23917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_2031e3b28_pushErr(_self_, _23917_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_200eda6ad_TypeDecl> _24617_elem = _2031e6323_step(_self_);;
	if ((_24617_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_23917_token, ._field_Kind=jule::Any(jule::new_ptr<_200edb6c0_SptrTypeDecl>(_200edb6c0_SptrTypeDecl{._field_Elem=_24617_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e560d_buildOp(_2031e35a6_typeBuilder* _self_) {
	jule::Ptr<_1ed694d8c_Token> _26017_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _26017_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_205ee299b:;
			{
				return _2031e5135_buildPtr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_205ee3b01:;
			{
				return _2031e5399_buildSptr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_205ee3bde:;
			{
				return jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_200edb6c0_SptrTypeDecl>(_200edb6c0_SptrTypeDecl{._field_Elem=_2031e5399_buildSptr(_self_)}), &__jule_any_type78)});;
			}
		}
		else {
			_case_begin_205ee331a:;
			{
				_2031e3b28_pushErr(_self_, _26017_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_205ee3194:;
	};
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e5872_buildSlc(_2031e35a6_typeBuilder* _self_) {
	jule::Ptr<_1ed694d8c_Token> _27917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_200eda6ad_TypeDecl> _28117_elem = _2031e6323_step(_self_);;
	if ((_28117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_27917_token, ._field_Kind=jule::Any(jule::new_ptr<_200edbabb_SlcTypeDecl>(_200edbabb_SlcTypeDecl{._field_Elem=_28117_elem}), &__jule_any_type76)});;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e5ad6_buildArr(_2031e35a6_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _29417_exprTokens = _2031d0a27_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_2031e3b28_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_200eda6ad_TypeDecl> _30017_elem = _2031e6323_step(_self_);;
	if ((_30017_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_200edc869_ArrTypeDecl> _30517_arrt = jule::new_ptr<_200edc869_ArrTypeDecl>(_200edc869_ArrTypeDecl{._field_Elem=_30017_elem, });;
	jule::Ptr<_1ed694d8c_Token> _30917_token = _29417_exprTokens[0LL];;
	if ((((_29417_exprTokens.len() == 1LL) && (_30917_token.get()._field_Id == static_cast<jule::U32>(6LLU))) && _30917_token.get()._field_Kind.equal("...", 3))) {
	} else {
		_30517_arrt.get()._field_Size=_2031d38c6_buildExpr((*(_self_))._field_p, &(_29417_exprTokens));
	};
	return jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_30917_token, ._field_Kind=jule::Any(_30517_arrt, &__jule_any_type75)});;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e5d4a_buildMap(_2031e35a6_typeBuilder* _self_) {
	jule::Ptr<_1ed694d8c_Token> _32317_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_2031e3b28_pushErr(_self_, _32317_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _33117_keyTokens = _2031d0a27_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_2031e3b28_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33117_keyTokens.len() == 0LL)) {
		_2031e3b28_pushErr(_self_, _32317_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_200edd073_MapTypeDecl> _34017_mapt = jule::new_ptr<_200edd073_MapTypeDecl>();;
	jule::I32 _34117_j = 0LL;;
	jule::Ptr<_200eda6ad_TypeDecl> _34218_keyt;;
	jule::Bool _34228_ok = false;;
	({
		__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType((*(_self_))._field_p, &(_33117_keyTokens), (&(_34117_j)), (*(_self_))._field_err);
		_34218_keyt = __jule_assign_result.__jule_result_arg0;
		_34228_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34228_ok))) {
		return nullptr;;
	} else if ((_34117_j < _33117_keyTokens.len())) {
		_2031e3b28_pushErr(_self_, _33117_keyTokens[_34117_j], jule::Str("invalid syntax", 14));
	};
	_34017_mapt.get()._field_Key=_34218_keyt;
	jule::Ptr<_200eda6ad_TypeDecl> _35018_valt;;
	({
		__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_assign_result = _2031d4bb3_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_35018_valt = __jule_assign_result.__jule_result_arg0;
		_34228_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34228_ok))) {
		return nullptr;;
	};
	_34017_mapt.get()._field_Val=_35018_valt;
	return jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_32317_mapToken, ._field_Kind=jule::Any(_34017_mapt, &__jule_any_type79)});;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e60ae_buildEnumerable(_2031e35a6_typeBuilder* _self_) {
	jule::Ptr<_1ed694d8c_Token> _36217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len()) || (_36217_token.get()._field_Id != static_cast<jule::U32>(2LLU))) || (!_36217_token.get()._field_Kind.equal("[", 1)))) {
		_2031e3b28_pushErr(_self_, _36217_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_36217_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((_36217_token.get()._field_Id == static_cast<jule::U32>(2LLU)) && _36217_token.get()._field_Kind.equal("]", 1))) {
		return _2031e5872_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _2031e5ad6_buildArr(_self_);;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e6323_step(_2031e35a6_typeBuilder* _self_) {
	jule::Ptr<_1ed694d8c_Token> _37913_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _37913_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_20600611e:;
			{
				return _2031e48e8_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_206006460:;
			{
				return _2031e4b5c_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_2060064c6:;
			{
				return _2031e4dc1_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_20600653c:;
			{
				return _2031e560d_buildOp(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_206005926:;
			{
				return _2031e60ae_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_20600598c:;
			{
				return _2031e5d4a_buildMap(_self_);;
			}
		}
		else {
			_case_begin_2060058b0:;
			{
				((*((*(_self_))._field_i)))++;
				_2031e3b28_pushErr(_self_, _37913_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_206005739:;
	};
}



inline __jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool _2031e6587_build(_2031e35a6_typeBuilder* _self_) {
	__jule_tuple_x_200eda6ad_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_200eda6ad_TypeDecl> _40317_root = _2031e6323_step(_self_);;
	if ((_40317_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _2031e2dd0_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _40317_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _2031e35a6_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2012dd41c_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _2012dec7b_pushErr(_2012de770_directiveEval* _self_, jule::Ptr<_1ed694d8c_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_2193a460d_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_2193a460d_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_2193a4a4d_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _2012e0133_splitOperans(_2012de770_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>>::alloc(0LL, 10LL);;
	jule::I32 _3617_i = 0LL;;
	jule::I32 _3717_rangeN = 0LL;;
	jule::I32 _3817_last = 0LL;;
	for (; (_3617_i < ((*(_3351_tokens)).len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1ed694d8c_Token> _4017_b = (*(_3351_tokens))[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U32>(2LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_20602954e:;
						{
							(_3717_rangeN)++;
							goto _iter_next_20602777d;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_2060295b5:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_20602932e:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U32>(6LLU)))) {
				goto _iter_next_20602777d;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				{ jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3351_tokens)).slice(_3817_last, _3617_i)); };
				_3817_last=static_cast<jule::I32>((_3617_i + 1LL));
			};
		}
	_iter_next_20602777d:;
	}
	_iter_end_20602777d:;;
	if ((_3817_last < (*(_3351_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3351_tokens)).slice(_3817_last)); };
	} else {
		_2012dec7b_pushErr(_self_, (*(_3351_tokens))[(_3817_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _2012e0441_evalDirectiveIdent(_2012de770_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20602c497:;
		if (it != expr_end) {
			jule::Str *_7716_var = it;
			{
				if (((*(_7716_var)) == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_20602c497:;
			++it;
			goto _iter_begin_20602c497;
		}
		_iter_end_20602c497:;
	};
	return false;;
}



inline jule::Bool _2012e074e_evalDirectivePart(_2012de770_directiveEval* _self_, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U32>(6LLU)) && _8740_part[0LL].get()._field_Kind.equal("!", 1));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_2012dec7b_pushErr(_self_, _8740_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _2012e0441_evalDirectiveIdent(_self_, _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _2012e09b3_eval(_2012de770_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_2012dec7b_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _11317_logicalOrParts = _2012e0133_splitOperans(_self_, jule::Str("||", 2), &((*(_self_))._field_d.get()._field_Args));;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_11317_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206032a30:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _12021_logicalAndParts = _2012e0133_splitOperans(_self_, jule::Str("&&", 2), &(_11821_part));;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_12021_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206033eb5:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1ed694d8c_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_1ed694d8c_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U32>(2LLU)) && _12621_first.get()._field_Kind.equal("(", 1))) {
								jule::Ptr<_1ed694d8c_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U32>(2LLU)) || (!_12825_end.get()._field_Kind.equal(")", 1)))) {
									_2012dec7b_pushErr(_self_, _12621_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL, (_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _2012e074e_evalDirectivePart(_self_, _12525_andPart));
						}
						_iter_next_206033eb5:;
						++it;
						goto _iter_begin_206033eb5;
					}
					_iter_end_206033eb5:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_206032a30:;
			++it;
			goto _iter_begin_206032a30;
		}
		_iter_end_206032a30:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _2012de770_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2031e7423_JuleImporter> static__2031e780d_New(_2012dd41c_CompileInfo _5819_info) {
	jule::Ptr<_2031e7423_JuleImporter> _5917_imp = jule::new_ptr<_2031e7423_JuleImporter>(_2031e7423_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_21ab64718_PathStdlib}), });;
	_2012ddc36_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_20107b397_ImportInfo>> _2031e7a72_AllPackages(_2031e7423_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _2031e7e7e_SetModPath(_2031e7423_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _2031e81e3_GetModPath(_2031e7423_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _2031e8501_ModById(_2031e7423_JuleImporter* _self_, jule::I32 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_20107b397_ImportInfo> _2031e880e_GetImport(_2031e7423_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20603a7d5:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_20603a7d5:;
			++it;
			goto _iter_begin_20603a7d5;
		}
		_iter_end_20603a7d5:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_200d46041_Ast__jule_tuple_s_2193a460d_Log _2031e8bb6_ImportPackage(_2031e7423_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_200d46041_Ast__jule_tuple_s_2193a460d_Log __jule_func_result;
	jule::Slice<jule::Ptr<_217d998b8_DirEntry>> _9717_dirents = ({
		auto except = static__2193245e4_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_2193a460d_Log>::make({_2031e6e8e_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_217d998b8_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _2012ee97d_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_2193a460d_Log> _10525_errs = _2012eeb7b_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_200d46041_Ast>> _11217_asts = jule::Slice<jule::Ptr<_200d46041_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20603bce2:;
		if (it != expr_end) {
			jule::Ptr<_217d998b8_DirEntry> _11316_dirent = *it;
			{
				if ((_217da9103_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_219318a17_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_20603bce2;
				};
				jule::Str _11917__path = _21932314d_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1ed69a227_File> _12021_file = _1ed69b4d1_NewFileSet(_11917__path);;
				_1ed69a5e0_Fill(_12021_file.ptr(), _2031e6c4c_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_2193a460d_Log> _12221_errors = _1ed6a6d7c_Lex(_12021_file, static_cast<jule::I32>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_20152cc44_FileInfo> _12721_finfo = _201530928_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_2012c3b3e_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_20603bce2;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_2193a460d_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031e9337_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_20603bce2;
				};
				{ jule::Slice<jule::Ptr<_200d46041_Ast>> &__jule_push_dest = _11217_asts; __jule_push_dest.push(_12721_finfo.get()._field_Ast); };
			}
			_iter_next_20603bce2:;
			++it;
			goto _iter_begin_20603bce2;
		}
		_iter_end_20603bce2:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _2031e8e3b_Imported(_2031e7423_JuleImporter* _self_, jule::Ptr<_20107b397_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20603e9d7:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_Binded == _15331_imp.get()._field_Binded) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_20603e9d7:;
			++it;
			goto _iter_begin_20603e9d7;
		}
		_iter_end_20603e9d7:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20604612b:;
			if (it != expr_end) {
				jule::I32 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_20604612b:;
				++it;
				_16217_i++;
				goto _iter_begin_20604612b;
			}
			_iter_end_20604612b:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I32>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_setted:;
	};
	{ jule::Slice<jule::Ptr<_20107b397_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_2193a460d_Log _2031e9337_isPassBuildDirectives(_2031e7423_JuleImporter* _self_, jule::Ptr<_200d46041_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_2193a460d_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206049085:;
		if (it != expr_end) {
			jule::Ptr<_200d472d9_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_206049085;
				};
				_2012de770_directiveEval _18421_de = _2012de770_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _2012e09b3_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_206049085:;
			++it;
			goto _iter_begin_206049085;
		}
		_iter_end_206049085:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _2031e7423_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2031ebe72_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _206068a00_isCommonOrdered(jule::Slice<jule::Ptr<_20100a25a_Struct>> _1834_s, jule::Ptr<_20100a25a_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206069a01:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20606a31a:;
					if (it != expr_end) {
						jule::Ptr<_20100a25a_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_20606a31a:;
						++it;
						goto _iter_begin_20606a31a;
					}
					_iter_end_20606a31a:;
				};
			}
			_iter_next_206069a01:;
			++it;
			goto _iter_begin_206069a01;
		}
		_iter_end_206069a01:;
	};
	return true;;
}

inline jule::Bool _20606d3ea_isCommonOrdered(jule::Slice<jule::Ptr<_2010a4975_Var>> _1834_s, jule::Ptr<_2010a4975_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20606e3a7:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20606ebc1:;
					if (it != expr_end) {
						jule::Ptr<_2010a4975_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_20606ebc1:;
						++it;
						goto _iter_begin_20606ebc1;
					}
					_iter_end_20606ebc1:;
				};
			}
			_iter_next_20606e3a7:;
			++it;
			goto _iter_begin_20606e3a7;
		}
		_iter_end_20606e3a7:;
	};
	return true;;
}



inline void _206065623_orderCommon(jule::Slice<jule::Ptr<_20100a25a_Struct>>* _3135_s) {
	jule::I32 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206066a86:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I32 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_206068a00_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I32>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_206067779:;
				}
				_iter_end_206067779:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_206066a86;
				};
				(_3217_n)--;
			}
			_iter_next_206066a86:;
			++it;
			goto _iter_begin_206066a86;
		}
		_iter_end_206066a86:;
	};
}

inline void _206065e5e_orderCommon(jule::Slice<jule::Ptr<_2010a4975_Var>>* _3135_s) {
	jule::I32 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20606b481:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I32 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_20606d3ea_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I32>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_20606c174:;
				}
				_iter_end_20606c174:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_20606b481;
				};
				(_3217_n)--;
			}
			_iter_next_20606b481:;
			++it;
			goto _iter_begin_20606b481;
		}
		_iter_end_20606b481:;
	};
}



inline void static__2031eca66_orderStructures(jule::Slice<jule::Ptr<_20100a25a_Struct>>* _5136_structs) {
	_206065623_orderCommon(_5136_structs);
}



inline void static__2031ecc75_orderVars(jule::Slice<jule::Ptr<_2010a4975_Var>>* _5730_vars) {
	_206065e5e_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _2031ec1d6_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2032e4a1a_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _20332ac3d_optimizeChild(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Ptr<_20105c92d_Scope>* _3938_s) {
	jule::Ptr<_20332a7a9_scopeDeadCode> _4017_sdc = jule::new_ptr<_20332a7a9_scopeDeadCode>(_20332a7a9_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_20332d37d_optimizeStmts(_4017_sdc);
	};
}



inline void _20332aed5_optimizeBodyChildExceptional(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Ptr<_20105c92d_Scope>* _5053_s) {
	jule::Ptr<_20332a7a9_scopeDeadCode> _5117_sdc = jule::new_ptr<_20332a7a9_scopeDeadCode>(_20332a7a9_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_20332d37d_optimizeStmts(_5117_sdc);
	};
}



inline void _20332b26b_optimizeBodyChild(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Ptr<_20105c92d_Scope>* _6142_s) {
	jule::Ptr<_20332a7a9_scopeDeadCode> _6217_sdc = jule::new_ptr<_20332a7a9_scopeDeadCode>(_20332a7a9_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_20332d37d_optimizeStmts(_6217_sdc);
	};
}



inline void _20332b4e1_optimizeExprModel(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_20332e714_exprDeadCode _7213_edc = static__20332ecec_new(&(_self_));;
	_203335a17_optimize(&_7213_edc, _7142_model);
}



inline void _20332b6bc_eliminateFollowed(_20332a7a9_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_20332a7a9_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_2060dae3a:;
	}
	_iter_end_2060dae3a:;;
}



inline void _20332b942_pushGoto(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Ptr<_201060458_GotoSt> _9232_gt) {
	jule::I32 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_2060ddd72:;
	}
	_iter_end_2060ddd72:;;
	{ jule::Slice<jule::Ptr<_201060458_GotoSt>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _20332bbb7_pushLabel(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Ptr<_20106016c_Label> _10233_l) {
	jule::I32 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_2060e048e;
			};
			(_10317_i)++;
		}
	_iter_next_2060e048e:;
	}
	_iter_end_2060e048e:;;
	{ jule::Slice<jule::Ptr<_20106016c_Label>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _20332be3c_optimizeRangeIter(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Ptr<_20105e5cd_RangeIter> _11541_it) {
	_20332b4e1_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_20332b26b_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _20332c1b2_optimizeWhileIter(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Ptr<_20105dbe8_WhileIter> _12041_it) {
	_20332b4e1_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_20332d1a2_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_20332b26b_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _20332c437_optimizeInfIter(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Ptr<_20105d775_InfIter> _12839_it) {
	_20332b26b_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _20332c6ac_optimizeConditional(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Ptr<_20105d489_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060e5d79:;
		if (it != expr_end) {
			jule::Ptr<_20105cd29_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_20332b4e1_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_20332b26b_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_2060e5d79:;
			++it;
			goto _iter_begin_2060e5d79;
		}
		_iter_end_2060e5d79:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_20332ac3d_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_20332b26b_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _20332c932_optimizeMatch(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Ptr<_201061745_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060e85b8:;
		if (it != expr_end) {
			jule::Ptr<_201062290_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2060e8de3:;
					if (it != expr_end) {
						jule::Ptr<_2010edb23_Data> _15225_expr = *it;
						{
							_20332b4e1_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_2060e8de3:;
						++it;
						goto _iter_begin_2060e8de3;
					}
					_iter_end_2060e8de3:;
				};
				_20332b26b_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_2060e85b8:;
			++it;
			goto _iter_begin_2060e85b8;
		}
		_iter_end_2060e85b8:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_20332ac3d_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_20332b26b_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _20332cba7_optimizeAssign(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Ptr<_201060c83_Assign> _16838_assign) {
	_20332b4e1_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_20332b4e1_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _20332ce2c_optimizeMultiAssign(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Ptr<_20106113a_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060ebd08:;
		if (it != expr_end) {
			jule::Ptr<_2010edb23_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_20332b4e1_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_2060ebd08:;
			++it;
			goto _iter_begin_2060ebd08;
		}
		_iter_end_2060ebd08:;
	};
	_20332b4e1_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _20332d1a2_optimizeStmt(jule::Ptr<_20332a7a9_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_2060ed348:;
			{
				jule::Ptr<_20105c92d_Scope> _18521_scope = _18236_st.cast_ptr<_20105c92d_Scope>(&__jule_any_type22);;
				if (_18521_scope.get()._field_Deferred) {
					_20332d6ad_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_20332ac3d_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_2060ed4be:;
			{
				_20332be3c_optimizeRangeIter(_self_, _18236_st.cast_ptr<_20105e5cd_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_2060ed535:;
			{
				_20332c1b2_optimizeWhileIter(_self_, _18236_st.cast_ptr<_20105dbe8_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_2060ed59b:;
			{
				_20332c437_optimizeInfIter(_self_, _18236_st.cast_ptr<_20105d775_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_2060ed623:;
			{
				_20332c6ac_optimizeConditional(_self_, _18236_st.cast_ptr<_20105d489_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_2060ed69a:;
			{
				_20332c932_optimizeMatch(_self_, _18236_st.cast_ptr<_201061745_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_2060ed722:;
			{
				_20332cba7_optimizeAssign(_self_, _18236_st.cast_ptr<_201060c83_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_2060ed799:;
			{
				_20332ce2c_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_20106113a_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_2060ed821:;
			{
				jule::Ptr<_2010edb23_Data> _20621_d = _18236_st.cast_ptr<_2010edb23_Data>(&__jule_any_type24);;
				if (_self_.get()._field_except) {
					goto _match_end_2060ed458;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_206103c44:;
						{
							_20332b6bc_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_206103617:;
						{
							_20332b4e1_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_2061035b2:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_2060ed898:;
			{
				_20332b6bc_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_2060ed920:;
			{
				_20332b942_pushGoto(_self_, _18236_st.cast_ptr<_201060458_GotoSt>(&__jule_any_type43));
				_20332b6bc_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_2060ed997:;
			{
				_20332bbb7_pushLabel(_self_, _18236_st.cast_ptr<_20106016c_Label>(&__jule_any_type21));
			}
		}
		_match_end_2060ed458:;
	};
}



inline void _20332d37d_optimizeStmts(jule::Ptr<_20332a7a9_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_20332d1a2_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_2061050ca:;
	}
	_iter_end_2061050ca:;;
}







std::ostream &operator<<(std::ostream &_Stream, _20332a7a9_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _20332e714_exprDeadCode static__20332ecec_new(jule::Ptr<_20332a7a9_scopeDeadCode>* _5024_s) {
	return _20332e714_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _203330072_binary(_20332e714_exprDeadCode* _self_, jule::Ptr<_2010124d7_BinopExprModel> _5625_m) {
	_203335a17_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_203335a17_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _2033302e7_unary(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101288e_UnaryExprModel> _6124_m) {
	_203335a17_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _20333056c_structureLit(_20332e714_exprDeadCode* _self_, jule::Ptr<_201013142_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20610841e:;
		if (it != expr_end) {
			jule::Ptr<_201012c8a_StructArgExprModel> _6621_arg = *it;
			{
				_203335a17_optimize(_self_, &(_6621_arg.get()._field_Expr));
			}
			_iter_next_20610841e:;
			++it;
			goto _iter_begin_20610841e;
		}
		_iter_end_20610841e:;
	};
}



inline void _2033307e2_allocStructure(_20332e714_exprDeadCode* _self_, jule::Ptr<_201013450_AllocStructLitExprModel> _7133_m) {
	_20333056c_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _203330a67_casting(_20332e714_exprDeadCode* _self_, jule::Ptr<_2010139a0_CastingExprModel> _7526_m) {
	_203335a17_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _203330cdc_args(_20332e714_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20610a421:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_203335a17_optimize(_self_, &(_8021_arg));
			}
			_iter_next_20610a421:;
			++it;
			goto _iter_begin_20610a421;
		}
		_iter_end_20610a421:;
	};
}



inline void _203331062_funcCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_201014352_FnCallExprModel> _8527_m) {
	_203335a17_optimize(_self_, &(_8527_m.get()._field_Expr));
	_203330cdc_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_20332aed5_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _2033312d7_slice(_20332e714_exprDeadCode* _self_, jule::Ptr<_201014709_SliceExprModel> _9324_m) {
	_203330cdc_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _20333155c_array(_20332e714_exprDeadCode* _self_, jule::Ptr<_201017432_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_203335a17_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_203330cdc_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _2033317d2_indexing(_20332e714_exprDeadCode* _self_, jule::Ptr<_201014b7c_IndexingExprModel> _10427_m) {
	_203335a17_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_203335a17_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _203331a57_anonFunc(_20332e714_exprDeadCode* _self_, jule::Ptr<_201015034_AnonFnExprModel> _10927_m) {
	_20332d6ad_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _203331ccc_mapExpr(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101585e_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206110778:;
		if (it != expr_end) {
			jule::Ptr<_2010153db_KeyValPairExprModel> _11421_pair = *it;
			{
				_203335a17_optimize(_self_, &(_11421_pair.get()._field_Key));
				_203335a17_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_206110778:;
			++it;
			goto _iter_begin_206110778;
		}
		_iter_end_206110778:;
	};
}



inline void _203332052_slicing(_20332e714_exprDeadCode* _self_, jule::Ptr<_201015d9d_SlicingExprModel> _12026_m) {
	_203335a17_optimize(_self_, &(_12026_m.get()._field_Expr));
	_203335a17_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_203335a17_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _2033322c7_traitSub(_20332e714_exprDeadCode* _self_, jule::Ptr<_2010163dc_TraitSubIdentExprModel> _12827_m) {
	_203335a17_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _20333254c_structureSub(_20332e714_exprDeadCode* _self_, jule::Ptr<_201016bc3_StructSubIdentExprModel> _13231_m) {
	_203335a17_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _2033327c2_commonSub(_20332e714_exprDeadCode* _self_, jule::Ptr<_201017c7e_CommonSubIdentExprModel> _13628_m) {
	_203335a17_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _203332a47_tuple(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101807b_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206114606:;
		if (it != expr_end) {
			jule::Ptr<_2010edb23_Data> _14121_d = *it;
			{
				_203335a17_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_206114606:;
			++it;
			goto _iter_begin_206114606;
		}
		_iter_end_206114606:;
	};
}



inline void _203332cbc_newCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_201019049_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_203335a17_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _203333042_outCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_201018455_BuiltinOutCallExprModel> _15226_m) {
	_203335a17_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _2033332b7_outlnCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_201018840_BuiltinOutlnCallExprModel> _15628_m) {
	_203335a17_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _20333353c_panicCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_201019434_BuiltinPanicCallExprModel> _16028_m) {
	_203335a17_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _2033337b2_assertCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_2010198da_BuiltinAssertCallExprModel> _16429_m) {
	_203335a17_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _203333a37_errorCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101b7bb_BuiltinErrorCallExprModel> _16828_m) {
	_203335a17_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _203333cac_makeCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_201019d91_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_203335a17_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_203335a17_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _203334032_appendCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101a27b_BuiltinAppendCallExprModel> _18129_m) {
	_203335a17_optimize(_self_, &(_18129_m.get()._field_Dest));
	_203335a17_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _2033342a7_lenCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101a59a_BuiltinLenCallExprModel> _18626_m) {
	_203335a17_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _20333452c_capCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101a8b9_BuiltinCapCallExprModel> _19026_m) {
	_203335a17_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _2033347a2_cloneCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_201018b5e_BuiltinCloneCallExprModel> _19428_m) {
	_203335a17_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _203334a27_deleteCall(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101b06d_BuiltinDeleteCallExprModel> _19829_m) {
	_203335a17_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_203335a17_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _203334c9c_sizeof(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101bab8_SizeofExprModel> _20525_m) {
	_203335a17_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _203335022_alignof(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101bda4_AlignofExprModel> _20926_m) {
	_203335a17_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _203335297_integratedToStr(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101c49d_IntegratedToStrExprModel> _21334_m) {
	_203335a17_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _20333551c_free(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101cb52_FreeExprModel> _21723_m) {
	_203335a17_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _203335792_backendEmit(_20332e714_exprDeadCode* _self_, jule::Ptr<_20101c866_BackendEmitExprModel> _22130_m) {
	_203330cdc_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _203335a17_optimize(_20332e714_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_206120ed6:;
			{
				_203330072_binary(_self_, (*(_22528_model)).cast_ptr<_2010124d7_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_20612105d:;
			{
				_2033302e7_unary(_self_, (*(_22528_model)).cast_ptr<_20101288e_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_2061210d5:;
			{
				_20333056c_structureLit(_self_, (*(_22528_model)).cast_ptr<_201013142_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_2061214ae:;
			{
				_2033307e2_allocStructure(_self_, (*(_22528_model)).cast_ptr<_201013450_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_206121525:;
			{
				_203330a67_casting(_self_, (*(_22528_model)).cast_ptr<_2010139a0_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_20612159c:;
			{
				_203331062_funcCall(_self_, (*(_22528_model)).cast_ptr<_201014352_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_206121624:;
			{
				_2033312d7_slice(_self_, (*(_22528_model)).cast_ptr<_201014709_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_20612169b:;
			{
				_20333155c_array(_self_, (*(_22528_model)).cast_ptr<_201017432_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_206121723:;
			{
				_2033317d2_indexing(_self_, (*(_22528_model)).cast_ptr<_201014b7c_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_20612179a:;
			{
				_203331a57_anonFunc(_self_, (*(_22528_model)).cast_ptr<_201015034_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_206121822:;
			{
				_203331ccc_mapExpr(_self_, (*(_22528_model)).cast_ptr<_20101585e_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_206121899:;
			{
				_203332052_slicing(_self_, (*(_22528_model)).cast_ptr<_201015d9d_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_206121921:;
			{
				_2033322c7_traitSub(_self_, (*(_22528_model)).cast_ptr<_2010163dc_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_206121998:;
			{
				_20333254c_structureSub(_self_, (*(_22528_model)).cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_206121a20:;
			{
				_2033327c2_commonSub(_self_, (*(_22528_model)).cast_ptr<_201017c7e_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_206121a97:;
			{
				_203332a47_tuple(_self_, (*(_22528_model)).cast_ptr<_20101807b_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_206121b1e:;
			{
				_203333042_outCall(_self_, (*(_22528_model)).cast_ptr<_201018455_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_206121b96:;
			{
				_2033332b7_outlnCall(_self_, (*(_22528_model)).cast_ptr<_201018840_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_206121c1d:;
			{
				_203332cbc_newCall(_self_, (*(_22528_model)).cast_ptr<_201019049_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_206121c95:;
			{
				_20333353c_panicCall(_self_, (*(_22528_model)).cast_ptr<_201019434_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_206121d1c:;
			{
				_2033337b2_assertCall(_self_, (*(_22528_model)).cast_ptr<_2010198da_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_206121d94:;
			{
				_203333a37_errorCall(_self_, (*(_22528_model)).cast_ptr<_20101b7bb_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_206121e1b:;
			{
				_203333cac_makeCall(_self_, (*(_22528_model)).cast_ptr<_201019d91_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_206121e93:;
			{
				_203334032_appendCall(_self_, (*(_22528_model)).cast_ptr<_20101a27b_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_20612201a:;
			{
				_2033342a7_lenCall(_self_, (*(_22528_model)).cast_ptr<_20101a59a_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_206122092:;
			{
				_20333452c_capCall(_self_, (*(_22528_model)).cast_ptr<_20101a8b9_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_206122119:;
			{
				_2033347a2_cloneCall(_self_, (*(_22528_model)).cast_ptr<_201018b5e_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_206122191:;
			{
				_203334a27_deleteCall(_self_, (*(_22528_model)).cast_ptr<_20101b06d_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_206122218:;
			{
				_203334c9c_sizeof(_self_, (*(_22528_model)).cast_ptr<_20101bab8_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_206122290:;
			{
				_203335022_alignof(_self_, (*(_22528_model)).cast_ptr<_20101bda4_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_206122317:;
			{
				_203335297_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_20101c49d_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_20612238e:;
			{
				_20333551c_free(_self_, (*(_22528_model)).cast_ptr<_20101cb52_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_206122416:;
			{
				_203335792_backendEmit(_self_, (*(_22528_model)).cast_ptr<_20101c866_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_2061211d4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20332e714_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201205147_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2012054cc_StrAppendExprModel _Src) {
	_Stream << "StrAppendExprModel{";
	_Stream << "Str:" << _Src._field_Str << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2012057b8_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201205b4d_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201205ed3_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20120638a_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2012068c9_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _201206db3_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_201207e19_scopeOptimizer> static__201208436_new(jule::Ptr<_20105c92d_Scope> _4623_scope) {
	return jule::new_ptr<_201207e19_scopeOptimizer>(_201207e19_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _2012086ab_setCurrentStmt(_201207e19_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _201208931_optimizeData(_201207e19_scopeOptimizer* _self_, jule::Ptr<_2010edb23_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_20615bd13:;
			{
				jule::Ptr<_201014352_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_201014352_FnCallExprModel>(&__jule_any_type35);;
				if (_216de596a_Production) {
					if (((!(_201024692_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _20120badd_isStdPackage(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_2012086ab_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_20615bb04:;
	};
	static__20120dd10_optimize(&(_5635_d.get()._field_Model));
}



inline void _201208ba6_optimizeVar(_201207e19_scopeOptimizer* _self_, jule::Ptr<_2010a4975_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__20120dd10_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _201208e2b_optimizeConditional(_201207e19_scopeOptimizer* _self_, jule::Ptr<_20105d489_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20615ea08:;
		if (it != expr_end) {
			jule::Ptr<_20105cd29_If> _7821_elif = *it;
			{
				static__20120dd10_optimize(&(_7821_elif.get()._field_Expr));
				_20120b4c2_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_20615ea08:;
			++it;
			goto _iter_begin_20615ea08;
		}
		_iter_end_20615ea08:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_20120b4c2_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_2012175dd_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206161675:;
		if (it != expr_end) {
			jule::I32 _9314_i = it - expr->begin();
			jule::Ptr<_20105cd29_If> _9321_elif = *it;
			{
				if ((!(_20120bdeb_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_206161675;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_20105d115_Else>(_20105d115_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_206161675;
			}
			_iter_next_206161675:;
			++it;
			_9314_i++;
			goto _iter_begin_206161675;
		}
		_iter_end_206161675:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_20105cd29_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_20105cd29_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_20120c78c_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_20616447a:;
	}
	_iter_end_20616447a:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I32 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206165987:;
		if (it != expr_end) {
			jule::I32 _13013_j = it - expr->begin();
			jule::Ptr<_20105cd29_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_206165987:;
			++it;
			_13013_j++;
			goto _iter_begin_206165987;
		}
		_iter_end_206165987:;
	};
	if ((_12917_only != -1LL)) {
		_2012086ab_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _201209316_buildDefaultConstantTrueCase(_201207e19_scopeOptimizer* _self_, jule::Ptr<_201062290_Case> _14651_case, jule::I32* _14669_i, jule::Ptr<_201061745_Match>* _14682_m) {
	_14651_case.get()._field_Exprs=nullptr;
	jule::I32 _14813_start = (*(_14669_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14651_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_20616825e;
			};
			jule::Any *_15422_stmt = &(_14651_case.get()._field_Scope.get()._field_Stmts[(_14651_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_206168902:;
					{
						((*(_14669_i)))++;
						if (((*(_14669_i)) >= (*(_14682_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14682_m)).get()._field_Default.get()._field_Scope, &__jule_any_type22);
							goto _iter_end_20616825e;
						};
						_14651_case=(*(_14682_m)).get()._field_Cases[(*(_14669_i))];
						(*(_15422_stmt))=jule::Any(_14651_case.get()._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_206169b78:;
					{
						goto _iter_end_20616825e;
					}
				}
				_match_end_206169a8a:;
			};
		}
	_iter_next_20616825e:;
	}
	_iter_end_20616825e:;;
	(*(_14682_m)).get()._field_Default=(*(_14682_m)).get()._field_Cases[_14813_start];
	(*(_14682_m)).get()._field_Cases=(*(_14682_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _201209525_optimizeMatch(_201207e19_scopeOptimizer* _self_, jule::Ptr<_201061745_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20616bb14:;
		if (it != expr_end) {
			jule::Ptr<_201062290_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20616c450:;
					if (it != expr_end) {
						jule::Ptr<_2010edb23_Data> _17425_expr = *it;
						{
							static__20120dd10_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_20616c450:;
						++it;
						goto _iter_begin_20616c450;
					}
					_iter_end_20616c450:;
				};
				_20120b4c2_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_20616bb14:;
			++it;
			goto _iter_begin_20616bb14;
		}
		_iter_end_20616bb14:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_20120b4c2_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_2012175dd_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20616dcc0:;
		if (it != expr_end) {
			jule::I32 _19018_i = it - expr->begin();
			jule::Ptr<_201062290_Case> _19025_case = *it;
			{
				if ((!(_20120c4e5_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_20616dcc0;
				};
				_18717_constCase=true;
				_201209316_buildDefaultConstantTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_20616dcc0;
			}
			_iter_next_20616dcc0:;
			++it;
			_19018_i++;
			goto _iter_begin_20616dcc0;
		}
		_iter_end_20616dcc0:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_201062290_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_201062290_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_20120ca45_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_206171564:;
	}
	_iter_end_206171564:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I32 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206172576:;
		if (it != expr_end) {
			jule::I32 _22013_j = it - expr->begin();
			jule::Ptr<_201062290_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_206172576:;
			++it;
			_22013_j++;
			goto _iter_begin_206172576;
		}
		_iter_end_206172576:;
	};
	if ((_21917_only != -1LL)) {
		_2012086ab_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _20120979a_optimizeRangeIter(_201207e19_scopeOptimizer* _self_, jule::Ptr<_20105e5cd_RangeIter> _23640_it) {
	static__20120dd10_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_20120b4c2_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _201209a20_optimizeWhileIter(_201207e19_scopeOptimizer* _self_, jule::Ptr<_20105dbe8_WhileIter> _24140_it) {
	static__20120dd10_optimize(&(_24140_it.get()._field_Expr));
	_20120b24c_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_20120b4c2_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _201209d2d_substr(_201207e19_scopeOptimizer* _self_, jule::Ptr<_201060c83_Assign> _24729_a) {
	if ((!_24729_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_206176712:;
			{
				jule::Ptr<_201015d9d_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_201015d9d_SlicingExprModel>(&__jule_any_type97);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_2012086ab_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_2012068c9_MutSlicingExprModel>(_2012068c9_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_2061766ac:;
	};
	return false;;
}



inline jule::Bool _20120a13b_strInsert(_201207e19_scopeOptimizer* _self_, jule::Ptr<_201060c83_Assign> _26732_a) {
	if ((!_26732_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _26732_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_2061790a5:;
			{
				jule::Ptr<_2010124d7_BinopExprModel> _27321_m = _26732_a.get()._field_R.get()._field_Model.cast_ptr<_2010124d7_BinopExprModel>(&__jule_any_type114);;
				if ((_27321_m.get()._field_Right.get()._field_Model == _26732_a.get()._field_L.get()._field_Model)) {
					_2012086ab_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_201206db3_StrInsertBeginExprModel>(_201206db3_StrInsertBeginExprModel{._field_Dest=_26732_a.get()._field_L.get()._field_Model, ._field_Expr=_27321_m.get()._field_Left.get()._field_Model}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_206179050:;
	};
	return false;;
}



inline jule::Bool _20120a449_strAppend(_201207e19_scopeOptimizer* _self_, jule::Ptr<_201060c83_Assign> _28532_a) {
	if ((!_28532_a.get()._field_Op.get()._field_Kind.equal("+=", 2))) {
		return false;;
	};
	{
		auto &_match_expr{ _28532_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_20617b948:;
			{
				_2012086ab_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_2012054cc_StrAppendExprModel>(_2012054cc_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_28532_a.get()._field_R.get()._field_Model}), &__jule_any_type125));
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_20617b9ae:;
			{
				jule::Ptr<_2010139a0_CastingExprModel> _30021_c = _28532_a.get()._field_R.get()._field_Model.cast_ptr<_2010139a0_CastingExprModel>(&__jule_any_type98);;
				jule::Ptr<_201138850_Prim> _30121_prim = _201133817_Prim(_30021_c.get()._field_ExprKind.ptr());;
				if (((_30121_prim == nullptr) && (_201134791_Slc(_30021_c.get()._field_ExprKind.ptr()) != nullptr))) {
					_30121_prim=_201133817_Prim(_201134791_Slc(_30021_c.get()._field_ExprKind.ptr()).get()._field_Elem.ptr());
				};
				if (((_30121_prim == nullptr) || ((!(_20113a126_IsU8(_30121_prim.ptr()))) && (!(_201139b4d_IsI32(_30121_prim.ptr())))))) {
					goto _match_end_20617b8e3;
				};
				_2012086ab_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_2012054cc_StrAppendExprModel>(_2012054cc_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_30021_c.get()._field_Expr}), &__jule_any_type125));
				return true;;
			}
		}
		_match_end_20617b8e3:;
	};
	return false;;
}



inline jule::Bool _20120a757_strAssign(_201207e19_scopeOptimizer* _self_, jule::Ptr<_201060c83_Assign> _31732_a) {
	if ((!(_2012178a7_Str))) {
		return false;;
	};
	jule::Ptr<_201138850_Prim> _32113_lp = _201133817_Prim(_31732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_32113_lp == nullptr) || (!(_20113ba51_IsStr(_32113_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_201209d2d_substr(_self_, _31732_a) || _20120a13b_strInsert(_self_, _31732_a) || _20120a449_strAppend(_self_, _31732_a)) {
			_case_begin_2061821ac:;
			{
				return true;;
			}
		}
		_match_end_206182157:;
	};
	return false;;
}



inline void _20120a9cc_optimizeAssign(_201207e19_scopeOptimizer* _self_, jule::Ptr<_201060c83_Assign> _33437_assign) {
	if (_20120a757_strAssign(_self_, _33437_assign)) {
		return;;
	};
	static__20120dd10_optimize(&(_33437_assign.get()._field_L.get()._field_Model));
	static__20120dd10_optimize(&(_33437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _33437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_20618408d:;
			{
				if ((_2012168b7_Math && (_201134c69_Struct(_33437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_33437_assign.get()._field_Op.get()._field_Kind=_33437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_33437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _34725_model = jule::Any(jule::new_ptr<_2010124d7_BinopExprModel>(_2010124d7_BinopExprModel{._field_Left=_33437_assign.get()._field_L, ._field_Right=_33437_assign.get()._field_R, ._field_Op=_33437_assign.get()._field_Op}), &__jule_any_type114);;
					static__20120dd10_optimize(&(_34725_model));
					{
						auto &_match_expr{ _34725_model };
						
						if (_match_expr.type == &__jule_any_type114) {
							_case_begin_206186513:;
							{
								_33437_assign.get()._field_R=jule::new_ptr<_201012020_OperandExprModel>((*(_33437_assign.get()._field_R)));
								_33437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_33437_assign.get()._field_R.get()._field_Model=_34725_model;
								return;;
							}
						}
						_match_end_2061863ae:;
					};
					(_33437_assign.get()._field_Op.get()._field_Kind).append("=", 1);
					return;;
				};
			}
		}
		_match_end_206183e8e:;
	};
	if (_2012165a9_Append) {
		{
			auto &_match_expr{ _33437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_206187c2e:;
				{
					jule::Ptr<_20101a27b_BuiltinAppendCallExprModel> _36825_m = _33437_assign.get()._field_R.get()._field_Model.cast_ptr<_20101a27b_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_2012157c8_areSameLvalueExprModel(&(_33437_assign.get()._field_L.get()._field_Model), &(_36825_m.get()._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ _36825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type82) {
							_case_begin_206188ea5:;
							{
								_2012086ab_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_201205ed3_PushToSliceExprModel>(_201205ed3_PushToSliceExprModel{._field_Dest=_36825_m.get()._field_Dest, ._field_Elems=_36825_m.get()._field_Elements.cast_ptr<_201014709_SliceExprModel>(&__jule_any_type82)}), &__jule_any_type126));
							}
						}
						else {
							_case_begin_2061892c4:;
							{
								_2012086ab_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_20120638a_AppendToSliceExprModel>(_20120638a_AppendToSliceExprModel{._field_Dest=_33437_assign.get()._field_L.get()._field_Model, ._field_Slice=_36825_m.get()._field_Elements}), &__jule_any_type127));
							}
						}
						_match_end_20618926e:;
					};
				}
			}
			_match_end_206185963:;
		};
	};
}



inline void _20120ac52_optimizeMultiAssign(_201207e19_scopeOptimizer* _self_, jule::Ptr<_20106113a_MultiAssign> _39042_assign) {
	{
		auto expr = &(_39042_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20618a3c4:;
		if (it != expr_end) {
			jule::Ptr<_2010edb23_Data> _39121_l = *it;
			{
				if ((_39121_l != nullptr)) {
					static__20120dd10_optimize(&(_39121_l.get()._field_Model));
				};
			}
			_iter_next_20618a3c4:;
			++it;
			goto _iter_begin_20618a3c4;
		}
		_iter_end_20618a3c4:;
	};
	static__20120dd10_optimize(&(_39042_assign.get()._field_R));
}



inline void _20120aec7_optimizeRet(_201207e19_scopeOptimizer* _self_, jule::Ptr<_201062bb9_RetSt> _39934_r) {
	static__20120dd10_optimize(&(_39934_r.get()._field_Expr));
}



inline void _20120b24c_optimizeStmt(_201207e19_scopeOptimizer* _self_, jule::Any _40335_stmt) {
	{
		auto &_match_expr{ _40335_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_20618c173:;
			{
				_20120b4c2_optimizeChild(_self_, _40335_stmt.cast_ptr<_20105c92d_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_20618c1d9:;
			{
				_201208931_optimizeData(_self_, _40335_stmt.cast_ptr<_2010edb23_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20618c250:;
			{
				_201208ba6_optimizeVar(_self_, _40335_stmt.cast_ptr<_2010a4975_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_20618c2b6:;
			{
				_201208e2b_optimizeConditional(_self_, _40335_stmt.cast_ptr<_20105d489_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_20618c32c:;
			{
				_20120979a_optimizeRangeIter(_self_, _40335_stmt.cast_ptr<_20105e5cd_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_20618c393:;
			{
				_201209a20_optimizeWhileIter(_self_, _40335_stmt.cast_ptr<_20105dbe8_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_20618c409:;
			{
				_20120b4c2_optimizeChild(_self_, _40335_stmt.cast_ptr<_20105d775_InfIter>(&__jule_any_type37).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_20618c470:;
			{
				_20120a9cc_optimizeAssign(_self_, _40335_stmt.cast_ptr<_201060c83_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_20618c4d6:;
			{
				_20120ac52_optimizeMultiAssign(_self_, _40335_stmt.cast_ptr<_20106113a_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_20618c55d:;
			{
				_201209525_optimizeMatch(_self_, _40335_stmt.cast_ptr<_201061745_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_20618c5d5:;
			{
				_20120aec7_optimizeRet(_self_, _40335_stmt.cast_ptr<_201062bb9_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_20618c01e:;
	};
}



inline void _20120b4c2_optimizeChild(_201207e19_scopeOptimizer* _self_, jule::Ptr<_20105c92d_Scope> _43036_child) {
	jule::Ptr<_201207e19_scopeOptimizer> _43117_so = static__201208436_new(_43036_child);;
	_20120b69d_optimize(_43117_so.ptr());
}



inline void _20120b69d_optimize(_201207e19_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206192d8d:;
		if (it != expr_end) {
			jule::I32 _43714_i = it - expr->begin();
			jule::Any _43721_stmt = *it;
			{
				(*(_self_))._field_i=_43714_i;
				_20120b24c_optimizeStmt(_self_, _43721_stmt);
			}
			_iter_next_206192d8d:;
			++it;
			_43714_i++;
			goto _iter_begin_206192d8d;
		}
		_iter_end_206192d8d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _201207e19_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__20120dd10_optimize(jule::Any* _5829_model) {
	if (_2033360bc_exprEnabled) {
		jule::Ptr<_20120d815_exprOptimizer> _6121_exop = jule::new_ptr<_20120d815_exprOptimizer>(_20120d815_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_201215003_do(_6121_exop.ptr());
	};
}



inline jule::Bool _20120e10c_strCond(_20120d815_exprOptimizer* _self_, jule::Ptr<_2010124d7_BinopExprModel> _6826_m) {
	jule::Ptr<_201138850_Prim> _6913_lp = _201133817_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_20113ba51_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((!_6826_m.get()._field_Op.get()._field_Kind.equal("==", 2)) && (!_6826_m.get()._field_Op.get()._field_Kind.equal("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_2061a0a49:;
			{
				({
					jule::Ptr<_201012020_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_201012020_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_2061a09e4:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_20619edab:;
			{
				goto _match_end_2061a17d6;
			}
		}
		else {
			_case_begin_2061a1b27:;
			{
				return true;;
			}
		}
		_match_end_2061a17d6:;
	};
	_julec_label_opt:;
	jule::Ptr<_1ee33c6d2_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1ee33c6d2_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_2061a2be4:;
			{
				if (_1ee33e717_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_201017c7e_CommonSubIdentExprModel>(_201017c7e_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_2061a2b8e;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_201205147_StrCompExprModel>(_201205147_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_2061a2c5a:;
			{
				if (_1ee33e717_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_1ed694d8c_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_20101288e_UnaryExprModel>(_20101288e_UnaryExprModel{._field_Expr=jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Model=jule::Any(jule::new_ptr<_201017c7e_CommonSubIdentExprModel>(_201017c7e_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_2061a2b8e;
				};
				jule::Any _12121_model = jule::Any(jule::new_ptr<_201205147_StrCompExprModel>(_201205147_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12121_model))))));
			}
		}
		_match_end_2061a2b8e:;
	};
	return true;;
}



inline void _20120e382_binary(_20120d815_exprOptimizer* _self_, jule::Ptr<_2010124d7_BinopExprModel> _13125_m) {
	static__20120dd10_optimize(&(_13125_m.get()._field_Left.get()._field_Model));
	static__20120dd10_optimize(&(_13125_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13125_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_2061a94e2:;
			{
				goto _match_end_2061a9019;
			}
		}
		else {
			_case_begin_2061a90b3:;
			{
				return;;
			}
		}
		_match_end_2061a9019:;
	};
	if ((_2012175dd_Cond && _20120e10c_strCond(_self_, _13125_m))) {
		return;;
	};
	if ((!(_2012168b7_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13125_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2061aa0c5:;
			{
				jule::Bool _15118_ok = false;;
				jule::U64 _15122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _201215443_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15118_ok = __jule_assign_result.__jule_result_arg0;
					_15122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15118_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1ee33c6d2_Const> _15425_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1ee33c6d2_Const>(&__jule_any_type19);;
					_1ee3406b3_SetU64(_15425_c.ptr(), _15122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_2061aa13b:;
			{
				jule::Bool _15918_ok = false;;
				jule::U64 _15922_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _201215443_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15918_ok = __jule_assign_result.__jule_result_arg0;
					_15922_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15918_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1ee33c6d2_Const> _16225_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1ee33c6d2_Const>(&__jule_any_type19);;
					_1ee3406b3_SetU64(_16225_c.ptr(), _15922_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2061aa1b3:;
			{
				jule::Ptr<_1ee33c6d2_Const> _16721_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1ee33c6d2_Const>(&__jule_any_type19);;
				jule::F64 _16817_d = _1ee3401b8_AsF64(_16721_c.ptr());;
				if ((_16817_d == 2LL)) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1ee34043d_SetI64(_16721_c.ptr(), 1LL);
				};
			}
		}
		_match_end_2061aa070:;
	};
	jule::Any _17417_model = jule::Any(jule::new_ptr<_2012057b8_UnsafeBinopExprModel>(_2012057b8_UnsafeBinopExprModel{._field_Node=_13125_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17417_model))))));
}



inline void _20120e607_unary(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101288e_UnaryExprModel> _17824_m) {
	static__20120dd10_optimize(&(_17824_m.get()._field_Expr.get()._field_Model));
	if ((_201217214_Ptr && _17824_m.get()._field_Op.get()._field_Kind.equal("*", 1))) {
		{
			auto &_match_expr{ _17824_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_2061b1bae:;
				{
					jule::Ptr<_20101288e_UnaryExprModel> _18325_um = _17824_m.get()._field_Expr.get()._field_Model.cast_ptr<_20101288e_UnaryExprModel>(&__jule_any_type74);;
					if (_18325_um.get()._field_Op.get()._field_Kind.equal("&", 1)) {
						(*((*(_self_))._field_model))=_18325_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_2061b1b59:;
		};
	};
}



inline void _20120e87c_structureLit(_20120d815_exprOptimizer* _self_, jule::Ptr<_201013142_StructLitExprModel> _19131_m) {
	{
		auto expr = &(_19131_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061b362d:;
		if (it != expr_end) {
			jule::Ptr<_201012c8a_StructArgExprModel> _19221_arg = *it;
			{
				static__20120dd10_optimize(&(_19221_arg.get()._field_Expr));
			}
			_iter_next_2061b362d:;
			++it;
			goto _iter_begin_2061b362d;
		}
		_iter_end_2061b362d:;
	};
}



inline void _20120eb02_allocStructure(_20120d815_exprOptimizer* _self_, jule::Ptr<_201013450_AllocStructLitExprModel> _19733_m) {
	_20120e87c_structureLit(_self_, _19733_m.get()._field_Lit);
}



inline void _20120ed77_casting(_20120d815_exprOptimizer* _self_, jule::Ptr<_2010139a0_CastingExprModel> _20126_m) {
	static__20120dd10_optimize(&(_20126_m.get()._field_Expr));
}



inline void _2012100ec_args(_20120d815_exprOptimizer* _self_, jule::Slice<jule::Any>* _20524_args) {
	{
		auto expr = _20524_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061b4e04:;
		if (it != expr_end) {
			jule::I32 _20614_i = it - expr->begin();
			jule::Any _20621_arg = *it;
			{
				static__20120dd10_optimize(&(_20621_arg));
				(*(_20524_args))[_20614_i]=_20621_arg;
			}
			_iter_next_2061b4e04:;
			++it;
			_20614_i++;
			goto _iter_begin_2061b4e04;
		}
		_iter_end_2061b4e04:;
	};
}



inline void _201210372_scope(_20120d815_exprOptimizer* _self_, jule::Ptr<_20105c92d_Scope>* _21225_s) {
	jule::Ptr<_201207e19_scopeOptimizer> _21317_scopt = static__201208436_new((*(_21225_s)));;
	_20120b69d_optimize(_21317_scopt.ptr());
}



inline void _2012105e7_funcCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_201014352_FnCallExprModel> _21727_m) {
	static__20120dd10_optimize(&(_21727_m.get()._field_Expr));
	_2012100ec_args(_self_, &(_21727_m.get()._field_Args));
	if ((_21727_m.get()._field_Except != nullptr)) {
		_201210372_scope(_self_, &(_21727_m.get()._field_Except));
	};
}



inline void _20121086c_slice(_20120d815_exprOptimizer* _self_, jule::Ptr<_201014709_SliceExprModel> _22524_m) {
	_2012100ec_args(_self_, &(_22524_m.get()._field_Elems));
}



inline void _201210ae2_array(_20120d815_exprOptimizer* _self_, jule::Ptr<_201017432_ArrayExprModel> _22924_m) {
	if (((_22924_m.get()._field_Elems.len() == 2LL) && (_22924_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _23121_elem = _22924_m.get()._field_Elems[0LL];;
		static__20120dd10_optimize(&(_23121_elem));
		_22924_m.get()._field_Elems[0LL]=_23121_elem;
	};
	_2012100ec_args(_self_, &(_22924_m.get()._field_Elems));
}



inline void _201210d67_indexing(_20120d815_exprOptimizer* _self_, jule::Ptr<_201014b7c_IndexingExprModel> _23827_m) {
	static__20120dd10_optimize(&(_23827_m.get()._field_Expr.get()._field_Model));
	static__20120dd10_optimize(&(_23827_m.get()._field_Index.get()._field_Model));
	if ((!(_201216b81_Access))) {
		return;;
	};
	jule::Bool _24413_array = (_20113452c_Arr(_23827_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_24413_array && _2010ee492_IsConst(_23827_m.get()._field_Index.ptr()))) {
		jule::Any _24721_model = jule::Any(jule::new_ptr<_201205b4d_UnsafeIndexingExprModel>(_201205b4d_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type130);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_24721_model))))));
		return;;
	};
	{
		auto &_match_expr{ _23827_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2061bc8e0:;
			{
				jule::Ptr<_2010a4975_Var> _25317_i = _23827_m.get()._field_Index.get()._field_Model.cast_ptr<_2010a4975_Var>(&__jule_any_type8);;
				if ((_25317_i.get()._field_Mutable || (_25317_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_2061bc78b;
				};
				{
					auto &_match_expr{ _23827_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_2061be0a6:;
						{
							jule::Ptr<_2010a4975_Var> _25921_r = _23827_m.get()._field_Expr.get()._field_Model.cast_ptr<_2010a4975_Var>(&__jule_any_type8);;
							if ((_25317_i.get()._field_IterRelation.get()._field_Range == _25921_r)) {
								jule::Any _26229_model = jule::Any(jule::new_ptr<_201205b4d_UnsafeIndexingExprModel>(_201205b4d_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26229_model))))));
							};
						}
					}
					_match_end_2061bdc87:;
				};
			}
		}
		_match_end_2061bc78b:;
	};
}



inline void _2012110dc_anonFunc(_20120d815_exprOptimizer* _self_, jule::Ptr<_201015034_AnonFnExprModel> _26927_m) {
	_201210372_scope(_self_, &(_26927_m.get()._field_Func.get()._field_Scope));
}



inline void _201211362_mapExpr(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101585e_MapExprModel> _27326_m) {
	{
		auto expr = &(_27326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061c1592:;
		if (it != expr_end) {
			jule::Ptr<_2010153db_KeyValPairExprModel> _27421_pair = *it;
			{
				static__20120dd10_optimize(&(_27421_pair.get()._field_Key));
				static__20120dd10_optimize(&(_27421_pair.get()._field_Val));
			}
			_iter_next_2061c1592:;
			++it;
			goto _iter_begin_2061c1592;
		}
		_iter_end_2061c1592:;
	};
}



inline void _2012115d7_slicing(_20120d815_exprOptimizer* _self_, jule::Ptr<_201015d9d_SlicingExprModel> _28026_m) {
	static__20120dd10_optimize(&(_28026_m.get()._field_Expr));
	static__20120dd10_optimize(&(_28026_m.get()._field_Left));
	if ((_28026_m.get()._field_Right != nullptr)) {
		static__20120dd10_optimize(&(_28026_m.get()._field_Right));
	};
}



inline void _20121185c_traitSub(_20120d815_exprOptimizer* _self_, jule::Ptr<_2010163dc_TraitSubIdentExprModel> _28827_m) {
	static__20120dd10_optimize(&(_28827_m.get()._field_Expr));
}



inline void _201211ad2_structureSub(_20120d815_exprOptimizer* _self_, jule::Ptr<_201016bc3_StructSubIdentExprModel> _29231_m) {
	static__20120dd10_optimize(&(_29231_m.get()._field_Expr.get()._field_Model));
}



inline void _201211d57_commonSub(_20120d815_exprOptimizer* _self_, jule::Ptr<_201017c7e_CommonSubIdentExprModel> _29628_m) {
	static__20120dd10_optimize(&(_29628_m.get()._field_Expr));
}



inline void _2012120cc_tuple(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101807b_TupleExprModel> _30024_m) {
	{
		auto expr = &(_30024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061c4375:;
		if (it != expr_end) {
			jule::Ptr<_2010edb23_Data> _30121_d = *it;
			{
				static__20120dd10_optimize(&(_30121_d.get()._field_Model));
			}
			_iter_next_2061c4375:;
			++it;
			goto _iter_begin_2061c4375;
		}
		_iter_end_2061c4375:;
	};
}



inline void _201212352_newCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_201019049_BuiltinNewCallExprModel> _30626_m) {
	if ((_30626_m.get()._field_Init != nullptr)) {
		static__20120dd10_optimize(&(_30626_m.get()._field_Init));
	};
}



inline void _2012125c7_outCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_201018455_BuiltinOutCallExprModel> _31226_m) {
	static__20120dd10_optimize(&(_31226_m.get()._field_Expr));
}



inline void _20121284c_outlnCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_201018840_BuiltinOutlnCallExprModel> _31628_m) {
	static__20120dd10_optimize(&(_31628_m.get()._field_Expr));
}



inline void _201212ac2_panicCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_201019434_BuiltinPanicCallExprModel> _32028_m) {
	static__20120dd10_optimize(&(_32028_m.get()._field_Expr));
}



inline void _201212d47_assertCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_2010198da_BuiltinAssertCallExprModel> _32429_m) {
	static__20120dd10_optimize(&(_32429_m.get()._field_Expr));
}



inline void _2012130bc_errorCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101b7bb_BuiltinErrorCallExprModel> _32828_m) {
	static__20120dd10_optimize(&(_32828_m.get()._field_Err.get()._field_Model));
}



inline void _201213342_makeCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_201019d91_BuiltinMakeCallExprModel> _33227_m) {
	if ((_33227_m.get()._field_Len != nullptr)) {
		static__20120dd10_optimize(&(_33227_m.get()._field_Len));
	};
	if ((_33227_m.get()._field_Cap != nullptr)) {
		static__20120dd10_optimize(&(_33227_m.get()._field_Cap));
	};
}



inline void _2012135b7_appendCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101a27b_BuiltinAppendCallExprModel> _34129_m) {
	static__20120dd10_optimize(&(_34129_m.get()._field_Dest));
	static__20120dd10_optimize(&(_34129_m.get()._field_Elements));
}



inline void _20121383c_lenCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101a59a_BuiltinLenCallExprModel> _34626_m) {
	static__20120dd10_optimize(&(_34626_m.get()._field_Expr.get()._field_Model));
}



inline void _201213ab2_capCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101a8b9_BuiltinCapCallExprModel> _35026_m) {
	static__20120dd10_optimize(&(_35026_m.get()._field_Expr.get()._field_Model));
}



inline void _201213d37_cloneCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_201018b5e_BuiltinCloneCallExprModel> _35428_m) {
	static__20120dd10_optimize(&(_35428_m.get()._field_Expr));
}



inline void _2012140ac_deleteCall(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101b06d_BuiltinDeleteCallExprModel> _35829_m) {
	static__20120dd10_optimize(&(_35829_m.get()._field_Dest.get()._field_Model));
	if ((_35829_m.get()._field_Key != nullptr)) {
		static__20120dd10_optimize(&(_35829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _201214332_sizeof(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101bab8_SizeofExprModel> _36525_m) {
	static__20120dd10_optimize(&(_36525_m.get()._field_Expr));
}



inline void _2012145a7_alignof(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101bda4_AlignofExprModel> _36926_m) {
	static__20120dd10_optimize(&(_36926_m.get()._field_Expr));
}



inline void _20121482c_integratedToStr(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101c49d_IntegratedToStrExprModel> _37334_m) {
	static__20120dd10_optimize(&(_37334_m.get()._field_Expr));
}



inline void _201214aa2_free(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101cb52_FreeExprModel> _37723_m) {
	static__20120dd10_optimize(&(_37723_m.get()._field_Expr));
}



inline void _201214d27_backendEmit(_20120d815_exprOptimizer* _self_, jule::Ptr<_20101c866_BackendEmitExprModel> _38130_m) {
	_2012100ec_args(_self_, &(_38130_m.get()._field_Exprs));
}



inline void _201215003_do(_20120d815_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_2061cc834:;
			{
				_20120e382_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_2010124d7_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_2061ccb31:;
			{
				_20120e607_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101288e_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_2061ccb97:;
			{
				_20120e87c_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_201013142_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_2061ccc0d:;
			{
				_20120eb02_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_201013450_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_2061ccc74:;
			{
				_20120ed77_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_2010139a0_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_2061ccceb:;
			{
				_2012105e7_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_201014352_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_2061ccd73:;
			{
				_20121086c_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_201014709_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_2061ccdea:;
			{
				_201210ae2_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_201017432_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_2061cce72:;
			{
				_201210d67_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_201014b7c_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_2061ccee9:;
			{
				_2012110dc_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_201015034_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_2061cd071:;
			{
				_201211362_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101585e_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_2061cd0e8:;
			{
				_2012115d7_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_201015d9d_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_2061cd170:;
			{
				_20121185c_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_2010163dc_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_2061cd1e7:;
			{
				_201211ad2_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_2061cd26e:;
			{
				_201211d57_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_201017c7e_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_2061cd2e6:;
			{
				_2012120cc_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101807b_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_2061cd36d:;
			{
				_2012125c7_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_201018455_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_2061cd3e5:;
			{
				_20121284c_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_201018840_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_2061cd46c:;
			{
				_201212352_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_201019049_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_2061cd4e4:;
			{
				_201212ac2_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_201019434_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_2061cd56b:;
			{
				_201212d47_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2010198da_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_2061cd5e3:;
			{
				_2012130bc_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101b7bb_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_2061cd66a:;
			{
				_201213342_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_201019d91_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_2061cd6e2:;
			{
				_2012135b7_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101a27b_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_2061cd769:;
			{
				_20121383c_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101a59a_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_2061cd7e1:;
			{
				_201213ab2_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101a8b9_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_2061cd868:;
			{
				_201213d37_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_201018b5e_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_2061cd8e0:;
			{
				_2012140ac_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101b06d_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_2061cd967:;
			{
				_201214332_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101bab8_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_2061cd9de:;
			{
				_2012145a7_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101bda4_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_2061cda66:;
			{
				_20121482c_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101c49d_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_2061cdadd:;
			{
				_201214aa2_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101cb52_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_2061cdb65:;
			{
				_201214d27_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_20101c866_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_2061cc7ce:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _20120d815_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203336485_Optimizer> static__2033368e7_New(jule::Ptr<_2031e99ca_IR>* _2524_ir) {
	return jule::new_ptr<_203336485_Optimizer>(_203336485_Optimizer{._field_ir=(*(_2524_ir))});;
}



inline void _203336b6c_optimizeGlobal(_203336485_Optimizer* _self_, jule::Ptr<_2010a4975_Var>* _3138_v) {
	if ((!((*(_3138_v)).get()._field_Binded))) {
		static__20120dd10_optimize(&((*(_3138_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _203336de2_optimizeFunction(_203336485_Optimizer* _self_, jule::Ptr<_20102065a_Fn>* _3740_func) {
	if ((*(_3740_func)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_3740_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061e4164:;
		if (it != expr_end) {
			jule::Ptr<_20102330b_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_201207e19_scopeOptimizer> _4221_so = static__201208436_new(_4121_ins.get()._field_Scope);;
				_20120b69d_optimize(_4221_so.ptr());
			}
			_iter_next_2061e4164:;
			++it;
			goto _iter_begin_2061e4164;
		}
		_iter_end_2061e4164:;
	};
}



inline void _203337167_optimizeStruct(_203336485_Optimizer* _self_, jule::Ptr<_20100a25a_Struct>* _4738_s) {
	if ((*(_4738_s)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_4738_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061e5583:;
		if (it != expr_end) {
			jule::Ptr<_20100d071_StructIns> _5121_ins = *it;
			{
				{
					auto expr = &(_5121_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2061e5c8c:;
					if (it != expr_end) {
						jule::Ptr<_20100c57b_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__20120dd10_optimize(&(_5225_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_2061e5c8c:;
						++it;
						goto _iter_begin_2061e5c8c;
					}
					_iter_end_2061e5c8c:;
				};
				{
					auto expr = &(_5121_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2061e6b06:;
					if (it != expr_end) {
						jule::Ptr<_20102065a_Fn> _5725_m = *it;
						{
							_203336de2_optimizeFunction(_self_, &(_5725_m));
						}
						_iter_next_2061e6b06:;
						++it;
						goto _iter_begin_2061e6b06;
					}
					_iter_end_2061e6b06:;
				};
			}
			_iter_next_2061e5583:;
			++it;
			goto _iter_begin_2061e5583;
		}
		_iter_end_2061e5583:;
	};
}



inline void _2033373dc_optimizeGlobals(_203336485_Optimizer* _self_, jule::Ptr<_20107ded2_Package>* _6339_p) {
	{
		auto expr = &((*(_6339_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061e7013:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _6421_f = *it;
			{
				{
					auto expr = &(_6421_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2061e7c4a:;
					if (it != expr_end) {
						jule::Ptr<_2010a4975_Var> _6525_v = *it;
						{
							_203336b6c_optimizeGlobal(_self_, &(_6525_v));
						}
						_iter_next_2061e7c4a:;
						++it;
						goto _iter_begin_2061e7c4a;
					}
					_iter_end_2061e7c4a:;
				};
			}
			_iter_next_2061e7013:;
			++it;
			goto _iter_begin_2061e7013;
		}
		_iter_end_2061e7013:;
	};
}



inline void _203337662_optimizeFunctions(_203336485_Optimizer* _self_, jule::Ptr<_20107ded2_Package>* _7141_p) {
	{
		auto expr = &((*(_7141_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061e8256:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _7221_f = *it;
			{
				{
					auto expr = &(_7221_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2061e8e6b:;
					if (it != expr_end) {
						jule::Ptr<_20102065a_Fn> _7325_func = *it;
						{
							_203336de2_optimizeFunction(_self_, &(_7325_func));
						}
						_iter_next_2061e8e6b:;
						++it;
						goto _iter_begin_2061e8e6b;
					}
					_iter_end_2061e8e6b:;
				};
			}
			_iter_next_2061e8256:;
			++it;
			goto _iter_begin_2061e8256;
		}
		_iter_end_2061e8256:;
	};
}



inline void _2033378d7_optimizeStructs(_203336485_Optimizer* _self_, jule::Ptr<_20107ded2_Package>* _7939_p) {
	{
		auto expr = &((*(_7939_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2061e9477:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2061ea18c:;
					if (it != expr_end) {
						jule::Ptr<_20100a25a_Struct> _8125_s = *it;
						{
							_203337167_optimizeStruct(_self_, &(_8125_s));
						}
						_iter_next_2061ea18c:;
						++it;
						goto _iter_begin_2061ea18c;
					}
					_iter_end_2061ea18c:;
				};
			}
			_iter_next_2061e9477:;
			++it;
			goto _iter_begin_2061e9477;
		}
		_iter_end_2061e9477:;
	};
}



inline void _203337b5c_optimizePackage(_203336485_Optimizer* _self_, jule::Ptr<_20107ded2_Package>* _8739_p) {
	_2033373dc_optimizeGlobals(_self_, _8739_p);
	_203337662_optimizeFunctions(_self_, _8739_p);
	_2033378d7_optimizeStructs(_self_, _8739_p);
}



inline void _203337d38_Optimize(_203336485_Optimizer* _self_) {
	_20333809c_detectEnabled();
	if (_2012162e0_Deadcode) {
		_20332938a_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_2033362dc_scopeEnabled || _2033360bc_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2061ebb2d:;
			if (it != expr_end) {
				jule::Ptr<_20107b397_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_Binded))) {
						_203337b5c_optimizePackage(_self_, &(_10325_u.get()._field_Package));
					};
				}
				_iter_next_2061ebb2d:;
				++it;
				goto _iter_begin_2061ebb2d;
			}
			_iter_end_2061ebb2d:;
		};
		_203337b5c_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_2012162e0_Deadcode) {
		_20332e13c_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _203336485_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__20333872e_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__2033578b3_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__20333872e_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _20335894c_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__20335a223_LogFlat(_2193a460d_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__20335a432_LogError(_2193a460d_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__20333872e_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1ee32cd10_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1ee32cd10_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _219320348_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I32 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I32 _3821_oldLen = _3621_line.len();;
		_3621_line=_219320348_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1ee32cd10_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_219317a27_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_219317a27_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_219317a27_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__2033578b3_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__20335a641_Log(_2193a460d_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_206209883:;
			{
				static__20335a223_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_2062098e9:;
			{
				static__20335a432_LogError(_6520_l);
			}
		}
		_match_end_206209795:;
	};
}



inline void static__20335a850_PrintLogs(jule::Slice<_2193a460d_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20620a785:;
		if (it != expr_end) {
			_2193a460d_Log *_7616_l = it;
			{
				static__20335a641_Log(_7616_l);
			}
			_iter_next_20620a785:;
			++it;
			goto _iter_begin_20620a785;
		}
		_iter_end_20620a785:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1ee32cd10_Itoa(static_cast<jule::I32>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _203359ed1_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _203b03229_Unix(_203b02db6_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*(_self_))._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*(_self_))._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _203b05803_unixYearToSeconds(_5717_y, &(_5617_leap));;
	_6817_t+=_203b05b88_unixMonthToSeconds(_5817_m, _5617_leap);
	_6817_t+=(86400LLU * ((*(_self_))._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*(_self_))._field_Hour);
	_6817_t+=(60LLU * (*(_self_))._field_Minute);
	_6817_t+=(*(_self_))._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _203b02db6_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _203b03559_Time static__203b03900_Unix(jule::U64 _9120_sec) {
	return _203b03559_Time{._field_sec=_9120_sec};;
}



inline _203b03559_Time static__203b03aed_Now(void) {
	return static__203b03900_Unix(static_cast<jule::U64>(_203b054e5_unix()));;
}



inline jule::U64 _203b03ec7_Unix(_203b03559_Time* _self_) {
	return (*(_self_))._field_sec;;
}



inline jule::U64 _203b0423b_Day(_203b03559_Time* _self_) {
	return _203b051b5_Abs(_self_)._field_Day;;
}



inline jule::U64 _203b044a0_Month(_203b03559_Time* _self_) {
	return _203b051b5_Abs(_self_)._field_Month;;
}



inline jule::U64 _203b04714_Year(_203b03559_Time* _self_) {
	return _203b051b5_Abs(_self_)._field_Year;;
}



inline jule::U64 _203b04978_Second(_203b03559_Time* _self_) {
	return _203b051b5_Abs(_self_)._field_Second;;
}



inline jule::U64 _203b04bdc_Minute(_203b03559_Time* _self_) {
	return _203b051b5_Abs(_self_)._field_Minute;;
}



inline jule::U64 _203b04e51_Hour(_203b03559_Time* _self_) {
	return _203b051b5_Abs(_self_)._field_Hour;;
}



inline _203b02db6_AbsTime _203b051b5_Abs(_203b03559_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_203b02448_mdays[static_cast<jule::I32>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_203b02448_mdays[static_cast<jule::I32>(_16917_months)];
		}
	_iter_next_20623d1e1:;
	}
	_iter_end_20623d1e1:;;
	_203b02db6_AbsTime _17417_t = _203b02db6_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _203b03559_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203a4cb46_scopeCoder> static__203a4d240_new(jule::Ptr<_203b0c5da_ObjectCoder>* _6624_oc) {
	return jule::new_ptr<_203a4cb46_scopeCoder>(_203a4cb46_scopeCoder{._field_oc=(*(_6624_oc))});;
}



inline void _2062d130b_iterHead(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20105e5cd_RangeIter>* _7332_it, jule::Bool* _7344_ref, jule::Str* _7356_begin) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_203b0d18a_addIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_201215ed2_Copy && _203a5380b_isCopyOptimizable(&((*(_7332_it)).get()._field_Expr)))) {
		(*(_7344_ref))=true;
		{
			auto &_match_expr{ (*(_7332_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_2062d29a0:;
				{
					jule::Ptr<_2010a4975_Var> _8221_v = (*(_7332_it)).get()._field_Expr.get()._field_Model.cast_ptr<_2010a4975_Var>(&__jule_any_type8);;
					if (_8221_v.get()._field_Reference) {
						_203a63046_model(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_2062d41cc;
					};
					goto _case_begin_2062d4232;
				}
			}
			else {
				_case_begin_2062d4232:;
				{
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_203a63046_model(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_2062d41cc:;
		};
	} else {
		_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7344_ref))) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7344_ref))) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0ceae_writeR(_self_.get()._field_oc, _7356_begin);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_203b0d18a_addIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
}



inline void _203a4d87d_rangeIndexIter(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20105e5cd_RangeIter>* _12239_it) {
	jule::Str _12313_begin = static__203a6bcec_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));;
	jule::Str _12413_next = static__203a6c33b_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));;
	jule::Bool _12617_ref = false;;
	_2062d130b_iterHead(_self_, _12239_it, &(_12617_ref), &(_12313_begin));
	if (((*(_12239_it)).get()._field_KeyA != nullptr)) {
		_203b15082_varInitExpr(_self_.get()._field_oc, &((*(_12239_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12617_ref) {
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_203b0d542_indent(_self_.get()._field_oc);
	};
	if (((*(_12239_it)).get()._field_KeyB != nullptr)) {
		(*(_12239_it)).get()._field_KeyB.get()._field_Reference=(_201215ed2_Copy && _203a53b91_isIterCopyOptimizable(&((*(_12239_it)).get()._field_Expr), &((*(_12239_it)).get()._field_KeyB)));
		_203b15082_varInitExpr(_self_.get()._field_oc, &((*(_12239_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_12239_it)).get()._field_KeyB.get()._field_Reference) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_203b0d542_indent(_self_.get()._field_oc);
	};
	_203a531e0_scope(_self_, (*(_12239_it)).get()._field_Scope);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0ceae_writeR(_self_.get()._field_oc, &(_12413_next));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_203b0d542_indent(_self_.get()._field_oc);
	if (((*(_12239_it)).get()._field_KeyA != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, static__203a6ba55_var((*(_12239_it)).get()._field_KeyA));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_203b0d542_indent(_self_.get()._field_oc);
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_203b0ceae_writeR(_self_.get()._field_oc, &(_12313_begin));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, static__203a6c094_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it))))));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203a4db03_rangeHashmapIter(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20105e5cd_RangeIter>* _18541_it) {
	jule::Str _18613_begin = static__203a6bcec_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it)))));;
	jule::Str _18713_next = static__203a6c33b_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it)))));;
	jule::Bool _18917_ref = false;;
	_2062d130b_iterHead(_self_, _18541_it, &(_18917_ref), &(_18613_begin));
	if (((*(_18541_it)).get()._field_KeyA != nullptr)) {
		_203b15082_varInitExpr(_self_.get()._field_oc, &((*(_18541_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_203b0d542_indent(_self_.get()._field_oc);
	};
	if (((*(_18541_it)).get()._field_KeyB != nullptr)) {
		_203b15082_varInitExpr(_self_.get()._field_oc, &((*(_18541_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_203b0d542_indent(_self_.get()._field_oc);
	};
	_203a531e0_scope(_self_, (*(_18541_it)).get()._field_Scope);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0ceae_writeR(_self_.get()._field_oc, &(_18713_next));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_203b0ceae_writeR(_self_.get()._field_oc, &(_18613_begin));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, static__203a6c094_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it))))));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203a4dd78_ifCase(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20105cd29_If> _22830_i) {
	if ((_22830_i.get()._field_Expr != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22830_i.get()._field_Expr);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_203a531e0_scope(_self_, _22830_i.get()._field_Scope);
}



inline void _203a4e0ed_conditional(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20105d489_Conditional> _23735_c) {
	jule::Bool _23817_writed = false;;
	{
		auto expr = &(_23735_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206303372:;
		if (it != expr_end) {
			jule::Ptr<_20105cd29_If> _23921_elif = *it;
			{
				if ((_23921_elif == nullptr)) {
					goto _iter_next_206303372;
				};
				if (_23817_writed) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23817_writed=true;
				_203a4dd78_ifCase(_self_, _23921_elif);
			}
			_iter_next_206303372:;
			++it;
			goto _iter_begin_206303372;
		}
		_iter_end_206303372:;
	};
	if ((_23735_c.get()._field_Default != nullptr)) {
		if (_23817_writed) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_203a531e0_scope(_self_, _23735_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _203a4e373_infIter(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20105d775_InfIter> _25731_it) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_203b0d18a_addIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203a531e0_scope(_self_, _25731_it.get()._field_Scope);
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, static__203a6c33b_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25731_it))));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, static__203a6c094_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25731_it))));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _203a4e5e8_whileIter(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20105dbe8_WhileIter> _27433_it) {
	if (((_27433_it.get()._field_Expr != nullptr) && (_27433_it.get()._field_Next == nullptr))) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27433_it.get()._field_Expr);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27433_it.get()._field_Expr != nullptr)) {
			_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27433_it.get()._field_Expr);
		};
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27433_it.get()._field_Next != nullptr)) {
			_203a52be5_st(_self_, _27433_it.get()._field_Next);
		};
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_203b0d18a_addIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203a531e0_scope(_self_, _27433_it.get()._field_Scope);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, static__203a6c33b_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27433_it))));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, static__203a6c094_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27433_it))));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _203a4e86d_rangeIter(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20105e5cd_RangeIter> _30733_it) {
	{
		
		if ((_201134791_Slc(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2063114a1:;
			{
				_203a4d87d_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		else if ((_20113452c_Arr(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20631187a:;
			{
				_203a4d87d_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		else if ((_201135242_Map(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_206311171:;
			{
				_203a4db03_rangeHashmapIter(_self_, &(_30733_it));
			}
		}
		else {
			_case_begin_20631110a:;
			{
				_203a4d87d_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		_match_end_20631103e:;
	};
}



inline void _203a4eae3_cont(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20105e9c9_ContSt> _32024_c) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_203b0cc39_write(_self_.get()._field_oc, static__203a6c33b_iterNext(_32024_c.get()._field_It));
}



inline void _203a4ed68_label(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20106016c_Label> _32525_l) {
	_203b0cc39_write(_self_.get()._field_oc, static__203a6c5d3_label(&(_32525_l.get()._field_Ident)));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _203a500dd_gotoSt(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_201060458_GotoSt> _33026_gt) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_203b0cc39_write(_self_.get()._field_oc, static__203a6c5d3_label(&(_33026_gt.get()._field_Ident)));
}



inline void _203a50363_postfix(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_201060810_Postfix> _33531_p) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33531_p.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
	_203b0ceae_writeR(_self_.get()._field_oc, &(_33531_p.get()._field_Op));
}



inline void _203a505d8_assign(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_201060c83_Assign> _34230_a) {
	_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34230_a.get()._field_L.get()._field_Model);
	_203b0ceae_writeR(_self_.get()._field_oc, &(_34230_a.get()._field_Op.get()._field_Kind));
	_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34230_a.get()._field_R.get()._field_Model);
}



inline void _203a5085d_mapLookupAssign(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20106113a_MultiAssign>* _34840_a) {
	jule::Ptr<_201014b7c_IndexingExprModel> _34917_iem = (*(_34840_a)).get()._field_R.cast_ptr<_201014b7c_IndexingExprModel>(&__jule_any_type46);;
	_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34917_iem.get()._field_Expr.get()._field_Model);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34917_iem.get()._field_Index.get()._field_Model);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34840_a)).get()._field_L[0LL] != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34840_a)).get()._field_L[0LL].get()._field_Model);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34840_a)).get()._field_L[1LL] != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34840_a)).get()._field_L[1LL].get()._field_Model);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a50ad3_multiAssignTup(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20106113a_MultiAssign>* _37139_a) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_203b0d18a_addIndent(_self_.get()._field_oc);
	jule::Ptr<_20101807b_TupleExprModel> _37517_tup = (*(_37139_a)).get()._field_R.cast_ptr<_20101807b_TupleExprModel>(&__jule_any_type87);;
	{
		auto expr = &(_37517_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20631eec6:;
		if (it != expr_end) {
			jule::I32 _37714_i = it - expr->begin();
			jule::Ptr<_2010edb23_Data> _37721_r = *it;
			{
				_203b0d542_indent(_self_.get()._field_oc);
				jule::Ptr<_2010edb23_Data> _37921_l = (*(_37139_a)).get()._field_L[_37714_i];;
				if ((_37921_l != nullptr)) {
					{
						auto &_match_expr{ _37921_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_2063225c2:;
							{
								jule::Ptr<_2010a4975_Var> _38329_v = _37921_l.get()._field_Model.cast_ptr<_2010a4975_Var>(&__jule_any_type8);;
								if ((_38329_v.get()._field_Reference && (!(_2010a4ce9_IsInitialized(_38329_v.ptr()))))) {
									_203b0cc39_write(_self_.get()._field_oc, static__203a6ba55_var(_38329_v));
									_203b0cc39_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37721_r.get()._field_Model);
									_203b0cc39_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_37139_a)).get()._field_L[_37714_i]=nullptr;
									goto _iter_next_20631eec6;
								};
							}
						}
						_match_end_206322418:;
					};
					_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37921_l.get()._field_Kind));
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_203b0cc39_write(_self_.get()._field_oc, static__203a6a05e_toOut(&(_203a4c481_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37714_i))));
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37721_r.get()._field_Model);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_20631eec6:;
			++it;
			_37714_i++;
			goto _iter_begin_20631eec6;
		}
		_iter_end_20631eec6:;
	};
	{
		auto expr = &((*(_37139_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20632685c:;
		if (it != expr_end) {
			jule::I32 _40414_i = it - expr->begin();
			jule::Ptr<_2010edb23_Data> _40421_l = *it;
			{
				if ((_40421_l == nullptr)) {
					goto _iter_next_20632685c;
				};
				_203b0d542_indent(_self_.get()._field_oc);
				_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40421_l.get()._field_Model);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_203b0cc39_write(_self_.get()._field_oc, static__203a6a05e_toOut(&(_203a4c481_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40414_i))));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_20632685c:;
			++it;
			_40414_i++;
			goto _iter_begin_20632685c;
		}
		_iter_end_20632685c:;
	};
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _203a50d58_multiAssignFn(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20106113a_MultiAssign>* _42038_a) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_203b0d18a_addIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	jule::Ptr<_201014352_FnCallExprModel> _42517_f = (*(_42038_a)).get()._field_R.cast_ptr<_201014352_FnCallExprModel>(&__jule_any_type35);;
	_203b25eb6_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42517_f.get()._field_Func.get()._field_Result));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_42038_a)).get()._field_R);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_42038_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20632c247:;
		if (it != expr_end) {
			jule::I32 _43114_i = it - expr->begin();
			jule::Ptr<_2010edb23_Data> _43121_l = *it;
			{
				if ((_43121_l != nullptr)) {
					_203b0d542_indent(_self_.get()._field_oc);
					_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _43121_l.get()._field_Model);
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(_43114_i));
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_20632c247:;
			++it;
			_43114_i++;
			goto _iter_begin_20632c247;
		}
		_iter_end_20632c247:;
	};
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _203a510cd_multiAssign(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20106113a_MultiAssign> _44635_a) {
	{
		auto &_match_expr{ _44635_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_2063303b0:;
			{
				_203a5085d_mapLookupAssign(_self_, &(_44635_a));
				return;;
			}
		}
		_match_end_2063301a1:;
	};
	{
		auto &_match_expr{ _44635_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_2063300d5:;
			{
				_203a50ad3_multiAssignTup(_self_, &(_44635_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_20633079a:;
			{
				_203a50d58_multiAssignFn(_self_, &(_44635_a));
			}
		}
		else {
			_case_begin_206330d0b:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:460:13"));;
			}
		}
		_match_end_206330ca6:;
	};
}



inline jule::Fn<void(void)> _203a513db_matchExpr(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_201061745_Match> _46433_m) {
	if ((!(_2010ee492_IsConst(_46433_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1ee34184b_IsBool(_46433_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1ee33e4a3_ReadBool(_46433_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46433_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _203a5170a_case(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_201061745_Match> _47428_m, jule::Ptr<_201062290_Case> _47443_c) {
	if (((_47443_c.get()._field_Exprs.len() != 0LL) && (!(_47428_m.get()._field_Comptime)))) {
		if (((_47428_m.get()._field_Cases.len() > 0LL) && (_47428_m.get()._field_Cases[0LL] == _47443_c))) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47443_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_206335eba:;
			if (it != expr_end) {
				jule::I32 _48118_i = it - expr->begin();
				jule::Ptr<_2010edb23_Data> _48125_expr = *it;
				{
					{
						
						if ((!(_47428_m.get()._field_TypeMatch))) {
							_case_begin_20633bb3b:;
							{
								jule::Fn<void(void)> _48425_caseExpr = _203a513db_matchExpr(_self_, _47428_m);;
								if (_2010ee7a0_GoodOperand(_47428_m.get()._field_Expr.ptr(), &(_48125_expr))) {
									if ((_48425_caseExpr != nullptr)) {
										_48425_caseExpr();
										_203b0cc39_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _48125_expr.get()._field_Model);
								} else {
									_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _48125_expr.get()._field_Model);
									if ((_48425_caseExpr != nullptr)) {
										_203b0cc39_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48425_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_206336e99:;
							{
								_203b0cc39_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_2011310ea_TypeKind> _50029_tk = _48125_expr.get()._field_Model.cast_ptr<_2011310ea_TypeKind>(&__jule_any_type89);;
								if ((_201134ecd_Trait(_47428_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_203b0cc39_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_203a56941_boolean(_self_.get()._field_oc.get()._field_ec, (_201133a7b_Sptr(_48125_expr.get()._field_Kind.ptr()) != nullptr));
									_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(static_cast<jule::I32>(_203b0e8b7_findTypeOffset(_self_.get()._field_oc.ptr(), _201134ecd_Trait(_47428_m.get()._field_Expr.get()._field_Kind.ptr()), _48125_expr.get()._field_Kind))));
									_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I32 _50829_j = _203b0db5d_pushAnyType(_self_.get()._field_oc, _50029_tk);;
									_203b0cc39_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(_50829_j));
								};
							}
						}
						_match_end_206336dcd:;
					};
					if (((_47443_c.get()._field_Exprs.len() - _48118_i) > 1LL)) {
						_203b0cc39_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_206335eba:;
				++it;
				_48118_i++;
				goto _iter_begin_206335eba;
			}
			_iter_end_206335eba:;
		};
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47428_m.get()._field_Default == _47443_c) && (_47428_m.get()._field_Cases.len() != 0LL))) {
		_203b0d542_indent(_self_.get()._field_oc);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_203b0d18a_addIndent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, static__203a6cb22_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47443_c))));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47443_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_203b0d542_indent(_self_.get()._field_oc);
		_203a531e0_scope(_self_, _47443_c.get()._field_Scope);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203a51980_matchSt(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_201061745_Match> _54231_m) {
	if (((_54231_m.get()._field_Cases.len() == 0LL) && (_54231_m.get()._field_Default == nullptr))) {
		return;;
	};
	if ((_54231_m.get()._field_Comptime && ((_54231_m.get()._field_Default == nullptr) || (_54231_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_203b0d18a_addIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	if (((!(_54231_m.get()._field_Comptime)) && (!(_2010ee492_IsConst(_54231_m.get()._field_Expr.ptr()))))) {
		if ((_201215ed2_Copy && _203a5380b_isCopyOptimizable(&(_54231_m.get()._field_Expr)))) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _54231_m.get()._field_Expr.get()._field_Model);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_203b0d542_indent(_self_.get()._field_oc);
	};
	if ((_54231_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_54231_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20634864d:;
			if (it != expr_end) {
				jule::Ptr<_201062290_Case> _57025_c = *it;
				{
					if ((_57025_c == nullptr)) {
						goto _iter_next_20634864d;
					};
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_203b0d542_indent(_self_.get()._field_oc);
					_203a5170a_case(_self_, _54231_m, _57025_c);
				}
				_iter_next_20634864d:;
				++it;
				goto _iter_begin_20634864d;
			}
			_iter_end_20634864d:;
		};
	};
	if ((_54231_m.get()._field_Default != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_203a5170a_case(_self_, _54231_m, _54231_m.get()._field_Default);
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, static__203a6c87a_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54231_m))));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203a51c05_fallSt(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_201062867_FallSt> _59726_f) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_203b0cc39_write(_self_.get()._field_oc, static__203a6cb22_caseBegin(_59726_f.get()._field_DestCase));
}



inline void _203a51e7a_breakSt(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20105ed81_BreakSt> _60227_b) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_60227_b.get()._field_It != 0LLU)) {
		_203b0cc39_write(_self_.get()._field_oc, static__203a6c094_iterEnd(_60227_b.get()._field_It));
	} else {
		_203b0cc39_write(_self_.get()._field_oc, static__203a6c87a_matchEnd(_60227_b.get()._field_Mtch));
	};
}



inline void _203a52200_setResult(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_201062bb9_RetSt> _61133_r) {
	if ((_61133_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61133_r.get()._field_Expr);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_203b0d542_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_2010edb23_Data>> _61917_datas = _61133_r.get()._field_Expr.cast_ptr<_20101807b_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
	{
		auto expr = &(_61917_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206352525:;
		if (it != expr_end) {
			jule::I32 _62013_i = it - expr->begin();
			jule::Ptr<_2010edb23_Data> _62016_data = *it;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(_62013_i));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62016_data.get()._field_Model);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_203b0d542_indent(_self_.get()._field_oc);
			}
			_iter_next_206352525:;
			++it;
			_62013_i++;
			goto _iter_begin_206352525;
		}
		_iter_end_206352525:;
	};
}



inline void _203a52475_retSt(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_201062bb9_RetSt> _63029_r) {
	if (_201020abc_IsVoid(_63029_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_63029_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _63029_r.get()._field_Func.get()._field_Result));
			_203b0cc39_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _63029_r.get()._field_Expr);
			_203b0cc39_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _63029_r.get()._field_Expr);
			_203b0cc39_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_63029_r.get()._field_Expr != nullptr)) {
		_203a52200_setResult(_self_, _63029_r);
	};
	if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_203b25eb6_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_63029_r.get()._field_Func.get()._field_Result));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _203a526ea_var(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_2010a4975_Var> _66627_v) {
	if ((!(_66627_v.get()._field_Constant))) {
		_203b15307_var(_self_.get()._field_oc, _66627_v);
	};
}



inline void _203a52970_strAppend(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_2012054cc_StrAppendExprModel> _67233_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67233_m.get()._field_Str);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	{
		auto &_match_expr{ _67233_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_20635c442:;
			{
				jule::Ptr<_1ee33c6d2_Const> _67817_c = _67233_m.get()._field_Expr.cast_ptr<_1ee33c6d2_Const>(&__jule_any_type19);;
				jule::Slice<jule::U8> _67917_bytes = static_cast<jule::Slice<jule::U8>>(_1ee33e717_ReadStr(_67817_c.ptr()));;
				_203b0cc39_write(_self_.get()._field_oc, _203a64014_cstrLit(_67917_bytes));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_203b0cc39_write(_self_.get()._field_oc, _1ee32ca68_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_67917_bytes.len())), 10LL));
			}
		}
		else {
			_case_begin_20635d443:;
			{
				_203a5904d_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67233_m.get()._field_Expr);
			}
		}
		_match_end_20635d3dd:;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a52be5_st(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Any _69026_st) {
	if ((_69026_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _69026_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_20636191e:;
			{
				_203a531e0_scope(_self_, _69026_st.cast_ptr<_20105c92d_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2063617ba:;
			{
				_203a526ea_var(_self_, _69026_st.cast_ptr<_2010a4975_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_20636217d:;
			{
				_203a63046_model(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_2010edb23_Data>(&__jule_any_type24).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_2063621e4:;
			{
				_203a4e0ed_conditional(_self_, _69026_st.cast_ptr<_20105d489_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_20636225a:;
			{
				_203a4e373_infIter(_self_, _69026_st.cast_ptr<_20105d775_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_2063622c1:;
			{
				_203a4e5e8_whileIter(_self_, _69026_st.cast_ptr<_20105dbe8_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_206362337:;
			{
				_203a4e86d_rangeIter(_self_, _69026_st.cast_ptr<_20105e5cd_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_20636239d:;
			{
				_203a4eae3_cont(_self_, _69026_st.cast_ptr<_20105e9c9_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_206362414:;
			{
				_203a4ed68_label(_self_, _69026_st.cast_ptr<_20106016c_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_20636247a:;
			{
				_203a500dd_gotoSt(_self_, _69026_st.cast_ptr<_201060458_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_206362502:;
			{
				_203a50363_postfix(_self_, _69026_st.cast_ptr<_201060810_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_206362579:;
			{
				_203a505d8_assign(_self_, _69026_st.cast_ptr<_201060c83_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_206362601:;
			{
				_203a510cd_multiAssign(_self_, _69026_st.cast_ptr<_20106113a_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_206362678:;
			{
				_203a51980_matchSt(_self_, _69026_st.cast_ptr<_201061745_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_206362700:;
			{
				_203a51c05_fallSt(_self_, _69026_st.cast_ptr<_201062867_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_206362777:;
			{
				_203a51e7a_breakSt(_self_, _69026_st.cast_ptr<_20105ed81_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_2063627ee:;
			{
				_203a52475_retSt(_self_, _69026_st.cast_ptr<_201062bb9_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_206362876:;
			{
				_203a609d3_pushToSlice(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_201205ed3_PushToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_2063628ed:;
			{
				_203a60c58_appendToSlice(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_20120638a_AppendToSliceExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_206362975:;
			{
				_203a627c6_mutSlicing(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_2012068c9_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_2063629ec:;
			{
				_203a62a4b_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_201206db3_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_206362a74:;
			{
				_203a52970_strAppend(_self_, _69026_st.cast_ptr<_2012054cc_StrAppendExprModel>(&__jule_any_type125));
			}
		}
		else {
			_case_begin_2063618a8:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_206361556:;
	};
}



inline void _203a52e6a_scopeStmts(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20105c92d_Scope>* _74435_s) {
	{
		auto expr = &((*(_74435_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2063716ba:;
		if (it != expr_end) {
			jule::Any _74521_st = *it;
			{
				_203b0d542_indent(_self_.get()._field_oc);
				_203a52be5_st(_self_, _74521_st);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_2063716ba:;
			++it;
			goto _iter_begin_2063716ba;
		}
		_iter_end_2063716ba:;
	};
}



inline void _203a531e0_scope(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20105c92d_Scope> _75329_s) {
	_203b0d18a_addIndent(_self_.get()._field_oc);
	if (_75329_s.get()._field_Deferred) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_203a52e6a_scopeStmts(_self_, &(_75329_s));
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_75329_s.get()._field_Deferred) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _203a53465_funcScope(jule::Ptr<_203a4cb46_scopeCoder> _self_, jule::Ptr<_20102330b_FnIns> _76933_f) {
	if ((_76933_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_203b0d18a_addIndent(_self_.get()._field_oc);
	if ((!(_201020abc_IsVoid(_76933_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_20113d613_Tuple> _77621_tup = _2011354a6_Tup(_76933_f.get()._field_Result.ptr());;
		if ((_77621_tup != nullptr)) {
			_203b0d542_indent(_self_.get()._field_oc);
			_203b25878_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _77621_tup);
			_203b0cc39_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_77621_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_206377ced:;
				if (it != expr_end) {
					jule::I32 _78122_i = it - expr->begin();
					jule::Ptr<_2011310ea_TypeKind> _78129_t = *it;
					{
						if (_203b2d155_shouldInitialized(&(_78129_t))) {
							_203b0d542_indent(_self_.get()._field_oc);
							_203b0cc39_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(_78122_i));
							_203b0cc39_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_203a632bb_initExpr(_self_.get()._field_oc.get()._field_ec, _78129_t);
							_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_206377ced:;
					++it;
					_78122_i++;
					goto _iter_begin_206377ced;
				}
				_iter_end_206377ced:;
			};
		} else if ((_76933_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_203b0d542_indent(_self_.get()._field_oc);
			_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76933_f.get()._field_Result));
			_203b0cc39_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_203b2d155_shouldInitialized(&(_76933_f.get()._field_Result))) {
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_203a632bb_initExpr(_self_.get()._field_oc.get()._field_ec, _76933_f.get()._field_Result);
			};
			_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_203a52e6a_scopeStmts(_self_, &(_76933_f.get()._field_Scope));
	if ((_76933_f.get()._field_Decl.get()._field_Exceptional && _201020abc_IsVoid(_76933_f.get()._field_Decl.ptr()))) {
		_203b0d542_indent(_self_.get()._field_oc);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _203a4cb46_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203a5608e_exprCoder> static__203a56446_new(jule::Ptr<_203b0c5da_ObjectCoder>* _11024_oc) {
	return jule::new_ptr<_203a5608e_exprCoder>(_203a5608e_exprCoder{._field_oc=(*(_11024_oc))});;
}



inline void _203a566bb_string(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_1ee33c6d2_Const>* _11627_c) {
	jule::Str _11713_content = _1ee33e717_ReadStr((*(_11627_c)).ptr());;
	if ((_11713_content.len() == 0LL)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _12213_bytes = static_cast<jule::Slice<jule::U8>>(_11713_content);;
	jule::Str _12313_len = _1ee32ca68_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_12213_bytes.len())), 10LL);;
	jule::Str _12413_lit = _203a64014_cstrLit(_12213_bytes);;
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203b0ceae_writeR(_self_.get()._field_oc, &(_12413_lit));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_203b0ceae_writeR(_self_.get()._field_oc, &(_12313_len));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a56941_boolean(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Bool _13327_b) {
	if (_13327_b) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _203a56b1c_nilLit(jule::Ptr<_203a5608e_exprCoder> _self_) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _203a56e2a_ftoaSpecialCases(jule::Ptr<_203a5608e_exprCoder> _self_, jule::F64* _14537_x) {
	{
		
		if (_1ee2d3bea_IsNaN((*(_14537_x)))) {
			_case_begin_206397e94:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1ee2d42a0_IsInf((*(_14537_x)), 1LL)) {
			_case_begin_20639801b:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1ee2d42a0_IsInf((*(_14537_x)), -1LL)) {
			_case_begin_206398093:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_206397e2d:;
			{
				return false;;
			}
		}
		_match_end_206397d62:;
	};
	return true;;
}



inline void _203a571a0_float32(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_1ee33c6d2_Const>* _15928_c) {
	jule::F64 _16013_x = _1ee3401b8_AsF64((*(_15928_c)).ptr());;
	if (_203a56e2a_ftoaSpecialCases(_self_, &(_16013_x))) {
		return;;
	};
	{
		
		if ((_16013_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_20639abcd:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_16013_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_20639a914:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_20639a89d:;
			{
				_203b0cc39_write(_self_.get()._field_oc, _203a64322_ftoa(_16013_x, 32LL));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_20639a76b:;
	};
}



inline void _203a57425_float64(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_1ee33c6d2_Const>* _17828_c) {
	jule::F64 _17913_x = _1ee3401b8_AsF64((*(_17828_c)).ptr());;
	if (_203a56e2a_ftoaSpecialCases(_self_, &(_17913_x))) {
		return;;
	};
	{
		
		if ((_17913_x == jule::MAX_F64)) {
			_case_begin_20639d98e:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17913_x == jule::MIN_F64)) {
			_case_begin_20639dce1:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_20639d32e:;
			{
				_203b0cc39_write(_self_.get()._field_oc, _203a64322_ftoa(_17913_x, 64LL));
			}
		}
		_match_end_20639d1ec:;
	};
}



inline void _203a5769a_constant(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_1ee33c6d2_Const> _19632_c) {
	{
		
		if (_1ee341ab0_IsStr(_19632_c.ptr())) {
			_case_begin_20639eebd:;
			{
				_203a566bb_string(_self_, &(_19632_c));
			}
		}
		else if (_1ee34184b_IsBool(_19632_c.ptr())) {
			_case_begin_2063a0034:;
			{
				_203a56941_boolean(_self_, _1ee33e4a3_ReadBool(_19632_c.ptr()));
			}
		}
		else if (_1ee341d24_IsF64(_19632_c.ptr())) {
			_case_begin_2063a009a:;
			{
				{
					
					if (_19632_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_2063a20e1:;
						{
							_203a571a0_float32(_self_, &(_19632_c));
						}
					}
					else {
						_case_begin_2063a1c4a:;
						{
							_203a57425_float64(_self_, &(_19632_c));
						}
					}
					_match_end_2063a1b7e:;
				};
			}
		}
		else if (_1ee341373_IsI64(_19632_c.ptr())) {
			_case_begin_2063a0111:;
			{
				_203b0cc39_write(_self_.get()._field_oc, _203a645b9_itoa(static_cast<jule::I64>(_1ee33deca_ReadI64(_19632_c.ptr()))));
			}
		}
		else if (_1ee3415d7_IsU64(_19632_c.ptr())) {
			_case_begin_2063a0892:;
			{
				_203b0cc39_write(_self_.get()._field_oc, _203a64861_utoa(static_cast<jule::U64>(_1ee33e23e_ReadU64(_19632_c.ptr()))));
			}
		}
		else if (_1ee342088_IsNil(_19632_c.ptr())) {
			_case_begin_2063a0908:;
			{
				_203a56b1c_nilLit(_self_);
			}
		}
		else {
			_case_begin_20639ee57:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_20639ed8b:;
	};
}



inline void _203a57a63_divByZeroBinary(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_1ed694d8c_Token>* _22036_op, jule::Ptr<_201012020_OperandExprModel>* _22053_l, jule::Ptr<_201012020_OperandExprModel>* _22080_r) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_22036_op)).get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_2063a4d5d:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_2063a4dd5:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_2063a4ce7:;
	};
	if ((!(_216de596a_Production))) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_203b0ee5b_locInfo(_self_.get()._field_oc, _22036_op);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_203a5904d_possibleRefExpr(_self_, (*(_22053_l)).get()._field_Model);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(",", 1));
	_203a5904d_possibleRefExpr(_self_, (*(_22080_r)).get()._field_Model);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a57cd8_unsafeBinary(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_2010124d7_BinopExprModel> _24236_m) {
	if ((_24236_m.get()._field_Op.get()._field_Kind.equal("==", 2) || _24236_m.get()._field_Op.get()._field_Kind.equal("!=", 2))) {
		if (_203a654aa_isAny(&(_24236_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_201132151_IsNil(_24236_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_203a654aa_isAny(&(_24236_m.get()._field_Right.get()._field_Kind)))))) {
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
				if (_24236_m.get()._field_Op.get()._field_Kind.equal("!=", 2)) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I32 _25225_i = _203b0db5d_pushAnyType(_self_.get()._field_oc, _24236_m.get()._field_Right.get()._field_Kind);;
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(_25225_i));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_203a5904d_possibleRefExpr(_self_, _24236_m.get()._field_Left.get()._field_Model);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_203a5904d_possibleRefExpr(_self_, _24236_m.get()._field_Right.get()._field_Model);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203a5904d_possibleRefExpr(_self_, _24236_m.get()._field_Left.get()._field_Model);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_203b0ceae_writeR(_self_.get()._field_oc, &(_24236_m.get()._field_Op.get()._field_Kind));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_203a5904d_possibleRefExpr(_self_, _24236_m.get()._field_Right.get()._field_Model);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a5805d_binary(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_2010124d7_BinopExprModel> _27330_m) {
	{
		auto &_match_expr{ _27330_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_2063b031e:;
			{
				if ((_201134c69_Struct(_27330_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_203a57a63_divByZeroBinary(_self_, &(_27330_m.get()._field_Op), &(_27330_m.get()._field_Left), &(_27330_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_2063b0297:;
	};
	_203a57cd8_unsafeBinary(_self_, _27330_m);
}



inline void _203a582d3_var(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_2010a4975_Var> _28527_m) {
	if (_28527_m.get()._field_Binded) {
		jule::Ptr<_200d472d9_Directive> _28717_d = _203b2ca28_findDirective(&(_28527_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28717_d != nullptr)) {
			_203b0cc39_write(_self_.get()._field_oc, _203b19086_concatAllParts(_28717_d.get()._field_Args));
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_203b0cc39_write(_self_.get()._field_oc, static__203a6ba55_var(_28527_m));
}



inline void _203a58558_structureIns(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20100d071_StructIns> _29636_m) {
	_203b0cc39_write(_self_.get()._field_oc, _203b1ea3c_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29636_m));
}



inline void _203a587cd_unary(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101288e_UnaryExprModel> _30029_m) {
	{
		auto &_match_expr{ _30029_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_2063b4a4e:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_203a5904d_possibleRefExpr(_self_, _30029_m.get()._field_Expr.get()._field_Model);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_2063b4ac6:;
			{
				if ((_216de596a_Production || (_201133a7b_Sptr(_30029_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_2063b49b6;
				};
				_203a5904d_possibleRefExpr(_self_, _30029_m.get()._field_Expr.get()._field_Model);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_203b0ee5b_locInfo(_self_.get()._field_oc, &(_30029_m.get()._field_Op));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_2063b49b6:;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203b0ceae_writeR(_self_.get()._field_oc, &(_30029_m.get()._field_Op.get()._field_Kind));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203a5904d_possibleRefExpr(_self_, _30029_m.get()._field_Expr.get()._field_Model);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _203a58a53_structureLit(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201013142_StructLitExprModel> _32436_m) {
	if (_32436_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_203b0cc39_write(_self_.get()._field_oc, static__203a6b516_structureIns(&(_32436_m.get()._field_Strct)));
	if (_32436_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_32436_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_32436_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2063bb11b:;
			if (it != expr_end) {
				jule::I32 _33717_i = it - expr->begin();
				jule::Ptr<_20100c57b_FieldIns> _33720_f = *it;
				{
					{
						auto expr = &(_32436_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2063bbc54:;
						if (it != expr_end) {
							jule::Ptr<_201012c8a_StructArgExprModel> _33829_arg = *it;
							{
								if ((_33829_arg.get()._field_Field == _33720_f)) {
									_203b0cc39_write(_self_.get()._field_oc, jule::Str(".", 1));
									_203b0cc39_write(_self_.get()._field_oc, static__203a6b7ad_field(&(_33829_arg.get()._field_Field.get()._field_Decl)));
									_203b0cc39_write(_self_.get()._field_oc, jule::Str("=", 1));
									_203a5904d_possibleRefExpr(_self_, _33829_arg.get()._field_Expr);
									if (((_32436_m.get()._field_Strct.get()._field_Fields.len() - _33717_i) > 1LL)) {
										_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_2063bb11b;
								};
							}
							_iter_next_2063bbc54:;
							++it;
							goto _iter_begin_2063bbc54;
						}
						_iter_end_2063bbc54:;
					};
				}
				_iter_next_2063bb11b:;
				++it;
				_33717_i++;
				goto _iter_begin_2063bb11b;
			}
			_iter_end_2063bb11b:;
		};
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203a58cc8_allocStructure(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201013450_AllocStructLitExprModel> _35538_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_203b0cc39_write(_self_.get()._field_oc, static__203a6b516_structureIns(&(_35538_m.get()._field_Lit.get()._field_Strct)));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_203a58a53_structureLit(_self_, _35538_m.get()._field_Lit);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a5904d_possibleRefExpr(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Any _36335_expr) {
	{
		auto &_match_expr{ _36335_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2063c1c59:;
			{
				jule::Ptr<_2010a4975_Var> _36617_v = _36335_expr.cast_ptr<_2010a4975_Var>(&__jule_any_type8);;
				if (_36617_v.get()._field_Reference) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_203a63046_model(_self_, _36335_expr);
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_2063c1b5a:;
	};
	_203a63046_model(_self_, _36335_expr);
}



inline void _203a59416_castTraitFromTrait(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_2010139a0_CastingExprModel>* _37743_m, jule::Ptr<_20103287b_Trait> _37769_t1, jule::Ptr<_20103287b_Trait> _37785_t2) {
	_203a5904d_possibleRefExpr(_self_, (*(_37743_m)).get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(".mask<", 6));
	_203b0cc39_write(_self_.get()._field_oc, static__203a6ac30_traitDecl(_37769_t1));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_203b0ebd6_pushAndWriteMaskMapper(_self_.get()._field_oc, _37769_t1, _37785_t2);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a5968b_casting(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_2010139a0_CastingExprModel> _39231_m) {
	{
		
		if (_203a654aa_isAny(&(_39231_m.get()._field_Kind))) {
			_case_begin_2063c5cc4:;
			{
				if (_201132151_IsNil(_39231_m.get()._field_ExprKind.ptr())) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_2011342b8_TypeEnum(_39231_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_203a5904d_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
					return;;
				};
				jule::I32 _40317_i = _203b0db5d_pushAnyType(_self_.get()._field_oc, _39231_m.get()._field_ExprKind);;
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _39231_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_2063c7853:;
						{
							jule::Ptr<_201138850_Prim> _40721_prim = _201133817_Prim(_39231_m.get()._field_ExprKind.ptr());;
							if (((_40721_prim != nullptr) && _1ee33bbcb_IsInt(_40721_prim.get()._field_Kind))) {
								_203b0cc39_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_203b0cc39_write(_self_.get()._field_oc, _203b1bc6a_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _40721_prim));
								_203b0cc39_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_203a5904d_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
								_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_2063c8502;
							};
							goto _case_begin_2063c8744;
						}
					}
					else {
						_case_begin_2063c8744:;
						{
							_203a5904d_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
						}
					}
					_match_end_2063c8502:;
				};
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(_40317_i));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if (_203a654aa_isAny(&(_39231_m.get()._field_ExprKind))) {
			_case_begin_2063c5d4b:;
			{
				_203a5904d_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_201133a7b_Sptr(_39231_m.get()._field_Kind.ptr()) != nullptr)) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _201133a7b_Sptr(_39231_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39231_m.get()._field_Kind));
				};
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_216de596a_Production))) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_203b0ee5b_locInfo(_self_.get()._field_oc, &(_39231_m.get()._field_Token));
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(static_cast<jule::I32>(_203b0db5d_pushAnyType(_self_.get()._field_oc, _39231_m.get()._field_Kind))));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_201133ce0_Ptr(_39231_m.get()._field_ExprKind.ptr()) != nullptr) || (_201133ce0_Ptr(_39231_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2063c5dc3:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("((", 2));
				_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39231_m.get()._field_Kind));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_203a5904d_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if ((_201134ecd_Trait(_39231_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_2063c5e4a:;
			{
				if ((_201134ecd_Trait(_39231_m.get()._field_Kind.ptr()) != nullptr)) {
					_203a59416_castTraitFromTrait(_self_, &(_39231_m), _201134ecd_Trait(_39231_m.get()._field_Kind.ptr()), _201134ecd_Trait(_39231_m.get()._field_ExprKind.ptr()));
					return;;
				};
				_203a5904d_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_201133a7b_Sptr(_39231_m.get()._field_Kind.ptr()) != nullptr)) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _201133a7b_Sptr(_39231_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39231_m.get()._field_Kind));
				};
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_216de596a_Production))) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_203b0ee5b_locInfo(_self_.get()._field_oc, &(_39231_m.get()._field_Token));
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(static_cast<jule::I32>(_203b0e8b7_findTypeOffset(_self_.get()._field_oc.ptr(), _201134ecd_Trait(_39231_m.get()._field_ExprKind.ptr()), _39231_m.get()._field_Kind))));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_201134ecd_Trait(_39231_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2063c5ec2:;
			{
				_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39231_m.get()._field_Kind));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
				_203a5904d_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(static_cast<jule::I32>(_203b0e8b7_findTypeOffset(_self_.get()._field_oc.ptr(), _201134ecd_Trait(_39231_m.get()._field_Kind.ptr()), _39231_m.get()._field_ExprKind))));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		_match_end_2063c5b81:;
	};
	jule::Ptr<_201138850_Prim> _48413_prim = _201133817_Prim(_39231_m.get()._field_Kind.ptr());;
	jule::Ptr<_201138850_Prim> _48513_eprim = _201133817_Prim(_39231_m.get()._field_ExprKind.ptr());;
	if ((((_48513_eprim != nullptr) && (_48413_prim != nullptr)) && _20113ba51_IsStr(_48413_prim.ptr()))) {
		if (_20113a126_IsU8(_48513_eprim.ptr())) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::Str::from_byte(", 21));
		} else {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::Str::from_rune(", 21));
		};
		_203a5904d_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
	_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39231_m.get()._field_Kind));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_203a5904d_possibleRefExpr(_self_, _39231_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a59911_models(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Slice<jule::Any> _50330_args) {
	if ((_50330_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_50330_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2063e1ce0:;
		if (it != expr_end) {
			jule::I32 _50714_i = it - expr->begin();
			jule::Any _50721_a = *it;
			{
				_203a5904d_possibleRefExpr(_self_, _50721_a);
				if (((_50330_args.len() - _50714_i) > 1LL)) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_2063e1ce0:;
			++it;
			_50714_i++;
			goto _iter_begin_2063e1ce0;
		}
		_iter_end_2063e1ce0:;
	};
}



inline void _203a59b86_args(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201014352_FnCallExprModel>* _51529_m) {
	jule::I32 _51617_j = 0LL;;
	if (((((*(_51529_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_51529_m)).get()._field_Func.get()._field_Decl.get()._field_Statically))) || (((*(_51529_m)).get()._field_Func.get()._field_Params.len() > 0LL) && _20101e406_IsSelf((*(_51529_m)).get()._field_Func.get()._field_Params[0LL].get()._field_Decl.ptr())))) {
		(_51617_j)++;
	};
	{
		auto expr = &((*(_51529_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2063e5497:;
		if (it != expr_end) {
			jule::I32 _52113_i = it - expr->begin();
			jule::Any _52116_arg = *it;
			{
				jule::Ptr<_20102243c_ParamIns> _52217_p = (*(_51529_m)).get()._field_Func.get()._field_Params[_51617_j];;
				if (((_52217_p.get()._field_Decl != nullptr) && _52217_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _52116_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_2063e6b6e:;
							{
								jule::Ptr<_2010a4975_Var> _52625_v = _52116_arg.cast_ptr<_2010a4975_Var>(&__jule_any_type8);;
								if (_52625_v.get()._field_Reference) {
									_203a63046_model(_self_, _52116_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_2063e6a81:;
					};
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_203a63046_model(_self_, _52116_arg);
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_203a5904d_possibleRefExpr(_self_, _52116_arg);
				_julec_label_end:;
				if ((((*(_51529_m)).get()._field_Args.len() - _52113_i) > 1LL)) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_51617_j)++;
			}
			_iter_next_2063e5497:;
			++it;
			_52113_i++;
			goto _iter_begin_2063e5497;
		}
		_iter_end_2063e5497:;
	};
}



inline void _203a59e0b_modelForCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Any _54636_expr) {
	{
		auto &_match_expr{ _54636_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2063ea931:;
			{
				_203a5d283_funcIns(_self_, _54636_expr.cast_ptr<_20102330b_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_2063ea9a8:;
			{
				jule::Ptr<_201016bc3_StructSubIdentExprModel> _55221_ssie = _54636_expr.cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_55221_ssie.get()._field_Method != nullptr)) {
					_203a5d283_funcIns(_self_, _55221_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_2063ea821:;
	};
	_203a5904d_possibleRefExpr(_self_, _54636_expr);
}



inline void _203a5a181_pushCallInf(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201014352_FnCallExprModel>* _56132_m) {
	if ((_216de596a_Production || ((!((*(_56132_m)).get()._field_Func.get()._field_Anon)) && (!(_203a64ed2_isBuiltinCallHasDebuginf(_56132_m)))))) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_56132_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_56132_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_2063ed8bd:;
				{
					if ((*(_56132_m)).get()._field_Expr.cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_Binded) {
						_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_2063eda99;
				}
			}
			else {
				_case_begin_2063eda99:;
				{
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_2063ed967:;
		};
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_203b0ee5b_locInfo(_self_.get()._field_oc, &((*(_56132_m)).get()._field_Token));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_56132_m)).get()._field_Args.len() != 0LL)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _203a5a48e_isWrapped(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201014352_FnCallExprModel>* _58634_m) {
	if ((((!(_201024692_IsBuiltin((*(_58634_m)).get()._field_Func.ptr()))) && ((*(_58634_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _20101e406_IsSelf((*(_58634_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_58634_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_206402075:;
				{
					jule::Ptr<_201016bc3_StructSubIdentExprModel> _59025_ssie = (*(_58634_m)).get()._field_Expr.cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_20101e66a_IsRef((*(_58634_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_201133a7b_Sptr(_59025_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_206403571:;
							{
								goto _match_end_206402d45;
							}
						}
						else {
							_case_begin_206402dab:;
							{
								if ((_201134c69_Struct(_59025_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_59025_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_203b0cc39_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_203a63046_model(_self_, _59025_ssie.get()._field_Expr.get()._field_Model);
										_203b0cc39_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_206402d45:;
					};
				}
			}
			_match_end_206401d66:;
		};
	};
	return false;;
}



inline void _203a5a714_pureFuncCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201014352_FnCallExprModel>* _61037_m) {
	jule::Bool _61113_wrapped = _203a5a48e_isWrapped(_self_, _61037_m);;
	_203a59e0b_modelForCall(_self_, (*(_61037_m)).get()._field_Expr);
	if ((!(_201024692_IsBuiltin((*(_61037_m)).get()._field_Func.ptr())))) {
		if (((*(_61037_m)).get()._field_Func.get()._field_Decl.get()._field_Binded && ((*(_61037_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_203b2cdad_hasDirective(&((*(_61037_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_61037_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206408158:;
					if (it != expr_end) {
						jule::I32 _61726_i = it - expr->begin();
						jule::Ptr<_20112e868_InsGeneric> _61733_g = *it;
						{
							_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _61733_g.get()._field_Kind));
							if ((((*(_61037_m)).get()._field_Func.get()._field_Generics.len() - _61726_i) > 1LL)) {
								_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_206408158:;
						++it;
						_61726_i++;
						goto _iter_begin_206408158;
					}
					_iter_end_206408158:;
				};
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_203a5a181_pushCallInf(_self_, _61037_m);
	jule::Bool _62817_locinfo = false;;
	if ((((!(_201024692_IsBuiltin((*(_61037_m)).get()._field_Func.ptr()))) && ((*(_61037_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _20101e406_IsSelf((*(_61037_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_61037_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_20640b546:;
				{
					jule::Ptr<_201016bc3_StructSubIdentExprModel> _63225_ssie = (*(_61037_m)).get()._field_Expr.cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_20101e66a_IsRef((*(_61037_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_20640ee1d:;
							{
								_203a5904d_possibleRefExpr(_self_, _63225_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_201133a7b_Sptr(_63225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_20640c47b:;
							{
								_203a5904d_possibleRefExpr(_self_, _63225_ssie.get()._field_Expr.get()._field_Model);
								_203b0cc39_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_216de596a_Production))) {
									_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_203b0ee5b_locInfo(_self_.get()._field_oc, &((*(_61037_m)).get()._field_Token));
									_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_20640c415:;
							{
								if ((_201134c69_Struct(_63225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _63225_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_20640bda4:;
											{
												jule::Ptr<_2010a4975_Var> _64933_v = _63225_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_2010a4975_Var>(&__jule_any_type8);;
												if (_64933_v.get()._field_Reference) {
													goto _match_end_20640ce82;
												};
												goto _case_begin_20640ced7;
											}
										}
										else {
											_case_begin_20640ced7:;
											{
												_203b0cc39_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_20640ce82:;
									};
								};
								if (_61113_wrapped) {
									_203b0cc39_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_203a63046_model(_self_, _63225_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_20640c39e:;
					};
					if (((*(_61037_m)).get()._field_Args.len() > 0LL)) {
						_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_20640b5ac:;
				{
					_203a5904d_possibleRefExpr(_self_, (*(_61037_m)).get()._field_Expr.cast_ptr<_2010163dc_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_216de596a_Production))) {
						_62817_locinfo=true;
					};
					if (((*(_61037_m)).get()._field_Args.len() > 0LL)) {
						_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_20640b337:;
		};
	};
	_203a59b86_args(_self_, _61037_m);
	if (_62817_locinfo) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_203b0ee5b_locInfo(_self_.get()._field_oc, &((*(_61037_m)).get()._field_Token));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_61113_wrapped) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _203a5a989_coFuncCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201014352_FnCallExprModel>* _69135_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_203b0d18a_addIndent(_self_.get()._field_oc);
	jule::Str _69417_head = jule::Str("std::thread([", 13);;
	if (((*(_69135_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		(_69417_head).append("_self_", 6);
		if (((*(_69135_m)).get()._field_Args.len() > 0LL)) {
			(_69417_head).append(", ", 2);
		};
	};
	{
		auto expr = &((*(_69135_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206418e9e:;
		if (it != expr_end) {
			jule::I32 _70113_i = it - expr->begin();
			jule::Any _70116_arg = *it;
			{
				if ((_70113_i > 0LL)) {
					(_69417_head).append(", ", 2);
				};
				{
					auto &_match_expr{ _70116_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_206419a0a:;
						{
							jule::Ptr<_2010a4975_Var> _70725_v = _70116_arg.cast_ptr<_2010a4975_Var>(&__jule_any_type8);;
							_69417_head+=static__203a6ba55_var(_70725_v);
							goto _iter_next_206418e9e;
						}
					}
					_match_end_206419be7:;
				};
				jule::Str _71117_name = (jule::Str("_co_arg_", 8) + _1ee32cd10_Itoa(_70113_i));;
				_69417_head+=_71117_name;
				_203b0d542_indent(_self_.get()._field_oc);
				_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_69135_m)).get()._field_Func.get()._field_Params[_70113_i].get()._field_Kind));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_69135_m)).get()._field_Func.get()._field_Params[_70113_i].get()._field_Decl.get()._field_Reference) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_203b0ceae_writeR(_self_.get()._field_oc, &(_71117_name));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_203a5904d_possibleRefExpr(_self_, _70116_arg);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _72317_argS = jule::Any(_71117_name, &__jule_any_type5);;
				(*(_69135_m)).get()._field_Args[_70113_i]=(*(((jule::Any*)((&(_72317_argS))))));
			}
			_iter_next_206418e9e:;
			++it;
			_70113_i++;
			goto _iter_begin_206418e9e;
		}
		_iter_end_206418e9e:;
	};
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0ceae_writeR(_self_.get()._field_oc, &(_69417_head));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_203b0d18a_addIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203a5a714_pureFuncCall(_self_, _69135_m);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203a5aca8_writeUseExpr(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20102330b_FnIns>* _74137_f, jule::Ptr<_2010edb23_Data> _74152_d) {
	if ((_2011354a6_Tup(_74152_d.get()._field_Kind.ptr()) == nullptr)) {
		_203a5904d_possibleRefExpr(_self_, _74152_d.get()._field_Model);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_20101807b_TupleExprModel> _74717_tup = _74152_d.get()._field_Model.cast_ptr<_20101807b_TupleExprModel>(&__jule_any_type87);;
	_203b25878_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _2011354a6_Tup((*(_74137_f)).get()._field_Result.ptr()));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_74717_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206424c8a:;
		if (it != expr_end) {
			jule::I32 _75013_i = it - expr->begin();
			jule::Ptr<_2010edb23_Data> _75016_data = *it;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(_75013_i));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("=", 1));
				_203a5904d_possibleRefExpr(_self_, _75016_data.get()._field_Model);
				if (((_74717_tup.get()._field_Datas.len() - _75013_i) > 1LL)) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_206424c8a:;
			++it;
			_75013_i++;
			goto _iter_begin_206424c8a;
		}
		_iter_end_206424c8a:;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _203a5b02d_funcCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201014352_FnCallExprModel> _76232_m) {
	if (_76232_m.get()._field_IsCo) {
		_203a5a989_coFuncCall(_self_, &(_76232_m));
		return;;
	};
	if (((_201024692_IsBuiltin(_76232_m.get()._field_Func.ptr()) || (!(_76232_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_76232_m.get()._field_Except != nullptr) && (_76232_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_203a5a714_pureFuncCall(_self_, &(_76232_m));
		return;;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_203b0d18a_addIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_203a5a714_pureFuncCall(_self_, &(_76232_m));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_203b0d542_indent(_self_.get()._field_oc);
	if ((_76232_m.get()._field_Except != nullptr)) {
		if (((_76232_m.get()._field_Func.get()._field_Result == nullptr) || (!(_76232_m.get()._field_Assigned)))) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_203a531e0_scope(_self_.get()._field_oc.get()._field_sc, _76232_m.get()._field_Except);
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _78821_forwarded = _203a64c18_isForwarded(&(_76232_m.get()._field_Except));;
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_78821_forwarded) {
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _79325_stmt = _76232_m.get()._field_Except.get()._field_Stmts[(_76232_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79325_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_20642d3ae:;
					{
						_76232_m.get()._field_Except.get()._field_Stmts=_76232_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_76232_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_203b0cc39_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_203b0d18a_addIndent(_self_.get()._field_oc);
						_203a52e6a_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_76232_m.get()._field_Except));
						_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_203b0d542_indent(_self_.get()._field_oc);
						_203a5aca8_writeUseExpr(_self_, &(_76232_m.get()._field_Func), _79325_stmt.cast_ptr<_2010edb23_Data>(&__jule_any_type24));
						_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_203b0d366_doneIndent(_self_.get()._field_oc);
						_203b0d542_indent(_self_.get()._field_oc);
						_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_20642e14b:;
					{
						_203a531e0_scope(_self_.get()._field_oc.get()._field_sc, _76232_m.get()._field_Except);
					}
				}
				_match_end_20642e0e6:;
			};
			if (_78821_forwarded) {
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_203a632bb_initExpr(_self_, _76232_m.get()._field_Func.get()._field_Result);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_203b0cc39_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_203b0d366_doneIndent(_self_.get()._field_oc);
	} else {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_203b0ee5b_locInfo(_self_.get()._field_oc, &(_76232_m.get()._field_Token));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_201020abc_IsVoid(_76232_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_203b0d542_indent(_self_.get()._field_oc);
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_203b0d366_doneIndent(_self_.get()._field_oc);
	};
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _203a5b2a3_slice(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201014709_SliceExprModel> _83329_m) {
	if ((_83329_m.get()._field_Elems.len() == 0LL)) {
		_203b0cc39_write(_self_.get()._field_oc, _203b1d6d9_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83329_m.get()._field_ElemKind));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_203b0cc39_write(_self_.get()._field_oc, _203b1d6d9_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83329_m.get()._field_ElemKind));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_203a59911_models(_self_, _83329_m.get()._field_Elems);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _203a5b528_indexing(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201014b7c_IndexingExprModel> _84532_m) {
	_203a5904d_possibleRefExpr(_self_, _84532_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_216de596a_Production || (_201133ce0_Ptr(_84532_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_201135242_Map(_84532_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _203a65213_isExprComesFromBind(&(_84532_m.get()._field_Expr))) {
			_case_begin_206439321:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("[", 1));
				_203a5904d_possibleRefExpr(_self_, _84532_m.get()._field_Index.get()._field_Model);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_20643994d:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_203b0ee5b_locInfo(_self_.get()._field_oc, &(_84532_m.get()._field_Token));
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_203a5904d_possibleRefExpr(_self_, _84532_m.get()._field_Index.get()._field_Model);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_2064398e8:;
	};
}



inline void _203a5b79d_unsafeIndexing(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201205b4d_UnsafeIndexingExprModel> _86538_m) {
	_203a5904d_possibleRefExpr(_self_, _86538_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_216de596a_Production || (_201133ce0_Ptr(_86538_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_201135242_Map(_86538_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20643c29c:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("[", 1));
				_203a5904d_possibleRefExpr(_self_, _86538_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_20643d7a9:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_203a5904d_possibleRefExpr(_self_, _86538_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_20643d743:;
	};
}



inline void _203a5ba23_anonFunc(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201015034_AnonFnExprModel> _88232_m) {
	_203b0cc39_write(_self_.get()._field_oc, _203b211ae_func(_self_.get()._field_oc.get()._field_tc.ptr(), _88232_m.get()._field_Func));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_203b14c63_paramsIns(_self_.get()._field_oc, &(_88232_m.get()._field_Func.get()._field_Params));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_203b20a93_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_88232_m.get()._field_Func));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_203a53465_funcScope(_self_.get()._field_oc.get()._field_sc, _88232_m.get()._field_Func);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a5bc98_mapExpr(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101585e_MapExprModel> _89331_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89331_m.get()._field_KeyKind));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89331_m.get()._field_ValKind));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_89331_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_89331_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20644687d:;
			if (it != expr_end) {
				jule::I32 _90018_i = it - expr->begin();
				jule::Ptr<_2010153db_KeyValPairExprModel> _90025_pair = *it;
				{
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("{", 1));
					_203a5904d_possibleRefExpr(_self_, _90025_pair.get()._field_Key);
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(",", 1));
					_203a5904d_possibleRefExpr(_self_, _90025_pair.get()._field_Val);
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_89331_m.get()._field_Entries.len() - _90018_i) > 1LL)) {
						_203b0cc39_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_20644687d:;
				++it;
				_90018_i++;
				goto _iter_begin_20644687d;
			}
			_iter_end_20644687d:;
		};
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _203a5c01d_slicing(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201015d9d_SlicingExprModel> _91431_m) {
	_203a5904d_possibleRefExpr(_self_, _91431_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_216de596a_Production))) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_203b0ee5b_locInfo(_self_.get()._field_oc, &(_91431_m.get()._field_Token));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_203a5904d_possibleRefExpr(_self_, _91431_m.get()._field_Left);
	if ((_91431_m.get()._field_Right != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_203a5904d_possibleRefExpr(_self_, _91431_m.get()._field_Right);
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a5c293_traitSub(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_2010163dc_TraitSubIdentExprModel> _93032_m) {
	_203b0cc39_write(_self_.get()._field_oc, static__203a6ac30_traitDecl(_93032_m.get()._field_Trt));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_203a5904d_possibleRefExpr(_self_, _93032_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_203b0cc39_write(_self_.get()._field_oc, static__203a6a6e1_func(&(_93032_m.get()._field_Method)));
}



inline void _203a5c518_structureSub(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201016bc3_StructSubIdentExprModel> _93936_m) {
	_203a5904d_possibleRefExpr(_self_, _93936_m.get()._field_Expr.get()._field_Model);
	if ((_93936_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_201133ce0_Ptr(_93936_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_201133a7b_Sptr(_93936_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_216de596a_Production))) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_203b0ee5b_locInfo(_self_.get()._field_oc, &(_93936_m.get()._field_Token));
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_203b0cc39_write(_self_.get()._field_oc, static__203a6b7ad_field(&(_93936_m.get()._field_Field.get()._field_Decl)));
}



inline void _203a5c78d_commonIdent(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101771d_CommonIdentExprModel> _96031_m) {
	_203b0ceae_writeR(_self_.get()._field_oc, &(_96031_m.get()._field_Ident));
}



inline void _203a5ca13_commonSub(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201017c7e_CommonSubIdentExprModel> _96433_m) {
	_203a5904d_possibleRefExpr(_self_, _96433_m.get()._field_Expr);
	{
		
		if ((_201133ce0_Ptr(_96433_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_206454270:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_201133a7b_Sptr(_96433_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_206454836:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_216de596a_Production))) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_203b0ee5b_locInfo(_self_.get()._field_oc, &(_96433_m.get()._field_Token));
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_2064547c0:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_206454759:;
	};
	_203b0ceae_writeR(_self_.get()._field_oc, &(_96433_m.get()._field_Ident));
}



inline void _203a5cc88_array(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201017432_ArrayExprModel> _98329_m) {
	_203b0cc39_write(_self_.get()._field_oc, _203b1ed4a_array(_self_.get()._field_oc.get()._field_tc.ptr(), _98329_m.get()._field_Kind));
	if ((_98329_m.get()._field_Elems.len() == 0LL)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_98329_m.get()._field_Elems.len() == 2LL) && (_98329_m.get()._field_Elems[1LL] == nullptr))) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
		_203a5904d_possibleRefExpr(_self_, _98329_m.get()._field_Elems[0LL]);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("({", 2));
	_203a59911_models(_self_, _98329_m.get()._field_Elems);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _203a5d00d_funcInsCommon(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20102330b_FnIns> _100637_m) {
	_203b0cc39_write(_self_.get()._field_oc, _203b211ae_func(_self_.get()._field_oc.get()._field_tc.ptr(), _100637_m));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203a5d283_funcIns(_self_, _100637_m);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a5d283_funcIns(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20102330b_FnIns> _101331_m) {
	if (((_101331_m.get()._field_Decl != nullptr) && _101331_m.get()._field_Decl.get()._field_Binded)) {
		jule::Ptr<_200d472d9_Directive> _101517_d = _203b2ca28_findDirective(&(_101331_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_101517_d != nullptr)) {
			_203b0cc39_write(_self_.get()._field_oc, _203b19086_concatAllParts(_101517_d.get()._field_Args));
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_203b0cc39_write(_self_.get()._field_oc, static__203a6a988_funcIns(&(_101331_m)));
}



inline void _203a5d508_tuple(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101807b_TupleExprModel> _102429_m) {
	{
		auto expr = &(_102429_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2064605ab:;
		if (it != expr_end) {
			jule::I32 _102514_i = it - expr->begin();
			jule::Ptr<_2010edb23_Data> _102521_d = *it;
			{
				_203a5904d_possibleRefExpr(_self_, _102521_d.get()._field_Model);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_102429_m.get()._field_Datas.len() - _102514_i) > 1LL)) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_203b0d542_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_2064605ab:;
			++it;
			_102514_i++;
			goto _iter_begin_2064605ab;
		}
		_iter_end_2064605ab:;
	};
}



inline void _203a5d77d_newCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201019049_BuiltinNewCallExprModel> _103531_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _103531_m.get()._field_Kind));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_103531_m.get()._field_Init != nullptr)) {
		_203a5904d_possibleRefExpr(_self_, _103531_m.get()._field_Init);
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a5da03_outCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201018455_BuiltinOutCallExprModel> _104531_m) {
	if ((_104531_m.get()._field_Debug && _216de596a_Production)) {
		return;;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_203a5904d_possibleRefExpr(_self_, _104531_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a5dc78_outlnCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201018840_BuiltinOutlnCallExprModel> _105433_m) {
	if ((_105433_m.get()._field_Debug && _216de596a_Production)) {
		return;;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_203a5904d_possibleRefExpr(_self_, _105433_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a5deed_panicCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201019434_BuiltinPanicCallExprModel> _106333_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_203a5904d_possibleRefExpr(_self_, _106333_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_203b0ee5b_locInfo(_self_.get()._field_oc, &(_106333_m.get()._field_Token));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _203a5e273_assertCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_2010198da_BuiltinAssertCallExprModel> _107134_m) {
	if (_216de596a_Production) {
		return;;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_203a5904d_possibleRefExpr(_self_, _107134_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_203b0cc39_write(_self_.get()._field_oc, _203a64014_cstrLit(static_cast<jule::Slice<jule::U8>>(_107134_m.get()._field_Log)));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_203b0ee5b_locInfo(_self_.get()._field_oc, &(_107134_m.get()._field_Token));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _203a5e4e8_errorCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101b7bb_BuiltinErrorCallExprModel> _108433_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_201020abc_IsVoid(_108433_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _108433_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_20646be14:;
				{
					jule::Ptr<_2010a4975_Var> _108921_v = _108433_m.get()._field_Err.get()._field_Model.cast_ptr<_2010a4975_Var>(&__jule_any_type8);;
					if (_108921_v.get()._field_Ident.equal("error", 5)) {
						_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_20646bdae:;
		};
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_203b25eb6_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_108433_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _108433_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_20646e961:;
				{
					jule::Ptr<_2010a4975_Var> _110121_v = _108433_m.get()._field_Err.get()._field_Model.cast_ptr<_2010a4975_Var>(&__jule_any_type8);;
					if (_110121_v.get()._field_Ident.equal("error", 5)) {
						_203b0cc39_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_20646e884:;
		};
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_203a5904d_possibleRefExpr(_self_, _108433_m.get()._field_Err.get()._field_Model);
	jule::I32 _111013_i = _203b0db5d_pushAnyType(_self_.get()._field_oc, _108433_m.get()._field_Err.get()._field_Kind);;
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(_111013_i));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _203a5e76d_copyCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101b3d1_BuiltinCopyCallExprModel> _111632_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_203a5904d_possibleRefExpr(_self_, _111632_m.get()._field_Dest.get()._field_Model);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_201133817_Prim(_111632_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_203a5904d_possibleRefExpr(_self_, _111632_m.get()._field_Src.get()._field_Model);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_201133817_Prim(_111632_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a5e9e3_lenCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101a59a_BuiltinLenCallExprModel> _113231_m) {
	_203a5904d_possibleRefExpr(_self_, _113231_m.get()._field_Expr.get()._field_Model);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _203a5ec68_capCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101a8b9_BuiltinCapCallExprModel> _113731_m) {
	_203a5904d_possibleRefExpr(_self_, _113731_m.get()._field_Expr.get()._field_Model);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _203a5eedd_deleteCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101b06d_BuiltinDeleteCallExprModel> _114234_m) {
	_203a5904d_possibleRefExpr(_self_, _114234_m.get()._field_Dest.get()._field_Model);
	if ((_114234_m.get()._field_Key != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_203a5904d_possibleRefExpr(_self_, _114234_m.get()._field_Key.get()._field_Model);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _203a60263_makeCallSlice(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201019d91_BuiltinMakeCallExprModel>* _115338_m) {
	jule::Ptr<_20113ca0d_Slc> _115417_slice = _201134791_Slc((*(_115338_m)).get()._field_Kind.ptr());;
	_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_115338_m)).get()._field_Kind));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_203a5904d_possibleRefExpr(_self_, (*(_115338_m)).get()._field_Len);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_115338_m)).get()._field_Cap != nullptr)) {
		_203a5904d_possibleRefExpr(_self_, (*(_115338_m)).get()._field_Cap);
	} else {
		_203a5904d_possibleRefExpr(_self_, (*(_115338_m)).get()._field_Len);
	};
	if (_203b2d155_shouldInitialized(&(_115417_slice.get()._field_Elem))) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_203a632bb_initExpr(_self_, _115417_slice.get()._field_Elem);
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a604d8_makeCallStr(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201019d91_BuiltinMakeCallExprModel>* _117136_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_203a5904d_possibleRefExpr(_self_, (*(_117136_m)).get()._field_Len);
	if (((*(_117136_m)).get()._field_Cap != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_203a5904d_possibleRefExpr(_self_, (*(_117136_m)).get()._field_Cap);
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a6075d_makeCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201019d91_BuiltinMakeCallExprModel> _118232_m) {
	if ((_201134791_Slc(_118232_m.get()._field_Kind.ptr()) != nullptr)) {
		_203a60263_makeCallSlice(_self_, &(_118232_m));
		return;;
	};
	_203a604d8_makeCallStr(_self_, &(_118232_m));
}



inline void _203a609d3_pushToSlice(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201205ed3_PushToSliceExprModel> _119035_m) {
	;
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("{ ", 2));
	_203b0cc39_write(_self_.get()._field_oc, _203b1d6d9_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _119035_m.get()._field_Elems.get()._field_ElemKind));
	jule::Bool _119817_ptr = false;;
	{
		auto &_match_expr{ _119035_m.get()._field_Dest };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_206481c92:;
			{
				jule::Ptr<_20101288e_UnaryExprModel> _120221_u = _119035_m.get()._field_Dest.cast_ptr<_20101288e_UnaryExprModel>(&__jule_any_type74);;
				if ((_201133ce0_Ptr(_120221_u.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(" *__jule_push_dest = ", 21));
					_203a5904d_possibleRefExpr(_self_, _120221_u.get()._field_Expr.get()._field_Model);
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("; ", 2));
					_119817_ptr=true;
					goto _match_end_206483249;
				};
				goto _case_begin_20648329e;
			}
		}
		else {
			_case_begin_20648329e:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str(" &__jule_push_dest = ", 21));
				_203a5904d_possibleRefExpr(_self_, _119035_m.get()._field_Dest);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("; ", 2));
			}
		}
		_match_end_206483249:;
	};
	if ((_119035_m.get()._field_Elems.get()._field_Elems.len() == 1LL)) {
		if (_119817_ptr) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->push(", 23));
		} else {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.push(", 22));
		};
		_203a5904d_possibleRefExpr(_self_, _119035_m.get()._field_Elems.get()._field_Elems[0LL]);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("); }", 4));
		return;;
	};
	if (_119817_ptr) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.alloc_for_append(", 34));
	};
	_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(static_cast<jule::I32>(_119035_m.get()._field_Elems.get()._field_Elems.len())));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("); ", 3));
	{
		auto expr = &(_119035_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206489272:;
		if (it != expr_end) {
			jule::Any _123621_e = *it;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("__jule_push_dest", 16));
				if (_119817_ptr) {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("->__push(", 9));
				} else {
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				};
				_203a5904d_possibleRefExpr(_self_, _123621_e);
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("); ", 3));
			}
			_iter_next_206489272:;
			++it;
			goto _iter_begin_206489272;
		}
		_iter_end_206489272:;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _203a60c58_appendToSlice(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20120638a_AppendToSliceExprModel> _125037_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203a5904d_possibleRefExpr(_self_, _125037_m.get()._field_Dest);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	_203a5904d_possibleRefExpr(_self_, _125037_m.get()._field_Slice);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _203a60ecd_appendCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101a27b_BuiltinAppendCallExprModel> _125834_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_203a5904d_possibleRefExpr(_self_, _125834_m.get()._field_Dest);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(",", 1));
	_203a5904d_possibleRefExpr(_self_, _125834_m.get()._field_Elements);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a61253_cloneCall(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201018b5e_BuiltinCloneCallExprModel> _126633_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_203a5904d_possibleRefExpr(_self_, _126633_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a614c8_sizeof(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101bab8_SizeofExprModel> _127230_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_203a5904d_possibleRefExpr(_self_, _127230_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a6174d_alignof(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101bda4_AlignofExprModel> _127831_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_203a5904d_possibleRefExpr(_self_, _127831_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _203a61a5b_runeLit(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101c190_RuneExprModel> _128427_m) {
	if ((_128427_m.get()._field_Code <= 127LL)) {
		jule::Str _128621_b = _203a6394d_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_128427_m.get()._field_Code)));;
		if (_128621_b.equal("'", 1)) {
			_128621_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _128621_b) + jule::Str("'", 1));;
	};
	return _203a645b9_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_128427_m.get()._field_Code)));;
}



inline void _203a61cd1_structureStatic(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201017069_StructStaticIdentExprModel> _129539_m) {
	_203b0cc39_write(_self_.get()._field_oc, static__203a6a988_funcIns(&(_129539_m.get()._field_Method)));
}



inline void _203a62056_integratedToStr(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101c49d_IntegratedToStrExprModel> _129939_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_203a5904d_possibleRefExpr(_self_, _129939_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _203a622cb_backendEmit(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101c866_BackendEmitExprModel> _130535_m) {
	if ((_130535_m.get()._field_Exprs.len() == 0LL)) {
		_203b0ceae_writeR(_self_.get()._field_oc, &(_130535_m.get()._field_Code));
		return;;
	};
	jule::I32 _131013_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _131117_args = jule::Slice<jule::Any>::alloc(_130535_m.get()._field_Exprs.len(), _130535_m.get()._field_Exprs.len());;
	{
		auto expr = &(_130535_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206495cb7:;
		if (it != expr_end) {
			jule::I32 _131214_i = it - expr->begin();
			jule::Any _131221_expr = *it;
			{
				_203a5904d_possibleRefExpr(_self_, _131221_expr);
				_131117_args[_131214_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_131013_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _131013_n);
			}
			_iter_next_206495cb7:;
			++it;
			_131214_i++;
			goto _iter_begin_206495cb7;
		}
		_iter_end_206495cb7:;
	};
	_203b0cc39_write(_self_.get()._field_oc, _2011e4169_Format(_130535_m.get()._field_Code, _131117_args));
}



inline void _203a62551_free(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_20101cb52_FreeExprModel> _132028_m) {
	_203a5904d_possibleRefExpr(_self_, _132028_m.get()._field_Expr);
	if (_216de52c7_RC) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _203a627c6_mutSlicing(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_2012068c9_MutSlicingExprModel> _132934_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203a5904d_possibleRefExpr(_self_, _132934_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_216de596a_Production))) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_203b0ee5b_locInfo(_self_.get()._field_oc, &(_132934_m.get()._field_Token));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_203a5904d_possibleRefExpr(_self_, _132934_m.get()._field_Left);
	if ((_132934_m.get()._field_Right != nullptr)) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_203a5904d_possibleRefExpr(_self_, _132934_m.get()._field_Right);
	};
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _203a62a4b_strInsertBegin(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201206db3_StrInsertBeginExprModel> _134638_m) {
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
	_203a5904d_possibleRefExpr(_self_, _134638_m.get()._field_Dest);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_203a5904d_possibleRefExpr(_self_, _134638_m.get()._field_Expr);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _203a62cc1_strComp(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_201205147_StrCompExprModel> _135431_m) {
	if (_135431_m.get()._field_NotEq) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Slice<jule::U8> _135813_bytes = static_cast<jule::Slice<jule::U8>>(_1ee33e717_ReadStr(_135431_m.get()._field_Right.ptr()));;
	_203a5904d_possibleRefExpr(_self_, _135431_m.get()._field_Left);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_203b0cc39_write(_self_.get()._field_oc, _203a64014_cstrLit(_135813_bytes));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(static_cast<jule::I32>(_135813_bytes.len())));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_135431_m.get()._field_NotEq) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _203a63046_model(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Any _137029_m) {
	{
		auto &_match_expr{ _137029_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_2064a36dc:;
			{
				_203b0cc39_write(_self_.get()._field_oc, _137029_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_2064a39b7:;
			{
				_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _137029_m.cast_ptr<_2011310ea_TypeKind>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_2064a3a2d:;
			{
				_203a5769a_constant(_self_, _137029_m.cast_ptr<_1ee33c6d2_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_2064a3a94:;
			{
				_203a582d3_var(_self_, _137029_m.cast_ptr<_2010a4975_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_2064a3b0a:;
			{
				_203a58558_structureIns(_self_, _137029_m.cast_ptr<_20100d071_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_2064a4578:;
			{
				_203a5d00d_funcInsCommon(_self_, _137029_m.cast_ptr<_20102330b_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_2064a45de:;
			{
				_203a57cd8_unsafeBinary(_self_, _137029_m.cast_ptr<_2012057b8_UnsafeBinopExprModel>(&__jule_any_type129).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_2064a4655:;
			{
				_203a5805d_binary(_self_, _137029_m.cast_ptr<_2010124d7_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_2064a46bb:;
			{
				_203a587cd_unary(_self_, _137029_m.cast_ptr<_20101288e_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_2064a4732:;
			{
				_203a58a53_structureLit(_self_, _137029_m.cast_ptr<_201013142_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_2064a4798:;
			{
				_203a58cc8_allocStructure(_self_, _137029_m.cast_ptr<_201013450_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_2064a480e:;
			{
				_203a5968b_casting(_self_, _137029_m.cast_ptr<_2010139a0_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_2064a4875:;
			{
				_203a5b02d_funcCall(_self_, _137029_m.cast_ptr<_201014352_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_2064a48db:;
			{
				_203a5b2a3_slice(_self_, _137029_m.cast_ptr<_201014709_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_2064a4952:;
			{
				_203a5cc88_array(_self_, _137029_m.cast_ptr<_201017432_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_2064a49b8:;
			{
				_203a5b79d_unsafeIndexing(_self_, _137029_m.cast_ptr<_201205b4d_UnsafeIndexingExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_2064a4a2e:;
			{
				_203a5b528_indexing(_self_, _137029_m.cast_ptr<_201014b7c_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_2064a4aa6:;
			{
				_203a5ba23_anonFunc(_self_, _137029_m.cast_ptr<_201015034_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_2064a4b2d:;
			{
				_203a5bc98_mapExpr(_self_, _137029_m.cast_ptr<_20101585e_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_2064a4ba5:;
			{
				_203a5c01d_slicing(_self_, _137029_m.cast_ptr<_201015d9d_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_2064a4c2c:;
			{
				_203a5c293_traitSub(_self_, _137029_m.cast_ptr<_2010163dc_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_2064a4ca4:;
			{
				_203a5c518_structureSub(_self_, _137029_m.cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_2064a4d2b:;
			{
				_203a5c78d_commonIdent(_self_, _137029_m.cast_ptr<_20101771d_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_2064a4da3:;
			{
				_203a5ca13_commonSub(_self_, _137029_m.cast_ptr<_201017c7e_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_2064a4e2a:;
			{
				_203a5d508_tuple(_self_, _137029_m.cast_ptr<_20101807b_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_2064a4ea2:;
			{
				_203a5da03_outCall(_self_, _137029_m.cast_ptr<_201018455_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_2064a5029:;
			{
				_203a5dc78_outlnCall(_self_, _137029_m.cast_ptr<_201018840_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_2064a50a1:;
			{
				_203a5d77d_newCall(_self_, _137029_m.cast_ptr<_201019049_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_2064a5128:;
			{
				_203a5deed_panicCall(_self_, _137029_m.cast_ptr<_201019434_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_2064a51a0:;
			{
				_203a5e273_assertCall(_self_, _137029_m.cast_ptr<_2010198da_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_2064a5227:;
			{
				_203a5e4e8_errorCall(_self_, _137029_m.cast_ptr<_20101b7bb_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_2064a529e:;
			{
				_203a6075d_makeCall(_self_, _137029_m.cast_ptr<_201019d91_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_2064a5326:;
			{
				_203a60ecd_appendCall(_self_, _137029_m.cast_ptr<_20101a27b_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_2064a539d:;
			{
				_203a61253_cloneCall(_self_, _137029_m.cast_ptr<_201018b5e_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_2064a5425:;
			{
				_203a5e76d_copyCall(_self_, _137029_m.cast_ptr<_20101b3d1_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_2064a549c:;
			{
				_203a5e9e3_lenCall(_self_, _137029_m.cast_ptr<_20101a59a_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_2064a5524:;
			{
				_203a5ec68_capCall(_self_, _137029_m.cast_ptr<_20101a8b9_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_2064a559b:;
			{
				_203a5eedd_deleteCall(_self_, _137029_m.cast_ptr<_20101b06d_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_2064a5623:;
			{
				_203a614c8_sizeof(_self_, _137029_m.cast_ptr<_20101bab8_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_2064a569a:;
			{
				_203a6174d_alignof(_self_, _137029_m.cast_ptr<_20101bda4_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_2064a5722:;
			{
				_203b0cc39_write(_self_.get()._field_oc, _203a61a5b_runeLit(_self_, _137029_m.cast_ptr<_20101c190_RuneExprModel>(&__jule_any_type88)));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_2064a5799:;
			{
				_203a61cd1_structureStatic(_self_, _137029_m.cast_ptr<_201017069_StructStaticIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_2064a5821:;
			{
				_203a62056_integratedToStr(_self_, _137029_m.cast_ptr<_20101c49d_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_2064a5898:;
			{
				_203a622cb_backendEmit(_self_, _137029_m.cast_ptr<_20101c866_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_2064a5920:;
			{
				_203a62551_free(_self_, _137029_m.cast_ptr<_20101cb52_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_2064a5997:;
			{
				_203a627c6_mutSlicing(_self_, _137029_m.cast_ptr<_2012068c9_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_2064a5a1e:;
			{
				_203a62a4b_strInsertBegin(_self_, _137029_m.cast_ptr<_201206db3_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_2064a5a96:;
			{
				_203a62cc1_strComp(_self_, _137029_m.cast_ptr<_201205147_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else {
			_case_begin_2064a3863:;
			{
				_203b0cc39_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_2064a3786:;
	};
}



inline void _203a632bb_initExpr(jule::Ptr<_203a5608e_exprCoder> _self_, jule::Ptr<_2011310ea_TypeKind> _147332_t) {
	if (_201132d66_NilCompatible(_147332_t.ptr())) {
		if ((_201133ce0_Ptr(_147332_t.ptr()) != nullptr)) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _147332_t));
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_20113d613_Tuple> _148317_tup = _2011354a6_Tup(_147332_t.ptr());;
	if ((_148317_tup != nullptr)) {
		_203b25878_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _148317_tup);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_148317_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2064bdc13:;
			if (it != expr_end) {
				jule::I32 _148718_i = it - expr->begin();
				jule::Ptr<_2011310ea_TypeKind> _148725_tt = *it;
				{
					if ((!(_203b2d155_shouldInitialized(&(_148725_tt))))) {
						goto _iter_next_2064bdc13;
					};
					_203b0cc39_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_203b0cc39_write(_self_.get()._field_oc, _1ee32cd10_Itoa(_148718_i));
					_203b0cc39_write(_self_.get()._field_oc, jule::Str("=", 1));
					_203a632bb_initExpr(_self_, _148725_tt);
					if (((_148317_tup.get()._field_Types.len() - _148718_i) > 1LL)) {
						_203b0cc39_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_2064bdc13:;
				++it;
				_148718_i++;
				goto _iter_begin_2064bdc13;
			}
			_iter_end_2064bdc13:;
		};
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_20103510e_Enum> _150217_enm = _201134054_Enum(_147332_t.ptr());;
	if ((_150217_enm != nullptr)) {
		_203a63046_model(_self_, _150217_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_201138850_Prim> _150713_prim = _201133817_Prim(_147332_t.ptr());;
	if ((_150713_prim != nullptr)) {
		if (_1ee33c292_IsNum(_150713_prim.get()._field_Kind)) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_20113b7dc_IsBool(_150713_prim.ptr())) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_20113ba51_IsStr(_150713_prim.ptr())) {
			_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_20113452c_Arr(_147332_t.ptr()) != nullptr)) {
		jule::Ptr<_20113eba8_Arr> _151921_arr = _20113452c_Arr(_147332_t.ptr());;
		_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _147332_t));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
		_203a632bb_initExpr(_self_, _151921_arr.get()._field_Elem);
		_203b0cc39_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_20100d071_StructIns> _152617_s = _201134c69_Struct(_147332_t.ptr());;
	if ((((_152617_s != nullptr) && _152617_s.get()._field_Decl.get()._field_Binded) && (_203b2ca28_findDirective(&(_152617_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("(", 1));
		_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _147332_t));
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_203b0cc39_write(_self_.get()._field_oc, _203b214bc_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _147332_t));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _203a5608e_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203a65aa4_deriveCoder> static__203a65e4a_new(jule::Ptr<_203b0c5da_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_203a65aa4_deriveCoder>(_203a65aa4_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _203a66258_cloneFuncDecl(_203a65aa4_deriveCoder* _self_, jule::Ptr<_20100a25a_Struct>* _1633_s) {
	jule::Str _1717_obj = _203b1e72e_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	(_1717_obj).append(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _203a66566_cloneFuncDef(_203a65aa4_deriveCoder* _self_, jule::Ptr<_20100a25a_Struct>* _2232_s) {
	jule::Str _2317_obj = _203b1e72e_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	(_2317_obj).append("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _203a65aa4_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203a6748a_TestCoder> static__203a678b9_New(jule::Ptr<_203b0c5da_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_203a6748a_TestCoder>(_203a6748a_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_20107b397_ImportInfo> _203a67b2d_findTestingPackage(jule::Ptr<_203a6748a_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2064d1561:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_2064d1561:;
			++it;
			goto _iter_begin_2064d1561;
		}
		_iter_end_2064d1561:;
	};
	return nullptr;;
}



inline void _203a67da3_appendTest(jule::Ptr<_203a6748a_TestCoder> _self_, jule::Ptr<_20102330b_FnIns> _4334_f) {
	_203b0d542_indent(_self_.get()._field_oc);
	_203a68568_callTmReset(_self_);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \" ", 34));
	_203b0cc39_write(_self_.get()._field_oc, _203a64014_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(" << std::endl;\n", 15));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, static__203a6a988_funcIns(&(_4334_f)));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _203a68128_appendPackageTests(jule::Ptr<_203a6748a_TestCoder> _self_, jule::Ptr<_20107ded2_Package>* _5843_p) {
	{
		auto expr = &((*(_5843_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2064d5b3c:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &(_5921_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2064d6478:;
					if (it != expr_end) {
						jule::Ptr<_20102065a_Fn> _6025_f = *it;
						{
							if (_203b2cdad_hasDirective(&(_6025_f.get()._field_Directives), jule::Str("test", 4))) {
								_203a67da3_appendTest(_self_, _6025_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_2064d6478:;
						++it;
						goto _iter_begin_2064d6478;
					}
					_iter_end_2064d6478:;
				};
			}
			_iter_next_2064d5b3c:;
			++it;
			goto _iter_begin_2064d5b3c;
		}
		_iter_end_2064d5b3c:;
	};
}



inline jule::Bool _203a6838c_readyTestingPackage(jule::Ptr<_203a6748a_TestCoder> _self_) {
	jule::Ptr<_20107b397_ImportInfo> _6917_p = _203a67b2d_findTestingPackage(_self_);;
	if ((_6917_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_20107c475_FindStruct(_6917_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_20100e01c_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_20100e01c_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_20100e01c_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _203a68568_callTmReset(jule::Ptr<_203a6748a_TestCoder> _self_) {
	_203b0cc39_write(_self_.get()._field_oc, static__203a6a6e1_func(&(_self_.get()._field_tmReset)));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _203a68744_callTmFailed(jule::Ptr<_203a6748a_TestCoder> _self_) {
	_203b0cc39_write(_self_.get()._field_oc, static__203a6a6e1_func(&(_self_.get()._field_tmFailed)));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _203a68920_callTmSkipped(jule::Ptr<_203a6748a_TestCoder> _self_) {
	_203b0cc39_write(_self_.get()._field_oc, static__203a6a6e1_func(&(_self_.get()._field_tmSkipped)));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _203a68aeb_Serialize(jule::Ptr<_203a6748a_TestCoder> _self_) {
	_203b18717_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_203b1853b_end(_self_.get()._field_oc);
	});;
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_203b0d18a_addIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	if ((!(_203a6838c_readyTestingPackage(_self_)))) {
		_203b0cc39_write(_self_.get()._field_oc, jule::Str("}", 1));
		_203b0d366_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_203b0cc39_write(_self_.get()._field_oc, _203b1c386_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _203b1ea3c_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_203b0cc39_write(_self_.get()._field_oc, _203b1ea3c_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_203b0d18a_addIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_203a68744_callTmFailed(_self_);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_203a68920_callTmSkipped(_self_);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_203a68128_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_203b0d366_doneIndent(_self_.get()._field_oc);
	_203b0d542_indent(_self_.get()._field_oc);
	_203b0cc39_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _203a6748a_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__203a6a05e_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		(_3521_obj).append("_", 1);
		_3521_obj+=_1ee32c6d3_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		(_3521_obj).append("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	(_4217_obj).append("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__203a6a449_toLocal(jule::I32 _5423_row, jule::I32 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	(_5517_obj).append("_", 1);
	_5517_obj+=_1ee32cd10_Itoa(_5423_row);
	_5517_obj+=_1ee32cd10_Itoa(_5433_col);
	(_5517_obj).append("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__203a6a6e1_func(jule::Ptr<_20102065a_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_Binded) {
			_case_begin_2064eb3c2:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if ((*(_6521_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_2064eb438:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_201020d31_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_2064ea8aa:;
			{
				jule::Str _7221_obj = static__203a6a05e_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_2064ea79a:;
			{
				return static__203a6a05e_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_2064ea091:;
	};
}



inline jule::Str static__203a6a988_funcIns(jule::Ptr<_20102330b_FnIns>* _8424_f) {
	if (_201024692_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_Binded || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__203a6a6e1_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__203a6a05e_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__203a6ac30_traitDecl(jule::Ptr<_20103287b_Trait> _9525_t) {
	if (_20103341a_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__203a6a05e_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__203a6aec7_param(jule::Ptr<_20101dd1d_Param>* _10322_p) {
	if ((_1ed6978c8_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _1ed697631_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_20101e406_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__203a6a449_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__203a6a449_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__203a6b26e_structure(jule::Ptr<_20100a25a_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_Binded) {
		if (_203b2cdad_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__203a6a05e_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__203a6b516_structureIns(jule::Ptr<_20100d071_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_Binded || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__203a6b26e_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__203a6a05e_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__203a6b7ad_field(jule::Ptr<_201007686_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_Binded) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__203a6ba55_var(jule::Ptr<_2010a4975_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_Binded) {
			_case_begin_206505673:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_206504a7e:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_206504ae5:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_206504b5b:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_206504bc2:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1ee32cd10_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_206504e14:;
			{
				return static__203a6a449_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_2065042a9:;
			{
				return static__203a6a05e_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_20650452e:;
	};
}



inline jule::Str static__203a6bcec_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	(_16517_obj).append("_iter_begin_", 12);
	_16517_obj+=_1ee32c6d3_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__203a6c094_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	(_17317_obj).append("_iter_end_", 10);
	_17317_obj+=_1ee32c6d3_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__203a6c33b_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	(_18117_obj).append("_iter_next_", 11);
	_18117_obj+=_1ee32c6d3_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__203a6c5d3_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	(_18917_obj).append("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__203a6c87a_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	(_19717_obj).append("_match_end_", 11);
	_19717_obj+=_1ee32c6d3_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__203a6cb22_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	(_20517_obj).append("_case_begin_", 12);
	_20517_obj+=_1ee32c6d3_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _203a699cb_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _203b0ac48_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _203b0b210_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _203b0b5b7_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _203b1a906_Str(_203b1a692_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _203b1ac14_Equal(jule::Ptr<_203b1a692_customType> _self_, jule::Ptr<_2011310ea_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _203b1a692_customType _Src) {
	_Stream << _203b1a906_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_203b1b110_typeCoder> static__203b1b64e_new(jule::Ptr<_203b0c5da_ObjectCoder>* _6324_oc) {
	jule::Ptr<_203b1b110_typeCoder> _6417_tc = jule::new_ptr<_203b1b110_typeCoder>(_203b1b110_typeCoder{._field_oc=(*(_6324_oc)), });;
	_6417_tc.get()._field_rc=static__203b24190_new(&(_6417_tc));
	return _6417_tc;;
}



inline jule::Str _203b1b95c_toType(_203b1b110_typeCoder* _self_, jule::Str _7029_id) {
	if ((!_7029_id.equal("uintptr", 7))) {
		_7029_id=_1ee32ebd0_RealKindOf(_7029_id);
	};
	if (((97LL <= _7029_id[0LL]) && (_7029_id[0LL] <= 122LLU))) {
		_7029_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _7029_id);;
}



inline jule::Str _203b1bc6a_prim(_203b1b110_typeCoder* _self_, jule::Ptr<_201138850_Prim> _8123_p) {
	return _203b1b95c_toType(_self_, _201138b80_Str(_8123_p.ptr()));;
}



inline jule::Str _203b1c078_tuple(_203b1b110_typeCoder* _self_, jule::Ptr<_20113d613_Tuple> _8628_t) {
	jule::Str _8717_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8628_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206604de3:;
		if (it != expr_end) {
			jule::Ptr<_2011310ea_TypeKind> _8821_tk = *it;
			{
				_8717_obj+=_203b214bc_kind(_self_, _8821_tk);
				(_8717_obj).append(",", 1);
			}
			_iter_next_206604de3:;
			++it;
			goto _iter_begin_206604de3;
		}
		_iter_end_206604de3:;
	};
	(_8717_obj).mut_slice(0LL, (_8717_obj.len() - 1LL));;
	(_8717_obj).append(">", 1);
	return _8717_obj;;
}



inline jule::Str _203b1c386_asSptr(_203b1b110_typeCoder* _self_, jule::Str _9825_elem) {
	jule::Str _9917_obj = jule::Str("jule::Ptr<", 10);;
	_9917_obj+=_9825_elem;
	(_9917_obj).append(">", 1);
	return _9917_obj;;
}



inline jule::Str _203b1c694_asPtr(_203b1b110_typeCoder* _self_, jule::Str _10624_elem) {
	return (_10624_elem + jule::Str("*", 1));;
}



inline jule::Str _203b1c9a2_sptr(_203b1b110_typeCoder* _self_, jule::Ptr<_20113c0a1_Sptr> _11127_sptr) {
	return _203b1c386_asSptr(_self_, _203b214bc_kind(_self_, _11127_sptr.get()._field_Elem));;
}



inline jule::Str _203b1ccb0_ptr(_203b1b110_typeCoder* _self_, jule::Ptr<_201140615_Ptr> _11626_p) {
	;
	if (_2011410d8_IsUnsafe(_11626_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12117_elem = _203b214bc_kind(_self_, _11626_p.get()._field_Elem);;
	(_12117_elem).append("*", 1);
	return _12117_elem;;
}



inline jule::Str _203b1d0bd_enumDecl(_203b1b110_typeCoder* _self_, jule::Ptr<_20103510e_Enum> _12731_e) {
	return _203b214bc_kind(_self_, _12731_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _203b1d3cb_typeEnumDecl(_203b1b110_typeCoder* _self_, jule::Ptr<_201036709_TypeEnum> _13235_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _203b1d6d9_asSlice(_203b1b110_typeCoder* _self_, jule::Ptr<_2011310ea_TypeKind> _13630_elem) {
	jule::Str _13717_obj = jule::Str("jule::Slice<", 12);;
	_13717_obj+=_203b214bc_kind(_self_, _13630_elem);
	(_13717_obj).append(">", 1);
	return _13717_obj;;
}



inline jule::Str _203b1d9e7_slice(_203b1b110_typeCoder* _self_, jule::Ptr<_20113ca0d_Slc> _14428_s) {
	return _203b1d6d9_asSlice(_self_, _14428_s.get()._field_Elem);;
}



inline jule::Str _203b1dd05_mapType(_203b1b110_typeCoder* _self_, jule::Ptr<_20113e0b4_Map> _14930_m) {
	jule::Str _15017_obj = jule::Str("jule::Map<", 10);;
	_15017_obj+=_203b214bc_kind(_self_, _14930_m.get()._field_Key);
	(_15017_obj).append(",", 1);
	_15017_obj+=_203b214bc_kind(_self_, _14930_m.get()._field_Val);
	(_15017_obj).append(">", 1);
	return _15017_obj;;
}



inline jule::Str _203b1e113_traitIdent(_203b1b110_typeCoder* _self_, jule::Str _15829_ident) {
	jule::Str _15917_obj = jule::Str("jule::Trait<", 12);;
	_15917_obj+=_15829_ident;
	(_15917_obj).append(">", 1);
	return _15917_obj;;
}



inline jule::Str _203b1e421_traitDecl(_203b1b110_typeCoder* _self_, jule::Ptr<_20103287b_Trait> _16628_t) {
	return _203b1e113_traitIdent(_self_, static__203a6ac30_traitDecl(_16628_t));;
}



inline jule::Str _203b1e72e_structure(_203b1b110_typeCoder* _self_, jule::Ptr<_20100a25a_Struct> _17128_s) {
	jule::Str _17217_rep = jule::Str();;
	if ((_17128_s.get()._field_Binded && (!(_203b2cdad_hasDirective(&(_17128_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		(_17217_rep).append("struct ", 7);
	};
	_17217_rep+=static__203a6b26e_structure(&(_17128_s));
	return _17217_rep;;
}



inline jule::Str _203b1ea3c_structureIns(_203b1b110_typeCoder* _self_, jule::Ptr<_20100d071_StructIns> _18135_s) {
	if (_18135_s.get()._field_Decl.get()._field_Binded) {
		jule::Str _18321_ident = static__203a6b516_structureIns(&(_18135_s));;
		if ((_18135_s.get()._field_Generics.len() > 0LL)) {
			(_18321_ident).append("<", 1);
			{
				auto expr = &(_18135_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_206610a14:;
				if (it != expr_end) {
					jule::Ptr<_20112e868_InsGeneric> _18629_g = *it;
					{
						_18321_ident+=_203b214bc_kind(_self_, _18629_g.get()._field_Kind);
						(_18321_ident).append(",", 1);
					}
					_iter_next_206610a14:;
					++it;
					goto _iter_begin_206610a14;
				}
				_iter_end_206610a14:;
			};
			(_18321_ident).mut_slice(0LL, (_18321_ident.len() - 1LL));;
			(_18321_ident).append(">", 1);
		};
		jule::Ptr<_200d472d9_Directive> _19317_d = _203b2ca28_findDirective(&(_18135_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19317_d != nullptr)) {
			(_18321_ident).buffer.insert(0, ((_203b19086_concatAllParts(_19317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18321_ident;;
	};
	return static__203a6b516_structureIns(&(_18135_s));;
}



inline jule::Str _203b1ed4a_array(_203b1b110_typeCoder* _self_, jule::Ptr<_20113eba8_Arr> _20328_a) {
	jule::Str _20417_obj = jule::Str("jule::Array<", 12);;
	_20417_obj+=_203b214bc_kind(_self_, _20328_a.get()._field_Elem);
	(_20417_obj).append(",", 1);
	_20417_obj+=_1ee32cd10_Itoa(_20328_a.get()._field_N);
	(_20417_obj).append(">", 1);
	return _20417_obj;;
}



inline jule::Str _203b20466_paramIns(_203b1b110_typeCoder* _self_, jule::Ptr<_20102243c_ParamIns>* _22932_p) {
	jule::Str _23017_obj = jule::Str();;
	if ((*(_22932_p)).get()._field_Decl.get()._field_Variadic) {
		(_23017_obj).append("jule::Slice<", 12);
		_23017_obj+=_203b214bc_kind(_self_, (*(_22932_p)).get()._field_Kind);
		(_23017_obj).append(">", 1);
	} else {
		_23017_obj+=_203b214bc_kind(_self_, (*(_22932_p)).get()._field_Kind);
	};
	if ((*(_22932_p)).get()._field_Decl.get()._field_Reference) {
		(_23017_obj).append("*", 1);
	};
	return _23017_obj;;
}



inline void _203b20a93_funcInsResult(_203b1b110_typeCoder* _self_, jule::Str* _25937_s, jule::Ptr<_20102330b_FnIns>* _25950_f) {
	if (_201020abc_IsVoid((*(_25950_f)).get()._field_Decl.ptr())) {
		if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
			((*(_25937_s))).append("jule::VoidExceptional", 21);
		} else {
			((*(_25937_s))).append("void", 4);
		};
		return;;
	};
	if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
		((*(_25937_s))).append("jule::Exceptional<", 18);
		_203b25eb6_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
		((*(_25937_s))).append(">", 1);
		return;;
	};
	_203b25eb6_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
}



inline jule::Str _203b20da1_anonFunc(_203b1b110_typeCoder* _self_, jule::Ptr<_20102330b_FnIns> _27731_f) {
	if (((_27731_f.get()._field_Result != nullptr) && (_2011354a6_Tup(_27731_f.get()._field_Result.ptr()) != nullptr))) {
		_203b0ddd3_pushResultIns((*(_self_))._field_oc, &(_27731_f));
	};
	jule::Str _28117_decl = jule::Str();;
	_203b20a93_funcInsResult(_self_, &(_28117_decl), &(_27731_f));
	(_28117_decl).append("(", 1);
	if ((_27731_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27731_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20661d8e0:;
			if (it != expr_end) {
				jule::Ptr<_20102243c_ParamIns> _28525_param = *it;
				{
					if (_20101e406_IsSelf(_28525_param.get()._field_Decl.ptr())) {
						goto _iter_next_20661d8e0;
					};
					_28117_decl+=_203b20466_paramIns(_self_, &(_28525_param));
					(_28117_decl).append(",", 1);
				}
				_iter_next_20661d8e0:;
				++it;
				goto _iter_begin_20661d8e0;
			}
			_iter_end_20661d8e0:;
		};
		(_28117_decl).mut_slice(0LL, (_28117_decl.len() - 1LL));;
	} else {
		(_28117_decl).append("void", 4);
	};
	(_28117_decl).append(")", 1);
	return _28117_decl;;
}



inline jule::Str _203b211ae_func(_203b1b110_typeCoder* _self_, jule::Ptr<_20102330b_FnIns> _30127_f) {
	jule::Str _30217_obj = jule::Str("jule::Fn<", 9);;
	_30217_obj+=_203b20da1_anonFunc(_self_, _30127_f);
	(_30217_obj).append(">", 1);
	return _30217_obj;;
}



inline jule::Str _203b214bc_kind(_203b1b110_typeCoder* _self_, jule::Ptr<_2011310ea_TypeKind> _30927_k) {
	{
		
		if ((_201134c69_Struct(_30927_k.ptr()) != nullptr)) {
			_case_begin_206621618:;
			{
				return _203b1ea3c_structureIns(_self_, _201134c69_Struct(_30927_k.ptr()));;
			}
		}
		else if (_201131ddc_Binded(_30927_k.ptr())) {
			_case_begin_206621690:;
			{
				return _30927_k.get()._field_BindIdent;;
			}
		}
		else if ((_201133817_Prim(_30927_k.ptr()) != nullptr)) {
			_case_begin_206621717:;
			{
				return _203b1bc6a_prim(_self_, _201133817_Prim(_30927_k.ptr()));;
			}
		}
		else if ((_2011354a6_Tup(_30927_k.ptr()) != nullptr)) {
			_case_begin_20662178e:;
			{
				return _203b1c078_tuple(_self_, _2011354a6_Tup(_30927_k.ptr()));;
			}
		}
		else if ((_201133a7b_Sptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_206621816:;
			{
				return _203b1c9a2_sptr(_self_, _201133a7b_Sptr(_30927_k.ptr()));;
			}
		}
		else if ((_201133ce0_Ptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_20662188d:;
			{
				return _203b1ccb0_ptr(_self_, _201133ce0_Ptr(_30927_k.ptr()));;
			}
		}
		else if ((_201134054_Enum(_30927_k.ptr()) != nullptr)) {
			_case_begin_206621915:;
			{
				return _203b1d0bd_enumDecl(_self_, _201134054_Enum(_30927_k.ptr()));;
			}
		}
		else if ((_2011342b8_TypeEnum(_30927_k.ptr()) != nullptr)) {
			_case_begin_20662198c:;
			{
				return _203b1d3cb_typeEnumDecl(_self_, _2011342b8_TypeEnum(_30927_k.ptr()));;
			}
		}
		else if ((_201134791_Slc(_30927_k.ptr()) != nullptr)) {
			_case_begin_206621a14:;
			{
				return _203b1d9e7_slice(_self_, _201134791_Slc(_30927_k.ptr()));;
			}
		}
		else if ((_201135242_Map(_30927_k.ptr()) != nullptr)) {
			_case_begin_206621a8b:;
			{
				return _203b1dd05_mapType(_self_, _201135242_Map(_30927_k.ptr()));;
			}
		}
		else if ((_201134ecd_Trait(_30927_k.ptr()) != nullptr)) {
			_case_begin_206621b13:;
			{
				return _203b1e421_traitDecl(_self_, _201134ecd_Trait(_30927_k.ptr()));;
			}
		}
		else if ((_20113452c_Arr(_30927_k.ptr()) != nullptr)) {
			_case_begin_206621b8a:;
			{
				return _203b1ed4a_array(_self_, _20113452c_Arr(_30927_k.ptr()));;
			}
		}
		else if ((_201134a05_Fn(_30927_k.ptr()) != nullptr)) {
			_case_begin_206621c12:;
			{
				return _203b211ae_func(_self_, _201134a05_Fn(_30927_k.ptr()));;
			}
		}
		_match_end_206621470:;
	};
	{
		auto &_match_expr{ _30927_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_206621cbc:;
			{
				return _30927_k.get()._field_Kind.cast_ptr<_203b1a692_customType>(27).get()._field_kind;;
			}
		}
		else {
			_case_begin_206628598:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_206627850:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _203b1b110_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203b23bc8_resultCoder> static__203b24190_new(jule::Ptr<_203b1b110_typeCoder>* _36324_tc) {
	return jule::new_ptr<_203b23bc8_resultCoder>(_203b23bc8_resultCoder{._field_tc=(*(_36324_tc))});;
}



inline void _203b244ae_ptr(_203b23bc8_resultCoder* _self_, jule::Str* _36727_s, jule::Ptr<_201140615_Ptr> _36739_p) {
	((*(_36727_s))).append("p", 1);
	_203b25b97_codeMut(_self_, _36727_s, &(_36739_p.get()._field_Elem));
}



inline void _203b247cd_sptr(_203b23bc8_resultCoder* _self_, jule::Str* _37228_s, jule::Ptr<_20113c0a1_Sptr> _37240_p) {
	((*(_37228_s))).append("x", 1);
	_203b25b97_codeMut(_self_, _37228_s, &(_37240_p.get()._field_Elem));
}



inline void _203b24aec_mapType(_203b23bc8_resultCoder* _self_, jule::Str* _37731_s, jule::Ptr<_20113e0b4_Map> _37743_p) {
	((*(_37731_s))).append("m", 1);
	_203b25b97_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Key));
	_203b25b97_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Val));
}



inline void _203b24e1b_slice(_203b23bc8_resultCoder* _self_, jule::Str* _38329_s, jule::Ptr<_20113ca0d_Slc> _38341_slc) {
	((*(_38329_s))).append("s", 1);
	_203b25b97_codeMut(_self_, _38329_s, &(_38341_slc.get()._field_Elem));
}



inline void _203b2523a_arr(_203b23bc8_resultCoder* _self_, jule::Str* _38827_s, jule::Ptr<_20113eba8_Arr> _38839_arr) {
	((*(_38827_s))).append("a", 1);
	(*(_38827_s))+=_1ee32ca68_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38839_arr.get()._field_N)), 16LL);
	_203b25b97_codeMut(_self_, _38827_s, &(_38839_arr.get()._field_Elem));
}



inline void _203b25559_func(_203b23bc8_resultCoder* _self_, jule::Str* _39428_s, jule::Ptr<_20102330b_FnIns> _39440_f) {
	((*(_39428_s))).append("f", 1);
	{
		auto expr = &(_39440_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20662e35c:;
		if (it != expr_end) {
			jule::Ptr<_20102243c_ParamIns> _39621_p = *it;
			{
				if (_39621_p.get()._field_Decl.get()._field_Reference) {
					((*(_39428_s))).append("r", 1);
				};
				_203b25b97_codeMut(_self_, _39428_s, &(_39621_p.get()._field_Kind));
			}
			_iter_next_20662e35c:;
			++it;
			goto _iter_begin_20662e35c;
		}
		_iter_end_20662e35c:;
	};
	if ((_39440_f.get()._field_Result != nullptr)) {
		_203b25b97_codeMut(_self_, _39428_s, &(_39440_f.get()._field_Result));
	};
}



inline void _203b25878_tup(_203b23bc8_resultCoder* _self_, jule::Str* _40727_s, jule::Ptr<_20113d613_Tuple> _40739_tup) {
	{
		auto expr = &(_40739_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206630d64:;
		if (it != expr_end) {
			jule::Ptr<_2011310ea_TypeKind> _40821_t = *it;
			{
				((*(_40727_s))).append("__jule_tuple_", 13);
				_203b25b97_codeMut(_self_, _40727_s, &(_40821_t));
			}
			_iter_next_206630d64:;
			++it;
			goto _iter_begin_206630d64;
		}
		_iter_end_206630d64:;
	};
}



inline void _203b25b97_codeMut(_203b23bc8_resultCoder* _self_, jule::Str* _41431_s, jule::Ptr<_2011310ea_TypeKind>* _41444_t) {
	{
		auto &_match_expr{ (*(_41444_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_206637442:;
			{
				_203b244ae_ptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_201140615_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_206631d76:;
			{
				_203b247cd_sptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_20113c0a1_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_206637068:;
			{
				_203b24aec_mapType(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_20113e0b4_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_2066370ce:;
			{
				_203b24e1b_slice(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_20113ca0d_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_20663750d:;
			{
				_203b2523a_arr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_20113eba8_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_206637574:;
			{
				_203b25559_func(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_20102330b_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_2066375da:;
			{
				jule::Ptr<_20103510e_Enum> _42917_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_20103510e_Enum>(3);;
				(*(_41431_s))+=static__203a6a05e_toOut(&(_42917_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42917_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_206637651:;
			{
				jule::Ptr<_201036709_TypeEnum> _43217_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_201036709_TypeEnum>(4);;
				(*(_41431_s))+=static__203a6a05e_toOut(&(_43217_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43217_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_2066376b7:;
			{
				jule::Ptr<_20100d071_StructIns> _43521_si = (*(_41444_t)).get()._field_Kind.cast_ptr<_20100d071_StructIns>(0);;
				(*(_41431_s))+=static__203a6b516_structureIns(&(_43521_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_20663772d:;
			{
				jule::Ptr<_20103287b_Trait> _43821_trt = (*(_41444_t)).get()._field_Kind.cast_ptr<_20103287b_Trait>(2);;
				(*(_41431_s))+=static__203a6ac30_traitDecl(_43821_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_206637794:;
			{
				(*(_41431_s))+=(*(_41444_t)).get()._field_Kind.cast_ptr<_201138850_Prim>(20).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_20663780a:;
			{
				_203b25878_tup(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_20113d613_Tuple>(23));
			}
		}
		else {
			_case_begin_206636dc0:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:445:13"));;
			}
		}
		_match_end_206636d6a:;
	};
}



inline void _203b25eb6_codeMut1(_203b23bc8_resultCoder* _self_, jule::Str* _44932_s, jule::Ptr<_2011310ea_TypeKind>* _44945_t) {
	jule::Ptr<_20113d613_Tuple> _45017_tup = _2011354a6_Tup((*(_44945_t)).ptr());;
	if ((_45017_tup != nullptr)) {
		_203b25878_tup(_self_, _44932_s, _45017_tup);
	} else {
		(*(_44932_s))+=_203b214bc_kind((*(_self_))._field_tc.ptr(), (*(_44945_t)));
	};
}



inline jule::Str _203b26291_code(_203b23bc8_resultCoder* _self_, jule::Ptr<_2011310ea_TypeKind>* _45828_t) {
	jule::Str _45917_s = jule::Str::alloc(0LL, 20LL);;
	_203b25b97_codeMut(_self_, &(_45917_s), _45828_t);
	return _45917_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _203b23bc8_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _206641ddb_Name(_206641b00_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _20664201d_What(_206641b00_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _206642150_Reset(_206641b00_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _206642282_Short(_206641b00_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _206641b00_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _20664510e_Name(_206645582_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _20664586d_What(_206645582_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _2066459a0_Reset(_206645582_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _206645ad2_Short(_206645582_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _206645582_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _2066487b6_Name(_206648c39_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _206649025_What(_206648c39_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _206649157_Reset(_206648c39_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _206649289_Short(_206648c39_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _206648c39_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _20664beb2_Name(_20664c435_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _20664c721_What(_20664c435_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _20664c853_Reset(_20664c435_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _20664c985_Short(_20664c435_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _20664c435_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _206650669_Name(_206650adc_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _206650dc8_What(_206650adc_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _20665100a_Reset(_206650adc_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _20665113c_Short(_206650adc_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _206650adc_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203b84e37_FlagSet> static__203b85223_New(void) {
	return jule::new_ptr<_203b84e37_FlagSet>(_203b84e37_FlagSet{._field_flags=jule::Slice<jule::Trait<_203b834c9_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_203b834c9_CommonFlag> _203b85663_FindFlag(_203b84e37_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20665aab4:;
		if (it != expr_end) {
			jule::Trait<_203b834c9_CommonFlag> _7221_flag = *it;
			{
				if ((_203b834c9_CommonFlag_mptr_data[(_7221_flag).type_offset]._203b538d9_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_20665aab4:;
			++it;
			goto _iter_begin_20665aab4;
		}
		_iter_end_20665aab4:;
	};
	return nullptr;;
}



inline jule::Trait<_203b834c9_CommonFlag> _203b85971_FindFlagShort(_203b84e37_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20665b9b6:;
		if (it != expr_end) {
			jule::Trait<_203b834c9_CommonFlag> _8221_flag = *it;
			{
				if ((_203b834c9_CommonFlag_mptr_data[(_8221_flag).type_offset]._203b53a1b_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_20665b9b6:;
			++it;
			goto _iter_begin_20665b9b6;
		}
		_iter_end_20665b9b6:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_203b834c9_CommonFlag>> _203b85bd5_Flags(_203b84e37_FlagSet* _self_) {
	return (*(_self_))._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _203b85ee3_Parse(_203b84e37_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_203b87643_argParser _11617_ap = _203b87643_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _203b889eb_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _203b861be_Reset(_203b84e37_FlagSet* _self_) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20665e007:;
		if (it != expr_end) {
			jule::Trait<_203b834c9_CommonFlag> _12616_f = *it;
			{
				_203b834c9_CommonFlag_mptr_data[(_12616_f).type_offset]._203b83397_Reset(_12616_f);
			}
			_iter_next_20665e007:;
			++it;
			goto _iter_begin_20665e007;
		}
		_iter_end_20665e007:;
	};
}



inline jule::Ptr<_206650adc_Flag> _2066b5e71_addFlagCommon(_203b84e37_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_2066b7549:;
			{
				goto _match_end_2066b74e4;
			}
		}
		_match_end_2066b74e4:;
	};
	if ((_203b85663_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_203b85971_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_206650adc_Flag> _14817_flag = jule::new_ptr<_206650adc_Flag>(_206650adc_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_203b834c9_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_203b834c9_CommonFlag>(_14817_flag, 4)); };
	return _14817_flag;;
}

inline jule::Ptr<_20664c435_Flag> _2066bdcae_addFlagCommon(_203b84e37_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_2066c0332:;
			{
				goto _match_end_2066c0288;
			}
		}
		_match_end_2066c0288:;
	};
	if ((_203b85663_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_203b85971_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_20664c435_Flag> _14817_flag = jule::new_ptr<_20664c435_Flag>(_20664c435_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_203b834c9_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_203b834c9_CommonFlag>(_14817_flag, 3)); };
	return _14817_flag;;
}



inline void _2066b3da3_AddVar(_203b84e37_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_206650adc_Flag> _17617_flag = _2066b5e71_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _2066bbc57_AddVar(_203b84e37_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_20664c435_Flag> _17617_flag = _2066bdcae_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _203b84e37_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _206663407_parseInteger(_203b87643_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_206665e65:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_219318297_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_2066662b7:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_219318297_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_2066663d8:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_219318297_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_206666581:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_2066665e7:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_206665abe:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_206665a03:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _20666a95e_parseInteger(_203b87643_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_20666d478:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_219318297_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_20666d7ca:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_219318297_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_20666d8eb:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_219318297_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_20666da94:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_20666db0a:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_20666d0d2:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_20666d016:;
	};
	return __jule_func_result;;
}



inline jule::Str _203b87e07_getData(_203b87643_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _203b88149_processFlag(_203b87643_argParser* _self_, jule::Trait<_203b834c9_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_206660921:;
			{
				jule::Ptr<_20664c435_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_20664c435_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_2066608aa:;
	};
	jule::Str _22513_data = _203b87e07_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _203b834c9_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._203b538d9_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_206661dc8:;
			{
				jule::Ptr<_206641b00_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_206641b00_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _206663407_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _23370_s, jule::I32 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1ee31c1ea_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _203b834c9_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._203b538d9_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_20666267b:;
			{
				jule::Ptr<_206645582_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_206645582_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _20666a95e_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _24171_s, jule::I32 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1ee31bc88_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _203b834c9_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._203b538d9_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_2066626e2:;
			{
				jule::Ptr<_206648c39_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_206648c39_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1ee3236da_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _203b834c9_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._203b538d9_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_206662758:;
			{
				(*((*(_21735_flag)).cast_ptr<_206650adc_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_206662626:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _203b883be_singleDash(_203b87643_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206674c54:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_203b834c9_CommonFlag> _26321_flag = _203b85971_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _203b88149_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_206674c54:;
			++it;
			goto _iter_begin_206674c54;
		}
		_iter_end_206674c54:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _203b88644_doubleDash(_203b87643_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_203b834c9_CommonFlag> _27617_flag = _203b85663_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _203b88149_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _203b88820_tryArg(_203b87643_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _203b88644_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _203b883be_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_28413_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _203b889eb_parse(_203b87643_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _203b88820_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_206679c7b:;
	}
	_iter_end_206679c7b:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _203b87643_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_203b0c5da_ObjectCoder> static__203b0c9b4_New(jule::Ptr<_2031e99ca_IR>* _9224_ir, _203b0ac48_SerializationInfo _9233_info) {
	jule::Ptr<_203b0c5da_ObjectCoder> _9317_oc = jule::new_ptr<_203b0c5da_ObjectCoder>(_203b0c5da_ObjectCoder{._field_ir=(*(_9224_ir)), ._field_info=_9233_info, });;
	_9317_oc.get()._field_ec=static__203a56446_new(&(_9317_oc));
	_9317_oc.get()._field_sc=static__203a4d240_new(&(_9317_oc));
	_9317_oc.get()._field_tc=static__203b1b64e_new(&(_9317_oc));
	_9317_oc.get()._field_dc=static__203a65e4a_new(_9317_oc);
	return _9317_oc;;
}



inline void _203b0cc39_write(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Str _10425_s) {
	_self_.get()._field_Obj+=_10425_s;
}



inline void _203b0ceae_writeR(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Str* _10827_s) {
	_self_.get()._field_Obj+=(*(_10827_s));
}



inline void _203b0d18a_addIndent(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	(_self_.get()._field_indentBuffer).append("\t", 1);
}



inline void _203b0d366_doneIndent(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _203b0d542_indent(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I32 _203b0d850_findAnyType(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_2011310ea_TypeKind>* _12736_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206517a1a:;
		if (it != expr_end) {
			jule::I32 _12814_i = it - expr->begin();
			jule::Ptr<_2011310ea_TypeKind> _12821_at = *it;
			{
				if (_2011317b0_Equal(_12821_at, (*(_12736_t)))) {
					return _12814_i;;
				};
			}
			_iter_next_206517a1a:;
			++it;
			_12814_i++;
			goto _iter_begin_206517a1a;
		}
		_iter_end_206517a1a:;
	};
	return -1LL;;
}



inline jule::I32 _203b0db5d_pushAnyType(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_2011310ea_TypeKind> _13635_t) {
	if ((_201134054_Enum(_13635_t.ptr()) != nullptr)) {
		_13635_t=_201134054_Enum(_13635_t.ptr()).get()._field_Kind.get()._field_Kind;
	};
	jule::I32 _14017_i = _203b0d850_findAnyType(_self_, &(_13635_t));;
	if ((_14017_i != -1LL)) {
		return _14017_i;;
	};
	_14017_i=static_cast<jule::I32>(_self_.get()._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_2011310ea_TypeKind>> &__jule_push_dest = _self_.get()._field_anyTypeMap; __jule_push_dest.push(_13635_t); };
	jule::Str _14613_si = _1ee32cd10_Itoa(_14017_i);;
	if ((_201133a7b_Sptr(_13635_t.ptr()) != nullptr)) {
		jule::Str _14817_elem_kind = _203b214bc_kind(_self_.get()._field_tc.ptr(), _201133a7b_Sptr(_13635_t.ptr()).get()._field_Elem);;
		jule::Str _14917_kind = _203b1c386_asSptr(_self_.get()._field_tc.ptr(), _14817_elem_kind);;
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_14817_elem_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_14917_kind;
		(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _17517_comparable = _201132629_Comparable(_13635_t.ptr());;
		jule::Str _17617_kind = _203b214bc_kind(_self_.get()._field_tc.ptr(), _13635_t);;
		if (_17617_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_2011314a2_Str(_13635_t.ptr()));
		};
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_17617_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		if (_17517_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14613_si;
			(_self_.get()._field_anyObj).append("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66);
			_self_.get()._field_anyObj+=_17617_kind;
			(_self_.get()._field_anyObj).append("*>(alloc) == *reinterpret_cast<", 31);
			_self_.get()._field_anyObj+=_17617_kind;
			(_self_.get()._field_anyObj).append("*>(other); }\n", 13);
		};
		(_self_.get()._field_anyObj).append("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76);
		if ((_201133ce0_Ptr(_13635_t.ptr()) == nullptr)) {
			(_self_.get()._field_anyObj).append("const ", 6);
			_self_.get()._field_anyObj+=_17617_kind;
		} else {
			_self_.get()._field_anyObj+=_17617_kind;
			(_self_.get()._field_anyObj).append("* const", 7);
		};
		(_self_.get()._field_anyObj).append("*>(alloc)); }\n", 14);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_dealloc, ", 10);
		if (_17517_comparable) {
			(_self_.get()._field_anyObj).append(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_14613_si;
			(_self_.get()._field_anyObj).append("_eq, ", 5);
		};
		(_self_.get()._field_anyObj).append(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_14613_si;
		(_self_.get()._field_anyObj).append("_to_str};\n", 10);
		if (_17517_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14613_si;
			(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_17617_kind;
			(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_14613_si;
			(_self_.get()._field_anyObj).append(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_14613_si;
			(_self_.get()._field_anyObj).append("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _14017_i;;
}



inline void _203b0ddd3_pushResultIns(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20102330b_FnIns>* _24438_f) {
	jule::Str _24513_s = _203b26291_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_24438_f)).get()._field_Result));;
	jule::Bool _24617_ok = false;;
	_self_.get()._field_resultMap.lookup(_24513_s, nullptr, &(_24617_ok));
	if (_24617_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_24513_s]=false;
	jule::Str _25117_obj = jule::Str::alloc(0LL, 128LL);;
	(_25117_obj).append("struct ", 7);
	_25117_obj+=_24513_s;
	(_25117_obj).append(" {\n", 3);
	{
		auto expr = &(_2011354a6_Tup((*(_24438_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20652a09e:;
		if (it != expr_end) {
			jule::I32 _25514_i = it - expr->begin();
			jule::Ptr<_2011310ea_TypeKind> _25521_t = *it;
			{
				(_25117_obj).append("\t", 1);
				_25117_obj+=_203b214bc_kind(_self_.get()._field_tc.ptr(), _25521_t);
				(_25117_obj).append(" ", 1);
				(_25117_obj).append("__jule_result_arg", 17);
				_25117_obj+=_1ee32cd10_Itoa(_25514_i);
				(_25117_obj).append(";\n", 2);
			}
			_iter_next_20652a09e:;
			++it;
			_25514_i++;
			goto _iter_begin_20652a09e;
		}
		_iter_end_20652a09e:;
	};
	(_25117_obj).append("};\n", 3);
	{ jule::Slice<jule::Str> &__jule_push_dest = _self_.get()._field_resultDecls; __jule_push_dest.push(_25117_obj); };
}



inline void _203b0e158_pushResult(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20102065a_Fn>* _26735_f) {
	if ((_201020abc_IsVoid((*(_26735_f)).ptr()) || ((*(_26735_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _27117_n = (*(_26735_f)).get()._field_Instances.len();;
	if (((*(_26735_f)).get()._field_Generics.len() == 0LL)) {
		_27117_n=1LL;
	};
	{
		auto expr = (*(_26735_f)).get()._field_Instances.slice(0LL, _27117_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_20652d7ab:;
		if (it != expr_end) {
			jule::Ptr<_20102330b_FnIns> _27521_ins = *it;
			{
				_203b0ddd3_pushResultIns(_self_, &(_27521_ins));
			}
			_iter_next_20652d7ab:;
			++it;
			goto _iter_begin_20652d7ab;
		}
		_iter_end_20652d7ab:;
	};
}



inline jule::I32 _203b0e510_findTypeOffsetS(_203b0c5da_ObjectCoder* _self_, jule::Ptr<_20103287b_Trait> _28030_t, jule::Ptr<_20100d071_StructIns> _28045_s) {
	if ((_28030_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20652edc8:;
		if (it != expr_end) {
			jule::Ptr<_203b0b210_traitHash> *_28416_hash = it;
			{
				if ((((*(_28416_hash)).get()._field_t == _28030_t) && ((*(_28416_hash)).get()._field_s == _28045_s))) {
					return (*(_28416_hash)).get()._field_i;;
				};
			}
			_iter_next_20652edc8:;
			++it;
			goto _iter_begin_20652edc8;
		}
		_iter_end_20652edc8:;
	};
	return -1LL;;
}



inline jule::I32 _203b0e8b7_findTypeOffset(_203b0c5da_ObjectCoder* _self_, jule::Ptr<_20103287b_Trait> _29229_t, jule::Ptr<_2011310ea_TypeKind> _29244_k) {
	if ((_29229_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_20100d071_StructIns> _29617_s = nullptr;;
	if ((_201133a7b_Sptr(_29244_k.ptr()) != nullptr)) {
		_29244_k=_201133a7b_Sptr(_29244_k.ptr()).get()._field_Elem;
	};
	_29617_s=_201134c69_Struct(_29244_k.ptr());
	if ((_29617_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I32>(_203b0e510_findTypeOffsetS(_self_, _29229_t, _29617_s));;
}



inline void _203b0ebd6_pushAndWriteMaskMapper(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20103287b_Trait> _30746_t1, jule::Ptr<_20103287b_Trait> _30762_t2) {
	jule::Str _30817_ident = jule::Str("__jule_trait_offset_mapper_", 27);;
	_30817_ident+=_1ee32c6d3_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30762_t2))), 15LL);
	(_30817_ident).append("_to_", 4);
	_30817_ident+=_1ee32c6d3_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30746_t1))), 15LL);
	_203b0ceae_writeR(_self_, &(_30817_ident));
	{
		auto expr = &(_self_.get()._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206534806:;
		if (it != expr_end) {
			_203b0b5b7_traitCast _31516_m = *it;
			{
				if (((_31516_m._field_t1 == _30746_t1) && (_31516_m._field_t2 == _30762_t2))) {
					return;;
				};
			}
			_iter_next_206534806:;
			++it;
			goto _iter_begin_206534806;
		}
		_iter_end_206534806:;
	};
	{ jule::Slice<_203b0b5b7_traitCast> &__jule_push_dest = _self_.get()._field_traitCastMap; __jule_push_dest.push(_203b0b5b7_traitCast{._field_t1=_30746_t1, ._field_t2=_30762_t2}); };
	;
	(_self_.get()._field_anyObj).append("jule::Int", 9);
	(_self_.get()._field_anyObj).append(" ", 1);
	_self_.get()._field_anyObj+=_30817_ident;
	(_self_.get()._field_anyObj).append("(const jule::Int offset) noexcept { ", 36);
	{
		auto expr = &(_30746_t1.get()._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206536462:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> _33421_s1 = *it;
			{
				{
					auto expr = &(_30762_t2.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206536e9b:;
					if (it != expr_end) {
						jule::Ptr<_20100a25a_Struct> _33520_s2 = *it;
						{
							if ((_33421_s1 == _33520_s2)) {
								{
									auto expr = &(_33421_s1.get()._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_206537c05:;
									if (it != expr_end) {
										jule::Ptr<_20100d071_StructIns> _33733_s1i = *it;
										{
											jule::I32 _33829_i1 = _203b0e510_findTypeOffsetS(_self_.ptr(), _30746_t1, _33733_s1i);;
											jule::I32 _33929_i2 = _203b0e510_findTypeOffsetS(_self_.ptr(), _30762_t2, _33733_s1i);;
											(_self_.get()._field_anyObj).append("if (offset == ", 14);
											_self_.get()._field_anyObj+=_1ee32cd10_Itoa(_33929_i2);
											(_self_.get()._field_anyObj).append(") return ", 9);
											_self_.get()._field_anyObj+=_1ee32cd10_Itoa(_33829_i1);
											(_self_.get()._field_anyObj).append("; ", 2);
										}
										_iter_next_206537c05:;
										++it;
										goto _iter_begin_206537c05;
									}
									_iter_end_206537c05:;
								};
							};
						}
						_iter_next_206536e9b:;
						++it;
						goto _iter_begin_206536e9b;
					}
					_iter_end_206536e9b:;
				};
			}
			_iter_next_206536462:;
			++it;
			goto _iter_begin_206536462;
		}
		_iter_end_206536462:;
	};
	(_self_.get()._field_anyObj).append(" return ", 8);
	_self_.get()._field_anyObj+=_1ee32cd10_Itoa(0LL);
	(_self_.get()._field_anyObj).append("; }\n", 4);
}



inline void _203b0ee5b_locInfo(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_1ed694d8c_Token>* _35528_t) {
	jule::Str *_35614_loc = &((*(_35528_t)).get()._field_File.get()._field_Path);;
	if (_216de596a_Production) {
		{
			
			if (_219318297_HasPrefix((*(_35614_loc)), _21ab64718_PathStdlib)) {
				_case_begin_20653b0e3:;
				{
					_203b0cc39_write(_self_, _203a63be5_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35614_loc)).slice((_219323ca8_Dir(_21ab64718_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_219318297_HasPrefix((*(_35614_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_20653b6a9:;
				{
					_203b0cc39_write(_self_, _203a63be5_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35614_loc)).slice((_219323ca8_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_20653ac4c:;
				{
					_203b0cc39_write(_self_, _203a63be5_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35614_loc)))));
				}
			}
			_match_end_20653ab81:;
		};
	} else {
		_203b0cc39_write(_self_, _203a63be5_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35614_loc)))));
	};
	_203b0cc39_write(_self_, jule::Str(":", 1));
	_203b0cc39_write(_self_, _1ee32cd10_Itoa((*(_35528_t)).get()._field_Row));
	_203b0cc39_write(_self_, jule::Str(":", 1));
	_203b0cc39_write(_self_, _1ee32cd10_Itoa((*(_35528_t)).get()._field_Column));
}



inline void _203b10137_head(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_203b03559_Time _38213_time = static__203b03aed_Now();;
	_203b02db6_AbsTime _38313_abs = _203b051b5_Abs(&_38213_time);;
	_203b0cc39_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_203b0cc39_write(_self_, jule::Str("// JuleC version: ", 18));
	_203b0cc39_write(_self_, jule::Str("jule0.0.15 @master", 18));
	_203b0cc39_write(_self_, jule::Str("\n", 1));
	_203b0cc39_write(_self_, jule::Str("// Date: ", 9));
	_203b0cc39_write(_self_, _1ee32c6d3_FmtUint(_38313_abs._field_Day, 10LL));
	_203b0cc39_write(_self_, jule::Str("/", 1));
	_203b0cc39_write(_self_, _1ee32c6d3_FmtUint(_38313_abs._field_Month, 10LL));
	_203b0cc39_write(_self_, jule::Str("/", 1));
	_203b0cc39_write(_self_, _1ee32c6d3_FmtUint(_38313_abs._field_Year, 10LL));
	_203b0cc39_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_203b0ceae_writeR(_self_, &(_self_.get()._field_info._field_Compiler));
	_203b0cc39_write(_self_, jule::Str(" ", 1));
	_203b0ceae_writeR(_self_, &(_self_.get()._field_info._field_CompilerCommand));
	_203b0cc39_write(_self_, jule::Str("\n\n", 2));
	if (_216de596a_Production) {
		_203b0cc39_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_216de52c7_RC))) {
		_203b0cc39_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_216de56a1_Safety))) {
		_203b0cc39_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_203b10313_links(_self_);
	_203b0cc39_write(_self_, jule::Str("\n\n#include \"", 12));
	_203b0ceae_writeR(_self_, &(_21ab64eee_PathApi));
	_203b0cc39_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _203b10313_links(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206545718:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _42016_used = *it;
			{
				{
					
					if ((!(_42016_used.get()._field_Binded))) {
						_case_begin_206546197:;
						{
							goto _iter_next_206545718;
						}
					}
					else if (_219396ad9_IsStdHeaderPath(_42016_used.get()._field_Path)) {
						_case_begin_20654621e:;
						{
							_203b0cc39_write(_self_, jule::Str("#include ", 9));
							_203b0ceae_writeR(_self_, &(_42016_used.get()._field_Path));
							_203b0cc39_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_219396d92_IsValidHeaderExt(_2193233e5_Ext(_42016_used.get()._field_Path))) {
						_case_begin_206546296:;
						{
							_203b0cc39_write(_self_, jule::Str("#include \"", 10));
							_203b0ceae_writeR(_self_, &(_42016_used.get()._field_Path));
							_203b0cc39_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_206546076:;
				};
			}
			_iter_next_206545718:;
			++it;
			goto _iter_begin_206545718;
		}
		_iter_end_206545718:;
	};
}



inline void _203b10588_prepareStructure(_203b0c5da_ObjectCoder* _self_, jule::Ptr<_20100a25a_Struct>* _43640_s) {
	{
		auto expr = &((*(_43640_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20654797e:;
		if (it != expr_end) {
			jule::Ptr<_20100d071_StructIns> _43721_ins = *it;
			{
				{
					auto expr = &(_43721_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206548c16:;
					if (it != expr_end) {
						jule::Ptr<_20102065a_Fn> _43825_m = *it;
						{
							if (_43825_m.get()._field_Statically) {
								goto _iter_next_206548c16;
							};
							{
								auto expr = &(_43825_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_206549970:;
								if (it != expr_end) {
									jule::Ptr<_20102330b_FnIns> _44229_mins = *it;
									{
										jule::Ptr<_20102243c_ParamIns> _44329_p = _44229_mins.get()._field_Params[0LL];;
										if ((!(_20101e66a_IsRef(_44329_p.get()._field_Decl.ptr())))) {
											_44329_p.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_203b1a692_customType>(_203b1a692_customType{._field_kind=_203b1c694_asPtr((*(_self_))._field_tc.ptr(), _203b214bc_kind((*(_self_))._field_tc.ptr(), _44329_p.get()._field_Kind))}), 27)});
										} else {
											_44329_p.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_203b1a692_customType>(_203b1a692_customType{._field_kind=_203b214bc_kind((*(_self_))._field_tc.ptr(), _44329_p.get()._field_Kind)}), 27)});
										};
									}
									_iter_next_206549970:;
									++it;
									goto _iter_begin_206549970;
								}
								_iter_end_206549970:;
							};
						}
						_iter_next_206548c16:;
						++it;
						goto _iter_begin_206548c16;
					}
					_iter_end_206548c16:;
				};
			}
			_iter_next_20654797e:;
			++it;
			goto _iter_begin_20654797e;
		}
		_iter_end_20654797e:;
	};
}



inline void _203b10764_prepareStructures(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206545e00:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> _46321_s = *it;
			{
				if ((_46321_s.get()._field_Token != nullptr)) {
					_203b10588_prepareStructure(_self_.ptr(), &(_46321_s));
				};
			}
			_iter_next_206545e00:;
			++it;
			goto _iter_begin_206545e00;
		}
		_iter_end_206545e00:;
	};
}



inline void _203b109d9_iterPackages(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_20107ded2_Package>*)> _47032_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20654d28c:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _47121_used = *it;
			{
				if ((!(_47121_used.get()._field_Binded))) {
					_47032_f(&(_47121_used.get()._field_Package));
				};
			}
			_iter_next_20654d28c:;
			++it;
			goto _iter_begin_20654d28c;
		}
		_iter_end_20654d28c:;
	};
	_47032_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _203b10bb5_buildTraitMap(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_203b109d9_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20107ded2_Package>*)>([=](jule::Ptr<_20107ded2_Package>* _48035_pkg) mutable -> void {
		_203b18c9a_iterFiles(_48035_pkg, jule::Fn<void(jule::Ptr<_2010e9118_SymbolTable>*)>([=](jule::Ptr<_2010e9118_SymbolTable>* _48136_file) mutable -> void {
			{
				auto expr = &((*(_48136_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_206551339:;
				if (it != expr_end) {
					jule::Ptr<_20103287b_Trait> _48229_t = *it;
					{
						if ((_48229_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_48229_t.get()._field_Implemented.len() == 0LL)) {
							{ jule::Slice<jule::Ptr<_203b0b210_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(jule::new_ptr<_203b0b210_traitHash>(_203b0b210_traitHash{._field_t=_48229_t, ._field_s=nullptr, ._field_i=0LL})); };
							goto _iter_next_206551339;
						};
						jule::I32 _49429_i = 0LL;;
						{
							auto expr = &(_48229_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_206551aba:;
							if (it != expr_end) {
								jule::Ptr<_20100a25a_Struct> _49533_s = *it;
								{
									{
										auto expr = &(_49533_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_206553968:;
										if (it != expr_end) {
											jule::Ptr<_20100d071_StructIns> _49637_ins = *it;
											{
												{ jule::Slice<jule::Ptr<_203b0b210_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(jule::new_ptr<_203b0b210_traitHash>(_203b0b210_traitHash{._field_t=_48229_t, ._field_s=_49637_ins, ._field_i=_49429_i})); };
												(_49429_i)++;
											}
											_iter_next_206553968:;
											++it;
											goto _iter_begin_206553968;
										}
										_iter_end_206553968:;
									};
								}
								_iter_next_206551aba:;
								++it;
								goto _iter_begin_206551aba;
							}
							_iter_end_206551aba:;
						};
						_203b1999e_pushMethodsFromInherits(&(_48229_t), &(_48229_t));
					}
					_iter_next_206551339:;
					++it;
					goto _iter_begin_206551339;
				}
				_iter_end_206551339:;
			};
		}));
	}));
}



inline void _203b10d91_traitDecls(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_203b109d9_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20107ded2_Package>*)>([=](jule::Ptr<_20107ded2_Package>* _51435_pkg) mutable -> void {
		_203b18c9a_iterFiles(_51435_pkg, jule::Fn<void(jule::Ptr<_2010e9118_SymbolTable>*)>([=](jule::Ptr<_2010e9118_SymbolTable>* _51536_file) mutable -> void {
			{
				auto expr = &((*(_51536_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_206555a14:;
				if (it != expr_end) {
					jule::Ptr<_20103287b_Trait> _51629_t = *it;
					{
						if ((_51629_t.get()._field_Token == nullptr)) {
							return;;
						};
						_203b0d542_indent(_self_);
						_203b0cc39_write(_self_, jule::Str("struct ", 7));
						_203b0cc39_write(_self_, static__203a6ac30_traitDecl(_51629_t));
						_203b0cc39_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_206555a14:;
					++it;
					goto _iter_begin_206555a14;
				}
				_iter_end_206555a14:;
			};
		}));
	}));
}



inline void _203b11116_structurePlainDecl(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20100a25a_Struct>* _52943_s) {
	{
		auto expr = &((*(_52943_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20655543c:;
		if (it != expr_end) {
			jule::Ptr<_20100d071_StructIns> _53021_ins = *it;
			{
				_203b0cc39_write(_self_, jule::Str("struct ", 7));
				_203b0cc39_write(_self_, static__203a6b516_structureIns(&(_53021_ins)));
				_203b0cc39_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_20655543c:;
			++it;
			goto _iter_begin_20655543c;
		}
		_iter_end_20655543c:;
	};
}



inline void _203b112e2_structurePlainDecls(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206558374:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> _53821_s = *it;
			{
				if ((_53821_s.get()._field_Token != nullptr)) {
					_203b11116_structurePlainDecl(_self_, &(_53821_s));
				};
			}
			_iter_next_206558374:;
			++it;
			goto _iter_begin_206558374;
		}
		_iter_end_206558374:;
	};
}



inline void _203b11567_fieldDecl(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20100c57b_FieldIns>* _54534_f) {
	_203b0cc39_write(_self_, _203b214bc_kind(_self_.get()._field_tc.ptr(), (*(_54534_f)).get()._field_Kind));
	_203b0cc39_write(_self_, jule::Str(" ", 1));
	_203b0cc39_write(_self_, static__203a6b7ad_field(&((*(_54534_f)).get()._field_Decl)));
	if (((*(_54534_f)).get()._field_Default == nullptr)) {
		if (_203b2d155_shouldInitialized(&((*(_54534_f)).get()._field_Kind))) {
			_203b0cc39_write(_self_, jule::Str(" = ", 3));
			_203a632bb_initExpr(_self_.get()._field_ec, (*(_54534_f)).get()._field_Kind);
		};
	} else {
		_203b0cc39_write(_self_, jule::Str(" = ", 3));
		_203a5904d_possibleRefExpr(_self_.get()._field_ec, (*(_54534_f)).get()._field_Default.get()._field_Model);
	};
	_203b0cc39_write(_self_, jule::Str(";", 1));
}



inline void _203b117dc_structureDestructor(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20100d071_StructIns>* _56344_s) {
	;
	jule::Ptr<_20102065a_Fn> _56613_disposeMethod = _20100e01c_FindMethod((*(_56344_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _56717_disposed = static__2010a5d50_Dispose(_56613_disposeMethod);;
	if ((!(_56717_disposed))) {
		return;;
	};
	_203b0cc39_write(_self_, jule::Str("~", 1));
	_203b0cc39_write(_self_, static__203a6b516_structureIns(_56344_s));
	_203b0cc39_write(_self_, jule::Str("(void) { ", 9));
	_203b0cc39_write(_self_, static__203a6a6e1_func(&(_56613_disposeMethod)));
	_203b0cc39_write(_self_, jule::Str("(this); }", 9));
}



inline void _203b11a84_structureDeriveDefsDecls(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20100d071_StructIns>* _57945_s) {
	if (_20100ba86_IsDerives((*(_57945_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_203b0d542_indent(_self_);
		_203b0cc39_write(_self_, _203a66258_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_57945_s)).get()._field_Decl)));
		_203b0cc39_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _203b11db4_structureOperatorEq(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Str* _58740_ident, jule::Ptr<_20100d071_StructIns>* _58757_s) {
	if ((!((*(_58757_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_58757_s)).get()._field_Operators._field_Eq != nullptr)) {
		_203b1259b_structureOperator(_self_, _58740_ident, &((*(_58757_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_203b0d542_indent(_self_);
	if (_201216e4a_Inline) {
		_203b0cc39_write(_self_, jule::Str("inline ", 7));
	};
	_203b0cc39_write(_self_, jule::Str("bool operator==(", 16));
	_203b0ceae_writeR(_self_, _58740_ident);
	_203b0cc39_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_58757_s)).get()._field_Fields.len() > 0LL)) {
		_203b0d18a_addIndent(_self_);
		_203b0cc39_write(_self_, jule::Str("\n", 1));
		_203b0d542_indent(_self_);
		_203b0cc39_write(_self_, jule::Str("return ", 7));
		_203b0d18a_addIndent(_self_);
		jule::Bool _61021_writed = false;;
		{
			auto expr = &((*(_58757_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_206564ade:;
			if (it != expr_end) {
				jule::Ptr<_20100c57b_FieldIns> _61125_f = *it;
				{
					jule::Ptr<_20100d071_StructIns> _61321_strct = _201134c69_Struct(_61125_f.get()._field_Kind.ptr());;
					if ((((_61321_strct != nullptr) && (_61321_strct.get()._field_Decl != nullptr)) && _61321_strct.get()._field_Decl.get()._field_Binded)) {
						goto _iter_next_206564ade;
					};
					if (_61021_writed) {
						_203b0cc39_write(_self_, jule::Str(" &&", 3));
					};
					_61021_writed=true;
					_203b0cc39_write(_self_, jule::Str("\n", 1));
					_203b0d542_indent(_self_);
					_203b0cc39_write(_self_, jule::Str("this->", 6));
					jule::Str _62421_fIdent = static__203a6b7ad_field(&(_61125_f.get()._field_Decl));;
					_203b0ceae_writeR(_self_, &(_62421_fIdent));
					_203b0cc39_write(_self_, jule::Str(" == _other.", 11));
					_203b0ceae_writeR(_self_, &(_62421_fIdent));
				}
				_iter_next_206564ade:;
				++it;
				goto _iter_begin_206564ade;
			}
			_iter_end_206564ade:;
		};
		_203b0d366_doneIndent(_self_);
		if ((!(_61021_writed))) {
			_203b0cc39_write(_self_, jule::Str("true", 4));
		};
		_203b0cc39_write(_self_, jule::Str(";\n", 2));
		_203b0d366_doneIndent(_self_);
		_203b0d542_indent(_self_);
		_203b0cc39_write(_self_, jule::Str("}", 1));
	} else {
		_203b0cc39_write(_self_, jule::Str(" return true; }", 15));
	};
	_203b0cc39_write(_self_, jule::Str("\n\n", 2));
}



inline void _203b121d3_structureOperatorNotEq(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Str* _64343_ident, jule::Ptr<_20100d071_StructIns>* _64360_s) {
	if ((!((*(_64360_s)).get()._field_Comparable))) {
		return;;
	};
	_203b0d542_indent(_self_);
	if (_201216e4a_Inline) {
		_203b0cc39_write(_self_, jule::Str("inline ", 7));
	};
	_203b0cc39_write(_self_, jule::Str("bool operator!=(", 16));
	_203b0ceae_writeR(_self_, _64343_ident);
	_203b0cc39_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _203b1259b_structureOperator(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Str* _65738_ident, jule::Ptr<_20102330b_FnIns>* _65755_f, jule::Str _65766_op) {
	if (((*(_65755_f)) == nullptr)) {
		return;;
	};
	jule::Bool _66213_unary = ((*(_65755_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _66313_assignment = _201020abc_IsVoid((*(_65755_f)).get()._field_Decl.ptr());;
	_203b0d542_indent(_self_);
	if (_201216e4a_Inline) {
		_203b0cc39_write(_self_, jule::Str("inline ", 7));
	};
	if (_66313_assignment) {
		_203b0ceae_writeR(_self_, _65738_ident);
		_203b0cc39_write(_self_, jule::Str("&", 1));
	} else {
		if ((_201133817_Prim((*(_65755_f)).get()._field_Result.ptr()) == nullptr)) {
			_203b0ceae_writeR(_self_, _65738_ident);
		} else {
			_203b0cc39_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_203b0cc39_write(_self_, jule::Str(" operator", 9));
	_203b0ceae_writeR(_self_, &(_65766_op));
	_203b0cc39_write(_self_, jule::Str("(", 1));
	if ((!(_66213_unary))) {
		jule::Ptr<_20102243c_ParamIns> _68521_p = (*(_65755_f)).get()._field_Params[1LL];;
		_203b0cc39_write(_self_, _203b20466_paramIns(_self_.get()._field_tc.ptr(), &(_68521_p)));
		_203b0cc39_write(_self_, jule::Str(" _other", 7));
	};
	_203b0cc39_write(_self_, jule::Str(") { ", 4));
	if ((!(_66313_assignment))) {
		_203b0cc39_write(_self_, jule::Str("return ", 7));
	};
	_203b0cc39_write(_self_, static__203a6a988_funcIns(_65755_f));
	if ((!(_66213_unary))) {
		_203b0cc39_write(_self_, jule::Str("(this, _other); ", 16));
		if (_66313_assignment) {
			_203b0cc39_write(_self_, jule::Str("return *this; ", 14));
		};
		_203b0cc39_write(_self_, jule::Str("}", 1));
	} else {
		_203b0cc39_write(_self_, jule::Str("(this); }", 9));
	};
	_203b0cc39_write(_self_, jule::Str("\n\n", 2));
}



inline void _203b12821_structureOperators(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20100d071_StructIns>* _70643_s) {
	jule::Str _70713_ident = static__203a6b516_structureIns(_70643_s);;
	_203b11db4_structureOperatorEq(_self_, &(_70713_ident), _70643_s);
	_203b121d3_structureOperatorNotEq(_self_, &(_70713_ident), _70643_s);
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_203b1259b_structureOperator(_self_, &(_70713_ident), &((*(_70643_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _203b12a96_structureInsDecl(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20100d071_StructIns>* _74541_s) {
	if (((*(_74541_s)).get()._field_Methods.len() > 0LL)) {
		{
			auto expr = &((*(_74541_s)).get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20657dcd4:;
			if (it != expr_end) {
				jule::Ptr<_20102065a_Fn> _74725_m = *it;
				{
					_203b0e158_pushResult(_self_, &(_74725_m));
					_203b13bc9_funcDecl(_self_, &(_74725_m), false);
				}
				_iter_next_20657dcd4:;
				++it;
				goto _iter_begin_20657dcd4;
			}
			_iter_end_20657dcd4:;
		};
	};
	_203b0cc39_write(_self_, jule::Str("struct ", 7));
	jule::Str _75413_outIdent = static__203a6b516_structureIns(_74541_s);;
	_203b0ceae_writeR(_self_, &(_75413_outIdent));
	_203b0cc39_write(_self_, jule::Str(" {\n", 3));
	_203b0d18a_addIndent(_self_);
	{
		auto expr = &((*(_74541_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206580940:;
		if (it != expr_end) {
			jule::Ptr<_20100c57b_FieldIns> _76021_f = *it;
			{
				_203b0d542_indent(_self_);
				_203b11567_fieldDecl(_self_, &(_76021_f));
				_203b0cc39_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_206580940:;
			++it;
			goto _iter_begin_206580940;
		}
		_iter_end_206580940:;
	};
	_203b0d542_indent(_self_);
	_203b117dc_structureDestructor(_self_, _74541_s);
	_203b0cc39_write(_self_, jule::Str("\n\n", 2));
	_203b11a84_structureDeriveDefsDecls(_self_, _74541_s);
	_203b12821_structureOperators(_self_, _74541_s);
	_203b0cc39_write(_self_, jule::Str("\n", 1));
	_203b0d366_doneIndent(_self_);
	_203b0d542_indent(_self_);
	_203b0cc39_write(_self_, jule::Str("};", 2));
}



inline void _203b12d1b_structureDecl(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20100a25a_Struct>* _78038_s) {
	{
		auto expr = &((*(_78038_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065835e1:;
		if (it != expr_end) {
			jule::Ptr<_20100d071_StructIns> _78121_ins = *it;
			{
				_203b12a96_structureInsDecl(_self_, &(_78121_ins));
			}
			_iter_next_2065835e1:;
			++it;
			goto _iter_begin_2065835e1;
		}
		_iter_end_2065835e1:;
	};
}



inline void _203b12ee7_structureDecls(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206583d2d:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> _78721_s = *it;
			{
				if ((_78721_s.get()._field_Token != nullptr)) {
					_203b12d1b_structureDecl(_self_, &(_78721_s));
					_203b0cc39_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_206583d2d:;
			++it;
			goto _iter_begin_206583d2d;
		}
		_iter_end_206583d2d:;
	};
}



inline void _203b1326c_paramsDecls(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Slice<jule::Ptr<_20102243c_ParamIns>>* _79536_params) {
	if (((*(_79536_params)).len() == 0LL)) {
		_203b0cc39_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_203b0cc39_write(_self_, jule::Str("(", 1));
	{
		auto expr = _79536_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20658610a:;
		if (it != expr_end) {
			jule::I32 _80214_i = it - expr->begin();
			jule::Ptr<_20102243c_ParamIns> _80221_p = *it;
			{
				_203b0cc39_write(_self_, _203b20466_paramIns(_self_.get()._field_tc.ptr(), &(_80221_p)));
				if ((((*(_79536_params)).len() - _80214_i) > 1LL)) {
					_203b0cc39_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_20658610a:;
			++it;
			_80214_i++;
			goto _iter_begin_20658610a;
		}
		_iter_end_20658610a:;
	};
	_203b0cc39_write(_self_, jule::Str(")", 1));
}



inline void _203b1358b_funcHead(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20102330b_FnIns>* _81233_f, jule::Bool _81244_ptr) {
	if ((((!(_81244_ptr)) && _201216e4a_Inline) && (!(_201021095_IsEntryPoint((*(_81233_f)).get()._field_Decl.ptr()))))) {
		_203b0cc39_write(_self_, jule::Str("inline ", 7));
	};
	_203b20a93_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _81233_f);
	if (_81244_ptr) {
		_203b0cc39_write(_self_, jule::Str("(*", 2));
		_203b0cc39_write(_self_, static__203a6a988_funcIns(_81233_f));
		_203b0cc39_write(_self_, jule::Str(")", 1));
	} else {
		_203b0cc39_write(_self_, jule::Str(" ", 1));
		_203b0cc39_write(_self_, static__203a6a988_funcIns(_81233_f));
	};
}



inline void _203b138aa_funcDeclIns(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20102330b_FnIns>* _82736_f, jule::Bool _82747_ptr) {
	_203b0d542_indent(_self_);
	_203b1358b_funcHead(_self_, _82736_f, _82747_ptr);
	_203b1326c_paramsDecls(_self_, &((*(_82736_f)).get()._field_Params));
	_203b0cc39_write(_self_, jule::Str(";\n", 2));
}



inline void _203b13bc9_funcDecl(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20102065a_Fn>* _83433_f, jule::Bool _83441_ptr) {
	{
		auto expr = &((*(_83433_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20658beac:;
		if (it != expr_end) {
			jule::Ptr<_20102330b_FnIns> _83521_c = *it;
			{
				_203b138aa_funcDeclIns(_self_, &(_83521_c), _83441_ptr);
			}
			_iter_next_20658beac:;
			++it;
			goto _iter_begin_20658beac;
		}
		_iter_end_20658beac:;
	};
}



inline void _203b14092_funcDeclTrait(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20103287b_Trait>* _84038_t, jule::Ptr<_20102065a_Fn>* _84054_f, jule::Bool _84062_ptr) {
	{
		auto expr = &((*(_84054_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20658d123:;
		if (it != expr_end) {
			jule::Ptr<_20102330b_FnIns> _84121_c = *it;
			{
				jule::Ptr<_2011310ea_TypeKind> _84221_k = _84121_c.get()._field_Params[0LL].get()._field_Kind;;
				_84121_c.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>((*(_84038_t)), 2)});
				_203b138aa_funcDeclIns(_self_, &(_84121_c), _84062_ptr);
				_84121_c.get()._field_Params[0LL].get()._field_Kind=_84221_k;
			}
			_iter_next_20658d123:;
			++it;
			goto _iter_begin_20658d123;
		}
		_iter_end_20658d123:;
	};
}



inline void _203b1426d_funcDecls(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_203b109d9_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20107ded2_Package>*)>([=](jule::Ptr<_20107ded2_Package>* _85035_pkg) mutable -> void {
		_203b18c9a_iterFiles(_85035_pkg, jule::Fn<void(jule::Ptr<_2010e9118_SymbolTable>*)>([=](jule::Ptr<_2010e9118_SymbolTable>* _85136_file) mutable -> void {
			{
				auto expr = &((*(_85136_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_206591c70:;
				if (it != expr_end) {
					jule::Ptr<_20102065a_Fn> _85229_f = *it;
					{
						if (((!(_85229_f.get()._field_Binded)) && (_85229_f.get()._field_Token != nullptr))) {
							_203b0e158_pushResult(_self_, &(_85229_f));
							_203b13bc9_funcDecl(_self_, &(_85229_f), false);
						};
					}
					_iter_next_206591c70:;
					++it;
					goto _iter_begin_206591c70;
				}
				_iter_end_206591c70:;
			};
		}));
	}));
}



inline void _203b1458c_traitDataTypeMethods(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20103287b_Trait>* _86245_owner, jule::Ptr<_20103287b_Trait>* _86265_t) {
	{
		auto expr = &((*(_86265_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065918da:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _86321_m = *it;
			{
				jule::Ptr<_20102330b_FnIns> _86421_ins = _86321_m.get()._field_Instances[0LL];;
				jule::Ptr<_20102243c_ParamIns> _86521_p = _86421_ins.get()._field_Params[0LL];;
				_86521_p.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>((*(_86265_t)), 2)});
				{
					auto expr = _86421_ins.get()._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_206593b73:;
					if (it != expr_end) {
						jule::I32 _86918_i = it - expr.begin();
						jule::Ptr<_20102243c_ParamIns> _86925_ip = *it;
						{
							if (_1ed6978c8_IsAnonIdent(_86925_ip.get()._field_Decl.get()._field_Ident)) {
								_86925_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1ee32cd10_Itoa(_86918_i));
							};
						}
						_iter_next_206593b73:;
						++it;
						_86918_i++;
						goto _iter_begin_206593b73;
					}
					_iter_end_206593b73:;
				};
				if ((!(_216de596a_Production))) {
					jule::Ptr<_20102243c_ParamIns> _87525_lp = _86421_ins.get()._field_Params[(_86421_ins.get()._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ _87525_lp.get()._field_Kind.get()._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_20659821b:;
							{
								goto _match_end_206596b43;
							}
						}
						else {
							_case_begin_206596c86:;
							{
								{ jule::Slice<jule::Ptr<_20102243c_ParamIns>> &__jule_push_dest = _86421_ins.get()._field_Params; __jule_push_dest.push(jule::new_ptr<_20102243c_ParamIns>(_20102243c_ParamIns{._field_Decl=jule::new_ptr<_20101dd1d_Param>(_20101dd1d_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_203b1a692_customType>(_203b1a692_customType{._field_kind=jule::Str("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_206596b43:;
					};
				};
				_203b0e158_pushResult(_self_, &(_86321_m));
				_203b14092_funcDeclTrait(_self_, _86245_owner, &(_86321_m), true);
			}
			_iter_next_2065918da:;
			++it;
			goto _iter_begin_2065918da;
		}
		_iter_end_2065918da:;
	};
}



inline void _203b14768_traitDataTypes(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_203b109d9_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20107ded2_Package>*)>([=](jule::Ptr<_20107ded2_Package>* _89835_pkg) mutable -> void {
		_203b18c9a_iterFiles(_89835_pkg, jule::Fn<void(jule::Ptr<_2010e9118_SymbolTable>*)>([=](jule::Ptr<_2010e9118_SymbolTable>* _89936_file) mutable -> void {
			{
				auto expr = &((*(_89936_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_206599e65:;
				if (it != expr_end) {
					jule::Ptr<_20103287b_Trait> _90029_t = *it;
					{
						if ((_90029_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_90029_t.get()._field_Methods.len() == 0LL)) {
							goto _iter_next_206599e65;
						};
						_203b0cc39_write(_self_, jule::Str("struct ", 7));
						_203b0cc39_write(_self_, static__203a6ac30_traitDecl(_90029_t));
						_203b0cc39_write(_self_, jule::Str("MptrData", 8));
						_203b0cc39_write(_self_, jule::Str(" {\n", 3));
						_203b0d18a_addIndent(_self_);
						_203b1458c_traitDataTypeMethods(_self_, &(_90029_t), &(_90029_t));
						_203b0d366_doneIndent(_self_);
						_203b0d542_indent(_self_);
						_203b0cc39_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_206599e65:;
					++it;
					goto _iter_begin_206599e65;
				}
				_iter_end_206599e65:;
			};
		}));
	}));
}



inline void _203b149dd_paramIns(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20102243c_ParamIns>* _92133_p) {
	_203b0cc39_write(_self_, _203b20466_paramIns(_self_.get()._field_tc.ptr(), _92133_p));
	_203b0cc39_write(_self_, jule::Str(" ", 1));
	_203b0cc39_write(_self_, static__203a6aec7_param(&((*(_92133_p)).get()._field_Decl)));
}



inline void _203b14c63_paramsIns(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Slice<jule::Ptr<_20102243c_ParamIns>>* _92734_params) {
	if (((*(_92734_params)).len() == 0LL)) {
		_203b0cc39_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_203b0cc39_write(_self_, jule::Str("(", 1));
	{
		auto expr = _92734_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20659e255:;
		if (it != expr_end) {
			jule::I32 _93314_i = it - expr->begin();
			jule::Ptr<_20102243c_ParamIns> _93321_p = *it;
			{
				_203b149dd_paramIns(_self_, &(_93321_p));
				if ((((*(_92734_params)).len() - _93314_i) > 1LL)) {
					_203b0cc39_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_20659e255:;
			++it;
			_93314_i++;
			goto _iter_begin_20659e255;
		}
		_iter_end_20659e255:;
	};
	_203b0cc39_write(_self_, jule::Str(")", 1));
}



inline void _203b15082_varInitExpr(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_2010a4975_Var>* _94236_v, jule::Fn<void(void)> _94245_init) {
	if ((*(_94236_v)).get()._field_Statically) {
		_203b0cc39_write(_self_, jule::Str("static ", 7));
	};
	_203b0cc39_write(_self_, _203b214bc_kind(_self_.get()._field_tc.ptr(), (*(_94236_v)).get()._field_Kind.get()._field_Kind));
	_203b0cc39_write(_self_, jule::Str(" ", 1));
	if ((*(_94236_v)).get()._field_Reference) {
		_203b0cc39_write(_self_, jule::Str("*", 1));
	};
	_203b0cc39_write(_self_, static__203a6ba55_var((*(_94236_v))));
	if ((_94245_init != nullptr)) {
		_203b0cc39_write(_self_, jule::Str(" = ", 3));
		_94245_init();
	};
	_203b0cc39_write(_self_, jule::Str(";", 1));
}



inline void _203b15307_var(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_2010a4975_Var> _96027_v) {
	if (_1ed697631_IsIgnoreIdent(_96027_v.get()._field_Ident)) {
		return;;
	};
	if (((_96027_v.get()._field_Value != nullptr) && (_96027_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_96027_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_96027_v.get()._field_Reference) {
				_203b15082_varInitExpr(_self_, &(_96027_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_203b0cc39_write(_self_, jule::Str("&(", 2));
					_203a63046_model(_self_.get()._field_ec, _96027_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_203b0cc39_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_203b15082_varInitExpr(_self_, &(_96027_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_203a5904d_possibleRefExpr(_self_.get()._field_ec, _96027_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_203b15082_varInitExpr(_self_, &(_96027_v), nullptr);
		return;;
	};
	if (_96027_v.get()._field_Reference) {
		_203b15082_varInitExpr(_self_, &(_96027_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_203b0cc39_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_203b2d155_shouldInitialized(&(_96027_v.get()._field_Kind.get()._field_Kind))) {
		_203b15082_varInitExpr(_self_, &(_96027_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_203a632bb_initExpr(_self_.get()._field_ec, _96027_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_203b15082_varInitExpr(_self_, &(_96027_v), nullptr);
}



inline void _203b1557c_funcIns(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20102330b_FnIns>* _99132_f) {
	_203b1358b_funcHead(_self_, _99132_f, false);
	_203b14c63_paramsIns(_self_, &((*(_99132_f)).get()._field_Params));
	_203b0cc39_write(_self_, jule::Str(" ", 1));
	_203a53465_funcScope(_self_.get()._field_sc, (*(_99132_f)));
	if (((*(_99132_f)).get()._field_Scope != nullptr)) {
		_203b0cc39_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _203b15802_func(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20102065a_Fn>* _100129_f) {
	{
		auto expr = &((*(_100129_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065ab8b1:;
		if (it != expr_end) {
			jule::Ptr<_20102330b_FnIns> _100221_ins = *it;
			{
				_203b1557c_funcIns(_self_, &(_100221_ins));
			}
			_iter_next_2065ab8b1:;
			++it;
			goto _iter_begin_2065ab8b1;
		}
		_iter_end_2065ab8b1:;
	};
}



inline void _203b15b21_funcTrait(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_203b0b210_traitHash>* _100734_hash, jule::Ptr<_20102065a_Fn>* _100757_f) {
	jule::Str _100813_ident = (*(_100757_f)).get()._field_Ident;;
	{
		auto expr = &((*(_100757_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065acc14:;
		if (it != expr_end) {
			jule::Ptr<_20102330b_FnIns> _100921_ins = *it;
			{
				_100921_ins.get()._field_Scope=nullptr;
				(*(_100757_f)).get()._field_Ident=_100813_ident;
				((*(_100757_f)).get()._field_Ident).append("_", 1);
				(*(_100757_f)).get()._field_Ident+=(*(_100734_hash)).get()._field_t.get()._field_Ident;
				((*(_100757_f)).get()._field_Ident).append("_", 1);
				(*(_100757_f)).get()._field_Ident+=_1ee32cd10_Itoa((*(_100734_hash)).get()._field_i);
				jule::Ptr<_2011310ea_TypeKind> _101821_k = _100921_ins.get()._field_Params[0LL].get()._field_Kind;;
				_100921_ins.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>((*(_100734_hash)).get()._field_t, 2)});
				_203b1557c_funcIns(_self_, &(_100921_ins));
				_100921_ins.get()._field_Params[0LL].get()._field_Kind=_101821_k;
			}
			_iter_next_2065acc14:;
			++it;
			goto _iter_begin_2065acc14;
		}
		_iter_end_2065acc14:;
	};
	(*(_100757_f)).get()._field_Ident=_100813_ident;
}



inline void _203b15e40_traitWrapper(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20102065a_Fn>* _102637_m, jule::Ptr<_203b0b210_traitHash>* _102650_hash) {
	_203b15b21_funcTrait(_self_, _102650_hash, _102637_m);
	if (((*(_102650_hash)).get()._field_s == nullptr)) {
		if (_216de596a_Production) {
			_203b0cc39_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_203b0cc39_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _103813_ptr = (!(_20101e66a_IsRef((*(_102637_m)).get()._field_Params[0LL].ptr())));;
	jule::Ptr<_20102065a_Fn> _104017_sm = _20100e01c_FindMethod((*(_102650_hash)).get()._field_s.ptr(), (*(_102637_m)).get()._field_Ident, false);;
	if (((_104017_sm == nullptr) || (_104017_sm.get()._field_Instances.len() == 0LL))) {
		return;;
	};
	_203b0d18a_addIndent(_self_);
	_203b0cc39_write(_self_, jule::Str("{\n", 2));
	_203b0d542_indent(_self_);
	if ((_104017_sm.get()._field_Exceptional || (!(_201020abc_IsVoid(_104017_sm.ptr()))))) {
		_203b0cc39_write(_self_, jule::Str("return ", 7));
	};
	_203b0cc39_write(_self_, static__203a6a6e1_func(&(_104017_sm)));
	_203b0cc39_write(_self_, jule::Str("(", 1));
	if (_103813_ptr) {
		_203b0cc39_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_203b0cc39_write(_self_, _203b1ea3c_structureIns(_self_.get()._field_tc.ptr(), (*(_102650_hash)).get()._field_s));
		_203b0cc39_write(_self_, jule::Str(">(", 2));
		if ((!(_216de596a_Production))) {
			_203b0cc39_write(_self_, jule::Str("_00___file", 10));
		};
		_203b0cc39_write(_self_, jule::Str(")", 1));
	} else {
		_203b0cc39_write(_self_, jule::Str("_self_.data.as<", 15));
		_203b0cc39_write(_self_, _203b1e72e_structure(_self_.get()._field_tc.ptr(), _104017_sm.get()._field_Owner));
		_203b0cc39_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*(_102637_m)).get()._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_2065b5788:;
		if (it != expr_end) {
			jule::Ptr<_20101dd1d_Param> _106616_mp = *it;
			{
				_203b0cc39_write(_self_, jule::Str(", ", 2));
				_203b0cc39_write(_self_, static__203a6aec7_param(&(_106616_mp)));
			}
			_iter_next_2065b5788:;
			++it;
			goto _iter_begin_2065b5788;
		}
		_iter_end_2065b5788:;
	};
	_203b0cc39_write(_self_, jule::Str(");\n}\n", 5));
	_203b0d366_doneIndent(_self_);
}



inline void _203b1611b_traitWrappers(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065b91e8:;
		if (it != expr_end) {
			jule::Ptr<_203b0b210_traitHash> _107521_hash = *it;
			{
				{
					auto expr = &(_107521_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2065b9a9a:;
					if (it != expr_end) {
						jule::Ptr<_20102065a_Fn> _107625_m = *it;
						{
							_203b15e40_traitWrapper(_self_, &(_107625_m), &(_107521_hash));
						}
						_iter_next_2065b9a9a:;
						++it;
						goto _iter_begin_2065b9a9a;
					}
					_iter_end_2065b9a9a:;
				};
			}
			_iter_next_2065b91e8:;
			++it;
			goto _iter_begin_2065b91e8;
		}
		_iter_end_2065b91e8:;
	};
}



inline void _203b1643a_traitDataMethods(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20103287b_Trait>* _108241_t, jule::Ptr<_203b0b210_traitHash>* _108253_hash) {
	{
		auto expr = &((*(_108241_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065ba34d:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _108321_m = *it;
			{
				jule::Str _108417_mIdent = static__203a6a6e1_func(&(_108321_m));;
				_203b0d542_indent(_self_);
				_203b0cc39_write(_self_, jule::Str(".", 1));
				_203b0ceae_writeR(_self_, &(_108417_mIdent));
				_203b0cc39_write(_self_, jule::Str("=", 1));
				_203b0ceae_writeR(_self_, &(_108417_mIdent));
				_203b0cc39_write(_self_, jule::Str("_", 1));
				_203b0ceae_writeR(_self_, &((*(_108253_hash)).get()._field_t.get()._field_Ident));
				_203b0cc39_write(_self_, jule::Str("_", 1));
				_203b0cc39_write(_self_, _1ee32cd10_Itoa((*(_108253_hash)).get()._field_i));
				_203b0cc39_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_2065ba34d:;
			++it;
			goto _iter_begin_2065ba34d;
		}
		_iter_end_2065ba34d:;
	};
}



inline void _203b16759_traitData(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_203b0b210_traitHash>* _109834_hash, jule::Ptr<_20103287b_Trait>* _109857_old) {
	if (((*(_109834_hash)).get()._field_t.get()._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _110213_ident = static__203a6ac30_traitDecl((*(_109834_hash)).get()._field_t);;
	if (((*(_109834_hash)).get()._field_t != (*(_109857_old)))) {
		if (((*(_109857_old)) != nullptr)) {
			_203b0d366_doneIndent(_self_);
			_203b0d542_indent(_self_);
			_203b0cc39_write(_self_, jule::Str("};\n", 3));
		};
		_203b0cc39_write(_self_, jule::Str("static ", 7));
		_203b0ceae_writeR(_self_, &(_110213_ident));
		_203b0cc39_write(_self_, jule::Str("MptrData ", 9));
		_203b0ceae_writeR(_self_, &(_110213_ident));
		_203b0cc39_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_109857_old))=(*(_109834_hash)).get()._field_t;
		_203b0d18a_addIndent(_self_);
	};
	_203b0d542_indent(_self_);
	_203b0cc39_write(_self_, jule::Str("{\n", 2));
	_203b0d18a_addIndent(_self_);
	_203b1643a_traitDataMethods(_self_, &((*(_109834_hash)).get()._field_t), _109834_hash);
	_203b0d366_doneIndent(_self_);
	_203b0d542_indent(_self_);
	_203b0cc39_write(_self_, jule::Str("},\n", 3));
}



inline void _203b16935_traitDatas(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	jule::Ptr<_20103287b_Trait> _112717_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065c2eb0:;
		if (it != expr_end) {
			jule::Ptr<_203b0b210_traitHash> _112821_hash = *it;
			{
				_203b16759_traitData(_self_, &(_112821_hash), &(_112717_old));
			}
			_iter_next_2065c2eb0:;
			++it;
			goto _iter_begin_2065c2eb0;
		}
		_iter_end_2065c2eb0:;
	};
	if ((_112717_old != nullptr)) {
		_203b0d366_doneIndent(_self_);
		_203b0d542_indent(_self_);
		_203b0cc39_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _203b16b11_globals(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065c4984:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> _113921_v = *it;
			{
				_203b0cc39_write(_self_, _203b214bc_kind(_self_.get()._field_tc.ptr(), _113921_v.get()._field_Kind.get()._field_Kind));
				_203b0cc39_write(_self_, jule::Str(" ", 1));
				_203b0cc39_write(_self_, static__203a6ba55_var(_113921_v));
				_203b0cc39_write(_self_, jule::Str(" = ", 3));
				_203a63046_model(_self_.get()._field_ec, _113921_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_203b0cc39_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_2065c4984:;
			++it;
			goto _iter_begin_2065c4984;
		}
		_iter_end_2065c4984:;
	};
}



inline void _203b16cdc_decls(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_203b10d91_traitDecls(_self_);
	_203b112e2_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I32>(_self_.get()._field_Obj.len());
	_203b12ee7_structureDecls(_self_);
	_203b1426d_funcDecls(_self_);
	_203b0cc39_write(_self_, jule::Str("\n\n", 2));
	_203b14768_traitDataTypes(_self_);
	_203b0cc39_write(_self_, jule::Str("\n\n", 2));
	_203b1611b_traitWrappers(_self_);
	_203b0cc39_write(_self_, jule::Str("\n\n", 2));
	_203b16935_traitDatas(_self_);
	_203b0cc39_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I32>(_self_.get()._field_Obj.len());
	_203b16b11_globals(_self_);
}



inline void _203b17062_structureMethods(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20100d071_StructIns>* _116641_s) {
	{
		auto expr = &((*(_116641_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065c98e0:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _116721_f = *it;
			{
				_203b15802_func(_self_, &(_116721_f));
				_203b0cc39_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_2065c98e0:;
			++it;
			goto _iter_begin_2065c98e0;
		}
		_iter_end_2065c98e0:;
	};
}



inline void _203b172d7_structureDeriveDefs(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20100d071_StructIns>* _117344_s) {
	if (_20100ba86_IsDerives((*(_117344_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_203b0cc39_write(_self_, _203a66566_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_117344_s)).get()._field_Decl)));
		_203b0cc39_write(_self_, jule::Str("{\n", 2));
		_203b0d18a_addIndent(_self_);
		_203b0d542_indent(_self_);
		_203b0cc39_write(_self_, _203b1ea3c_structureIns(_self_.get()._field_tc.ptr(), (*(_117344_s))));
		_203b0cc39_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_117344_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2065cc470:;
			if (it != expr_end) {
				jule::Ptr<_20100c57b_FieldIns> _118120_f = *it;
				{
					jule::Str _118221_ident = static__203a6b7ad_field(&(_118120_f.get()._field_Decl));;
					_203b0d542_indent(_self_);
					_203b0cc39_write(_self_, jule::Str("clone.", 6));
					_203b0ceae_writeR(_self_, &(_118221_ident));
					_203b0cc39_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_203b0ceae_writeR(_self_, &(_118221_ident));
					_203b0cc39_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_2065cc470:;
				++it;
				goto _iter_begin_2065cc470;
			}
			_iter_end_2065cc470:;
		};
		_203b0d542_indent(_self_);
		_203b0cc39_write(_self_, jule::Str("return clone;\n", 14));
		_203b0d366_doneIndent(_self_);
		_203b0cc39_write(_self_, jule::Str("}", 1));
	};
}



inline void _203b1755c_structureOstream(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20100d071_StructIns>* _119741_s) {
	_203b0d542_indent(_self_);
	_203b0cc39_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_203b0cc39_write(_self_, static__203a6b516_structureIns(_119741_s));
	_203b0cc39_write(_self_, jule::Str(" _Src) {\n", 9));
	_203b0d18a_addIndent(_self_);
	_203b0d542_indent(_self_);
	jule::Ptr<_20102065a_Fn> _120517_fts = _20100e01c_FindMethod((*(_119741_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__2010a60e7_Str(_120517_fts)) {
		_203b0cc39_write(_self_, jule::Str("_Stream << ", 11));
		_203b0cc39_write(_self_, static__203a6a6e1_func(&(_120517_fts)));
		_203b0cc39_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_203b0cc39_write(_self_, jule::Str("_Stream << \"", 12));
		_203b0ceae_writeR(_self_, &((*(_119741_s)).get()._field_Decl.get()._field_Ident));
		_203b0cc39_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_119741_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2065d36eb:;
			if (it != expr_end) {
				jule::I32 _121518_i = it - expr->begin();
				jule::Ptr<_20100c57b_FieldIns> _121525_f = *it;
				{
					_203b0d542_indent(_self_);
					_203b0cc39_write(_self_, jule::Str("_Stream << \"", 12));
					_203b0ceae_writeR(_self_, &(_121525_f.get()._field_Decl.get()._field_Ident));
					_203b0cc39_write(_self_, jule::Str(":", 1));
					jule::Ptr<_20100d071_StructIns> _122221_strct = _201134c69_Struct(_121525_f.get()._field_Kind.ptr());;
					if ((((_122221_strct != nullptr) && (_122221_strct.get()._field_Decl != nullptr)) && _122221_strct.get()._field_Decl.get()._field_Binded)) {
						_203b0cc39_write(_self_, jule::Str(" cpp.", 5));
						_203b0cc39_write(_self_, static__203a6b7ad_field(&(_121525_f.get()._field_Decl)));
						_203b0cc39_write(_self_, jule::Str("\"", 1));
					} else {
						_203b0cc39_write(_self_, jule::Str("\" << _Src.", 10));
						_203b0cc39_write(_self_, static__203a6b7ad_field(&(_121525_f.get()._field_Decl)));
					};
					if (((_121518_i + 1LL) < (*(_119741_s)).get()._field_Fields.len())) {
						_203b0cc39_write(_self_, jule::Str(" << \", \"", 8));
					};
					_203b0cc39_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_2065d36eb:;
				++it;
				_121518_i++;
				goto _iter_begin_2065d36eb;
			}
			_iter_end_2065d36eb:;
		};
		_203b0d542_indent(_self_);
		_203b0cc39_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_203b0d542_indent(_self_);
	_203b0cc39_write(_self_, jule::Str("return _Stream;\n", 16));
	_203b0d366_doneIndent(_self_);
	_203b0cc39_write(_self_, jule::Str("}", 1));
}



inline void _203b177d2_structureIns(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20100d071_StructIns>* _124837_s) {
	_203b17062_structureMethods(_self_, _124837_s);
	_203b0cc39_write(_self_, jule::Str("\n\n", 2));
	_203b172d7_structureDeriveDefs(_self_, _124837_s);
	_203b0cc39_write(_self_, jule::Str("\n\n", 2));
	_203b1755c_structureOstream(_self_, _124837_s);
}



inline void _203b17a57_structure(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20100a25a_Struct>* _125634_s) {
	{
		auto expr = &((*(_125634_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065da109:;
		if (it != expr_end) {
			jule::Ptr<_20100d071_StructIns> _125721_ins = *it;
			{
				_203b177d2_structureIns(_self_, &(_125721_ins));
				_203b0cc39_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_2065da109:;
			++it;
			goto _iter_begin_2065da109;
		}
		_iter_end_2065da109:;
	};
}



inline void _203b17c33_structures(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065db1c6:;
		if (it != expr_end) {
			jule::Ptr<_20100a25a_Struct> _126421_s = *it;
			{
				if ((_126421_s.get()._field_Token != nullptr)) {
					_203b17a57_structure(_self_, &(_126421_s));
					_203b0cc39_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_2065db1c6:;
			++it;
			goto _iter_begin_2065db1c6;
		}
		_iter_end_2065db1c6:;
	};
}



inline void _203b17e0e_funcs(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_203b109d9_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20107ded2_Package>*)>([=](jule::Ptr<_20107ded2_Package>* _127335_pkg) mutable -> void {
		_203b18c9a_iterFiles(_127335_pkg, jule::Fn<void(jule::Ptr<_2010e9118_SymbolTable>*)>([=](jule::Ptr<_2010e9118_SymbolTable>* _127436_file) mutable -> void {
			{
				auto expr = &((*(_127436_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_2065de1c9:;
				if (it != expr_end) {
					jule::Ptr<_20102065a_Fn> _127529_f = *it;
					{
						if (((!(_216de500d_Test)) && _203b2cdad_hasDirective(&(_127529_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_2065de1c9;
						};
						if (((!(_127529_f.get()._field_Binded)) && (_127529_f.get()._field_Token != nullptr))) {
							_203b15802_func(_self_, &(_127529_f));
							_203b0cc39_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_2065de1c9:;
					++it;
					goto _iter_begin_2065de1c9;
				}
				_iter_end_2065de1c9:;
			};
		}));
	}));
}



inline void _203b18184_pushInit(jule::Ptr<_203b0c5da_ObjectCoder> _self_, jule::Ptr<_20107ded2_Package>* _128833_pkg) {
	_203b18c9a_iterFiles(_128833_pkg, jule::Fn<void(jule::Ptr<_2010e9118_SymbolTable>*)>([=](jule::Ptr<_2010e9118_SymbolTable>* _128932_file) mutable -> void {
		{
			auto expr = &((*(_128932_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2065e15e9:;
			if (it != expr_end) {
				jule::Ptr<_20102065a_Fn> _129020_f = *it;
				{
					if (_129020_f.get()._field_Ident.equal("init", 4)) {
						_203b0d542_indent(_self_);
						_203b0cc39_write(_self_, static__203a6a6e1_func(&(_129020_f)));
						_203b0cc39_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_2065e15e9:;
				++it;
				goto _iter_begin_2065e15e9;
			}
			_iter_end_2065e15e9:;
		};
	}));
}



inline void _203b18360_initCaller(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_203b0cc39_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_203b0d18a_addIndent(_self_);
	_203b109d9_iterPackages(_self_, jule::Fn<void(jule::Ptr<_20107ded2_Package>*)>([=](jule::Ptr<_20107ded2_Package>* _130335_pkg) mutable -> void {
		_203b18184_pushInit(_self_, _130335_pkg);
	}));
	_203b0d366_doneIndent(_self_);
	_203b0cc39_write(_self_, jule::Str("\n}", 2));
}



inline void _203b1853b_end(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_203b0cc39_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_216de500d_Test) {
		_203b0cc39_write(_self_, jule::Str("test_point();", 13));
	} else {
		_203b0cc39_write(_self_, jule::Str("entry_point();", 14));
	};
	_203b0cc39_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _203b18717_serializeHead(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_203b10764_prepareStructures(_self_);
	_203b10bb5_buildTraitMap(_self_);
	_203b10137_head(_self_);
	_203b0cc39_write(_self_, jule::Str("\n", 1));
	_203b16cdc_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _133821_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2065e7237:;
			if (it != expr_end) {
				jule::Str _133920_decl = *it;
				{
					_133821_head+=_133920_decl;
					_self_.get()._field_declPos+=_133920_decl.len();
				}
				_iter_next_2065e7237:;
				++it;
				goto _iter_begin_2065e7237;
			}
			_iter_end_2065e7237:;
		};
		_133821_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_133821_head;
	};
	_203b0cc39_write(_self_, jule::Str("\n", 1));
	_203b17c33_structures(_self_);
	_203b17e0e_funcs(_self_);
	_203b18360_initCaller(_self_);
	_203b0cc39_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _135421_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_135421_head+=_self_.get()._field_anyObj;
		_135421_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_135421_head;
	};
}



inline void _203b188e3_Serialize(jule::Ptr<_203b0c5da_ObjectCoder> _self_) {
	_203b18717_serializeHead(_self_);
	_203b1853b_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _203b0c5da_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2032e4dd3_ObjectDeadCode> static__2032e5367_new(jule::Ptr<_2031e99ca_IR>* _3424_ir) {
	return jule::new_ptr<_2032e4dd3_ObjectDeadCode>(_2032e4dd3_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _20609471d_isLive(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_20103287b_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_20103287b_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_206096467:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_20609617b:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206096b4e:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_206096b4e:;
			++it;
			_5213_i++;
			goto _iter_begin_206096b4e;
		}
		_iter_end_206096b4e:;
	};
	return false;;
}

inline jule::Bool _20609937c_isLive(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_20102330b_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_20102330b_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_20609b516:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_20609b45b:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20609bcdb:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_20609bcdb:;
			++it;
			_5213_i++;
			goto _iter_begin_20609bcdb;
		}
		_iter_end_20609bcdb:;
	};
	return false;;
}

inline jule::Bool _2060a3771_isLive(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_20100d071_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_20100d071_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_2060a9843:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_2060a95bd:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060a9931:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_2060a9931:;
			++it;
			_5213_i++;
			goto _iter_begin_2060a9931;
		}
		_iter_end_2060a9931:;
	};
	return false;;
}

inline jule::Bool _2060abec7_isLive(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_2010a4975_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_2010a4975_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_2060ada12:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_2060ad8e1:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060ae271:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_2060ae271:;
			++it;
			_5213_i++;
			goto _iter_begin_2060ae271;
		}
		_iter_end_2060ae271:;
	};
	return false;;
}



inline void _206094a70_pushLive(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_20103287b_Trait> _6035_t) {
	{
		
{
			_case_begin_206098469:;
			{
				{ jule::Slice<jule::Ptr<_20103287b_Trait>> &__jule_push_dest = _self_.get()._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_206098117:;
	};
}

inline void _206099d94_pushLive(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_20102330b_FnIns> _6035_t) {
	{
		
{
			_case_begin_20609dc88:;
			{
				{ jule::Slice<jule::Ptr<_20102330b_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_20609da13:;
	};
}

inline void _2060a0dab_pushLive(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_20100d071_StructIns> _6035_t) {
	{
		
{
			_case_begin_2060a25a5:;
			{
				{ jule::Slice<jule::Ptr<_20100d071_StructIns>> &__jule_push_dest = _self_.get()._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_2060a22b9:;
	};
}

inline void _2060ac329_pushLive(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_2010a4975_Var> _6035_t) {
	{
		
{
			_case_begin_2060b0d55:;
			{
				{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = _self_.get()._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_2060b0c78:;
	};
}



inline void _20332750e_setReferencesAsLive(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_201026265_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _7717_i = 0LL;;
	for (; (_7717_i < _20102684d_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _201026b5b_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_206093321:;
					{
						jule::Ptr<_20103287b_Trait> _8225_t = _7921_ref.cast_ptr<_20103287b_Trait>(&__jule_any_type10);;
						if (_20609471d_isLive(_self_, &(_8225_t))) {
							goto _iter_next_20609283c;
						};
						_206094a70_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_206095400:;
							if (it != expr_end) {
								jule::Ptr<_20102065a_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_2060989ec:;
										if (it != expr_end) {
											jule::Ptr<_20102330b_FnIns> _8833_mins = *it;
											{
												if (_20609937c_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_2060989ec;
												};
												_206099d94_pushLive(_self_, _8833_mins);
												_20332750e_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_2060989ec:;
											++it;
											goto _iter_begin_2060989ec;
										}
										_iter_end_2060989ec:;
									};
								}
								_iter_next_206095400:;
								++it;
								goto _iter_begin_206095400;
							}
							_iter_end_206095400:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_206093387:;
					{
						jule::Ptr<_20102330b_FnIns> _9725_f = _7921_ref.cast_ptr<_20102330b_FnIns>(&__jule_any_type7);;
						if (_20609937c_isLive(_self_, &(_9725_f))) {
							goto _match_end_2060934a8;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_2060a3771_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_2060a0dab_pushLive(_self_, _9725_f.get()._field_Owner);
								_20332750e_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_206099d94_pushLive(_self_, _9725_f);
						_20332750e_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_2060935b8:;
					{
						jule::Ptr<_2010a4975_Var> _11025_v = _7921_ref.cast_ptr<_2010a4975_Var>(&__jule_any_type8);;
						if (_2060abec7_isLive(_self_, &(_11025_v))) {
							goto _match_end_2060934a8;
						};
						_2060ac329_pushLive(_self_, _11025_v);
						_20332750e_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_20609362e:;
					{
						jule::Ptr<_20100d071_StructIns> _11725_s = _7921_ref.cast_ptr<_20100d071_StructIns>(&__jule_any_type9);;
						if (_2060a3771_isLive(_self_, &(_11725_s))) {
							goto _match_end_2060934a8;
						};
						_2060a0dab_pushLive(_self_, _11725_s);
						_20332750e_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_2060b33da:;
							if (it != expr_end) {
								jule::Ptr<_20102065a_Fn> _12329_ins = *it;
								{
									{
										auto expr = &(_12329_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_2060b43b9:;
										if (it != expr_end) {
											jule::Ptr<_20102330b_FnIns> _12433_mins = *it;
											{
												if (_20609937c_isLive(_self_, &(_12433_mins))) {
													goto _iter_next_2060b43b9;
												};
												_206099d94_pushLive(_self_, _12433_mins);
												_20332750e_setReferencesAsLive(_self_, &(_12433_mins.get()._field_Refers));
											}
											_iter_next_2060b43b9:;
											++it;
											goto _iter_begin_2060b43b9;
										}
										_iter_end_2060b43b9:;
									};
								}
								_iter_next_2060b33da:;
								++it;
								goto _iter_begin_2060b33da;
							}
							_iter_end_2060b33da:;
						};
					}
				}
				_match_end_2060934a8:;
			};
		}
	_iter_next_20609283c:;
	}
	_iter_end_20609283c:;;
}



inline void _203327784_inits(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_20107ded2_Package>* _13630_pkg) {
	{
		auto expr = &((*(_13630_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206092bd3:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _13721_file = *it;
			{
				{
					auto expr = &(_13721_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2060b67b7:;
					if (it != expr_end) {
						jule::Ptr<_20102065a_Fn> _13825_f = *it;
						{
							if (_13825_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_20102330b_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_20102330b_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_14029_ins); };
								_20332750e_setReferencesAsLive(_self_, &(_14029_ins.get()._field_Refers));
							};
						}
						_iter_next_2060b67b7:;
						++it;
						goto _iter_begin_2060b67b7;
					}
					_iter_end_2060b67b7:;
				};
			}
			_iter_next_206092bd3:;
			++it;
			goto _iter_begin_206092bd3;
		}
		_iter_end_206092bd3:;
	};
}



inline void _203327a09_collectLivePackage(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_20107ded2_Package>* _14843_pkg) {
	_203327784_inits(_self_, _14843_pkg);
	if (_216de500d_Test) {
		{
			auto expr = &((*(_14843_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2060b8995:;
			if (it != expr_end) {
				jule::Ptr<_2010e9118_SymbolTable> _15425_file = *it;
				{
					{
						auto expr = &(_15425_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2060b92ae:;
						if (it != expr_end) {
							jule::Ptr<_20102065a_Fn> _15529_f = *it;
							{
								if (_203329a61_hasDirective(&(_15529_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_20102330b_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_20102330b_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_15733_ins); };
									_20332750e_setReferencesAsLive(_self_, &(_15733_ins.get()._field_Refers));
								};
							}
							_iter_next_2060b92ae:;
							++it;
							goto _iter_begin_2060b92ae;
						}
						_iter_end_2060b92ae:;
					};
				}
				_iter_next_2060b8995:;
				++it;
				goto _iter_begin_2060b8995;
			}
			_iter_end_2060b8995:;
		};
	};
}



inline void _203327bd5_collectLive(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060b6db1:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_Binded))) {
					_203327a09_collectLivePackage(_self_, &(_16721_used.get()._field_Package));
				};
			}
			_iter_next_2060b6db1:;
			++it;
			goto _iter_begin_2060b6db1;
		}
		_iter_end_2060b6db1:;
	};
	_203327a09_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_20102065a_Fn> _17517_main = _201080423_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_20102330b_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_20102330b_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_17617_ins); };
	_20332750e_setReferencesAsLive(_self_, &(_17617_ins.get()._field_Refers));
}



inline void _203327e5a_removeDeadGlobals(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_2010a4975_Var>>* _18142_vars) {
	jule::I32 _18217_i = 0LL;;
	while ((_18217_i < (*(_18142_vars)).len())) {
		{
			jule::Ptr<_2010a4975_Var> _18417_v = (*(_18142_vars))[_18217_i];;
			if (_2060abec7_isLive(_self_, &(_18417_v))) {
				(_18217_i)++;
				goto _iter_next_2060bd934;
			};
			(*(_18142_vars))=jule::append((*(_18142_vars)).slice(0LL, _18217_i),(*(_18142_vars)).slice((_18217_i + 1LL)));
		}
	_iter_next_2060bd934:;
	}
	_iter_end_2060bd934:;;
}



inline void _2033281d0_removeDeadFns(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20102065a_Fn>>* _19338_funcs) {
	jule::I32 _19417_i = 0LL;;
	while ((_19417_i < (*(_19338_funcs)).len())) {
		{
			jule::Ptr<_20102065a_Fn> _19621_f = (*(_19338_funcs))[_19417_i];;
			jule::I32 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_20102330b_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_20609937c_isLive(_self_, &(_19921_ins))) {
						(_19721_j)++;
						goto _iter_next_2060c1aad;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL, _19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_2060c1aad:;
			}
			_iter_end_2060c1aad:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				(*(_19338_funcs))=jule::append((*(_19338_funcs)).slice(0LL, _19417_i),(*(_19338_funcs)).slice((_19417_i + 1LL)));
				goto _iter_next_2060c035e;
			};
			(_19417_i)++;
		}
	_iter_next_2060c035e:;
	}
	_iter_end_2060c035e:;;
}



inline void _203328455_removeDeadStructs(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20100a25a_Struct>>* _21442_structs) {
	jule::I32 _21517_i = 0LL;;
	while ((_21517_i < (*(_21442_structs)).len())) {
		{
			jule::Ptr<_20100a25a_Struct> _21721_s = (*(_21442_structs))[_21517_i];;
			jule::I32 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_20100d071_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_2033281d0_removeDeadFns(_self_, &(_22025_ins.get()._field_Methods));
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _2060a3771_isLive(_self_, &(_22025_ins)))) {
						(_21821_j)++;
						goto _iter_next_2060c574e;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL, _21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_2060c574e:;
			}
			_iter_end_2060c574e:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				(*(_21442_structs))=jule::append((*(_21442_structs)).slice(0LL, _21517_i),(*(_21442_structs)).slice((_21517_i + 1LL)));
				goto _iter_next_2060c47b4;
			};
			(_21517_i)++;
		}
	_iter_next_2060c47b4:;
	}
	_iter_end_2060c47b4:;;
}



inline void _2033286ca_removeDeadTraits(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_20103287b_Trait>>* _23641_traits) {
	jule::I32 _23717_i = 0LL;;
	while ((_23717_i < (*(_23641_traits)).len())) {
		{
			jule::Ptr<_20103287b_Trait> _23921_t = (*(_23641_traits))[_23717_i];;
			if ((!(_20609471d_isLive(_self_, &(_23921_t))))) {
				(*(_23641_traits))=jule::append((*(_23641_traits)).slice(0LL, _23717_i),(*(_23641_traits)).slice((_23717_i + 1LL)));
				goto _iter_next_2060c8b92;
			};
			jule::I32 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_20100a25a_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_2060c96cb;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL, _24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_2060c96cb:;
			}
			_iter_end_2060c96cb:;;
			(_23717_i)++;
		}
	_iter_next_2060c8b92:;
	}
	_iter_end_2060c8b92:;;
}



inline void _203328950_removeDeadsFile(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_2010e9118_SymbolTable>* _25740_file) {
	_2033281d0_removeDeadFns(_self_, &((*(_25740_file)).get()._field_Funcs));
	_203328455_removeDeadStructs(_self_, &((*(_25740_file)).get()._field_Structs));
	_2033286ca_removeDeadTraits(_self_, &((*(_25740_file)).get()._field_Traits));
	_203327e5a_removeDeadGlobals(_self_, &((*(_25740_file)).get()._field_Vars));
}



inline void _203328bc5_removeDeadsPackage(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_, jule::Ptr<_20107ded2_Package>* _26443_pkg) {
	{
		auto expr = &((*(_26443_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060cd9bb:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _26521_file = *it;
			{
				_203328950_removeDeadsFile(_self_, &(_26521_file));
			}
			_iter_next_2060cd9bb:;
			++it;
			goto _iter_begin_2060cd9bb;
		}
		_iter_end_2060cd9bb:;
	};
}



inline void _203328da1_removeDeads(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060ce12b:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_Binded))) {
					_203328bc5_removeDeadsPackage(_self_, &(_27121_used.get()._field_Package));
				};
			}
			_iter_next_2060ce12b:;
			++it;
			goto _iter_begin_2060ce12b;
		}
		_iter_end_2060ce12b:;
	};
	_203328bc5_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _20332907c_elimanate(jule::Ptr<_2032e4dd3_ObjectDeadCode> _self_) {
	_203327bd5_collectLive(_self_);
	_203328da1_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _2032e4dd3_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_2031e99ca_IR__jule_tuple_s_2193a460d_Log static__2031e9e1a_Build(jule::Str _2721_path, jule::I32 _2732_flags) {
	__jule_tuple_x_2031e99ca_IR__jule_tuple_s_2193a460d_Log __jule_func_result;
	jule::Ptr<_2031e7423_JuleImporter> _2817_importer = static__2031e780d_New(_2031eb779_buildCompileInfo());;
	jule::Slice<jule::Ptr<_200d46041_Ast>> _2918_files;;
	jule::Slice<_2193a460d_Log> _2929_logs;;
	({
		__jule_tuple_sx_200d46041_Ast__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031e8bb6_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_20107ded2_Package> _3918_pkg;;
	({
		__jule_tuple_x_20107ded2_Package__jule_tuple_s_2193a460d_Log __jule_assign_result = _201150955_AnalyzePackage(_2918_files, jule::Trait<_2010786e6_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_2031e99ca_IR> _4417_ir = jule::new_ptr<_2031e99ca_IR>(_2031e99ca_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_2031e7a72_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_2031eb57b_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _2031ea3b0_appendStructs(_2031e99ca_IR* _self_, jule::Ptr<_20107ded2_Package>* _5633_p, jule::Slice<jule::Ptr<_20100a25a_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20605d275:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20605dab1:;
					if (it != expr_end) {
						jule::Ptr<_20100a25a_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_Binded))) {
								{ jule::Slice<jule::Ptr<_20100a25a_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_20605dab1:;
						++it;
						goto _iter_begin_20605dab1;
					}
					_iter_end_20605dab1:;
				};
			}
			_iter_next_20605d275:;
			++it;
			goto _iter_begin_20605d275;
		}
		_iter_end_20605d275:;
	};
}



inline jule::Slice<jule::Ptr<_20100a25a_Struct>> _2031ea624_GetAllStructures(_2031e99ca_IR* _self_) {
	jule::Slice<jule::Ptr<_20100a25a_Struct>> _6917_buffer = nullptr;;
	_2031ea3b0_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20605d95c:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_Binded))) {
					_2031ea3b0_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_20605d95c:;
			++it;
			goto _iter_begin_20605d95c;
		}
		_iter_end_20605d95c:;
	};
	return _6917_buffer;;
}



inline void _2031ea943_appendGlobals(_2031e99ca_IR* _self_, jule::Ptr<_20107ded2_Package>* _7933_p, jule::Slice<jule::Ptr<_2010a4975_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20606108b:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_206061894:;
					if (it != expr_end) {
						jule::Ptr<_2010a4975_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_Binded))) && (!(_8125_v.get()._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_206061894:;
						++it;
						goto _iter_begin_206061894;
					}
					_iter_end_206061894:;
				};
			}
			_iter_next_20606108b:;
			++it;
			goto _iter_begin_20606108b;
		}
		_iter_end_20606108b:;
	};
}



inline jule::Slice<jule::Ptr<_2010a4975_Var>> _2031eaba7_GetAllGlobals(_2031e99ca_IR* _self_) {
	jule::Slice<jule::Ptr<_2010a4975_Var>> _9217_buffer = nullptr;;
	_2031ea943_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20606207b:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_Binded))) {
					_2031ea943_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_20606207b:;
			++it;
			goto _iter_begin_20606207b;
		}
		_iter_end_20606207b:;
	};
	return _9217_buffer;;
}



inline void _2031ead83_Order(_2031e99ca_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_2031ea624_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_2031eaba7_GetAllGlobals(_self_);
	static__2031eca66_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__2031ecc75_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _2031e99ca_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20100d3d4_Str(_20100d071_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		(_25017_kind).append("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_204ea2253:;
			if (it != expr_end) {
				jule::Ptr<_20112e868_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_2011314a2_Str((*(_25420_g)).get()._field_Kind.ptr());
					(_25017_kind).append(",", 1);
				}
				_iter_next_204ea2253:;
				++it;
				goto _iter_begin_204ea2253;
			}
			_iter_end_204ea2253:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		(_25017_kind).append("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _20100d6e2_Equal(jule::Ptr<_20100d071_StructIns> _self_, jule::Ptr<_2011310ea_TypeKind> _26521_other) {
	jule::Ptr<_20100d071_StructIns> _26613_s = _201134c69_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I32 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_2011317b0_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_204ea5399:;
	}
	_iter_end_204ea5399:;;
	return true;;
}



inline jule::Bool _20100db65_Same(_20100d071_StructIns* _self_, jule::Ptr<_20100d071_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204ea7401:;
		if (it != expr_end) {
			jule::I32 _29713_i = it - expr->begin();
			jule::Ptr<_20112e868_InsGeneric> *_29716_g = it;
			{
				jule::Ptr<_20112e868_InsGeneric> _29817_g2 = _29319_s.get()._field_Generics[_29713_i];;
				if ((((*(_29716_g)).get()._field_Kind.get()._field_BindIdent != _29817_g2.get()._field_Kind.get()._field_BindIdent) || (!(_2011317b0_Equal((*(_29716_g)).get()._field_Kind, _29817_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_204ea7401:;
			++it;
			_29713_i++;
			goto _iter_begin_204ea7401;
		}
		_iter_end_204ea7401:;
	};
	return true;;
}



inline jule::Ptr<_20102065a_Fn> _20100e01c_FindMethod(_20100d071_StructIns* _self_, jule::Str _30829_ident, jule::Bool _30841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204ea9579:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _30921_f = *it;
			{
				if (((_30921_f.get()._field_Statically == _30841_statically) && (_30921_f.get()._field_Ident == _30829_ident))) {
					return _30921_f;;
				};
			}
			_iter_next_204ea9579:;
			++it;
			goto _iter_begin_204ea9579;
		}
		_iter_end_204ea9579:;
	};
	return nullptr;;
}



inline jule::Ptr<_20100c57b_FieldIns> _20100e32a_FindField(_20100d071_StructIns* _self_, jule::Str _31928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204ea9c94:;
		if (it != expr_end) {
			jule::Ptr<_20100c57b_FieldIns> _32021_f = *it;
			{
				if ((_32021_f.get()._field_Decl.get()._field_Ident == _31928_ident)) {
					return _32021_f;;
				};
			}
			_iter_next_204ea9c94:;
			++it;
			goto _iter_begin_204ea9c94;
		}
		_iter_end_204ea9c94:;
	};
	return nullptr;;
}



inline jule::Ptr<_2010a4975_Var> _20100e638_FindStatic(_20100d071_StructIns* _self_, jule::Str _33029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204eab834:;
		if (it != expr_end) {
			jule::Ptr<_2010a4975_Var> _33121_v = *it;
			{
				if ((_33121_v.get()._field_Ident == _33029_ident)) {
					return _33121_v;;
				};
			}
			_iter_next_204eab834:;
			++it;
			goto _iter_begin_204eab834;
		}
		_iter_end_204eab834:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _20100d071_StructIns _Src) {
	_Stream << _20100d3d4_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_21ab5c733_Cmd> static__21ab5cb40_New(jule::Str _2619_path) {
	return jule::new_ptr<_21ab5c733_Cmd>(_21ab5c733_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _21ab5cd1b_Spawn(_21ab5c733_Cmd* _self_) {
	({
		auto except = _21ab6187a_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _21ab5cee7_Kill(_21ab5c733_Cmd* _self_) {
	({
		auto except = _21ab61a56_kill(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _21ab5d25b_Wait(_21ab5c733_Cmd* _self_) {
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(({
		auto except = _21ab61cba_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I32>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _21ab6187a_spawn(_21ab5c733_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:42:13"));;
	};
	STARTUPINFOW _4417_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4517_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4417_startupInfo)), static_cast<jule::U32>(sizeof(_4417_startupInfo)));
		ZeroMemory((&(_4517_processInfo)), static_cast<jule::U32>(sizeof(_4517_processInfo)));
	};
	_4417_startupInfo.cb=static_cast<jule::U32>(sizeof(_4417_startupInfo));
	jule::Slice<jule::Str> _5117_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5117_args[0LL]=(*(_self_))._field_path;
	(_5117_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _5413_argv = _217d54c91_Utf16FromStr(_21ab623d6_makeCmdLine(_5117_args));;
	jule::Slice<jule::U16> _5513_env = ({
		auto except = _21ab6278d_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5617_envp = (&(_5513_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5617_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_5413_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5617_envp, nullptr, (&(_4417_startupInfo)), (&(_4517_processInfo))) == 0LL)) {
			return jule::VoidExceptional(jule::Any(_21ab6397b_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4517_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4517_processInfo.hThread;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _21ab61a56_kill(_21ab5c733_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:73:13"));;
	};
	if (TerminateProcess((*(_self_))._field_attrs._field_hProcess, 0LL)) {
		(*(_self_))._field_attrs._field_hProcess=nullptr;
		(*(_self_))._field_attrs._field_hThread=nullptr;
		return jule::VoidExceptional();;
	};
	return jule::VoidExceptional(jule::Any(-1LL, &__jule_any_type0));
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _21ab61cba_wait(_21ab5c733_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:85:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8817_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8817_exitCode)));
		_217d82b59_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess))));
		_217d82b59_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread))));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(static_cast<jule::I32>(_8817_exitCode)));;
}







std::ostream &operator<<(std::ostream &_Stream, _21ab5c733_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _217d53de4_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _217d5418b_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _217d544aa_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I32 _8813_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203b96234:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_8813_n)++;
				};
			}
			_iter_next_203b96234:;
			++it;
			goto _iter_begin_203b96234;
		}
		_iter_end_203b96234:;
	};
	jule::Slice<jule::U16> _9513_a = jule::Slice<jule::U16>::alloc(_8813_n, _8813_n, 0);;
	_8813_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203b96e27:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_203b97e7d:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>((*(_9712_v))));
							(_8813_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_203b98500:;
						{
							jule::I32 _10518_r1 = 0;;
							jule::I32 _10522_r2 = 0;;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _217d5418b_EncodeRune((*(_9712_v)));
								_10518_r1 = __jule_assign_result.__jule_result_arg0;
								_10522_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>(_10518_r1));
							_9513_a[(_8813_n + 1LL)]=static_cast<jule::U16>(static_cast<jule::U16>(_10522_r2));
							_8813_n+=2LL;
						}
					}
					else {
						_case_begin_203b97ad7:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(65533LLU);
							(_8813_n)++;
						}
					}
					_match_end_203b97a1b:;
				};
			}
			_iter_next_203b96e27:;
			++it;
			goto _iter_begin_203b96e27;
		}
		_iter_end_203b96e27:;
	};
	return _9513_a.slice(0LL, _8813_n);;
}



inline jule::Slice<jule::I32> _217d54752_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I32 _12113_n = 0LL;;
	jule::I32 _12213_i = 0LL;;
	for (; (_12213_i < _11911_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11911_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_203b9c405:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_12213_i + 1LL)])) && (_11911_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_203b9ba75:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_217d53de4_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)), static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_203b9bed7:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_203b9be82:;
			};
			(_12113_n)++;
		}
	_iter_next_203b9ac3e:;
	}
	_iter_end_203b9ac3e:;;
	return _12013_a.slice(0LL, _12113_n);;
}



inline jule::Slice<jule::U16> _217d54a60_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_203b9e36e:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_203ba0051:;
			{
				jule::I32 _15614_r1 = 0;;
				jule::I32 _15618_r2 = 0;;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _217d5418b_EncodeRune(_14929_r);
					_15614_r1 = __jule_assign_result.__jule_result_arg0;
					_15618_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));;
			}
		}
		_match_end_203b9e292:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _217d54c91_Utf16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL, _209_runes.len(), 0);;
	{
		auto expr = &(_209_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203bab07e:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_203bab07e;
				};
				_2113_buff=_217d54a60_AppendRune(_2113_buff, (*(_2212_r)));
			}
			_iter_next_203bab07e:;
			++it;
			goto _iter_begin_203bab07e;
		}
		_iter_end_203bab07e:;
	};
	return _217d54a60_AppendRune(_2113_buff, 0LL);;
}



inline jule::Str _217d55049_Utf16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _3813_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_203bacb63:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					_3813_codePage=_3813_codePage.slice(0LL, _399_i);
					goto _iter_end_203bacb63;
				};
			}
			_iter_next_203bacb63:;
			++it;
			_399_i++;
			goto _iter_begin_203bacb63;
		}
		_iter_end_203bacb63:;
	};
	return static_cast<jule::Str>(_217d54752_Decode(_3813_codePage));;
}



inline jule::Str _217d552e1_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage = nullptr;;
	jule::I32 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5023_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_217d54752_Decode(_5513_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5513_codePage; __jule_push_dest.push(_5813_r); };
		}
	_iter_next_203bad4e3:;
	}
	_iter_end_203bad4e3:;;
	return jule::Str();;
}



inline jule::I32 _216e8dd43_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _217d828b2_GetStdHandle(jule::Uintptr _6417_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_6417_stdh))));;
}



inline jule::Bool _217d82b59_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I32 _217d82e9a_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return static_cast<jule::I32>(_wstat(((wchar_t*)(_6817_path)), _6833_stat));;
}



inline jule::I32 _217d83385_Wopen(jule::U16* _7317_path, jule::I32 _7329_flag, jule::I32 _7340_mode) {
	return static_cast<jule::I32>(_wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode));;
}



inline jule::U32 _217d83583_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());;
}



inline jule::U32 _217d838c4_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff))));;
}



inline jule::Bool _217d83e13_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _217d841aa_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _217d84452_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _217d848d6_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1095_buff, jule::U16** _10917_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1095_buff)), ((wchar_t**)(_10917_fname))));;
}



inline jule::Bool _217d84c27_GetConsoleMode(jule::Uintptr _11419_handle, jule::I32* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)((&((*(_11440_mode)))))));;
}



inline jule::Bool _217d852dd_SetConsoleMode(jule::Uintptr _11919_handle, jule::I32 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _217d857d8_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I32 _12454_toWrite, jule::I32* _12510_written, void* _12524_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_12510_written)))), _12524_reserved);;
}



inline jule::Bool _217d85c6c_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I32 _13257_toRead, jule::I32* _13310_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)((&((*(_13310_readed)))))), nullptr);;
}



inline jule::Uintptr _217d862ab_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data))));;
}



inline jule::I32 _217d865ec_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return static_cast<jule::I32>(FindNextFileW(((HANDLE)(_14924_h)), _14939_data));;
}



inline jule::I32 _217d86894_FindClose(jule::Uintptr _15414_h) {
	return static_cast<jule::I32>(FindClose(((HANDLE)(_15414_h))));;
}



inline jule::I32 _217d883bd_Seek(jule::I32 _159_handle, jule::I32 _1522_offset, jule::I32 _1535_origin) {
	return static_cast<jule::I32>(lseek(_159_handle, _1522_offset, _1535_origin));;
}



inline jule::I32 _217d887a8_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return static_cast<jule::I32>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I32 _217d88b2c_Close(jule::I32 _2510_handle) {
	return static_cast<jule::I32>(close(_2510_handle));;
}



inline jule::I32 _217d89017_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return static_cast<jule::I32>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _217d89226_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _217da5011_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _217da56b5_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline __jule_tuple_i32__jule_tuple_int _217e86dc3_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _217e85ca1_first[static_cast<jule::I32>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1959_sz = static_cast<jule::I32>((_1879_x & 7LLU));;
	_217e86334_acceptRange _1969_accept = _217e86642_acceptRanges[static_cast<jule::I32>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _217e871e2_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _217e85ca1_first[static_cast<jule::I32>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2429_sz = static_cast<jule::I32>((_2349_x & 7LLU));;
	_217e86334_acceptRange _2439_accept = _217e86642_acceptRanges[static_cast<jule::I32>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _217e87489_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _2809_end = _27619_p.len();;
	jule::I32 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_217e88d5e_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_203c4d52d;
			};
		}
	_iter_next_203c4d52d:;
	}
	_iter_end_203c4d52d:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e86dc3_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I32 _217e879c8_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_203c55205:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_203c54996:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_203c54a1d:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_203c54a95:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_203c54b1c:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_203c54d70:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_203c5491e:;
			{
				return -1LL;;
			}
		}
		_match_end_203c5408e:;
	};
}



inline jule::I32 _217e87de6_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_203c59c10:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_203c57801:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_203c59a67:;
			{
				_37434_r=65533LL;
				goto _case_begin_203c59acd;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_203c59acd:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;;
			}
		}
		else {
			_case_begin_203c574d2:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;;
			}
		}
		_match_end_203c57438:;
	};
}



inline jule::Slice<jule::U8> _217e88237_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _217e88578_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _217e88578_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_203c6081a:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_203c62520:;
			{
				_41242_r=128LL;
				goto _case_begin_203c60b5b;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_203c60b5b:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_203c60243:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_203c60188:;
	};
}



inline jule::I32 _217e88ab7_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_203c63bb4;
			};
			jule::U8 _48213_x = _217e85ca1_first[static_cast<jule::I32>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_203c63bb4;
			};
			jule::I32 _48717_size = static_cast<jule::I32>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_203c63bb4;
			};
			_217e86334_acceptRange _49213_accept = _217e86642_acceptRanges[static_cast<jule::I32>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_203c63bb4:;
	}
	_iter_end_203c63bb4:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _217e88d5e_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _21804019b_getLastOsErrorWindows(void) {
	jule::U32 _169_err = _217d83583_GetLastError();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_203c901c9:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_203c92099:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_203c92110:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_203c92176:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else {
			_case_begin_203c9054d:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		_match_end_203c904e8:;
	};
}



inline jule::Slice<jule::Str> _2180416b9_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _218041b3c_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _218042500_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _218042500_getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _217d838c4_GetCurrentDirectory(261LLU, (&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(jule::Any(_21804019b_getLastOsErrorWindows(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _217d552e1_U16PtrToStr((&(_1513_buff[0LL]))));;
}



inline jule::Bool _219264d3c_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_2192c9e18__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _2192d3251_isExcludingLatin(_21926e022_Letter, _7613_r);;
}



inline jule::Bool _2192d266d_is16(jule::Slice<_2192d0aab_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2043dd041:;
			if (it != expr_end) {
				jule::I32 _19313_i = it - expr->begin();
				{
					_2192d0aab_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_2043dd041:;
				++it;
				_19313_i++;
				goto _iter_begin_2043dd041;
			}
			_iter_end_2043dd041:;
		};
		return false;;
	};
	jule::I32 _20813_lo = 0LL;;
	jule::I32 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I32 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_2192d0aab_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I32>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_2043dcb12:;
	}
	_iter_end_2043dcb12:;;
	return false;;
}



inline jule::Bool _2192d29ae_is32(jule::Slice<_2192d102e_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2043e3ae6:;
			if (it != expr_end) {
				jule::I32 _23013_i = it - expr->begin();
				{
					_2192d102e_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_2043e3ae6:;
				++it;
				_23013_i++;
				goto _iter_begin_2043e3ae6;
			}
			_iter_end_2043e3ae6:;
		};
		return false;;
	};
	jule::I32 _24513_lo = 0LL;;
	jule::I32 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I32 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_2192d102e_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I32>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_2043e362e:;
	}
	_iter_end_2043e362e:;;
	return false;;
}



inline jule::Bool _2192d3251_isExcludingLatin(jule::Ptr<_2192d14a2_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_2192d0aab_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I32 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _2192d266d_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_2192d102e_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _2192d29ae_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _2192d34e8_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_2192c9e18__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _2192d3251_isExcludingLatin(_219275578_Upper, _29512_r);;
}



inline jule::I32 _219304c34_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204405c29:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_204405c29:;
			++it;
			_399_i++;
			goto _iter_begin_204405c29;
		}
		_iter_end_204405c29:;
	};
	return -1LL;;
}



inline jule::I32 _219317054_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _549_first = (&(_5017_s[0LL]));;
	jule::U8* _5513_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5513_it >= _549_first); (_5513_it)--) {
		{
			{
				if (((*(_5513_it)) == _5028_b)) {
					return static_cast<jule::I32>(((jule::I32)((_5513_it - _549_first))));;
				};
			};
		}
	_iter_next_204406d18:;
	}
	_iter_end_204406d18:;;
	return -1LL;;
}



inline jule::I32 _21931731d_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I32>(_219304c34_FindByte(_217da5011_Stobs(_6717_s), _6725_b));;
}



inline jule::I32 _21931765e_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I32>(_219317054_FindLastByte(_217da5011_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _219317a27_Repeat(jule::Str _1211_s, jule::I32 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(2147483647LL,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_20441b68a:;
	}
	_iter_end_20441b68a:;;
	return _2013_ss;;
}



inline jule::Bool _219317e56_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I32 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I32 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_3213_i + 1LL));
		jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_20441e23c:;
	}
	_iter_end_20441e23c:;;
	return true;;
}



inline jule::Bool _219318297_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _219317e56_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _219318709_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I32 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I32>(((*(_4615_s)).len() - _4638_start));
	jule::I32 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_204421074:;
	}
	_iter_end_204421074:;;
	return true;;
}



inline jule::Bool _219318a17_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _219318709_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I32 _219318e02_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I32 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_219317e56_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_2044241dc:;
	}
	_iter_end_2044241dc:;;
	return -1LL;;
}



inline jule::I32 _21931973d_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I32 _9333_i) {
	jule::I32 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I32 _10017_k = _9413_j;;
			jule::I32 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_10017_k + 1LL));
				jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_204426002;
					};
				}
			_iter_next_204427e5a:;
			}
			_iter_end_204427e5a:;;
			return _9413_j;;
		}
	_iter_next_204426002:;
	}
	_iter_end_204426002:;;
	return -1LL;;
}



inline jule::I32 _219319a7e_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I32>(_21931973d_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I32>((_11513_s.len() - 1LL))));;
}



inline jule::I32 _21931ad27_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I32 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I32 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e86dc3_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_204430292:;
	}
	_iter_end_204430292:;;
	return -1LL;;
}



inline jule::I32 _21931b663_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I32>(_21931765e_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I32 _21931c477_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _217da5011_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _217da5011_Stobs(&(_22820_runes));;
	jule::I32 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I32 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e86dc3_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21931ad27_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_20443583b:;
	}
	_iter_end_20443583b:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _21931cba3_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I32 _26232_n) {
	jule::I32 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I32>(_26210_s.len());
	};
	jule::I32 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I32 _27613_j = _219318e02_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_20443b8ca;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i, _27613_j)); };
			_27413_i=static_cast<jule::I32>((_27613_j + _26218_sub.len()));
		}
	_iter_next_20443b8ca:;
	}
	_iter_end_20443b8ca:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i)); };
	};
	return _26713_parts;;
}



inline jule::Bool _21931cee4_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_219318e02_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _21931d9b7_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_21931c477_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I32 _21931dd08_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _31613_n = 0LL;;
	jule::I32 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I32 _31913_j = _219318e02_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_204441a12;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I32>((_31913_j + _31218_sub.len()));
		}
	_iter_next_204441a12:;
	}
	_iter_end_204441a12:;;
	return _31613_n;;
}



inline jule::Str _21931e28c_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I32 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I32 _3379_m = _21931dd08_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I32 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I32 _34813_j = _219318e02_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_204445384;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I32>((_34813_j + _33220_sub.len()));
		}
	_iter_next_204445384:;
	}
	_iter_end_204445384:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _21931b300_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I32 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I32 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e86dc3_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21931ad27_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_2044496da:;
	}
	_iter_end_2044496da:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _219320348_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _217da5011_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _217da5011_Stobs(&(_40321_cutset));;
	_21931b300_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _219320601_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I32 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I32 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e87489_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21931ad27_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_20444b8eb:;
	}
	_iter_end_20444b8eb:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _219320c83_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _217da5011_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _217da5011_Stobs(&(_43417_cutset));;
	_21931b300_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_219320601_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Bool _21801b40d_IsPathSep(jule::U8 _4814_c) {
	return ((_4814_c == 92LLU) || (_4814_c == '/'));;
}



inline jule::Bool _21801b5c8_isSlash(jule::U8 _5212_c) {
	return ((_5212_c == '\\') || (_5212_c == '/'));;
}



inline jule::U8 _21801b870_toUpper(jule::U8 _5412_c) {
	if ((('a' <= _5412_c) && (_5412_c <= 'z'))) {
		return static_cast<jule::U8>((_5412_c - 32LL));;
	};
	return _5412_c;;
}



inline jule::I32 _21801be36_volumeNameLen(jule::Str _8218_path) {
	if ((_8218_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _879_c = _8218_path[0LL];;
	if (((_8218_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_21801b5c8_isSlash(_8218_path[0LL]))) || (!(_21801b5c8_isSlash(_8218_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21801c1cd_cutPath(_8218_path.slice(2LL));
		_9510_p1 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21801c1cd_cutPath(_9518_rest);
		_9613_p2 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
		_9713_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_9713_ok))) {
		return static_cast<jule::I32>(_8218_path.len());;
	};
	if (((!_9510_p1.equal(".", 1)) && (!_9510_p1.equal("?", 1)))) {
		return static_cast<jule::I32>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
	};
	if (((((_9613_p2.len() == 3LL) && (_21801b870_toUpper(_9613_p2[0LL]) == 'U')) && (_21801b870_toUpper(_9613_p2[1LL]) == 'N')) && (_21801b870_toUpper(_9613_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21801c1cd_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21801c1cd_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
			_9713_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_9713_ok))) {
			return static_cast<jule::I32>(_8218_path.len());;
		};
	};
	return static_cast<jule::I32>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _21801c1cd_cutPath(jule::Str _11912_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_11912_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204466d12:;
		if (it != expr_end) {
			jule::I32 _1209_i = it - expr->begin();
			{
				if (_21801b5c8_isSlash(_11912_path[_1209_i])) {
					__jule_func_result.__jule_result_arg0 = _11912_path.slice(0LL, _1209_i);
					__jule_func_result.__jule_result_arg1 = _11912_path.slice((_1209_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_204466d12:;
			++it;
			_1209_i++;
			goto _iter_begin_204466d12;
		}
		_iter_end_204466d12:;
	};
	__jule_func_result.__jule_result_arg0 = _11912_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _21801c475_fullPath(jule::Str _12813_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1299_utf16Name = _217d54c91_Utf16FromStr(_12813_name);;
	jule::U16* _1309_p = (&(_1299_utf16Name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_13113_n), static_cast<jule::I32>(_13113_n), 0);;
			_13113_n=static_cast<jule::U32>(_217d848d6_GetFullPathName(_1309_p, static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())), (&(_13317_buff[0LL])), nullptr));
			if ((_13113_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				__jule_func_result.__jule_result_arg0 = _217d55049_Utf16ToStr(_13317_buff.slice(0LL, static_cast<jule::I32>(_13113_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_204469034:;
	}
	_iter_end_204469034:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _21801c7e9_abs(jule::Str _14512_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_14512_path.empty()) {
		_14512_path=jule::Str(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21801c475_fullPath(_14512_path);
		_14512_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _21932279b_Clean(_14512_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _21801ca91_join(jule::Slice<jule::Str> _15913_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_lastChar = 0LLU;;
	{
		auto expr = &(_15913_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204472ceb:;
		if (it != expr_end) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_204473ca8:;
					}
					else if (_21801b5c8_isSlash(_16113_lastChar)) {
						_case_begin_204473a99:;
						{
							while (((_16217_e.len() > 0LL) && _21801b5c8_isSlash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_2044742b4:;
							}
							_iter_end_2044742b4:;;
						}
					}
					else if ((_16113_lastChar == ':')) {
						_case_begin_204473989:;
					}
					else {
						_case_begin_2044735d2:;
						{
							(_16013_s).append("\\", 1);
							_16113_lastChar='\\';
						}
					}
					_match_end_204473516:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_lastChar=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_204472ceb:;
			++it;
			goto _iter_begin_204472ceb;
		}
		_iter_end_204472ceb:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();;
	};
	return _21932279b_Clean(_16013_s);;
}



inline jule::Str _21932279b_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I32 _1109_volLen = _21801be36_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _21801b40d_IsPathSep(_1099_originalPath[0LL])) && _21801b40d_IsPathSep(_1099_originalPath[1LL]))) {
			return _219322d2e_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _21801b40d_IsPathSep(_10814_path[0LL]);;
	jule::I32 _1269_n = _10814_path.len();;
	_2193219dc_lazyBuff _12713_out = _2193219dc_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I32 _13214_r = 0;;
	jule::I32 _13221_dotdot = 0;;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_219322191_append(&_12713_out, 92LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_21801b40d_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_20447b71c:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _21801b40d_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_20447db81:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _21801b40d_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_20447dbe7:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_204481029:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_21801b40d_IsPathSep(static_cast<jule::U8>(_219321e1b_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_204481b0c:;
									}
									_iter_end_204481b0c:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_2044813c0:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_219322191_append(&_12713_out, 92LLU);
									};
									_219322191_append(&_12713_out, '.');
									_219322191_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_204481348:;
						};
					}
				}
				else {
					_case_begin_204479c59:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_219322191_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_volLen == 0LL)) && (_13214_r != 0LL))) {
							jule::I32 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_21801b40d_IsPathSep(_10814_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10814_path[_17525_i] == ':')) {
										_219322191_append(&_12713_out, '.');
										_219322191_append(&_12713_out, 92LLU);
										goto _iter_end_20447b871;
									};
								}
							_iter_next_20447b871:;
							}
							_iter_end_20447b871:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_21801b40d_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_219322191_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_20447ca2b:;
						}
						_iter_end_20447ca2b:;;
					}
				}
				_match_end_204479bd2:;
			};
		}
	_iter_next_204479dbe:;
	}
	_iter_end_204479dbe:;;
	if ((_12713_out._field_w == 0LL)) {
		_219322191_append(&_12713_out, '.');
	};
	return _219322d2e_FromSlash(_219322405_string(&_12713_out));;
}



inline jule::Str _219322d2e_FromSlash(jule::Str _21114_path) {
	;
	return _21931e28c_Replace(_21114_path, jule::Str("/", 1), jule::Str("\\", 1), -1LL);;
}



inline jule::Str _21932314d_Join(jule::Slice<jule::Str> _2259_elem) {
	return _21801ca91_join(_2259_elem);;
}



inline jule::Str _2193233e5_Ext(jule::Str _2308_path) {
	jule::I32 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_21801b40d_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_20448523c:;
	}
	_iter_end_20448523c:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _21932368c_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21801c7e9_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _219323934_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _21801b40d_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_20448734e:;
	}
	_iter_end_20448734e:;;
	(_25413_path).mut_slice(_219324050_VolumeName(_25413_path).len());;
	jule::I32 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_21801b40d_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_2044889d2:;
	}
	_iter_end_2044889d2:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return jule::Str("\\", 1);;
	};
	return _25413_path;;
}



inline jule::Str _219323ca8_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _219324050_VolumeName(_2858_path);;
	jule::I32 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_21801b40d_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_20448aa17:;
	}
	_iter_end_20448aa17:;;
	jule::Str _2919_dir = _21932279b_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if ((_2919_dir.equal(".", 1) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _219324050_VolumeName(jule::Str _30315_path) {
	return _219322d2e_FromSlash(_30315_path.slice(0LL, _21801be36_volumeNameLen(_30315_path)));;
}



inline jule::I32 _217d99346_getLastFsError(void) {
	jule::I32 _729_err = _216e8dd43_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_20449e751:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_20449dbd4:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_20449e146:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_20449e1ac:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_20449e223:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_20449e289:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_20449e872:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_20449e8d8:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_20449e94e:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_20449e9b5:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_20449ea3c:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_20449eab4:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_20449eb3b:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_20449ebb3:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_20449ec3a:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_20449ecb2:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_20449ed39:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_20449edb1:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_20449ee38:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_20449eeb0:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_2044a0037:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_2044a00ae:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_2044a0136:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_2044a01ad:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_2044a0235:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_2044a02ac:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_2044a0334:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_2044a03ab:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_20449de9d:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_20449de48:;
	};
}



inline jule::Bool _217e8aa97_isConsoleHandle(jule::Uintptr _11320_handle) {
	return (((_11320_handle == _217d820ed_STDIN) || (_11320_handle == _217d823b7_STDOUT)) || (_11320_handle == _217d8264d_STDERR));;
}



inline void _21ab6213e_appendEscapeArg(jule::Str* _10125_s, jule::Str _10133_arg) {
	if ((_10133_arg.len() == 0LL)) {
		((*(_10125_s))).append("\"\"", 2);
		return;;
	};
	jule::Bool _10713_needsBackslash = false;;
	jule::Bool _10813_hasSpace = false;;
	jule::I32 _10913_i = 0LL;;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			{
				auto &_match_expr{ _10133_arg[_10913_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_2044e1d26:;
					{
						_10713_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_2044e1d9d:;
					{
						_10813_hasSpace=true;
					}
				}
				_match_end_2044e1ad4:;
			};
		}
	_iter_next_2044e0264:;
	}
	_iter_end_2044e0264:;;
	if (((!(_10713_needsBackslash)) && (!(_10813_hasSpace)))) {
		(*(_10125_s))+=_10133_arg;
		return;;
	};
	if ((!(_10713_needsBackslash))) {
		((*(_10125_s))).append("\"", 1);
		(*(_10125_s))+=_10133_arg;
		((*(_10125_s))).append("\"", 1);
		return;;
	};
	if (_10813_hasSpace) {
		((*(_10125_s))).append("\"", 1);
	};
	jule::I32 _13513_slashes = 0LL;;
	_10913_i=0LL;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			jule::U8 _13813_c = _10133_arg[_10913_i];;
			{
				auto &_match_expr{ _13813_c };
				
				if (_match_expr == '\\') {
					_case_begin_2044e4345:;
					{
						(_13513_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_2044e47da:;
					{
						for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
							{
								((*(_10125_s))).append("\\", 1);
							}
						_iter_next_2044e5302:;
						}
						_iter_end_2044e5302:;;
						((*(_10125_s))).append("\\", 1);
					}
				}
				else {
					_case_begin_2044e4653:;
					{
						_13513_slashes=0LL;
					}
				}
				_match_end_2044e45ed:;
			};
			((*(_10125_s))).append(_13813_c);
		}
	_iter_next_2044e3ac5:;
	}
	_iter_end_2044e3ac5:;;
	if (_10813_hasSpace) {
		for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
			{
				((*(_10125_s))).append("\\", 1);
			}
		_iter_next_2044e4e7d:;
		}
		_iter_end_2044e4e7d:;;
		((*(_10125_s))).append("\"", 1);
	};
}



inline jule::Str _21ab623d6_makeCmdLine(jule::Slice<jule::Str> _16216_args) {
	jule::Str _16313_s = jule::Str();;
	{
		auto expr = &(_16216_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2044e64bd:;
		if (it != expr_end) {
			jule::Str *_16412_arg = it;
			{
				if ((_16313_s.len() > 0LL)) {
					(_16313_s).append(" ", 1);
				};
				_21ab6213e_appendEscapeArg(&(_16313_s), (*(_16412_arg)));
			}
			_iter_next_2044e64bd:;
			++it;
			goto _iter_begin_2044e64bd;
		}
		_iter_end_2044e64bd:;
	};
	return _16313_s;;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _21ab6278d_createEnvBlock(jule::Slice<jule::Str> _17819_env) {
	if ((_17819_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _217d544aa_Encode(jule::Slice<jule::I32>::make({0LL,0LL})));;
	};
	jule::I32 _18213_n = 0LL;;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2044e815c:;
		if (it != expr_end) {
			jule::Str *_18312_s = it;
			{
				if ((_21931731d_FindByteStr(_18312_s, 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
				};
				_18213_n+=((*(_18312_s)).len() + 1LL);
			}
			_iter_next_2044e815c:;
			++it;
			goto _iter_begin_2044e815c;
		}
		_iter_end_2044e815c:;
	};
	(_18213_n)++;
	jule::Slice<jule::U16> _19013_b = jule::Slice<jule::U16>::alloc(0LL, _18213_n, 0);;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2044e6479:;
		if (it != expr_end) {
			jule::Str *_19112_s = it;
			{
				{
					auto expr = static_cast<jule::Slice<jule::I32>>((*(_19112_s)));
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_2044ea060:;
					if (it != expr_end) {
						jule::I32 _19216_c = *it;
						{
							_19013_b=_217d54a60_AppendRune(_19013_b, _19216_c);
						}
						_iter_next_2044ea060:;
						++it;
						goto _iter_begin_2044ea060;
					}
					_iter_end_2044ea060:;
				};
				_19013_b=_217d54a60_AppendRune(_19013_b, 0LL);
			}
			_iter_next_2044e6479:;
			++it;
			goto _iter_begin_2044e6479;
		}
		_iter_end_2044e6479:;
	};
	_19013_b=_217d54a60_AppendRune(_19013_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _19013_b);;
}



inline jule::I32 _21ab6376c_processErrorFromCode(jule::I32 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_2044e836b:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_2044eab76:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_2044eaa66:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_2044ea9de:;
	};
}



inline jule::I32 _21ab6397b_getLastProcessError(void) {
	return _21ab6376c_processErrorFromCode(static_cast<jule::I32>(static_cast<jule::I32>(_217d83583_GetLastError())));;
}



inline void _21ab6422e_Exit(jule::I32 _129_code) {
	_217d89226_Exit(_129_code);
}



inline jule::Str _21ab6442c_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _219396ad9_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _219396d92_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_219326cbc_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204520184:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_204520184:;
			++it;
			goto _iter_begin_204520184;
		}
		_iter_end_204520184:;
	};
	return false;;
}



inline jule::Bool _219397139_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_219326dbb_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2045212b7:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_2045212b7:;
			++it;
			goto _iter_begin_2045212b7;
		}
		_iter_end_2045212b7:;
	};
	{
		auto expr = &(_219394ec2_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204521839:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_204521839:;
			++it;
			goto _iter_begin_204521839;
		}
		_iter_end_204521839:;
	};
	return false;;
}



inline jule::Str _2193a4a4d_Logf(jule::Str _3159_fmt, jule::Slice<jule::Any> _31522_args) {
	return _2193a5466_applyFmt(_3159_fmt, _31522_args);;
}



inline jule::Str _2193a4d39_argToStr(jule::Any _31913_arg) {
	{
		auto &_match_expr{ _31913_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_204522807:;
			{
				return _31913_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_204522e9a:;
			{
				return jule::Str::from_byte(_31913_arg.cast<jule::U8>(&__jule_any_type131));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_204523011:;
			{
				return jule::Str::from_rune(_31913_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_204522a7c:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_204522890:;
	};
}



inline jule::I32 _2193a50d1_findNextFmt(jule::Str _33216_fmt) {
	{
		auto expr = &(_33216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204523c6a:;
		if (it != expr_end) {
			jule::I32 _3339_i = it - expr->begin();
			jule::U8 *_33312_b = it;
			{
				if (((*(_33312_b)) == '@')) {
					return _3339_i;;
				};
			}
			_iter_next_204523c6a:;
			++it;
			_3339_i++;
			goto _iter_begin_204523c6a;
		}
		_iter_end_204523c6a:;
	};
	return -1LL;;
}



inline jule::Str _2193a5466_applyFmt(jule::Str _34117_fmt, jule::Slice<jule::Any> _34127_args) {
	jule::Str _34213_s = jule::Str();;
	{
		auto expr = &(_34127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204525211:;
		if (it != expr_end) {
			jule::Any *_34312_arg = it;
			{
				jule::I32 _34413_i = _2193a50d1_findNextFmt(_34117_fmt);;
				if ((_34413_i == -1LL)) {
					goto _iter_end_204525211;
				};
				_34213_s+=_34117_fmt.slice(0LL, _34413_i);
				_34213_s+=_2193a4d39_argToStr((*(_34312_arg)));
				(_34117_fmt).mut_slice((_34413_i + 1LL));;
			}
			_iter_next_204525211:;
			++it;
			goto _iter_begin_204525211;
		}
		_iter_end_204525211:;
	};
	_34213_s+=_34117_fmt;
	return _34213_s;;
}



inline jule::Bool _2193a64de_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _2193a791e_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _2193a7bc7_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _2193a7e6e_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _2193a828d_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _2193a8535_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _2193a87cc_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _2193a8a74_IsUnix(jule::Str _5511_os) {
	return (_2193a7bc7_IsDarwin(_5511_os) || _2193a7e6e_IsLinux(_5511_os));;
}



inline jule::Bool _2193a8de8_Is32Bit(jule::Str _5812_arch) {
	return _2193a828d_IsI386(_5812_arch);;
}



inline jule::Bool _2193a9190_Is64Bit(jule::Str _6112_arch) {
	return (_2193a8535_IsAmd64(_6112_arch) || _2193a87cc_IsArm64(_6112_arch));;
}



inline void _21ab656b4_init(void) {
	jule::Str _2513_path = _21ab6442c_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_21ab64be1_PathWd=({
			auto except = _218041b3c_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_21ab64938_PathExec=_219323ca8_Dir(_2513_path);
		_21ab64718_PathStdlib=_21932314d_Join(jule::Slice<jule::Str>::make({_21ab64938_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_21ab64eee_PathApi=_21932314d_Join(jule::Slice<jule::Str>::make({_21ab64938_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1ed695596_IsUnaryOp(jule::Str _29514_kind) {
	{
		auto expr = &(_1ed5e96e8_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20456422d:;
		if (it != expr_end) {
			jule::Str *_29612_op = it;
			{
				if ((_29514_kind == (*(_29612_op)))) {
					return true;;
				};
			}
			_iter_next_20456422d:;
			++it;
			goto _iter_begin_20456422d;
		}
		_iter_end_20456422d:;
	};
	return false;;
}



inline jule::Bool _1ed695882_IsBinOp(jule::Str _30512_kind) {
	{
		auto expr = &(_1ed5e99e5_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204564e32:;
		if (it != expr_end) {
			jule::Str *_30612_op = it;
			{
				if ((_30512_kind == (*(_30612_op)))) {
					return true;;
				};
			}
			_iter_next_204564e32:;
			++it;
			goto _iter_begin_204564e32;
		}
		_iter_end_204564e32:;
	};
	return false;;
}



inline jule::Bool _1ed695e48_IsStr(jule::Str _32510_k) {
	return ((!(_32510_k.empty())) && ((_32510_k[0LL] == '\"') || _1ed6961e0_IsRawStr(_32510_k)));;
}



inline jule::Bool _1ed6961e0_IsRawStr(jule::Str _32813_k) {
	return ((!(_32813_k.empty())) && (_32813_k[0LL] == '`'));;
}



inline jule::Bool _1ed696487_IsRune(jule::Str _33211_k) {
	return ((!(_33211_k.empty())) && (_33211_k[0LL] == '\''));;
}



inline jule::Bool _1ed696aa3_IsBool(jule::Str _33811_k) {
	return (_33811_k.equal("true", 4) || _33811_k.equal("false", 5));;
}



inline jule::Bool _1ed696d4a_IsFloat(jule::Str _34112_k) {
	if (_219318297_HasPrefix(_34112_k, jule::Str("0x", 2))) {
		return _21931d9b7_ContainsAny(_34112_k, jule::Str(".pP", 3));;
	};
	return _21931d9b7_ContainsAny(_34112_k, jule::Str(".eE", 3));;
}



inline jule::Bool _1ed6970e2_IsNum(jule::Str _34910_k) {
	if (_34910_k.empty()) {
		return false;;
	};
	jule::U8 _3549_b = _34910_k[0LL];;
	return ((_3549_b == '.') || (('0' <= _3549_b) && (_3549_b <= '9')));;
}



inline jule::Bool _1ed697631_IsIgnoreIdent(jule::Str _36418_ident) {
	return _36418_ident.equal("_", 1);;
}



inline jule::Bool _1ed6978c8_IsAnonIdent(jule::Str _36716_ident) {
	return _36716_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1ed697e17_IsSpace(jule::I32 _38012_r) {
	{
		auto expr = &(_1ed5e94c8_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20456c434:;
		if (it != expr_end) {
			jule::I32 *_38112_cr = it;
			{
				if ((_38012_r == (*(_38112_cr)))) {
					return true;;
				};
			}
			_iter_next_20456c434:;
			++it;
			goto _iter_begin_20456c434;
		}
		_iter_end_20456c434:;
	};
	return false;;
}



inline jule::Bool _1ed698368_IsLetter(jule::I32 _39013_r) {
	return _219264d3c_IsLetter(_39013_r);;
}



inline jule::Bool _1ed6988a7_IsDecimal(jule::U8 _41014_b) {
	return (('0' <= _41014_b) && (_41014_b <= '9'));;
}



inline jule::Bool _1ed698b4e_IsBinary(jule::U8 _41313_b) {
	return ((_41313_b == '0') || (_41313_b == '1'));;
}



inline jule::Bool _1ed698de6_IsOctal(jule::U8 _41612_b) {
	return (('0' <= _41612_b) && (_41612_b <= '7'));;
}



inline jule::Bool _1ed69918d_IsHex(jule::U8 _41910_b) {
	{
		
		if ((('0' <= _41910_b) && (_41910_b <= '9'))) {
			_case_begin_2045707ab:;
			{
				return true;;
			}
		}
		else if ((('a' <= _41910_b) && (_41910_b <= 'f'))) {
			_case_begin_204570822:;
			{
				return true;;
			}
		}
		else if ((('A' <= _41910_b) && (_41910_b <= 'F'))) {
			_case_begin_204570899:;
			{
				return true;;
			}
		}
		else {
			_case_begin_204570745:;
			{
				return false;;
			}
		}
		_match_end_2045704ae:;
	};
}



inline jule::Bool _1ed699435_IsAssign(jule::U32 _43413_id) {
	return (((((((_43413_id == static_cast<jule::U32>(1LLU)) || (_43413_id == static_cast<jule::U32>(29LLU))) || (_43413_id == static_cast<jule::U32>(32LLU))) || (_43413_id == static_cast<jule::U32>(19LLU))) || (_43413_id == static_cast<jule::U32>(26LLU))) || (_43413_id == static_cast<jule::U32>(2LLU))) || (_43413_id == static_cast<jule::U32>(6LLU)));;
}



inline jule::Bool _1ed6996cc_IsPostfixOp(jule::Str _44516_kind) {
	{
		auto expr = &(_1ed68ed21_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204571d51:;
		if (it != expr_end) {
			jule::Str *_44612_op = it;
			{
				if ((_44516_kind == (*(_44612_op)))) {
					return true;;
				};
			}
			_iter_next_204571d51:;
			++it;
			goto _iter_begin_204571d51;
		}
		_iter_end_204571d51:;
	};
	return false;;
}



inline jule::Bool _1ed699974_IsAssignOp(jule::Str _45515_kind) {
	if (_1ed6996cc_IsPostfixOp(_45515_kind)) {
		return true;;
	};
	{
		auto expr = &(_1ed69011d_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204573a34:;
		if (it != expr_end) {
			jule::Str *_45912_op = it;
			{
				if ((_45515_kind == (*(_45912_op)))) {
					return true;;
				};
			}
			_iter_next_204573a34:;
			++it;
			goto _iter_begin_204573a34;
		}
		_iter_end_204573a34:;
	};
	return false;;
}



inline jule::Ptr<_1ed69a227_File> _1ed69b4d1_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1ed69a227_File>(_1ed69a227_File{._field_Path=_5715_path, });;
}



inline _2193a460d_Log _1ed69cc74_makeErr(jule::I32 _9512_row, jule::I32 _9522_col, jule::Ptr<_1ed69a227_File>* _9533_f, jule::Str _9543_fmt, jule::Slice<jule::Any> _9556_args) {
	return _2193a460d_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_9512_row, ._field_Column=_9522_col, ._field_Path=(*(_9533_f)).get()._field_Path, ._field_Text=_2193a4a4d_Logf(_9543_fmt, _9556_args), };;
}



inline jule::Bool _1ed69d109_bytesHasPrefix(jule::Slice<jule::U8>* _10520_bytes, jule::Str _10535_prefix) {
	if (((*(_10520_bytes)).len() < _10535_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_10535_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20457d4de:;
		if (it != expr_end) {
			jule::I32 _1099_i = it - expr->begin();
			{
				if (((*(_10520_bytes))[_1099_i] != _10535_prefix[_1099_i])) {
					return false;;
				};
			}
			_iter_next_20457d4de:;
			++it;
			_1099_i++;
			goto _iter_begin_20457d4de;
		}
		_iter_end_20457d4de:;
	};
	return true;;
}



inline jule::Str _1ed69d44a_floatFmtE(jule::Slice<jule::U8>* _11715_txt, jule::I32 _11732_i) {
	jule::Str __jule_func_result;
	(_11732_i)++;
	if ((_11732_i >= (*(_11715_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _12313_b = (*(_11715_txt))[_11732_i];;
	if ((_12313_b == '_')) {
		return __jule_func_result;;
	};
	if (((_12313_b == '+') || (_12313_b == '-'))) {
		(_11732_i)++;
		if ((_11732_i >= (*(_11715_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_11715_txt))[_11732_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1379_first = _11732_i;;
	for (; (_11732_i < (*(_11715_txt)).len()); (_11732_i)++) {
		{
			_12313_b=(*(_11715_txt))[_11732_i];
			if (((_12313_b != '_') && (!(_1ed6988a7_IsDecimal(_12313_b))))) {
				goto _iter_end_2045816ac;
			};
		}
	_iter_next_2045816ac:;
	}
	_iter_end_2045816ac:;;
	if ((_11732_i == _1379_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_11715_txt)).slice(0LL, _11732_i));
	return __jule_func_result;;
}



inline jule::Str _1ed69d7d0_floatFmtP(jule::Slice<jule::U8>* _15115_txt, jule::I32 _15128_i) {
	return _1ed69d44a_floatFmtE(_15115_txt, _15128_i);;
}



inline jule::Str _1ed69db21_floatFmtDotnp(jule::Slice<jule::U8>* _15519_txt, jule::I32 _15536_i) {
	if (((*(_15519_txt))[_15536_i] != '.')) {
		return jule::Str();;
	};
	(_15536_i)++;
	_julec_label_loop:;
	for (; (_15536_i < (*(_15519_txt)).len()); (_15536_i)++) {
		{
			jule::U8 _16313_b = (*(_15519_txt))[_15536_i];;
			{
				
				if ((_16313_b == '_') || _1ed6988a7_IsDecimal(_16313_b)) {
					_case_begin_20458414e:;
					{
						goto _iter_next_204583093;
					}
				}
				else if (_1ed6a03c5_isFloatFmtP(_16313_b, _15536_i)) {
					_case_begin_2045841b5:;
					{
						return _1ed69d7d0_floatFmtP(_15519_txt, _15536_i);;
					}
				}
				else {
					_case_begin_2045840d8:;
					{
						goto _iter_end_204583093;
					}
				}
				_match_end_204584072:;
			};
		}
	_iter_next_204583093:;
	}
	_iter_end_204583093:;;
	return jule::Str();;
}



inline jule::Str _1ed69de62_floatFmtDotfp(jule::Slice<jule::U8>* _17619_txt, jule::I32 _17636_i) {
	_17636_i+=2LL;
	return _1ed69d44a_floatFmtE(_17619_txt, _17636_i);;
}



inline jule::Str _1ed69e2a3_floatFmtDotp(jule::Slice<jule::U8>* _18118_txt, jule::I32 _18135_i) {
	(_18135_i)++;
	return _1ed69d44a_floatFmtE(_18118_txt, _18135_i);;
}



inline jule::Str _1ed69e704_floatNum(jule::Slice<jule::U8>* _18614_txt, jule::I32 _18631_i) {
	jule::Str __jule_func_result;
	(_18631_i)++;
	if ((_18631_i >= (*(_18614_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_18614_txt)));
		return __jule_func_result;;
	};
	if (((*(_18614_txt))[_18631_i] == '_')) {
		(_18631_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_18614_txt)).slice(0LL, _18631_i));
		return __jule_func_result;;
	};
	for (; (_18631_i < (*(_18614_txt)).len()); (_18631_i)++) {
		{
			jule::U8 _19613_b = (*(_18614_txt))[_18631_i];;
			if (((_18631_i > 1LL) && ((_19613_b == 'e') || (_19613_b == 'E')))) {
				__jule_func_result = _1ed69d44a_floatFmtE(_18614_txt, _18631_i);
				return __jule_func_result;;
			};
			if (((_19613_b != '_') && (!(_1ed6988a7_IsDecimal(_19613_b))))) {
				goto _iter_end_204586a58;
			};
		}
	_iter_next_204586a58:;
	}
	_iter_end_204586a58:;;
	if ((_18631_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_18614_txt)).slice(0LL, _18631_i));
	return __jule_func_result;;
}



inline jule::Str _1ed69e99b_commonNum(jule::Slice<jule::U8>* _21115_txt) {
	jule::Str __jule_func_result;
	jule::I32 _21213_i = 0LL;;
	_julec_label_loop:;
	for (; (_21213_i < (*(_21115_txt)).len()); (_21213_i)++) {
		{
			jule::U8 _21513_b = (*(_21115_txt))[_21213_i];;
			{
				
				if ((_21513_b == '.')) {
					_case_begin_204589e13:;
					{
						__jule_func_result = _1ed69e704_floatNum(_21115_txt, _21213_i);
						return __jule_func_result;;
					}
				}
				else if ((_21513_b == '_')) {
					_case_begin_204589e8a:;
					{
						goto _iter_next_204589297;
					}
				}
				else if (_1ed6a0084_isFloatFmtE(_21513_b, _21213_i)) {
					_case_begin_20458a012:;
					{
						__jule_func_result = _1ed69d44a_floatFmtE(_21115_txt, _21213_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1ed6988a7_IsDecimal(_21513_b)))) {
					_case_begin_20458a089:;
					{
						goto _iter_end_204589297;
					}
				}
				_match_end_204589d36:;
			};
		}
	_iter_next_204589297:;
	}
	_iter_end_204589297:;;
	if ((_21213_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21115_txt)).slice(0LL, _21213_i));
	return __jule_func_result;;
}



inline jule::Str _1ed69ec43_binaryNum(jule::Slice<jule::U8>* _23415_txt) {
	jule::Str __jule_func_result;
	if ((!(_1ed69d109_bytesHasPrefix(_23415_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23415_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _24313_i = 2LL;;
	for (; (_24313_i < (*(_23415_txt)).len()); (_24313_i)++) {
		{
			if ((((*(_23415_txt))[_24313_i] != '_') && (!(_1ed698b4e_IsBinary((*(_23415_txt))[_24313_i]))))) {
				goto _iter_end_204589550;
			};
		}
	_iter_next_204589550:;
	}
	_iter_end_204589550:;;
	if ((_24313_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23415_txt)).slice(0LL, _24313_i));
	return __jule_func_result;;
}



inline jule::Bool _1ed6a0084_isFloatFmtE(jule::U8 _25616_b, jule::I32 _25625_i) {
	return ((_25625_i > 0LL) && ((_25616_b == 'e') || (_25616_b == 'E')));;
}



inline jule::Bool _1ed6a03c5_isFloatFmtP(jule::U8 _26016_b, jule::I32 _26025_i) {
	return ((_26025_i > 0LL) && ((_26016_b == 'p') || (_26016_b == 'P')));;
}



inline jule::Bool _1ed6a0716_isFloatFmtDotnp(jule::Slice<jule::U8>* _26421_txt, jule::I32 _26438_i) {
	if (((*(_26421_txt))[_26438_i] != '.')) {
		return false;;
	};
	(_26438_i)++;
	_julec_label_loop:;
	for (; (_26438_i < (*(_26421_txt)).len()); (_26438_i)++) {
		{
			jule::U8 _27113_b = (*(_26421_txt))[_26438_i];;
			{
				
				if ((_27113_b == '_') || _1ed6988a7_IsDecimal(_27113_b)) {
					_case_begin_2045917bb:;
					{
						goto _iter_next_204590644;
					}
				}
				else if (_1ed6a03c5_isFloatFmtP(_27113_b, _26438_i)) {
					_case_begin_204591832:;
					{
						return true;;
					}
				}
				else {
					_case_begin_204591755:;
					{
						goto _iter_end_204590644;
					}
				}
				_match_end_2045916de:;
			};
		}
	_iter_next_204590644:;
	}
	_iter_end_204590644:;;
	return false;;
}



inline jule::Bool _1ed6a0a57_isFloatFmtDotp(jule::Slice<jule::U8>* _28520_txt, jule::I32 _28533_i) {
	{
		
		if (((*(_28520_txt)).len() < 3LL)) {
			_case_begin_204592a53:;
			{
				goto _case_begin_204592aca;
			}
		}
		else if (((*(_28520_txt))[_28533_i] != '.')) {
			_case_begin_204592aca:;
			{
				goto _case_begin_204592b52;
			}
		}
		else if ((((*(_28520_txt))[(_28533_i + 1LL)] != 'p') && ((*(_28520_txt))[(_28533_i + 1LL)] != 'P'))) {
			_case_begin_204592b52:;
			{
				return false;;
			}
		}
		else {
			_case_begin_2045929dc:;
			{
				return true;;
			}
		}
		_match_end_204592921:;
	};
}



inline jule::Bool _1ed6a0d98_isFloatFmtDotfp(jule::Slice<jule::U8>* _29821_txt, jule::I32 _29834_i) {
	{
		
		if (((*(_29821_txt)).len() < 4LL)) {
			_case_begin_20459479c:;
			{
				goto _case_begin_204594824;
			}
		}
		else if (((*(_29821_txt))[_29834_i] != '.')) {
			_case_begin_204594824:;
			{
				goto _case_begin_20459489b;
			}
		}
		else if ((((*(_29821_txt))[(_29834_i + 1LL)] != 'f') && ((*(_29821_txt))[(_29834_i + 1LL)] != 'F'))) {
			_case_begin_20459489b:;
			{
				goto _case_begin_204594923;
			}
		}
		else if ((((*(_29821_txt))[(_29834_i + 2LL)] != 'p') && ((*(_29821_txt))[(_29834_i + 1LL)] != 'P'))) {
			_case_begin_204594923:;
			{
				return false;;
			}
		}
		else {
			_case_begin_2045943d4:;
			{
				return true;;
			}
		}
		_match_end_204594318:;
	};
}



inline jule::Str _1ed6a12e9_octalNum(jule::Slice<jule::U8>* _31314_txt) {
	jule::Str __jule_func_result;
	if (((*(_31314_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31314_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _32113_octalStart = 1LL;;
	jule::Bool _32313_o = false;;
	if (((*(_31314_txt))[1LL] == 'o')) {
		if (((*(_31314_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_32113_octalStart)++;
		_32313_o=true;
	};
	jule::I32 _33213_i = _32113_octalStart;;
	for (; (_33213_i < (*(_31314_txt)).len()); (_33213_i)++) {
		{
			jule::U8 _33413_b = (*(_31314_txt))[_33213_i];;
			if ((_33413_b == '.')) {
				if (_32313_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1ed69e704_floatNum(_31314_txt, _33213_i);
				return __jule_func_result;;
			};
			if (_1ed6a0084_isFloatFmtE(_33413_b, _33213_i)) {
				__jule_func_result = _1ed69d44a_floatFmtE(_31314_txt, _33213_i);
				return __jule_func_result;;
			};
			if (((_33413_b != '_') && (!(_1ed698de6_IsOctal(_33413_b))))) {
				goto _iter_end_204599098;
			};
		}
	_iter_next_204599098:;
	}
	_iter_end_204599098:;;
	if ((_33213_i == _32113_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31314_txt)).slice(0LL, _33213_i));
	return __jule_func_result;;
}



inline jule::Str _1ed6a1591_hexNum(jule::Slice<jule::U8>* _35512_txt) {
	jule::Str __jule_func_result;
	if (((*(_35512_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_35512_txt))[0LL] != '0') || (((*(_35512_txt))[1LL] != 'x') && ((*(_35512_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _36413_i = 2LL;;
	_julec_label_loop:;
	for (; (_36413_i < (*(_35512_txt)).len()); (_36413_i)++) {
		{
			jule::U8 _36713_b = (*(_35512_txt))[_36413_i];;
			{
				
				if (_1ed6a0a57_isFloatFmtDotp(_35512_txt, _36413_i)) {
					_case_begin_20459d5db:;
					{
						__jule_func_result = _1ed69e2a3_floatFmtDotp(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (_1ed6a0d98_isFloatFmtDotfp(_35512_txt, _36413_i)) {
					_case_begin_20459d663:;
					{
						__jule_func_result = _1ed69de62_floatFmtDotfp(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (_1ed6a03c5_isFloatFmtP(_36713_b, _36413_i)) {
					_case_begin_20459d6da:;
					{
						__jule_func_result = _1ed69d7d0_floatFmtP(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (_1ed6a0716_isFloatFmtDotnp(_35512_txt, _36413_i)) {
					_case_begin_20459d762:;
					{
						__jule_func_result = _1ed69db21_floatFmtDotnp(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (((_36713_b != '_') && (!(_1ed69918d_IsHex(_36713_b))))) {
					_case_begin_20459d7d9:;
					{
						goto _iter_end_20459ca5d;
					}
				}
				_match_end_20459d4ed:;
			};
		}
	_iter_next_20459ca5d:;
	}
	_iter_end_20459ca5d:;;
	if ((_36413_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_35512_txt)).slice(0LL, _36413_i));
	return __jule_func_result;;
}



inline jule::Str _1ed6a18d2_hexEscape(jule::Slice<jule::U8>* _38815_txt, jule::I32 _38828_n) {
	jule::Str __jule_func_result;
	if (((*(_38815_txt)).len() < _38828_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _39413_i = 2LL;;
	for (; (_39413_i < _38828_n); (_39413_i)++) {
		{
			if ((!(_1ed69918d_IsHex((*(_38815_txt))[_39413_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_2045a0c92:;
	}
	_iter_end_2045a0c92:;;
	__jule_func_result=static_cast<jule::Str>((*(_38815_txt)).slice(0LL, _38828_n));
	return __jule_func_result;;
}



inline jule::Str _1ed6a1b79_bigUnicodePointEscape(jule::Slice<jule::U8>* _40627_txt) {
	return _1ed6a18d2_hexEscape(_40627_txt, 10LL);;
}



inline jule::Str _1ed6a1e43_littleUnicodePointEscape(jule::Slice<jule::U8>* _41130_txt) {
	return _1ed6a18d2_hexEscape(_41130_txt, 6LL);;
}



inline jule::Str _1ed6a20ec_hexByteEscape(jule::Slice<jule::U8>* _41619_txt) {
	return _1ed6a18d2_hexEscape(_41619_txt, 4LL);;
}



inline jule::Str _1ed6a2383_byteEscape(jule::Slice<jule::U8>* _42116_txt) {
	jule::Str __jule_func_result;
	if (((*(_42116_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1ed698de6_IsOctal((*(_42116_txt))[1LL]))) || (!(_1ed698de6_IsOctal((*(_42116_txt))[2LL])))) || (!(_1ed698de6_IsOctal((*(_42116_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42116_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_2193a460d_Log> _1ed6a6d7c_Lex(jule::Ptr<_1ed69a227_File> _81012_f, jule::I32 _81022_mode) {
	if ((_81012_f == nullptr)) {
		return nullptr;;
	};
	_1ed6a2a6a_lex _81513_lex = _1ed6a2a6a_lex{._field_mode=_81022_mode, ._field_file=_81012_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1ed6a55b7_newLine(&_81513_lex);
	_1ed6a35b5_lex(&_81513_lex);
	if ((_81513_lex._field_errors.len() > 0LL)) {
		return _81513_lex._field_errors;;
	};
	_81012_f.get()._field_Tokens=_81513_lex._field_tokens;
	return nullptr;;
}



inline jule::I32 _1ee2c215b_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I32>((64LL - _1ee2c95d6_Len64(_6119_x)));;
}



inline jule::I32 _1ee2c3091_TrailingZeros(jule::U32 _8318_x) {
	;
	return static_cast<jule::I32>(_1ee2c3c2e_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I32 _1ee2c3987_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_1ee2c2766__DE_BRUIJN32_TAB[static_cast<jule::I32>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I32 _1ee2c3c2e_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_1ee2c2d2c__DE_BRUIJN64_TAB[static_cast<jule::I32>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I32 _1ee2c933e_Len32(jule::U32 _35214_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I32 _1ee2c95d6_Len64(jule::U64 _36614_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1ee2ca296_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1ee2cb929_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1ee1ec63b_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1ee1ec927_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1ee1ecbbe_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1ee1ecedd_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1ee2004c9_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_2046bd5c9:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1ee2d42a0_IsInf(_4714_f, 0LL) || _1ee2d3bea_IsNaN(_4714_f)) {
			_case_begin_2046bd651:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_2046bd4b9:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ee2d4547_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _1ee1ecbbe_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1ee1ecedd_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1ee2d390e_NaN(void) {
	return static_cast<jule::F64>(_1ee1ecedd_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1ee2d3bea_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1ee2d3e92_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1ee1ecedd_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1ee1ecedd_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1ee2d42a0_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1ee2d4547_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1ee2d67be_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1ee2d5e2d_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1ee2d3bea_IsNaN(_1118_x) || _1ee2d42a0_IsInf(_1118_x, 1LL)) {
			_case_begin_20470aeda:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_20470b062:;
			{
				return static_cast<jule::F64>(_1ee2d390e_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_20470b0d9:;
			{
				return static_cast<jule::F64>(_1ee2d3e92_Inf(-1LL));;
			}
		}
		_match_end_20470ae1e:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I32 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ee2004c9_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1ee2d67be_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1ee1ecedd_F64FromBits(static_cast<jule::U64>((_1ee1ecbbe_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1ee2dd210_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1ee2d67be_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_20477521e:;
		}
		_iter_end_20477521e:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1ee2dd9c4_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I32 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ee2004c9_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1ee2d5e2d_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _1ee317338_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I32 _7832_prec, jule::I32 _7843_bit_size) {
	return static_cast<jule::Str>(_1ee3178aa_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1ee31a946_max(static_cast<jule::I32>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1ee3178aa_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I32 _8258_prec, jule::I32 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1ee316359_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_204967cb3:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1ee1ec63b_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1ee316359_floatInfo>)((&(_1ee31658a_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_204967d29:;
			{
				_8313_bits=static_cast<jule::U64>(_1ee1ecbbe_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1ee316359_floatInfo>)((&(_1ee316898_f64info))));
			}
		}
		else {
			_case_begin_2049676ca:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_204965be5:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I32 _9713_exp = (static_cast<jule::I32>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I32>(static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_20496b0c4:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_20496d060:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_20496d2e6:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_20496c339:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_20496c26d:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_20496b657:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_204967a0a:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_20496b06e:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1ee319b43_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1ee31a2b4_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_1ee316ce9_decimalSlice _13213_digs = _1ee316ce9_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1ee325104_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_204971706:;
				{
					_8258_prec=static_cast<jule::I32>(_1ee31a946_max(static_cast<jule::I32>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_20497176c:;
				{
					_8258_prec=static_cast<jule::I32>(_1ee31a946_max(static_cast<jule::I32>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_2049717e4:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_204970925:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I32 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_204971c45:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_20497362b:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_20497351b:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_2049734b6:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1ee323e5a_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1ee32439a_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1ee31802b_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _1ee31867a_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1ee31802b_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I32 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I32 _18316_exp, _1ee316359_floatInfo* _18327_flt) {
	_1ee328aec_decimal _18413_d = _1ee328aec_decimal{};;
	_1ee328e82_assign(&_18413_d, _1835_mant);
	_1ee329207_shift(&_18413_d, static_cast<jule::I32>((_18316_exp - static_cast<jule::I32>((*(_18327_flt))._field_mantbits))));
	_1ee316ce9_decimalSlice _18713_digs = _1ee316ce9_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1ee318a76_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_1ee316ce9_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_20497a18d:;
				{
					_18233_prec=static_cast<jule::I32>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_204977ce5:;
				{
					_18233_prec=static_cast<jule::I32>(_1ee31a946_max(static_cast<jule::I32>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_20497a215:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_204979c4d:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_204979368:;
				{
					_1ee329977_round(&_18413_d, static_cast<jule::I32>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_2049793e0:;
				{
					_1ee329977_round(&_18413_d, static_cast<jule::I32>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_204979467:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1ee329977_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_20497b9db:;
		};
		_18713_digs=_1ee316ce9_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1ee31867a_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1ee31867a_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1ee316ce9_decimalSlice _2205_digs, jule::I32 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_20497e8bd:;
			{
				return _1ee3190a4_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_20497e934:;
			{
				return _1ee319538_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_20497e99a:;
			{
				jule::I32 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I32 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1ee3190a4_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1ee319538_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>(_1ee31a946_max(static_cast<jule::I32>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_20497e77a:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1ee318a76_roundShortest(_1ee328aec_decimal* _25723_d, jule::U64 _25735_mant, jule::I32 _25746_exp, _1ee316359_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1ee328aec_decimal _28713_upper = _1ee328aec_decimal{};;
	_1ee328e82_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1ee329207_shift(&_28713_upper, static_cast<jule::I32>(((_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I32 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I32>((_25746_exp - 1LL));
	};
	_1ee328aec_decimal _30613_lower = _1ee328aec_decimal{};;
	_1ee328e82_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1ee329207_shift(&_30613_lower, static_cast<jule::I32>(((_29813_explo - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I32 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I32 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_20498b446;
			};
			jule::I32 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_204990ec8:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_204991050:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_2049910c7:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_204990e1d:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_20499397b:;
					{
						_1ee329977_round(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_2049939e2:;
					{
						_1ee32947c_roundDown(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_204993a58:;
					{
						_1ee329702_roundUp(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_2049902b3:;
			};
		}
	_iter_next_20498b446:;
	}
	_iter_end_20498b446:;;
}



inline jule::Slice<jule::U8> _1ee3190a4_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1ee316ce9_decimalSlice _39637_d, jule::I32 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	if ((_39654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('.'); };
		jule::I32 _41217_i = 1LL;;
		jule::I32 _41313_m = _1ee31a605_min(_39637_d._field_nd, static_cast<jule::I32>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			(_39613_dst).append(_39637_d._field_d.slice(_41217_i, _41313_m));;
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_2049987c7:;
		}
		_iter_end_2049987c7:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_39665_fmt); };
	jule::I32 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I32>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_20499a587:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0'))); };
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_20499a400:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_20499a1be:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_204999850:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1ee319538_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1ee316ce9_decimalSlice _45137_d, jule::I32 _45154_prec) {
	if (_45126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('-'); };
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I32 _45917_m = _1ee31a605_min(_45137_d._field_nd, _45137_d._field_dp);;
		(_45113_dst).append(_45137_d._field_d.slice(0LL, _45917_m));;
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_20499e1b2:;
		}
		_iter_end_20499e1b2:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
	};
	if ((_45154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('.'); };
		jule::I32 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push(_47221_ch); };
			}
		_iter_next_2049a0207:;
		}
		_iter_end_2049a0207:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1ee319b43_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I32 _48452_exp, _1ee316359_floatInfo* _48463_flt) {
	if (_48426_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ee32d904_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('p'); };
	_48452_exp-=static_cast<jule::I32>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ee32d904_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1ee31a2b4_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I32 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I32 _50724_exp, _1ee316359_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_2049a5b25:;
	}
	_iter_end_2049a5b25:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U32 _52113_shift = static_cast<jule::U32>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_50637_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))); };
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		while ((_5079_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_2049ab08c:;
		}
		_iter_end_2049ab08c:;;
	} else if ((_50626_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		jule::I32 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_2049ac236:;
		}
		_iter_end_2049ac236:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1ee31b46e_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I32>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_2049ae9b9:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_2049a9860:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_2049ae623:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_2049addc5:;
	};
	return _50613_dst;;
}



inline jule::I32 _1ee31a605_min(jule::I32 _5918_a, jule::I32 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I32 _1ee31a946_max(jule::I32 _5988_a, jule::I32 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1ee31b46e_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1edc20208_ConvError _1ee31b89d_parseUint(jule::Str _5118_s, jule::I32 _5130_base, jule::I32 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__1edc20208_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_2049b5c12:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_2049b5b02:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1ee31b46e_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_2049b7708:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1ee31b46e_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_2049b751b:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1ee31b46e_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_2049b7593:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_2049b7164:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_2049b7098:;
					};
				};
			}
		}
		else {
			_case_begin_2049b50c9:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_2049b543c:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_2049bb399:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_2049bac28:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_2049bae6a:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_2049bae15:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_2049bb07a:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_2049bc378:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_2049bc323:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = &(_5118_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2049bd225:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_2049bc697:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1ee31b46e_lower(_10912_c)) && (_1ee31b46e_lower(_10912_c) <= 'z'))) {
						_case_begin_2049be435:;
						{
							_11017_d=static_cast<jule::U8>(((_1ee31b46e_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_2049be05b:;
						{
							goto _iter_next_2049bd225;
						}
					}
					else {
						_case_begin_2049bdee5:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_2049bde7e:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_2049bd225:;
			++it;
			goto _iter_begin_2049bd225;
		}
		_iter_end_2049bd225:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1ee31bc88_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I32 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1edc20208_ConvError __jule_assign_result = _1ee31b89d_parseUint(_14618_s, _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1ee31c1ea_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I32 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1edc20208_ConvError __jule_assign_result = _1ee31b89d_parseUint(_17217_s, _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I32>(0LL)) && (_18718_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U32>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1ee31cd11_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1ee1ecedd_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _579_clz = _1ee2c215b_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U32>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee2cb929_Mul64(_4122_man, _1ee31db7a_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee2cb929_Mul64(_4122_man, _1ee31db7a_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ee1ecedd_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1ee31d20c_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1ee1ec927_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1329_clz = _1ee2c215b_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U32>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee2cb929_Mul64(_11022_man, _1ee31db7a_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee2cb929_Mul64(_11022_man, _1ee31db7a_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1ee1ec927_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _1ee31ee23_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I32 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I32>(_4530_s.len());
	};
	jule::I32 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_2049e2876:;
	}
	_iter_end_2049e2876:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1ee320220_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _7213_sign = 1LL;;
	jule::I32 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_2049e6050:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_2049e60c7;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_2049e60c7:;
			{
				jule::I32 _8317_caseN = _1ee31ee23_commonPrefixLenIgnoreCase(_6816_s, jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ee2d3e92_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_2049e614e:;
			{
				if ((_1ee31ee23_commonPrefixLenIgnoreCase(_6816_s, jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ee2d390e_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_2049e5e84:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1ee3204b7_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_204a00b3c:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_204a00dc3:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_204a00d07:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I32 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_1ee31b46e_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I32 _12913_nd = 0LL;;
	jule::I32 _13013_ndMant = 0LL;;
	jule::I32 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_204a05db7:;
					{
						goto _iter_next_204a0545a;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_204a05e3e:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_204a0545a;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_204a05eb6:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_204a0545a;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_204a0545a;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1ee31b46e_lower(_13313_c))) && (_1ee31b46e_lower(_13313_c) <= 'f'))) {
					_case_begin_204a0603d:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1ee31b46e_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_204a0545a;
					}
				}
				_match_end_204a05cda:;
			};
			goto _iter_end_204a0545a;
		}
	_iter_next_204a0545a:;
	}
	_iter_end_204a0545a:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_1ee31b46e_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_204a0d81a;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I32>((((_20617_e * 10LL) + static_cast<jule::I32>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_204a0d81a:;
		}
		_iter_end_204a0d81a:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I32>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1ee321e47_atof64exact(jule::U64 _48116_mantissa, jule::I32 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _1ee316898_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_204a1713c:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_204a171b4:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1ee321364_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1ee321364_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_204a1723b:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1ee321364_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_204a169ee:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1ee322332_atof32exact(jule::U64 _51516_mantissa, jule::I32 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _1ee31658a_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_204a1b482:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_204a1b509:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1ee3216a5_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1ee3216a5_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_204a1b581:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1ee3216a5_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_204a1ad44:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1edc20208_ConvError _1ee322909_atofHex(jule::Str _55112_s, _1ee316359_floatInfo* _55121_flt, jule::U64 _55141_mantissa, jule::I32 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__1edc20208_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5529_maxExp = ((static_cast<jule::I32>((1LL << (*(_55121_flt))._field_expbits)) + (*(_55121_flt))._field_bias) - 2LL);;
	jule::I32 _5539_minExp = ((*(_55121_flt))._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I32>((*(_55121_flt))._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> ((*(_55121_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_204a2093c:;
	}
	_iter_end_204a2093c:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + (*(_55121_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_204a22631:;
	}
	_iter_end_204a22631:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_204a22d18:;
	}
	_iter_end_204a22d18:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + (*(_55121_flt))._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> (*(_55121_flt))._field_mantbits) == 0LLU)) {
		_55160_exp=(*(_55121_flt))._field_bias;
	};
	jule::I32 _59813_err = static_cast<jule::I32>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55121_flt))._field_mantbits)));
		_55160_exp=static_cast<jule::I32>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << (*(_55121_flt))._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - (*(_55121_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_55121_flt))._field_expbits) - 1LL)))) << (*(_55121_flt))._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << (*(_55121_flt))._field_mantbits) << (*(_55121_flt))._field_expbits);
	};
	if (((*(_55121_flt)) == _1ee31658a_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1ee1ec927_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ee1ecedd_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1edc20208_ConvError _1ee322cb1_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1edc20208_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I32 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ee320220_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I32 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I32 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ee3204b7_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1edc20208_ConvError __jule_assign_result = _1ee322909_atofHex(_61611_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1ee31658a_f32info), _62410_mantissa, _62420_exp, _62425_neg, _62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ee322332_atof32exact(_62410_mantissa, _62420_exp, _62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ee31d20c_eiselLemire32(_62410_mantissa, _62420_exp, _62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ee31d20c_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)), _62420_exp, _62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1ee328aec_decimal _66213_d = _1ee328aec_decimal{};;
	if ((!(_1ee320b27_set(&_66213_d, _61611_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ee320e35_floatBits(&_66213_d, &(_1ee31658a_f32info));
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1ee1ec927_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1edc20208_ConvError _1ee323058_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1edc20208_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I32 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ee320220_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I32 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I32 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ee3204b7_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__1edc20208_ConvError __jule_assign_result = _1ee322909_atofHex(_67411_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1ee316898_f64info), _68210_mantissa, _68220_exp, _68225_neg, _68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ee321e47_atof64exact(_68210_mantissa, _68220_exp, _68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ee31cd11_eiselLemire64(_68210_mantissa, _68220_exp, _68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ee31cd11_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)), _68220_exp, _68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1ee328aec_decimal _71913_d = _1ee328aec_decimal{};;
	if ((!(_1ee320b27_set(&_71913_d, _67411_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ee320e35_floatBits(&_71913_d, &(_1ee316898_f64info));
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1ee1ecedd_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1edc20208_ConvError _1ee323399_parseFloatPrefix(jule::Str _73121_s, jule::I32 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1edc20208_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I32 _73317_n = 0;;
		jule::I32 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1edc20208_ConvError __jule_assign_result = _1ee322cb1_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I32 _73713_n = 0;;
	jule::I32 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1edc20208_ConvError __jule_assign_result = _1ee323058_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1ee3236da_ParseFloat(jule::Str _76515_s, jule::I32 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I32 _76613_n = 0;;
	jule::I32 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1edc20208_ConvError __jule_assign_result = _1ee323399_parseFloatPrefix(_76515_s, _76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I32>(0LL)) || (_76616_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
	};
	if ((_76616_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _1ee323e5a_ryuFtoaFixed32(_1ee316ce9_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _6213_e2 = _4956_exp;;
	jule::I32 _639_b = _1ee2c933e_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U32>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I32>(_639_b) - 25LL);
	};
	jule::I32 _749_q = (((-(_1ee32539b_mulByLog2Log10(static_cast<jule::I32>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I32 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ee326a95_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1ee3272c1_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I32>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U32 _949_extra = static_cast<jule::U32>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1ee324b81_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _1ee32439a_ryuFtoaFixed64(_1ee316ce9_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _13113_e2 = _12156_exp;;
	jule::I32 _1329_b = _1ee2c95d6_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U32>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I32>(_1329_b) - 55LL);
	};
	jule::I32 _1469_q = (((-(_1ee32539b_mulByLog2Log10(static_cast<jule::I32>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I32 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ee326e80_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1ee3272c1_divisibleByPow5(_12145_mant, static_cast<jule::I32>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U32 _1669_extra = static_cast<jule::U32>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1ee324b81_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _1ee324b81_formatDecimal(_1ee316ce9_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2019_max = _1ee3246ca_u64pow10[_20088_prec];;
	jule::I32 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_204a56632:;
	}
	_iter_end_204a56632:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U32 _22913_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I32>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_204a598ee:;
	}
	_iter_end_204a598ee:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_204a601b8:;
	}
	_iter_end_204a601b8:;;
	(*(_20023_d))._field_dp=static_cast<jule::I32>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _1ee325104_ryuFtoaShortest(_1ee316ce9_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1ee316359_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1ee2c3c2e_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U32>((-(_26157_exp)));
		_1ee3260c2_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I32 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1ee325a2d_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1ee3260c2_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I32 _2799_q = (_1ee32539b_mulByLog2Log10(static_cast<jule::I32>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _1ee31658a_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ee326a95_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ee326a95_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ee326a95_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ee326e80_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ee326e80_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ee326e80_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1ee3272c1_divisibleByPow5(_27310_ml, static_cast<jule::I32>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1ee3272c1_divisibleByPow5(_27314_mc, static_cast<jule::I32>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1ee3272c1_divisibleByPow5(_27318_mu, static_cast<jule::I32>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U32 _3259_extra = static_cast<jule::U32>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1ee3260c2_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I32 _1ee32539b_mulByLog2Log10(jule::I32 _37719_x) {
	return static_cast<jule::I32>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I32 _1ee325643_mulByLog10Log2(jule::I32 _38719_x) {
	return static_cast<jule::I32>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1ee325a2d_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1ee316359_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1ee3260c2_ryuDigits(_1ee316ce9_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ee327568_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ee327568_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ee327568_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1ee3266aa_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1ee3266aa_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _42817_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_204a7d00a:;
		}
		_iter_end_204a7d00a:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I32>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>((9LL - _42817_n)));
		_1ee3266aa_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I32>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_204a7d4a0:;
	}
	_iter_end_204a7d4a0:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_204a7ae92:;
	}
	_iter_end_204a7ae92:;;
}



inline void _1ee3266aa_ryuDigits32(_1ee316ce9_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I32>((_45554_endindex + 1LL));
		return;;
	};
	jule::I32 _46013_trimmed = 0LL;;
	jule::I32 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_204a83285;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I32>(static_cast<jule::I32>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_204a83285:;
	}
	_iter_end_204a83285:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I32 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_204a89522:;
	}
	_iter_end_204a89522:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I32>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I32>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1ee326a95_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1ee31db7a_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee2cb929_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1ee325643_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1ee326e80_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1ee31db7a_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1ee325643_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee2cb929_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee2cb929_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ee2ca296_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ee3272c1_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_204a976d9:;
	}
	_iter_end_204a976d9:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1ee327568_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1ee32a2d5_trim(_1ee328aec_decimal* _45314_a) {
	while ((((*(_45314_a))._field_nd > 0LL) && ((*(_45314_a))._field_d[((*(_45314_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_45314_a))._field_nd)--;
		}
	_iter_next_204a9ac09:;
	}
	_iter_end_204a9ac09:;;
	if (((*(_45314_a))._field_nd == 0LL)) {
		(*(_45314_a))._field_dp=0LL;
	};
}



inline void _1ee32a58d_rightShift(_1ee328aec_decimal* _46320_a, jule::U32 _46332_k) {
	jule::I32 _46413_r = 0LL;;
	jule::I32 _46513_w = 0LL;;
	jule::U32 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= (*(_46320_a))._field_nd)) {
				if ((_46813_n == 0LLU)) {
					(*(_46320_a))._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U32>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_204a9e46b:;
				}
				_iter_end_204a9e46b:;;
				goto _iter_end_204a9c942;
			};
			jule::U32 _48213_c = static_cast<jule::U32>((*(_46320_a))._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U32>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_204a9c942:;
	}
	_iter_end_204a9c942:;;
	(*(_46320_a))._field_dp-=(_46413_r - 1LL);
	jule::U32 _4879_mask = static_cast<jule::U32>((static_cast<jule::U32>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < (*(_46320_a))._field_nd); (_46413_r)++) {
		{
			jule::U32 _49113_c = static_cast<jule::U32>((*(_46320_a))._field_d[_46413_r]);;
			jule::U32 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U32>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_204aa12a3:;
	}
	_iter_end_204aa12a3:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U32 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				(*(_46320_a))._field_trunc=true;
			};
			_46813_n=static_cast<jule::U32>((_46813_n * 10LLU));
		}
	_iter_next_204aa2ace:;
	}
	_iter_end_204aa2ace:;;
	(*(_46320_a))._field_nd=_46513_w;
	_1ee32a2d5_trim(_46320_a);
}



inline jule::Bool _1ee32aa00_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I32 _51735_end, jule::Str _51745_s) {
	jule::I32 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_204aa562b:;
	}
	_iter_end_204aa562b:;;
	return false;;
}



inline void _1ee32ac75_leftShift(_1ee328aec_decimal* _53119_a, jule::U32 _53131_k) {
	jule::I32 _53213_delta = _1ee328558_leftCheats[static_cast<jule::I32>(_53131_k)]._field_delta;;
	if (_1ee32aa00_prefixIsLessThan((*(_53119_a))._field_d, (*(_53119_a))._field_nd, _1ee328558_leftCheats[static_cast<jule::I32>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I32 _53713_r = (*(_53119_a))._field_nd;;
	jule::I32 _53813_w = ((*(_53119_a))._field_nd + _53213_delta);;
	jule::U32 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U32>((*(_53119_a))._field_d[_53713_r]) - '0') << _53131_k);
			jule::U32 _54513_quo = (_54113_n / 10LLU);;
			jule::U32 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_204aa8156:;
	}
	_iter_end_204aa8156:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U32 _55813_quo = (_54113_n / 10LLU);;
			jule::U32 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_204aa88c6:;
	}
	_iter_end_204aa88c6:;;
	(*(_53119_a))._field_nd+=_53213_delta;
	if (((*(_53119_a))._field_nd >= 800LL)) {
		(*(_53119_a))._field_nd=800LL;
	};
	(*(_53119_a))._field_dp+=_53213_delta;
	_1ee32a2d5_trim(_53119_a);
}



inline jule::Bool _1ee32b0b6_shouldRoundUp(_1ee328aec_decimal* _57819_a, jule::I32 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= (*(_57819_a))._field_nd))) {
		return false;;
	};
	if ((((*(_57819_a))._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == (*(_57819_a))._field_nd))) {
		if ((*(_57819_a))._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && ((((*(_57819_a))._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_57819_a))._field_d[_57831_nd] >= '5');;
}



inline jule::Str _1ee32c6d3_FmtUint(jule::U64 _6012_i, jule::I32 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1ee32d12e_small(static_cast<jule::I32>(static_cast<jule::I32>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ee32d904_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1ee32ca68_FmtInt(jule::I64 _7111_i, jule::I32 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1ee32d12e_small(static_cast<jule::I32>(static_cast<jule::I32>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ee32d904_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1ee32cd10_Itoa(jule::I32 _809_i) {
	return _1ee32ca68_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1ee32d12e_small(jule::I32 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1ee32d3c6_isPowerOfTwo(jule::I32 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1ee32d904_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I32 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I32 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U32 _14917_us = static_cast<jule::U32>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U32 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 0LLU))]);
			}
		_iter_next_204ae2965:;
		}
		_iter_end_204ae2965:;;
		jule::U32 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(_15913_is)]);
		};
	} else if (_1ee32d3c6_isPowerOfTwo(_10141_base)) {
		jule::U32 _17413_shift = (static_cast<jule::U32>(_1ee2c3091_TrailingZeros(static_cast<jule::U32>(static_cast<jule::U32>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U32 _17613_m = (static_cast<jule::U32>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>((static_cast<jule::U32>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_204aea1dc:;
		}
		_iter_end_204aea1dc:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_204aec970:;
		}
		_iter_end_204aec970:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1ee32ebd0_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_204b12e4c:;
			{
				return _1ee32e22e_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_204b12eb3:;
			{
				return _1ee32e4e8_SysUint;;
			}
		}
		else {
			_case_begin_204b147de:;
			{
				return _4515_kind;;
			}
		}
		_match_end_204b120d3:;
	};
}



inline jule::I32 _1ee32ee77_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_204b15d1d:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_204b15d84:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_204b158ab:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_204b15922:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_204b15988:;
			{
				return _1ee32e00e_BitSize;;
			}
		}
		else {
			_case_begin_204b153d3:;
			{
				return -1LL;;
			}
		}
		_match_end_204b15812:;
	};
}



inline jule::Str _1ee330296_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_204b17319:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_204b17bee:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_204b17c65:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_204b17ccb:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_204b1778c:;
			{
				return jule::Str();;
			}
		}
		_match_end_204b15b0e:;
	};
}



inline jule::Str _1ee33053d_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_204b186e4:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_204b18ddc:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_204b18e53:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_204b18eb9:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_204b182e8:;
			{
				return jule::Str();;
			}
		}
		_match_end_204b18293:;
	};
}



inline jule::Str _1ee3307d5_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_204b198d2:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_204b1a0ca:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_204b194d6:;
			{
				return jule::Str();;
			}
		}
		_match_end_204b19481:;
	};
}



inline jule::Bool _1ee331385_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _1ee3236da_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _1ee33162c_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_204b20014:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_204b1d364:;
			{
				return 64LLU;;
			}
		}
		_match_end_204b1e3dc:;
	};
}



inline jule::I32 _1ee3318c4_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_204b20c29:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_204b20ac5:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_204b20b4c:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_204b201ac:;
			{
				return 64LLU;;
			}
		}
		_match_end_204b205ec:;
	};
}



inline jule::I32 _1ee331b6b_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_204b226a9:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_204b22566:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_204b225cc:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_204b21873:;
			{
				return 64LLU;;
			}
		}
		_match_end_204b2218c:;
	};
}



inline void _1ee331cd1_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _21ab65582_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_204b23435:;
				{
					_1ee32e00e_BitSize=64LLU;
					_1ee32e22e_SysInt=jule::Str("i64", 3);
					_1ee32e4e8_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_204b2349b:;
				{
					_1ee32e00e_BitSize=32LLU;
					_1ee32e22e_SysInt=jule::Str("i32", 3);
					_1ee32e4e8_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_204b22eb2:;
		};
	};
}



inline void _1ee331e46_init(void) {
	_1ee331cd1_UpdateTarget();
}



inline jule::I64 _1ee335bd6_MinI(jule::Str _6113_k) {
	_6113_k=_1ee32ebd0_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_204b22885:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_204b2569b:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_204b25712:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_204b25778:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_204b23897:;
			{
				return 0LL;;
			}
		}
		_match_end_204b23666:;
	};
}



inline jule::I64 _1ee335ec2_MaxI(jule::Str _7913_k) {
	_7913_k=_1ee32ebd0_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_204b25910:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_204b26c1e:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_204b26c85:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_204b26ceb:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_204b26955:;
			{
				return 0LL;;
			}
		}
		_match_end_204b26669:;
	};
}



inline jule::U64 _1ee336269_MaxU(jule::Str _9713_k) {
	_9713_k=_1ee32ebd0_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_204b26e72:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_204b28281:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_204b282e7:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_204b2835d:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_204b27eb7:;
			{
				return 0LLU;;
			}
		}
		_match_end_204b27bcb:;
	};
}



inline jule::F64 _1ee336478_Min(jule::Str _11512_k) {
	_11512_k=_1ee32ebd0_RealKindOf(_11512_k);
	jule::I64 _1179_i = _1ee335bd6_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_204b2a74a:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_204b2a2c7:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_204b29c55:;
			{
				return 0LL;;
			}
		}
		_match_end_204b2a393:;
	};
}



inline jule::F64 _1ee336720_Max(jule::Str _13312_k) {
	_13312_k=_1ee32ebd0_RealKindOf(_13312_k);
	jule::I64 _1359_i = _1ee335ec2_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _1ee336269_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_204b2ca38:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_204b2c5b5:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_204b2c043:;
			{
				return 0LL;;
			}
		}
		_match_end_204b2c681:;
	};
}



inline jule::Bool _1ee336b71_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1ee336e5c_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1ee337204_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1ee337523_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1ee3377ba_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1ee337a62_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1ee337d09_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1ee33817d_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1ee338425_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1ee3386bc_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1ee338a0d_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_204b335ee:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_204b32961:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_204b33137:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_204b3319d:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_204b33214:;
			{
				return _1ee336b71_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_204b3327a:;
			{
				return _1ee336e5c_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_204b33665:;
			{
				return _1ee337204_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_204b336cb:;
			{
				return _1ee337523_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_204b33742:;
			{
				return _1ee3377ba_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_204b337a8:;
			{
				return _1ee337a62_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_204b33830:;
			{
				return _1ee337d09_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_204b338a7:;
			{
				return _1ee33817d_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_204b3392e:;
			{
				return _1ee338425_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_204b339a6:;
			{
				return _1ee3386bc_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_204b33a2d:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_204b33aa5:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_204b32ec2:;
			{
				return false;;
			}
		}
		_match_end_204b2ce12:;
	};
}



inline jule::Bool _1ee338ca5_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1ee33904c_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1ee3392e4_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1ee33958b_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1ee3399dc_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1ee339c84_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1ee33a02b_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1ee33a2c3_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1ee33a614_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_204b3b261:;
			{
				return _1ee33b648_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_204b3527c:;
			{
				return _1ee33b934_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_204b3b151:;
			{
				return _1ee33b934_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_204b3ac55:;
			{
				return _1ee338ca5_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_204b3acbb:;
			{
				return _1ee33904c_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_204b3ad32:;
			{
				return _1ee3392e4_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_204b3ada9:;
			{
				return _1ee33958b_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_204b3b2c7:;
			{
				return _1ee3399dc_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_204b3b34e:;
			{
				return _1ee339c84_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_204b3b3c6:;
			{
				return _1ee33a02b_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_204b3b44d:;
			{
				return _1ee33a2c3_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_204b3b4c5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_204b3ab34:;
			{
				return false;;
			}
		}
		_match_end_204b3a903:;
	};
}



inline jule::Bool _1ee33b648_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1ee33b934_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1ee33bbcb_IsInt(jule::Str _4610_k) {
	return (_1ee33b648_IsSigInt(_4610_k) || _1ee33b934_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1ee33beea_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1ee33c292_IsNum(jule::Str _5610_k) {
	return (_1ee33bbcb_IsInt(_5610_k) || _1ee33beea_IsFloat(_5610_k));;
}



inline jule::Bool _1ee33c539_IsSigNum(jule::Str _6113_k) {
	return (_1ee33b648_IsSigInt(_6113_k) || _1ee33beea_IsFloat(_6113_k));;
}



inline void _1ee345e05_lshiftUnsig(_1ee33c6d2_Const* _59021_c, _1ee33c6d2_Const* _59032_x) {
	jule::U64 _5919_l = _1ee33ee54_AsU64(_59021_c);;
	jule::U64 _5929_r = _1ee33ee54_AsU64(_59032_x);;
	_1ee3406b3_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1ee346202_rshiftUnsig(_1ee33c6d2_Const* _59621_c, _1ee33c6d2_Const* _59632_x) {
	jule::U64 _5979_l = _1ee33ee54_AsU64(_59621_c);;
	jule::U64 _5989_r = _1ee33ee54_AsU64(_59632_x);;
	_1ee3406b3_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _2010bd1ec_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _2010bd32e_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I32 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_2010d5885_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e86dc3_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _2010d4eb1_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _2010d52d0_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I32 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				(_4713_s).append(_2010d5bc6_strEsqSeq(_4210_bytes, &(_4813_i)));;
			} else {
				jule::I32 _5418_r = 0;;
				jule::I32 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e86dc3_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_217e88237_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_204be7bad:;
	}
	_iter_end_204be7bad:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _2010d5577_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_204bebe15:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_204bebe7b:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_204bebee2:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_204bec058:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_204bec0d0:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_204bec157:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_204bec1ce:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_204bec256:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_204bec2cd:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_204bec355:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_204bebc5b:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _2010d5885_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I32* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _2010d5577_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_204c017cc:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1ee31bc88_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_204c0205d:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1ee31bc88_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_204c01953:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1ee31bc88_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_204c0080e:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1ee31bc88_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_204c00ad9:;
	};
}



inline jule::Slice<jule::U8> _2010d5bc6_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I32* _12434_i) {
	jule::I32 _1259_r = _2010d5885_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1259_r));;
}



inline jule::I32 _2011daa45_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I32* _1038_start) {
	jule::I32 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I32 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e86dc3_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_204c32555:;
	}
	_iter_end_204c32555:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _2011e15ea_getFormatRange(jule::I32* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I32 _289_start = (*(_2724_i));;
	jule::I32 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I32 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e86dc3_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_204c34e1a:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_204c34e81:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_204c34b0c:;
			};
		}
	_iter_next_204c341d3:;
	}
	_iter_end_204c341d3:;;
	return nullptr;;
}



inline void _2011e18a3_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		((*(_4722_buf))).append("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type132) {
			_case_begin_204c36a65:;
			{
				(*(_4722_buf))+=_1ee317338_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type132))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_204c352a0:;
			{
				(*(_4722_buf))+=_1ee317338_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_204c36427:;
			{
				(*(_4722_buf))+=_1ee32ca68_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type133)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_204c3648d:;
			{
				(*(_4722_buf))+=_1ee32ca68_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type134)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_204c36504:;
			{
				(*(_4722_buf))+=_1ee32ca68_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_204c3656a:;
			{
				(*(_4722_buf))+=_1ee32ca68_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_204c36acb:;
			{
				(*(_4722_buf))+=_1ee32c6d3_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type131)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_204c36b42:;
			{
				(*(_4722_buf))+=_1ee32c6d3_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type135)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_204c36ba8:;
			{
				(*(_4722_buf))+=_1ee32c6d3_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type136)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_204c36c1e:;
			{
				(*(_4722_buf))+=_1ee32c6d3_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_204c36c85:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_204c36ceb:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					((*(_4722_buf))).append("true", 4);
				} else {
					((*(_4722_buf))).append("false", 5);
				};
			}
		}
		else {
			_case_begin_204c35e0a:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_204c35c73:;
	};
}



inline void _2011e1c7c_applyFmtByDefault(jule::Str* _8627_buf, jule::I32* _8642_j, jule::Slice<jule::Any> _8650_args) {
	jule::Any _879_arg = _8650_args[(*(_8642_j))];;
	((*(_8642_j)))++;
	_2011e18a3_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _2011e2178_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I32* _9451_j, jule::Slice<jule::Any> _9459_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_2011e1c7c_applyFmtByDefault(_9436_buf, _9451_j, _9459_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		((*(_9436_buf))).append("{}", 2);
		return;;
	};
	_217da56b5_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _2011e2486_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _217da5011_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I32 _11913_j = 0LL;;
	jule::I32 _12013_last = 0LL;;
	jule::I32 _12113_i = _2011daa45_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I32>(_2011daa45_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_217da56b5_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _2011e15ea_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_204c41d28;
			};
			_2011e2178_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), _11322_args);
			if ((_11913_j >= _11322_args.len())) {
				_217da56b5_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I32>(_11713_fmtBytes.len());
				goto _iter_end_204c41d28;
			};
			_12013_last=_12113_i;
		}
	_iter_next_204c41d28:;
	}
	_iter_end_204c41d28:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_217da56b5_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _2011e4169_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _2011e2486_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _20102541d_parameterUsesGenerics(jule::Ptr<_20102243c_ParamIns>* _38131_p, jule::Slice<jule::Ptr<_200ee7654_GenericDecl>>* _38146_generics) {
	if (_20101e406_IsSelf((*(_38131_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _20114a4aa_kindUsesGenerics(&((*(_38131_p)).get()._field_Kind), _38146_generics);;
}



inline jule::Ptr<_201137e9d_TypeSymbol> _2010278e8_buildType(jule::Ptr<_200eda6ad_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_2010eeb9b_Value> _201027bd4_buildExpr(jule::Ptr<_200ede838_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_2011303a2_TypeAlias> _201027e7b_buildTypeAlias(jule::Ptr<_20100162a_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_2011303a2_TypeAlias>(_2011303a2_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_Binded=_11223_decl.get()._field_Binded, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_2010278e8_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_201007686_Field> _20102829a_buildField(jule::Ptr<_201004b06_FieldDecl> _12319_decl) {
	return jule::new_ptr<_201007686_Field>(_201007686_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_2010278e8_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_201007686_Field>> _201028542_buildFields(jule::Slice<jule::Ptr<_201004b06_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_201007686_Field>> _13513_fields = jule::Slice<jule::Ptr<_201007686_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204ed5121:;
		if (it != expr_end) {
			jule::Ptr<_201004b06_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_201007686_Field>> &__jule_push_dest = _13513_fields; __jule_push_dest.push(_20102829a_buildField(_13617_decl)); };
			}
			_iter_next_204ed5121:;
			++it;
			goto _iter_begin_204ed5121;
		}
		_iter_end_204ed5121:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_20100a25a_Struct> _2010287d9_buildStruct(jule::Ptr<_201005453_StructDecl> _14220_decl) {
	return jule::new_ptr<_20100a25a_Struct>(_20100a25a_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_201028542_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_Binded=_14220_decl.get()._field_Binded, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_20101dd1d_Param> _201028a81_buildParam(jule::Ptr<_200eea9ba_ParamDecl> _15419_decl) {
	return jule::new_ptr<_20101dd1d_Param>(_20101dd1d_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_2010278e8_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_20101dd1d_Param>> _201028e05_buildParams(jule::Slice<jule::Ptr<_200eea9ba_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_20101dd1d_Param>> _16613_params = jule::Slice<jule::Ptr<_20101dd1d_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204ed7ed1:;
		if (it != expr_end) {
			jule::Ptr<_200eea9ba_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20101dd1d_Param>> &__jule_push_dest = _16613_params; __jule_push_dest.push(_201028a81_buildParam(_16717_decl)); };
			}
			_iter_next_204ed7ed1:;
			++it;
			goto _iter_begin_204ed7ed1;
		}
		_iter_end_204ed7ed1:;
	};
	return _16613_params;;
}



inline jule::Ptr<_20101d614_RetType> _20102919c_buildRetType(jule::Ptr<_200edd42a_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_20101d614_RetType>(_20101d614_RetType{._field_Kind=_2010278e8_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_20102065a_Fn> _201029444_buildFn(jule::Ptr<_200eebcda_FnDecl> _18316_decl) {
	return jule::new_ptr<_20102065a_Fn>(_20102065a_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_Binded=_18316_decl.get()._field_Binded, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_20102919c_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_201028e05_buildParams(&(_18316_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_20102065a_Fn>> _2010296db_buildMethods(jule::Slice<jule::Ptr<_200eebcda_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_20102065a_Fn>> _20213_methods = jule::Slice<jule::Ptr<_20102065a_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204edb6aa:;
		if (it != expr_end) {
			jule::Ptr<_200eebcda_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_20102065a_Fn>> &__jule_push_dest = _20213_methods; __jule_push_dest.push(_201029444_buildFn(_20317_decl)); };
			}
			_iter_next_204edb6aa:;
			++it;
			goto _iter_begin_204edb6aa;
		}
		_iter_end_204edb6aa:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_201137e9d_TypeSymbol>> _201029983_buildTraitInherits(jule::Slice<jule::Ptr<_200eda6ad_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_201137e9d_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_201137e9d_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204edbed5:;
		if (it != expr_end) {
			jule::Ptr<_200eda6ad_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_201137e9d_TypeSymbol>> &__jule_push_dest = _21013_symbols; __jule_push_dest.push(_2010278e8_buildType(_21117_it)); };
			}
			_iter_next_204edbed5:;
			++it;
			goto _iter_begin_204edbed5;
		}
		_iter_end_204edbed5:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_20103287b_Trait> _201029c2a_buildTrait(jule::Ptr<_201005b29_TraitDecl> _21719_decl) {
	return jule::new_ptr<_20103287b_Trait>(_20103287b_Trait{._field_Token=_21719_decl.get()._field_Token, ._field_Ident=_21719_decl.get()._field_Ident, ._field_Public=_21719_decl.get()._field_Public, ._field_Inherits=_201029983_buildTraitInherits(&(_21719_decl.get()._field_Inherits)), ._field_Methods=_2010296db_buildMethods(&(_21719_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_201034619_EnumItem> _201029ec2_buildEnumItem(jule::Ptr<_201002e89_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_201034619_EnumItem>(_201034619_EnumItem{._field_Token=_22722_decl.get()._field_Token, ._field_Ident=_22722_decl.get()._field_Ident, ._field_Value=_201027bd4_buildExpr(_22722_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_201034619_EnumItem>> _20102a269_buildEnumItems(jule::Slice<jule::Ptr<_201002e89_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_201034619_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_201034619_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204edeb31:;
		if (it != expr_end) {
			jule::Ptr<_201002e89_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_201034619_EnumItem>> &__jule_push_dest = _23613_items; __jule_push_dest.push(_201029ec2_buildEnumItem(_23717_decl)); };
			}
			_iter_next_204edeb31:;
			++it;
			goto _iter_begin_204edeb31;
		}
		_iter_end_204edeb31:;
	};
	return _23613_items;;
}



inline jule::Ptr<_20103510e_Enum> _20102a6ba_buildEnum(jule::Ptr<_2010039b2_EnumDecl> _24318_decl) {
	return jule::new_ptr<_20103510e_Enum>(_20103510e_Enum{._field_Token=_24318_decl.get()._field_Token, ._field_Public=_24318_decl.get()._field_Public, ._field_Ident=_24318_decl.get()._field_Ident, ._field_Kind=_2010278e8_buildType(_24318_decl.get()._field_Kind), ._field_Items=_20102a269_buildEnumItems(&(_24318_decl.get()._field_Items))});;
}



inline jule::Ptr<_201036176_TypeEnumItem> _20102a962_buildTypeEnumItem(jule::Ptr<_201004287_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_201036176_TypeEnumItem>(_201036176_TypeEnumItem{._field_Token=_25326_decl.get()._field_Token, ._field_Ident=_25326_decl.get()._field_Ident, ._field_Kind=_2010278e8_buildType(_25326_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_201036176_TypeEnumItem>> _20102ac09_buildTypeEnumItems(jule::Slice<jule::Ptr<_201004287_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_201036176_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_201036176_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204ee24a2:;
		if (it != expr_end) {
			jule::Ptr<_201004287_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_201036176_TypeEnumItem>> &__jule_push_dest = _26213_items; __jule_push_dest.push(_20102a962_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_204ee24a2:;
			++it;
			goto _iter_begin_204ee24a2;
		}
		_iter_end_204ee24a2:;
	};
	return _26213_items;;
}



inline jule::Ptr<_201036709_TypeEnum> _20102aea1_buildTypeEnum(jule::Ptr<_201004892_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_201036709_TypeEnum>(_201036709_TypeEnum{._field_Token=_26922_decl.get()._field_Token, ._field_Public=_26922_decl.get()._field_Public, ._field_Ident=_26922_decl.get()._field_Ident, ._field_Items=_20102ac09_buildTypeEnumItems(&(_26922_decl.get()._field_Items))});;
}



inline jule::Ptr<_2010a4975_Var> _20102b248_buildVar(jule::Ptr<_200eeccb9_VarDecl> _27817_decl) {
	return jule::new_ptr<_2010a4975_Var>(_2010a4975_Var{._field_Token=_27817_decl.get()._field_Token, ._field_Ident=_27817_decl.get()._field_Ident, ._field_Binded=_27817_decl.get()._field_Binded, ._field_Constant=_27817_decl.get()._field_Constant, ._field_Mutable=_27817_decl.get()._field_Mutable, ._field_Public=_27817_decl.get()._field_Public, ._field_Statically=_27817_decl.get()._field_Statically, ._field_Reference=_27817_decl.get()._field_Reference, ._field_Kind=_2010278e8_buildType(_27817_decl.get()._field_Kind), ._field_Value=_201027bd4_buildExpr(_27817_decl.get()._field_Expr), ._field_Refers=static__201026474_new(), ._field_Directives=_27817_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_2010a4975_Var>> _20102b4e0_buildVars(jule::Slice<jule::Ptr<_200eeccb9_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_2010a4975_Var>> _29613_vars = jule::Slice<jule::Ptr<_2010a4975_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_204ee553d:;
		if (it != expr_end) {
			jule::Ptr<_200eeccb9_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = _29613_vars; __jule_push_dest.push(_20102b248_buildVar(_29717_decl)); };
			}
			_iter_next_204ee553d:;
			++it;
			goto _iter_begin_204ee553d;
		}
		_iter_end_204ee553d:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_2010578c3_Impl> _20102b787_buildImpl(jule::Ptr<_201006234_Impl> _30318_decl) {
	return jule::new_ptr<_2010578c3_Impl>(_2010578c3_Impl{._field_Base=_30318_decl.get()._field_Base, ._field_Dest=_30318_decl.get()._field_Dest, ._field_Methods=_2010296db_buildMethods(&(_30318_decl.get()._field_Methods)), ._field_Statics=_20102b4e0_buildVars(_30318_decl.get()._field_Statics)});;
}



inline jule::Ptr<_2010edb23_Data> _201053704_buildAsComptimeMethodData(jule::Ptr<_20102330b_FnIns>* _139635_f) {
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>((*(_139635_f)), 1)}), });;
}



inline jule::Ptr<_20107b397_ImportInfo> _2010538e1_findComptimePackage(jule::Ptr<_201084669_Sema>* _140429_s) {
	return _201084adc_SelectPackage((*(_140429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_20107b397_ImportInfo>)>([=](jule::Ptr<_20107b397_ImportInfo> _140528_pkg) mutable -> jule::Bool {
		return _140528_pkg.get()._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_2010edb23_Data> _201053c54_buildComptimeTypeInfoData(jule::Ptr<_201084669_Sema>* _141035_s, jule::Ptr<_2011310ea_TypeKind>* _141050_t) {
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_201084092_pushComptimeTypeInfo((*(_141035_s)).get()._field_meta.ptr(), _141050_t), 15)}), });;
}



inline jule::Ptr<_2010edb23_Data> _201054084_buildComptimeValue(jule::Ptr<_2010edb23_Data>* _141828_d) {
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20104d105_comptimeValue>(_20104d105_comptimeValue{._field_data=(*(_141828_d))}), 16)}), });;
}



inline jule::Bool _201056d01_matchConstraint(jule::Str* _14221_c, jule::Ptr<_2011310ea_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_205153e71:;
			{
				jule::Ptr<_201138850_Prim> _14513_prim = _201133817_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1ee33c539_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_205159be1:;
			{
				jule::Ptr<_201138850_Prim> _15113_prim = _201133817_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1ee33b934_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_205159c57:;
			{
				jule::Ptr<_201138850_Prim> _15713_prim = _201133817_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1ee33beea_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_205158b9b:;
			{
				jule::Ptr<_201138850_Prim> _16313_prim = _201133817_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1ee33c292_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_205158c12:;
			{
				return _20113288d_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_205158c78:;
			{
				return (!(_20113288d_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_205158cde:;
			{
				return _201132629_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_205159dab:;
			{
				return _201132b02_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_2051599e3:;
			{
				return false;;
			}
		}
		_match_end_205159383:;
	};
}



inline jule::Bool _2010570dc_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_201055261_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20515e7a6:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_20515e7a6:;
			++it;
			goto _iter_begin_20515e7a6;
		}
		_iter_end_20515e7a6:;
	};
	return false;;
}



inline jule::Ptr<_20106455b_scopeChecker> _20105995d_newScopeCheckerBase(jule::Ptr<_201084669_Sema>* _5829_s, jule::Ptr<_20102330b_FnIns> _5843_owner) {
	return jule::new_ptr<_20106455b_scopeChecker>(_20106455b_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_2010e9118_SymbolTable>(), });;
}



inline jule::Ptr<_20106455b_scopeChecker> _201059ce3_newScopeChecker(jule::Ptr<_201084669_Sema>* _6625_s, jule::Ptr<_20102330b_FnIns> _6639_owner) {
	jule::Ptr<_20106455b_scopeChecker> _6713_base = _20105995d_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2010632c4_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_201063747_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_2010632c4_scopeLabel> _20105a134_findLabelParent(jule::Str _7620_ident, jule::Ptr<_20106455b_scopeChecker> _7636_scope) {
	jule::Ptr<_2010632c4_scopeLabel> _7713_label = _201067c13_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_201067c13_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_205173b0b:;
	}
	_iter_end_205173b0b:;;
	return _7713_label;;
}



inline jule::Bool _20105a4b9_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_20105c92d_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_205175525:;
			{
				jule::Ptr<_201014352_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_201014352_FnCallExprModel>(&__jule_any_type35);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_20517558b:;
			{
				jule::Ptr<_2010edb23_Data> _9813_d = _9021_Model.cast_ptr<_2010edb23_Data>(&__jule_any_type24);;
				return _20105a4b9_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_20517425a:;
	};
	return false;;
}



inline jule::Bool _20105a80a_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_20105c92d_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_2051776e2:;
			{
				return ((*(_10421_stmt)).cast_ptr<_20105c92d_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_205177758:;
			{
				return ((*(_10421_stmt)).cast_ptr<_20105d775_InfIter>(&__jule_any_type37).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_2051777be:;
			{
				jule::Ptr<_20105e5cd_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_20105e5cd_RangeIter>(&__jule_any_type41);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _20105a4b9_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_205175976:;
			{
				jule::Ptr<_20105dbe8_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_20105dbe8_WhileIter>(&__jule_any_type39);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _20105a4b9_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _20105a4b9_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_2051759dc:;
			{
				jule::Ptr<_201061745_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_201061745_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20517abe0:;
					if (it != expr_end) {
						jule::Ptr<_201062290_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_20517b905:;
								if (it != expr_end) {
									jule::Ptr<_2010edb23_Data> *_12420_expr = it;
									{
										if (_20105a4b9_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_20517b905:;
									++it;
									goto _iter_begin_20517b905;
								}
								_iter_end_20517b905:;
							};
						}
						_iter_next_20517abe0:;
						++it;
						goto _iter_begin_20517abe0;
					}
					_iter_end_20517abe0:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_205175a53:;
			{
				jule::Ptr<_20105d489_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_20105d489_Conditional>(&__jule_any_type36);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20517ce67:;
					if (it != expr_end) {
						jule::Ptr<_20105cd29_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _20105a4b9_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_20517ce67:;
						++it;
						goto _iter_begin_20517ce67;
					}
					_iter_end_20517ce67:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_205175ab9:;
			{
				jule::Ptr<_2010edb23_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_2010edb23_Data>(&__jule_any_type24);;
				return _20105a4b9_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_205175910:;
			{
				return false;;
			}
		}
		_match_end_2051758aa:;
	};
}



inline jule::I32 _20105ab4b_countMatchType(jule::Ptr<_201061745_Match>* _14720_m, jule::Ptr<_2011310ea_TypeKind>* _14732_t) {
	jule::I32 _14813_n = 0LL;;
	jule::Str _1499_kind = _2011314a2_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205180b4b:;
		if (it != expr_end) {
			jule::Ptr<_201062290_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_205180b4b;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2051818d8:;
					if (it != expr_end) {
						jule::Ptr<_2010edb23_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_205180b4b;
							};
							if ((_1499_kind == _2011314a2_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_2011310ea_TypeKind>(&__jule_any_type89).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_2051818d8:;
						++it;
						goto _iter_begin_2051818d8;
					}
					_iter_end_2051818d8:;
				};
			}
			_iter_next_205180b4b:;
			++it;
			goto _iter_begin_205180b4b;
		}
		_iter_end_205180b4b:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_2010edb23_Data>> _20105ade3_getDatasFromTupleData(jule::Ptr<_2010edb23_Data>* _17131_d) {
	if ((_2011354a6_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type87) {
				_case_begin_205185469:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_20101807b_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
				}
			}
			else {
				_case_begin_205183104:;
				{
					jule::Ptr<_20113d613_Tuple> _17721_t = _2011354a6_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_2010edb23_Data>> _17821_r = jule::Slice<jule::Ptr<_2010edb23_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_205184413:;
						if (it != expr_end) {
							jule::Ptr<_2011310ea_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_2010edb23_Data>> &__jule_push_dest = _17821_r; __jule_push_dest.push(jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_205184413:;
							++it;
							goto _iter_begin_205184413;
						}
						_iter_end_205184413:;
					};
					return _17821_r;;
				}
			}
			_match_end_205182e7d:;
		};
	} else {
		return jule::Slice<jule::Ptr<_2010edb23_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _20105b72e_checkMut(jule::Ptr<_201084669_Sema>* _20618_s, jule::Ptr<_2010edb23_Data>* _20629_left, jule::Ptr<_2010edb23_Data> _20646_right, jule::Ptr<_1ed694d8c_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_205187e3e:;
			{
				_201086eeb_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _20113288d_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_205187ea5:;
			{
				if (((!_20660_op.get()._field_Kind.equal("=", 1)) && (_201134c69_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_201086eeb_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_205187dc8:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_2051875c0:;
	};
}



inline jule::Bool _20105bbb3_checkAssign(jule::Ptr<_201084669_Sema>* _22521_s, jule::Ptr<_2010edb23_Data>* _22536_left, jule::Ptr<_2010edb23_Data> _22553_right, jule::Ptr<_1ed694d8c_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_20102330b_FnIns> _2269_f = _201134a05_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_201086eeb_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_2010ee492_IsConst((*(_22536_left)).ptr())) {
			_case_begin_20518c3c7:;
			{
				_201086eeb_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_20108731a_pushSuggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_20518c43d:;
			{
				_201086eeb_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_20105b72e_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_20518c4a4:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_20518c361:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_20518aedb:;
	};
}



inline jule::Bool _20105be5a_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_20518e297:;
			{
				return (!((*(_24731_n)).cast_ptr<_200ee8ce8_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_205188060:;
			{
				return true;;
			}
		}
		else {
			_case_begin_20518c73a:;
			{
				return false;;
			}
		}
		_match_end_20518e033:;
	};
}



inline jule::Bool _20105c202_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_20518e110:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_205190375:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_2010edb23_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_205190dae:;
						{
							return true;;
						}
					}
					else {
						_case_begin_205191244:;
						{
							return false;;
						}
					}
					_match_end_205190e9c:;
				};
			}
		}
		else {
			_case_begin_20518ed7a:;
			{
				return false;;
			}
		}
		_match_end_20518e8e6:;
	};
}



inline jule::Bool _20105c499_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_205191dd2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_205190683:;
			{
				return false;;
			}
		}
		_match_end_205191310:;
	};
}



inline jule::Ptr<_2010a4975_Var> _201078aae_findVarInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052dc109:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_2010a4975_Var> _4817_v = _2010e9987_FindVar(_4717_f.ptr(), _4649_ident, _4661_binded);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_2052dc109:;
			++it;
			goto _iter_begin_2052dc109;
		}
		_iter_end_2052dc109:;
	};
	return nullptr;;
}



inline jule::Ptr<_2011303a2_TypeAlias> _201078edd_findTypeAliasInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052dd55b:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_2011303a2_TypeAlias> _6017_ta = _2010e9d3e_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_binded);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_2052dd55b:;
			++it;
			goto _iter_begin_2052dd55b;
		}
		_iter_end_2052dd55b:;
	};
	return nullptr;;
}



inline jule::Ptr<_20100a25a_Struct> _2010793c8_findStructInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052dea02:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_20100a25a_Struct> _7217_s = _2010ea1e6_FindStruct(_7117_f.ptr(), _7052_ident, _7064_binded);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_2052dea02:;
			++it;
			goto _iter_begin_2052dea02;
		}
		_iter_end_2052dea02:;
	};
	return nullptr;;
}



inline jule::Ptr<_20102065a_Fn> _20107983a_findFnInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052e0e98:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_20102065a_Fn> _8417_f = _2010ea59d_FindFn(_8317_file.ptr(), _8248_ident, _8260_binded);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_2052e0e98:;
			++it;
			goto _iter_begin_2052e0e98;
		}
		_iter_end_2052e0e98:;
	};
	return nullptr;;
}



inline jule::Ptr<_20103287b_Trait> _201079b48_findTraitInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052e2230:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_20103287b_Trait> _9617_t = _2010ea8ab_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_2052e2230:;
			++it;
			goto _iter_begin_2052e2230;
		}
		_iter_end_2052e2230:;
	};
	return nullptr;;
}



inline jule::Ptr<_20103510e_Enum> _201079e89_findEnumInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052e3495:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_20103510e_Enum> _10817_e = _2010eabb9_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_2052e3495:;
			++it;
			goto _iter_begin_2052e3495;
		}
		_iter_end_2052e3495:;
	};
	return nullptr;;
}



inline jule::Ptr<_201036709_TypeEnum> _20107a2ca_findTypeEnumInPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052e474e:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_201036709_TypeEnum> _12017_e = _2010eaec7_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_2052e474e:;
			++it;
			goto _iter_begin_2052e474e;
		}
		_iter_end_2052e474e:;
	};
	return nullptr;;
}



inline jule::Any _20107a7c5_defByIdentPackage(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2052e5c5b:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _2010ebd96_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_binded);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_2052e5c5b:;
			++it;
			goto _iter_begin_2052e5c5b;
		}
		_iter_end_2052e5c5b:;
	};
	return nullptr;;
}



inline jule::Bool _20108128c_isStdPackage(jule::Str _35517_f, jule::Str _35525_p) {
	return _219318297_HasPrefix(_35517_f, _21932314d_Join(jule::Slice<jule::Str>::make({_21ab64718_PathStdlib,_35525_p})));;
}



inline jule::Bool _201081ee6_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_205305ad4:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_205306299:;
			{
				jule::Ptr<_201016bc3_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71);;
				return _201081ee6_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_205306310:;
			{
				jule::Ptr<_2010163dc_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_2010163dc_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _201081ee6_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_205306376:;
			{
				jule::Ptr<_20101288e_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_20101288e_UnaryExprModel>(&__jule_any_type74);;
				if ((!_2317_unary.get()._field_Op.get()._field_Kind.equal("*", 1))) {
					return false;;
				};
				if ((_201133ce0_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_201133a7b_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _201081ee6_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_205305870:;
			{
				return false;;
			}
		}
		_match_end_20530581a:;
	};
}



inline _2193a460d_Log _20108248b_compilerErr(jule::Ptr<_1ed694d8c_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_2193a460d_Log _4213_log = _2193a460d_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_2193a4a4d_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_1ed69b13a_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _2010827cc_impIsLookupable(jule::Ptr<_20107b397_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_Binded) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _20107d94e_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _201082ac9_appendRetVars(jule::Slice<jule::Ptr<_2010a4975_Var>>* _6723_dest, jule::Ptr<_20102330b_FnIns>* _6742_f) {
	if ((_201020abc_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_2011310ea_TypeKind>> _7213_types = _20102442d_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20530e1d6:;
		if (it != expr_end) {
			jule::I32 _7310_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _7317_ident = *it;
			{
				if ((_1ed697631_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _1ed6978c8_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_20530e1d6;
				};
				{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = (*(_6723_dest)); __jule_push_dest.push(jule::new_ptr<_2010a4975_Var>(_2010a4975_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()}), ._field_RetOrder=_7310_i, })); };
			}
			_iter_next_20530e1d6:;
			++it;
			_7310_i++;
			goto _iter_begin_20530e1d6;
		}
		_iter_end_20530e1d6:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _201082d82_appendParamVars(jule::Slice<jule::Ptr<_2010a4975_Var>>* _9725_dest, jule::Ptr<_20102330b_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20531286b:;
		if (it != expr_end) {
			jule::Ptr<_20102243c_ParamIns> _10217_p = *it;
			{
				if ((_1ed697631_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _1ed6978c8_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_20531286b;
				};
				jule::Ptr<_2010a4975_Var> _10717_v = jule::new_ptr<_2010a4975_Var>(_2010a4975_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(), ._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()}), });;
				{
					
					if (_20101e406_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_205315253:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_201130b88_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_20101e66a_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_20101e66a_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20113c0a1_Sptr>(_20113c0a1_Sptr{._field_Elem=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_BindIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 21);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_205314e89:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20113ca0d_Slc>(_20113ca0d_Slc{._field_Elem=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_BindIdent=_10217_p.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_2053130a8:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_205314d68:;
				};
				{ jule::Slice<jule::Ptr<_2010a4975_Var>> &__jule_push_dest = (*(_9725_dest)); __jule_push_dest.push(_10717_v); };
			}
			_iter_next_20531286b:;
			++it;
			goto _iter_begin_20531286b;
		}
		_iter_end_20531286b:;
	};
}



inline void _20108315c_appendGenericTypeAliases(jule::Slice<jule::Ptr<_2011303a2_TypeAlias>>* _15734_dest, jule::Ptr<_20102330b_FnIns>* _15759_f) {
	jule::I32 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20531a2ad:;
		if (it != expr_end) {
			jule::I32 _16710_i = it - expr->begin();
			jule::Ptr<_20112e868_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_200ee7654_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				{ jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> &__jule_push_dest = (*(_15734_dest)); __jule_push_dest.push(jule::new_ptr<_2011303a2_TypeAlias>(_2011303a2_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), })); };
			}
			_iter_next_20531a2ad:;
			++it;
			_16710_i++;
			goto _iter_begin_20531a2ad;
		}
		_iter_end_20531a2ad:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_20100d071_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20531c5ac:;
			if (it != expr_end) {
				jule::I32 _18114_i = it - expr->begin();
				jule::Ptr<_20112e868_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_200ee7654_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					{ jule::Slice<jule::Ptr<_2011303a2_TypeAlias>> &__jule_push_dest = (*(_15734_dest)); __jule_push_dest.push(jule::new_ptr<_2011303a2_TypeAlias>(_2011303a2_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), })); };
				}
				_iter_next_20531c5ac:;
				++it;
				_18114_i++;
				goto _iter_begin_20531c5ac;
			}
			_iter_end_20531c5ac:;
		};
	};
}



inline jule::Ptr<_2010e9118_SymbolTable> _2010834ae_findFile(jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>* _19518_files, jule::Ptr<_1ed69a227_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20531cd82:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_20531cd82:;
			++it;
			goto _iter_begin_20531cd82;
		}
		_iter_end_20531cd82:;
	};
	return nullptr;;
}



inline void _201083921_pushSuggestion(_2193a460d_Log* _20430_log, jule::Str _20441_fmt, jule::Slice<jule::Any> _20454_args) {
	_20430_log->_field_Suggestion=_2193a4a4d_Logf(_20441_fmt, _20454_args);
}



inline void _2010a2e5c_pushImplemented(jule::Ptr<_20103287b_Trait> _283424_t, jule::Ptr<_20100a25a_Struct>* _283440_d) {
	_julec_label_push:;
	{
		
		if ((_283424_t.get()._field_Implemented.len() > 0LL)) {
			_case_begin_2053211e8:;
			{
				{
					auto expr = &(_283424_t.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_205321cba:;
					if (it != expr_end) {
						jule::Ptr<_20100a25a_Struct> _283816_s = *it;
						{
							if ((_283816_s == (*(_283440_d)))) {
								goto _match_end_205320cdb;
							};
						}
						_iter_next_205321cba:;
						++it;
						goto _iter_begin_205321cba;
					}
					_iter_end_205321cba:;
				};
				goto _case_begin_205320d52;
			}
		}
		else {
			_case_begin_205320d52:;
			{
				{ jule::Slice<jule::Ptr<_20100a25a_Struct>> &__jule_push_dest = _283424_t.get()._field_Implemented; __jule_push_dest.push((*(_283440_d))); };
			}
		}
		_match_end_205320cdb:;
	};
	{
		auto expr = &(_283424_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205322590:;
		if (it != expr_end) {
			jule::Ptr<_201137e9d_TypeSymbol> _284717_i = *it;
			{
				_2010a2e5c_pushImplemented(_201134ecd_Trait(_284717_i.get()._field_Kind.ptr()), _283440_d);
			}
			_iter_next_205322590:;
			++it;
			goto _iter_begin_205322590;
		}
		_iter_end_205322590:;
	};
}



inline void _2010a3215_pushImplements(jule::Ptr<_20100a25a_Struct>* _285224_s, jule::Ptr<_20103287b_Trait> _285240_t) {
	_julec_label_push:;
	{
		
		if (((*(_285224_s)).get()._field_Implements.len() > 0LL)) {
			_case_begin_205323915:;
			{
				{
					auto expr = &((*(_285224_s)).get()._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2053244d7:;
					if (it != expr_end) {
						jule::Ptr<_20103287b_Trait> _285616_b = *it;
						{
							if ((_285616_b == _285240_t)) {
								goto _match_end_205323508;
							};
						}
						_iter_next_2053244d7:;
						++it;
						goto _iter_begin_2053244d7;
					}
					_iter_end_2053244d7:;
				};
				goto _case_begin_20532356e;
			}
		}
		else {
			_case_begin_20532356e:;
			{
				{ jule::Slice<jule::Ptr<_20103287b_Trait>> &__jule_push_dest = (*(_285224_s)).get()._field_Implements; __jule_push_dest.push(_285240_t); };
			}
		}
		_match_end_205323508:;
	};
	{
		auto expr = &(_285240_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205324cac:;
		if (it != expr_end) {
			jule::Ptr<_201137e9d_TypeSymbol> _286517_i = *it;
			{
				_2010a3215_pushImplements(_285224_s, _201134ecd_Trait(_286517_i.get()._field_Kind.ptr()));
			}
			_iter_next_205324cac:;
			++it;
			goto _iter_begin_205324cac;
		}
		_iter_end_205324cac:;
	};
}



inline jule::Bool _2010d6325_traitHasReferenceReceiver(jule::Ptr<_20103287b_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20553d0c4:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_20553d0c4;
				};
				jule::Ptr<_20101dd1d_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_20101e66a_IsRef(_3313_p.ptr()) && _20101e406_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_20553d0c4:;
			++it;
			goto _iter_begin_20553d0c4;
		}
		_iter_end_20553d0c4:;
	};
	return false;;
}



inline jule::Bool _2010d65bc_floatAssignable(jule::Str _4120_kind, jule::Ptr<_2010edb23_Data>* _4132_d) {
	jule::Str _429_value = _1ee317338_FmtFloat(static_cast<jule::F64>(_1ee3401b8_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1ee331385_CheckBitFloat(_429_value, static_cast<jule::I32>(_1ee32ee77_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _2010d690d_sigAssignable(jule::Str _4618_kind, jule::Ptr<_2010edb23_Data>* _4630_d) {
	jule::F64 _479_min = _1ee336478_Min(_4618_kind);;
	jule::F64 _489_max = _1ee336720_Max(_4618_kind);;
	{
		
		if (_1ee341d24_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_205544031:;
			{
				jule::F64 _5113_x = _1ee33e97b_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1ee2dd210_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_1ee3415d7_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_205544619:;
			{
				jule::F64 _5813_x = _1ee3401b8_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_1ee341373_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_205544691:;
			{
				jule::F64 _6313_x = _1ee3401b8_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_2055444e8:;
	};
	return false;;
}



inline jule::Bool _2010d6c93_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_2010edb23_Data>* _6932_d) {
	jule::F64 _709_max = _1ee336720_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && _6920_kind.equal("u8", 2))) {
		return _2010bd1ec_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1ee33deca_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1ee341d24_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_20554891a:;
			{
				jule::F64 _7713_x = _1ee33e97b_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1ee2dd210_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_1ee3415d7_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_20554907a:;
			{
				jule::F64 _8713_x = _1ee3401b8_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_1ee341373_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_2055490e1:;
			{
				jule::F64 _9213_x = _1ee3401b8_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_2055489b4:;
	};
	return false;;
}



inline jule::Bool _2010d70d4_intAssignable(jule::Str _9818_kind, jule::Ptr<_2010edb23_Data>* _9830_d) {
	{
		
		if (_1ee33b648_IsSigInt(_9818_kind)) {
			_case_begin_20554cde7:;
			{
				return _2010d690d_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_1ee33b934_IsUnsigInt(_9818_kind)) {
			_case_begin_20554ce5d:;
			{
				return _2010d6c93_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_2055496eb:;
			{
				return false;;
			}
		}
		_match_end_20554cb2d:;
	};
}



inline jule::Ptr<_2011310ea_TypeKind> _2010e8007_lenKind(void) {
	return _2011e618d_primInt;;
}



inline jule::Bool _2010e829e_isGoodValueToInfer(jule::Ptr<_2010edb23_Data>* _138224_d) {
	return (!(_2010edeb9_IsNil((*(_138224_d)).ptr())));;
}



inline jule::Ptr<_200d472d9_Directive> _20112a15a_findDirective(jule::Slice<jule::Ptr<_200d472d9_Directive>>* _422623_directives, jule::Str _422654_d) {
	{
		auto expr = _422623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205656363:;
		if (it != expr_end) {
			jule::Ptr<_200d472d9_Directive> _422717_dr = *it;
			{
				if ((_422717_dr.get()._field_Tag.get()._field_Kind == _422654_d)) {
					return _422717_dr;;
				};
			}
			_iter_next_205656363:;
			++it;
			goto _iter_begin_205656363;
		}
		_iter_end_205656363:;
	};
	return nullptr;;
}



inline jule::Any _20112a4e0_findBuiltinsImport(jule::Str _423523_ident, jule::Ptr<_20107b397_ImportInfo> _423535_imp) {
	return _2011e9625_findPackageBuiltinDef(_423535_imp.get()._field_LinkPath, _423523_ident);;
}



inline void _20112a6ee_fitBitsize(jule::Ptr<_2010edb23_Data>* _424220_d) {
	jule::Ptr<_201138850_Prim> _424313_prim = _201133817_Prim((*(_424220_d)).get()._field_Kind.ptr());;
	jule::I32 _42449_z = _1ee32ee77_BitsizeOf(_201138b80_Str(_424313_prim.ptr()));;
	if ((_42449_z == 64LLU)) {
		return;;
	};
	jule::I32 _424913_k = 0LL;;
	{
		
		if (_1ee341373_IsI64((*(_424220_d)).get()._field_Constant.ptr())) {
			_case_begin_205658cc2:;
			{
				_424913_k=static_cast<jule::I32>(_1ee3318c4_BitsizeOfInt(static_cast<jule::I64>(_1ee33deca_ReadI64((*(_424220_d)).get()._field_Constant.ptr()))));
				if ((_424913_k > _42449_z)) {
					(*(_424220_d)).get()._field_Constant.get()._field_Kind=_1ee330296_IntFromBits(_424913_k);
					(*(_424220_d)).get()._field_Kind=_2011e847b_findBuiltinTypeAlias((*(_424220_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_1ee3415d7_IsU64((*(_424220_d)).get()._field_Constant.ptr())) {
			_case_begin_205658d49:;
			{
				_424913_k=static_cast<jule::I32>(_1ee331b6b_BitsizeOfUint(static_cast<jule::U64>(_1ee33e23e_ReadU64((*(_424220_d)).get()._field_Constant.ptr()))));
				if ((_424913_k > _42449_z)) {
					(*(_424220_d)).get()._field_Constant.get()._field_Kind=_1ee33053d_UintFromBits(_424913_k);
					(*(_424220_d)).get()._field_Kind=_2011e847b_findBuiltinTypeAlias((*(_424220_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_1ee341d24_IsF64((*(_424220_d)).get()._field_Constant.ptr())) {
			_case_begin_205658dc1:;
			{
				_424913_k=static_cast<jule::I32>(_1ee33162c_BitsizeOfFloat(static_cast<jule::F64>(_1ee33e97b_ReadF64((*(_424220_d)).get()._field_Constant.ptr()))));
				if ((_424913_k > _42449_z)) {
					(*(_424220_d)).get()._field_Constant.get()._field_Kind=_1ee3307d5_FloatFromBits(_424913_k);
					(*(_424220_d)).get()._field_Kind=_2011e847b_findBuiltinTypeAlias((*(_424220_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		_match_end_205658c06:;
	};
}



inline void _20112a9eb_makeStructLitAlloc(jule::Ptr<_2010edb23_Data>* _427228_d, jule::Ptr<_201013142_StructLitExprModel>* _427243_lit) {
	(*(_427228_d)).get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20113c0a1_Sptr>(_20113c0a1_Sptr{._field_Elem=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>((*(_427243_lit)).get()._field_Strct, 0)})}), 21)});
	(*(_427228_d)).get()._field_Model=jule::Any(jule::new_ptr<_201013450_AllocStructLitExprModel>(_201013450_AllocStructLitExprModel{._field_Lit=(*(_427243_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_2010a4975_Var> _20112ad3c_buildErrorVar(jule::Ptr<_20105c92d_Scope>* _428323_s, jule::Ptr<_200ee374e_FnCallExpr>* _428339_fc) {
	return jule::new_ptr<_2010a4975_Var>(_2010a4975_Var{._field_Scope=(*(_428323_s)), ._field_Token=(*(_428339_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=_2011e847b_findBuiltinTypeAlias(jule::Str("any", 3)).get()._field_Kind, ._field_Value=jule::new_ptr<_2010eeb9b_Value>(_2010eeb9b_Value{._field_Data=jule::new_ptr<_2010edb23_Data>()}), });;
}



inline jule::Any _20112b17d_findBuiltinsSema(jule::Str _429821_ident, jule::Ptr<_201084669_Sema> _429837_s) {
	{
		auto expr = &(_429837_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2056608bc:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _429917_imp = *it;
			{
				if ((_429917_imp.get()._field_ImportAll || _20107d94e_existIdent(_429917_imp.ptr(), _429821_ident))) {
					jule::Any _430121_def = _20112a4e0_findBuiltinsImport(_429821_ident, _429917_imp);;
					if ((_430121_def != nullptr)) {
						return _430121_def;;
					};
				};
			}
			_iter_next_2056608bc:;
			++it;
			goto _iter_begin_2056608bc;
		}
		_iter_end_2056608bc:;
	};
	jule::Str _430913_ppath = _1ed69a854_Dir(_429837_s.get()._field_file.get()._field_File.ptr());;
	if (_219318297_HasPrefix(_430913_ppath, _21ab64718_PathStdlib)) {
		(_430913_ppath).mut_slice(_21ab64718_PathStdlib.len());;
		_430913_ppath=(jule::Str("std", 3) + _21931e28c_Replace(_430913_ppath, jule::Str("\\", 1), jule::Str("::", 2), -1LL));
		return _2011e9625_findPackageBuiltinDef(_430913_ppath, _429821_ident);;
	};
	return nullptr;;
}



inline jule::Bool _20112b425_isOkForShifting(jule::Ptr<_2010edb23_Data>* _432325_d) {
	if (_2010ee492_IsConst((*(_432325_d)).ptr())) {
		{
			
			if (_1ee341373_IsI64((*(_432325_d)).get()._field_Constant.ptr())) {
				_case_begin_20566398b:;
				{
					return (_1ee33deca_ReadI64((*(_432325_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1ee3415d7_IsU64((*(_432325_d)).get()._field_Constant.ptr())) {
				_case_begin_205663a02:;
				{
					return true;;
				}
			}
			else if (_1ee341d24_IsF64((*(_432325_d)).get()._field_Constant.ptr())) {
				_case_begin_205663a68:;
				{
					return (_1ee33e97b_ReadF64((*(_432325_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_205663925:;
				{
					return false;;
				}
			}
			_match_end_205662858:;
		};
	};
	jule::Ptr<_201138850_Prim> _43369_prim = _201133817_Prim((*(_432325_d)).get()._field_Kind.ptr());;
	return ((_43369_prim != nullptr) && _1ee33bbcb_IsInt(_201138b80_Str(_43369_prim.ptr())));;
}



inline jule::Bool _20112b7cc_isInstancedStruct(jule::Ptr<_20100d071_StructIns> _434022_s) {
	return (_434022_s.get()._field_Decl.get()._field_Generics.len() == _434022_s.get()._field_Generics.len());;
}



inline jule::Bool _20112bb40_isPtrArithmeticCompatible(jule::Ptr<_2010edb23_Data>* _434435_l, jule::Ptr<_2010edb23_Data>* _434450_r) {
	jule::Ptr<_201140615_Ptr> _43459_ptr = _201133ce0_Ptr((*(_434450_r)).get()._field_Kind.ptr());;
	if ((_43459_ptr != nullptr)) {
		return _2011317b0_Equal(_201133ce0_Ptr((*(_434435_l)).get()._field_Kind.ptr()).get()._field_Elem, _43459_ptr.get()._field_Elem);;
	};
	if (_2010ee492_IsConst((*(_434450_r)).ptr())) {
		return _2010d70d4_intAssignable(jule::Str("int", 3), _434450_r);;
	};
	_2010d758a_typeCompatibilityChecker _435213_tcc = _2010d758a_typeCompatibilityChecker{._field_dest=_2011e618d_primInt, ._field_src=(*(_434450_r)).get()._field_Kind, };;
	return _2010d8b30_check(&_435213_tcc);;
}



inline void _20112bd82_applyCastKindModel(jule::Ptr<_2010edb23_Data>* _435928_d, jule::Ptr<_2011310ea_TypeKind>* _435943_t) {
	(*(_435928_d)).get()._field_Model=jule::Any(jule::new_ptr<_2010139a0_CastingExprModel>(_2010139a0_CastingExprModel{._field_Expr=(*(_435928_d)).get()._field_Model, ._field_Kind=(*(_435943_t)), ._field_ExprKind=(*(_435928_d)).get()._field_Kind}), &__jule_any_type98);
}



inline void _20112c13a_applyCastKind(jule::Ptr<_2010edb23_Data>* _436723_d, jule::Ptr<_2011310ea_TypeKind>* _436738_t) {
	_20112bd82_applyCastKindModel(_436723_d, _436738_t);
	(*(_436723_d)).get()._field_Kind=(*(_436738_t));
}



inline jule::Ptr<_2010edb23_Data> _20112c338_buildVoidData(void) {
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e4e5b_primVoid, });;
}



inline jule::Str _20112c602_checkDataForIntegerIndexing(jule::Ptr<_2010edb23_Data>* _437837_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_437837_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_201133817_Prim((*(_437837_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_20566a6da:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1ee33bbcb_IsInt(_201138b80_Str(_201133817_Prim((*(_437837_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_20566a751:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_2010ee492_IsConst((*(_437837_d)).ptr())) {
			_case_begin_20566a7b7:;
			{
				if ((_1ee3401b8_AsF64((*(_437837_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_201133817_Prim((*(_437837_d)).get()._field_Kind.ptr()) == nullptr) || _2010ee492_IsConst((*(_437837_d)).ptr()) || (_1ee32ebd0_RealKindOf(_201138b80_Str(_201133817_Prim((*(_437837_d)).get()._field_Kind.ptr()).ptr())) != _1ee32ebd0_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_20566a83e:;
			{
				_20112c13a_applyCastKind(_437837_d, &(_2011e618d_primInt));
			}
		}
		_match_end_20566a300:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _20112c8bb_applyCastModelByEnum(jule::Ptr<_2010edb23_Data>* _440330_d, jule::Ptr<_20103510e_Enum> _440344_e) {
	if ((_440344_e == nullptr)) {
		return;;
	};
	jule::Ptr<_201138850_Prim> _44079_p = _201133817_Prim(_440344_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_20113ba51_IsStr(_44079_p.ptr())) {
		return;;
	};
	_20112bd82_applyCastKindModel(_440330_d, &(_440344_e.get()._field_Kind.get()._field_Kind));
}



inline void _20112cb74_castConstByType(jule::Str* _441421_t, jule::Ptr<_2010edb23_Data>* _441434_d) {
	{
		
		if (_1ee33b648_IsSigInt((*(_441421_t)))) {
			_case_begin_20566ed71:;
			{
				{
					auto _match_expr{ _1ee32ee77_BitsizeOf(_1ee32ebd0_RealKindOf((*(_441421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_2056709ba:;
						{
							_1ee34043d_SetI64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ee33ebe0_AsI64((*(_441434_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_205670a42:;
						{
							_1ee34043d_SetI64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1ee33ebe0_AsI64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_205670aa8:;
						{
							_1ee34043d_SetI64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1ee33ebe0_AsI64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_205670b1e:;
						{
							_1ee34043d_SetI64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1ee33ebe0_AsI64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_205670107:;
				};
			}
		}
		else if (_1ee33b934_IsUnsigInt((*(_441421_t)))) {
			_case_begin_20566ede8:;
			{
				{
					auto _match_expr{ _1ee32ee77_BitsizeOf(_1ee32ebd0_RealKindOf((*(_441421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_205673825:;
						{
							_1ee3406b3_SetU64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ee33ee54_AsU64((*(_441434_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_2056738ad:;
						{
							_1ee3406b3_SetU64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1ee33ee54_AsU64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_205673924:;
						{
							_1ee3406b3_SetU64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1ee33ee54_AsU64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_20567398a:;
						{
							_1ee3406b3_SetU64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1ee33ee54_AsU64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_2056702e4:;
				};
			}
		}
		else if (_1ee33beea_IsFloat((*(_441421_t)))) {
			_case_begin_20566ee70:;
			{
				{
					auto _match_expr{ _1ee32ee77_BitsizeOf(_1ee32ebd0_RealKindOf((*(_441421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_20567665d:;
						{
							_1ee340e33_SetF64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1ee3401b8_AsF64((*(_441434_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_205676718:;
						{
							_1ee340e33_SetF64((*(_441434_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1ee3401b8_AsF64((*(_441434_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_205670415:;
				};
			}
		}
		_match_end_20566ec50:;
	};
}



inline void _20112d180_updateModelToGenericIns(jule::Any* _444833_m, jule::Ptr<_20102330b_FnIns>* _444852_f) {
	{
		auto &_match_expr{ (*(_444833_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_20567696b:;
			{
				(*(_444833_m))=jule::Any((*(_444852_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_2056769d2:;
			{
				(*(_444833_m)).cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_444852_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_205676a48:;
			{
				(*(_444833_m)).cast_ptr<_201017069_StructStaticIdentExprModel>(&__jule_any_type101).get()._field_Method=(*(_444852_f));
			}
		}
		_match_end_205675b68:;
	};
}



inline jule::Bool _20112d3c2_pushSubIdentFromExpr(jule::Any _445929_expr, jule::Ptr<_200edb060_SubIdentTypeDecl>* _445950_t) {
	{
		auto &_match_expr{ _445929_expr };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_205678286:;
			{
				jule::Ptr<_200ee142d_IdentExpr> _446217_e = _445929_expr.cast_ptr<_200ee142d_IdentExpr>(&__jule_any_type85);;
				{ jule::Slice<jule::Ptr<_200edac74_IdentTypeDecl>> &__jule_push_dest = (*(_445950_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_200edac74_IdentTypeDecl>(_200edac74_IdentTypeDecl{._field_Token=_446217_e.get()._field_Token, ._field_Ident=_446217_e.get()._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_2056797a4:;
			{
				jule::Ptr<_200ee2bc1_SubIdentExpr> _446817_e = _445929_expr.cast_ptr<_200ee2bc1_SubIdentExpr>(&__jule_any_type91);;
				if ((!(_20112d3c2_pushSubIdentFromExpr(_446817_e.get()._field_Expr.get()._field_Kind, _445950_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_200edac74_IdentTypeDecl>> &__jule_push_dest = (*(_445950_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_200edac74_IdentTypeDecl>(_200edac74_IdentTypeDecl{._field_Token=_446817_e.get()._field_Ident, ._field_Ident=_446817_e.get()._field_Ident.get()._field_Kind, })); };
			}
		}
		else {
			_case_begin_205679276:;
			{
				return false;;
			}
		}
		_match_end_205679221:;
	};
	return true;;
}



inline jule::Str _20112d669_constoa(jule::Ptr<_1ee33c6d2_Const>* _448213_c) {
	{
		
		if (_1ee341373_IsI64((*(_448213_c)).ptr())) {
			_case_begin_20567c642:;
			{
				return _1ee32ca68_FmtInt(static_cast<jule::I64>(_1ee33deca_ReadI64((*(_448213_c)).ptr())), 10LL);;
			}
		}
		else if (_1ee3415d7_IsU64((*(_448213_c)).ptr())) {
			_case_begin_20567b9e8:;
			{
				return _1ee32c6d3_FmtUint(static_cast<jule::U64>(_1ee33e23e_ReadU64((*(_448213_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_205679b17:;
			{
				return jule::Str();;
			}
		}
		_match_end_20567981a:;
	};
}



inline jule::Ptr<_2010edb23_Data> _20112d9aa_evalEnumStatic(jule::Ptr<_20103510e_Enum>* _449324_enm, jule::Ptr<_201034619_EnumItem>* _449341_item) {
	jule::Ptr<_2010edb23_Data> _449413_d = jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>((*(_449324_enm)), 3)}), });;
	if (((*(_449341_item)) != nullptr)) {
		_449413_d.get()._field_Constant=jule::new_ptr<_1ee33c6d2_Const>((*((*(_449341_item)).get()._field_Value.get()._field_Data.get()._field_Constant)));
		_449413_d.get()._field_Model=jule::Any(_449413_d.get()._field_Constant, &__jule_any_type19);
		_20112c8bb_applyCastModelByEnum(&(_449413_d), (*(_449324_enm)));
	};
	return _449413_d;;
}



inline jule::Bool _20114a4aa_kindUsesGenerics(jule::Ptr<_2011310ea_TypeKind>* _173326_k, jule::Slice<jule::Ptr<_200ee7654_GenericDecl>>* _173341_generics) {
	{
		auto expr = _173341_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20598ac3b:;
		if (it != expr_end) {
			jule::Ptr<_200ee7654_GenericDecl> *_173412_g = it;
			{
				if (static__20114a0ae_exist(&((*(_173412_g)).get()._field_Ident), _173326_k)) {
					return true;;
				};
			}
			_iter_next_20598ac3b:;
			++it;
			goto _iter_begin_20598ac3b;
		}
		_iter_end_20598ac3b:;
	};
	return false;;
}



inline jule::Bool _20114a840_hasDirective(jule::Slice<jule::Ptr<_200d472d9_Directive>>* _174322_directives, jule::Str _174353_tag) {
	{
		auto expr = _174322_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20598b258:;
		if (it != expr_end) {
			jule::Ptr<_200d472d9_Directive> _174417_dr = *it;
			{
				if ((_174417_dr.get()._field_Tag.get()._field_Kind == _174353_tag)) {
					return true;;
				};
			}
			_iter_next_20598b258:;
			++it;
			goto _iter_begin_20598b258;
		}
		_iter_end_20598b258:;
	};
	return false;;
}



inline jule::Bool _20114aad7_canGetPtr(jule::Ptr<_2010edb23_Data>* _175219_d) {
	if (((!((*(_175219_d)).get()._field_Lvalue)) || _2010ee492_IsConst((*(_175219_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_201134a05_Fn((*(_175219_d)).get()._field_Kind.ptr()) != nullptr) || (_201134054_Enum((*(_175219_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_20598d090:;
			{
				return false;;
			}
		}
		else {
			_case_begin_20598d029:;
			{
				return true;;
			}
		}
		_match_end_20598bee5:;
	};
}



inline jule::Bool _20114ae06_isValidForSptrType(jule::Ptr<_2011310ea_TypeKind>* _176528_t) {
	jule::Ptr<_20100d071_StructIns> _176613_s = _201134c69_Struct((*(_176528_t)).ptr());;
	if ((((_176613_s != nullptr) && (_176613_s.get()._field_Decl != nullptr)) && _176613_s.get()._field_Decl.get()._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _20114b19d_isValidForRef(jule::Ptr<_2011310ea_TypeKind>* _177423_t) {
	return (_201134a05_Fn((*(_177423_t)).ptr()) == nullptr);;
}



inline jule::Bool _20114b467_isBuiltinStrConvertable(jule::Ptr<_2011310ea_TypeKind>* _177733_t) {
	return ((((!(_2011323b5_Void((*(_177733_t)).ptr()))) && (_201134a05_Fn((*(_177733_t)).ptr()) == nullptr)) && (_2011354a6_Tup((*(_177733_t)).ptr()) == nullptr)) && (!(_20113571a_comptime((*(_177733_t)).ptr()))));;
}



inline jule::Str _20114b6dc_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _178127_tokens) {
	jule::Str _178213_s = (*(_178127_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_178127_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_20599213d:;
		if (it != expr_end) {
			jule::Ptr<_1ed694d8c_Token> *_178312_token = it;
			{
				(_178213_s).append("::", 2);
				_178213_s+=(*(_178312_token)).get()._field_Kind;
			}
			_iter_next_20599213d:;
			++it;
			goto _iter_begin_20599213d;
		}
		_iter_end_20599213d:;
	};
	return _178213_s;;
}



inline jule::Ptr<_201138850_Prim> _20114ba94_buildPrimType(jule::Str _179018_kind) {
	return jule::new_ptr<_201138850_Prim>(_201138850_Prim{._field_Kind=_179018_kind});;
}



inline jule::Ptr<_20100a25a_Struct> _20114bd3b_getStructFromKind(jule::Ptr<_2011310ea_TypeKind> _179626_k) {
	{
		
		if ((_179626_k == nullptr)) {
			_case_begin_20599320a:;
			{
				return nullptr;;
			}
		}
		else if ((_201134c69_Struct(_179626_k.ptr()) != nullptr)) {
			_case_begin_205993271:;
			{
				return _201134c69_Struct(_179626_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_201133a7b_Sptr(_179626_k.ptr()) != nullptr)) {
			_case_begin_2059932d7:;
			{
				return _20114bd3b_getStructFromKind(_201133a7b_Sptr(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_201134791_Slc(_179626_k.ptr()) != nullptr)) {
			_case_begin_20599334d:;
			{
				return _20114bd3b_getStructFromKind(_201134791_Slc(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_20113452c_Arr(_179626_k.ptr()) != nullptr)) {
			_case_begin_2059935c3:;
			{
				return _20114bd3b_getStructFromKind(_20113452c_Arr(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_201133ce0_Ptr(_179626_k.ptr()) != nullptr)) {
			_case_begin_205993639:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_205992858:;
			{
				return nullptr;;
			}
		}
		_match_end_20599278c:;
	};
}



inline void _20114c0e4_applyImplicitCast(jule::Ptr<_2011310ea_TypeKind>* _181827_dest, jule::Ptr<_2010edb23_Data>* _181849_d) {
	if (_201132151_IsNil((*(_181849_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_201138850_Prim> _18229_destPrim = _201133817_Prim((*(_181827_dest)).ptr());;
	jule::Ptr<_201138850_Prim> _18239_prim = _201133817_Prim((*(_181849_d)).get()._field_Kind.ptr());;
	if ((_18229_destPrim != nullptr)) {
		if (_20113bcb5_IsAny(_18229_destPrim.ptr())) {
			if (((_18239_prim == nullptr) || (!(_20113bcb5_IsAny(_18239_prim.ptr()))))) {
				_20112c13a_applyCastKind(_181849_d, _181827_dest);
			};
			return;;
		};
		if (((((((!(_201131ddc_Binded((*(_181849_d)).get()._field_Kind.ptr()))) && (!((*(_181849_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_181849_d)).get()._field_Lvalue))) && (!(_2010ee492_IsConst((*(_181849_d)).ptr())))) && (_18239_prim != nullptr)) && _1ee33c292_IsNum(_18239_prim.get()._field_Kind))) {
			_20112c13a_applyCastKind(_181849_d, _181827_dest);
		};
		return;;
	};
	jule::Ptr<_20103287b_Trait> _18429_dt = _201134ecd_Trait((*(_181827_dest)).ptr());;
	if ((_18429_dt != nullptr)) {
		jule::Ptr<_20103287b_Trait> _184413_bt = _201134ecd_Trait((*(_181849_d)).get()._field_Kind.ptr());;
		if (((_184413_bt == nullptr) || (_184413_bt != _18429_dt))) {
			_20112bd82_applyCastKindModel(_181849_d, _181827_dest);
			return;;
		};
	};
	if (((_2011342b8_TypeEnum((*(_181827_dest)).ptr()) != nullptr) && (_2011342b8_TypeEnum((*(_181849_d)).get()._field_Kind.ptr()) == nullptr))) {
		_20112bd82_applyCastKindModel(_181849_d, _181827_dest);
		return;;
	};
}



inline jule::Bool _20114c38b_validTypeForXof(jule::Ptr<_2011310ea_TypeKind>* _185725_t) {
	return ((!(_2011323b5_Void((*(_185725_t)).ptr()))) && (_201134a05_Fn((*(_185725_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_2010e9118_SymbolTable__jule_tuple_s_2193a460d_Log _20115013b_buildSymbols(jule::Ptr<_200d46041_Ast>* _1622_ast, jule::Trait<_2010786e6_Importer>* _1638_importer, jule::Ptr<_20102bcd7_symbolBuilder> _1662_owner) {
	__jule_tuple_x_2010e9118_SymbolTable__jule_tuple_s_2193a460d_Log __jule_func_result;
	jule::Ptr<_20102bcd7_symbolBuilder> _1713_sb = jule::new_ptr<_20102bcd7_symbolBuilder>(_20102bcd7_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_201031c43_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_20107ded2_Package__jule_tuple_s_2193a460d_Log _20115056a_analyzePackage(jule::Slice<jule::Ptr<_200d46041_Ast>>* _3024_files, jule::Trait<_2010786e6_Importer>* _3044_importer, jule::I32* _3065_flags) {
	__jule_tuple_x_20107ded2_Package__jule_tuple_s_2193a460d_Log __jule_func_result;
	jule::Slice<jule::Ptr<_2010e9118_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_2010e9118_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205a99531:;
		if (it != expr_end) {
			jule::Ptr<_200d46041_Ast> _3317_f = *it;
			{
				jule::Ptr<_2010e9118_SymbolTable> _3418_table;;
				jule::Slice<_2193a460d_Log> _3429_errors;;
				({
					__jule_tuple_x_2010e9118_SymbolTable__jule_tuple_s_2193a460d_Log __jule_assign_result = _20115013b_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_2010e9118_SymbolTable>> &__jule_push_dest = _3213_tables; __jule_push_dest.push(_3418_table); };
			}
			_iter_next_205a99531:;
			++it;
			goto _iter_begin_205a99531;
		}
		_iter_end_205a99531:;
	};
	jule::Ptr<_201084669_Sema> _4113_sema = jule::new_ptr<_201084669_Sema>(_201084669_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_201083b52_commonSemaMeta>()});;
	_2010a1323_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_20107ded2_Package> _5013_pkg = jule::new_ptr<_20107ded2_Package>(_20107ded2_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _5013_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_20107ded2_Package__jule_tuple_s_2193a460d_Log _201150955_AnalyzePackage(jule::Slice<jule::Ptr<_200d46041_Ast>> _7423_files, jule::Trait<_2010786e6_Importer> _7442_importer, jule::I32 _7462_flags) {
	__jule_tuple_x_20107ded2_Package__jule_tuple_s_2193a460d_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_20107ded2_Package> _7814_package;;
	jule::Slice<_2193a460d_Log> _7827_logs;;
	({
		__jule_tuple_x_20107ded2_Package__jule_tuple_s_2193a460d_Log __jule_assign_result = _20115056a_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_7814_package = __jule_assign_result.__jule_result_arg0;
		_7827_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7814_package;
	__jule_func_result.__jule_result_arg1 = _7827_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_20102330b_FnIns> _2011e492d_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_205aa3628:;
			{
				static jule::Ptr<_20102330b_FnIns> _2620_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2011eaa44_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_205aa247e:;
			{
				static jule::Ptr<_20102330b_FnIns> _2920_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2011eae2e_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_205aa36e4:;
			{
				static jule::Ptr<_20102330b_FnIns> _3220_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2011eb54a_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_205aa375a:;
			{
				static jule::Ptr<_20102330b_FnIns> _3520_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2011eb935_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_205aa322c:;
			{
				static jule::Ptr<_20102330b_FnIns> _3820_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2011ebd20_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_205aa32a4:;
			{
				static jule::Ptr<_20102330b_FnIns> _4120_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2011ec20a_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_205aa332b:;
			{
				static jule::Ptr<_20102330b_FnIns> _4420_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2011ed00d_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_205aa33a3:;
			{
				static jule::Ptr<_20102330b_FnIns> _4720_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2011ee54d_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_205aa37d2:;
			{
				static jule::Ptr<_20102330b_FnIns> _5020_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2012000ba_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_205aa3859:;
			{
				static jule::Ptr<_20102330b_FnIns> _5320_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_201200a6b_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_205aa38d1:;
			{
				static jule::Ptr<_20102330b_FnIns> _5620_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_201200e56_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_205aa3958:;
			{
				static jule::Ptr<_20102330b_FnIns> _5920_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_201201341_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_205aa312d:;
			{
				return nullptr;;
			}
		}
		_match_end_205aa2eeb:;
	};
}



inline jule::Ptr<_2011303a2_TypeAlias> _2011e4b5e_primTypeAlias(jule::Ptr<_2011310ea_TypeKind>* _6623_k) {
	return jule::new_ptr<_2011303a2_TypeAlias>(_2011303a2_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_201137e9d_TypeSymbol>(_201137e9d_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_2011303a2_TypeAlias> _2011e847b_findBuiltinTypeAlias(jule::Str _9325_ident) {
	{
		auto &_match_expr{ _9325_ident };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_205aa984e:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _9620_t = _2011e4b5e_primTypeAlias(&(_2011e5269_primAny));;
				return _9620_t;;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_205aaabc4:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _9920_t = _2011e4b5e_primTypeAlias(&(_2011e5533_primStr));;
				return _9920_t;;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_205aaac3a:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _10220_t = _2011e4b5e_primTypeAlias(&(_2011e5841_primBool));;
				return _10220_t;;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_205aaa773:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _10520_t = _2011e4b5e_primTypeAlias(&(_2011e5b0a_primUintptr));;
				return _10520_t;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_205aaa7d9:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _10820_t = _2011e4b5e_primTypeAlias(&(_2011e5dc4_primUint));;
				return _10820_t;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_205aaa850:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _11120_t = _2011e4b5e_primTypeAlias(&(_2011e618d_primInt));;
				return _11120_t;;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_205aaa8b6:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _11420_t = _2011e4b5e_primTypeAlias(&(_2011e6567_primI8));;
				return _11420_t;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_205aaaca1:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _11720_t = _2011e4b5e_primTypeAlias(&(_2011e6831_primI16));;
				return _11720_t;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_205aaad17:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _12020_t = _2011e4b5e_primTypeAlias(&(_2011e6db4_primI64));;
				return _12020_t;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_205aaad7d:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _12320_t = _2011e4b5e_primTypeAlias(&(_2011e7447_primU16));;
				return _12320_t;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_205aaae05:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _12620_t = _2011e4b5e_primTypeAlias(&(_2011e7711_primU32));;
				return _12620_t;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_205aaae7c:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _12920_t = _2011e4b5e_primTypeAlias(&(_2011e79ca_primU64));;
				return _12920_t;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_205aab004:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _13220_t = _2011e4b5e_primTypeAlias(&(_2011e7e4d_primF32));;
				return _13220_t;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_205aab07b:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _13520_t = _2011e4b5e_primTypeAlias(&(_2011e8217_primF64));;
				return _13520_t;;
			}
		}
		else if (_match_expr == jule::Str("byte", 4) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_205aab103:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _13820_t = _2011e4b5e_primTypeAlias(&(_2011e717d_primU8));;
				return _13820_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4) || _match_expr == jule::Str("i32", 3)) {
			_case_begin_205aab17a:;
			{
				static jule::Ptr<_2011303a2_TypeAlias> _14120_t = _2011e4b5e_primTypeAlias(&(_2011e6aea_primI32));;
				return _14120_t;;
			}
		}
		else {
			_case_begin_205aaa102:;
			{
				return nullptr;;
			}
		}
		_match_end_205aaa09c:;
	};
}



inline jule::Any _2011e868a_findBuiltinDef(jule::Str _14819_ident) {
	jule::Ptr<_20102330b_FnIns> _14913_f = _2011e492d_findBuiltinFn(_14819_ident);;
	if ((_14913_f != nullptr)) {
		return jule::Any(_14913_f, &__jule_any_type7);;
	};
	jule::Ptr<_2011303a2_TypeAlias> _15313_ta = _2011e847b_findBuiltinTypeAlias(_14819_ident);;
	if ((_15313_ta != nullptr)) {
		return jule::Any(_15313_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _2011e8932_findBuiltinDefStdDebug(jule::Str _16027_ident) {
	{
		auto &_match_expr{ _16027_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_205ab53a4:;
			{
				static jule::Ptr<_20102330b_FnIns> _16320_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_201204a81_builtinCallerStdDebugOut), });;
				return jule::Any(_16320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_205ab541a:;
			{
				static jule::Ptr<_20102330b_FnIns> _16620_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_201204e6b_builtinCallerStdDebugOutln), });;
				return jule::Any(_16620_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_205ab4a24:;
			{
				return nullptr;;
			}
		}
		_match_end_205ab4936:;
	};
}



inline jule::Any _2011e8bc9_findBuiltinDefStdMem(jule::Str _17325_ident) {
	{
		auto &_match_expr{ _17325_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_205ab6ae2:;
			{
				static jule::Ptr<_20102330b_FnIns> _17620_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2012034a8_builtinCallerStdMemSizeOf), });;
				return jule::Any(_17620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_205ab6b58:;
			{
				static jule::Ptr<_20102330b_FnIns> _17920_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2012038c6_builtinCallerStdMemAlignOf), });;
				return jule::Any(_17920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_205ab6916:;
			{
				static jule::Ptr<_20102330b_FnIns> _18220_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_201203ce4_builtinCallerStdMemFree), });;
				return jule::Any(_18220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_205ab66e6:;
			{
				return nullptr;;
			}
		}
		_match_end_205ab54d6:;
	};
}



inline jule::Any _2011e8e93_findBuiltinDefStdComptime(jule::Str _18930_ident) {
	{
		auto &_match_expr{ _18930_ident };
		
		if (_match_expr == jule::Str("TypeOf", 6)) {
			_case_begin_205ab8bc1:;
			{
				static jule::Ptr<_20102330b_FnIns> _19220_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_20120174d_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_19220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("ValueOf", 7)) {
			_case_begin_205ab89e5:;
			{
				static jule::Ptr<_20102330b_FnIns> _19520_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_201201b6b_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_19520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Range", 5)) {
			_case_begin_205ab8a5b:;
			{
				static jule::Ptr<_20102330b_FnIns> _19820_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_201202331_builtinCallerStdComptimeRange), });;
				return jule::Any(_19820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Line", 4)) {
			_case_begin_205ab8ac2:;
			{
				static jule::Ptr<_20102330b_FnIns> _20120_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_20120274e_builtinCallerStdComptimeLine), });;
				return jule::Any(_20120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("File", 4)) {
			_case_begin_205ab4dba:;
			{
				static jule::Ptr<_20102330b_FnIns> _20420_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_201202b6c_builtinCallerStdComptimeFile), });;
				return jule::Any(_20420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Files", 5)) {
			_case_begin_205ab4e31:;
			{
				static jule::Ptr<_20102330b_FnIns> _20720_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_20120308a_builtinCallerStdComptimeFiles), });;
				return jule::Any(_20720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_205ab87c5:;
			{
				return nullptr;;
			}
		}
		_match_end_205ab6c24:;
	};
}



inline jule::Any _2011e934a_findBuiltinDefStdJuleIntegrated(jule::Str _21436_ident) {
	{
		auto &_match_expr{ _21436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_205abc873:;
			{
				static jule::Ptr<_20102330b_FnIns> _21720_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_201204223_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_21720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_205abc8d9:;
			{
				static jule::Ptr<_20102330b_FnIns> _22020_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_Decl=jule::new_ptr<_20102065a_Fn>(_20102065a_Fn{._field_Generics=jule::Slice<jule::Ptr<_200ee7654_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_201204641_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_22020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_205abc2ce:;
			{
				return nullptr;;
			}
		}
		_match_end_205abc488:;
	};
}



inline jule::Any _2011e9625_findPackageBuiltinDef(jule::Str _23226_link_path, jule::Str _23242_ident) {
	{
		auto &_match_expr{ _23226_link_path };
		
		if (_match_expr == jule::Str("std::comptime", 13)) {
			_case_begin_205abe655:;
			{
				return _2011e8e93_findBuiltinDefStdComptime(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_205abe6bb:;
			{
				return _2011e8932_findBuiltinDefStdDebug(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_205abe479:;
			{
				return _2011e8bc9_findBuiltinDefStdMem(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_205abe4e0:;
			{
				return _2011e934a_findBuiltinDefStdJuleIntegrated(_23242_ident);;
			}
		}
		else {
			_case_begin_205ab8c9d:;
			{
				return nullptr;;
			}
		}
		_match_end_205abc950:;
	};
}



inline jule::Ptr<_2010edb23_Data> _2011e9a32_builtinCallerCommonPlain(jule::Ptr<_201100691_Eval>* _24734_e, jule::Ptr<_200ee374e_FnCallExpr>* _24749_fc, jule::Ptr<_2010edb23_Data>* _24771_d) {
	jule::Ptr<_20102330b_FnIns> _24813_f = _201134a05_Fn((*(_24771_d)).get()._field_Kind.ptr());;
	_2010e0593_fnCallArgChecker _25013_fcac = _2010e0593_fnCallArgChecker{._field_e=(*(_24734_e)), ._field_args=(*(_24749_fc)).get()._field_Args, ._field_errorToken=(*(_24749_fc)).get()._field_Token, ._field_f=_24813_f, ._field_dynamicAnnotation=false, };;
	if ((!(_2010e292a_check(&_25013_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_201014352_FnCallExprModel> _26113_model = jule::new_ptr<_201014352_FnCallExprModel>(_201014352_FnCallExprModel{._field_Token=(*(_24749_fc)).get()._field_Token, ._field_Func=_24813_f, ._field_Expr=(*(_24771_d)).get()._field_Model, ._field_Args=_25013_fcac._field_argModels, });;
	if ((_24813_f.get()._field_Result == nullptr)) {
		(*(_24771_d))=_20112c338_buildVoidData();
	} else {
		(*(_24771_d))=jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_24813_f.get()._field_Result, });
	};
	(*(_24771_d)).get()._field_Model=jule::Any(_26113_model, &__jule_any_type35);
	return (*(_24771_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011e9e2d_builtinCallerCommon(jule::Ptr<_201100691_Eval>* _28029_e, jule::Ptr<_200ee374e_FnCallExpr>* _28044_fc, jule::Ptr<_2010edb23_Data>* _28066_d) {
	return _2011e9a32_builtinCallerCommonPlain(_28029_e, _28044_fc, _28066_d);;
}



inline jule::Ptr<_2010edb23_Data> _2011ea318_builtinCallerCommonMut(jule::Ptr<_201100691_Eval>* _28432_e, jule::Ptr<_200ee374e_FnCallExpr>* _28447_fc, jule::Ptr<_2010edb23_Data>* _28469_d) {
	if ((!((*(_28469_d)).get()._field_Mutable))) {
		_201100b9c_pushErr((*(_28432_e)).ptr(), (*(_28447_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _2011e9e2d_builtinCallerCommon(_28432_e, _28447_fc, _28469_d);;
}



inline jule::Ptr<_2010edb23_Data> _2011ea659_builtinCallerError(jule::Ptr<_201100691_Eval>* _29128_e, jule::Ptr<_200ee374e_FnCallExpr>* _29143_fc) {
	if (((*(_29143_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_29143_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _29913_expr = _201121eba_evalExpr((*(_29128_e)), (*(_29143_fc)).get()._field_Args[0LL]);;
	if ((_29913_expr == nullptr)) {
		return nullptr;;
	};
	if (_2010edeb9_IsNil(_29913_expr.ptr())) {
		_201100b9c_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2010edb23_Data> _30813_d = _20112c338_buildVoidData();;
	_30813_d.get()._field_Model=jule::Any(jule::new_ptr<_20101b7bb_BuiltinErrorCallExprModel>(_20101b7bb_BuiltinErrorCallExprModel{._field_Err=_29913_expr}), &__jule_any_type23);
	return _30813_d;;
}



inline jule::Ptr<_2010edb23_Data> _2011eaa44_builtinCallerOut(jule::Ptr<_201100691_Eval>* _31326_e, jule::Ptr<_200ee374e_FnCallExpr>* _31341_fc, jule::Ptr<_2010edb23_Data>* ) {
	if (((*(_31341_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_31341_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _32213_expr = _201121eba_evalExpr((*(_31326_e)), (*(_31341_fc)).get()._field_Args[0LL]);;
	if ((_32213_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_20114b467_isBuiltinStrConvertable(&(_32213_expr.get()._field_Kind))))) {
		_201100b9c_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2010edb23_Data> _33213_d = _20112c338_buildVoidData();;
	_33213_d.get()._field_Model=jule::Any(jule::new_ptr<_201018455_BuiltinOutCallExprModel>(_201018455_BuiltinOutCallExprModel{._field_Expr=_32213_expr.get()._field_Model, }), &__jule_any_type28);
	return _33213_d;;
}



inline jule::Ptr<_2010edb23_Data> _2011eae2e_builtinCallerOutln(jule::Ptr<_201100691_Eval>* _33728_e, jule::Ptr<_200ee374e_FnCallExpr>* _33743_fc, jule::Ptr<_2010edb23_Data>* _33765_d) {
	(*(_33765_d))=_2011eaa44_builtinCallerOut(_33728_e, _33743_fc, _33765_d);
	if (((*(_33765_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_33765_d)).get()._field_Model=jule::Any(jule::new_ptr<_201018840_BuiltinOutlnCallExprModel>(_201018840_BuiltinOutlnCallExprModel{._field_Expr=(*(_33765_d)).get()._field_Model.cast_ptr<_201018455_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Expr, }), &__jule_any_type29);
	return (*(_33765_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011eb54a_builtinCallerNew(jule::Ptr<_201100691_Eval>* _34926_e, jule::Ptr<_200ee374e_FnCallExpr>* _34941_fc, jule::Ptr<_2010edb23_Data>* _34963_d) {
	if (((*(_34941_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_34941_fc)).get()._field_Args.len() > 2LL)) {
		_201100b9c_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _35813_t = _20111b426_evalExprKind((*(_34926_e)), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_35813_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_35813_t.get()._field_Decl))) {
		_201100b9c_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_20114ae06_isValidForSptrType(&(_35813_t.get()._field_Kind))))) {
		jule::Ptr<_20100d071_StructIns> _36917_s = _201134c69_Struct(_35813_t.get()._field_Kind.ptr());;
		if ((((_36917_s != nullptr) && (_36917_s.get()._field_Decl != nullptr)) && _36917_s.get()._field_Decl.get()._field_Binded)) {
			_201100b9c_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_34963_d)).get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_20113c0a1_Sptr>(_20113c0a1_Sptr{._field_Elem=_35813_t.get()._field_Kind}), 21)});
	if (((*(_34941_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_2011310ea_TypeKind> _38317_old = (*(_34926_e)).get()._field_prefix;;
		(*(_34926_e)).get()._field_prefix=_35813_t.get()._field_Kind;
		jule::Ptr<_2010edb23_Data> _38617_init = _201121eba_evalExpr((*(_34926_e)), (*(_34941_fc)).get()._field_Args[1LL]);;
		(*(_34926_e)).get()._field_prefix=_38317_old;
		if ((_38617_init != nullptr)) {
			jule::Ptr<_1ed694d8c_Token> _39121_token = (*(_34941_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_20109219e_checkValidityForInitExpr((*(_34926_e)).get()._field_s, (!((*(_34926_e)).get()._field_immutable)), false, &(_35813_t.get()._field_Kind), &(_38617_init), &(_39121_token));
			_20108e289_checkAssignType((*(_34926_e)).get()._field_s, false, &(_35813_t.get()._field_Kind), &(_38617_init), _39121_token);
			(*(_34963_d)).get()._field_Model=jule::Any(jule::new_ptr<_201019049_BuiltinNewCallExprModel>(_201019049_BuiltinNewCallExprModel{._field_Kind=_35813_t.get()._field_Kind, ._field_Init=_38617_init.get()._field_Model}), &__jule_any_type116);
		};
	} else {
		(*(_34963_d)).get()._field_Model=jule::Any(jule::new_ptr<_201019049_BuiltinNewCallExprModel>(_201019049_BuiltinNewCallExprModel{._field_Kind=_35813_t.get()._field_Kind, }), &__jule_any_type116);
	};
	return (*(_34963_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011eb935_builtinCallerPanic(jule::Ptr<_201100691_Eval>* _41128_e, jule::Ptr<_200ee374e_FnCallExpr>* _41143_fc, jule::Ptr<_2010edb23_Data>* ) {
	if (((*(_41143_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_41143_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _42013_expr = _201121eba_evalExpr((*(_41128_e)), (*(_41143_fc)).get()._field_Args[0LL]);;
	if ((_42013_expr == nullptr)) {
		return nullptr;;
	};
	if (((_201133817_Prim(_42013_expr.get()._field_Kind.ptr()) == nullptr) || (!(_20113ba51_IsStr(_201133817_Prim(_42013_expr.get()._field_Kind.ptr()).ptr()))))) {
		_201100b9c_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2010edb23_Data> _42913_d = _20112c338_buildVoidData();;
	_42913_d.get()._field_Model=jule::Any(jule::new_ptr<_201019434_BuiltinPanicCallExprModel>(_201019434_BuiltinPanicCallExprModel{._field_Token=(*(_41143_fc)).get()._field_Token, ._field_Expr=_42013_expr.get()._field_Model}), &__jule_any_type30);
	return _42913_d;;
}



inline jule::Ptr<_2010edb23_Data> _2011ebd20_builtinCallerMake(jule::Ptr<_201100691_Eval>* _43727_e, jule::Ptr<_200ee374e_FnCallExpr>* _43742_fc, jule::Ptr<_2010edb23_Data>* _43764_d) {
	if (((*(_43742_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_43742_fc)).get()._field_Args.len() == 1LL)) {
			_201100b9c_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_201100b9c_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2010edb23_Data> _44713_t = _20111b426_evalExprKind((*(_43727_e)), (*(_43742_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_44713_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_44713_t.get()._field_Decl))) {
		_201100b9c_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_43742_fc)).get()._field_Args.len() > 3LL)) {
		_201100b9c_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_43764_d)).get()._field_Kind=_44713_t.get()._field_Kind;
	jule::Ptr<_2010edb23_Data> _46313_lenExpr = _201121eba_evalExpr(_20108d981_evalp((*(_43727_e)).get()._field_s, (*(_43727_e)).get()._field_lookup, _44713_t.get()._field_Kind), (*(_43742_fc)).get()._field_Args[1LL]);;
	if ((_46313_lenExpr == nullptr)) {
		return nullptr;;
	};
	_20110928d_checkIntegerIndexingByData((*(_43727_e)).ptr(), &(_46313_lenExpr), (*(_43742_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_201019d91_BuiltinMakeCallExprModel> _47013_model = jule::new_ptr<_201019d91_BuiltinMakeCallExprModel>(_201019d91_BuiltinMakeCallExprModel{._field_Kind=_44713_t.get()._field_Kind, ._field_Len=_46313_lenExpr.get()._field_Model, });;
	(*(_43764_d)).get()._field_Model=jule::Any(_47013_model, &__jule_any_type117);
	if (((*(_43742_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_2010edb23_Data> _47617_capExpr = _201121eba_evalExpr(_20108d981_evalp((*(_43727_e)).get()._field_s, (*(_43727_e)).get()._field_lookup, _44713_t.get()._field_Kind), (*(_43742_fc)).get()._field_Args[2LL]);;
		if ((_47617_capExpr == nullptr)) {
			return (*(_43764_d));;
		};
		_20110928d_checkIntegerIndexingByData((*(_43727_e)).ptr(), &(_47617_capExpr), (*(_43742_fc)).get()._field_Args[2LL].get()._field_Token);
		_47013_model.get()._field_Cap=_47617_capExpr.get()._field_Model;
	};
	return (*(_43764_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011ec20a_builtinCallerAppend(jule::Ptr<_201100691_Eval>* _48629_e, jule::Ptr<_200ee374e_FnCallExpr>* _48644_fc, jule::Ptr<_2010edb23_Data>* _48666_d) {
	if (((*(_48644_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_48644_fc)).get()._field_Args.len() == 1LL)) {
			_201100b9c_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_201100b9c_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2010edb23_Data> _49613_t = _201121eba_evalExpr((*(_48629_e)), (*(_48644_fc)).get()._field_Args[0LL]);;
	if ((_49613_t == nullptr)) {
		return nullptr;;
	};
	if ((_201134791_Slc(_49613_t.get()._field_Kind.ptr()) == nullptr)) {
		_201100b9c_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_20102330b_FnIns> _50613_f = jule::new_ptr<_20102330b_FnIns>(_20102330b_FnIns{._field_Params=jule::Slice<jule::Ptr<_20102243c_ParamIns>>::make({jule::new_ptr<_20102243c_ParamIns>(_20102243c_ParamIns{._field_Decl=jule::new_ptr<_20101dd1d_Param>(_20101dd1d_Param{._field_Mutable=true, }), ._field_Kind=_49613_t.get()._field_Kind}),jule::new_ptr<_20102243c_ParamIns>(_20102243c_ParamIns{._field_Decl=jule::new_ptr<_20101dd1d_Param>(_20101dd1d_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_201134791_Slc(_49613_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_49613_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_2010edb23_Data>(jule::Ptr<_201100691_Eval>*,jule::Ptr<_200ee374e_FnCallExpr>*,jule::Ptr<_2010edb23_Data>*)>(_2011e9a32_builtinCallerCommonPlain), });;
	(*(_48666_d)).get()._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(_50613_f, 1)});
	(*(_48666_d)).get()._field_Model=jule::Any(jule::new_ptr<_20101771d_CommonIdentExprModel>(_20101771d_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_48666_d))=_2011e9a32_builtinCallerCommonPlain(_48629_e, _48644_fc, _48666_d);
	if (((*(_48666_d)) != nullptr)) {
		jule::Ptr<_201014352_FnCallExprModel> _53417_model = (*(_48666_d)).get()._field_Model.cast_ptr<_201014352_FnCallExprModel>(&__jule_any_type35);;
		(*(_48666_d)).get()._field_Model=jule::Any(jule::new_ptr<_20101a27b_BuiltinAppendCallExprModel>(_20101a27b_BuiltinAppendCallExprModel{._field_Dest=_53417_model.get()._field_Args[0LL], ._field_Elements=_53417_model.get()._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_48666_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011ec68e_callerCopySlice(jule::Ptr<_2010edb23_Data>* _54325_dest, jule::Ptr<_201100691_Eval>* _54343_e, jule::Ptr<_200ee374e_FnCallExpr>* _54358_fc, jule::Ptr<_2010edb23_Data>* _54380_d) {
	if ((!((*(_54325_dest)).get()._field_Mutable))) {
		_201100b9c_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2010edb23_Data> _54813_src = _201121eba_evalExpr((*(_54343_e)), (*(_54358_fc)).get()._field_Args[1LL]);;
	if ((_54813_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20113ca0d_Slc> _55213_slc = _201134791_Slc(_54813_src.get()._field_Kind.ptr());;
	if ((_55213_slc != nullptr)) {
		if (((!(_54813_src.get()._field_Mutable)) && _20113288d_Mutable(_55213_slc.get()._field_Elem.ptr()))) {
			_201100b9c_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_2011317b0_Equal((*(_54325_dest)).get()._field_Kind, _54813_src.get()._field_Kind)))) {
			_201100b9c_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_54325_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_54813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_201138850_Prim> _56213_destPrim = _201133817_Prim(_201134791_Slc((*(_54325_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_201138850_Prim> _56313_prim = _201133817_Prim(_54813_src.get()._field_Kind.ptr());;
		if (((((_56213_destPrim == nullptr) || (_56313_prim == nullptr)) || (!(_20113ba51_IsStr(_56313_prim.ptr())))) || (!(_20113a126_IsU8(_56213_destPrim.ptr()))))) {
			_201100b9c_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_54325_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_54813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_54380_d)).get()._field_Kind=_2010e8007_lenKind();
	(*(_54380_d)).get()._field_Model=jule::Any(jule::new_ptr<_20101b3d1_BuiltinCopyCallExprModel>(_20101b3d1_BuiltinCopyCallExprModel{._field_Dest=(*(_54325_dest)), ._field_Src=_54813_src}), &__jule_any_type32);
	return (*(_54380_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011ecb23_callerCopyStr(jule::Ptr<_2010edb23_Data>* _57723_dest, jule::Ptr<_201100691_Eval>* _57741_e, jule::Ptr<_200ee374e_FnCallExpr>* _57756_fc, jule::Ptr<_2010edb23_Data>* _57778_d) {
	if ((!((*(_57723_dest)).get()._field_Mutable))) {
		_201100b9c_pushErr((*(_57741_e)).ptr(), (*(_57756_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2010edb23_Data> _58213_src = _201121eba_evalExpr((*(_57741_e)), (*(_57756_fc)).get()._field_Args[1LL]);;
	if ((_58213_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_201133817_Prim(_58213_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b086e4:;
			{
				if (_20113ba51_IsStr(_201133817_Prim(_58213_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_201134791_Slc(_58213_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b0875a:;
			{
				jule::Ptr<_20113ca0d_Slc> _59217_slc = _201134791_Slc(_58213_src.get()._field_Kind.ptr());;
				if (((_201133817_Prim(_59217_slc.get()._field_Elem.ptr()) != nullptr) && _20113a126_IsU8(_201133817_Prim(_59217_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_205b0897a:;
	};
	_201100b9c_pushErr((*(_57741_e)).ptr(), (*(_57756_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str((*(_57723_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_2011314a2_Str(_58213_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_57778_d)).get()._field_Kind=_2010e8007_lenKind();
	(*(_57778_d)).get()._field_Model=jule::Any(jule::new_ptr<_20101b3d1_BuiltinCopyCallExprModel>(_20101b3d1_BuiltinCopyCallExprModel{._field_Dest=(*(_57723_dest)), ._field_Src=_58213_src}), &__jule_any_type32);
	return (*(_57778_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011ed00d_builtinCallerCopy(jule::Ptr<_201100691_Eval>* _60727_e, jule::Ptr<_200ee374e_FnCallExpr>* _60742_fc, jule::Ptr<_2010edb23_Data>* _60764_d) {
	if (((*(_60742_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_60742_fc)).get()._field_Args.len() == 1LL)) {
			_201100b9c_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_201100b9c_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_60742_fc)).get()._field_Args.len() > 2LL)) {
		_201100b9c_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _62013_dest = _201121eba_evalExpr((*(_60727_e)), (*(_60742_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_62013_dest == nullptr)) {
			_case_begin_205b11dd4:;
			{
				return nullptr;;
			}
		}
		else if ((_201134791_Slc(_62013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b12874:;
			{
				return _2011ec68e_callerCopySlice(&(_62013_dest), _60727_e, _60742_fc, _60764_d);;
			}
		}
		else if (((_201133817_Prim(_62013_dest.get()._field_Kind.ptr()) != nullptr) && _20113ba51_IsStr(_201133817_Prim(_62013_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_205b128da:;
			{
				return _2011ecb23_callerCopyStr(&(_62013_dest), _60727_e, _60742_fc, _60764_d);;
			}
		}
		else {
			_case_begin_205b11a93:;
			{
				_201100b9c_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_205b105ca:;
	};
}



inline jule::Ptr<_2010edb23_Data> _2011ed34e_callerLenSlice(jule::Ptr<_2010edb23_Data>* _63424_expr, jule::Ptr<_2010edb23_Data>* _63442_d) {
	(*(_63442_d)).get()._field_Kind=_2010e8007_lenKind();
	(*(_63442_d)).get()._field_Model=jule::Any(jule::new_ptr<_20101a59a_BuiltinLenCallExprModel>(_20101a59a_BuiltinLenCallExprModel{._field_Expr=(*(_63424_expr))}), &__jule_any_type118);
	return (*(_63442_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011ed690_callerLenMap(jule::Ptr<_2010edb23_Data>* _64222_expr, jule::Ptr<_2010edb23_Data>* _64240_d) {
	(*(_64240_d)).get()._field_Kind=_2010e8007_lenKind();
	(*(_64240_d)).get()._field_Model=jule::Any(jule::new_ptr<_20101a59a_BuiltinLenCallExprModel>(_20101a59a_BuiltinLenCallExprModel{._field_Expr=(*(_64222_expr))}), &__jule_any_type118);
	return (*(_64240_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011ed9d1_callerLenArr(jule::Ptr<_2010edb23_Data>* _65022_expr, jule::Ptr<_2010edb23_Data>* _65040_d) {
	(*(_65040_d)).get()._field_Kind=_2010e8007_lenKind();
	(*(_65040_d)).get()._field_Constant=static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_20113452c_Arr((*(_65022_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_65040_d)).get()._field_Model=jule::Any((*(_65040_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_65040_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011edd22_callerLenStr(jule::Ptr<_2010edb23_Data>* _65722_expr, jule::Ptr<_2010edb23_Data>* _65740_d) {
	(*(_65740_d)).get()._field_Kind=_2010e8007_lenKind();
	if (_2010ee492_IsConst((*(_65722_expr)).ptr())) {
		(*(_65740_d)).get()._field_Constant=static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ee33e717_ReadStr((*(_65722_expr)).get()._field_Constant.ptr()).len())));
		(*(_65740_d)).get()._field_Model=jule::Any((*(_65740_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_65740_d)).get()._field_Model=jule::Any(jule::new_ptr<_20101a59a_BuiltinLenCallExprModel>(_20101a59a_BuiltinLenCallExprModel{._field_Expr=(*(_65722_expr))}), &__jule_any_type118);
	};
	return (*(_65740_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011ee163_callerLenComptime(jule::Ptr<_2010edb23_Data>* _67027_d, jule::I32 _67037_n) {
	(*(_67027_d)).get()._field_Kind=_2010e8007_lenKind();
	(*(_67027_d)).get()._field_Constant=static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67037_n)));
	(*(_67027_d)).get()._field_Model=jule::Any((*(_67027_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_67027_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011ee54d_builtinCallerLen(jule::Ptr<_201100691_Eval>* _67726_e, jule::Ptr<_200ee374e_FnCallExpr>* _67741_fc, jule::Ptr<_2010edb23_Data>* _67763_d) {
	if (((*(_67741_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_67741_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _68513_dest = _20111bd50_evalExpr1((*(_67726_e)), (*(_67741_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_68513_dest == nullptr)) {
			_case_begin_205b1c0dc:;
			{
				return nullptr;;
			}
		}
		else if ((_201134791_Slc(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b1ca7c:;
			{
				return _2011ed34e_callerLenSlice(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_20113452c_Arr(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b1cae3:;
			{
				return _2011ed9d1_callerLenArr(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_201135242_Map(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b1c917:;
			{
				return _2011ed690_callerLenMap(&(_68513_dest), _67763_d);;
			}
		}
		else if (((_201133817_Prim(_68513_dest.get()._field_Kind.ptr()) != nullptr) && _20113ba51_IsStr(_201133817_Prim(_68513_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_205b1c97d:;
			{
				return _2011edd22_callerLenStr(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_20113597e_comptimeStructFields(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b1bd12:;
			{
				return _2011ee163_callerLenComptime(_67763_d, static_cast<jule::I32>(_20113597e_comptimeStructFields(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_201135e57_comptimeEnumFields(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b1bd78:;
			{
				return _2011ee163_callerLenComptime(_67763_d, static_cast<jule::I32>(_201135e57_comptimeEnumFields(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_201136b6c_comptimeTypeInfos(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b1bdde:;
			{
				return _2011ee163_callerLenComptime(_67763_d, static_cast<jule::I32>(_201136b6c_comptimeTypeInfos(_68513_dest.get()._field_Kind.ptr()).get()._field_types.len()));;
			}
		}
		else if ((_201136430_comptimeParams(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b1be55:;
			{
				return _2011ee163_callerLenComptime(_67763_d, static_cast<jule::I32>(_201136430_comptimeParams(_68513_dest.get()._field_Kind.ptr()).get()._field_params.len()));;
			}
		}
		else if ((_201137145_comptimeStatics(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b1cb59:;
			{
				return _2011ee163_callerLenComptime(_67763_d, static_cast<jule::I32>(_201137145_comptimeStatics(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_201137ae6_comptimeFiles(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b1cbc0:;
			{
				return _2011ee163_callerLenComptime(_67763_d, static_cast<jule::I32>(_201137ae6_comptimeFiles(_68513_dest.get()._field_Kind.ptr()).get()._field_files.len()));;
			}
		}
		else {
			_case_begin_205b1bc9b:;
			{
				_201100b9c_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_205b19c44:;
	};
}



inline jule::Ptr<_2010edb23_Data> _2011ee88e_callerCapSlice(jule::Ptr<_2010edb23_Data>* _71524_expr, jule::Ptr<_2010edb23_Data>* _71542_d) {
	(*(_71542_d)).get()._field_Kind=_2010e8007_lenKind();
	(*(_71542_d)).get()._field_Model=jule::Any(jule::new_ptr<_20101a8b9_BuiltinCapCallExprModel>(_20101a8b9_BuiltinCapCallExprModel{._field_Expr=(*(_71524_expr))}), &__jule_any_type119);
	return (*(_71542_d));;
}



inline jule::Ptr<_2010edb23_Data> _2011eebd0_callerCapStr(jule::Ptr<_2010edb23_Data>* _72322_expr, jule::Ptr<_2010edb23_Data>* _72340_d) {
	(*(_72340_d)).get()._field_Kind=_2010e8007_lenKind();
	if (_2010ee492_IsConst((*(_72322_expr)).ptr())) {
		(*(_72340_d)).get()._field_Constant=static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ee33e717_ReadStr((*(_72322_expr)).get()._field_Constant.ptr()).cap())));
		(*(_72340_d)).get()._field_Model=jule::Any((*(_72340_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_72340_d)).get()._field_Model=jule::Any(jule::new_ptr<_20101a8b9_BuiltinCapCallExprModel>(_20101a8b9_BuiltinCapCallExprModel{._field_Expr=(*(_72322_expr))}), &__jule_any_type119);
	};
	return (*(_72340_d));;
}



inline jule::Ptr<_2010edb23_Data> _2012000ba_builtinCallerCap(jule::Ptr<_201100691_Eval>* _73626_e, jule::Ptr<_200ee374e_FnCallExpr>* _73641_fc, jule::Ptr<_2010edb23_Data>* _73663_d) {
	if (((*(_73641_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_73641_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _74413_dest = _201121eba_evalExpr((*(_73626_e)), (*(_73641_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_74413_dest == nullptr)) {
			_case_begin_205b29ca9:;
			{
				return nullptr;;
			}
		}
		else if (_74413_dest.get()._field_Decl) {
			_case_begin_205b2a749:;
			{
				_201100b9c_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_201134791_Slc(_74413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b2a7b0:;
			{
				return _2011ee88e_callerCapSlice(&(_74413_dest), _73663_d);;
			}
		}
		else if (((_201133817_Prim(_74413_dest.get()._field_Kind.ptr()) != nullptr) && _20113ba51_IsStr(_201133817_Prim(_74413_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_205b2a5d4:;
			{
				return _2011eebd0_callerCapStr(&(_74413_dest), _73663_d);;
			}
		}
		else {
			_case_begin_205b29968:;
			{
				_201100b9c_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_205b27911:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201200681_callerDeleteMap(jule::Ptr<_201100691_Eval>* _76125_e, jule::Ptr<_200ee374e_FnCallExpr>* _76140_fc, jule::Ptr<_2010edb23_Data>* _76162_expr, jule::Ptr<_2010edb23_Data>* _76180_d) {
	if ((!((*(_76162_expr)).get()._field_Mutable))) {
		_201100b9c_pushErr((*(_76125_e)).ptr(), (*(_76140_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_76180_d))=_20112c338_buildVoidData();
	jule::Ptr<_20101b06d_BuiltinDeleteCallExprModel> _76613_model = jule::new_ptr<_20101b06d_BuiltinDeleteCallExprModel>(_20101b06d_BuiltinDeleteCallExprModel{._field_Dest=(*(_76162_expr)), });;
	if (((*(_76140_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_2010edb23_Data> _77017_key = _201121eba_evalExpr((*(_76125_e)), (*(_76140_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_77017_key == nullptr)) {
				_case_begin_205b315da:;
				{
					return nullptr;;
				}
			}
			else if (_77017_key.get()._field_Decl) {
				_case_begin_205b2eee0:;
				{
					_201100b9c_pushErr((*(_76125_e)).ptr(), (*(_76140_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_205b2ee79:;
				{
					;
					jule::Ptr<_2011310ea_TypeKind> _77921_keyType = _201135242_Map((*(_76162_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_20108e289_checkAssignType((*(_76125_e)).get()._field_s, false, &(_77921_keyType), &(_77017_key), (*(_76140_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_205b2ee13:;
		};
		_76613_model.get()._field_Key=_77017_key;
	};
	(*(_76180_d)).get()._field_Model=jule::Any(_76613_model, &__jule_any_type33);
	return (*(_76180_d));;
}



inline jule::Ptr<_2010edb23_Data> _201200a6b_builtinCallerDelete(jule::Ptr<_201100691_Eval>* _79029_e, jule::Ptr<_200ee374e_FnCallExpr>* _79044_fc, jule::Ptr<_2010edb23_Data>* _79066_d) {
	if (((*(_79044_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_79044_fc)).get()._field_Args.len() > 2LL)) {
		_201100b9c_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _79813_dest = _201121eba_evalExpr((*(_79029_e)), (*(_79044_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_79813_dest == nullptr)) {
			_case_begin_205b356ee:;
			{
				return nullptr;;
			}
		}
		else if (_79813_dest.get()._field_Decl) {
			_case_begin_205b3618e:;
			{
				_201100b9c_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_201135242_Map(_79813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b36205:;
			{
				return _201200681_callerDeleteMap(_79029_e, _79044_fc, &(_79813_dest), _79066_d);;
			}
		}
		else {
			_case_begin_205b353ad:;
			{
				_201100b9c_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_205b33356:;
	};
}



inline jule::Ptr<_2010edb23_Data> _201200e56_builtinCallerClone(jule::Ptr<_201100691_Eval>* _81328_e, jule::Ptr<_200ee374e_FnCallExpr>* _81343_fc, jule::Ptr<_2010edb23_Data>* ) {
	if (((*(_81343_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_81343_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _82213_d = _201121eba_evalExpr((*(_81328_e)), (*(_81343_fc)).get()._field_Args[0LL]);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20113333e_SupportsCloning(_82213_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_201134791_Slc(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_201135242_Map(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_20113452c_Arr(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_201133a7b_Sptr(_82213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_205b3aa23:;
				{
					{
						_201100b9c_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_201134c69_Struct(_82213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_205b3a380:;
				{
					{
						_201100b9c_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			else {
				_case_begin_205b3a319:;
				{
					{
						_201100b9c_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			_match_end_205b3a270:;
		};
	};
	_82213_d.get()._field_Mutable=true;
	_82213_d.get()._field_Model=jule::Any(jule::new_ptr<_201018b5e_BuiltinCloneCallExprModel>(_201018b5e_BuiltinCloneCallExprModel{._field_Expr=_82213_d.get()._field_Model}), &__jule_any_type27);
	return _82213_d;;
}



inline jule::Ptr<_2010edb23_Data> _201201341_builtinCallerAssert(jule::Ptr<_201100691_Eval>* _85529_e, jule::Ptr<_200ee374e_FnCallExpr>* _85544_fc, jule::Ptr<_2010edb23_Data>* ) {
	if (((*(_85544_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_85544_fc)).get()._field_Args.len() > 2LL)) {
		_201100b9c_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _86413_expr = _201121eba_evalExpr((*(_85529_e)), (*(_85544_fc)).get()._field_Args[0LL]);;
	if ((_86413_expr == nullptr)) {
		return nullptr;;
	};
	if (((_201133817_Prim(_86413_expr.get()._field_Kind.ptr()) == nullptr) || (!(_20113b7dc_IsBool(_201133817_Prim(_86413_expr.get()._field_Kind.ptr()).ptr()))))) {
		_201100b9c_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2010198da_BuiltinAssertCallExprModel> _87313_model = jule::new_ptr<_2010198da_BuiltinAssertCallExprModel>(_2010198da_BuiltinAssertCallExprModel{._field_Token=(*(_85544_fc)).get()._field_Token, ._field_Expr=_86413_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_85544_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_2010edb23_Data> _88117_log = _201121eba_evalExpr((*(_85529_e)), (*(_85544_fc)).get()._field_Args[1LL]);;
		if ((_88117_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_2010ee492_IsConst(_88117_log.ptr()))) || (_201133817_Prim(_88117_log.get()._field_Kind.ptr()) == nullptr)) || (!(_20113ba51_IsStr(_201133817_Prim(_88117_log.get()._field_Kind.ptr()).ptr()))))) {
			_201100b9c_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_2011314a2_Str(_88117_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_87313_model.get()._field_Log=_1ee33e717_ReadStr(_88117_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_2010edb23_Data> _89413_d = _20112c338_buildVoidData();;
	_89413_d.get()._field_Model=jule::Any(_87313_model, &__jule_any_type31);
	return _89413_d;;
}



inline jule::Ptr<_2010edb23_Data> _20120174d_builtinCallerStdComptimeTypeOf(jule::Ptr<_201100691_Eval>* _89940_e, jule::Ptr<_200ee374e_FnCallExpr>* _89955_fc, jule::Ptr<_2010edb23_Data>* ) {
	if (((*(_89955_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_89955_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _90813_d = _20111b426_evalExprKind((*(_89940_e)), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_90813_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20102330b_FnIns> _9129_f = _201134a05_Fn(_90813_d.get()._field_Kind.ptr());;
	if ((_9129_f != nullptr)) {
		if (_201024692_IsBuiltin(_9129_f.ptr())) {
			_201100b9c_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<built-in fn>", 13), &__jule_any_type5)}));
			return nullptr;;
		};
		if ((_9129_f.get()._field_Generics.len() != _9129_f.get()._field_Decl.get()._field_Generics.len())) {
			_201100b9c_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_20100d071_StructIns> _9239_s = _201134c69_Struct(_90813_d.get()._field_Kind.ptr());;
	if (((_9239_s != nullptr) && (_9239_s.get()._field_Generics.len() != _9239_s.get()._field_Decl.get()._field_Generics.len()))) {
		_201100b9c_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_20113571a_comptime(_90813_d.get()._field_Kind.ptr())) {
		_201100b9c_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_90813_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	return _201053c54_buildComptimeTypeInfoData(&((*(_89940_e)).get()._field_s), &(_90813_d.get()._field_Kind));;
}



inline jule::Ptr<_2010edb23_Data> _201201b6b_builtinCallerStdComptimeValueOf(jule::Ptr<_201100691_Eval>* _93541_e, jule::Ptr<_200ee374e_FnCallExpr>* _93556_fc, jule::Ptr<_2010edb23_Data>* ) {
	if (((*(_93556_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_93556_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _94313_d = _201121eba_evalExpr((*(_93541_e)), (*(_93556_fc)).get()._field_Args[0LL]);;
	if ((_94313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_2010e829e_isGoodValueToInfer(&(_94313_d))))) {
		_201100b9c_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_94313_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	return _201054084_buildComptimeValue(&(_94313_d));;
}



inline jule::Ptr<_2010edb23_Data> _201201e24_rangeData(jule::Trait<_201038684_comptimeRangeKind> _95518_kind) {
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_201038860_comptimeRange>(_201038860_comptimeRange{._field_kind=_95518_kind}), 5)}), });;
}



inline jule::Ptr<_2010edb23_Data> _201202331_builtinCallerStdComptimeRange(jule::Ptr<_201100691_Eval>* _96539_e, jule::Ptr<_200ee374e_FnCallExpr>* _96554_fc, jule::Ptr<_2010edb23_Data>* ) {
	if (((*(_96554_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_96554_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _97413_d = _20111b426_evalExprKind((*(_96539_e)), (*(_96554_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_97413_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_20113597e_comptimeStructFields(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b58359:;
			{
				return _201201e24_rangeData(jule::Trait<_201038684_comptimeRangeKind>(_20113597e_comptimeStructFields(_97413_d.get()._field_Kind.ptr()), 0));;
			}
		}
		else if ((_201135e57_comptimeEnumFields(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b583c0:;
			{
				return _201201e24_rangeData(jule::Trait<_201038684_comptimeRangeKind>(_201135e57_comptimeEnumFields(_97413_d.get()._field_Kind.ptr()), 2));;
			}
		}
		else if ((_201136b6c_comptimeTypeInfos(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b581d3:;
			{
				return _201201e24_rangeData(jule::Trait<_201038684_comptimeRangeKind>(_201136b6c_comptimeTypeInfos(_97413_d.get()._field_Kind.ptr()), 4));;
			}
		}
		else if ((_201136430_comptimeParams(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b58249:;
			{
				return _201201e24_rangeData(jule::Trait<_201038684_comptimeRangeKind>(_201136430_comptimeParams(_97413_d.get()._field_Kind.ptr()), 3));;
			}
		}
		else if ((_201137145_comptimeStatics(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b572d1:;
			{
				return _201201e24_rangeData(jule::Trait<_201038684_comptimeRangeKind>(_201137145_comptimeStatics(_97413_d.get()._field_Kind.ptr()), 1));;
			}
		}
		else if ((_201137ae6_comptimeFiles(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_205b57347:;
			{
				return _201201e24_rangeData(jule::Trait<_201038684_comptimeRangeKind>(_201137ae6_comptimeFiles(_97413_d.get()._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_205b57534:;
			{
				_201100b9c_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_97413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_205b57138:;
	};
}



inline jule::Ptr<_2010edb23_Data> _20120274e_builtinCallerStdComptimeLine(jule::Ptr<_201100691_Eval>* _99738_e, jule::Ptr<_200ee374e_FnCallExpr>* _99753_fc, jule::Ptr<_2010edb23_Data>* ) {
	if (((*(_99753_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_99738_e)).ptr(), (*(_99753_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Line", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1ee33c6d2_Const> _100113_constant = static__1ee33cb11_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_99753_fc)).get()._field_Token.get()._field_Row)));;
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e618d_primInt, ._field_Model=jule::Any(_100113_constant, &__jule_any_type19), ._field_Constant=_100113_constant});;
}



inline jule::Ptr<_2010edb23_Data> _201202b6c_builtinCallerStdComptimeFile(jule::Ptr<_201100691_Eval>* _100938_e, jule::Ptr<_200ee374e_FnCallExpr>* _100953_fc, jule::Ptr<_2010edb23_Data>* ) {
	if (((*(_100953_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_100938_e)).ptr(), (*(_100953_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("File", 4), &__jule_any_type5)}));
	};
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_201051bb9_comptimeFile>(_201051bb9_comptimeFile{._field_file=(*(_100938_e)).get()._field_s.get()._field_file}), 18)}), });;
}



inline jule::Ptr<_2010edb23_Data> _20120308a_builtinCallerStdComptimeFiles(jule::Ptr<_201100691_Eval>* _102239_e, jule::Ptr<_200ee374e_FnCallExpr>* _102254_fc, jule::Ptr<_2010edb23_Data>* ) {
	if (((*(_102254_fc)).get()._field_Args.len() > 0LL)) {
		_201100b9c_pushErr((*(_102239_e)).ptr(), (*(_102254_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Files", 5), &__jule_any_type5)}));
	};
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=jule::new_ptr<_2011310ea_TypeKind>(_2011310ea_TypeKind{._field_Kind=jule::Trait<_201130b88_Kind>(jule::new_ptr<_201050701_comptimeFiles>(_201050701_comptimeFiles{._field_files=(*(_102239_e)).get()._field_s.get()._field_files}), 17)}), });;
}



inline jule::Ptr<_2010edb23_Data> _2012034a8_builtinCallerStdMemSizeOf(jule::Ptr<_201100691_Eval>* _103535_e, jule::Ptr<_200ee374e_FnCallExpr>* _103550_fc, jule::Ptr<_2010edb23_Data>* ) {
	jule::Ptr<_2010edb23_Data> _103613_result = jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5dc4_primUint, });;
	if (((*(_103550_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _103613_result;;
	};
	if (((*(_103550_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _104813_d = _20111b426_evalExprKind((*(_103535_e)), (*(_103550_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_104813_d == nullptr)) {
		return _103613_result;;
	};
	if ((!(_20114c38b_validTypeForXof(&(_104813_d.get()._field_Kind))))) {
		_201100b9c_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_104813_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	_103613_result.get()._field_Model=jule::Any(jule::new_ptr<_20101bab8_SizeofExprModel>(_20101bab8_SizeofExprModel{._field_Expr=_104813_d.get()._field_Model}), &__jule_any_type120);
	return _103613_result;;
}



inline jule::Ptr<_2010edb23_Data> _2012038c6_builtinCallerStdMemAlignOf(jule::Ptr<_201100691_Eval>* _106036_e, jule::Ptr<_200ee374e_FnCallExpr>* _106051_fc, jule::Ptr<_2010edb23_Data>* ) {
	jule::Ptr<_2010edb23_Data> _106113_result = jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5dc4_primUint, });;
	if (((*(_106051_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _106113_result;;
	};
	if (((*(_106051_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _107313_d = _20111b426_evalExprKind((*(_106036_e)), (*(_106051_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_107313_d == nullptr)) {
		return _106113_result;;
	};
	if ((!(_20114c38b_validTypeForXof(&(_107313_d.get()._field_Kind))))) {
		_201100b9c_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2011314a2_Str(_107313_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	_106113_result.get()._field_Model=jule::Any(jule::new_ptr<_20101bda4_AlignofExprModel>(_20101bda4_AlignofExprModel{._field_Expr=_107313_d.get()._field_Model}), &__jule_any_type121);
	return _106113_result;;
}



inline jule::Ptr<_2010edb23_Data> _201203ce4_builtinCallerStdMemFree(jule::Ptr<_201100691_Eval>* _108533_e, jule::Ptr<_200ee374e_FnCallExpr>* _108548_fc, jule::Ptr<_2010edb23_Data>* ) {
	if (((*(_108548_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_108548_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _109413_d = _201121eba_evalExpr((*(_108533_e)), (*(_108548_fc)).get()._field_Args[0LL]);;
	if ((_109413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_2011330ca_PerformsRC(_109413_d.get()._field_Kind.ptr())))) {
		_201100b9c_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2010edb23_Data> _110313_result = _20112c338_buildVoidData();;
	_110313_result.get()._field_Model=jule::Any(jule::new_ptr<_20101cb52_FreeExprModel>(_20101cb52_FreeExprModel{._field_Expr=_109413_d.get()._field_Model}), &__jule_any_type34);
	return _110313_result;;
}



inline jule::Ptr<_2010edb23_Data> _201204223_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_201100691_Eval>* _110845_e, jule::Ptr<_200ee374e_FnCallExpr>* _110860_fc, jule::Ptr<_2010edb23_Data>* ) {
	if (((*(_110860_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_110860_fc)).get()._field_Args.len() > 1LL)) {
		_201100b9c_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_2010edb23_Data> _111713_d = _201121eba_evalExpr((*(_110845_e)), (*(_110860_fc)).get()._field_Args[0LL]);;
	if ((_111713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_20114b467_isBuiltinStrConvertable(&(_111713_d.get()._field_Kind))))) {
		_201100b9c_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_2010edb23_Data>(_2010edb23_Data{._field_Kind=_2011e5533_primStr, ._field_Model=jule::Any(jule::new_ptr<_20101c49d_IntegratedToStrExprModel>(_20101c49d_IntegratedToStrExprModel{._field_Expr=_111713_d.get()._field_Model}), &__jule_any_type122), });;
}



inline jule::Ptr<_2010edb23_Data> _201204641_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_201100691_Eval>* _113544_e, jule::Ptr<_200ee374e_FnCallExpr>* _113559_fc, jule::Ptr<_2010edb23_Data>* _113581_d) {
	if ((!(_2011015d7_isUnsafe((*(_113544_e)).ptr())))) {
		_201100b9c_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_113559_fc)).get()._field_Args.len() < 1LL)) {
		_201100b9c_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2010edb23_Data> _114513_argd = _201121eba_evalExpr((*(_113544_e)), (*(_113559_fc)).get()._field_Args[0LL]);;
	if ((_114513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_201133817_Prim(_114513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_20113ba51_IsStr(_201133817_Prim(_114513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_201100b9c_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_2011314a2_Str(_114513_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_2010ee492_IsConst(_114513_argd.ptr()))) || (!(_1ee341ab0_IsStr(_114513_argd.get()._field_Constant.ptr()))))) {
		_201100b9c_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2010edb23_Data> _116013_r = _20112c338_buildVoidData();;
	jule::Ptr<_20102330b_FnIns> _116213_f = _201134a05_Fn((*(_113581_d)).get()._field_Kind.ptr());;
	if ((_116213_f.get()._field_Generics.len() > 0LL)) {
		_116013_r.get()._field_Kind=_116213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_20101c866_BackendEmitExprModel> _116713_model = jule::new_ptr<_20101c866_BackendEmitExprModel>(_20101c866_BackendEmitExprModel{._field_Code=_1ee33e717_ReadStr(_114513_argd.get()._field_Constant.ptr()), });;
	if (((*(_113559_fc)).get()._field_Args.len() > 1LL)) {
		_116713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_113559_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_113559_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_205b7b39e:;
			if (it != expr_end) {
				jule::Ptr<_200ede838_Expr> _117321_arg = *it;
				{
					_114513_argd=_20111b734_eval1((*(_113544_e)), _117321_arg);
					if ((_114513_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _116713_model.get()._field_Exprs; __jule_push_dest.push(_114513_argd.get()._field_Model); };
				}
				_iter_next_205b7b39e:;
				++it;
				goto _iter_begin_205b7b39e;
			}
			_iter_end_205b7b39e:;
		};
	};
	_116013_r.get()._field_Model=jule::Any(_116713_model, &__jule_any_type25);
	return _116013_r;;
}



inline jule::Ptr<_2010edb23_Data> _201204a81_builtinCallerStdDebugOut(jule::Ptr<_201100691_Eval>* _118634_e, jule::Ptr<_200ee374e_FnCallExpr>* _118649_fc, jule::Ptr<_2010edb23_Data>* _118671_d) {
	(*(_118671_d))=_2011eaa44_builtinCallerOut(_118634_e, _118649_fc, _118671_d);
	if (((*(_118671_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_118671_d)).get()._field_Model.cast_ptr<_201018455_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_118671_d));;
}



inline jule::Ptr<_2010edb23_Data> _201204e6b_builtinCallerStdDebugOutln(jule::Ptr<_201100691_Eval>* _119536_e, jule::Ptr<_200ee374e_FnCallExpr>* _119551_fc, jule::Ptr<_2010edb23_Data>* _119573_d) {
	(*(_119573_d))=_2011eae2e_builtinCallerOutln(_119536_e, _119551_fc, _119573_d);
	if (((*(_119573_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_119573_d)).get()._field_Model.cast_ptr<_201018840_BuiltinOutlnCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return (*(_119573_d));;
}



inline jule::Bool _2012ee84b_FindModuleFile(jule::Slice<jule::Ptr<_217d998b8_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205b81184:;
		if (it != expr_end) {
			jule::Ptr<_217d998b8_DirEntry> *_1312_d = it;
			{
				if (((!(_217da9103_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_205b81184:;
			++it;
			goto _iter_begin_205b81184;
		}
		_iter_end_205b81184:;
	};
	return false;;
}



inline jule::Str _2012ee97d_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_217d998b8_DirEntry>> _2617_dirents = ({
				auto except = static__2193245e4_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_205b81393;
				} jule::Slice<jule::Ptr<_217d998b8_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _2012ee84b_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I32 _3513_n = _2427_path.len();;
			_2427_path=_219323ca8_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_205b81393;
			};
		}
	_iter_next_205b81393:;
	}
	_iter_end_205b81393:;;
	return jule::Str();;
}



inline jule::Slice<_2193a460d_Log> _2012eeb7b_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__217da7057_Read(_21932314d_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_2193a460d_Log>::make({_2193a460d_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _219320c83_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_2193a460d_Log>::make({_2193a460d_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_20152cc44_FileInfo> _201530928_ParseFile(jule::Ptr<_1ed69a227_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_20152cc44_FileInfo> _2713_finf = jule::new_ptr<_20152cc44_FileInfo>();;
	({
		__jule_tuple_x_200d46041_Ast__jule_tuple_s_2193a460d_Log __jule_assign_result = _2031b3d18_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_200d46041_Ast__jule_tuple_s_2193a460d_Log _2031b3d18_parseFileset(jule::Ptr<_1ed69a227_File> _5521_f) {
	__jule_tuple_x_200d46041_Ast__jule_tuple_s_2193a460d_Log __jule_func_result;
	jule::Ptr<_2031d2881_parser> _5613_p = jule::new_ptr<_2031d2881_parser>();;
	_2031e2220_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_200eea2e4_ScopeTree> _2031b4742_newScope(void) {
	return jule::new_ptr<_200eea2e4_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _2031b4a2d_isSt(jule::Ptr<_1ed694d8c_Token> _499_current, jule::Ptr<_1ed694d8c_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U32>(4LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U32>(4LLU));
	return __jule_func_result;;
}



inline jule::Bool _2031b4d6e_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _5526_tokens, jule::I32* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U32>(21LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1ed694d8c_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U32>(19LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U32>(6LLU)) && _1ed695882_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _2031b5204_nextStPos(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _7015_tokens, jule::I32 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _7113_braceN = 0LL;;
	jule::I32 _7213_i = _7033_start;;
	for (; (_7213_i < (*(_7015_tokens)).len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_1ed694d8c_Token> _7613_tok = (*(_7015_tokens))[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(2LLU)) {
					_case_begin_205c13799:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_205c15416:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_2031b4d6e_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2031b4a2d_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_205c14080:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < (*(_7015_tokens)).len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2031b4a2d_isSt((*(_7015_tokens))[(_7213_i + 1LL)], _7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_205c13db5:;
						};
						goto _iter_next_205c1215a;
					}
				}
				_match_end_205c13733:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_205c1215a;
			};
			if ((_7213_i > _7033_start)) {
				if (_2031b4d6e_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))) {
					goto _iter_next_205c1215a;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2031b4a2d_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2031b4a2d_isSt(_7613_tok, _7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_205c1215a;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_205c1215a:;
	}
	_iter_end_205c1215a:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ed694d8c_Token__jule_tuple_bool _2031b5545_skipSt(jule::I32* _13216_i, jule::Slice<jule::Ptr<_1ed694d8c_Token>> _13228_tokens) {
	__jule_tuple_sx_1ed694d8c_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _1339_start = (*(_13216_i));;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2031b5204_nextStPos(&(_13228_tokens), _1339_start);
		(*(_13216_i)) = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1ed694d8c_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start, (*(_13216_i)));;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1ed694d8c_Token__jule_tuple_bool __jule_assign_result = _2031b5545_skipSt(_13216_i, _13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL, (_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_2031b5842_stmt>> _2031b5bd8_splitStmts(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _15420_tokens) {
	jule::Slice<jule::Ptr<_2031b5842_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_2031b5842_stmt>>::alloc(0LL, 20LL);;
	jule::I32 _15613_pos = 0LL;;
	while ((_15613_pos < (*(_15420_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1ed694d8c_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_1ed694d8c_Token__jule_tuple_bool __jule_assign_result = _2031b5545_skipSt(&(_15613_pos), (*(_15420_tokens)));
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_2031b5842_stmt>> &__jule_push_dest = _15513_stmts; __jule_push_dest.push(jule::new_ptr<_2031b5842_stmt>(_2031b5842_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated})); };
		}
	_iter_next_205c1d0ab:;
	}
	_iter_end_205c1d0ab:;;
	return _15513_stmts;;
}



inline jule::Bool _2031cc3c5_isTypeOp(jule::Str* _89014_kind) {
	return (((*(_89014_kind)).equal("&", 1) || (*(_89014_kind)).equal("&&", 2)) || (*(_89014_kind)).equal("*", 1));;
}



inline jule::Bool _2031cc6b1_isTypeRange(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _89721_tokens) {
	jule::Bool _89813_op = false;;
	{
		auto expr = _89721_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205cba5dc:;
		if (it != expr_end) {
			jule::I32 _8999_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _89912_token = *it;
			{
				if ((_89912_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
					if (_89912_token.get()._field_Kind.equal("[", 1)) {
						if (_89813_op) {
							return true;;
						};
						jule::I32 _90525_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_1ed694d8c_Token>> _90625_lTokens = (*(_89721_tokens)).slice(_8999_i);;
						{
							auto expr = &(_90625_lTokens);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_205cbb885:;
							if (it != expr_end) {
								jule::Ptr<_1ed694d8c_Token> _90724_lToken = *it;
								{
									{
										auto &_match_expr{ _90724_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U32>(2LLU)) {
											_case_begin_205cbce6e:;
											{
												{
													auto &_match_expr{ _90724_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_205cbd7aa:;
														{
															(_90525_rangeN)++;
															goto _iter_next_205cbb885;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_205cbd832:;
														{
															(_90525_rangeN)--;
															goto _iter_next_205cbb885;
														}
													}
													_match_end_205cbd5e0:;
												};
											}
										}
										_match_end_205cbcc2c:;
									};
									if ((_90525_rangeN == 0LL)) {
										return _2031cc3c5_isTypeOp(&(_90724_lToken.get()._field_Kind));;
									};
								}
								_iter_next_205cbb885:;
								++it;
								goto _iter_begin_205cbb885;
							}
							_iter_end_205cbb885:;
						};
						return true;;
					};
				};
				if ((!(_2031cc3c5_isTypeOp(&(_89912_token.get()._field_Kind))))) {
					return false;;
				};
				_89813_op=true;
			}
			_iter_next_205cba5dc:;
			++it;
			_8999_i++;
			goto _iter_begin_205cba5dc;
		}
		_iter_end_205cba5dc:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ed694d8c_Token>> _2031cc958_getBlockExpr(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _93522_tokens) {
	jule::I32 _93613_braceN = 0LL;;
	jule::I32 _93713_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205cbed50:;
		if (it != expr_end) {
			jule::I32 _9389_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _93812_tok = *it;
			{
				{
					auto &_match_expr{ _93812_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(15LLU) || _match_expr == static_cast<jule::U32>(16LLU) || _match_expr == static_cast<jule::U32>(33LLU)) {
						_case_begin_205cc0a43:;
						{
							(_93713_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(2LLU)) {
						_case_begin_205cc0aba:;
						{
							{
								auto &_match_expr{ _93812_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_205cc1857:;
									{
										if (((_93613_braceN > 0LL) || (_93713_skipToNextBraceClose > 0LL))) {
											if ((_93713_skipToNextBraceClose > 0LL)) {
												(_93713_skipToNextBraceClose)--;
											};
											(_93613_braceN)++;
											goto _match_end_205cc1989;
										};
										return (*(_93522_tokens)).slice(0LL, _9389_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_205cc1ea6:;
									{
										(_93613_braceN)++;
									}
								}
								else {
									_case_begin_205cc1a00:;
									{
										(_93613_braceN)--;
									}
								}
								_match_end_205cc1989:;
							};
						}
					}
					_match_end_205cc0999:;
				};
			}
			_iter_next_205cbed50:;
			++it;
			_9389_i++;
			goto _iter_begin_205cbed50;
		}
		_iter_end_205cbed50:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ed694d8c_Token__jule_tuple_sx_1ed694d8c_Token _2031cccdd_splitDelim(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _96620_tokens, jule::U32 _96638_delim) {
	__jule_tuple_sx_1ed694d8c_Token__jule_tuple_sx_1ed694d8c_Token __jule_func_result;
	jule::I32 _96713_rangeN = 0LL;;
	{
		auto expr = _96620_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205cc2281:;
		if (it != expr_end) {
			jule::I32 _9689_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _96812_token = *it;
			{
				{
					auto &_match_expr{ _96812_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(2LLU)) {
						_case_begin_205cc3ddc:;
						{
							{
								auto &_match_expr{ _96812_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_205cc454c:;
									{
										(_96713_rangeN)++;
										goto _iter_next_205cc2281;
									}
								}
								else {
									_case_begin_205cc47d3:;
									{
										(_96713_rangeN)--;
									}
								}
								_match_end_205cc4618:;
							};
						}
					}
					else if (_match_expr == _96638_delim) {
						_case_begin_205cc3e64:;
						{
							if ((_96713_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1ed694d8c_Token>> _98225_l = (*(_96620_tokens)).slice(0LL, _9689_i);;
								jule::Slice<jule::Ptr<_1ed694d8c_Token>> _98325_r = (*(_96620_tokens)).slice((_9689_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98225_l;
								__jule_func_result.__jule_result_arg1 = _98325_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_205cc3bbc:;
				};
			}
			_iter_next_205cc2281:;
			++it;
			_9689_i++;
			goto _iter_begin_205cc2281;
		}
		_iter_end_205cc2281:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _2031cd085_findLowestPrecOp(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _99322_tokens) {
	jule::U8 _99813_prec = 255LLU;;
	jule::I32 _99913_precPos = -1LL;;
	jule::I32 _100113_braceN = 0LL;;
	jule::Bool _100213_skipToNextBraceOpen = false;;
	{
		auto expr = _99322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205cc72db:;
		if (it != expr_end) {
			jule::I32 _10039_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> *_100312_token = it;
			{
				{
					
					if (((*(_100312_token)).get()._field_Id == static_cast<jule::U32>(2LLU))) {
						_case_begin_205cc7d9c:;
						{
							{
								auto &_match_expr{ (*(_100312_token)).get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_205cc894c:;
									{
										_100213_skipToNextBraceOpen=false;
										goto _case_begin_205cc9145;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_205cc9145:;
									{
										(_100113_braceN)++;
									}
								}
								else {
									_case_begin_205cc8bd3:;
									{
										(_100113_braceN)--;
									}
								}
								_match_end_205cc8a18:;
							};
							goto _iter_next_205cc72db;
						}
					}
					else if (_100213_skipToNextBraceOpen) {
						_case_begin_205cc7e24:;
						{
							goto _iter_next_205cc72db;
						}
					}
					else if (((*(_100312_token)).get()._field_Id == static_cast<jule::U32>(15LLU))) {
						_case_begin_205cc7e9b:;
						{
							_100213_skipToNextBraceOpen=true;
							goto _iter_next_205cc72db;
						}
					}
					else if ((_10039_i == 0LL)) {
						_case_begin_205cc8023:;
						{
							goto _iter_next_205cc72db;
						}
					}
					else if (((*(_100312_token)).get()._field_Id != static_cast<jule::U32>(6LLU))) {
						_case_begin_205cc809a:;
						{
							goto _iter_next_205cc72db;
						}
					}
					else if ((_100113_braceN > 0LL)) {
						_case_begin_205cc8122:;
						{
							goto _iter_next_205cc72db;
						}
					}
					_match_end_205cc7c48:;
				};
				jule::Ptr<_1ed694d8c_Token> _103013_left = (*(_99322_tokens))[(_10039_i - 1LL)];;
				if (((_103013_left.get()._field_Id == static_cast<jule::U32>(6LLU)) || (_103013_left.get()._field_Id == static_cast<jule::U32>(10LLU)))) {
					goto _iter_next_205cc72db;
				};
				if ((((_10039_i > 1LL) && (_103013_left.get()._field_Id == static_cast<jule::U32>(2LLU))) && _103013_left.get()._field_Kind.equal("]", 1))) {
					jule::Ptr<_1ed694d8c_Token> _103817_lleft = (*(_99322_tokens))[(_10039_i - 2LL)];;
					if (((_103817_lleft.get()._field_Id == static_cast<jule::U32>(2LLU)) && _103817_lleft.get()._field_Kind.equal("[", 1))) {
						if (((*(_100312_token)).get()._field_Kind.equal("&", 1) || (*(_100312_token)).get()._field_Kind.equal("*", 1))) {
							goto _iter_next_205cc72db;
						};
					};
				};
				jule::U8 _104713_p = _1ed695200_Prec((*(_100312_token)).ptr());;
				if (((_104713_p != 0LLU) && (_104713_p <= _99813_prec))) {
					_99813_prec=_104713_p;
					_99913_precPos=_10039_i;
				};
			}
			_iter_next_205cc72db:;
			++it;
			_10039_i++;
			goto _iter_begin_205cc72db;
		}
		_iter_end_205cc72db:;
	};
	return _99913_precPos;;
}



inline jule::Ptr<_200ee142d_IdentExpr> _2031cd32c_buildIdentExpr(jule::Ptr<_1ed694d8c_Token>* _105624_token) {
	return jule::new_ptr<_200ee142d_IdentExpr>(_200ee142d_IdentExpr{._field_Token=(*(_105624_token)), ._field_Ident=(*(_105624_token)).get()._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1ed694d8c_Token__jule_tuple_int _2031cd5c4_getRangeExprTokens(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _106428_tokens) {
	__jule_tuple_sx_1ed694d8c_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _106513_rangeN = 0LL;;
	jule::I32 _106613_i = ((*(_106428_tokens)).len() - 1LL);;
	for (; (_106613_i >= 0LL); (_106613_i)--) {
		{
			jule::Ptr<_1ed694d8c_Token> _106813_tok = (*(_106428_tokens))[_106613_i];;
			if ((_106813_tok.get()._field_Id == static_cast<jule::U32>(2LLU))) {
				{
					auto &_match_expr{ _106813_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_205cd0a42:;
						{
							(_106513_rangeN)++;
						}
					}
					else {
						_case_begin_205cd13e4:;
						{
							(_106513_rangeN)--;
						}
					}
					_match_end_205cd11d5:;
				};
			};
			if ((_106513_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_106428_tokens)).slice(0LL, _106613_i);
				__jule_func_result.__jule_result_arg1 = _106513_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_205cd0118:;
	}
	_iter_end_205cd0118:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106513_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _2031ce32d_checkAssignTokens(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1ed699435_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I32 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d6aa00:;
		if (it != expr_end) {
			jule::Ptr<_1ed694d8c_Token> *_2112_t = it;
			{
				if (((*(_2112_t)).get()._field_Id == static_cast<jule::U32>(2LLU))) {
					{
						auto &_match_expr{ (*(_2112_t)).get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_205d6b5a0:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_205d6b87a:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_205d6b66b:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_205d6aa00;
				} else if ((((*(_2112_t)).get()._field_Id == static_cast<jule::U32>(6LLU)) && _1ed699974_IsAssignOp((*(_2112_t)).get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_205d6aa00:;
			++it;
			goto _iter_begin_205d6aa00;
		}
		_iter_end_205d6aa00:;
	};
	return false;;
}



inline _2193a460d_Log _2031d054e_makeErr(jule::I32 _5212_row, jule::I32 _5222_col, jule::Ptr<_1ed69a227_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _2193a460d_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_2193a4a4d_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_1ed694d8c_Token>> _2031d0a27_range(jule::I32* _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _7163_tokens) {
	if (((*(_7115_i)) >= (*(_7163_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1ed694d8c_Token> _759_tok = (*(_7163_tokens))[(*(_7115_i))];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U32>(2LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	((*(_7115_i)))++;
	jule::I32 _8013_rangeN = 1LL;;
	jule::I32 _819_start = (*(_7115_i));;
	for (; ((_8013_rangeN != 0LL) && ((*(_7115_i)) < (*(_7163_tokens)).len())); ((*(_7115_i)))++) {
		{
			jule::Ptr<_1ed694d8c_Token> _8313_token = (*(_7163_tokens))[(*(_7115_i))];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_205d72221:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_205d72298:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_205d72001:;
				};
			};
		}
	_iter_next_205d71231:;
	}
	_iter_end_205d71231:;;
	return (*(_7163_tokens)).slice(_819_start, ((*(_7115_i)) - 1LL));;
}



inline __jule_tuple_sx_1ed694d8c_Token__jule_tuple_sx_1ed694d8c_Token _2031d0cbe_rangeLast(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _10319_tokens) {
	__jule_tuple_sx_1ed694d8c_Token__jule_tuple_sx_1ed694d8c_Token __jule_func_result;
	if (((*(_10319_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if (((*(_10319_tokens))[((*(_10319_tokens)).len() - 1LL)].get()._field_Id != static_cast<jule::U32>(2LLU))) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _10913_braceN = 0LL;;
	jule::I32 _11013_i = ((*(_10319_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_1ed694d8c_Token> _11213_token = (*(_10319_tokens))[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_205d752ac:;
						{
							(_10913_braceN)++;
							goto _iter_next_205d73068;
						}
					}
					else {
						_case_begin_205d75b92:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_205d75983:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10319_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_10319_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_205d73068:;
	}
	_iter_end_205d73068:;;
	__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log _2031d11a9_partsKind(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_func_result;
	if (((*(_13219_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _13713_parts = nullptr;;
	jule::Slice<_2193a460d_Log> _13813_errors = nullptr;;
	jule::I32 _14013_rangeN = 0LL;;
	jule::I32 _14113_last = 0LL;;
	{
		auto expr = _13219_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d78aa7:;
		if (it != expr_end) {
			jule::I32 _1429_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_205d79976:;
							{
								(_14013_rangeN)++;
								goto _iter_next_205d78aa7;
							}
						}
						else {
							_case_begin_205d79c51:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_205d79a42:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_205d78aa7;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_2193a460d_Log _16121_err = _2031d054e_makeErr(_14212_token.get()._field_Row, _14212_token.get()._field_Column, &(_14212_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_2193a460d_Log> &__jule_push_dest = _13813_errors; __jule_push_dest.push(_16121_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> &__jule_push_dest = _13713_parts; __jule_push_dest.push((*(_13219_tokens)).slice(_14113_last, _1429_i)); };
					_14113_last=static_cast<jule::I32>((_1429_i + 1LL));
				};
			}
			_iter_next_205d78aa7:;
			++it;
			_1429_i++;
			goto _iter_begin_205d78aa7;
		}
		_iter_end_205d78aa7:;
	};
	if ((_14113_last < (*(_13219_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> &__jule_push_dest = _13713_parts; __jule_push_dest.push((*(_13219_tokens)).slice(_14113_last)); };
	} else if ((!(_13254_expr_must))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> &__jule_push_dest = _13713_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1ed694d8c_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log _2031d1594_parts(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _18415_tokens, jule::U32 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_1ed694d8c_Token__jule_tuple_s_2193a460d_Log __jule_func_result;
	if (((*(_18415_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> _18913_parts = nullptr;;
	jule::Slice<_2193a460d_Log> _19013_errors = nullptr;;
	jule::I32 _19213_rangeN = 0LL;;
	jule::I32 _19313_last = 0LL;;
	{
		auto expr = _18415_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d7ed22:;
		if (it != expr_end) {
			jule::I32 _1949_i = it - expr->begin();
			jule::Ptr<_1ed694d8c_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U32>(2LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_205d80be1:;
							{
								(_19213_rangeN)++;
								goto _iter_next_205d7ed22;
							}
						}
						else {
							_case_begin_205d80ebb:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_205d80cac:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_205d7ed22;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_2193a460d_Log _21321_err = _2031d054e_makeErr(_19412_token.get()._field_Row, _19412_token.get()._field_Column, &(_19412_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_2193a460d_Log> &__jule_push_dest = _19013_errors; __jule_push_dest.push(_21321_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> &__jule_push_dest = _18913_parts; __jule_push_dest.push((*(_18415_tokens)).slice(_19313_last, _1949_i)); };
					_19313_last=static_cast<jule::I32>((_1949_i + 1LL));
				};
			}
			_iter_next_205d7ed22:;
			++it;
			_1949_i++;
			goto _iter_begin_205d7ed22;
		}
		_iter_end_205d7ed22:;
	};
	if ((_19313_last < (*(_18415_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> &__jule_push_dest = _18913_parts; __jule_push_dest.push((*(_18415_tokens)).slice(_19313_last)); };
	} else if ((!(_18446_expr_must))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ed694d8c_Token>>> &__jule_push_dest = _18913_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1ed694d8c_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _2031d183b_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_205d83980:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_205d8451e:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_205d84585:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_205d81dce:;
			{
				return jule::Str();;
			}
		}
		_match_end_205d81d79:;
	};
}



inline _2193a460d_Log _2031d1c26_compilerErr(jule::Ptr<_1ed694d8c_Token>* _24317_token, jule::Str* _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _2193a460d_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_24317_token)).get()._field_Row, ._field_Column=(*(_24317_token)).get()._field_Column, ._field_Path=(*(_24317_token)).get()._field_File.get()._field_Path, ._field_Text=_2193a4a4d_Logf((*(_24333_fmt)), _24346_args), ._field_Line=_1ed69b13a_GetRow((*(_24317_token)).get()._field_File.ptr(), (*(_24317_token)).get()._field_Row), };;
}



inline void _2031d2155_pushSuggestion(_2193a460d_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_2193a4a4d_Logf(_25441_fmt, _25454_args);
}



inline jule::Str _2031d23ec_tokstoa(jule::Slice<jule::Ptr<_1ed694d8c_Token>>* _25813_tokens) {
	jule::I32 _25913_n = 0LL;;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d8729c:;
		if (it != expr_end) {
			jule::Ptr<_1ed694d8c_Token> *_26012_token = it;
			{
				_25913_n+=(*(_26012_token)).get()._field_Kind.len();
			}
			_iter_next_205d8729c:;
			++it;
			goto _iter_begin_205d8729c;
		}
		_iter_end_205d8729c:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_205d87874:;
		if (it != expr_end) {
			jule::Ptr<_1ed694d8c_Token> *_26412_token = it;
			{
				_26313_s+=(*(_26412_token)).get()._field_Kind;
			}
			_iter_next_205d87874:;
			++it;
			goto _iter_begin_205d87874;
		}
		_iter_end_205d87874:;
	};
	return _26313_s;;
}



inline jule::Bool _2031e253e_isPub(jule::Str* _203711_ident) {
	jule::I32 _203810_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _217e871e2_DecodeRuneStr((*(_203711_ident)));
		_203810_r = __jule_assign_result.__jule_result_arg0;
	});
	return _2192d34e8_IsUpper(_203810_r);;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e2dd0_buildVoidType(void) {
	return jule::new_ptr<_200eda6ad_TypeDecl>();;
}



inline jule::Ptr<_200eda6ad_TypeDecl> _2031e3122_buildPrimType(jule::Ptr<_1ed694d8c_Token> _2322_t) {
	return jule::new_ptr<_200eda6ad_TypeDecl>(_200eda6ad_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_200edac74_IdentTypeDecl>(_200edac74_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type20)});;
}



inline __jule_tuple_bool__jule_tuple_bool _2012c8869_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_206015e64:;
			{
				__jule_func_result.__jule_result_arg0=_2193a791e_IsWindows(_21ab652b8_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_206015859:;
			{
				__jule_func_result.__jule_result_arg0=_2193a7bc7_IsDarwin(_21ab652b8_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_2060158c0:;
			{
				__jule_func_result.__jule_result_arg0=_2193a7e6e_IsLinux(_21ab652b8_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_206015936:;
			{
				__jule_func_result.__jule_result_arg0=_2193a8a74_IsUnix(_21ab652b8_Os);
			}
		}
		else {
			_case_begin_206015260:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_20601556d:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _2012c3930_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_206017a7b:;
			{
				__jule_func_result.__jule_result_arg0=_2193a828d_IsI386(_21ab65582_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_206017ae2:;
			{
				__jule_func_result.__jule_result_arg0=_2193a8535_IsAmd64(_21ab65582_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_206017b58:;
			{
				__jule_func_result.__jule_result_arg0=_2193a87cc_IsArm64(_21ab65582_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_206017bbe:;
			{
				__jule_func_result.__jule_result_arg0=_2193a9190_Is64Bit(_21ab65582_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_206017c35:;
			{
				__jule_func_result.__jule_result_arg0=_2193a8de8_Is32Bit(_21ab65582_Arch);
			}
		}
		else {
			_case_begin_206017493:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_2060177a1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _2012c3b3e_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_219323934_Base(_5029_p);
	jule::I32 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _2193233e5_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I32 _6413_i = _21931b663_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2012c8869_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2012c3930_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I32>(_21931b663_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2012c8869_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2012c3930_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2012c3930_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2012c8869_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2012c8869_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _2012dd72a_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_21ab652b8_Os); };
	if (_2193a8a74_IsUnix(_21ab652b8_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str("unix", 4)); };
	};
}



inline void _2012dd97d_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_21ab65582_Arch); };
	if (_2193a9190_Is64Bit(_21ab65582_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x64", 3)); };
	};
	if (_2193a8de8_Is32Bit(_21ab65582_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x32", 3)); };
	};
}



inline void _2012ddc36_initVars(jule::Slice<jule::Str>* _5518_vars, _2012dd41c_CompileInfo* _5532_info) {
	_2012dd72a_setOsVars(_5518_vars);
	_2012dd97d_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_206023779:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2060237e0:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("gcc", 3)); };
			}
		}
		_match_end_206023713:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_20602411a:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_206024181:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2060241e7:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp20", 5)); };
			}
		}
		_match_end_206022d83:;
	};
}



inline jule::Slice<jule::U8> _2031e6c4c_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__217da7057_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_21ab6422e_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _2193a460d_Log _2031e6e8e_flatCompilerErr(jule::Str _4120_text) {
	return _2193a460d_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Text=_4120_text, };;
}



inline void _2031eb1e6_pushPasses(jule::Ptr<_20107ded2_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206052e3a:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2060538a8:;
					if (it != expr_end) {
						_201027596_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_2060538a8;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_2060542c1:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_2060538a8;
										};
									}
									_iter_next_2060542c1:;
									++it;
									goto _iter_begin_2060542c1;
								}
								_iter_end_2060542c1:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_2060538a8:;
						++it;
						goto _iter_begin_2060538a8;
					}
					_iter_end_2060538a8:;
				};
			}
			_iter_next_206052e3a:;
			++it;
			goto _iter_begin_206052e3a;
		}
		_iter_end_206052e3a:;
	};
}



inline jule::Slice<jule::Str> _2031eb57b_getAllUniquePasses(jule::Ptr<_20107ded2_Package>* _12828_pkg, jule::Slice<jule::Ptr<_20107b397_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_2031eb1e6_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206055cb7:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_Binded))) {
					_2031eb1e6_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_206055cb7:;
			++it;
			goto _iter_begin_206055cb7;
		}
		_iter_end_206055cb7:;
	};
	return _12913_passes;;
}



inline _2012dd41c_CompileInfo _2031eb779_buildCompileInfo(void) {
	_2012dd41c_CompileInfo _14213_info = _2012dd41c_CompileInfo{._field_Prod=_216de596a_Production, ._field_Test=_216de500d_Test, };;
	{
		auto &_match_expr{ _216de43d6_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_206056e94:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_20605701b:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_206056e2d:;
	};
	{
		auto &_match_expr{ _216de4826_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_206055b41:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2060573b2:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_206057428:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_2060577be:;
	};
	return _14213_info;;
}



inline void _20332938a_EliminateDefines(jule::Ptr<_2031e99ca_IR>* _28526_ir) {
	jule::Ptr<_2032e4dd3_ObjectDeadCode> _28613_ocd = static__2032e5367_new(_28526_ir);;
	_20332907c_elimanate(_28613_ocd);
}



inline jule::Ptr<_200d472d9_Directive> _203329720_findDirective(jule::Slice<jule::Ptr<_200d472d9_Directive>>* _29123_directives, jule::Str _29154_tag) {
	{
		auto expr = _29123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060905b5:;
		if (it != expr_end) {
			jule::Ptr<_200d472d9_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_2060905b5:;
			++it;
			goto _iter_begin_2060905b5;
		}
		_iter_end_2060905b5:;
	};
	return nullptr;;
}



inline jule::Bool _203329a61_hasDirective(jule::Slice<jule::Ptr<_200d472d9_Directive>>* _30118_directives, jule::Str _30149_tag) {
	return (_203329720_findDirective(_30118_directives, _30149_tag) != nullptr);;
}



inline void _20332d6ad_eliminateDeadCodeOfScope(jule::Ptr<_20105c92d_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_20106016c_Label>> _2429_labels = jule::Slice<jule::Ptr<_20106016c_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_201060458_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_201060458_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_20332a7a9_scopeDeadCode> _24413_sdc = jule::new_ptr<_20332a7a9_scopeDeadCode>(_20332a7a9_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_20106016c_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_201060458_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_20332d37d_optimizeStmts(_24413_sdc);
	};
}



inline void _20332d944_eliminateScopeFunctions(jule::Slice<jule::Ptr<_20102065a_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060d3691:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2060d3c46:;
					if (it != expr_end) {
						jule::Ptr<_20102330b_FnIns> _25621_ins = *it;
						{
							_20332d6ad_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_2060d3c46:;
						++it;
						goto _iter_begin_2060d3c46;
					}
					_iter_end_2060d3c46:;
				};
			}
			_iter_next_2060d3691:;
			++it;
			goto _iter_begin_2060d3691;
		}
		_iter_end_2060d3691:;
	};
}



inline void _20332db86_eliminateFunctionsScopePackage(jule::Ptr<_20107ded2_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2060d41ca:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _26317_f = *it;
			{
				_20332d944_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_2060d41ca:;
			++it;
			goto _iter_begin_2060d41ca;
		}
		_iter_end_2060d41ca:;
	};
}



inline void _20332de2d_eliminateScopePackage(jule::Ptr<_20107ded2_Package>* _26831_pkg) {
	_20332db86_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _20332e13c_EliminateScopes(jule::Ptr<_2031e99ca_IR>* _27325_ir) {
	jule::I32 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_20107b397_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_Binded))) {
				_20332de2d_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_2060d563d:;
	}
	_iter_end_2060d563d:;;
	_20332de2d_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _20120badd_isStdPackage(jule::Str _44417_f, jule::Str _44425_p) {
	return _219318297_HasPrefix(_44417_f, _21932314d_Join(jule::Slice<jule::Str>::make({_21ab64718_PathStdlib,_44425_p})));;
}



inline jule::Bool _20120bdeb_isConstantValidConditionalCase(jule::Ptr<_20105cd29_If>* _44836_i) {
	{
		auto &_match_expr{ (*(_44836_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_206154503:;
			{
				jule::Ptr<_1ee33c6d2_Const> _45113_c = (*(_44836_i)).get()._field_Expr.cast_ptr<_1ee33c6d2_Const>(&__jule_any_type19);;
				return (_1ee34184b_IsBool(_45113_c.ptr()) && _1ee33e4a3_ReadBool(_45113_c.ptr()));;
			}
		}
		_match_end_20615438d:;
	};
	return false;;
}



inline jule::Bool _20120c1a4_isUnreachableExpr(jule::Any* _45723_expr) {
	{
		auto &_match_expr{ (*(_45723_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_206154e1b:;
			{
				jule::Ptr<_1ee33c6d2_Const> _46013_c = (*(_45723_expr)).cast_ptr<_1ee33c6d2_Const>(&__jule_any_type19);;
				return (_1ee34184b_IsBool(_46013_c.ptr()) && (!(_1ee33e4a3_ReadBool(_46013_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_206154e93:;
			{
				jule::Ptr<_2010124d7_BinopExprModel> _46313_m = (*(_45723_expr)).cast_ptr<_2010124d7_BinopExprModel>(&__jule_any_type114);;
				if (_46313_m.get()._field_Op.get()._field_Kind.equal("&&", 2)) {
					return (_20120c1a4_isUnreachableExpr(&(_46313_m.get()._field_Left.get()._field_Model)) || _20120c1a4_isUnreachableExpr(&(_46313_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_2061545be:;
	};
	return false;;
}



inline jule::Bool _20120c4e5_isConstantValidMatchCase(jule::Ptr<_201062290_Case>* _47230_case) {
	{
		auto expr = &((*(_47230_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20615624c:;
		if (it != expr_end) {
			jule::Ptr<_2010edb23_Data> *_47312_expr = it;
			{
				if (((_2010ee492_IsConst((*(_47312_expr)).ptr()) && _1ee34184b_IsBool((*(_47312_expr)).get()._field_Constant.ptr())) && _1ee33e4a3_ReadBool((*(_47312_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_20615624c:;
			++it;
			goto _iter_begin_20615624c;
		}
		_iter_end_20615624c:;
	};
	return false;;
}



inline jule::Bool _20120c78c_isUnreachableConditionalCase(jule::Ptr<_20105cd29_If>* _48134_i) {
	return _20120c1a4_isUnreachableExpr(&((*(_48134_i)).get()._field_Expr));;
}



inline jule::Bool _20120ca45_isUnreachableMatchCase(jule::Ptr<_201062290_Case>* _48528_case) {
	{
		auto expr = &((*(_48528_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206159b02:;
		if (it != expr_end) {
			jule::Ptr<_2010edb23_Data> *_48612_expr = it;
			{
				if ((!(_20120c1a4_isUnreachableExpr(&((*(_48612_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_206159b02:;
			++it;
			goto _iter_begin_206159b02;
		}
		_iter_end_206159b02:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _201215443_checkForBitShiftOpt(jule::Ptr<_201012020_OperandExprModel>* _46625_l, jule::Ptr<_201012020_OperandExprModel>* _46648_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1ee33bbcb_IsInt(_2011314a2_Str((*(_46625_l)).get()._field_Kind.ptr())))) || (!(_1ee33bbcb_IsInt(_2011314a2_Str((*(_46648_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_46648_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_2061947a7:;
			{
				goto _match_end_2061951d1;
			}
		}
		else {
			_case_begin_206195324:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_2061951d1:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1ee33ee54_AsU64((*(_46648_r)).get()._field_Model.cast_ptr<_1ee33c6d2_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4809_j = _1ee2dd9c4_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4819_z = static_cast<jule::U64>(_4809_j);;
	if ((static_cast<jule::F64>(_4819_z) != _4809_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4819_z;
	return __jule_func_result;;
}



inline jule::Bool _2012157c8_areSameLvalueExprModel(jule::Any* _48928_l, jule::Any* _48943_r) {
	{
		auto &_match_expr{ (*(_48928_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20619835a:;
			{
				return ((*(_48943_r)) == (*(_48928_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_2061983d2:;
			{
				{
					auto &_match_expr{ (*(_48943_r)) };
					
					if (_match_expr.type == &__jule_any_type71) {
						_case_begin_206198c62:;
						{
							goto _match_end_206198cea;
						}
					}
					else {
						_case_begin_206198d50:;
						{
							return false;;
						}
					}
					_match_end_206198cea:;
				};
				jule::Ptr<_201016bc3_StructSubIdentExprModel> _50213_lsi = (*(_48928_l)).cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71);;
				jule::Ptr<_201016bc3_StructSubIdentExprModel> _50313_rsi = (*(_48943_r)).cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_50213_lsi.get()._field_Field != _50313_rsi.get()._field_Field)) {
					return false;;
				};
				return _2012157c8_areSameLvalueExprModel(&(_50213_lsi.get()._field_Expr.get()._field_Model), &(_50313_rsi.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_20619847b:;
			{
				{
					auto &_match_expr{ (*(_48943_r)) };
					
					if (_match_expr.type == &__jule_any_type74) {
						_case_begin_20619ad30:;
						{
							jule::Ptr<_20101288e_UnaryExprModel> _51517_ul = (*(_48928_l)).cast_ptr<_20101288e_UnaryExprModel>(&__jule_any_type74);;
							jule::Ptr<_20101288e_UnaryExprModel> _51617_ur = (*(_48943_r)).cast_ptr<_20101288e_UnaryExprModel>(&__jule_any_type74);;
							if (((_51517_ul.get()._field_Op.get()._field_Id != _51617_ur.get()._field_Op.get()._field_Id) || (_51517_ul.get()._field_Op.get()._field_Kind != _51617_ur.get()._field_Op.get()._field_Kind))) {
								return false;;
							};
							return _2012157c8_areSameLvalueExprModel(&(_51517_ul.get()._field_Expr.get()._field_Model), &(_51617_ur.get()._field_Expr.get()._field_Model));;
						}
					}
					_match_end_20619a5c1:;
				};
			}
		}
		_match_end_206198239:;
	};
	return false;;
}



inline void _201217a83_PushOptLevel(jule::I32 _3417_level) {
	_201215ed2_Copy=(_3417_level >= static_cast<jule::I32>(1LL));
	_2012162e0_Deadcode=(_3417_level >= static_cast<jule::I32>(1LL));
	_2012165a9_Append=(_3417_level >= static_cast<jule::I32>(1LL));
	_2012168b7_Math=(_3417_level >= static_cast<jule::I32>(1LL));
	_201216b81_Access=(_3417_level >= static_cast<jule::I32>(1LL));
	_201216e4a_Inline=(_3417_level >= static_cast<jule::I32>(1LL));
	_201217214_Ptr=(_3417_level >= static_cast<jule::I32>(1LL));
	_2012175dd_Cond=(_3417_level >= static_cast<jule::I32>(1LL));
	_2012178a7_Str=(_3417_level >= static_cast<jule::I32>(1LL));
}



inline void _20333809c_detectEnabled(void) {
	_2033360bc_exprEnabled=(((_201217214_Ptr || _2012168b7_Math) || _201216b81_Access) || _2012175dd_Cond);
	_2033362dc_scopeEnabled=(((_2012175dd_Cond || _2012165a9_Append) || _201215ed2_Copy) || _2012178a7_Str);
}



inline void _20335b2bd_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_21ab6422e_Exit(1LL);
}



inline jule::U64 _203b054e5_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _203b05803_unixYearToSeconds(jule::U64 _20122_y, jule::Bool* _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		(*(_20140_leap))=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if ((*(_20140_leap))) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		(*(_20140_leap))=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			(*(_20140_leap))=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			(*(_20140_leap))=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if ((*(_20140_leap))) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _203b05b88_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_20622ab90:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_20622ac06:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_20622ac6c:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_20622acd3:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_20622ad5a:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_20622add2:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_20622ae59:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_20622aed1:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_20622b058:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_20622b0d0:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_20622b157:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_20622aa3b:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _203a5380b_isCopyOptimizable(jule::Ptr<_2010edb23_Data>* _81623_expr) {
	if ((!((*(_81623_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81623_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_2062ccd30:;
			{
				return false;;
			}
		}
		_match_end_2062cccca:;
	};
	return true;;
}



inline jule::Bool _203a53b91_isIterCopyOptimizable(jule::Ptr<_2010edb23_Data>* _82727_expr, jule::Ptr<_2010a4975_Var>* _82741_v) {
	if (((!((*(_82727_expr)).get()._field_Lvalue)) && (!(_20113288d_Mutable((*(_82727_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82741_v)).get()._field_Mutable)) && (!((*(_82727_expr)).get()._field_Mutable)));;
}



inline jule::Str _203a63662_decomposeCommonEsq(jule::U8 _153823_b) {
	{
		auto &_match_expr{ _153823_b };
		
		if (_match_expr == '\\') {
			_case_begin_206380993:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_206379926:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_206380861:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_206380454:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_2063804ba:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_206380531:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_206380597:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_206380a09:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_206380a70:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_206380ad6:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_206380355:;
			{
				return jule::Str();;
			}
		}
		_match_end_206380223:;
	};
}



inline jule::Str _203a6394d_sbtoa(jule::U8 _156510_b) {
	if ((_156510_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_156510_b < 128LLU)) {
		jule::Str _157013_seq = _203a63662_decomposeCommonEsq(_156510_b);;
		if ((!(_157013_seq.empty()))) {
			return _157013_seq;;
		};
		if (((32LL <= _156510_b) && (_156510_b <= 126LLU))) {
			return jule::Str::from_byte(_156510_b);;
		};
	};
	jule::Str _15789_seq = _1ee32c6d3_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_156510_b)), 8LL);;
	if ((_15789_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15789_seq);;
	};
	return (jule::Str("\\", 1) + _15789_seq);;
}



inline jule::Str _203a63be5_cstrBytes(jule::Slice<jule::U8> _158514_bytes) {
	jule::Str _158613_lit = jule::Str::alloc(0LL, _158514_bytes.len());;
	{
		auto expr = &(_158514_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206385745:;
		if (it != expr_end) {
			jule::U8 *_158712_b = it;
			{
				_158613_lit+=_203a6394d_sbtoa((*(_158712_b)));
			}
			_iter_next_206385745:;
			++it;
			goto _iter_begin_206385745;
		}
		_iter_end_206385745:;
	};
	return _158613_lit;;
}



inline jule::Str _203a64014_cstrLit(jule::Slice<jule::U8> _159312_bytes) {
	return ((jule::Str("\"", 1) + _203a63be5_cstrBytes(_159312_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _203a64322_ftoa(jule::F64 _15979_f, jule::I32 _159717_bitsize) {
	if ((_159717_bitsize != 32LL)) {
		if ((_15979_f == static_cast<jule::F64>(static_cast<jule::I64>(_15979_f)))) {
			return _203a645b9_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_15979_f)));;
		};
		if ((_15979_f == static_cast<jule::F64>(static_cast<jule::U64>(_15979_f)))) {
			return _203a64861_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_15979_f)));;
		};
	};
	jule::Str _160613_m = _1ee317338_FmtFloat(_15979_f, 'f', -1LL, _159717_bitsize);;
	if ((!(_21931cee4_Contains(_160613_m, jule::Str(".", 1))))) {
		(_160613_m).append(".0", 2);
	};
	return _160613_m;;
}



inline jule::Str _203a645b9_itoa(jule::I64 _16139_x) {
	{
		
		if ((_16139_x == jule::MAX_I64)) {
			_case_begin_206388bbb:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_16139_x == jule::MIN_I64)) {
			_case_begin_206388c98:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_206388acd:;
	};
	jule::Str _16219_fmt = _1ee32ca68_FmtInt(_16139_x, 10LL);;
	if (_2193a9190_Is64Bit(jule::Str("i386", 4))) {
		return (_16219_fmt + jule::Str("LL", 2));;
	};
	return (_16219_fmt + jule::Str("L", 1));;
}



inline jule::Str _203a64861_utoa(jule::U64 _16289_x) {
	{
		
		if ((_16289_x == jule::MAX_U64)) {
			_case_begin_20638a591:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_206389e64:;
	};
	jule::Str _16349_fmt = _1ee32c6d3_FmtUint(_16289_x, 10LL);;
	if (_2193a9190_Is64Bit(jule::Str("i386", 4))) {
		return (_16349_fmt + jule::Str("LLU", 3));;
	};
	return (_16349_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _203a64c18_isForwarded(jule::Ptr<_20105c92d_Scope>* _164117_s) {
	jule::Any _16429_last = (*(_164117_s)).get()._field_Stmts[((*(_164117_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16429_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_20638b3a5:;
			{
				{
					auto &_match_expr{ _16429_last.cast_ptr<_2010edb23_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_20638c5e8:;
						{
							return true;;
						}
					}
					else {
						_case_begin_20638d022:;
						{
							return false;;
						}
					}
					_match_end_20638cc69:;
				};
			}
		}
		else {
			_case_begin_20638c395:;
			{
				return true;;
			}
		}
		_match_end_20638c2b8:;
	};
}



inline jule::Bool _203a64ed2_isBuiltinCallHasDebuginf(jule::Ptr<_201014352_FnCallExprModel>* _165630_m) {
	if ((!(_201024692_IsBuiltin((*(_165630_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_165630_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_20638d231:;
			{
				jule::Ptr<_201017c7e_CommonSubIdentExprModel> _166213_csie = (*(_165630_m)).get()._field_Expr.cast_ptr<_201017c7e_CommonSubIdentExprModel>(&__jule_any_type73);;
				return _166213_csie.get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_20638d8e6:;
			{
				return false;;
			}
		}
		_match_end_20638dbd2:;
	};
}



inline jule::Bool _203a65213_isExprComesFromBind(jule::Ptr<_2010edb23_Data>* _166925_d) {
	{
		auto &_match_expr{ (*(_166925_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20638e73d:;
			{
				return (*(_166925_d)).get()._field_Model.cast_ptr<_2010a4975_Var>(&__jule_any_type8).get()._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_206390299:;
			{
				return (*(_166925_d)).get()._field_Model.cast_ptr<_201016bc3_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_Binded;;
			}
		}
		else {
			_case_begin_20638de79:;
			{
				return false;;
			}
		}
		_match_end_20638de24:;
	};
}



inline jule::Bool _203a654aa_isAny(jule::Ptr<_2011310ea_TypeKind>* _168115_t) {
	if ((_2011342b8_TypeEnum((*(_168115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_201138850_Prim> _16859_prim = _201133817_Prim((*(_168115_t)).ptr());;
	return ((_16859_prim != nullptr) && _20113bcb5_IsAny(_16859_prim.ptr()));;
}



inline void _203b18c9a_iterFiles(jule::Ptr<_20107ded2_Package>* _136719_pkg, jule::Fn<void(jule::Ptr<_2010e9118_SymbolTable>*)> _136734_f) {
	{
		auto expr = &((*(_136719_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20650cc85:;
		if (it != expr_end) {
			jule::Ptr<_2010e9118_SymbolTable> _136817_file = *it;
			{
				_136734_f(&(_136817_file));
			}
			_iter_next_20650cc85:;
			++it;
			goto _iter_begin_20650cc85;
		}
		_iter_end_20650cc85:;
	};
}



inline jule::Str _203b19086_concatAllParts(jule::Slice<jule::Ptr<_1ed694d8c_Token>> _137419_parts) {
	jule::I32 _137513_n = 0LL;;
	{
		auto expr = &(_137419_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20650dd74:;
		if (it != expr_end) {
			jule::Ptr<_1ed694d8c_Token> *_137612_part = it;
			{
				_137513_n+=(*(_137612_part)).get()._field_Kind.len();
			}
			_iter_next_20650dd74:;
			++it;
			goto _iter_begin_20650dd74;
		}
		_iter_end_20650dd74:;
	};
	if ((_137513_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _138213_s = jule::Str::alloc(0LL, _137513_n);;
	{
		auto expr = &(_137419_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20650d725:;
		if (it != expr_end) {
			jule::Ptr<_1ed694d8c_Token> *_138312_p = it;
			{
				_138213_s+=(*(_138312_p)).get()._field_Kind;
			}
			_iter_next_20650d725:;
			++it;
			goto _iter_begin_20650d725;
		}
		_iter_end_20650d725:;
	};
	return _138213_s;;
}



inline jule::Bool _203b193c7_containsTraitMethod(jule::Ptr<_20103287b_Trait>* _139029_t, jule::Str* _139041_ident) {
	{
		auto expr = &((*(_139029_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065107c1:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _139112_m = *it;
			{
				if ((_139112_m.get()._field_Ident == (*(_139041_ident)))) {
					return true;;
				};
			}
			_iter_next_2065107c1:;
			++it;
			goto _iter_begin_2065107c1;
		}
		_iter_end_2065107c1:;
	};
	return false;;
}



inline void _203b196c4_pushMethodsFromInherit(jule::Ptr<_20103287b_Trait>* _140232_dest, jule::Ptr<_20103287b_Trait>* _140251_src) {
	_203b1999e_pushMethodsFromInherits(_140232_dest, _140251_src);
	{
		auto expr = &((*(_140251_src)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20651197b:;
		if (it != expr_end) {
			jule::Ptr<_20102065a_Fn> _140417_m = *it;
			{
				if ((!(_203b193c7_containsTraitMethod(_140232_dest, &(_140417_m.get()._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_20102065a_Fn>> &__jule_push_dest = (*(_140232_dest)).get()._field_Methods; __jule_push_dest.push(_140417_m); };
				};
			}
			_iter_next_20651197b:;
			++it;
			goto _iter_begin_20651197b;
		}
		_iter_end_20651197b:;
	};
}



inline void _203b1999e_pushMethodsFromInherits(jule::Ptr<_20103287b_Trait>* _141333_dest, jule::Ptr<_20103287b_Trait>* _141352_src) {
	{
		auto expr = &((*(_141352_src)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206511c9a:;
		if (it != expr_end) {
			jule::Ptr<_201137e9d_TypeSymbol> _141417_inh = *it;
			{
				jule::Ptr<_20103287b_Trait> _141517_t2 = _201134ecd_Trait(_141417_inh.get()._field_Kind.ptr());;
				_203b196c4_pushMethodsFromInherit(_141333_dest, &(_141517_t2));
			}
			_iter_next_206511c9a:;
			++it;
			goto _iter_begin_206511c9a;
		}
		_iter_end_206511c9a:;
	};
}



inline jule::Ptr<_200d472d9_Directive> _203b2ca28_findDirective(jule::Slice<jule::Ptr<_200d472d9_Directive>>* _46623_directives, jule::Str _46654_tag) {
	{
		auto expr = _46623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2065ea8bc:;
		if (it != expr_end) {
			jule::Ptr<_200d472d9_Directive> _46717_dr = *it;
			{
				if ((_46717_dr.get()._field_Tag.get()._field_Kind == _46654_tag)) {
					return _46717_dr;;
				};
			}
			_iter_next_2065ea8bc:;
			++it;
			goto _iter_begin_2065ea8bc;
		}
		_iter_end_2065ea8bc:;
	};
	return nullptr;;
}



inline jule::Bool _203b2cdad_hasDirective(jule::Slice<jule::Ptr<_200d472d9_Directive>>* _47618_directives, jule::Str _47649_tag) {
	return (_203b2ca28_findDirective(_47618_directives, _47649_tag) != nullptr);;
}



inline jule::Bool _203b2d155_shouldInitialized(jule::Ptr<_2011310ea_TypeKind>* _48327_t) {
	jule::Ptr<_201138850_Prim> _4849_prim = _201133817_Prim((*(_48327_t)).ptr());;
	if ((_4849_prim != nullptr)) {
		return ((!(_20113bcb5_IsAny(_4849_prim.ptr()))) && (!(_20113ba51_IsStr(_4849_prim.ptr()))));;
	};
	{
		
		if ((_201133a7b_Sptr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2065ed5d4:;
			{
				return false;;
			}
		}
		else if ((_201135242_Map((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2065ed1c7:;
			{
				return false;;
			}
		}
		else if ((_201134791_Slc((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2065ed24e:;
			{
				return false;;
			}
		}
		else if ((_201134ecd_Trait((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2065ed35e:;
			{
				return false;;
			}
		}
		else if ((_201134a05_Fn((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2065ed3c5:;
			{
				return false;;
			}
		}
		else if ((_20113452c_Arr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2065ed43b:;
			{
				jule::Ptr<_20113eba8_Arr> _50017_arr = _20113452c_Arr((*(_48327_t)).ptr());;
				return _203b2d155_shouldInitialized(&(_50017_arr.get()._field_Elem));;
			}
		}
		else if ((_201134c69_Struct((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_2065ed4a2:;
			{
				return false;;
			}
		}
		else {
			_case_begin_2065eae1c:;
			{
				return true;;
			}
		}
		_match_end_2065ec979:;
	};
}



inline void _21ab685a7_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _21ab6880a_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_21ab685a7_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _4113_max = _21ab683cb_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_21ab683cb_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_206689582:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I32 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_206689582:;
			++it;
			goto _iter_begin_206689582;
		}
		_iter_end_206689582:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_21ab683cb_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20668abb0:;
		if (it != expr_end) {
			jule::I32 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_219317a27_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					(_4913_s).append("\n", 1);
				};
			}
			_iter_next_20668abb0:;
			++it;
			_519_i++;
			goto _iter_begin_20668abb0;
		}
		_iter_end_20668abb0:;
	};
	jule::outln(_4913_s);
}



inline void _21ab68a19_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_21ab685a7_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.15 @master", 18));
}



inline void _21ab68c06_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _21ab68d6b_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _21ab6907a_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_21ab685a7_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_206691666:;
			{
				_21ab68c06_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_2066913e1:;
			{
				_21ab68d6b_toolDistarch();
			}
		}
		else {
			_case_begin_206690a3e:;
			{
				_21ab685a7_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_206690e6d:;
	};
}



inline void _21ab69289_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_21ab685a7_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str("architecture: i386", 18));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _216de43d6_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _216de4826_CppStd));
}



inline void _21ab69575_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_21ab685a7_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_206694856:;
			{
				({
					auto except = static__217da73a9_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_21ab685a7_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_2066942c3:;
			{
				_21ab685a7_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_20669446b:;
	};
}



inline jule::Bool _21ab6981c_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_206694900:;
			{
				_21ab6880a_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_206695d96:;
			{
				_21ab68a19_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_206695e0c:;
			{
				_21ab6907a_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_20669566a:;
			{
				_21ab69289_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_2066956d1:;
			{
				_21ab69575_mod(_15320_args);
			}
		}
		else {
			_case_begin_206695604:;
			{
				return false;;
			}
		}
		_match_end_2066950c6:;
	};
	return true;;
}



inline void _21ab69982_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _2180416b9_Args();;
	if ((_18913_args.len() < 2LL)) {
		_21ab69982_showInfo();
		return;;
	};
	if (_21ab6981c_processCommand(&(_18913_args))) {
		return;;
	};
	_203b8ced9_compileCommand(&(_18913_args));
}



inline void _21ab6a455_enableVtp(void) {
	jule::Uintptr _199_hOut = _217d828b2_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));;
	if ((_199_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I32 _2413_dwMode = 0LL;;
	if ((!(_217d84c27_GetConsoleMode(_199_hOut, &(_2413_dwMode))))) {
		return;;
	};
	_2413_dwMode|=4LL;
	_217d852dd_SetConsoleMode(_199_hOut, _2413_dwMode);
}



inline void _21ab6a5ed_init(void) {
	_21ab6a455_enableVtp();
}



inline void _203b8a03b_init(void) {
	_216de43d6_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_217da65ea_File> _203b8a2e4_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _219323ca8_Dir((*(_4316_path)));;
	({
		auto except = static__219325419_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__219324803_Create(_449_dir);
				if (!except.ok()) {
					_20335b2bd_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__217da6cb0_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_20335b2bd_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _203b8a459_clearObjects(void) {
	({
		auto except = static__217e89ed6_Remove(_203b8b56a_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__219324a12_Remove(_203b89942_OutDir);
}



inline void _203b8a756_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_21ab5c733_Cmd> _7313_cmd = static__21ab5cb40_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_21931cba3_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _21ab5cd1b_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_20669cd7b:;
					{
						static__2033578b3_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_20669d0e0:;
					{
						static__2033578b3_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_20669cead:;
					{
						static__2033578b3_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_20669ce14:;
			};
			_20335b2bd_Throw(jule::Str());
		}
	});
	jule::I32 _869_status = ({
		auto except = _21ab5d25b_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _216de43d6_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__2033578b3_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_20335b2bd_Throw(jule::Str());
	};
	_203b8a459_clearObjects();
}



inline jule::Bool _203b8a9ed_isCppSourceFile(jule::Str _9920_path) {
	jule::I32 _1009_offset = _21931b663_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _219397139_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _203b8ac0c_pushCompCmdClang(jule::Str* _10726_cmd) {
	((*(_10726_cmd))).append("-Wno-everything ", 16);
	((*(_10726_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _216de4826_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_20669b95c:;
			{
				((*(_10726_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2066a1ad8:;
			{
				((*(_10726_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2066a1b4e:;
			{
				((*(_10726_cmd))).append("c++20", 5);
			}
		}
		_match_end_2066a18c9:;
	};
	((*(_10726_cmd))).append(" ", 1);
	if (_216de596a_Production) {
		((*(_10726_cmd))).append("-O3 ", 4);
		((*(_10726_cmd))).append("-flto ", 6);
		((*(_10726_cmd))).append("-DNDEBUG ", 9);
		((*(_10726_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_10726_cmd))).append("-O0 ", 4);
	};
}



inline void _203b8ae1b_pushCompCmdGcc(jule::Str* _13324_cmd) {
	((*(_13324_cmd))).append("-w ", 3);
	((*(_13324_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _216de4826_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_2066a3667:;
			{
				((*(_13324_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_2066a3986:;
			{
				((*(_13324_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2066a39ec:;
			{
				((*(_13324_cmd))).append("c++20", 5);
			}
		}
		_match_end_2066a3788:;
	};
	((*(_13324_cmd))).append(" ", 1);
	if (_216de596a_Production) {
		((*(_13324_cmd))).append("-O3 ", 4);
		((*(_13324_cmd))).append("-DNDEBUG ", 9);
		((*(_13324_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_13324_cmd))).append("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _203b8b36c_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_2031e99ca_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_216de4606_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _216de43d6_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2066a5b42:;
			{
				_203b8ae1b_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2066a5ba8:;
			{
				_203b8ac0c_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_2066a5ec7:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2066a6945:;
		if (it != expr_end) {
			jule::Ptr<_20107b397_ImportInfo> *_17112_u = it;
			{
				if (((*(_17112_u)).get()._field_Binded && _203b8a9ed_isCppSourceFile((*(_17112_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17112_u)).get()._field_Path;
					(_16113_cmd).append(" ", 1);
				};
			}
			_iter_next_2066a6945:;
			++it;
			goto _iter_begin_2066a6945;
		}
		_iter_end_2066a6945:;
	};
	if ((!(_203b89d82_Out.empty()))) {
		(_16113_cmd).append("-o ", 3);
		_16113_cmd+=_203b89d82_Out;
		(_16113_cmd).append(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2066a6dc9:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				(_16113_cmd).append(" ", 1);
				_16113_cmd+=(*(_18612_pass));
			}
			_iter_next_2066a6dc9:;
			++it;
			goto _iter_begin_2066a6dc9;
		}
		_iter_end_2066a6dc9:;
	};
	if (_21ab652b8_Os.equal("windows", 7)) {
		(_16113_cmd).append(" -lshell32", 10);
	};
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _203b8b56a_getCompilePath(void) {
	return _21932314d_Join(jule::Slice<jule::Str>::make({_203b89942_OutDir,_203b89b62_OutName}));;
}



inline void _203b8b7ac_applyTargetIndependentOptimizations(jule::Ptr<_2031e99ca_IR>* _20545_ir) {
	jule::Ptr<_203336485_Optimizer> _20613_opt = static__2033368e7_New(_20545_ir);;
	_203337d38_Optimize(_20613_opt.ptr());
}



inline void _203b8b922_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _216de43d6_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_2066a9d55:;
			{
				_20335b2bd_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_2066a9a36:;
			{
				if (_216de4606_CompilerPath.empty()) {
					_216de4606_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_2066a9a9c:;
			{
				if (_216de4606_CompilerPath.empty()) {
					_216de4606_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_2066a99c0:;
			{
				_20335b2bd_Throw((jule::Str("invalid option value for --compiler: ", 37) + _216de43d6_Compiler));
			}
		}
		_match_end_2066a9816:;
	};
}



inline void _203b8badc_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_20335b2bd_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _203b8bceb_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_20335b2bd_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _203b8c00a_checkTargetFlag(jule::Str* _24321_target) {
	if ((*(_24321_target)).empty()) {
		_20335b2bd_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2489_parts = _21931cba3_Split((*(_24321_target)), jule::Str("-", 1), -1LL);;
	if ((_2489_parts.len() != 2LL)) {
		_20335b2bd_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _25310_os;;
	jule::Str _25314_arch;;
	({
		jule::Str ___jule_assign_arg = _2489_parts[0LL];
		jule::Str _1___jule_assign_arg = _2489_parts[1LL];
		_25310_os = ___jule_assign_arg;
		_25314_arch = _1___jule_assign_arg;
	});
	if ((!_25310_os.equal("native", 6))) {
		_203b8bceb_checkTargetOs(_25310_os);
		_21ab652b8_Os=_25310_os;
	};
	if ((!_25314_arch.equal("native", 6))) {
		_203b8badc_checkTargetArch(_25314_arch);
		_21ab65582_Arch=_25314_arch;
	};
	_1ee331cd1_UpdateTarget();
}



inline void _203b8c219_checkOptFlag(jule::Str* _26618_opt) {
	if ((*(_26618_opt)).empty()) {
		_20335b2bd_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_2066b0e9e:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_2066b1444:;
			{
				_201217a83_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else {
			_case_begin_2066b0d06:;
			{
				_20335b2bd_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_2066b108c:;
	};
}



inline void _203b8c58d_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _216de4826_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_2066b14aa:;
			{
				goto _match_end_2066b216a;
			}
		}
		else {
			_case_begin_2066b1b3c:;
			{
				_20335b2bd_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _216de4826_CppStd));
			}
		}
		_match_end_2066b216a:;
	};
}



inline jule::Slice<jule::Str> _203b8c824_checkFlags(jule::Slice<jule::Str>* _29116_args) {
	jule::Str _29213_opt = jule::Str("L0", 2);;
	jule::Str _29313_target = jule::Str("native-native", 13);;
	jule::Ptr<_203b84e37_FlagSet> _29513_fs = static__203b85223_New();;
	_2066b3da3_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29213_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_2066b3da3_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_2066b3da3_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_203b89d82_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_216de4a46_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_216de4c66_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_2066b3da3_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_216de43d6_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_2066b3da3_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_216de4606_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_216de596a_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_216de52c7_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_216de56a1_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_2066b3da3_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_216de4826_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_201215ed2_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2012162e0_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2012165a9_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2012168b7_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_201216b81_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_201216e4a_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_201217214_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2012175dd_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_2066bbc57_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2012178a7_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _203b85ee3_Parse(_29513_fs.ptr(), (*(_29116_args)));
		(except.ok()) ? (except.result) : ({
			_20335b2bd_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_203b8b922_checkCompilerFlag();
	_203b8c58d_checkCppStdFlag();
	_203b8c00a_checkTargetFlag(&(_29313_target));
	_203b8c219_checkOptFlag(&(_29213_opt));
	return _31813_content;;
}



inline void _203b8ca33_setupSemaFlags(jule::I32* _33124_flags) {
	if (_216de4a46_Shadowing) {
		(*(_33124_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_2031e99ca_IR> _203b8ccca_buildIr(jule::Slice<jule::Str>* _33713_args) {
	jule::Slice<jule::Str> _3389_content = _203b8c824_checkFlags(_33713_args);;
	jule::I32 _34013_semaFlags = static_cast<jule::I32>(0LL);;
	_203b8ca33_setupSemaFlags(&(_34013_semaFlags));
	if ((_3389_content.len() == 0LL)) {
		_20335b2bd_Throw(_2193a4a4d_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_20335b2bd_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21932368c_Abs(_3389_content[0LL]);
		_34814_path = __jule_assign_result.__jule_result_arg0;
		_34820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34820_ok))) {
		_20335b2bd_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_217da8c3a_Status> _3549_inf = ({
		auto except = static__219325419_Of(_21ab64718_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_20335b2bd_Throw(_2193a4a4d_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_217da8c3a_Status>(nullptr);});
	});;
	if ((!(_217da9103_IsDir(_3549_inf.ptr())))) {
		_20335b2bd_Throw(_2193a4a4d_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_2031e99ca_IR> _36214_ir;;
	jule::Slice<_2193a460d_Log> _36218_logs;;
	({
		__jule_tuple_x_2031e99ca_IR__jule_tuple_s_2193a460d_Log __jule_assign_result = static__2031e9e1a_Build(_34814_path, _34013_semaFlags);
		_36214_ir = __jule_assign_result.__jule_result_arg0;
		_36218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_20335b2bd_Throw(_2193a4a4d_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_34814_path, &__jule_any_type5)})));
	};
	if ((_36218_logs != nullptr)) {
		static__20335a850_PrintLogs(&(_36218_logs));
		_20335b2bd_Throw(jule::Str());
	};
	return _36214_ir;;
}



inline void _203b8ced9_compileCommand(jule::Slice<jule::Str>* _37724_args) {
	(*(_37724_args))=(*(_37724_args)).slice(1LL);
	if ((*(_37724_args))[0LL].equal("test", 4)) {
		_216de500d_Test=true;
		(*(_37724_args))=(*(_37724_args)).slice(1LL);
	};
	jule::Ptr<_2031e99ca_IR> _38313_ir = _203b8ccca_buildIr(_37724_args);;
	;
	if ((!(_216de500d_Test))) {
		jule::Ptr<_20102065a_Fn> _38817_main = _201080423_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_38817_main == nullptr)) {
			_20335b2bd_Throw(_2193a4a4d_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_203b8b7ac_applyTargetIndependentOptimizations(&(_38313_ir));
	_2031ead83_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _203b8b36c_genCompileCmd(_203b8b56a_getCompilePath(), &(_38313_ir));
		_39910_compiler = __jule_assign_result.__jule_result_arg0;
		_39920_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_203b0c5da_ObjectCoder> _40113_oc = static__203b0c9b4_New(&(_38313_ir), _203b0ac48_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_216de500d_Test) {
		jule::Ptr<_203a6748a_TestCoder> _40617_tc = static__203a678b9_New(&(_40113_oc));;
		_203a68aeb_Serialize(_40617_tc);
	} else {
		_203b188e3_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _203b8b56a_getCompilePath();;
	jule::Ptr<_217da65ea_File> _41313_file = _203b8a2e4_openOutput(&(_4129_path));;
	({
		auto except = _217da8025_WriteStr(_41313_file.ptr(), &(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_20335b2bd_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _217da8201_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_216de4c66_Transpilation))) {
		_203b8a756_compileIr(_39910_compiler, _39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_21ab656b4_init();
	_1ee331e46_init();
	_21ab6a5ed_init();
	_203b8a03b_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}