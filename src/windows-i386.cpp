// Auto generated by JuleC.
// JuleC version: beta 0.0.5 @master
// Date: 6/10/2023 11.27 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -O0 -Wno-everything --std=c++17 dist/ir.cpp

#include "api/jule.hpp"                                   

#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   

struct _1e2a7b966_Importer;
struct _1a2db8ce3_Kind;
struct _1a35968cc_Lookup;
struct _1ba8540c3_CommonFlag;

struct _1ec8a7cd7_AnsiEscape;


struct _1ec8a7cd7_Logger;


struct _1ec9a2585_LazyBuff;


struct _1ec8e8025_Log;


struct _1e16eece4_bits_error;


struct _1ec95e245_FloatInfo;


struct _1ec95e245_DecimalSlice;


struct _1e103632e_LeftCheat;


struct _1e103632e_Decimal;


struct _1e176da99_accept_range;


struct _1e15268c9_DirEntry;


struct _1e15268c9_Directory;


struct _1e159479e_File;


struct _1e15771dd_Status;


struct _1e1976730_FoldPair;


struct _1e1976730_CaseRange;


struct _1e1976730_Range16;


struct _1e1976730_Range32;


struct _1e1976730_RangeTable;


struct _1e15a2bb9_Token;


struct _1e17bebd8_File;


struct _1e17c9de1_KindPair;


struct _1e17c9de1_Lex;


struct _1e15a53c5_Ast;


struct _1e16025cb_CommentGroup;


struct _1e16025cb_NamespaceTypeDecl;


struct _1e16025cb_RefTypeDecl;


struct _1e16025cb_SlcTypeDecl;


struct _1e16025cb_TupleTypeDecl;


struct _1e16025cb_PtrTypeDecl;


struct _1e16025cb_ArrTypeDecl;


struct _1e16025cb_MapTypeDecl;


struct _1e16025cb_RetTypeDecl;


struct _1e16025cb_TupleExpr;


struct _1e16025cb_CastExpr;


struct _1e16025cb_StructLit;


struct _1e16025cb_ScopeTree;


struct _1e16025cb_Conditional;


struct _1e1630153_FileInfo;


struct _1e1630153_PackageInfo;


struct _1e184a280_Stmt;


struct _1e184a280_ScopeParser;


struct _1e1776d27_CallData;


struct _1e1776d27_Precedencer;


struct _1e1776d27_ExprBuilder;


struct _1e25dc95b_Parser;


struct _1e2613531_TypeBuilder;


struct _1a37ddd88_Const;


struct _1e177440c_FieldIns;


struct _1e177440c_StructIns;


struct _1e1737e81_RetType;


struct _1e1737e81_ParamIns;


struct _1e1737e81_FnIns;


struct _1e28b6a59_ReferenceStack;


struct _1e28b6a59_SymbolBuilder;


struct _1e2a2e210_Scope;


struct _1e2a2e210_If;


struct _1e2a2e210_Else;


struct _1e2a2e210_Conditional;


struct _1e2a2e210_InfIter;


struct _1e2a2e210_WhileIter;


struct _1e2a2e210_RangeIter;


struct _1e2a2e210_ContSt;


struct _1e2a2e210_BreakSt;


struct _1e2a2e210_Label;


struct _1e2a2e210_GotoSt;


struct _1e2a2e210_Postfix;


struct _1e2a2e210_Assign;


struct _1e2a2e210_MultiAssign;


struct _1e2a2e210_Match;


struct _1e2a2e210_Case;


struct _1e2a2e210_FallSt;


struct _1e2a2e210_RetSt;


struct _1e2a2e210_Recover;


struct _1e2a2e210_ScopeGoto;


struct _1e2a2e210_ScopeChecker;


struct _1e2a30c17_BinopExprModel;


struct _1e2a30c17_UnaryExprModel;


struct _1e2a30c17_GetRefPtrExprModel;


struct _1e2a30c17_StructArgExprModel;


struct _1e2a30c17_StructLitExprModel;


struct _1e2a30c17_AllocStructLitExprModel;


struct _1e2a30c17_CastingExprModel;


struct _1e2a30c17_FnCallExprModel;


struct _1e2a30c17_SliceExprModel;


struct _1e2a30c17_IndexigExprModel;


struct _1e2a30c17_AnonFnExprModel;


struct _1e2a30c17_KeyValPairExprModel;


struct _1e2a30c17_MapExprModel;


struct _1e2a30c17_SlicingExprModel;


struct _1e2a30c17_TraitSubIdentExprModel;


struct _1e2a30c17_StructSubIdentExprModel;


struct _1e2a30c17_StructStaticIdentExprModel;


struct _1e2a30c17_ArrayExprModel;


struct _1e2a30c17_CommonIdentExprModel;


struct _1e2a30c17_CommonSubIdentExprModel;


struct _1e2a30c17_TupleExprModel;


struct _1e2a30c17_BuiltinOutCallExprModel;


struct _1e2a30c17_BuiltinOutlnCallExprModel;


struct _1e2a30c17_BuiltinCloneCallExprModel;


struct _1e2a30c17_BuiltinNewCallExprModel;


struct _1e2a30c17_BuiltinRealCallExprModel;


struct _1e2a30c17_BuiltinDropCallExprModel;


struct _1e2a30c17_BuiltinPanicCallExprModel;


struct _1e2a30c17_BuiltinMakeCallExprModel;


struct _1e2a30c17_BuiltinAppendCallExprModel;


struct _1e2a30c17_BuiltinErrorTraitSubIdentExprModel;


struct _1e2a30c17_SizeofExprModel;


struct _1e2a30c17_AlignofExprModel;


struct _1e2a30c17_RuneExprModel;


struct _1e2a30c17_ExplicitDerefExprModel;


struct _1e2a30c17_IntegratedToStrExprModel;


struct _1e2a30c17_TernaryExprModel;


struct _1e2a7b966_Package;


struct _1e2a7c2a2_Sema;


struct _1ba80e105_IterRelation;


struct _1a2c73c9c_RangeChecker;


struct _1a2d05801_SymbolTable;


struct _1a2c74a6c_Data;


struct _1a2c74a6c_Value;


struct _1a2c74a6c_Eval;


struct _1a2db8ce3_TypeKind;


struct _1a2db8ce3_TypeSymbol;


struct _1a2db8ce3_Prim;


struct _1a2db8ce3_Ref;


struct _1a2db8ce3_Slc;


struct _1a2db8ce3_Tuple;


struct _1a2db8ce3_Map;


struct _1a2db8ce3_Arr;


struct _1a2db8ce3_Ptr;


struct _1a2db8ce3_Referencer;


struct _1e12e1430_PlainImporter;


struct _1e1183e1b_OrderedDefines;


struct _1e1183e1b_DefineOrderer;


struct _1e1037b7c_ScopeDeadCode;


struct _1a48b1542_AbsTime;


struct _1a48b1542_Time;


struct _1a48b1542_Duration;


struct _1ba8540c3_Flag_0;

struct _1ba8540c3_Flag_1;

struct _1ba8540c3_Flag_2;

struct _1ba8540c3_Flag_3;

struct _1ba8540c3_Flag_4;


struct _1ba8540c3_FlagSet;


struct _1e16025cb_LitExpr;


struct _1e16025cb_UnsafeExpr;


struct _1e16025cb_IdentExpr;


struct _1e16025cb_UnaryExpr;


struct _1e16025cb_VariadicExpr;


struct _1e16025cb_NsSelectionExpr;


struct _1e16025cb_SubIdentExpr;


struct _1e16025cb_BinopExpr;


struct _1e16025cb_FieldExprPair;


struct _1e16025cb_BraceLit;


struct _1e16025cb_KeyValPair;


struct _1e16025cb_SliceExpr;


struct _1e16025cb_IndexingExpr;


struct _1e16025cb_SlicingExpr;


struct _1a2c73c9c_DynamicTypeAnnotation;


struct _1a2c73c9c_StructLitChecker;


struct _1e16025cb_TernaryExpr;


struct _1e16025cb_LabelSt;


struct _1e16025cb_FallSt;


struct _1e16025cb_AssignSt;


struct _1e16025cb_RetSt;


struct _1e16025cb_Iter;


struct _1e16025cb_WhileKind;


struct _1e16025cb_RangeKind;


struct _1e16025cb_MatchCase;


struct _1a2c73c9c_AssignTypeChecker;


struct _1a2c73c9c_FnCallArgChecker;


struct _1a2c73c9c_RetTypeChecker;


struct _1e16025cb_GenericDecl;


struct _1e16025cb_GotoSt;


struct _1a2c74a6c_BinopSolver;


struct _1a2db8ce3_TypeAlias;


struct _1e16025cb_AssignLeft;


struct _1e16025cb_Comment;


struct _1e16025cb_ParamDecl;


struct _1e16025cb_FnDecl;


struct _1e16025cb_VarDecl;


struct _1a2db8ce3_TypeChecker;


struct _1e16025cb_BreakSt;


struct _1e10d0a8d_IR;


struct _1e16025cb_ContSt;


struct _1e2a2e210_ScopeLabel;


struct _1e16025cb_If;


struct _1e16025cb_Else;


struct _1e16025cb_Directive;


struct _1e16025cb_TypeAliasDecl;


struct _1e16025cb_Case;


struct _1ba8540c3_ArgParser;


struct _1e16025cb_UseDecl;


struct _1e16025cb_EnumItemDecl;


struct _1e16025cb_EnumDecl;


struct _1e16025cb_FieldDecl;


struct _1e16025cb_StructDecl;


struct _1e16025cb_TraitDecl;


struct _1e16025cb_Impl;


struct _1e16025cb_Expr;


struct _1e16025cb_TypeDecl;


struct _1e24d74b0_AssignInfo;


struct _1e16025cb_IdentTypeDecl;


struct _1e177440c_Field;


struct _1e177440c_Struct;


struct _1e16025cb_FnCallExpr;


struct _1e1737e81_Param;


struct _1e1737e81_Fn;


struct _1e16025cb_Node;


struct _1e28b6a59_Pass;


struct _1e2a1e563_Trait;


struct _1e2a21d4b_EnumItem;


struct _1e2a21d4b_Enum;


struct _1e2a7b966_ImportInfo;


struct _1e2a276ae_Impl;


struct _1ba80e105_Var;


struct _1a2c73c9c_TypeCompatibilityChecker;

struct _1e2a7b966_Importer {
	virtual ~_1e2a7b966_Importer(void) {}

	virtual jule::Ref<_1e2a7b966_ImportInfo> _method_get_import(jule::Str _1633_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ref<_1e15a53c5_Ast>>,jule::Slice<_1ec8e8025_Log>> _method_import_package(jule::Str _2037_path) { return {}; }
	virtual void _method_imported(jule::Ref<_1e2a7b966_ImportInfo>) {}
};

struct _1a2db8ce3_Kind {
	virtual ~_1a2db8ce3_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind> _4721_other) { return {}; }
};

struct _1a35968cc_Lookup {
	virtual ~_1a35968cc_Lookup(void) {}

	virtual jule::Ref<_1e2a7b966_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ref<_1e2a7b966_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ref<_1ba80e105_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ref<_1a2db8ce3_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ref<_1e177440c_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ref<_1e1737e81_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ref<_1e2a1e563_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ref<_1e2a21d4b_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _1ba8540c3_CommonFlag {
	virtual ~_1ba8540c3_CommonFlag(void) {}

	virtual jule::Str _method_name(void) { return {}; }
	virtual jule::I32 _method_short(void) { return {}; }
	virtual jule::Str _method_what(void) { return {}; }
	virtual void _method_reset(void) {}
};


struct _1ec8a7cd7_AnsiEscape {
	

	_1ec8a7cd7_AnsiEscape(void) = default;

	static void _static_method_reset(void);


	static void _static_method_print(jule::Str,jule::Str);


	bool operator==(const _1ec8a7cd7_AnsiEscape &_Src) const { return true; }

	bool operator!=(const _1ec8a7cd7_AnsiEscape &_Src) const { return !this->operator==(_Src); }
};


struct _1ec8a7cd7_Logger {
	

	_1ec8a7cd7_Logger(void) = default;

	static void _static_method_log_flat(_1ec8e8025_Log&);


	static void _static_method_log_error(_1ec8e8025_Log&);


	static void _static_method_log(_1ec8e8025_Log&);


	static void _static_method_print_logs(jule::Slice<_1ec8e8025_Log>&);


	bool operator==(const _1ec8a7cd7_Logger &_Src) const { return true; }

	bool operator!=(const _1ec8a7cd7_Logger &_Src) const { return !this->operator==(_Src); }
};


struct _1ec9a2585_LazyBuff {
	jule::Str _field_path{jule::Str()};
	jule::Slice<jule::U8> _field_buff{jule::Slice<jule::U8>()};
	jule::Int _field_w{jule::Int()};
	jule::Str _field_vol_and_path{jule::Str()};
	jule::Int _field_vol_len{jule::Int()};


	_1ec9a2585_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_1ec9a2585_LazyBuff(void) = default;

	jule::U8 _method_index(jule::Int);


	void _method_append(jule::U8);


	jule::Str _method_string(void);


	bool operator==(const _1ec9a2585_LazyBuff &_Src) const {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	bool operator!=(const _1ec9a2585_LazyBuff &_Src) const { return !this->operator==(_Src); }
};


struct _1ec8e8025_Log {
	jule::Int _field_kind{0LLU};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_text{jule::Str()};
	jule::Str _field_line{jule::Str()};
	jule::Str _field_suggestion{jule::Str()};


	_1ec8e8025_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_1ec8e8025_Log(void) = default;

	bool operator==(const _1ec8e8025_Log &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text &&
			this->_field_line == _Src._field_line &&
			this->_field_suggestion == _Src._field_suggestion;
	}

	bool operator!=(const _1ec8e8025_Log &_Src) const { return !this->operator==(_Src); }
};


struct _1e16eece4_bits_error: public jule::Error {
	jule::Str _field_message{jule::Str()};


	_1e16eece4_bits_error(jule::Str __param_message): _field_message(__param_message) {}

	

	_1e16eece4_bits_error(void) = default;

	jule::Str _method_error(void);


	bool operator==(const _1e16eece4_bits_error &_Src) const {
		return 
			this->_field_message == _Src._field_message;
	}

	bool operator!=(const _1e16eece4_bits_error &_Src) const { return !this->operator==(_Src); }
};


struct _1ec95e245_FloatInfo {
	jule::Uint _field_mantbits{jule::Uint()};
	jule::Uint _field_expbits{jule::Uint()};
	jule::Int _field_bias{jule::Int()};


	_1ec95e245_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_1ec95e245_FloatInfo(void) = default;

	bool operator==(const _1ec95e245_FloatInfo &_Src) const {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	bool operator!=(const _1ec95e245_FloatInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1ec95e245_DecimalSlice {
	jule::Slice<jule::U8> _field_d{jule::Slice<jule::U8>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};


	_1ec95e245_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_1ec95e245_DecimalSlice(void) = default;

	bool operator==(const _1ec95e245_DecimalSlice &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	bool operator!=(const _1ec95e245_DecimalSlice &_Src) const { return !this->operator==(_Src); }
};


struct _1e103632e_LeftCheat {
	jule::Int _field_delta{jule::Int()};
	jule::Str _field_cutoff{jule::Str()};


	_1e103632e_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_1e103632e_LeftCheat(void) = default;

	bool operator==(const _1e103632e_LeftCheat &_Src) const {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	bool operator!=(const _1e103632e_LeftCheat &_Src) const { return !this->operator==(_Src); }
};


struct _1e103632e_Decimal {
	jule::Array<jule::U8,800> _field_d{jule::Array<jule::U8,800>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};
	jule::Bool _field_trunc{jule::Bool()};


	_1e103632e_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_1e103632e_Decimal(void) = default;

	jule::Bool _method_set(jule::Str);


	std::tuple<jule::U64,jule::Bool> _method_float_bits(_1ec95e245_FloatInfo&);


	void _method_assign(jule::U64);


	void _method_shift(jule::Int);


	void _method_round_down(jule::Int);


	void _method_round_up(jule::Int);


	void _method_round(jule::Int);


	jule::U64 _method_rounded_integer(void);


	bool operator==(const _1e103632e_Decimal &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	bool operator!=(const _1e103632e_Decimal &_Src) const { return !this->operator==(_Src); }
};


struct _1e176da99_accept_range {
	jule::U8 _field_lo{jule::U8()};
	jule::U8 _field_hi{jule::U8()};


	_1e176da99_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_1e176da99_accept_range(void) = default;

	bool operator==(const _1e176da99_accept_range &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	bool operator!=(const _1e176da99_accept_range &_Src) const { return !this->operator==(_Src); }
};


struct _1e15268c9_DirEntry {
	jule::Str _field_name{jule::Str()};
	jule::Ref<_1e15771dd_Status> _field_stat{jule::Ref<_1e15771dd_Status>()};


	_1e15268c9_DirEntry(jule::Str __param_name, jule::Ref<_1e15771dd_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_1e15268c9_DirEntry(void) = default;

	bool operator==(const _1e15268c9_DirEntry &_Src) const {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	bool operator!=(const _1e15268c9_DirEntry &_Src) const { return !this->operator==(_Src); }
};


struct _1e15268c9_Directory {
	

	_1e15268c9_Directory(void) = default;

	static std::tuple<jule::Slice<jule::Ref<_1e15268c9_DirEntry>>,jule::Int> _static_method_read(jule::Str);


	static jule::Int _static_method_create(jule::Str);


	static jule::Int _static_method_remove(jule::Str);


	bool operator==(const _1e15268c9_Directory &_Src) const { return true; }

	bool operator!=(const _1e15268c9_Directory &_Src) const { return !this->operator==(_Src); }
};


struct _1e159479e_File {
	jule::Uintptr _field_handle{jule::Uintptr()};


	_1e159479e_File(jule::Uintptr __param_handle): _field_handle(__param_handle) {}

	

	_1e159479e_File(void) = default;

	static jule::Ref<_1e159479e_File> _static_method_new(jule::Uintptr);


	static std::tuple<jule::Ref<_1e159479e_File>,jule::Int> _static_method_create(jule::Str);


	static std::tuple<jule::Slice<jule::U8>,jule::Int> _static_method_read(jule::Str);


	static jule::Int _static_method_write(jule::Str,jule::Slice<jule::U8>,jule::Int);


	std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	jule::Int _method_close(void);


	static std::tuple<jule::Ref<_1e159479e_File>,jule::Int> _static_method_open(jule::Str,jule::Int,jule::Int);


	static jule::Int _static_method_remove(jule::Str);


	std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	bool operator==(const _1e159479e_File &_Src) const {
		return 
			this->_field_handle == _Src._field_handle;
	}

	bool operator!=(const _1e159479e_File &_Src) const { return !this->operator==(_Src); }
};


struct _1e15771dd_Status {
	jule::Uint _field_mode{jule::Uint()};
	jule::Uint _field_size{jule::Uint()};


	_1e15771dd_Status(jule::Uint __param_mode, jule::Uint __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_1e15771dd_Status(void) = default;

	jule::Bool _method_is_dir(void);


	jule::Bool _method_is_reg(void);


	static std::tuple<jule::Ref<_1e15771dd_Status>,jule::Int> _static_method_of(jule::Str);


	bool operator==(const _1e15771dd_Status &_Src) const {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	bool operator!=(const _1e15771dd_Status &_Src) const { return !this->operator==(_Src); }
};


struct _1e1976730_FoldPair {
	jule::U16 _field_from{jule::U16()};
	jule::U16 _field_to{jule::U16()};


	_1e1976730_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_1e1976730_FoldPair(void) = default;

	bool operator==(const _1e1976730_FoldPair &_Src) const {
		return 
			this->_field_from == _Src._field_from &&
			this->_field_to == _Src._field_to;
	}

	bool operator!=(const _1e1976730_FoldPair &_Src) const { return !this->operator==(_Src); }
};


struct _1e1976730_CaseRange {
	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::Array<jule::I32,3> _field_delta{jule::Array<jule::I32,3>()};


	_1e1976730_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_1e1976730_CaseRange(void) = default;

	bool operator==(const _1e1976730_CaseRange &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_delta == _Src._field_delta;
	}

	bool operator!=(const _1e1976730_CaseRange &_Src) const { return !this->operator==(_Src); }
};


struct _1e1976730_Range16 {
	jule::U16 _field_lo{jule::U16()};
	jule::U16 _field_hi{jule::U16()};
	jule::U16 _field_stride{jule::U16()};


	_1e1976730_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1e1976730_Range16(void) = default;

	bool operator==(const _1e1976730_Range16 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	bool operator!=(const _1e1976730_Range16 &_Src) const { return !this->operator==(_Src); }
};


struct _1e1976730_Range32 {
	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::U32 _field_stride{jule::U32()};


	_1e1976730_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1e1976730_Range32(void) = default;

	bool operator==(const _1e1976730_Range32 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	bool operator!=(const _1e1976730_Range32 &_Src) const { return !this->operator==(_Src); }
};


struct _1e1976730_RangeTable {
	jule::Slice<_1e1976730_Range16> _field_r16{jule::Slice<_1e1976730_Range16>()};
	jule::Slice<_1e1976730_Range32> _field_r32{jule::Slice<_1e1976730_Range32>()};
	jule::Int _field_latin_offset{jule::Int()};


	_1e1976730_RangeTable(jule::Slice<_1e1976730_Range16> __param_r16, jule::Slice<_1e1976730_Range32> __param_r32, jule::Int __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_1e1976730_RangeTable(void) = default;

	bool operator==(const _1e1976730_RangeTable &_Src) const {
		return 
			this->_field_r16 == _Src._field_r16 &&
			this->_field_r32 == _Src._field_r32 &&
			this->_field_latin_offset == _Src._field_latin_offset;
	}

	bool operator!=(const _1e1976730_RangeTable &_Src) const { return !this->operator==(_Src); }
};


struct _1e15a2bb9_Token {
	jule::Ref<_1e17bebd8_File> _field_file{jule::Ref<_1e17bebd8_File>()};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_kind{jule::Str()};
	jule::Uint _field_id{0LLU};


	_1e15a2bb9_Token(jule::Ref<_1e17bebd8_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1e15a2bb9_Token(void) = default;

	jule::Int _method_prec(void);


	bool operator==(const _1e15a2bb9_Token &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	bool operator!=(const _1e15a2bb9_Token &_Src) const { return !this->operator==(_Src); }
};


struct _1e17bebd8_File {
	jule::Slice<jule::U8> _field_data{jule::Slice<jule::U8>()};
	jule::Str _field__path{jule::Str()};
	jule::Slice<_1e15a2bb9_Token> _field__tokens{jule::Slice<_1e15a2bb9_Token>()};


	_1e17bebd8_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, jule::Slice<_1e15a2bb9_Token> __param__tokens): _field_data(__param_data), _field__path(__param__path), _field__tokens(__param__tokens) {}

	

	_1e17bebd8_File(void) = default;

	jule::Bool _method_is_ok(void);


	void _method_fill(jule::Slice<jule::U8>);


	jule::Str _method_path(void);


	jule::Str _method_dir(void);


	jule::Str _method_name(void);


	jule::Uintptr _method_addr(void);


	jule::Slice<_1e15a2bb9_Token> _method_tokens(void);


	jule::Str _method_get_row(jule::Int);


	bool operator==(const _1e17bebd8_File &_Src) const {
		return 
			this->_field_data == _Src._field_data &&
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	bool operator!=(const _1e17bebd8_File &_Src) const { return !this->operator==(_Src); }
};


struct _1e17c9de1_KindPair {
	jule::Str _field_kind{jule::Str("::", 2)};
	jule::Uint _field_id{0LLU};


	_1e17c9de1_KindPair(jule::Str __param_kind, jule::Uint __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1e17c9de1_KindPair(void) = default;

	bool operator==(const _1e17c9de1_KindPair &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	bool operator!=(const _1e17c9de1_KindPair &_Src) const { return !this->operator==(_Src); }
};


struct _1e17c9de1_Lex {
	jule::Slice<_1e15a2bb9_Token> _field_tokens{jule::Slice<_1e15a2bb9_Token>()};
	jule::Ref<_1e17bebd8_File> _field_file{jule::Ref<_1e17bebd8_File>()};
	jule::Int _field_pos{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Int _field_row{jule::Int()};
	jule::Slice<_1ec8e8025_Log> _field_errors{jule::Slice<_1ec8e8025_Log>()};


	_1e17c9de1_Lex(jule::Slice<_1e15a2bb9_Token> __param_tokens, jule::Ref<_1e17bebd8_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_1ec8e8025_Log> __param_errors): _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_1e17c9de1_Lex(void) = default;

	void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	void _method_push_err_tok(_1e15a2bb9_Token&,jule::Str);


	void _method_lex(void);


	jule::Str _method_id(jule::Slice<jule::U8>&);


	jule::Slice<jule::U8> _method_resume(void);


	void _method_lex_line_comment(_1e15a2bb9_Token&);


	void _method_lex_range_comment(void);


	jule::Str _method_num(jule::Slice<jule::U8>&);


	jule::Str _method_escape_seq(jule::Slice<jule::U8>&);


	jule::Str _method_get_rune(jule::Slice<jule::U8>&,jule::Bool);


	jule::Str _method_lex_rune(jule::Slice<jule::U8>&);


	jule::Str _method_lex_str(void);


	jule::Bool _method_is_first_token_of_line(void);


	void _method_new_line(void);


	jule::Bool _method_is_op(jule::Slice<jule::U8>&,jule::Str,jule::Uint,_1e15a2bb9_Token&);


	jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_1e15a2bb9_Token&);


	jule::Bool _method_lex_id(jule::Slice<jule::U8>&,_1e15a2bb9_Token&);


	jule::Bool _method_lex_num(jule::Slice<jule::U8>&,_1e15a2bb9_Token&);


	_1e15a2bb9_Token _method_token(void);


	bool operator==(const _1e17c9de1_Lex &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	bool operator!=(const _1e17c9de1_Lex &_Src) const { return !this->operator==(_Src); }
};


struct _1e15a53c5_Ast {
	jule::Ref<_1e17bebd8_File> _field_file{jule::Ref<_1e17bebd8_File>()};
	jule::Slice<jule::Ref<_1e16025cb_Directive>> _field_top_directives{jule::Slice<jule::Ref<_1e16025cb_Directive>>()};
	jule::Slice<jule::Ref<_1e16025cb_UseDecl>> _field_use_decls{jule::Slice<jule::Ref<_1e16025cb_UseDecl>>()};
	jule::Slice<jule::Ref<_1e16025cb_Impl>> _field_impls{jule::Slice<jule::Ref<_1e16025cb_Impl>>()};
	jule::Slice<jule::Ref<_1e16025cb_Comment>> _field_comments{jule::Slice<jule::Ref<_1e16025cb_Comment>>()};
	jule::Slice<_1e16025cb_Node> _field_decls{jule::Slice<_1e16025cb_Node>()};


	_1e15a53c5_Ast(jule::Ref<_1e17bebd8_File> __param_file, jule::Slice<jule::Ref<_1e16025cb_Directive>> __param_top_directives, jule::Slice<jule::Ref<_1e16025cb_UseDecl>> __param_use_decls, jule::Slice<jule::Ref<_1e16025cb_Impl>> __param_impls, jule::Slice<jule::Ref<_1e16025cb_Comment>> __param_comments, jule::Slice<_1e16025cb_Node> __param_decls): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_impls(__param_impls), _field_comments(__param_comments), _field_decls(__param_decls) {}

	

	_1e15a53c5_Ast(void) = default;

	bool operator==(const _1e15a53c5_Ast &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	bool operator!=(const _1e15a53c5_Ast &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_CommentGroup {
	jule::Slice<jule::Ref<_1e16025cb_Comment>> _field_comments{jule::Slice<jule::Ref<_1e16025cb_Comment>>()};


	_1e16025cb_CommentGroup(jule::Slice<jule::Ref<_1e16025cb_Comment>> __param_comments): _field_comments(__param_comments) {}

	

	_1e16025cb_CommentGroup(void) = default;

	bool operator==(const _1e16025cb_CommentGroup &_Src) const {
		return 
			this->_field_comments == _Src._field_comments;
	}

	bool operator!=(const _1e16025cb_CommentGroup &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_NamespaceTypeDecl {
	jule::Slice<_1e15a2bb9_Token> _field_idents{jule::Slice<_1e15a2bb9_Token>()};
	jule::Ref<_1e16025cb_IdentTypeDecl> _field_kind{jule::Ref<_1e16025cb_IdentTypeDecl>()};


	_1e16025cb_NamespaceTypeDecl(jule::Slice<_1e15a2bb9_Token> __param_idents, jule::Ref<_1e16025cb_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_1e16025cb_NamespaceTypeDecl(void) = default;

	bool operator==(const _1e16025cb_NamespaceTypeDecl &_Src) const {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _1e16025cb_NamespaceTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_RefTypeDecl {
	jule::Ref<_1e16025cb_TypeDecl> _field_elem{jule::Ref<_1e16025cb_TypeDecl>()};


	_1e16025cb_RefTypeDecl(jule::Ref<_1e16025cb_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1e16025cb_RefTypeDecl(void) = default;

	bool operator==(const _1e16025cb_RefTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _1e16025cb_RefTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_SlcTypeDecl {
	jule::Ref<_1e16025cb_TypeDecl> _field_elem{jule::Ref<_1e16025cb_TypeDecl>()};


	_1e16025cb_SlcTypeDecl(jule::Ref<_1e16025cb_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1e16025cb_SlcTypeDecl(void) = default;

	bool operator==(const _1e16025cb_SlcTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _1e16025cb_SlcTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_TupleTypeDecl {
	jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> _field_types{jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>()};


	_1e16025cb_TupleTypeDecl(jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_1e16025cb_TupleTypeDecl(void) = default;

	bool operator==(const _1e16025cb_TupleTypeDecl &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	bool operator!=(const _1e16025cb_TupleTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_PtrTypeDecl {
	jule::Ref<_1e16025cb_TypeDecl> _field_elem{jule::Ref<_1e16025cb_TypeDecl>()};


	_1e16025cb_PtrTypeDecl(jule::Ref<_1e16025cb_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1e16025cb_PtrTypeDecl(void) = default;

	jule::Bool _method_is_unsafe(void);


	bool operator==(const _1e16025cb_PtrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _1e16025cb_PtrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_ArrTypeDecl {
	jule::Ref<_1e16025cb_TypeDecl> _field_elem{jule::Ref<_1e16025cb_TypeDecl>()};
	jule::Ref<_1e16025cb_Expr> _field_size{jule::Ref<_1e16025cb_Expr>()};


	_1e16025cb_ArrTypeDecl(jule::Ref<_1e16025cb_TypeDecl> __param_elem, jule::Ref<_1e16025cb_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_1e16025cb_ArrTypeDecl(void) = default;

	jule::Bool _method_auto_sized(void);


	bool operator==(const _1e16025cb_ArrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	bool operator!=(const _1e16025cb_ArrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_MapTypeDecl {
	jule::Ref<_1e16025cb_TypeDecl> _field_key{jule::Ref<_1e16025cb_TypeDecl>()};
	jule::Ref<_1e16025cb_TypeDecl> _field_val{jule::Ref<_1e16025cb_TypeDecl>()};


	_1e16025cb_MapTypeDecl(jule::Ref<_1e16025cb_TypeDecl> __param_key, jule::Ref<_1e16025cb_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1e16025cb_MapTypeDecl(void) = default;

	bool operator==(const _1e16025cb_MapTypeDecl &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	bool operator!=(const _1e16025cb_MapTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_RetTypeDecl {
	jule::Ref<_1e16025cb_TypeDecl> _field_kind{jule::Ref<_1e16025cb_TypeDecl>()};
	jule::Slice<_1e15a2bb9_Token> _field_idents{jule::Slice<_1e15a2bb9_Token>()};


	_1e16025cb_RetTypeDecl(jule::Ref<_1e16025cb_TypeDecl> __param_kind, jule::Slice<_1e15a2bb9_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1e16025cb_RetTypeDecl(void) = default;

	bool operator==(const _1e16025cb_RetTypeDecl &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	bool operator!=(const _1e16025cb_RetTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_TupleExpr {
	jule::Slice<jule::Ref<_1e16025cb_Expr>> _field_expr{jule::Slice<jule::Ref<_1e16025cb_Expr>>()};


	_1e16025cb_TupleExpr(jule::Slice<jule::Ref<_1e16025cb_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_1e16025cb_TupleExpr(void) = default;

	bool operator==(const _1e16025cb_TupleExpr &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e16025cb_TupleExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_CastExpr {
	jule::Ref<_1e16025cb_TypeDecl> _field_kind{jule::Ref<_1e16025cb_TypeDecl>()};
	jule::Any _field_expr{jule::Any()};


	_1e16025cb_CastExpr(jule::Ref<_1e16025cb_TypeDecl> __param_kind, jule::Any __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1e16025cb_CastExpr(void) = default;

	bool operator==(const _1e16025cb_CastExpr &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e16025cb_CastExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_StructLit {
	jule::Ref<_1e16025cb_TypeDecl> _field_kind{jule::Ref<_1e16025cb_TypeDecl>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1e16025cb_StructLit(jule::Ref<_1e16025cb_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs): _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_1e16025cb_StructLit(void) = default;

	bool operator==(const _1e16025cb_StructLit &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	bool operator!=(const _1e16025cb_StructLit &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_ScopeTree {
	jule::Ref<_1e16025cb_ScopeTree> _field_parent{jule::Ref<_1e16025cb_ScopeTree>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_1e16025cb_ScopeTree(jule::Ref<_1e16025cb_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1e16025cb_ScopeTree(void) = default;

	bool operator==(const _1e16025cb_ScopeTree &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	bool operator!=(const _1e16025cb_ScopeTree &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_Conditional {
	jule::Ref<_1e16025cb_If> _field_head{jule::Ref<_1e16025cb_If>()};
	jule::Slice<jule::Ref<_1e16025cb_If>> _field_tail{jule::Slice<jule::Ref<_1e16025cb_If>>()};
	jule::Ref<_1e16025cb_Else> _field_default{jule::Ref<_1e16025cb_Else>()};


	_1e16025cb_Conditional(jule::Ref<_1e16025cb_If> __param_head, jule::Slice<jule::Ref<_1e16025cb_If>> __param_tail, jule::Ref<_1e16025cb_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_1e16025cb_Conditional(void) = default;

	bool operator==(const _1e16025cb_Conditional &_Src) const {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	bool operator!=(const _1e16025cb_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1e1630153_FileInfo {
	jule::Ref<_1e15a53c5_Ast> _field_ast{jule::Ref<_1e15a53c5_Ast>()};
	jule::Slice<_1ec8e8025_Log> _field_errors{jule::Slice<_1ec8e8025_Log>()};


	_1e1630153_FileInfo(jule::Ref<_1e15a53c5_Ast> __param_ast, jule::Slice<_1ec8e8025_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_1e1630153_FileInfo(void) = default;

	bool operator==(const _1e1630153_FileInfo &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	bool operator!=(const _1e1630153_FileInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1e1630153_PackageInfo {
	jule::Slice<jule::Ref<_1e1630153_FileInfo>> _field_files{jule::Slice<jule::Ref<_1e1630153_FileInfo>>()};


	_1e1630153_PackageInfo(jule::Slice<jule::Ref<_1e1630153_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_1e1630153_PackageInfo(void) = default;

	bool operator==(const _1e1630153_PackageInfo &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	bool operator!=(const _1e1630153_PackageInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1e184a280_Stmt {
	jule::Slice<_1e15a2bb9_Token> _field_tokens{jule::Slice<_1e15a2bb9_Token>()};
	jule::Bool _field_terminated{jule::Bool()};


	_1e184a280_Stmt(jule::Slice<_1e15a2bb9_Token> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_1e184a280_Stmt(void) = default;

	bool operator==(const _1e184a280_Stmt &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	bool operator!=(const _1e184a280_Stmt &_Src) const { return !this->operator==(_Src); }
};


struct _1e184a280_ScopeParser {
	jule::Ref<_1e25dc95b_Parser> _field_p{jule::Ref<_1e25dc95b_Parser>()};
	jule::Ref<_1e16025cb_ScopeTree> _field_s{jule::Ref<_1e16025cb_ScopeTree>()};
	jule::Slice<jule::Ref<_1e184a280_Stmt>> _field_stms{jule::Slice<jule::Ref<_1e184a280_Stmt>>()};
	jule::Int _field_pos{jule::Int()};


	_1e184a280_ScopeParser(jule::Ref<_1e25dc95b_Parser> __param_p, jule::Ref<_1e16025cb_ScopeTree> __param_s, jule::Slice<jule::Ref<_1e184a280_Stmt>> __param_stms, jule::Int __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stms(__param_stms), _field_pos(__param_pos) {}

	

	_1e184a280_ScopeParser(void) = default;

	void _method_stop(void);


	jule::Bool _method_stopped(void);


	jule::Bool _method_finished(void);


	jule::Bool _method_is_last_st(void);


	void _method_push_err(_1e15a2bb9_Token,jule::Str);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	void _method_insert_as_next(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e184a280_Stmt> _method_next(void);


	jule::Ref<_1e16025cb_ScopeTree> _method_build_scope(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_var_st(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_ret_st(jule::Slice<_1e15a2bb9_Token>);


	jule::Any _method_build_while_next_iter(jule::Ref<_1e184a280_Stmt>&);


	jule::Ref<_1e16025cb_WhileKind> _method_build_while_iter_kind(jule::Slice<_1e15a2bb9_Token>&);


	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_VarDecl> _method_build_range_kind_key(jule::Slice<_1e15a2bb9_Token>&);


	jule::Slice<jule::Ref<_1e16025cb_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_1e15a2bb9_Token>>&);


	void _method_setup_range_kind_keys_plain(jule::Ref<_1e16025cb_RangeKind>&,jule::Slice<_1e15a2bb9_Token>&);


	void _method_setup_range_kind_keys_explicit(jule::Ref<_1e16025cb_RangeKind>&,jule::Slice<_1e15a2bb9_Token>&);


	void _method_setup_range_kind_keys(jule::Ref<_1e16025cb_RangeKind>&,jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_RangeKind> _method_build_range_iter_kind(jule::Slice<_1e15a2bb9_Token>&,jule::Slice<_1e15a2bb9_Token>&,_1e15a2bb9_Token&);


	jule::Any _method_build_common_iter_kind(jule::Slice<_1e15a2bb9_Token>&,_1e15a2bb9_Token&);


	jule::Any _method_build_common_iter(jule::Slice<_1e15a2bb9_Token>);


	jule::Any _method_buid_iter_st(jule::Ref<_1e184a280_Stmt>&);


	jule::Any _method_build_break_st(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_cont_st(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_If> _method_build_if(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_Else> _method_build_else(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_if_else_chain(jule::Slice<_1e15a2bb9_Token>);


	jule::Any _method_build_comment_st(_1e15a2bb9_Token&);


	jule::Any _method_build_call_st(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_co_call_st(jule::Slice<_1e15a2bb9_Token>);


	jule::Any _method_build_goto_st(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_fall_st(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_type_alias_st(jule::Slice<_1e15a2bb9_Token>&);


	void _method_push_case_expr(jule::Slice<_1e15a2bb9_Token>,_1e15a2bb9_Token,jule::Bool,jule::Slice<jule::Ref<_1e16025cb_Expr>>&);


	jule::Slice<jule::Ref<_1e16025cb_Expr>> _method_build_case_exprs(jule::Slice<_1e15a2bb9_Token>&,jule::Bool);


	jule::Ref<_1e16025cb_ScopeTree> _method_build_case_scope(jule::Slice<_1e15a2bb9_Token>&);


	std::tuple<jule::Ref<_1e16025cb_Case>,jule::Bool> _method_build_case(jule::Slice<_1e15a2bb9_Token>&,jule::Bool);


	std::tuple<jule::Slice<jule::Ref<_1e16025cb_Case>>,jule::Ref<_1e16025cb_Else>> _method_build_cases(jule::Slice<_1e15a2bb9_Token>,jule::Bool);


	jule::Ref<_1e16025cb_MatchCase> _method_build_match_case(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_ScopeTree> _method_build_scope_st(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_LabelSt> _method_build_label_st(jule::Slice<_1e15a2bb9_Token>&);


	std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e24d74b0_AssignInfo> _method_build_assign_info(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_AssignLeft> _method_build_assign_l(jule::Slice<_1e15a2bb9_Token>&);


	jule::Slice<jule::Ref<_1e16025cb_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_1e15a2bb9_Token>>&);


	std::tuple<jule::Ref<_1e16025cb_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_1e15a2bb9_Token>&);


	std::tuple<jule::Ref<_1e16025cb_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_1e15a2bb9_Token>);


	std::tuple<jule::Ref<_1e16025cb_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_st(jule::Ref<_1e184a280_Stmt>&);


	void _method_build(jule::Slice<_1e15a2bb9_Token>&,jule::Ref<_1e16025cb_ScopeTree>&);


	bool operator==(const _1e184a280_ScopeParser &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stms == _Src._field_stms &&
			this->_field_pos == _Src._field_pos;
	}

	bool operator!=(const _1e184a280_ScopeParser &_Src) const { return !this->operator==(_Src); }
};


struct _1e1776d27_CallData {
	jule::Slice<_1e15a2bb9_Token> _field_expr_tokens{jule::Slice<_1e15a2bb9_Token>()};
	jule::Slice<_1e15a2bb9_Token> _field_args_tokens{jule::Slice<_1e15a2bb9_Token>()};
	jule::Slice<_1e15a2bb9_Token> _field_generics_tokens{jule::Slice<_1e15a2bb9_Token>()};


	_1e1776d27_CallData(jule::Slice<_1e15a2bb9_Token> __param_expr_tokens, jule::Slice<_1e15a2bb9_Token> __param_args_tokens, jule::Slice<_1e15a2bb9_Token> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_1e1776d27_CallData(void) = default;

	bool operator==(const _1e1776d27_CallData &_Src) const {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	bool operator!=(const _1e1776d27_CallData &_Src) const { return !this->operator==(_Src); }
};


struct _1e1776d27_Precedencer {
	jule::Slice<jule::Slice<jule::Any>> _field_pairs{jule::Slice<jule::Slice<jule::Any>>()};


	_1e1776d27_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs): _field_pairs(__param_pairs) {}

	

	_1e1776d27_Precedencer(void) = default;

	void _method_set(jule::Int,jule::Any);


	jule::Any _method_get_lower(void);


	bool operator==(const _1e1776d27_Precedencer &_Src) const {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	bool operator!=(const _1e1776d27_Precedencer &_Src) const { return !this->operator==(_Src); }
};


struct _1e1776d27_ExprBuilder {
	jule::Ref<_1e25dc95b_Parser> _field_p{jule::Ref<_1e25dc95b_Parser>()};


	_1e1776d27_ExprBuilder(jule::Ref<_1e25dc95b_Parser> __param_p): _field_p(__param_p) {}

	

	_1e1776d27_ExprBuilder(void) = default;

	void _method_push_err(_1e15a2bb9_Token,jule::Str,jule::Slice<jule::Any>);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	jule::Ref<_1e16025cb_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_1e15a2bb9_Token>>&);


	jule::Ref<_1e16025cb_LitExpr> _method_build_lit(_1e15a2bb9_Token);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_primitive_type(_1e15a2bb9_Token&);


	jule::Any _method_build_single(_1e15a2bb9_Token);


	jule::Ref<_1e16025cb_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_UnaryExpr> _method_build_unary(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_type(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_sub_ident(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_VariadicExpr> _method_build_variadic(jule::Slice<_1e15a2bb9_Token>);


	jule::Any _method_build_op_right(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_between_parentheses(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_CastExpr> _method_try_build_cast(jule::Slice<_1e15a2bb9_Token>&);


	void _method_push_arg(jule::Slice<jule::Ref<_1e16025cb_Expr>>&,jule::Slice<_1e15a2bb9_Token>,_1e15a2bb9_Token);


	jule::Slice<jule::Ref<_1e16025cb_Expr>> _method_build_args(jule::Slice<_1e15a2bb9_Token>);


	jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> _method_build_call_generics(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_FnCallExpr> _method_build_fn_call(_1e15a2bb9_Token&,jule::Ref<_1e1776d27_CallData>&);


	jule::Any _method_build_parentheses_range(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_FnDecl> _method_build_anon_fn(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_unsafe(jule::Slice<_1e15a2bb9_Token>&);


	void _method_push_range_lit_part(jule::Slice<_1e15a2bb9_Token>,_1e15a2bb9_Token,jule::Slice<jule::Slice<_1e15a2bb9_Token>>&);


	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_1e15a2bb9_Token>);


	jule::Any _method_build_struct_lit_expr(jule::Slice<_1e15a2bb9_Token>&);


	jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_StructLit> _method_build_typed_struct_literal(jule::Slice<_1e15a2bb9_Token>);


	jule::Any _method_build_brace_lit_part(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_BraceLit> _method_build_brace_lit(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_brace_range(jule::Slice<_1e15a2bb9_Token>&);


	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _method_get_enumerable_parts(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_SliceExpr> _method_build_slice(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_IndexingExpr> _method_build_indexing(jule::Slice<_1e15a2bb9_Token>,jule::Slice<_1e15a2bb9_Token>,_1e15a2bb9_Token);


	jule::Ref<_1e16025cb_SlicingExpr> _method_build_slicing(jule::Slice<_1e15a2bb9_Token>&,jule::Slice<_1e15a2bb9_Token>&,jule::Int&,_1e15a2bb9_Token&);


	jule::Any _method_build_bracket_range(jule::Slice<_1e15a2bb9_Token>);


	jule::Any _method_build_ternary(jule::Slice<_1e15a2bb9_Token>);


	jule::Any _method_build_data(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_BinopExpr> _method_build_binop(jule::Slice<_1e15a2bb9_Token>&,jule::Int);


	jule::Any _method_build(jule::Slice<_1e15a2bb9_Token>&);


	jule::Any _method_build_kind(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_Expr> _method_build_from_tokens(jule::Slice<_1e15a2bb9_Token>);


	bool operator==(const _1e1776d27_ExprBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p;
	}

	bool operator!=(const _1e1776d27_ExprBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1e25dc95b_Parser {
	jule::Ref<_1e25dc95b_Parser> self{};

	jule::Ref<_1e15a53c5_Ast> _field_ast{jule::Ref<_1e15a53c5_Ast>()};
	jule::Slice<jule::Ref<_1e16025cb_Directive>> _field_directives{jule::Slice<jule::Ref<_1e16025cb_Directive>>()};
	jule::Ref<_1e16025cb_CommentGroup> _field_comment_group{jule::Ref<_1e16025cb_CommentGroup>()};
	jule::Slice<_1ec8e8025_Log> _field_errors{jule::Slice<_1ec8e8025_Log>()};


	_1e25dc95b_Parser(jule::Ref<_1e15a53c5_Ast> __param_ast, jule::Slice<jule::Ref<_1e16025cb_Directive>> __param_directives, jule::Ref<_1e16025cb_CommentGroup> __param_comment_group, jule::Slice<_1ec8e8025_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_comment_group(__param_comment_group), _field_errors(__param_errors) {
		this->self = jule::Ref<_1e25dc95b_Parser>::make(this, nullptr);

	}

	~_1e25dc95b_Parser(void) { this->self.ref = nullptr; }

	_1e25dc95b_Parser(void) { this->self = jule::Ref<_1e25dc95b_Parser>::make(this, nullptr); }

	void _method_stop(void);


	jule::Bool _method_stopped(void);


	void _method_push_err(_1e15a2bb9_Token,jule::Str,jule::Slice<jule::Any>);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	jule::Ref<_1e16025cb_Expr> _method_build_expr(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_Directive> _method_get_directive(jule::Ref<_1e16025cb_Comment>);


	void _method_push_directive(jule::Ref<_1e16025cb_Comment>&);


	void _method_process_comment(jule::Ref<_1e16025cb_Comment>&);


	jule::Ref<_1e16025cb_ScopeTree> _method_build_scope(jule::Slice<_1e15a2bb9_Token>&);


	std::tuple<jule::Ref<_1e16025cb_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_1e15a2bb9_Token>&,jule::Int*,jule::Bool);


	std::tuple<jule::Ref<_1e16025cb_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_1e15a2bb9_Token>&,jule::Int*,jule::Bool);


	jule::Ref<_1e16025cb_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_1e15a2bb9_Token>&);


	void _method_build_var_type_and_expr(jule::Ref<_1e16025cb_VarDecl>&,jule::Slice<_1e15a2bb9_Token>&);


	void _method_build_var_common(jule::Ref<_1e16025cb_VarDecl>&,jule::Slice<_1e15a2bb9_Token>);


	void _method_build_var_begin(jule::Ref<_1e16025cb_VarDecl>&,jule::Ref<jule::Int>,jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_VarDecl> _method_build_var(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_GenericDecl> _method_build_generic(jule::Slice<_1e15a2bb9_Token>&);


	jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> _method_build_generics(jule::Slice<_1e15a2bb9_Token>&,_1e15a2bb9_Token&);


	jule::Ref<_1e16025cb_ParamDecl> _method_build_self_param(jule::Slice<_1e15a2bb9_Token>);


	void _method_param_type_begin(jule::Ref<_1e16025cb_ParamDecl>&,jule::Int&,jule::Slice<_1e15a2bb9_Token>&);


	void _method_build_param_type(jule::Ref<_1e16025cb_ParamDecl>&,jule::Slice<_1e15a2bb9_Token>&);


	void _method_param_body_id(jule::Ref<_1e16025cb_ParamDecl>,_1e15a2bb9_Token);


	void _method_build_param_body(jule::Ref<_1e16025cb_ParamDecl>&,jule::Ref<jule::Int>,jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_ParamDecl> _method_build_param(jule::Slice<_1e15a2bb9_Token>);


	void _method_check_params(jule::Slice<jule::Ref<_1e16025cb_ParamDecl>>&);


	jule::Slice<jule::Ref<_1e16025cb_ParamDecl>> _method_build_params(jule::Slice<_1e15a2bb9_Token>&,jule::Bool);


	std::tuple<jule::Ref<_1e16025cb_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_1e15a2bb9_Token>&,jule::Int&);


	std::tuple<jule::Ref<_1e16025cb_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_1e15a2bb9_Token>&,jule::Int&);


	jule::Ref<_1e16025cb_FnDecl> _method_build_fn_prototype(jule::Slice<_1e15a2bb9_Token>&,jule::Int&,jule::Bool);


	jule::Ref<_1e16025cb_FnDecl> _method_build_fn(jule::Slice<_1e15a2bb9_Token>&,jule::Bool,jule::Bool);


	jule::Slice<_1e15a2bb9_Token> _method_get_use_decl_selectors(jule::Slice<_1e15a2bb9_Token>);


	void _method_build_cpp_use_decl(jule::Ref<_1e16025cb_UseDecl>&,jule::Slice<_1e15a2bb9_Token>&);


	void _method_build_std_use_decl(jule::Ref<_1e16025cb_UseDecl>&,jule::Slice<_1e15a2bb9_Token>);


	void _method_build_ident_use_decl(jule::Ref<_1e16025cb_UseDecl>&,jule::Slice<_1e15a2bb9_Token>);


	void _method_parse_use_decl(jule::Ref<_1e16025cb_UseDecl>&,jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_UseDecl> _method_build_use_decl(jule::Slice<_1e15a2bb9_Token>,jule::Bool);


	jule::Ref<_1e16025cb_Expr> _method_build_enum_item_expr(jule::Ref<jule::Int>,jule::Slice<_1e15a2bb9_Token>&);


	jule::Slice<jule::Ref<_1e16025cb_EnumItemDecl>> _method_build_enum_items(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_EnumDecl> _method_build_enum_decl(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_FieldDecl> _method_build_field(jule::Slice<_1e15a2bb9_Token>);


	jule::Slice<jule::Ref<_1e16025cb_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_StructDecl> _method_build_struct_decl(jule::Slice<_1e15a2bb9_Token>&);


	void _method_check_method_receiver(jule::Ref<_1e16025cb_FnDecl>&);


	jule::Slice<jule::Ref<_1e16025cb_FnDecl>> _method_build_trait_methods(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_TraitDecl> _method_build_trait_decl(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_FnDecl> _method_build_cpp_link_fn(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_VarDecl> _method_build_cpp_link_var(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_StructDecl> _method_build_cpp_link_struct(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_1e15a2bb9_Token>);


	jule::Ref<_1e16025cb_UseDecl> _method_build_cpp_link_use(jule::Slice<_1e15a2bb9_Token>);


	jule::Any _method_build_cpp_link(jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_FnDecl> _method_get_method(jule::Slice<_1e15a2bb9_Token>&);


	void _method_parse_impl_body(jule::Ref<_1e16025cb_Impl>&,jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_Impl> _method_build_impl(jule::Slice<_1e15a2bb9_Token>);


	jule::Any _method_build_node_data(jule::Slice<_1e15a2bb9_Token>&);


	void _method_check_comment_group(_1e16025cb_Node&);


	void _method_check_directive(_1e16025cb_Node&);


	void _method_apply_meta(_1e16025cb_Node&,jule::Bool);


	void _method_check_use_decl(_1e16025cb_Node&);


	std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_1e15a2bb9_Token>);


	_1e16025cb_Node _method_parse_node(jule::Slice<_1e15a2bb9_Token>&);


	void _method_append_node(jule::Slice<_1e15a2bb9_Token>&);


	void _method_remove_range(jule::Int,jule::Str,jule::Slice<_1e15a2bb9_Token>&,jule::Slice<jule::Int>&);


	void _method_push_wrong_order_close_err(_1e15a2bb9_Token&,jule::Slice<_1e15a2bb9_Token>&,jule::Slice<jule::Int>&);


	void _method_push_range_close(_1e15a2bb9_Token,jule::Str,jule::Slice<_1e15a2bb9_Token>&,jule::Slice<jule::Int>&);


	void _method_check_ranges(jule::Slice<_1e15a2bb9_Token>&);


	void _method_parse(jule::Ref<_1e17bebd8_File>&);


	bool operator==(const _1e25dc95b_Parser &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	bool operator!=(const _1e25dc95b_Parser &_Src) const { return !this->operator==(_Src); }
};


struct _1e2613531_TypeBuilder {
	jule::Ref<_1e25dc95b_Parser> _field_p{jule::Ref<_1e25dc95b_Parser>()};
	jule::Slice<_1e15a2bb9_Token> _field_tokens{jule::Slice<_1e15a2bb9_Token>()};
	jule::Int* _field_i{nullptr};
	jule::Bool _field_err{jule::Bool()};


	_1e2613531_TypeBuilder(jule::Ref<_1e25dc95b_Parser> __param_p, jule::Slice<_1e15a2bb9_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_1e2613531_TypeBuilder(void) = default;

	void _method_push_err(_1e15a2bb9_Token,jule::Str);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_prim(void);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_namespace(void);


	jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> _method_build_generics(void);


	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _method_ident_generics(void);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_ident(void);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_cpp_link(void);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_fn(void);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_ptr(void);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_ref(void);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_op(void);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_slc(void);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_arr(void);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_map(jule::Int,jule::Slice<_1e15a2bb9_Token>&);


	jule::Ref<_1e16025cb_TypeDecl> _method_build_enumerable(void);


	jule::Ref<_1e16025cb_TypeDecl> _method_step(void);


	std::tuple<jule::Ref<_1e16025cb_TypeDecl>,jule::Bool> _method_build(void);


	bool operator==(const _1e2613531_TypeBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	bool operator!=(const _1e2613531_TypeBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1a37ddd88_Const {
	jule::Any _field_data{jule::Any()};


	_1a37ddd88_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_1a37ddd88_Const(void) = default;

	static jule::Ref<_1a37ddd88_Const> _static_method_new_i64(jule::I64);


	static jule::Ref<_1a37ddd88_Const> _static_method_new_u64(jule::U64);


	static jule::Ref<_1a37ddd88_Const> _static_method_new_bool(jule::Bool);


	static jule::Ref<_1a37ddd88_Const> _static_method_new_str(jule::Str);


	static jule::Ref<_1a37ddd88_Const> _static_method_new_f64(jule::F64);


	static jule::Ref<_1a37ddd88_Const> _static_method_new_nil(void);


	jule::I64 _method_read_i64(void);


	jule::U64 _method_read_u64(void);


	jule::Bool _method_read_bool(void);


	jule::Str _method_read_str(void);


	jule::F64 _method_read_f64(void);


	jule::I64 _method_as_i64(void);


	jule::U64 _method_as_u64(void);


	jule::F64 _method_as_f64(void);


	void _method_set_i64(jule::I64);


	void _method_set_u64(jule::U64);


	void _method_set_bool(jule::Bool);


	void _method_set_str(jule::Str);


	void _method_set_f64(jule::F64);


	void _method_set_nil(void);


	jule::Bool _method_is_i64(void);


	jule::Bool _method_is_u64(void);


	jule::Bool _method_is_bool(void);


	jule::Bool _method_is_str(void);


	jule::Bool _method_is_f64(void);


	jule::Bool _method_is_nil(void);


	jule::Bool _method_are_same_types(_1a37ddd88_Const);


	jule::Bool _method_and(_1a37ddd88_Const);


	jule::Bool _method_or(_1a37ddd88_Const);


	jule::Bool _method_eqs(_1a37ddd88_Const);


	jule::Bool _method_lt(_1a37ddd88_Const);


	jule::Bool _method_gt(_1a37ddd88_Const);


	jule::Bool _method_add(_1a37ddd88_Const);


	jule::Bool _method_sub(_1a37ddd88_Const);


	jule::Bool _method_mul(_1a37ddd88_Const);


	jule::Bool _method_div(_1a37ddd88_Const);


	jule::Bool _method_mod(_1a37ddd88_Const);


	jule::Bool _method_bitwise_and(_1a37ddd88_Const);


	jule::Bool _method_bitwise_or(_1a37ddd88_Const);


	jule::Bool _method_xor(_1a37ddd88_Const);


	jule::Bool _method_lshift(_1a37ddd88_Const);


	jule::Bool _method_rshift(_1a37ddd88_Const);


	bool operator==(const _1a37ddd88_Const &_Src) const {
		return 
			this->_field_data == _Src._field_data;
	}

	bool operator!=(const _1a37ddd88_Const &_Src) const { return !this->operator==(_Src); }
};


struct _1e177440c_FieldIns {
	jule::Ref<_1e177440c_Field> _field_decl{jule::Ref<_1e177440c_Field>()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_kind{jule::Ref<_1a2db8ce3_TypeKind>()};


	_1e177440c_FieldIns(jule::Ref<_1e177440c_Field> __param_decl, jule::Ref<_1a2db8ce3_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1e177440c_FieldIns(void) = default;

	bool operator==(const _1e177440c_FieldIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _1e177440c_FieldIns &_Src) const { return !this->operator==(_Src); }
};


struct _1e177440c_StructIns: public _1a2db8ce3_Kind {
	jule::Bool _field_checked{jule::Bool()};
	jule::Ref<_1e177440c_Struct> _field_decl{jule::Ref<_1e177440c_Struct>()};
	jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>()};
	jule::Slice<jule::Ref<_1e177440c_FieldIns>> _field_fields{jule::Slice<jule::Ref<_1e177440c_FieldIns>>()};
	jule::Slice<jule::Ref<_1e1737e81_Fn>> _field_methods{jule::Slice<jule::Ref<_1e1737e81_Fn>>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Ref<_1e28b6a59_ReferenceStack> _field_references{jule::Ref<_1e28b6a59_ReferenceStack>()};


	_1e177440c_StructIns(jule::Bool __param_checked, jule::Ref<_1e177440c_Struct> __param_decl, jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>> __param_generics, jule::Slice<jule::Ref<_1e177440c_FieldIns>> __param_fields, jule::Slice<jule::Ref<_1e1737e81_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ref<_1e28b6a59_ReferenceStack> __param_references): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references) {}

	

	_1e177440c_StructIns(void) = default;

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind>);


	jule::Bool _method_same(jule::Ref<_1e177440c_StructIns>);


	jule::Ref<_1e1737e81_Fn> _method_find_method(jule::Str,jule::Bool);


	jule::Ref<_1e177440c_FieldIns> _method_find_field(jule::Str);


	bool operator==(const _1e177440c_StructIns &_Src) const {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_references == _Src._field_references;
	}

	bool operator!=(const _1e177440c_StructIns &_Src) const { return !this->operator==(_Src); }
};


struct _1e1737e81_RetType {
	jule::Ref<_1a2db8ce3_TypeSymbol> _field_kind{jule::Ref<_1a2db8ce3_TypeSymbol>()};
	jule::Slice<_1e15a2bb9_Token> _field_idents{jule::Slice<_1e15a2bb9_Token>()};


	_1e1737e81_RetType(jule::Ref<_1a2db8ce3_TypeSymbol> __param_kind, jule::Slice<_1e15a2bb9_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1e1737e81_RetType(void) = default;

	bool operator==(const _1e1737e81_RetType &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	bool operator!=(const _1e1737e81_RetType &_Src) const { return !this->operator==(_Src); }
};


struct _1e1737e81_ParamIns {
	jule::Ref<_1e1737e81_Param> _field_decl{jule::Ref<_1e1737e81_Param>()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_kind{jule::Ref<_1a2db8ce3_TypeKind>()};


	_1e1737e81_ParamIns(jule::Ref<_1e1737e81_Param> __param_decl, jule::Ref<_1a2db8ce3_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1e1737e81_ParamIns(void) = default;

	jule::Str _method_to_str(void);


	bool operator==(const _1e1737e81_ParamIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _1e1737e81_ParamIns &_Src) const { return !this->operator==(_Src); }
};


struct _1e1737e81_FnIns: public _1a2db8ce3_Kind {
	jule::Ref<_1e177440c_StructIns> _field_owner{jule::Ref<_1e177440c_StructIns>()};
	jule::Ref<_1e1737e81_Fn> _field_decl{jule::Ref<_1e1737e81_Fn>()};
	jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>()};
	jule::Slice<jule::Ref<_1e1737e81_ParamIns>> _field_params{jule::Slice<jule::Ref<_1e1737e81_ParamIns>>()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_result{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Ref<_1e2a2e210_Scope> _field_scope{jule::Ref<_1e2a2e210_Scope>()};
	jule::Ref<_1e28b6a59_ReferenceStack> _field_references{jule::Ref<_1e28b6a59_ReferenceStack>()};
	jule::Ref<_1e28b6a59_ReferenceStack> _field_refers{jule::Ref<_1e28b6a59_ReferenceStack>()};
	jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)> _field_caller{jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>()};
	jule::Bool _field_reloaded{jule::Bool()};
	jule::Bool _field_anon{jule::Bool()};


	_1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns> __param_owner, jule::Ref<_1e1737e81_Fn> __param_decl, jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>> __param_generics, jule::Slice<jule::Ref<_1e1737e81_ParamIns>> __param_params, jule::Ref<_1a2db8ce3_TypeKind> __param_result, jule::Ref<_1e2a2e210_Scope> __param_scope, jule::Ref<_1e28b6a59_ReferenceStack> __param_references, jule::Ref<_1e28b6a59_ReferenceStack> __param_refers, jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_refers(__param_refers), _field_caller(__param_caller), _field_reloaded(__param_reloaded), _field_anon(__param_anon) {}

	

	_1e1737e81_FnIns(void) = default;

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind>);


	jule::Bool _method_is_builtin(void);


	jule::Bool _method_is_anon(void);


	jule::Bool _method_same(jule::Ref<_1e1737e81_FnIns>);


	jule::Str _method_get_kind_str(jule::Bool);


	bool operator==(const _1e1737e81_FnIns &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_references == _Src._field_references &&
			this->_field_refers == _Src._field_refers &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	bool operator!=(const _1e1737e81_FnIns &_Src) const { return !this->operator==(_Src); }
};


struct _1e28b6a59_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer{jule::Slice<jule::Any>()};


	_1e28b6a59_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_1e28b6a59_ReferenceStack(void) = default;

	static jule::Ref<_1e28b6a59_ReferenceStack> _static_method_new(void);


	jule::Int _method_len(void);


	jule::Any _method_at(jule::Int);


	void _method_push(jule::Any);


	jule::Bool _method_exist_0(jule::Ref<_1ba80e105_Var>);
	jule::Bool _method_exist_1(jule::Ref<_1e1737e81_FnIns>);
	jule::Bool _method_exist_2(jule::Ref<_1e177440c_StructIns>);


	bool operator==(const _1e28b6a59_ReferenceStack &_Src) const {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	bool operator!=(const _1e28b6a59_ReferenceStack &_Src) const { return !this->operator==(_Src); }
};


struct _1e28b6a59_SymbolBuilder {
	jule::Ref<_1e28b6a59_SymbolBuilder> self{};

	jule::Ref<_1e28b6a59_SymbolBuilder> _field_owner{jule::Ref<_1e28b6a59_SymbolBuilder>()};
	jule::Trait<_1e2a7b966_Importer> _field_importer{jule::Trait<_1e2a7b966_Importer>()};
	jule::Slice<_1ec8e8025_Log> _field_errors{jule::Slice<_1ec8e8025_Log>()};
	jule::Ref<_1e15a53c5_Ast> _field_ast{jule::Ref<_1e15a53c5_Ast>()};
	jule::Ref<_1a2d05801_SymbolTable> _field_table{jule::Ref<_1a2d05801_SymbolTable>()};


	_1e28b6a59_SymbolBuilder(jule::Ref<_1e28b6a59_SymbolBuilder> __param_owner, jule::Trait<_1e2a7b966_Importer> __param_importer, jule::Slice<_1ec8e8025_Log> __param_errors, jule::Ref<_1e15a53c5_Ast> __param_ast, jule::Ref<_1a2d05801_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {
		this->self = jule::Ref<_1e28b6a59_SymbolBuilder>::make(this, nullptr);

	}

	~_1e28b6a59_SymbolBuilder(void) { this->self.ref = nullptr; }

	_1e28b6a59_SymbolBuilder(void) { this->self = jule::Ref<_1e28b6a59_SymbolBuilder>::make(this, nullptr); }

	jule::Ref<_1e28b6a59_SymbolBuilder> _method_get_root(void);


	void _method_push_err(_1e15a2bb9_Token&,jule::Str,jule::Slice<jule::Any>);


	void _method_push_err_text(_1e15a2bb9_Token&,jule::Str,jule::Slice<jule::Any>);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	jule::Bool _method_check_cpp_use_decl_path(jule::Ref<_1e16025cb_UseDecl>&);


	jule::Ref<_1e2a7b966_ImportInfo> _method_build_cpp_header_import(jule::Ref<_1e16025cb_UseDecl>&);


	jule::Ref<_1e2a7b966_ImportInfo> _method_build_std_import(jule::Ref<_1e16025cb_UseDecl>&);


	jule::Ref<_1e2a7b966_ImportInfo> _method_build_ident_import(jule::Ref<_1e16025cb_UseDecl>&);


	jule::Ref<_1e2a7b966_ImportInfo> _method_build_import(jule::Ref<_1e16025cb_UseDecl>&);


	jule::Bool _method_check_duplicate_use_decl(jule::Ref<_1e2a7b966_ImportInfo>&);


	void _method_impl_import_selections(jule::Ref<_1e2a7b966_ImportInfo>&,jule::Ref<_1e16025cb_UseDecl>&);


	jule::Str _method_get_as_link_path(jule::Str);


	void _method_push_cycle_error(jule::Ref<_1e28b6a59_SymbolBuilder>&,jule::Str,jule::Str&);


	void _method_push_cross_cycle_error(jule::Ref<_1e28b6a59_SymbolBuilder>&,jule::Ref<_1e2a7b966_ImportInfo>&,_1e15a2bb9_Token&);


	jule::Bool _method_check_import_cycles(jule::Ref<_1e2a7b966_ImportInfo>,jule::Ref<_1e16025cb_UseDecl>&);


	jule::Bool _method_import_package(jule::Ref<_1e2a7b966_ImportInfo>&,jule::Ref<_1e16025cb_UseDecl>&);


	jule::Ref<_1e2a7b966_ImportInfo> _method_import_use_decl(jule::Ref<_1e16025cb_UseDecl>&);


	void _method_import_use_decls(void);


	void _method_append_decl(_1e16025cb_Node&);


	void _method_append_decls(void);


	void _method_append_impls(void);


	void _method_push_directive_pass(jule::Ref<_1e16025cb_Directive>&);


	void _method_append_top_directives(void);


	void _method_build(void);


	bool operator==(const _1e28b6a59_SymbolBuilder &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	bool operator!=(const _1e28b6a59_SymbolBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_Scope {
	jule::Ref<_1e2a2e210_Scope> _field_parent{jule::Ref<_1e2a2e210_Scope>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_1e2a2e210_Scope(jule::Ref<_1e2a2e210_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1e2a2e210_Scope(void) = default;

	bool operator==(const _1e2a2e210_Scope &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	bool operator!=(const _1e2a2e210_Scope &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_If {
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1e2a2e210_Scope> _field_scope{jule::Ref<_1e2a2e210_Scope>()};


	_1e2a2e210_If(jule::Any __param_expr, jule::Ref<_1e2a2e210_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1e2a2e210_If(void) = default;

	bool operator==(const _1e2a2e210_If &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _1e2a2e210_If &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_Else {
	jule::Ref<_1e2a2e210_Scope> _field_scope{jule::Ref<_1e2a2e210_Scope>()};


	_1e2a2e210_Else(jule::Ref<_1e2a2e210_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1e2a2e210_Else(void) = default;

	bool operator==(const _1e2a2e210_Else &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _1e2a2e210_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_Conditional {
	jule::Slice<jule::Ref<_1e2a2e210_If>> _field_elifs{jule::Slice<jule::Ref<_1e2a2e210_If>>()};
	jule::Ref<_1e2a2e210_Else> _field_default{jule::Ref<_1e2a2e210_Else>()};


	_1e2a2e210_Conditional(jule::Slice<jule::Ref<_1e2a2e210_If>> __param_elifs, jule::Ref<_1e2a2e210_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_1e2a2e210_Conditional(void) = default;

	bool operator==(const _1e2a2e210_Conditional &_Src) const {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	bool operator!=(const _1e2a2e210_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_InfIter {
	jule::Ref<_1e2a2e210_Scope> _field_scope{jule::Ref<_1e2a2e210_Scope>()};


	_1e2a2e210_InfIter(jule::Ref<_1e2a2e210_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1e2a2e210_InfIter(void) = default;

	bool operator==(const _1e2a2e210_InfIter &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _1e2a2e210_InfIter &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_WhileIter {
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_next{jule::Any()};
	jule::Ref<_1e2a2e210_Scope> _field_scope{jule::Ref<_1e2a2e210_Scope>()};


	_1e2a2e210_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ref<_1e2a2e210_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_1e2a2e210_WhileIter(void) = default;

	jule::Bool _method_is_while_next(void);


	bool operator==(const _1e2a2e210_WhileIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _1e2a2e210_WhileIter &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_RangeIter {
	jule::Ref<_1a2c74a6c_Data> _field_expr{jule::Ref<_1a2c74a6c_Data>()};
	jule::Ref<_1e2a2e210_Scope> _field_scope{jule::Ref<_1e2a2e210_Scope>()};
	jule::Ref<_1ba80e105_Var> _field_key_a{jule::Ref<_1ba80e105_Var>()};
	jule::Ref<_1ba80e105_Var> _field_key_b{jule::Ref<_1ba80e105_Var>()};


	_1e2a2e210_RangeIter(jule::Ref<_1a2c74a6c_Data> __param_expr, jule::Ref<_1e2a2e210_Scope> __param_scope, jule::Ref<_1ba80e105_Var> __param_key_a, jule::Ref<_1ba80e105_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1e2a2e210_RangeIter(void) = default;

	bool operator==(const _1e2a2e210_RangeIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	bool operator!=(const _1e2a2e210_RangeIter &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_ContSt {
	jule::Uintptr _field_it{jule::Uintptr()};


	_1e2a2e210_ContSt(jule::Uintptr __param_it): _field_it(__param_it) {}

	

	_1e2a2e210_ContSt(void) = default;

	bool operator==(const _1e2a2e210_ContSt &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	bool operator!=(const _1e2a2e210_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_BreakSt {
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_mtch{jule::Uintptr()};


	_1e2a2e210_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_1e2a2e210_BreakSt(void) = default;

	bool operator==(const _1e2a2e210_BreakSt &_Src) const {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	bool operator!=(const _1e2a2e210_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_Label {
	jule::Str _field_ident{jule::Str()};


	_1e2a2e210_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1e2a2e210_Label(void) = default;

	bool operator==(const _1e2a2e210_Label &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _1e2a2e210_Label &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_GotoSt {
	jule::Str _field_ident{jule::Str()};


	_1e2a2e210_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1e2a2e210_GotoSt(void) = default;

	bool operator==(const _1e2a2e210_GotoSt &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _1e2a2e210_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_Postfix {
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1e2a2e210_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1e2a2e210_Postfix(void) = default;

	bool operator==(const _1e2a2e210_Postfix &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	bool operator!=(const _1e2a2e210_Postfix &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_Assign {
	jule::Any _field_l{jule::Any()};
	jule::Any _field_r{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1e2a2e210_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1e2a2e210_Assign(void) = default;

	bool operator==(const _1e2a2e210_Assign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	bool operator!=(const _1e2a2e210_Assign &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_MultiAssign {
	jule::Slice<jule::Any> _field_l{jule::Slice<jule::Any>()};
	jule::Any _field_r{jule::Any()};


	_1e2a2e210_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_1e2a2e210_MultiAssign(void) = default;

	bool operator==(const _1e2a2e210_MultiAssign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	bool operator!=(const _1e2a2e210_MultiAssign &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_Match {
	jule::Ref<_1a2c74a6c_Data> _field_expr{jule::Ref<_1a2c74a6c_Data>()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Slice<jule::Ref<_1e2a2e210_Case>> _field_cases{jule::Slice<jule::Ref<_1e2a2e210_Case>>()};
	jule::Ref<_1e2a2e210_Case> _field_default{jule::Ref<_1e2a2e210_Case>()};


	_1e2a2e210_Match(jule::Ref<_1a2c74a6c_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ref<_1e2a2e210_Case>> __param_cases, jule::Ref<_1e2a2e210_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1e2a2e210_Match(void) = default;

	jule::Bool _method_is_generic_type_match(void);


	bool operator==(const _1e2a2e210_Match &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	bool operator!=(const _1e2a2e210_Match &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_Case {
	jule::Ref<_1e2a2e210_Match> _field_owner{jule::Ref<_1e2a2e210_Match>()};
	jule::Ref<_1e2a2e210_Scope> _field_scope{jule::Ref<_1e2a2e210_Scope>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};
	jule::Ref<_1e2a2e210_Case> _field_next{jule::Ref<_1e2a2e210_Case>()};


	_1e2a2e210_Case(jule::Ref<_1e2a2e210_Match> __param_owner, jule::Ref<_1e2a2e210_Scope> __param_scope, jule::Slice<jule::Any> __param_exprs, jule::Ref<_1e2a2e210_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_1e2a2e210_Case(void) = default;

	jule::Bool _method_is_default(void);


	bool operator==(const _1e2a2e210_Case &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	bool operator!=(const _1e2a2e210_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_FallSt {
	jule::Uintptr _field_dest_case{jule::Uintptr()};


	_1e2a2e210_FallSt(jule::Uintptr __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_1e2a2e210_FallSt(void) = default;

	bool operator==(const _1e2a2e210_FallSt &_Src) const {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	bool operator!=(const _1e2a2e210_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_RetSt {
	jule::Slice<jule::Ref<_1ba80e105_Var>> _field_vars{jule::Slice<jule::Ref<_1ba80e105_Var>>()};
	jule::Any _field_expr{jule::Any()};


	_1e2a2e210_RetSt(jule::Slice<jule::Ref<_1ba80e105_Var>> __param_vars, jule::Any __param_expr): _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_1e2a2e210_RetSt(void) = default;

	bool operator==(const _1e2a2e210_RetSt &_Src) const {
		return 
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a2e210_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_Recover {
	jule::Ref<_1e1737e81_FnIns> _field_handler{jule::Ref<_1e1737e81_FnIns>()};
	jule::Any _field_handler_expr{jule::Any()};
	jule::Ref<_1e2a2e210_Scope> _field_scope{jule::Ref<_1e2a2e210_Scope>()};
	jule::Ref<_1e1737e81_FnIns> _field_scope_owner{jule::Ref<_1e1737e81_FnIns>()};


	_1e2a2e210_Recover(jule::Ref<_1e1737e81_FnIns> __param_handler, jule::Any __param_handler_expr, jule::Ref<_1e2a2e210_Scope> __param_scope, jule::Ref<_1e1737e81_FnIns> __param_scope_owner): _field_handler(__param_handler), _field_handler_expr(__param_handler_expr), _field_scope(__param_scope), _field_scope_owner(__param_scope_owner) {}

	

	_1e2a2e210_Recover(void) = default;

	bool operator==(const _1e2a2e210_Recover &_Src) const {
		return 
			this->_field_handler == _Src._field_handler &&
			this->_field_handler_expr == _Src._field_handler_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_scope_owner == _Src._field_scope_owner;
	}

	bool operator!=(const _1e2a2e210_Recover &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_ScopeGoto {
	jule::Ref<_1e16025cb_GotoSt> _field_gt{jule::Ref<_1e16025cb_GotoSt>()};
	jule::Ref<_1e2a2e210_ScopeChecker> _field_scope{jule::Ref<_1e2a2e210_ScopeChecker>()};
	jule::Int _field_pos{jule::Int()};


	_1e2a2e210_ScopeGoto(jule::Ref<_1e16025cb_GotoSt> __param_gt, jule::Ref<_1e2a2e210_ScopeChecker> __param_scope, jule::Int __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_1e2a2e210_ScopeGoto(void) = default;

	bool operator==(const _1e2a2e210_ScopeGoto &_Src) const {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	bool operator!=(const _1e2a2e210_ScopeGoto &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_ScopeChecker: public _1a35968cc_Lookup {
	jule::Ref<_1e2a2e210_ScopeChecker> self{};

	jule::Ref<_1e2a7c2a2_Sema> _field_s{jule::Ref<_1e2a7c2a2_Sema>()};
	jule::Ref<_1e1737e81_FnIns> _field_owner{jule::Ref<_1e1737e81_FnIns>()};
	jule::Ref<_1e2a2e210_ScopeChecker> _field_parent{jule::Ref<_1e2a2e210_ScopeChecker>()};
	jule::Int _field_child_index{jule::Int()};
	jule::Ref<_1a2d05801_SymbolTable> _field_table{jule::Ref<_1a2d05801_SymbolTable>()};
	jule::Ref<_1e2a2e210_Scope> _field_scope{jule::Ref<_1e2a2e210_Scope>()};
	jule::Ref<_1e16025cb_ScopeTree> _field_tree{jule::Ref<_1e16025cb_ScopeTree>()};
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_cse{jule::Uintptr()};
	jule::Ref<jule::Slice<jule::Ref<_1e2a2e210_ScopeLabel>>> _field_labels{jule::Ref<jule::Slice<jule::Ref<_1e2a2e210_ScopeLabel>>>()};
	jule::Ref<jule::Slice<jule::Ref<_1e2a2e210_ScopeGoto>>> _field_gotos{jule::Ref<jule::Slice<jule::Ref<_1e2a2e210_ScopeGoto>>>()};
	jule::Int _field_i{jule::Int()};


	_1e2a2e210_ScopeChecker(jule::Ref<_1e2a7c2a2_Sema> __param_s, jule::Ref<_1e1737e81_FnIns> __param_owner, jule::Ref<_1e2a2e210_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ref<_1a2d05801_SymbolTable> __param_table, jule::Ref<_1e2a2e210_Scope> __param_scope, jule::Ref<_1e16025cb_ScopeTree> __param_tree, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ref<jule::Slice<jule::Ref<_1e2a2e210_ScopeLabel>>> __param_labels, jule::Ref<jule::Slice<jule::Ref<_1e2a2e210_ScopeGoto>>> __param_gotos, jule::Int __param_i): _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {
		this->self = jule::Ref<_1e2a2e210_ScopeChecker>::make(this, nullptr);

	}

	~_1e2a2e210_ScopeChecker(void) { this->self.ref = nullptr; }

	_1e2a2e210_ScopeChecker(void) { this->self = jule::Ref<_1e2a2e210_ScopeChecker>::make(this, nullptr); }

	jule::Ref<_1e2a7b966_ImportInfo> _method_find_package(jule::Str);


	jule::Ref<_1e2a7b966_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)>);


	jule::Ref<_1ba80e105_Var> _method_find_var(jule::Str,jule::Bool);


	jule::Ref<_1a2db8ce3_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	jule::Ref<_1e177440c_Struct> _method_find_struct(jule::Str,jule::Bool);


	jule::Ref<_1e1737e81_Fn> _method_find_fn(jule::Str,jule::Bool);


	jule::Ref<_1e2a1e563_Trait> _method_find_trait(jule::Str);


	jule::Ref<_1e2a21d4b_Enum> _method_find_enum(jule::Str);


	jule::Bool _method_is_unsafe(void);


	jule::Bool _method_is_root(void);


	jule::Ref<_1e2a2e210_ScopeChecker> _method_get_root(void);


	jule::Ref<_1e2a2e210_Label> _method_find_label(jule::Str);


	jule::Ref<_1e2a2e210_ScopeLabel> _method_find_label_scope(jule::Str);


	jule::Ref<_1e2a2e210_ScopeLabel> _method_find_label_all(jule::Str);


	jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	void _method_check_var_decl(jule::Ref<_1e16025cb_VarDecl>);


	void _method_check_type_alias_decl(jule::Ref<_1e16025cb_TypeAliasDecl>);


	jule::Ref<_1e2a2e210_Scope> _method_get_child(void);


	void _method_check_child_ssc(jule::Ref<_1e16025cb_ScopeTree>,jule::Ref<_1e2a2e210_Scope>,jule::Ref<_1e2a2e210_ScopeChecker>);


	jule::Ref<_1e2a2e210_Scope> _method_check_child_sc(jule::Ref<_1e16025cb_ScopeTree>,jule::Ref<_1e2a2e210_ScopeChecker>);


	jule::Ref<_1e2a2e210_Scope> _method_check_child(jule::Ref<_1e16025cb_ScopeTree>);


	void _method_check_anon_scope(jule::Ref<_1e16025cb_ScopeTree>);


	jule::Bool _method_try_call_recover(jule::Ref<_1a2c74a6c_Data>);


	void _method_check_expr(jule::Ref<_1e16025cb_Expr>);


	jule::Ref<_1e2a2e210_If> _method_check_if(jule::Ref<_1e16025cb_If>);


	jule::Ref<_1e2a2e210_Else> _method_check_else(jule::Ref<_1e16025cb_Else>);


	void _method_check_conditional(jule::Ref<_1e16025cb_Conditional>);


	jule::Ref<_1e2a2e210_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ref<_1e16025cb_ScopeTree>,jule::Ref<_1e2a2e210_ScopeChecker>);


	jule::Ref<_1e2a2e210_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ref<_1e16025cb_ScopeTree>);


	void _method_check_inf_iter(jule::Ref<_1e16025cb_Iter>);


	void _method_check_while_iter(jule::Ref<_1e16025cb_Iter>);


	void _method_check_range_iter(jule::Ref<_1e16025cb_Iter>);


	void _method_check_iter(jule::Ref<_1e16025cb_Iter>);


	jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	jule::Bool _method_check_valid_break_label(jule::Uintptr);


	jule::Ref<_1e2a2e210_ContSt> _method_check_cont_valid_scope(jule::Ref<_1e16025cb_ContSt>);


	void _method_check_cont(jule::Ref<_1e16025cb_ContSt>);


	void _method_check_label(jule::Ref<_1e16025cb_LabelSt>);


	void _method_push_goto(jule::Ref<_1e16025cb_GotoSt>);


	void _method_check_postfix(jule::Ref<_1e16025cb_AssignSt>);


	jule::Bool _method_is_new_assign_ident(jule::Str);


	void _method_check_single_assign(jule::Ref<_1e16025cb_AssignSt>);


	void _method___process_end_part_of_multi_assign(jule::Ref<_1e2a2e210_MultiAssign>,jule::Ref<_1e16025cb_AssignSt>,jule::Ref<_1e16025cb_AssignLeft>,jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>);


	void _method_check_ret_multi_assign(jule::Ref<_1e16025cb_AssignSt>);


	void _method_check_multi_assign(jule::Ref<_1e16025cb_AssignSt>);


	void _method_check_assign_st(jule::Ref<_1e16025cb_AssignSt>);


	jule::Ref<_1e2a2e210_Scope> _method_check_case_scope(jule::Ref<_1e2a2e210_Case>,jule::Ref<_1e16025cb_ScopeTree>);


	jule::Ref<_1e2a2e210_Case> _method_check_case(jule::Ref<_1e2a2e210_Match>,jule::Int,jule::Ref<_1e16025cb_Case>,jule::Ref<_1a2c74a6c_Data>);


	void _method_check_cases(jule::Ref<_1e16025cb_MatchCase>&,jule::Ref<_1e2a2e210_Match>,jule::Ref<_1a2c74a6c_Data>);


	jule::Ref<_1e2a2e210_Case> _method_check_default(jule::Ref<_1e2a2e210_Match>,jule::Ref<_1e16025cb_Else>);


	void _method_check_comptime_panic(jule::Ref<_1e2a2e210_Scope>&,_1e15a2bb9_Token);


	void _method_push_type_match(jule::Ref<_1e2a2e210_Match>,jule::Ref<_1e16025cb_MatchCase>&);


	void _method_check_type_match(jule::Ref<_1e16025cb_MatchCase>&);


	void _method_check_common_match(jule::Ref<_1e16025cb_MatchCase>&);


	void _method_check_match(jule::Ref<_1e16025cb_MatchCase>);


	void _method_check_fall(jule::Ref<_1e16025cb_FallSt>);


	jule::Ref<_1e2a2e210_BreakSt> _method_check_break_with_label(jule::Ref<_1e16025cb_BreakSt>);


	jule::Ref<_1e2a2e210_BreakSt> _method_check_plain_break(jule::Ref<_1e16025cb_BreakSt>);


	void _method_check_break(jule::Ref<_1e16025cb_BreakSt>);


	void _method_check_ret(jule::Ref<_1e16025cb_RetSt>);


	void _method_check_node(jule::Any);


	void _method_check_tree(void);


	void _method_check_goto(jule::Ref<_1e2a2e210_ScopeGoto>&,jule::Ref<_1e2a2e210_ScopeLabel>);


	void _method_check_gotos(void);


	void _method_check_labels(void);


	void _method_check_vars(void);


	void _method_check_aliases(void);


	void _method_check(jule::Ref<_1e16025cb_ScopeTree>,jule::Ref<_1e2a2e210_Scope>);


	jule::Ref<_1e2a2e210_ScopeChecker> _method_new_child_checker(void);


	bool operator==(const _1e2a2e210_ScopeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	bool operator!=(const _1e2a2e210_ScopeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_BinopExprModel {
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1e2a30c17_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1e2a30c17_BinopExprModel(void) = default;

	bool operator==(const _1e2a30c17_BinopExprModel &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	bool operator!=(const _1e2a30c17_BinopExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_UnaryExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1e2a30c17_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1e2a30c17_UnaryExprModel(void) = default;

	bool operator==(const _1e2a30c17_UnaryExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	bool operator!=(const _1e2a30c17_UnaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_GetRefPtrExprModel {
	jule::Any _field_expr{jule::Any()};


	_1e2a30c17_GetRefPtrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e2a30c17_GetRefPtrExprModel(void) = default;

	bool operator==(const _1e2a30c17_GetRefPtrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a30c17_GetRefPtrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_StructArgExprModel {
	jule::Ref<_1e177440c_FieldIns> _field_field{jule::Ref<_1e177440c_FieldIns>()};
	jule::Any _field_expr{jule::Any()};


	_1e2a30c17_StructArgExprModel(jule::Ref<_1e177440c_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1e2a30c17_StructArgExprModel(void) = default;

	bool operator==(const _1e2a30c17_StructArgExprModel &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a30c17_StructArgExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_StructLitExprModel {
	jule::Ref<_1e177440c_StructIns> _field_strct{jule::Ref<_1e177440c_StructIns>()};
	jule::Slice<jule::Ref<_1e2a30c17_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_1e2a30c17_StructArgExprModel>>()};


	_1e2a30c17_StructLitExprModel(jule::Ref<_1e177440c_StructIns> __param_strct, jule::Slice<jule::Ref<_1e2a30c17_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_1e2a30c17_StructLitExprModel(void) = default;

	bool operator==(const _1e2a30c17_StructLitExprModel &_Src) const {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	bool operator!=(const _1e2a30c17_StructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_AllocStructLitExprModel {
	jule::Ref<_1e2a30c17_StructLitExprModel> _field_lit{jule::Ref<_1e2a30c17_StructLitExprModel>()};


	_1e2a30c17_AllocStructLitExprModel(jule::Ref<_1e2a30c17_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_1e2a30c17_AllocStructLitExprModel(void) = default;

	bool operator==(const _1e2a30c17_AllocStructLitExprModel &_Src) const {
		return 
			this->_field_lit == _Src._field_lit;
	}

	bool operator!=(const _1e2a30c17_AllocStructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_CastingExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_kind{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_expr_kind{jule::Ref<_1a2db8ce3_TypeKind>()};


	_1e2a30c17_CastingExprModel(jule::Any __param_expr, jule::Ref<_1a2db8ce3_TypeKind> __param_kind, jule::Ref<_1a2db8ce3_TypeKind> __param_expr_kind): _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_1e2a30c17_CastingExprModel(void) = default;

	bool operator==(const _1e2a30c17_CastingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	bool operator!=(const _1e2a30c17_CastingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_FnCallExprModel {
	jule::Ref<_1e1737e81_FnIns> _field_func{jule::Ref<_1e1737e81_FnIns>()};
	jule::Bool _field_is_co{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	jule::Slice<jule::Any> _field_args{jule::Slice<jule::Any>()};


	_1e2a30c17_FnCallExprModel(jule::Ref<_1e1737e81_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args): _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args) {}

	

	_1e2a30c17_FnCallExprModel(void) = default;

	bool operator==(const _1e2a30c17_FnCallExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args;
	}

	bool operator!=(const _1e2a30c17_FnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_SliceExprModel {
	jule::Ref<_1a2db8ce3_TypeKind> _field_elem_kind{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1e2a30c17_SliceExprModel(jule::Ref<_1a2db8ce3_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_1e2a30c17_SliceExprModel(void) = default;

	bool operator==(const _1e2a30c17_SliceExprModel &_Src) const {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	bool operator!=(const _1e2a30c17_SliceExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_IndexigExprModel {
	jule::Ref<_1a2c74a6c_Data> _field_expr{jule::Ref<_1a2c74a6c_Data>()};
	jule::Ref<_1a2c74a6c_Data> _field_index{jule::Ref<_1a2c74a6c_Data>()};


	_1e2a30c17_IndexigExprModel(jule::Ref<_1a2c74a6c_Data> __param_expr, jule::Ref<_1a2c74a6c_Data> __param_index): _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1e2a30c17_IndexigExprModel(void) = default;

	bool operator==(const _1e2a30c17_IndexigExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	bool operator!=(const _1e2a30c17_IndexigExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_AnonFnExprModel {
	jule::Ref<_1e1737e81_FnIns> _field_func{jule::Ref<_1e1737e81_FnIns>()};
	jule::Bool _field_global{jule::Bool()};


	_1e2a30c17_AnonFnExprModel(jule::Ref<_1e1737e81_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_1e2a30c17_AnonFnExprModel(void) = default;

	bool operator==(const _1e2a30c17_AnonFnExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	bool operator!=(const _1e2a30c17_AnonFnExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_KeyValPairExprModel {
	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};


	_1e2a30c17_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1e2a30c17_KeyValPairExprModel(void) = default;

	bool operator==(const _1e2a30c17_KeyValPairExprModel &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	bool operator!=(const _1e2a30c17_KeyValPairExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_MapExprModel {
	jule::Ref<_1a2db8ce3_TypeKind> _field_key_kind{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_val_kind{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Slice<jule::Ref<_1e2a30c17_KeyValPairExprModel>> _field_entries{jule::Slice<jule::Ref<_1e2a30c17_KeyValPairExprModel>>()};


	_1e2a30c17_MapExprModel(jule::Ref<_1a2db8ce3_TypeKind> __param_key_kind, jule::Ref<_1a2db8ce3_TypeKind> __param_val_kind, jule::Slice<jule::Ref<_1e2a30c17_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_1e2a30c17_MapExprModel(void) = default;

	bool operator==(const _1e2a30c17_MapExprModel &_Src) const {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	bool operator!=(const _1e2a30c17_MapExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_SlicingExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};


	_1e2a30c17_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1e2a30c17_SlicingExprModel(void) = default;

	bool operator==(const _1e2a30c17_SlicingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	bool operator!=(const _1e2a30c17_SlicingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_TraitSubIdentExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1e2a30c17_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident): _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1e2a30c17_TraitSubIdentExprModel(void) = default;

	bool operator==(const _1e2a30c17_TraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _1e2a30c17_TraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_StructSubIdentExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_expr_kind{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Ref<_1e1737e81_FnIns> _field_method{jule::Ref<_1e1737e81_FnIns>()};
	jule::Ref<_1e177440c_FieldIns> _field_field{jule::Ref<_1e177440c_FieldIns>()};


	_1e2a30c17_StructSubIdentExprModel(jule::Any __param_expr, jule::Ref<_1a2db8ce3_TypeKind> __param_expr_kind, jule::Ref<_1e1737e81_FnIns> __param_method, jule::Ref<_1e177440c_FieldIns> __param_field): _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_1e2a30c17_StructSubIdentExprModel(void) = default;

	bool operator==(const _1e2a30c17_StructSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	bool operator!=(const _1e2a30c17_StructSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_StructStaticIdentExprModel {
	jule::Ref<_1e177440c_StructIns> _field_structure{jule::Ref<_1e177440c_StructIns>()};
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1e1737e81_FnIns> _field_method{jule::Ref<_1e1737e81_FnIns>()};


	_1e2a30c17_StructStaticIdentExprModel(jule::Ref<_1e177440c_StructIns> __param_structure, jule::Any __param_expr, jule::Ref<_1e1737e81_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_1e2a30c17_StructStaticIdentExprModel(void) = default;

	bool operator==(const _1e2a30c17_StructStaticIdentExprModel &_Src) const {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	bool operator!=(const _1e2a30c17_StructStaticIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_ArrayExprModel {
	jule::Ref<_1a2db8ce3_Arr> _field_kind{jule::Ref<_1a2db8ce3_Arr>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1e2a30c17_ArrayExprModel(jule::Ref<_1a2db8ce3_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_1e2a30c17_ArrayExprModel(void) = default;

	bool operator==(const _1e2a30c17_ArrayExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	bool operator!=(const _1e2a30c17_ArrayExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_CommonIdentExprModel {
	jule::Str _field_ident{jule::Str()};


	_1e2a30c17_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1e2a30c17_CommonIdentExprModel(void) = default;

	bool operator==(const _1e2a30c17_CommonIdentExprModel &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _1e2a30c17_CommonIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_CommonSubIdentExprModel {
	jule::Ref<_1a2db8ce3_TypeKind> _field_expr_kind{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1e2a30c17_CommonSubIdentExprModel(jule::Ref<_1a2db8ce3_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1e2a30c17_CommonSubIdentExprModel(void) = default;

	bool operator==(const _1e2a30c17_CommonSubIdentExprModel &_Src) const {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _1e2a30c17_CommonSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_TupleExprModel {
	jule::Slice<jule::Ref<_1a2c74a6c_Data>> _field_datas{jule::Slice<jule::Ref<_1a2c74a6c_Data>>()};


	_1e2a30c17_TupleExprModel(jule::Slice<jule::Ref<_1a2c74a6c_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_1e2a30c17_TupleExprModel(void) = default;

	bool operator==(const _1e2a30c17_TupleExprModel &_Src) const {
		return 
			this->_field_datas == _Src._field_datas;
	}

	bool operator!=(const _1e2a30c17_TupleExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_BuiltinOutCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_1e2a30c17_BuiltinOutCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e2a30c17_BuiltinOutCallExprModel(void) = default;

	bool operator==(const _1e2a30c17_BuiltinOutCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a30c17_BuiltinOutCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_BuiltinOutlnCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_1e2a30c17_BuiltinOutlnCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e2a30c17_BuiltinOutlnCallExprModel(void) = default;

	bool operator==(const _1e2a30c17_BuiltinOutlnCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a30c17_BuiltinOutlnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_BuiltinCloneCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_1e2a30c17_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e2a30c17_BuiltinCloneCallExprModel(void) = default;

	bool operator==(const _1e2a30c17_BuiltinCloneCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a30c17_BuiltinCloneCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_BuiltinNewCallExprModel {
	jule::Ref<_1a2db8ce3_TypeKind> _field_kind{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Any _field_init{jule::Any()};


	_1e2a30c17_BuiltinNewCallExprModel(jule::Ref<_1a2db8ce3_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_1e2a30c17_BuiltinNewCallExprModel(void) = default;

	bool operator==(const _1e2a30c17_BuiltinNewCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	bool operator!=(const _1e2a30c17_BuiltinNewCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_BuiltinRealCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_1e2a30c17_BuiltinRealCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e2a30c17_BuiltinRealCallExprModel(void) = default;

	bool operator==(const _1e2a30c17_BuiltinRealCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a30c17_BuiltinRealCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_BuiltinDropCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_1e2a30c17_BuiltinDropCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e2a30c17_BuiltinDropCallExprModel(void) = default;

	bool operator==(const _1e2a30c17_BuiltinDropCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a30c17_BuiltinDropCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_BuiltinPanicCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_1e2a30c17_BuiltinPanicCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e2a30c17_BuiltinPanicCallExprModel(void) = default;

	bool operator==(const _1e2a30c17_BuiltinPanicCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a30c17_BuiltinPanicCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_BuiltinMakeCallExprModel {
	jule::Ref<_1a2db8ce3_TypeKind> _field_kind{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Any _field_len{jule::Any()};
	jule::Any _field_cap{jule::Any()};


	_1e2a30c17_BuiltinMakeCallExprModel(jule::Ref<_1a2db8ce3_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_1e2a30c17_BuiltinMakeCallExprModel(void) = default;

	bool operator==(const _1e2a30c17_BuiltinMakeCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	bool operator!=(const _1e2a30c17_BuiltinMakeCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_BuiltinAppendCallExprModel {
	jule::Any _field_dest{jule::Any()};
	jule::Any _field_elements{jule::Any()};


	_1e2a30c17_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_1e2a30c17_BuiltinAppendCallExprModel(void) = default;

	bool operator==(const _1e2a30c17_BuiltinAppendCallExprModel &_Src) const {
		return 
			this->_field_dest == _Src._field_dest &&
			this->_field_elements == _Src._field_elements;
	}

	bool operator!=(const _1e2a30c17_BuiltinAppendCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_BuiltinErrorTraitSubIdentExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1e2a30c17_BuiltinErrorTraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident): _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1e2a30c17_BuiltinErrorTraitSubIdentExprModel(void) = default;

	bool operator==(const _1e2a30c17_BuiltinErrorTraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _1e2a30c17_BuiltinErrorTraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_SizeofExprModel {
	jule::Any _field_expr{jule::Any()};


	_1e2a30c17_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e2a30c17_SizeofExprModel(void) = default;

	bool operator==(const _1e2a30c17_SizeofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a30c17_SizeofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_AlignofExprModel {
	jule::Any _field_expr{jule::Any()};


	_1e2a30c17_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e2a30c17_AlignofExprModel(void) = default;

	bool operator==(const _1e2a30c17_AlignofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a30c17_AlignofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_RuneExprModel {
	jule::I32 _field_code{jule::I32()};


	_1e2a30c17_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_1e2a30c17_RuneExprModel(void) = default;

	bool operator==(const _1e2a30c17_RuneExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	bool operator!=(const _1e2a30c17_RuneExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_ExplicitDerefExprModel {
	jule::Any _field_expr{jule::Any()};


	_1e2a30c17_ExplicitDerefExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e2a30c17_ExplicitDerefExprModel(void) = default;

	bool operator==(const _1e2a30c17_ExplicitDerefExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a30c17_ExplicitDerefExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_IntegratedToStrExprModel {
	jule::Any _field_expr{jule::Any()};


	_1e2a30c17_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1e2a30c17_IntegratedToStrExprModel(void) = default;

	bool operator==(const _1e2a30c17_IntegratedToStrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e2a30c17_IntegratedToStrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a30c17_TernaryExprModel {
	jule::Any _field_condition{jule::Any()};
	jule::Any _field_true_expr{jule::Any()};
	jule::Any _field_false_expr{jule::Any()};


	_1e2a30c17_TernaryExprModel(jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_1e2a30c17_TernaryExprModel(void) = default;

	bool operator==(const _1e2a30c17_TernaryExprModel &_Src) const {
		return 
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	bool operator!=(const _1e2a30c17_TernaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a7b966_Package: public _1a35968cc_Lookup {
	jule::Slice<jule::Ref<_1a2d05801_SymbolTable>> _field_files{jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>()};


	_1e2a7b966_Package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_1e2a7b966_Package(void) = default;

	jule::Ref<_1e2a7b966_ImportInfo> _method_find_package(jule::Str);


	jule::Ref<_1e2a7b966_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)>);


	jule::Ref<_1ba80e105_Var> _method_find_var(jule::Str,jule::Bool);


	jule::Ref<_1a2db8ce3_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	jule::Ref<_1e177440c_Struct> _method_find_struct(jule::Str,jule::Bool);


	jule::Ref<_1e1737e81_Fn> _method_find_fn(jule::Str,jule::Bool);


	jule::Ref<_1e2a1e563_Trait> _method_find_trait(jule::Str);


	jule::Ref<_1e2a21d4b_Enum> _method_find_enum(jule::Str);


	bool operator==(const _1e2a7b966_Package &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	bool operator!=(const _1e2a7b966_Package &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a7c2a2_Sema: public _1a35968cc_Lookup {
	jule::Ref<_1e2a7c2a2_Sema> self{};

	jule::Slice<_1ec8e8025_Log> _field_errors{jule::Slice<_1ec8e8025_Log>()};
	jule::Slice<jule::Ref<_1a2d05801_SymbolTable>> _field_files{jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>()};
	jule::Ref<_1a2d05801_SymbolTable> _field_file{jule::Ref<_1a2d05801_SymbolTable>()};
	jule::Int _field_flags{0LL};


	_1e2a7c2a2_Sema(jule::Slice<_1ec8e8025_Log> __param_errors, jule::Slice<jule::Ref<_1a2d05801_SymbolTable>> __param_files, jule::Ref<_1a2d05801_SymbolTable> __param_file, jule::Int __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {
		this->self = jule::Ref<_1e2a7c2a2_Sema>::make(this, nullptr);

	}

	~_1e2a7c2a2_Sema(void) { this->self.ref = nullptr; }

	_1e2a7c2a2_Sema(void) { this->self = jule::Ref<_1e2a7c2a2_Sema>::make(this, nullptr); }

	jule::Ref<_1e2a7b966_ImportInfo> _method_find_package(jule::Str);


	jule::Ref<_1e2a7b966_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)>);


	jule::Ref<_1ba80e105_Var> _method_find_var(jule::Str,jule::Bool);


	jule::Ref<_1a2db8ce3_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	jule::Ref<_1e177440c_Struct> _method_find_struct(jule::Str,jule::Bool);


	jule::Ref<_1e1737e81_Fn> _method_find_fn(jule::Str,jule::Bool);


	jule::Ref<_1e2a1e563_Trait> _method_find_trait(jule::Str);


	jule::Ref<_1e2a21d4b_Enum> _method_find_enum(jule::Str);


	jule::Bool _method_is_flag(jule::Int);


	void _method_set_current_file(jule::Ref<_1a2d05801_SymbolTable>);


	void _method_push_err(_1e15a2bb9_Token,jule::Str,jule::Slice<jule::Any>);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	jule::Bool _method_is_accessible_define(jule::Bool,_1e15a2bb9_Token);


	jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_1e15a2bb9_Token);


	jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	jule::Any _method_get_import_def(jule::Str,jule::Ref<_1e2a7b966_ImportInfo>&);


	void _method_check_import_selections(jule::Ref<_1e2a7b966_ImportInfo>&);


	jule::Bool _method_is_use_alias_duplication(jule::Ref<_1e2a7b966_ImportInfo>&);


	jule::Bool _method_check_import(jule::Ref<_1e2a7b966_ImportInfo>&);


	void _method_check_imports(void);


	void _method_impl_file_impls(void);


	void _method_impl_impls(void);


	void _method_check_enums(void);


	jule::Bool _method_check_type_with_refers(jule::Ref<_1a2db8ce3_TypeSymbol>&,jule::Trait<_1a35968cc_Lookup>,jule::Ref<_1a2db8ce3_Referencer>);


	jule::Bool _method_check_type(jule::Ref<_1a2db8ce3_TypeSymbol>&,jule::Trait<_1a35968cc_Lookup>);


	jule::Ref<_1a2db8ce3_TypeKind> _method_build_type_with_generics(jule::Ref<_1e16025cb_TypeDecl>&,jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>);


	jule::Ref<_1a2db8ce3_TypeKind> _method_build_type(jule::Ref<_1e16025cb_TypeDecl>&);


	jule::Ref<_1a2c74a6c_Eval> _method_evalpd(jule::Trait<_1a35968cc_Lookup>,jule::Ref<_1a2db8ce3_TypeKind>,jule::Ref<_1ba80e105_Var>);


	jule::Ref<_1a2c74a6c_Eval> _method_evalp(jule::Trait<_1a35968cc_Lookup>,jule::Ref<_1a2db8ce3_TypeKind>);


	jule::Ref<_1a2c74a6c_Eval> _method_eval(jule::Trait<_1a35968cc_Lookup>);


	void _method_check_assign_type(jule::Bool,jule::Ref<_1a2db8ce3_TypeKind>&,jule::Ref<_1a2c74a6c_Data>&,_1e15a2bb9_Token,jule::Bool);


	jule::Bool _method_check_type_compatibility(jule::Ref<_1a2db8ce3_TypeKind>&,jule::Ref<_1a2db8ce3_TypeKind>&,_1e15a2bb9_Token&,jule::Bool);


	jule::Ref<_1a2db8ce3_TypeKind> _method_build_non_generic_type_kind(jule::Ref<_1e16025cb_TypeDecl>&,jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>&);


	void _method_build_fn_non_generic_type_kinds(jule::Ref<_1e1737e81_FnIns>&);


	jule::Ref<_1e1737e81_FnIns> _method_get_trait_check_fn_kind(jule::Ref<_1e1737e81_Fn>&);


	jule::Bool _method_reload_fn_ins_types(jule::Ref<_1e1737e81_FnIns>&);


	void _method_check_ref_validity_for_init_expr(jule::Bool,jule::Ref<_1a2c74a6c_Data>&,_1e15a2bb9_Token&);


	void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ref<_1a2db8ce3_TypeKind>&,jule::Ref<_1a2c74a6c_Data>&,_1e15a2bb9_Token&);


	jule::Bool _method_check_type_alias_decl_kind(jule::Ref<_1a2db8ce3_TypeAlias>&,jule::Trait<_1a35968cc_Lookup>);


	void _method_check_type_alias_decl(jule::Ref<_1a2db8ce3_TypeAlias>&,jule::Trait<_1a35968cc_Lookup>);


	void _method_check_type_alias_decl_dup(jule::Ref<_1a2db8ce3_TypeAlias>&);


	jule::Bool _method_check_type_alias_decls(void);


	void _method_check_enum_items_dup(jule::Ref<_1e2a21d4b_Enum>);


	void _method_check_enum_items_str(jule::Ref<_1e2a21d4b_Enum>&);


	void _method_check_enum_items_int(jule::Ref<_1e2a21d4b_Enum>&);


	void _method_check_enum_decl(jule::Ref<_1e2a21d4b_Enum>&);


	jule::Bool _method_check_enum_decls(void);


	jule::Bool _method_check_decl_generics(jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>&);


	jule::Bool _method_check_fn_decl_params_dup(jule::Ref<_1e1737e81_Fn>&);


	jule::Bool _method_check_fn_decl_result_dup(jule::Ref<_1e1737e81_Fn>&);


	jule::Bool _method_check_fn_decl_types(jule::Ref<_1e1737e81_Fn>&);


	jule::Bool _method_check_fn_decl_prototype(jule::Ref<_1e1737e81_Fn>&);


	void _method_check_trait_decl_method(jule::Ref<_1e1737e81_Fn>&);


	void _method_check_trait_decl_methods(jule::Ref<_1e2a1e563_Trait>&);


	void _method_check_trait_decl(jule::Ref<_1e2a1e563_Trait>&);


	jule::Bool _method_check_trait_decls(void);


	jule::Bool _method_check_trait_impl_methods(jule::Ref<_1e2a1e563_Trait>&,jule::Ref<_1e2a276ae_Impl>&);


	jule::Bool _method_impl_to_struct(jule::Ref<_1e177440c_Struct>&,jule::Ref<_1e2a276ae_Impl>&);


	void _method_impl_trait(jule::Ref<_1e2a276ae_Impl>&);


	void _method_impl_struct(jule::Ref<_1e2a276ae_Impl>&);


	void _method_impl_impl(jule::Ref<_1e2a276ae_Impl>&);


	void _method_check_var_decl(jule::Ref<_1ba80e105_Var>&,jule::Trait<_1a35968cc_Lookup>);


	void _method_check_global_var_decl(jule::Ref<_1ba80e105_Var>&);


	jule::Bool _method_check_global_decls(void);


	jule::Bool _method_check_struct_trait_impl(jule::Ref<_1e177440c_Struct>&,jule::Ref<_1e2a1e563_Trait>&);


	jule::Bool _method_check_struct_impls(jule::Ref<_1e177440c_Struct>&);


	jule::Bool _method_check_struct_fields(jule::Ref<_1e177440c_Struct>&);


	jule::Bool _method_check_struct_decl_methods(jule::Ref<_1e177440c_Struct>&);


	void _method_check_struct_decl(jule::Ref<_1e177440c_Struct>&);


	jule::Bool _method_check_struct_decls(void);


	void _method_check_fn_decl(jule::Ref<_1e1737e81_Fn>&);


	jule::Bool _method_check_fn_decls(void);


	jule::Bool _method_check_directive_pass(_1e28b6a59_Pass&);


	jule::Bool _method_check_passes(void);


	void _method_push_cycle_error(jule::Ref<_1e177440c_Struct>&,jule::Ref<_1e177440c_Struct>&,jule::Str&);


	jule::Bool _method_check_cross_cycle(jule::Ref<_1e177440c_Struct>&,jule::Ref<_1e177440c_Struct>&,jule::Str&);


	jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ref<_1e177440c_Struct>&,jule::Ref<_1a2db8ce3_TypeKind>&);


	jule::Bool _method_check_struct_ins_derive_clone(jule::Ref<_1e177440c_StructIns>);


	jule::Bool _method_check_struct_derive_clone(jule::Ref<_1e177440c_Struct>&);


	jule::Bool _method_check_file_derives(void);


	void _method_check_package_derives(void);


	void _method_check_package_decls(void);


	void _method_check_data_for_type_inference(jule::Ref<_1a2c74a6c_Data>&,_1e15a2bb9_Token&);


	void _method_check_var(jule::Ref<_1ba80e105_Var>&);


	void _method_check_type_var(jule::Ref<_1ba80e105_Var>&,jule::Trait<_1a35968cc_Lookup>);


	void _method_check_global_types(void);


	void _method_check_type_method(jule::Ref<_1e177440c_StructIns>&,jule::Ref<_1e1737e81_Fn>&);


	void _method_check_type_struct(jule::Ref<_1e177440c_Struct>&);


	void _method_check_struct_types(void);


	void _method_check_rets(jule::Ref<_1e1737e81_FnIns>&);


	void _method_check_fn_ins_sc(jule::Ref<_1e1737e81_FnIns>&,jule::Ref<_1e2a2e210_ScopeChecker>&);


	void _method_check_fn_ins(jule::Ref<_1e1737e81_FnIns>&);


	void _method_check_type_fn(jule::Ref<_1e1737e81_Fn>&);


	void _method_precheck_type_fn(jule::Ref<_1e1737e81_Fn>&);


	jule::Bool _method_precheck_fn_types(void);


	jule::Bool _method_check_fn_types(void);


	void _method_check_package_types(void);


	void _method_set_file_sema_fields(void);


	void _method_set_sema_fields(void);


	void _method_check(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>&);


	bool operator==(const _1e2a7c2a2_Sema &_Src) const {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file &&
			this->_field_flags == _Src._field_flags;
	}

	bool operator!=(const _1e2a7c2a2_Sema &_Src) const { return !this->operator==(_Src); }
};


struct _1ba80e105_IterRelation {
	jule::Ref<_1ba80e105_Var> _field_range{jule::Ref<_1ba80e105_Var>()};


	_1ba80e105_IterRelation(jule::Ref<_1ba80e105_Var> __param_range): _field_range(__param_range) {}

	

	_1ba80e105_IterRelation(void) = default;

	bool operator==(const _1ba80e105_IterRelation &_Src) const {
		return 
			this->_field_range == _Src._field_range;
	}

	bool operator!=(const _1ba80e105_IterRelation &_Src) const { return !this->operator==(_Src); }
};


struct _1a2c73c9c_RangeChecker {
	jule::Ref<_1e2a2e210_ScopeChecker> _field_sc{jule::Ref<_1e2a2e210_ScopeChecker>()};
	jule::Ref<_1e16025cb_RangeKind> _field_rang{jule::Ref<_1e16025cb_RangeKind>()};
	jule::Ref<_1e2a2e210_RangeIter> _field_kind{jule::Ref<_1e2a2e210_RangeIter>()};
	jule::Ref<_1a2c74a6c_Data> _field_d{jule::Ref<_1a2c74a6c_Data>()};


	_1a2c73c9c_RangeChecker(jule::Ref<_1e2a2e210_ScopeChecker> __param_sc, jule::Ref<_1e16025cb_RangeKind> __param_rang, jule::Ref<_1e2a2e210_RangeIter> __param_kind, jule::Ref<_1a2c74a6c_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_1a2c73c9c_RangeChecker(void) = default;

	jule::Ref<_1ba80e105_Var> _method_build_var(jule::Ref<_1e16025cb_VarDecl>&);


	void _method_set_size_key(void);


	void _method_check_range_expr_validity(jule::Ref<_1a2c74a6c_Data>&,jule::Ref<_1ba80e105_Var>&,jule::Ref<_1a2db8ce3_TypeKind>&);


	void _method_check_slice(void);


	void _method_check_array(void);


	void _method_check_map_key_a(void);


	void _method_check_map_key_b(void);


	void _method_check_map(void);


	void _method_check_str(void);


	jule::Bool _method_check(void);


	bool operator==(const _1a2c73c9c_RangeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	bool operator!=(const _1a2c73c9c_RangeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1a2d05801_SymbolTable: public _1a35968cc_Lookup {
	jule::Ref<_1e17bebd8_File> _field_file{jule::Ref<_1e17bebd8_File>()};
	jule::Slice<_1e28b6a59_Pass> _field_passes{jule::Slice<_1e28b6a59_Pass>()};
	jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>> _field_imports{jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>>()};
	jule::Slice<jule::Ref<_1ba80e105_Var>> _field_vars{jule::Slice<jule::Ref<_1ba80e105_Var>>()};
	jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>> _field_type_aliases{jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>()};
	jule::Slice<jule::Ref<_1e177440c_Struct>> _field_structs{jule::Slice<jule::Ref<_1e177440c_Struct>>()};
	jule::Slice<jule::Ref<_1e1737e81_Fn>> _field_funcs{jule::Slice<jule::Ref<_1e1737e81_Fn>>()};
	jule::Slice<jule::Ref<_1e2a1e563_Trait>> _field_traits{jule::Slice<jule::Ref<_1e2a1e563_Trait>>()};
	jule::Slice<jule::Ref<_1e2a21d4b_Enum>> _field_enums{jule::Slice<jule::Ref<_1e2a21d4b_Enum>>()};
	jule::Slice<jule::Ref<_1e2a276ae_Impl>> _field_impls{jule::Slice<jule::Ref<_1e2a276ae_Impl>>()};


	_1a2d05801_SymbolTable(jule::Ref<_1e17bebd8_File> __param_file, jule::Slice<_1e28b6a59_Pass> __param_passes, jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>> __param_imports, jule::Slice<jule::Ref<_1ba80e105_Var>> __param_vars, jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ref<_1e177440c_Struct>> __param_structs, jule::Slice<jule::Ref<_1e1737e81_Fn>> __param_funcs, jule::Slice<jule::Ref<_1e2a1e563_Trait>> __param_traits, jule::Slice<jule::Ref<_1e2a21d4b_Enum>> __param_enums, jule::Slice<jule::Ref<_1e2a276ae_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_1a2d05801_SymbolTable(void) = default;

	jule::Ref<_1e2a7b966_ImportInfo> _method_find_package(jule::Str);


	jule::Ref<_1e2a7b966_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)>);


	jule::Ref<_1ba80e105_Var> _method_find_var(jule::Str,jule::Bool);


	jule::Ref<_1a2db8ce3_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	jule::Ref<_1e177440c_Struct> _method_find_struct(jule::Str,jule::Bool);


	jule::Ref<_1e1737e81_Fn> _method_find_fn(jule::Str,jule::Bool);


	jule::Ref<_1e2a1e563_Trait> _method_find_trait(jule::Str);


	jule::Ref<_1e2a21d4b_Enum> _method_find_enum(jule::Str);


	jule::Ref<_1ba80e105_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	jule::Ref<_1a2db8ce3_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	bool operator==(const _1a2d05801_SymbolTable &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	bool operator!=(const _1a2d05801_SymbolTable &_Src) const { return !this->operator==(_Src); }
};


struct _1a2c74a6c_Data {
	jule::Ref<_1a2db8ce3_TypeKind> _field_kind{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_cast_kind{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Bool _field_lvalue{jule::Bool()};
	jule::Bool _field_variadiced{jule::Bool()};
	jule::Bool _field_is_rune{jule::Bool()};
	jule::Any _field_model{jule::Any()};
	jule::Bool _field_decl{jule::Bool()};
	jule::Ref<_1a37ddd88_Const> _field_constant{jule::Ref<_1a37ddd88_Const>()};


	_1a2c74a6c_Data(jule::Ref<_1a2db8ce3_TypeKind> __param_kind, jule::Ref<_1a2db8ce3_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ref<_1a37ddd88_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_variadiced(__param_variadiced), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_1a2c74a6c_Data(void) = default;

	jule::Bool _method_is_nil(void);


	jule::Bool _method_is_void(void);


	jule::Bool _method_is_const(void);


	bool operator==(const _1a2c74a6c_Data &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	bool operator!=(const _1a2c74a6c_Data &_Src) const { return !this->operator==(_Src); }
};


struct _1a2c74a6c_Value {
	jule::Ref<_1e16025cb_Expr> _field_expr{jule::Ref<_1e16025cb_Expr>()};
	jule::Ref<_1a2c74a6c_Data> _field_data{jule::Ref<_1a2c74a6c_Data>()};


	_1a2c74a6c_Value(jule::Ref<_1e16025cb_Expr> __param_expr, jule::Ref<_1a2c74a6c_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_1a2c74a6c_Value(void) = default;

	bool operator==(const _1a2c74a6c_Value &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	bool operator!=(const _1a2c74a6c_Value &_Src) const { return !this->operator==(_Src); }
};


struct _1a2c74a6c_Eval {
	jule::Ref<_1a2c74a6c_Eval> self{};

	jule::Ref<_1e2a7c2a2_Sema> _field_s{jule::Ref<_1e2a7c2a2_Sema>()};
	jule::Trait<_1a35968cc_Lookup> _field_lookup{jule::Trait<_1a35968cc_Lookup>()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_prefix{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_immutable{jule::Bool()};
	jule::Ref<_1ba80e105_Var> _field_owner{jule::Ref<_1ba80e105_Var>()};


	_1a2c74a6c_Eval(jule::Ref<_1e2a7c2a2_Sema> __param_s, jule::Trait<_1a35968cc_Lookup> __param_lookup, jule::Ref<_1a2db8ce3_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Ref<_1ba80e105_Var> __param_owner): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_owner(__param_owner) {
		this->self = jule::Ref<_1a2c74a6c_Eval>::make(this, nullptr);

	}

	~_1a2c74a6c_Eval(void) { this->self.ref = nullptr; }

	_1a2c74a6c_Eval(void) { this->self = jule::Ref<_1a2c74a6c_Eval>::make(this, nullptr); }

	void _method_push_err(_1e15a2bb9_Token,jule::Str,jule::Slice<jule::Any>);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	jule::Bool _method_is_unsafe(void);


	jule::Bool _method_is_global(void);


	jule::Ref<_1a2c74a6c_Data> _method_lit_nil(void);


	jule::Ref<_1a2c74a6c_Data> _method_lit_str(jule::Ref<_1e16025cb_LitExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_lit_bool(jule::Ref<_1e16025cb_LitExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_lit_rune(jule::Ref<_1e16025cb_LitExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_lit_float(jule::Ref<_1e16025cb_LitExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_lit_int(jule::Ref<_1e16025cb_LitExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_lit_num(jule::Ref<_1e16025cb_LitExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_lit(jule::Ref<_1e16025cb_LitExpr>);


	jule::Any _method_find_builtins(jule::Str);


	jule::Any _method_get_def(jule::Str,jule::Bool);


	void _method_push_reference(jule::Ref<_1e28b6a59_ReferenceStack>);


	void _method_push_reference_to_fn(jule::Ref<_1e1737e81_FnIns>);


	void _method_push_reference_to_var(jule::Ref<_1ba80e105_Var>);


	void _method_push_reference_to_struct(jule::Ref<_1e177440c_StructIns>);


	jule::Ref<_1a2c74a6c_Data> _method___eval_enum(jule::Ref<_1e2a21d4b_Enum>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_enum(jule::Ref<_1e2a21d4b_Enum>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method___eval_struct(jule::Ref<_1e177440c_StructIns>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_struct(jule::Ref<_1e177440c_StructIns>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_fn_ins(jule::Ref<_1e1737e81_FnIns>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_fn(jule::Ref<_1e1737e81_Fn>,_1e15a2bb9_Token);


	void _method_push_illegal_cycle_error(jule::Ref<_1ba80e105_Var>,jule::Ref<_1ba80e105_Var>,jule::Str&);


	jule::Bool _method_check_cross_cycle(jule::Ref<_1ba80e105_Var>,jule::Str&);


	jule::Bool _method_check_illegal_cycles(jule::Ref<_1ba80e105_Var>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_var(jule::Ref<_1ba80e105_Var>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_type_alias(jule::Ref<_1a2db8ce3_TypeAlias>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_def(jule::Any,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_ident(jule::Ref<_1e16025cb_IdentExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_unary_minus(jule::Ref<_1a2c74a6c_Data>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_unary_plus(jule::Ref<_1a2c74a6c_Data>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_unary_caret(jule::Ref<_1a2c74a6c_Data>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_unary_excl(jule::Ref<_1a2c74a6c_Data>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_unary_star(jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_unary_amper(jule::Ref<_1a2c74a6c_Data>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_unary_type_decl(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1e16025cb_UnaryExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_unary(jule::Ref<_1e16025cb_UnaryExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_variadic(jule::Ref<_1e16025cb_VariadicExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_unsafe(jule::Ref<_1e16025cb_UnsafeExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_arr(jule::Ref<_1e16025cb_SliceExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_exp_slc(jule::Ref<_1e16025cb_SliceExpr>,jule::Ref<_1a2db8ce3_TypeKind>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_slice_expr(jule::Ref<_1e16025cb_SliceExpr>);


	void _method_check_integer_indexing_by_data(jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	void _method_indexing_ptr(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1e16025cb_IndexingExpr>);


	void _method_indexing_arr(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1e16025cb_IndexingExpr>);


	void _method_indexing_slc(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1e16025cb_IndexingExpr>);


	void _method_indexing_map(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1e16025cb_IndexingExpr>);


	void _method_indexing_str(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1e16025cb_IndexingExpr>);


	void _method_to_indexing(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1e16025cb_IndexingExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_ident_decl_from_indexing(jule::Ref<_1e16025cb_IndexingExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_indexing(jule::Ref<_1e16025cb_IndexingExpr>);


	std::tuple<jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>> _method_eval_slicing_exprs(jule::Ref<_1e16025cb_SlicingExpr>);


	void _method_slicing_arr(jule::Ref<_1a2c74a6c_Data>);


	void _method_slicing_slc(jule::Ref<_1a2c74a6c_Data>);


	void _method_slicing_str(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>);


	void _method_check_slicing(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1e16025cb_SlicingExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_slicing(jule::Ref<_1e16025cb_SlicingExpr>);


	void _method_cast_ptr(jule::Ref<_1a2db8ce3_TypeKind>,jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	void _method_cast_struct(jule::Ref<_1a2db8ce3_TypeKind>,jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	void _method_cast_ref(jule::Ref<_1a2db8ce3_TypeKind>,jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	void _method_cast_slc(jule::Ref<_1a2db8ce3_TypeKind>,jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	void _method_cast_str(jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	void _method_cast_int(jule::Ref<_1a2db8ce3_TypeKind>,jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	void _method_cast_num(jule::Ref<_1a2db8ce3_TypeKind>,jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	void _method_cast_prim(jule::Ref<_1a2db8ce3_TypeKind>,jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	void _method_cast_constant(jule::Ref<_1a2db8ce3_TypeKind>&,jule::Ref<_1a2c74a6c_Data>&);


	jule::Ref<_1a2c74a6c_Data> _method_eval_cast_by_type_n_data(jule::Ref<_1a2db8ce3_TypeKind>,jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_cast(jule::Ref<_1e16025cb_CastExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_ns_selection(jule::Ref<_1e16025cb_NsSelectionExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_struct_lit_explicit(jule::Ref<_1e177440c_StructIns>,jule::Slice<jule::Any>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_struct_lit(jule::Ref<_1e16025cb_StructLit>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_type(jule::Ref<_1e16025cb_TypeDecl>);


	jule::Ref<_1a2c74a6c_Data> _method_call_type_fn(jule::Ref<_1e16025cb_FnCallExpr>,jule::Ref<_1a2c74a6c_Data>);


	std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ref<_1e1737e81_FnIns>,jule::Ref<_1e16025cb_FnCallExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_call_builtin_fn(jule::Ref<_1e16025cb_FnCallExpr>,jule::Ref<_1a2c74a6c_Data>);


	void _method_check_fn_of_concurrent_call(jule::Ref<_1e1737e81_FnIns>&,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_call_fn(jule::Ref<_1e16025cb_FnCallExpr>,jule::Ref<_1a2c74a6c_Data>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_fn_call(jule::Ref<_1e16025cb_FnCallExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_enum_static(jule::Ref<_1e2a21d4b_Enum>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_struct_static(jule::Ref<_1e177440c_StructIns>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_trait_sub_ident(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1e2a1e563_Trait>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_struct_sub_ident(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1e177440c_StructIns>,jule::Ref<_1e16025cb_SubIdentExpr>,jule::Bool);


	jule::Ref<_1a2c74a6c_Data> _method_eval_slice_sub_ident(jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_array_sub_ident(jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_map_sub_ident(jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_str_sub_ident(jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_int_type_static(_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_uint_type_static(_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_i8_type_static(_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_i16_type_static(_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_i32_type_static(_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_i64_type_static(_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_u8_type_static(_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_u16_type_static(_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_u32_type_static(_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_u64_type_static(_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_f32_type_tatic(_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_f64_type_static(_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_prim_static(jule::Str,_1e15a2bb9_Token);


	jule::Ref<_1a2c74a6c_Data> _method_eval_type_static(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1e16025cb_SubIdentExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_obj_sub_ident(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1e16025cb_SubIdentExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_sub_ident(jule::Ref<_1e16025cb_SubIdentExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_tuple(jule::Ref<_1e16025cb_TupleExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_map(jule::Ref<_1a2db8ce3_Map>,jule::Ref<_1e16025cb_BraceLit>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_brace_lit(jule::Ref<_1e16025cb_BraceLit>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_anon_fn(jule::Ref<_1e16025cb_FnDecl>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_binop(jule::Ref<_1e16025cb_BinopExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_ternary(jule::Ref<_1e16025cb_TernaryExpr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_expr_kind(jule::Any);


	jule::Ref<_1a2c74a6c_Data> _method_eval(jule::Ref<_1e16025cb_Expr>);


	jule::Ref<_1a2c74a6c_Data> _method_eval_expr(jule::Ref<_1e16025cb_Expr>);


	bool operator==(const _1a2c74a6c_Eval &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_immutable == _Src._field_immutable &&
			this->_field_owner == _Src._field_owner;
	}

	bool operator!=(const _1a2c74a6c_Eval &_Src) const { return !this->operator==(_Src); }
};


struct _1a2db8ce3_TypeKind: public _1a2db8ce3_Kind {
	jule::Ref<_1a2db8ce3_TypeKind> self{};

	jule::Str _field_cpp_ident{jule::Str()};
	jule::Bool _field_generic{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Trait<_1a2db8ce3_Kind> _field_kind{jule::Trait<_1a2db8ce3_Kind>()};


	_1a2db8ce3_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_1a2db8ce3_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {
		this->self = jule::Ref<_1a2db8ce3_TypeKind>::make(this, nullptr);

	}

	~_1a2db8ce3_TypeKind(void) { this->self.ref = nullptr; }

	_1a2db8ce3_TypeKind(void) { this->self = jule::Ref<_1a2db8ce3_TypeKind>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind>);


	jule::Ref<_1a2db8ce3_TypeKind> _method_clone(void);


	jule::Bool _method_cpp_linked(void);


	jule::Bool _method_is_nil(void);


	jule::Bool _method_void(void);


	jule::Bool _method_lvalue(void);


	jule::Bool _method_mutable(void);


	jule::Bool _method_nil_compatible(void);


	jule::Bool _method_supports_cloning(void);


	jule::Bool _method_variadicable(void);


	jule::Ref<_1a2db8ce3_Prim> _method_prim(void);


	jule::Ref<_1a2db8ce3_Ref> _method_ref(void);


	jule::Ref<_1a2db8ce3_Ptr> _method_ptr(void);


	jule::Ref<_1e2a21d4b_Enum> _method_enm(void);


	jule::Ref<_1a2db8ce3_Arr> _method_arr(void);


	jule::Ref<_1a2db8ce3_Slc> _method_slc(void);


	jule::Ref<_1e1737e81_FnIns> _method_fnc(void);


	jule::Ref<_1e177440c_StructIns> _method_strct(void);


	jule::Ref<_1e2a1e563_Trait> _method_trt(void);


	jule::Ref<_1a2db8ce3_Map> _method_map(void);


	jule::Ref<_1a2db8ce3_Tuple> _method_tup(void);


	bool operator==(const _1a2db8ce3_TypeKind &_Src) const {
		return 
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_generic == _Src._field_generic &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _1a2db8ce3_TypeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1a2db8ce3_TypeSymbol {
	jule::Ref<_1e16025cb_TypeDecl> _field_decl{jule::Ref<_1e16025cb_TypeDecl>()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_kind{jule::Ref<_1a2db8ce3_TypeKind>()};


	_1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl> __param_decl, jule::Ref<_1a2db8ce3_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1a2db8ce3_TypeSymbol(void) = default;

	jule::Bool _method_checked(void);


	void _method_remove_kind(void);


	bool operator==(const _1a2db8ce3_TypeSymbol &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _1a2db8ce3_TypeSymbol &_Src) const { return !this->operator==(_Src); }
};


struct _1a2db8ce3_Prim: public _1a2db8ce3_Kind {
	jule::Str _field_kind{jule::Str()};


	_1a2db8ce3_Prim(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_1a2db8ce3_Prim(void) = default;

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind>);


	jule::Bool _method_is_i8(void);


	jule::Bool _method_is_i16(void);


	jule::Bool _method_is_i32(void);


	jule::Bool _method_is_i64(void);


	jule::Bool _method_is_u8(void);


	jule::Bool _method_is_u16(void);


	jule::Bool _method_is_u32(void);


	jule::Bool _method_is_u64(void);


	jule::Bool _method_is_f32(void);


	jule::Bool _method_is_f64(void);


	jule::Bool _method_is_int(void);


	jule::Bool _method_is_uint(void);


	jule::Bool _method_is_uintptr(void);


	jule::Bool _method_is_bool(void);


	jule::Bool _method_is_str(void);


	jule::Bool _method_is_any(void);


	bool operator==(const _1a2db8ce3_Prim &_Src) const {
		return 
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _1a2db8ce3_Prim &_Src) const { return !this->operator==(_Src); }
};


struct _1a2db8ce3_Ref: public _1a2db8ce3_Kind {
	jule::Ref<_1a2db8ce3_TypeKind> _field_elem{jule::Ref<_1a2db8ce3_TypeKind>()};


	_1a2db8ce3_Ref(jule::Ref<_1a2db8ce3_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a2db8ce3_Ref(void) = default;

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind>);


	bool operator==(const _1a2db8ce3_Ref &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _1a2db8ce3_Ref &_Src) const { return !this->operator==(_Src); }
};


struct _1a2db8ce3_Slc: public _1a2db8ce3_Kind {
	jule::Ref<_1a2db8ce3_TypeKind> _field_elem{jule::Ref<_1a2db8ce3_TypeKind>()};


	_1a2db8ce3_Slc(jule::Ref<_1a2db8ce3_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a2db8ce3_Slc(void) = default;

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind>);


	bool operator==(const _1a2db8ce3_Slc &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _1a2db8ce3_Slc &_Src) const { return !this->operator==(_Src); }
};


struct _1a2db8ce3_Tuple: public _1a2db8ce3_Kind {
	jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>> _field_types{jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>()};


	_1a2db8ce3_Tuple(jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>> __param_types): _field_types(__param_types) {}

	

	_1a2db8ce3_Tuple(void) = default;

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind>);


	bool operator==(const _1a2db8ce3_Tuple &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	bool operator!=(const _1a2db8ce3_Tuple &_Src) const { return !this->operator==(_Src); }
};


struct _1a2db8ce3_Map: public _1a2db8ce3_Kind {
	jule::Ref<_1a2db8ce3_TypeKind> _field_key{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_val{jule::Ref<_1a2db8ce3_TypeKind>()};


	_1a2db8ce3_Map(jule::Ref<_1a2db8ce3_TypeKind> __param_key, jule::Ref<_1a2db8ce3_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1a2db8ce3_Map(void) = default;

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind>);


	bool operator==(const _1a2db8ce3_Map &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	bool operator!=(const _1a2db8ce3_Map &_Src) const { return !this->operator==(_Src); }
};


struct _1a2db8ce3_Arr: public _1a2db8ce3_Kind {
	jule::Bool _field_auto{jule::Bool()};
	jule::Int _field_n{jule::Int()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_elem{jule::Ref<_1a2db8ce3_TypeKind>()};


	_1a2db8ce3_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ref<_1a2db8ce3_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {}

	

	_1a2db8ce3_Arr(void) = default;

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind>);


	bool operator==(const _1a2db8ce3_Arr &_Src) const {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _1a2db8ce3_Arr &_Src) const { return !this->operator==(_Src); }
};


struct _1a2db8ce3_Ptr: public _1a2db8ce3_Kind {
	jule::Ref<_1a2db8ce3_TypeKind> _field_elem{jule::Ref<_1a2db8ce3_TypeKind>()};


	_1a2db8ce3_Ptr(jule::Ref<_1a2db8ce3_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a2db8ce3_Ptr(void) = default;

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind>);


	jule::Bool _method_is_unsafe(void);


	bool operator==(const _1a2db8ce3_Ptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _1a2db8ce3_Ptr &_Src) const { return !this->operator==(_Src); }
};


struct _1a2db8ce3_Referencer {
	jule::Str _field_ident{jule::Str()};
	jule::Any _field_owner{jule::Any()};
	jule::Slice<jule::Any>* _field_refs{nullptr};


	_1a2db8ce3_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_1a2db8ce3_Referencer(void) = default;

	bool operator==(const _1a2db8ce3_Referencer &_Src) const {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	bool operator!=(const _1a2db8ce3_Referencer &_Src) const { return !this->operator==(_Src); }
};


struct _1e12e1430_PlainImporter: public _1e2a7b966_Importer {
	jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>> _field_all_packages{jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>>()};


	_1e12e1430_PlainImporter(jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>> __param_all_packages): _field_all_packages(__param_all_packages) {}

	

	_1e12e1430_PlainImporter(void) = default;

	jule::Ref<_1e2a7b966_ImportInfo> _method_get_import(jule::Str);


	std::tuple<jule::Slice<jule::Ref<_1e15a53c5_Ast>>,jule::Slice<_1ec8e8025_Log>> _method_import_package(jule::Str);


	void _method_imported(jule::Ref<_1e2a7b966_ImportInfo>);


	bool operator==(const _1e12e1430_PlainImporter &_Src) const {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	bool operator!=(const _1e12e1430_PlainImporter &_Src) const { return !this->operator==(_Src); }
};


struct _1e1183e1b_OrderedDefines {
	jule::Slice<jule::Ref<_1e177440c_Struct>> _field_structs{jule::Slice<jule::Ref<_1e177440c_Struct>>()};
	jule::Slice<jule::Ref<_1ba80e105_Var>> _field_globals{jule::Slice<jule::Ref<_1ba80e105_Var>>()};


	_1e1183e1b_OrderedDefines(jule::Slice<jule::Ref<_1e177440c_Struct>> __param_structs, jule::Slice<jule::Ref<_1ba80e105_Var>> __param_globals): _field_structs(__param_structs), _field_globals(__param_globals) {}

	

	_1e1183e1b_OrderedDefines(void) = default;

	bool operator==(const _1e1183e1b_OrderedDefines &_Src) const {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	bool operator!=(const _1e1183e1b_OrderedDefines &_Src) const { return !this->operator==(_Src); }
};


struct _1e1183e1b_DefineOrderer {
	

	_1e1183e1b_DefineOrderer(void) = default;

	static jule::Bool _static_method_is_common_ordered_0(jule::Slice<jule::Ref<_1ba80e105_Var>>&,jule::Ref<_1ba80e105_Var>);
	static jule::Bool _static_method_is_common_ordered_1(jule::Slice<jule::Ref<_1e177440c_Struct>>&,jule::Ref<_1e177440c_Struct>);


	static void _static_method_order_common_0(jule::Slice<jule::Ref<_1ba80e105_Var>>&);
	static void _static_method_order_common_1(jule::Slice<jule::Ref<_1e177440c_Struct>>&);


	static void _static_method_order_variables(jule::Slice<jule::Ref<_1ba80e105_Var>>&);


	static void _static_method_order_structures(jule::Slice<jule::Ref<_1e177440c_Struct>>&);


	bool operator==(const _1e1183e1b_DefineOrderer &_Src) const { return true; }

	bool operator!=(const _1e1183e1b_DefineOrderer &_Src) const { return !this->operator==(_Src); }
};


struct _1e1037b7c_ScopeDeadCode {
	jule::Ref<_1e1037b7c_ScopeDeadCode> self{};

	jule::Ref<_1e1037b7c_ScopeDeadCode> _field_parent{jule::Ref<_1e1037b7c_ScopeDeadCode>()};
	jule::Ref<_1e2a2e210_Scope> _field_s{jule::Ref<_1e2a2e210_Scope>()};
	jule::Slice<jule::Any>* _field_stmts{nullptr};
	jule::Int _field_i{jule::Int()};


	_1e1037b7c_ScopeDeadCode(jule::Ref<_1e1037b7c_ScopeDeadCode> __param_parent, jule::Ref<_1e2a2e210_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::Int __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {
		this->self = jule::Ref<_1e1037b7c_ScopeDeadCode>::make(this, nullptr);

	}

	~_1e1037b7c_ScopeDeadCode(void) { this->self.ref = nullptr; }

	_1e1037b7c_ScopeDeadCode(void) { this->self = jule::Ref<_1e1037b7c_ScopeDeadCode>::make(this, nullptr); }

	void _method_optimize_child(jule::Ref<_1e2a2e210_Scope>&);


	void _method_eliminate_followed(void);


	void _method_optimize_stmt(jule::Any);


	void _method_optimize_stmts(void);


	bool operator==(const _1e1037b7c_ScopeDeadCode &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	bool operator!=(const _1e1037b7c_ScopeDeadCode &_Src) const { return !this->operator==(_Src); }
};


struct _1a48b1542_AbsTime {
	jule::Uint _field_day{jule::Uint()};
	jule::Uint _field_week_day{jule::Uint()};
	jule::Uint _field_year_day{jule::Uint()};
	jule::Uint _field_month{jule::Uint()};
	jule::Uint _field_year{jule::Uint()};
	jule::Uint _field_second{jule::Uint()};
	jule::Uint _field_minute{jule::Uint()};
	jule::Uint _field_hour{jule::Uint()};


	_1a48b1542_AbsTime(jule::Uint __param_day, jule::Uint __param_week_day, jule::Uint __param_year_day, jule::Uint __param_month, jule::Uint __param_year, jule::Uint __param_second, jule::Uint __param_minute, jule::Uint __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_1a48b1542_AbsTime(void) = default;

	jule::U64 _method_unix(void);


	bool operator==(const _1a48b1542_AbsTime &_Src) const {
		return 
			this->_field_day == _Src._field_day &&
			this->_field_week_day == _Src._field_week_day &&
			this->_field_year_day == _Src._field_year_day &&
			this->_field_month == _Src._field_month &&
			this->_field_year == _Src._field_year &&
			this->_field_second == _Src._field_second &&
			this->_field_minute == _Src._field_minute &&
			this->_field_hour == _Src._field_hour;
	}

	bool operator!=(const _1a48b1542_AbsTime &_Src) const { return !this->operator==(_Src); }
};


struct _1a48b1542_Time {
	jule::U64 _field_sec{jule::U64()};


	_1a48b1542_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_1a48b1542_Time(void) = default;

	static _1a48b1542_Time _static_method_unix(jule::U64);


	static _1a48b1542_Time _static_method_now(void);


	jule::U64 _method_unix(void);


	jule::Uint _method_day(void);


	jule::Uint _method_month(void);


	jule::Uint _method_year(void);


	jule::Uint _method_second(void);


	jule::Uint _method_minute(void);


	jule::Uint _method_hour(void);


	_1a48b1542_AbsTime _method_abs(void);


	bool operator==(const _1a48b1542_Time &_Src) const {
		return 
			this->_field_sec == _Src._field_sec;
	}

	bool operator!=(const _1a48b1542_Time &_Src) const { return !this->operator==(_Src); }
};


struct _1a48b1542_Duration {
	

	_1a48b1542_Duration(void) = default;

	static jule::I64 _static_method_nanoseconds(jule::I64);


	static jule::I64 _static_method_microseconds(jule::I64);


	static jule::I64 _static_method_milliseconds(jule::I64);


	static jule::I64 _static_method_seconds(jule::I64);


	static jule::I64 _static_method_minutes(jule::I64);


	static jule::I64 _static_method_hours(jule::I64);


	bool operator==(const _1a48b1542_Duration &_Src) const { return true; }

	bool operator!=(const _1a48b1542_Duration &_Src) const { return !this->operator==(_Src); }
};


struct _1ba8540c3_Flag_0: public _1ba8540c3_CommonFlag {
	jule::Str _field__name{jule::Str()};
	jule::I32 _field__short{jule::I32()};
	jule::Int _field__default{jule::Int()};
	jule::Str _field__what{jule::Str()};
	jule::Ref<jule::Int> _field__data{jule::Ref<jule::Int>()};


	_1ba8540c3_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::Int __param__default, jule::Str __param__what, jule::Ref<jule::Int> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1ba8540c3_Flag_0(void) = default;

	jule::Str _method_name(void);


	jule::Str _method_what(void);


	void _method_reset(void);


	jule::I32 _method_short(void);


	bool operator==(const _1ba8540c3_Flag_0 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	bool operator!=(const _1ba8540c3_Flag_0 &_Src) const { return !this->operator==(_Src); }
};

struct _1ba8540c3_Flag_1: public _1ba8540c3_CommonFlag {
	jule::Str _field__name{jule::Str()};
	jule::I32 _field__short{jule::I32()};
	jule::Uint _field__default{jule::Uint()};
	jule::Str _field__what{jule::Str()};
	jule::Ref<jule::Uint> _field__data{jule::Ref<jule::Uint>()};


	_1ba8540c3_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::Uint __param__default, jule::Str __param__what, jule::Ref<jule::Uint> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1ba8540c3_Flag_1(void) = default;

	jule::Str _method_name(void);


	jule::Str _method_what(void);


	void _method_reset(void);


	jule::I32 _method_short(void);


	bool operator==(const _1ba8540c3_Flag_1 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	bool operator!=(const _1ba8540c3_Flag_1 &_Src) const { return !this->operator==(_Src); }
};

struct _1ba8540c3_Flag_2: public _1ba8540c3_CommonFlag {
	jule::Str _field__name{jule::Str()};
	jule::I32 _field__short{jule::I32()};
	jule::F64 _field__default{jule::F64()};
	jule::Str _field__what{jule::Str()};
	jule::Ref<jule::F64> _field__data{jule::Ref<jule::F64>()};


	_1ba8540c3_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ref<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1ba8540c3_Flag_2(void) = default;

	jule::Str _method_name(void);


	jule::Str _method_what(void);


	void _method_reset(void);


	jule::I32 _method_short(void);


	bool operator==(const _1ba8540c3_Flag_2 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	bool operator!=(const _1ba8540c3_Flag_2 &_Src) const { return !this->operator==(_Src); }
};

struct _1ba8540c3_Flag_3: public _1ba8540c3_CommonFlag {
	jule::Str _field__name{jule::Str()};
	jule::I32 _field__short{jule::I32()};
	jule::Bool _field__default{jule::Bool()};
	jule::Str _field__what{jule::Str()};
	jule::Ref<jule::Bool> _field__data{jule::Ref<jule::Bool>()};


	_1ba8540c3_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ref<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1ba8540c3_Flag_3(void) = default;

	jule::Str _method_name(void);


	jule::Str _method_what(void);


	void _method_reset(void);


	jule::I32 _method_short(void);


	bool operator==(const _1ba8540c3_Flag_3 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	bool operator!=(const _1ba8540c3_Flag_3 &_Src) const { return !this->operator==(_Src); }
};

struct _1ba8540c3_Flag_4: public _1ba8540c3_CommonFlag {
	jule::Str _field__name{jule::Str()};
	jule::I32 _field__short{jule::I32()};
	jule::Str _field__default{jule::Str()};
	jule::Str _field__what{jule::Str()};
	jule::Ref<jule::Str> _field__data{jule::Ref<jule::Str>()};


	_1ba8540c3_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ref<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1ba8540c3_Flag_4(void) = default;

	jule::Str _method_name(void);


	jule::Str _method_what(void);


	void _method_reset(void);


	jule::I32 _method_short(void);


	bool operator==(const _1ba8540c3_Flag_4 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	bool operator!=(const _1ba8540c3_Flag_4 &_Src) const { return !this->operator==(_Src); }
};


struct _1ba8540c3_FlagSet {
	jule::Slice<jule::Trait<_1ba8540c3_CommonFlag>> _field__flags{jule::Slice<jule::Trait<_1ba8540c3_CommonFlag>>()};
	jule::Slice<jule::Str> _field__errors{jule::Slice<jule::Str>()};


	_1ba8540c3_FlagSet(jule::Slice<jule::Trait<_1ba8540c3_CommonFlag>> __param__flags, jule::Slice<jule::Str> __param__errors): _field__flags(__param__flags), _field__errors(__param__errors) {}

	

	_1ba8540c3_FlagSet(void) = default;

	static jule::Ref<_1ba8540c3_FlagSet> _static_method_new(void);


	jule::Trait<_1ba8540c3_CommonFlag> _method_find_flag(jule::Str);


	jule::Trait<_1ba8540c3_CommonFlag> _method_find_flag_short(jule::I32);


	jule::Slice<jule::Trait<_1ba8540c3_CommonFlag>> _method_flags(void);


	std::tuple<jule::Slice<jule::Str>,jule::Str> _method_parse(jule::Slice<jule::Str>);


	void _method_reset(void);


	jule::Ref<_1ba8540c3_Flag_3> _method_add_flag_common_0(jule::Str,jule::I32,jule::Str);
	jule::Ref<_1ba8540c3_Flag_4> _method_add_flag_common_1(jule::Str,jule::I32,jule::Str);




	void _method_add_var_0(jule::Ref<jule::Bool>&,jule::Str,jule::I32,jule::Str);
	void _method_add_var_1(jule::Ref<jule::Str>&,jule::Str,jule::I32,jule::Str);


	bool operator==(const _1ba8540c3_FlagSet &_Src) const {
		return 
			this->_field__flags == _Src._field__flags &&
			this->_field__errors == _Src._field__errors;
	}

	bool operator!=(const _1ba8540c3_FlagSet &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_LitExpr {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_value{jule::Str()};


	_1e16025cb_LitExpr(_1e15a2bb9_Token __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_1e16025cb_LitExpr(void) = default;

	jule::Bool _method_is_nil(void);


	bool operator==(const _1e16025cb_LitExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	bool operator!=(const _1e16025cb_LitExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_UnsafeExpr {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Any _field_expr{jule::Any()};


	_1e16025cb_UnsafeExpr(_1e15a2bb9_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1e16025cb_UnsafeExpr(void) = default;

	bool operator==(const _1e16025cb_UnsafeExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e16025cb_UnsafeExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_IdentExpr {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};


	_1e16025cb_IdentExpr(_1e15a2bb9_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_1e16025cb_IdentExpr(void) = default;

	jule::Bool _method_is_self(void);


	bool operator==(const _1e16025cb_IdentExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	bool operator!=(const _1e16025cb_IdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_UnaryExpr {
	_1e15a2bb9_Token _field_op{_1e15a2bb9_Token()};
	jule::Any _field_expr{jule::Any()};


	_1e16025cb_UnaryExpr(_1e15a2bb9_Token __param_op, jule::Any __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_1e16025cb_UnaryExpr(void) = default;

	bool operator==(const _1e16025cb_UnaryExpr &_Src) const {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e16025cb_UnaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_VariadicExpr {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Any _field_expr{jule::Any()};


	_1e16025cb_VariadicExpr(_1e15a2bb9_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1e16025cb_VariadicExpr(void) = default;

	bool operator==(const _1e16025cb_VariadicExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e16025cb_VariadicExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_NsSelectionExpr {
	jule::Slice<_1e15a2bb9_Token> _field_ns{jule::Slice<_1e15a2bb9_Token>()};
	_1e15a2bb9_Token _field_ident{_1e15a2bb9_Token()};


	_1e16025cb_NsSelectionExpr(jule::Slice<_1e15a2bb9_Token> __param_ns, _1e15a2bb9_Token __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_1e16025cb_NsSelectionExpr(void) = default;

	bool operator==(const _1e16025cb_NsSelectionExpr &_Src) const {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _1e16025cb_NsSelectionExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_SubIdentExpr {
	jule::Bool _field_is_self{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	_1e15a2bb9_Token _field_ident{_1e15a2bb9_Token()};


	_1e16025cb_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _1e15a2bb9_Token __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1e16025cb_SubIdentExpr(void) = default;

	bool operator==(const _1e16025cb_SubIdentExpr &_Src) const {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _1e16025cb_SubIdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_BinopExpr {
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	_1e15a2bb9_Token _field_op{_1e15a2bb9_Token()};


	_1e16025cb_BinopExpr(jule::Any __param_left, jule::Any __param_right, _1e15a2bb9_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1e16025cb_BinopExpr(void) = default;

	bool operator==(const _1e16025cb_BinopExpr &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	bool operator!=(const _1e16025cb_BinopExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_FieldExprPair {
	_1e15a2bb9_Token _field_field{_1e15a2bb9_Token()};
	jule::Any _field_expr{jule::Any()};


	_1e16025cb_FieldExprPair(_1e15a2bb9_Token __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1e16025cb_FieldExprPair(void) = default;

	jule::Bool _method_is_targeted(void);


	bool operator==(const _1e16025cb_FieldExprPair &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e16025cb_FieldExprPair &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_BraceLit {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1e16025cb_BraceLit(_1e15a2bb9_Token __param_token, jule::Slice<jule::Any> __param_exprs): _field_token(__param_token), _field_exprs(__param_exprs) {}

	

	_1e16025cb_BraceLit(void) = default;

	jule::Bool _method_is_empty(void);


	bool operator==(const _1e16025cb_BraceLit &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	bool operator!=(const _1e16025cb_BraceLit &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_KeyValPair {
	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};
	_1e15a2bb9_Token _field_colon{_1e15a2bb9_Token()};


	_1e16025cb_KeyValPair(jule::Any __param_key, jule::Any __param_val, _1e15a2bb9_Token __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_1e16025cb_KeyValPair(void) = default;

	bool operator==(const _1e16025cb_KeyValPair &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	bool operator!=(const _1e16025cb_KeyValPair &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_SliceExpr {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1e16025cb_SliceExpr(_1e15a2bb9_Token __param_token, jule::Slice<jule::Any> __param_elems): _field_token(__param_token), _field_elems(__param_elems) {}

	

	_1e16025cb_SliceExpr(void) = default;

	jule::Bool _method_is_empty(void);


	bool operator==(const _1e16025cb_SliceExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	bool operator!=(const _1e16025cb_SliceExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_IndexingExpr {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_1e16025cb_IndexingExpr(_1e15a2bb9_Token __param_token, jule::Any __param_expr, jule::Any __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1e16025cb_IndexingExpr(void) = default;

	bool operator==(const _1e16025cb_IndexingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	bool operator!=(const _1e16025cb_IndexingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_SlicingExpr {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_start{jule::Any()};
	jule::Any _field_to{jule::Any()};


	_1e16025cb_SlicingExpr(_1e15a2bb9_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to): _field_token(__param_token), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_1e16025cb_SlicingExpr(void) = default;

	bool operator==(const _1e16025cb_SlicingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	bool operator!=(const _1e16025cb_SlicingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1a2c73c9c_DynamicTypeAnnotation {
	jule::Ref<_1a2c74a6c_Eval> _field_e{jule::Ref<_1a2c74a6c_Eval>()};
	jule::Ref<_1e1737e81_FnIns> _field_f{jule::Ref<_1e1737e81_FnIns>()};
	jule::Ref<_1e1737e81_ParamIns> _field_p{jule::Ref<_1e1737e81_ParamIns>()};
	jule::Ref<_1a2c74a6c_Data> _field_a{jule::Ref<_1a2c74a6c_Data>()};
	_1e15a2bb9_Token _field_error_token{_1e15a2bb9_Token()};
	_1a2db8ce3_TypeKind** _field_k{nullptr};


	_1a2c73c9c_DynamicTypeAnnotation(jule::Ref<_1a2c74a6c_Eval> __param_e, jule::Ref<_1e1737e81_FnIns> __param_f, jule::Ref<_1e1737e81_ParamIns> __param_p, jule::Ref<_1a2c74a6c_Data> __param_a, _1e15a2bb9_Token __param_error_token, _1a2db8ce3_TypeKind** __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_1a2c73c9c_DynamicTypeAnnotation(void) = default;

	void _method_push_generic(jule::Ref<_1a2db8ce3_TypeKind>&,jule::Int);


	jule::Bool _method_annotate_prim(jule::Ref<_1a2db8ce3_TypeKind>&);


	jule::Bool _method_annotate_slc(jule::Ref<_1a2db8ce3_TypeKind>&);


	jule::Bool _method_check_map_key(_1a2db8ce3_TypeKind**,jule::Ref<_1a2db8ce3_TypeKind>&);


	jule::Bool _method_annotate_map(jule::Ref<_1a2db8ce3_TypeKind>&);


	jule::Bool _method_annotate_fn(jule::Ref<_1a2db8ce3_TypeKind>&);


	jule::Bool _method_annotate_ptr(jule::Ref<_1a2db8ce3_TypeKind>&);


	jule::Bool _method_annotate_ref(jule::Ref<_1a2db8ce3_TypeKind>&);


	jule::Bool _method_annotate_any(jule::Ref<_1a2db8ce3_TypeKind>&);


	jule::Bool _method_annotate_kind(jule::Ref<_1a2db8ce3_TypeKind>&);


	jule::Bool _method_annotate(void);


	bool operator==(const _1a2c73c9c_DynamicTypeAnnotation &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	bool operator!=(const _1a2c73c9c_DynamicTypeAnnotation &_Src) const { return !this->operator==(_Src); }
};


struct _1a2c73c9c_StructLitChecker {
	jule::Ref<_1a2c74a6c_Eval> _field_e{jule::Ref<_1a2c74a6c_Eval>()};
	_1e15a2bb9_Token _field_error_token{_1e15a2bb9_Token()};
	jule::Ref<_1e177440c_StructIns> _field_s{jule::Ref<_1e177440c_StructIns>()};
	jule::Slice<jule::Ref<_1e2a30c17_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_1e2a30c17_StructArgExprModel>>()};


	_1a2c73c9c_StructLitChecker(jule::Ref<_1a2c74a6c_Eval> __param_e, _1e15a2bb9_Token __param_error_token, jule::Ref<_1e177440c_StructIns> __param_s, jule::Slice<jule::Ref<_1e2a30c17_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_1a2c73c9c_StructLitChecker(void) = default;

	void _method_push_err(_1e15a2bb9_Token,jule::Str,jule::Slice<jule::Any>);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	void _method_push_match(jule::Ref<_1e177440c_FieldIns>&,jule::Ref<_1a2c74a6c_Data>&,_1e15a2bb9_Token&);


	void _method_check_pair(jule::Ref<_1e16025cb_FieldExprPair>&,jule::Slice<jule::Any>&);


	jule::Bool _method_ready_exprs(jule::Slice<jule::Any>&);


	void _method_check(jule::Slice<jule::Any>&);


	bool operator==(const _1a2c73c9c_StructLitChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	bool operator!=(const _1a2c73c9c_StructLitChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_TernaryExpr {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Any _field_condition{jule::Any()};
	jule::Any _field_true_expr{jule::Any()};
	jule::Any _field_false_expr{jule::Any()};


	_1e16025cb_TernaryExpr(_1e15a2bb9_Token __param_token, jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_token(__param_token), _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_1e16025cb_TernaryExpr(void) = default;

	bool operator==(const _1e16025cb_TernaryExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	bool operator!=(const _1e16025cb_TernaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_LabelSt {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};


	_1e16025cb_LabelSt(_1e15a2bb9_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1e16025cb_LabelSt(void) = default;

	bool operator==(const _1e16025cb_LabelSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _1e16025cb_LabelSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_FallSt {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};


	_1e16025cb_FallSt(_1e15a2bb9_Token __param_token): _field_token(__param_token) {}

	

	_1e16025cb_FallSt(void) = default;

	bool operator==(const _1e16025cb_FallSt &_Src) const {
		return 
			this->_field_token == _Src._field_token;
	}

	bool operator!=(const _1e16025cb_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_AssignSt {
	jule::Bool _field_declarative{jule::Bool()};
	_1e15a2bb9_Token _field_setter{_1e15a2bb9_Token()};
	jule::Slice<jule::Ref<_1e16025cb_AssignLeft>> _field_left{jule::Slice<jule::Ref<_1e16025cb_AssignLeft>>()};
	jule::Ref<_1e16025cb_Expr> _field_right{jule::Ref<_1e16025cb_Expr>()};


	_1e16025cb_AssignSt(jule::Bool __param_declarative, _1e15a2bb9_Token __param_setter, jule::Slice<jule::Ref<_1e16025cb_AssignLeft>> __param_left, jule::Ref<_1e16025cb_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_1e16025cb_AssignSt(void) = default;

	bool operator==(const _1e16025cb_AssignSt &_Src) const {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	bool operator!=(const _1e16025cb_AssignSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_RetSt {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Ref<_1e16025cb_Expr> _field_expr{jule::Ref<_1e16025cb_Expr>()};


	_1e16025cb_RetSt(_1e15a2bb9_Token __param_token, jule::Ref<_1e16025cb_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1e16025cb_RetSt(void) = default;

	bool operator==(const _1e16025cb_RetSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e16025cb_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_Iter {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Any _field_kind{jule::Any()};
	jule::Ref<_1e16025cb_ScopeTree> _field_scope{jule::Ref<_1e16025cb_ScopeTree>()};


	_1e16025cb_Iter(_1e15a2bb9_Token __param_token, jule::Any __param_kind, jule::Ref<_1e16025cb_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_1e16025cb_Iter(void) = default;

	jule::Bool _method_is_inf(void);


	bool operator==(const _1e16025cb_Iter &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _1e16025cb_Iter &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_WhileKind {
	jule::Ref<_1e16025cb_Expr> _field_expr{jule::Ref<_1e16025cb_Expr>()};
	jule::Any _field_next{jule::Any()};
	_1e15a2bb9_Token _field_next_token{_1e15a2bb9_Token()};


	_1e16025cb_WhileKind(jule::Ref<_1e16025cb_Expr> __param_expr, jule::Any __param_next, _1e15a2bb9_Token __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_1e16025cb_WhileKind(void) = default;

	jule::Bool _method_is_while_next(void);


	bool operator==(const _1e16025cb_WhileKind &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	bool operator!=(const _1e16025cb_WhileKind &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_RangeKind {
	_1e15a2bb9_Token _field_in_token{_1e15a2bb9_Token()};
	jule::Ref<_1e16025cb_Expr> _field_expr{jule::Ref<_1e16025cb_Expr>()};
	jule::Ref<_1e16025cb_VarDecl> _field_key_a{jule::Ref<_1e16025cb_VarDecl>()};
	jule::Ref<_1e16025cb_VarDecl> _field_key_b{jule::Ref<_1e16025cb_VarDecl>()};


	_1e16025cb_RangeKind(_1e15a2bb9_Token __param_in_token, jule::Ref<_1e16025cb_Expr> __param_expr, jule::Ref<_1e16025cb_VarDecl> __param_key_a, jule::Ref<_1e16025cb_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1e16025cb_RangeKind(void) = default;

	bool operator==(const _1e16025cb_RangeKind &_Src) const {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	bool operator!=(const _1e16025cb_RangeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_MatchCase {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Ref<_1e16025cb_Expr> _field_expr{jule::Ref<_1e16025cb_Expr>()};
	jule::Slice<jule::Ref<_1e16025cb_Case>> _field_cases{jule::Slice<jule::Ref<_1e16025cb_Case>>()};
	jule::Ref<_1e16025cb_Else> _field_default{jule::Ref<_1e16025cb_Else>()};


	_1e16025cb_MatchCase(_1e15a2bb9_Token __param_token, jule::Bool __param_type_match, jule::Ref<_1e16025cb_Expr> __param_expr, jule::Slice<jule::Ref<_1e16025cb_Case>> __param_cases, jule::Ref<_1e16025cb_Else> __param_default): _field_token(__param_token), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1e16025cb_MatchCase(void) = default;

	bool operator==(const _1e16025cb_MatchCase &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	bool operator!=(const _1e16025cb_MatchCase &_Src) const { return !this->operator==(_Src); }
};


struct _1a2c73c9c_AssignTypeChecker {
	jule::Ref<_1e2a7c2a2_Sema> _field_s{jule::Ref<_1e2a7c2a2_Sema>()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_dest{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Ref<_1a2c74a6c_Data> _field_d{jule::Ref<_1a2c74a6c_Data>()};
	_1e15a2bb9_Token _field_error_token{_1e15a2bb9_Token()};
	jule::Bool _field_deref{jule::Bool()};


	_1a2c73c9c_AssignTypeChecker(jule::Ref<_1e2a7c2a2_Sema> __param_s, jule::Ref<_1a2db8ce3_TypeKind> __param_dest, jule::Ref<_1a2c74a6c_Data> __param_d, _1e15a2bb9_Token __param_error_token, jule::Bool __param_deref): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token), _field_deref(__param_deref) {}

	

	_1a2c73c9c_AssignTypeChecker(void) = default;

	void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	jule::Bool _method_check_validity(void);


	jule::Bool _method_check_const(void);


	jule::Bool _method_check(void);


	bool operator==(const _1a2c73c9c_AssignTypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref;
	}

	bool operator!=(const _1a2c73c9c_AssignTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1a2c73c9c_FnCallArgChecker {
	jule::Ref<_1a2c74a6c_Eval> _field_e{jule::Ref<_1a2c74a6c_Eval>()};
	jule::Slice<jule::Ref<_1e16025cb_Expr>> _field_args{jule::Slice<jule::Ref<_1e16025cb_Expr>>()};
	_1e15a2bb9_Token _field_error_token{_1e15a2bb9_Token()};
	jule::Ref<_1e1737e81_FnIns> _field_f{jule::Ref<_1e1737e81_FnIns>()};
	jule::Bool _field_dynamic_annotation{jule::Bool()};
	jule::Slice<jule::Any> _field_arg_models{jule::Slice<jule::Any>()};


	_1a2c73c9c_FnCallArgChecker(jule::Ref<_1a2c74a6c_Eval> __param_e, jule::Slice<jule::Ref<_1e16025cb_Expr>> __param_args, _1e15a2bb9_Token __param_error_token, jule::Ref<_1e1737e81_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_1a2c73c9c_FnCallArgChecker(void) = default;

	void _method_push_err_token(_1e15a2bb9_Token,jule::Str,jule::Slice<jule::Any>);


	void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	jule::Slice<jule::Ref<_1e1737e81_ParamIns>> _method_get_params(void);


	jule::Bool _method_check_counts(jule::Slice<jule::Ref<_1e1737e81_ParamIns>>&);


	jule::Bool _method_check_arg(jule::Ref<_1e1737e81_ParamIns>&,jule::Ref<_1a2c74a6c_Data>&,_1e15a2bb9_Token&);


	jule::Bool _method_push(jule::Ref<_1e1737e81_ParamIns>&,jule::Ref<_1e16025cb_Expr>);


	jule::Bool _method_push_variadic(jule::Ref<_1e1737e81_ParamIns>&,jule::Int);


	jule::Bool _method_check_args(jule::Slice<jule::Ref<_1e1737e81_ParamIns>>&);


	jule::Bool _method_check_dynamic_type_annotation(void);


	jule::Bool _method_check(void);


	bool operator==(const _1a2c73c9c_FnCallArgChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	bool operator!=(const _1a2c73c9c_FnCallArgChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1a2c73c9c_RetTypeChecker {
	jule::Ref<_1e2a2e210_ScopeChecker> _field_sc{jule::Ref<_1e2a2e210_ScopeChecker>()};
	jule::Ref<_1e1737e81_FnIns> _field_f{jule::Ref<_1e1737e81_FnIns>()};
	jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>> _field_types{jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>()};
	jule::Slice<jule::Ref<_1e16025cb_Expr>> _field_exprs{jule::Slice<jule::Ref<_1e16025cb_Expr>>()};
	jule::Slice<jule::Ref<_1ba80e105_Var>> _field_vars{jule::Slice<jule::Ref<_1ba80e105_Var>>()};
	_1e15a2bb9_Token _field_error_token{_1e15a2bb9_Token()};
	jule::Any _field_model{jule::Any()};


	_1a2c73c9c_RetTypeChecker(jule::Ref<_1e2a2e210_ScopeChecker> __param_sc, jule::Ref<_1e1737e81_FnIns> __param_f, jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>> __param_types, jule::Slice<jule::Ref<_1e16025cb_Expr>> __param_exprs, jule::Slice<jule::Ref<_1ba80e105_Var>> __param_vars, _1e15a2bb9_Token __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_1a2c73c9c_RetTypeChecker(void) = default;

	void _method_prepare_types(void);


	void _method_prepare_exprs(jule::Ref<_1e16025cb_Expr>&);


	void _method_ret_vars(void);


	void _method_check_exprs(void);


	jule::Bool _method_check(jule::Ref<_1e16025cb_Expr>&);


	bool operator==(const _1a2c73c9c_RetTypeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	bool operator!=(const _1a2c73c9c_RetTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_GenericDecl {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};


	_1e16025cb_GenericDecl(_1e15a2bb9_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1e16025cb_GenericDecl(void) = default;

	bool operator==(const _1e16025cb_GenericDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _1e16025cb_GenericDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_GotoSt {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	_1e15a2bb9_Token _field_label{_1e15a2bb9_Token()};


	_1e16025cb_GotoSt(_1e15a2bb9_Token __param_token, _1e15a2bb9_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1e16025cb_GotoSt(void) = default;

	bool operator==(const _1e16025cb_GotoSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	bool operator!=(const _1e16025cb_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1a2c74a6c_BinopSolver {
	jule::Ref<_1a2c74a6c_Eval> _field_e{jule::Ref<_1a2c74a6c_Eval>()};
	jule::Ref<_1a2c74a6c_Data> _field_l{jule::Ref<_1a2c74a6c_Data>()};
	jule::Ref<_1a2c74a6c_Data> _field_r{jule::Ref<_1a2c74a6c_Data>()};
	_1e15a2bb9_Token _field_op{_1e15a2bb9_Token()};


	_1a2c74a6c_BinopSolver(jule::Ref<_1a2c74a6c_Eval> __param_e, jule::Ref<_1a2c74a6c_Data> __param_l, jule::Ref<_1a2c74a6c_Data> __param_r, _1e15a2bb9_Token __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1a2c74a6c_BinopSolver(void) = default;

	jule::Bool _method_check_type_compatibility(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_nil(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_enum(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_ptr(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_arr(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_slc(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_fn(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_struct(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_trait(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_any(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_bool(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_str(void);


	void _method_set_type_to_greater(void);


	void _method_check_mod_data(jule::Ref<_1a2c74a6c_Data>);


	void _method_mod(void);


	jule::Bool _method_numbers_are_compatibile(jule::Str&,jule::Str&);


	jule::Ref<_1a2c74a6c_Data> _method_eval_float(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_unsig_int(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_sig_int(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval_prim(void);


	jule::Ref<_1a2c74a6c_Data> _method_eval(void);


	void _method_solve_const(jule::Ref<_1a2c74a6c_Data>);


	void _method_post_const(jule::Ref<_1a2c74a6c_Data>);


	void _method_prepare_data(jule::Ref<_1a2c74a6c_Data>);


	void _method_prepare_eval(void);


	void _method_check_data(jule::Ref<_1a2c74a6c_Data>);


	void _method_check_datas(void);


	jule::Ref<_1a2c74a6c_Data> _method_solve_explicit(jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>);


	jule::Ref<_1a2c74a6c_Data> _method_solve(jule::Ref<_1e16025cb_BinopExpr>);


	bool operator==(const _1a2c74a6c_BinopSolver &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	bool operator!=(const _1a2c74a6c_BinopSolver &_Src) const { return !this->operator==(_Src); }
};


struct _1a2db8ce3_TypeAlias {
	jule::Ref<_1e16025cb_ScopeTree> _field_scope{jule::Ref<_1e16025cb_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_generic{jule::Bool()};
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1a2db8ce3_TypeSymbol> _field_kind{jule::Ref<_1a2db8ce3_TypeSymbol>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Any> _field_refers{jule::Slice<jule::Any>()};


	_1a2db8ce3_TypeAlias(jule::Ref<_1e16025cb_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, _1e15a2bb9_Token __param_token, jule::Str __param_ident, jule::Ref<_1a2db8ce3_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc(__param_doc), _field_refers(__param_refers) {}

	

	_1a2db8ce3_TypeAlias(void) = default;

	bool operator==(const _1a2db8ce3_TypeAlias &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_generic == _Src._field_generic &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	bool operator!=(const _1a2db8ce3_TypeAlias &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_AssignLeft {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1e16025cb_Expr> _field_expr{jule::Ref<_1e16025cb_Expr>()};


	_1e16025cb_AssignLeft(_1e15a2bb9_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ref<_1e16025cb_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1e16025cb_AssignLeft(void) = default;

	bool operator==(const _1e16025cb_AssignLeft &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e16025cb_AssignLeft &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_Comment {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_text{jule::Str()};


	_1e16025cb_Comment(_1e15a2bb9_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1e16025cb_Comment(void) = default;

	jule::Bool _method_is_directive(void);


	bool operator==(const _1e16025cb_Comment &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	bool operator!=(const _1e16025cb_Comment &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_ParamDecl {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1e16025cb_TypeDecl> _field_kind{jule::Ref<_1e16025cb_TypeDecl>()};
	jule::Str _field_ident{jule::Str()};


	_1e16025cb_ParamDecl(_1e15a2bb9_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1e16025cb_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1e16025cb_ParamDecl(void) = default;

	jule::Bool _method_is_self(void);


	jule::Bool _method_is_ref(void);


	bool operator==(const _1e16025cb_ParamDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _1e16025cb_ParamDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_FnDecl {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1e16025cb_Directive>> _field_directives{jule::Slice<jule::Ref<_1e16025cb_Directive>>()};
	jule::Ref<_1e16025cb_CommentGroup> _field_doc_comments{jule::Ref<_1e16025cb_CommentGroup>()};
	jule::Ref<_1e16025cb_ScopeTree> _field_scope{jule::Ref<_1e16025cb_ScopeTree>()};
	jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>()};
	jule::Ref<_1e16025cb_RetTypeDecl> _field_result{jule::Ref<_1e16025cb_RetTypeDecl>()};
	jule::Slice<jule::Ref<_1e16025cb_ParamDecl>> _field_params{jule::Slice<jule::Ref<_1e16025cb_ParamDecl>>()};


	_1e16025cb_FnDecl(_1e15a2bb9_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1e16025cb_Directive>> __param_directives, jule::Ref<_1e16025cb_CommentGroup> __param_doc_comments, jule::Ref<_1e16025cb_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> __param_generics, jule::Ref<_1e16025cb_RetTypeDecl> __param_result, jule::Slice<jule::Ref<_1e16025cb_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_1e16025cb_FnDecl(void) = default;

	jule::Bool _method_is_anon(void);


	bool operator==(const _1e16025cb_FnDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	bool operator!=(const _1e16025cb_FnDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_VarDecl {
	jule::Ref<_1e16025cb_ScopeTree> _field_scope{jule::Ref<_1e16025cb_ScopeTree>()};
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Slice<jule::Ref<_1e16025cb_Directive>> _field_directives{jule::Slice<jule::Ref<_1e16025cb_Directive>>()};
	jule::Ref<_1e16025cb_CommentGroup> _field_doc_comments{jule::Ref<_1e16025cb_CommentGroup>()};
	jule::Ref<_1e16025cb_TypeDecl> _field_kind{jule::Ref<_1e16025cb_TypeDecl>()};
	jule::Ref<_1e16025cb_Expr> _field_expr{jule::Ref<_1e16025cb_Expr>()};


	_1e16025cb_VarDecl(jule::Ref<_1e16025cb_ScopeTree> __param_scope, _1e15a2bb9_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ref<_1e16025cb_Directive>> __param_directives, jule::Ref<_1e16025cb_CommentGroup> __param_doc_comments, jule::Ref<_1e16025cb_TypeDecl> __param_kind, jule::Ref<_1e16025cb_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1e16025cb_VarDecl(void) = default;

	bool operator==(const _1e16025cb_VarDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e16025cb_VarDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1a2db8ce3_TypeChecker {
	jule::Ref<_1e2a7c2a2_Sema> _field_s{jule::Ref<_1e2a7c2a2_Sema>()};
	jule::Trait<_1a35968cc_Lookup> _field_lookup{jule::Trait<_1a35968cc_Lookup>()};
	jule::Ref<_1a2db8ce3_Referencer> _field_referencer{jule::Ref<_1a2db8ce3_Referencer>()};
	_1e15a2bb9_Token _field_error_token{_1e15a2bb9_Token()};
	jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> _field_ignore_generics{jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>()};
	jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>> _field_use_generics{jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>()};
	jule::Bool _field_not_plain{jule::Bool()};


	_1a2db8ce3_TypeChecker(jule::Ref<_1e2a7c2a2_Sema> __param_s, jule::Trait<_1a35968cc_Lookup> __param_lookup, jule::Ref<_1a2db8ce3_Referencer> __param_referencer, _1e15a2bb9_Token __param_error_token, jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain) {}

	

	_1a2db8ce3_TypeChecker(void) = default;

	void _method_push_err(_1e15a2bb9_Token,jule::Str,jule::Slice<jule::Any>);


	jule::Ref<_1a2db8ce3_Prim> _method_build_prim(jule::Ref<_1e16025cb_IdentTypeDecl>&);


	void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	jule::Bool _method_are_equals_cross_cycle_data_0(jule::Any,jule::Any);
	jule::Bool _method_are_equals_cross_cycle_data_1(jule::Any,jule::Any);


	jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	jule::Bool _method_check_illegal_cycles(jule::Ref<_1e16025cb_IdentTypeDecl>&,jule::Any);


	jule::Trait<_1a2db8ce3_Kind> _method_from_type_alias(jule::Ref<_1e16025cb_IdentTypeDecl>&,jule::Ref<_1a2db8ce3_TypeAlias>&);


	jule::Ref<_1e2a21d4b_Enum> _method_from_enum(jule::Ref<_1e16025cb_IdentTypeDecl>&,jule::Ref<_1e2a21d4b_Enum>&);


	jule::Bool _method_check_struct_ins(jule::Ref<_1e177440c_StructIns>&,_1e15a2bb9_Token&);


	void _method_append_used_struct_reference(jule::Ref<_1e177440c_Struct>&);


	jule::Ref<_1e177440c_StructIns> _method_from_struct(jule::Ref<_1e16025cb_IdentTypeDecl>&,jule::Ref<_1e177440c_Struct>&);


	jule::Trait<_1a2db8ce3_Kind> _method_get_def(jule::Ref<_1e16025cb_IdentTypeDecl>&);


	jule::Trait<_1a2db8ce3_Kind> _method_build_ident(jule::Ref<_1e16025cb_IdentTypeDecl>);


	jule::Ref<_1a2db8ce3_Ref> _method_build_ref_from_type(jule::Ref<_1a2db8ce3_TypeKind>&);


	jule::Ref<_1a2db8ce3_Ref> _method_build_ref(jule::Ref<_1e16025cb_RefTypeDecl>);


	jule::Ref<_1a2db8ce3_Ptr> _method_build_ptr_from_type(jule::Ref<_1a2db8ce3_TypeKind>&);


	jule::Ref<_1a2db8ce3_Ptr> _method_build_ptr(jule::Ref<_1e16025cb_PtrTypeDecl>);


	jule::Ref<_1a2db8ce3_Slc> _method_build_slc(jule::Ref<_1e16025cb_SlcTypeDecl>);


	jule::Ref<_1a2db8ce3_Arr> _method_build_arr(jule::Ref<_1e16025cb_ArrTypeDecl>);


	jule::Ref<_1a2db8ce3_Map> _method_build_map(jule::Ref<_1e16025cb_MapTypeDecl>);


	jule::Ref<_1a2db8ce3_Tuple> _method_build_tuple(jule::Ref<_1e16025cb_TupleTypeDecl>);


	jule::Bool _method_check_fn_types(jule::Ref<_1e1737e81_FnIns>&);


	jule::Ref<_1e1737e81_FnIns> _method_build_fn(jule::Ref<_1e16025cb_FnDecl>);


	jule::Trait<_1a2db8ce3_Kind> _method_build_by_namespace(jule::Ref<_1e16025cb_NamespaceTypeDecl>);


	jule::Ref<_1a2db8ce3_TypeKind> _method_build(jule::Any&);


	jule::Ref<_1a2db8ce3_TypeKind> _method_check_decl(jule::Ref<_1e16025cb_TypeDecl>&);


	void _method_check(jule::Ref<_1a2db8ce3_TypeSymbol>&);


	bool operator==(const _1a2db8ce3_TypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	bool operator!=(const _1a2db8ce3_TypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_BreakSt {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	_1e15a2bb9_Token _field_label{_1e15a2bb9_Token()};


	_1e16025cb_BreakSt(_1e15a2bb9_Token __param_token, _1e15a2bb9_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1e16025cb_BreakSt(void) = default;

	bool operator==(const _1e16025cb_BreakSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	bool operator!=(const _1e16025cb_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e10d0a8d_IR {
	jule::Slice<jule::Str> _field_passes{jule::Slice<jule::Str>()};
	jule::Ref<_1e2a7b966_Package> _field_main{jule::Ref<_1e2a7b966_Package>()};
	jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>> _field_used{jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>>()};
	_1e1183e1b_OrderedDefines _field_ordered{_1e1183e1b_OrderedDefines()};


	_1e10d0a8d_IR(jule::Slice<jule::Str> __param_passes, jule::Ref<_1e2a7b966_Package> __param_main, jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>> __param_used, _1e1183e1b_OrderedDefines __param_ordered): _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_1e10d0a8d_IR(void) = default;

	static std::tuple<jule::Ref<_1e10d0a8d_IR>,jule::Slice<_1ec8e8025_Log>> _static_method_build(jule::Str,jule::Int);


	void _method_append_structs(jule::Ref<_1e2a7b966_Package>&,jule::Slice<jule::Ref<_1e177440c_Struct>>&);


	jule::Slice<jule::Ref<_1e177440c_Struct>> _method_get_all_structures(void);


	void _method_append_vars(jule::Ref<_1e2a7b966_Package>&,jule::Slice<jule::Ref<_1ba80e105_Var>>&);


	jule::Slice<jule::Ref<_1ba80e105_Var>> _method_get_all_variables(void);


	void _method_order(void);


	bool operator==(const _1e10d0a8d_IR &_Src) const {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used &&
			this->_field_ordered == _Src._field_ordered;
	}

	bool operator!=(const _1e10d0a8d_IR &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_ContSt {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	_1e15a2bb9_Token _field_label{_1e15a2bb9_Token()};


	_1e16025cb_ContSt(_1e15a2bb9_Token __param_token, _1e15a2bb9_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1e16025cb_ContSt(void) = default;

	bool operator==(const _1e16025cb_ContSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	bool operator!=(const _1e16025cb_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a2e210_ScopeLabel {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Ref<_1e2a2e210_Label> _field_label{jule::Ref<_1e2a2e210_Label>()};
	jule::Int _field_pos{jule::Int()};
	jule::Ref<_1e2a2e210_ScopeChecker> _field_scope{jule::Ref<_1e2a2e210_ScopeChecker>()};
	jule::Bool _field_used{jule::Bool()};


	_1e2a2e210_ScopeLabel(_1e15a2bb9_Token __param_token, jule::Ref<_1e2a2e210_Label> __param_label, jule::Int __param_pos, jule::Ref<_1e2a2e210_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_1e2a2e210_ScopeLabel(void) = default;

	bool operator==(const _1e2a2e210_ScopeLabel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	bool operator!=(const _1e2a2e210_ScopeLabel &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_If {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Ref<_1e16025cb_Expr> _field_expr{jule::Ref<_1e16025cb_Expr>()};
	jule::Ref<_1e16025cb_ScopeTree> _field_scope{jule::Ref<_1e16025cb_ScopeTree>()};


	_1e16025cb_If(_1e15a2bb9_Token __param_token, jule::Ref<_1e16025cb_Expr> __param_expr, jule::Ref<_1e16025cb_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1e16025cb_If(void) = default;

	bool operator==(const _1e16025cb_If &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _1e16025cb_If &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_Else {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Ref<_1e16025cb_ScopeTree> _field_scope{jule::Ref<_1e16025cb_ScopeTree>()};


	_1e16025cb_Else(_1e15a2bb9_Token __param_token, jule::Ref<_1e16025cb_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_1e16025cb_Else(void) = default;

	bool operator==(const _1e16025cb_Else &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _1e16025cb_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_Directive {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_tag{jule::Str()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};


	_1e16025cb_Directive(_1e15a2bb9_Token __param_token, jule::Str __param_tag, jule::Slice<jule::Str> __param_args): _field_token(__param_token), _field_tag(__param_tag), _field_args(__param_args) {}

	

	_1e16025cb_Directive(void) = default;

	bool operator==(const _1e16025cb_Directive &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	bool operator!=(const _1e16025cb_Directive &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_TypeAliasDecl {
	jule::Ref<_1e16025cb_ScopeTree> _field_scope{jule::Ref<_1e16025cb_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1e16025cb_TypeDecl> _field_kind{jule::Ref<_1e16025cb_TypeDecl>()};
	jule::Ref<_1e16025cb_CommentGroup> _field_doc_comments{jule::Ref<_1e16025cb_CommentGroup>()};


	_1e16025cb_TypeAliasDecl(jule::Ref<_1e16025cb_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _1e15a2bb9_Token __param_token, jule::Str __param_ident, jule::Ref<_1e16025cb_TypeDecl> __param_kind, jule::Ref<_1e16025cb_CommentGroup> __param_doc_comments): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc_comments(__param_doc_comments) {}

	

	_1e16025cb_TypeAliasDecl(void) = default;

	bool operator==(const _1e16025cb_TypeAliasDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	bool operator!=(const _1e16025cb_TypeAliasDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_Case {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Ref<_1e16025cb_ScopeTree> _field_scope{jule::Ref<_1e16025cb_ScopeTree>()};
	jule::Slice<jule::Ref<_1e16025cb_Expr>> _field_exprs{jule::Slice<jule::Ref<_1e16025cb_Expr>>()};


	_1e16025cb_Case(_1e15a2bb9_Token __param_token, jule::Ref<_1e16025cb_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1e16025cb_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_1e16025cb_Case(void) = default;

	bool operator==(const _1e16025cb_Case &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	bool operator!=(const _1e16025cb_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1ba8540c3_ArgParser {
	_1ba8540c3_FlagSet _field_set{_1ba8540c3_FlagSet()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};
	jule::Str _field_error{jule::Str()};
	jule::Slice<jule::Str> _field_content{jule::Slice<jule::Str>()};
	jule::Int _field_i{jule::Int()};


	_1ba8540c3_ArgParser(_1ba8540c3_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Str __param_error, jule::Slice<jule::Str> __param_content, jule::Int __param_i): _field_set(__param_set), _field_args(__param_args), _field_error(__param_error), _field_content(__param_content), _field_i(__param_i) {}

	

	_1ba8540c3_ArgParser(void) = default;

	std::tuple<jule::Int,jule::Bool> _method_parse_integer_0(jule::Str&,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)>);
	std::tuple<jule::Uint,jule::Bool> _method_parse_integer_1(jule::Str&,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)>);


	jule::Str _method_get_data(void);


	void _method_process_flag(jule::Trait<_1ba8540c3_CommonFlag>&);


	void _method_single_dash(jule::Str&);


	void _method_double_dash(jule::Str&);


	void _method_try_arg(void);


	void _method_parse(void);


	bool operator==(const _1ba8540c3_ArgParser &_Src) const {
		return 
			this->_field_set == _Src._field_set &&
			this->_field_args == _Src._field_args &&
			this->_field_error == _Src._field_error &&
			this->_field_content == _Src._field_content &&
			this->_field_i == _Src._field_i;
	}

	bool operator!=(const _1ba8540c3_ArgParser &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_UseDecl {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_full{jule::Bool()};
	jule::Slice<_1e15a2bb9_Token> _field_selected{jule::Slice<_1e15a2bb9_Token>()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};


	_1e16025cb_UseDecl(_1e15a2bb9_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_1e15a2bb9_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_1e16025cb_UseDecl(void) = default;

	bool operator==(const _1e16025cb_UseDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_alias == _Src._field_alias &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	bool operator!=(const _1e16025cb_UseDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_EnumItemDecl {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1e16025cb_Expr> _field_expr{jule::Ref<_1e16025cb_Expr>()};


	_1e16025cb_EnumItemDecl(_1e15a2bb9_Token __param_token, jule::Str __param_ident, jule::Ref<_1e16025cb_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1e16025cb_EnumItemDecl(void) = default;

	jule::Bool _method_auto_expr(void);


	bool operator==(const _1e16025cb_EnumItemDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _1e16025cb_EnumItemDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_EnumDecl {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1e16025cb_TypeDecl> _field_kind{jule::Ref<_1e16025cb_TypeDecl>()};
	jule::Slice<jule::Ref<_1e16025cb_EnumItemDecl>> _field_items{jule::Slice<jule::Ref<_1e16025cb_EnumItemDecl>>()};
	jule::Ref<_1e16025cb_CommentGroup> _field_doc_comments{jule::Ref<_1e16025cb_CommentGroup>()};


	_1e16025cb_EnumDecl(_1e15a2bb9_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1e16025cb_TypeDecl> __param_kind, jule::Slice<jule::Ref<_1e16025cb_EnumItemDecl>> __param_items, jule::Ref<_1e16025cb_CommentGroup> __param_doc_comments): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc_comments(__param_doc_comments) {}

	

	_1e16025cb_EnumDecl(void) = default;

	jule::Bool _method_default_typed(void);


	bool operator==(const _1e16025cb_EnumDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	bool operator!=(const _1e16025cb_EnumDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_FieldDecl {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1e16025cb_TypeDecl> _field_kind{jule::Ref<_1e16025cb_TypeDecl>()};


	_1e16025cb_FieldDecl(_1e15a2bb9_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1e16025cb_TypeDecl> __param_kind): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_1e16025cb_FieldDecl(void) = default;

	bool operator==(const _1e16025cb_FieldDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _1e16025cb_FieldDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_StructDecl {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1e16025cb_FieldDecl>> _field_fields{jule::Slice<jule::Ref<_1e16025cb_FieldDecl>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1e16025cb_Directive>> _field_directives{jule::Slice<jule::Ref<_1e16025cb_Directive>>()};
	jule::Ref<_1e16025cb_CommentGroup> _field_doc_comments{jule::Ref<_1e16025cb_CommentGroup>()};
	jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>()};


	_1e16025cb_StructDecl(_1e15a2bb9_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_1e16025cb_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1e16025cb_Directive>> __param_directives, jule::Ref<_1e16025cb_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_generics(__param_generics) {}

	

	_1e16025cb_StructDecl(void) = default;

	bool operator==(const _1e16025cb_StructDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	bool operator!=(const _1e16025cb_StructDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_TraitDecl {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Ref<_1e16025cb_CommentGroup> _field_doc_comments{jule::Ref<_1e16025cb_CommentGroup>()};
	jule::Slice<jule::Ref<_1e16025cb_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1e16025cb_FnDecl>>()};


	_1e16025cb_TraitDecl(_1e15a2bb9_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ref<_1e16025cb_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1e16025cb_FnDecl>> __param_methods): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_doc_comments(__param_doc_comments), _field_methods(__param_methods) {}

	

	_1e16025cb_TraitDecl(void) = default;

	bool operator==(const _1e16025cb_TraitDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	bool operator!=(const _1e16025cb_TraitDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_Impl {
	_1e15a2bb9_Token _field_base{_1e15a2bb9_Token()};
	_1e15a2bb9_Token _field_dest{_1e15a2bb9_Token()};
	jule::Slice<jule::Ref<_1e16025cb_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1e16025cb_FnDecl>>()};
	jule::Slice<jule::Ref<_1e16025cb_VarDecl>> _field_statics{jule::Slice<jule::Ref<_1e16025cb_VarDecl>>()};


	_1e16025cb_Impl(_1e15a2bb9_Token __param_base, _1e15a2bb9_Token __param_dest, jule::Slice<jule::Ref<_1e16025cb_FnDecl>> __param_methods, jule::Slice<jule::Ref<_1e16025cb_VarDecl>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1e16025cb_Impl(void) = default;

	jule::Bool _method_is_trait_impl(void);


	jule::Bool _method_is_struct_impl(void);


	bool operator==(const _1e16025cb_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	bool operator!=(const _1e16025cb_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_Expr {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Any _field_kind{jule::Any()};


	_1e16025cb_Expr(_1e15a2bb9_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1e16025cb_Expr(void) = default;

	jule::Bool _method_is_fn_call(void);


	bool operator==(const _1e16025cb_Expr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _1e16025cb_Expr &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_TypeDecl {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Any _field_kind{jule::Any()};


	_1e16025cb_TypeDecl(_1e15a2bb9_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1e16025cb_TypeDecl(void) = default;

	bool operator==(const _1e16025cb_TypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _1e16025cb_TypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e24d74b0_AssignInfo {
	jule::Slice<_1e15a2bb9_Token> _field_l{jule::Slice<_1e15a2bb9_Token>()};
	jule::Slice<_1e15a2bb9_Token> _field_r{jule::Slice<_1e15a2bb9_Token>()};
	_1e15a2bb9_Token _field_setter{_1e15a2bb9_Token()};
	jule::Bool _field_ok{jule::Bool()};


	_1e24d74b0_AssignInfo(jule::Slice<_1e15a2bb9_Token> __param_l, jule::Slice<_1e15a2bb9_Token> __param_r, _1e15a2bb9_Token __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_1e24d74b0_AssignInfo(void) = default;

	bool operator==(const _1e24d74b0_AssignInfo &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	bool operator!=(const _1e24d74b0_AssignInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_IdentTypeDecl {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>()};


	_1e16025cb_IdentTypeDecl(_1e15a2bb9_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_1e16025cb_IdentTypeDecl(void) = default;

	jule::Bool _method_is_prim(void);


	bool operator==(const _1e16025cb_IdentTypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	bool operator!=(const _1e16025cb_IdentTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1e177440c_Field {
	jule::Ref<_1e177440c_Field> self{};

	jule::Ref<_1e177440c_Struct> _field_owner{jule::Ref<_1e177440c_Struct>()};
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1a2db8ce3_TypeSymbol> _field_kind{jule::Ref<_1a2db8ce3_TypeSymbol>()};


	_1e177440c_Field(jule::Ref<_1e177440c_Struct> __param_owner, _1e15a2bb9_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1a2db8ce3_TypeSymbol> __param_kind): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {
		this->self = jule::Ref<_1e177440c_Field>::make(this, nullptr);

	}

	~_1e177440c_Field(void) { this->self.ref = nullptr; }

	_1e177440c_Field(void) { this->self = jule::Ref<_1e177440c_Field>::make(this, nullptr); }

	jule::Ref<_1e177440c_FieldIns> _method_instance(void);


	bool operator==(const _1e177440c_Field &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _1e177440c_Field &_Src) const { return !this->operator==(_Src); }
};


struct _1e177440c_Struct {
	jule::Ref<_1e177440c_Struct> self{};

	jule::Ref<_1e2a7c2a2_Sema> _field_sema{jule::Ref<_1e2a7c2a2_Sema>()};
	jule::Slice<jule::Ref<_1e177440c_Struct>> _field_depends{jule::Slice<jule::Ref<_1e177440c_Struct>>()};
	jule::Slice<jule::Ref<_1e177440c_Struct>> _field_uses{jule::Slice<jule::Ref<_1e177440c_Struct>>()};
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1e177440c_Field>> _field_fields{jule::Slice<jule::Ref<_1e177440c_Field>>()};
	jule::Slice<jule::Ref<_1e1737e81_Fn>> _field_methods{jule::Slice<jule::Ref<_1e1737e81_Fn>>()};
	jule::Slice<jule::Ref<_1ba80e105_Var>> _field_statics{jule::Slice<jule::Ref<_1ba80e105_Var>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1e16025cb_Directive>> _field_directives{jule::Slice<jule::Ref<_1e16025cb_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>()};
	jule::Slice<jule::Ref<_1e2a1e563_Trait>> _field_implements{jule::Slice<jule::Ref<_1e2a1e563_Trait>>()};
	jule::Slice<jule::Ref<_1e177440c_StructIns>> _field_instances{jule::Slice<jule::Ref<_1e177440c_StructIns>>()};


	_1e177440c_Struct(jule::Ref<_1e2a7c2a2_Sema> __param_sema, jule::Slice<jule::Ref<_1e177440c_Struct>> __param_depends, jule::Slice<jule::Ref<_1e177440c_Struct>> __param_uses, _1e15a2bb9_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_1e177440c_Field>> __param_fields, jule::Slice<jule::Ref<_1e1737e81_Fn>> __param_methods, jule::Slice<jule::Ref<_1ba80e105_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1e16025cb_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> __param_generics, jule::Slice<jule::Ref<_1e2a1e563_Trait>> __param_implements, jule::Slice<jule::Ref<_1e177440c_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc(__param_doc), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {
		this->self = jule::Ref<_1e177440c_Struct>::make(this, nullptr);

	}

	~_1e177440c_Struct(void) { this->self.ref = nullptr; }

	_1e177440c_Struct(void) { this->self = jule::Ref<_1e177440c_Struct>::make(this, nullptr); }

	jule::Ref<_1e177440c_StructIns> _method_instance(void);


	jule::Ref<_1e177440c_StructIns> _method_append_instance(jule::Ref<_1e177440c_StructIns>&);


	jule::Ref<_1e1737e81_Fn> _method_find_method(jule::Str,jule::Bool);


	jule::Ref<_1ba80e105_Var> _method_find_static(jule::Str);


	jule::Ref<_1e177440c_Field> _method_find_field(jule::Str);


	jule::Bool _method_is_implements(jule::Ref<_1e2a1e563_Trait>);


	jule::Bool _method_is_derives(jule::Str);


	jule::Bool _method_is_uses(jule::Ref<_1e177440c_Struct>);


	jule::Bool _method_has_ref_accessible(void);


	bool operator==(const _1e177440c_Struct &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_instances == _Src._field_instances;
	}

	bool operator!=(const _1e177440c_Struct &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_FnCallExpr {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Ref<_1e16025cb_Expr> _field_expr{jule::Ref<_1e16025cb_Expr>()};
	jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>()};
	jule::Slice<jule::Ref<_1e16025cb_Expr>> _field_args{jule::Slice<jule::Ref<_1e16025cb_Expr>>()};
	jule::Bool _field_concurrent{jule::Bool()};


	_1e16025cb_FnCallExpr(_1e15a2bb9_Token __param_token, jule::Ref<_1e16025cb_Expr> __param_expr, jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> __param_generics, jule::Slice<jule::Ref<_1e16025cb_Expr>> __param_args, jule::Bool __param_concurrent): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_concurrent(__param_concurrent) {}

	

	_1e16025cb_FnCallExpr(void) = default;

	bool operator==(const _1e16025cb_FnCallExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_concurrent == _Src._field_concurrent;
	}

	bool operator!=(const _1e16025cb_FnCallExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1e1737e81_Param {
	jule::Ref<_1e1737e81_Param> self{};

	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1a2db8ce3_TypeSymbol> _field_kind{jule::Ref<_1a2db8ce3_TypeSymbol>()};
	jule::Str _field_ident{jule::Str()};


	_1e1737e81_Param(_1e15a2bb9_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1a2db8ce3_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {
		this->self = jule::Ref<_1e1737e81_Param>::make(this, nullptr);

	}

	~_1e1737e81_Param(void) { this->self.ref = nullptr; }

	_1e1737e81_Param(void) { this->self = jule::Ref<_1e1737e81_Param>::make(this, nullptr); }

	jule::Ref<_1e1737e81_ParamIns> _method_instance(void);


	jule::Bool _method_is_self(void);


	jule::Bool _method_is_ref(void);


	bool operator==(const _1e1737e81_Param &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _1e1737e81_Param &_Src) const { return !this->operator==(_Src); }
};


struct _1e1737e81_Fn {
	jule::Ref<_1e1737e81_Fn> self{};

	jule::Ref<_1e2a7c2a2_Sema> _field_sema{jule::Ref<_1e2a7c2a2_Sema>()};
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1e16025cb_Directive>> _field_directives{jule::Slice<jule::Ref<_1e16025cb_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1e16025cb_ScopeTree> _field_scope{jule::Ref<_1e16025cb_ScopeTree>()};
	jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>()};
	jule::Ref<_1e1737e81_RetType> _field_result{jule::Ref<_1e1737e81_RetType>()};
	jule::Slice<jule::Ref<_1e1737e81_Param>> _field_params{jule::Slice<jule::Ref<_1e1737e81_Param>>()};
	jule::Ref<_1e177440c_Struct> _field_owner{jule::Ref<_1e177440c_Struct>()};
	jule::Slice<jule::Ref<_1e1737e81_FnIns>> _field_instances{jule::Slice<jule::Ref<_1e1737e81_FnIns>>()};


	_1e1737e81_Fn(jule::Ref<_1e2a7c2a2_Sema> __param_sema, _1e15a2bb9_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1e16025cb_Directive>> __param_directives, jule::Str __param_doc, jule::Ref<_1e16025cb_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> __param_generics, jule::Ref<_1e1737e81_RetType> __param_result, jule::Slice<jule::Ref<_1e1737e81_Param>> __param_params, jule::Ref<_1e177440c_Struct> __param_owner, jule::Slice<jule::Ref<_1e1737e81_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc(__param_doc), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {
		this->self = jule::Ref<_1e1737e81_Fn>::make(this, nullptr);

	}

	~_1e1737e81_Fn(void) { this->self.ref = nullptr; }

	_1e1737e81_Fn(void) { this->self = jule::Ref<_1e1737e81_Fn>::make(this, nullptr); }

	jule::Bool _method_is_void(void);


	jule::Bool _method_is_method(void);


	jule::Bool _method_is_entry_point(void);


	jule::Bool _method_is_init(void);


	jule::Bool _method_is_anon(void);


	jule::Bool _method_any_var(void);


	jule::Bool _method_parameters_uses_generics(void);


	jule::Bool _method_result_uses_generics(void);


	jule::Ref<_1e1737e81_FnIns> _method_instance_force(void);


	jule::Ref<_1e1737e81_FnIns> _method_instance(void);


	std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ref<_1e1737e81_FnIns>&);


	bool operator==(const _1e1737e81_Fn &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_instances == _Src._field_instances;
	}

	bool operator!=(const _1e1737e81_Fn &_Src) const { return !this->operator==(_Src); }
};


struct _1e16025cb_Node {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Any _field_data{jule::Any()};


	_1e16025cb_Node(_1e15a2bb9_Token __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_1e16025cb_Node(void) = default;

	jule::Bool _method_is_decl(void);


	jule::Bool _method_is_comment(void);


	jule::Bool _method_is_impl(void);


	jule::Bool _method_is_use_decl(void);


	bool operator==(const _1e16025cb_Node &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	bool operator!=(const _1e16025cb_Node &_Src) const { return !this->operator==(_Src); }
};


struct _1e28b6a59_Pass {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_text{jule::Str()};


	_1e28b6a59_Pass(_1e15a2bb9_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1e28b6a59_Pass(void) = default;

	bool operator==(const _1e28b6a59_Pass &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	bool operator!=(const _1e28b6a59_Pass &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a1e563_Trait: public _1a2db8ce3_Kind {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_1e1737e81_Fn>> _field_methods{jule::Slice<jule::Ref<_1e1737e81_Fn>>()};
	jule::Slice<jule::Ref<_1e177440c_Struct>> _field_implemented{jule::Slice<jule::Ref<_1e177440c_Struct>>()};


	_1e2a1e563_Trait(_1e15a2bb9_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_doc, jule::Slice<jule::Ref<_1e1737e81_Fn>> __param_methods, jule::Slice<jule::Ref<_1e177440c_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_doc(__param_doc), _field_methods(__param_methods), _field_implemented(__param_implemented) {}

	

	_1e2a1e563_Trait(void) = default;

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind>);


	jule::Bool _method_is_builtin(void);


	jule::Ref<_1e1737e81_Fn> _method_find_method(jule::Str);


	bool operator==(const _1e2a1e563_Trait &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	bool operator!=(const _1e2a1e563_Trait &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a21d4b_EnumItem {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1a2c74a6c_Value> _field_value{jule::Ref<_1a2c74a6c_Value>()};


	_1e2a21d4b_EnumItem(_1e15a2bb9_Token __param_token, jule::Str __param_ident, jule::Ref<_1a2c74a6c_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_1e2a21d4b_EnumItem(void) = default;

	jule::Bool _method_auto_expr(void);


	bool operator==(const _1e2a21d4b_EnumItem &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	bool operator!=(const _1e2a21d4b_EnumItem &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a21d4b_Enum: public _1a2db8ce3_Kind {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1a2db8ce3_TypeSymbol> _field_kind{jule::Ref<_1a2db8ce3_TypeSymbol>()};
	jule::Slice<jule::Ref<_1e2a21d4b_EnumItem>> _field_items{jule::Slice<jule::Ref<_1e2a21d4b_EnumItem>>()};
	jule::Str _field_doc{jule::Str()};


	_1e2a21d4b_Enum(_1e15a2bb9_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1a2db8ce3_TypeSymbol> __param_kind, jule::Slice<jule::Ref<_1e2a21d4b_EnumItem>> __param_items, jule::Str __param_doc): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc(__param_doc) {}

	

	_1e2a21d4b_Enum(void) = default;

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ref<_1a2db8ce3_TypeKind>);


	jule::Ref<_1e2a21d4b_EnumItem> _method_find_item(jule::Str);


	bool operator==(const _1e2a21d4b_Enum &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	bool operator!=(const _1e2a21d4b_Enum &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a7b966_ImportInfo: public _1a35968cc_Lookup {
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_ident{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_duplicate{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};
	jule::Bool _field_import_all{jule::Bool()};
	jule::Slice<_1e15a2bb9_Token> _field_selected{jule::Slice<_1e15a2bb9_Token>()};
	jule::Ref<_1e2a7b966_Package> _field_package{jule::Ref<_1e2a7b966_Package>()};


	_1e2a7b966_ImportInfo(_1e15a2bb9_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_1e15a2bb9_Token> __param_selected, jule::Ref<_1e2a7b966_Package> __param_package): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package) {}

	

	_1e2a7b966_ImportInfo(void) = default;

	jule::Ref<_1e2a7b966_ImportInfo> _method_find_package(jule::Str);


	jule::Ref<_1e2a7b966_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)>);


	jule::Ref<_1ba80e105_Var> _method_find_var(jule::Str,jule::Bool);


	jule::Ref<_1a2db8ce3_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	jule::Ref<_1e177440c_Struct> _method_find_struct(jule::Str,jule::Bool);


	jule::Ref<_1e1737e81_Fn> _method_find_fn(jule::Str,jule::Bool);


	jule::Ref<_1e2a1e563_Trait> _method_find_trait(jule::Str);


	jule::Ref<_1e2a21d4b_Enum> _method_find_enum(jule::Str);


	jule::Bool _method_is_lookupable(jule::Str);


	jule::Bool _method_exist_ident(jule::Str);


	bool operator==(const _1e2a7b966_ImportInfo &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_alias == _Src._field_alias &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	bool operator!=(const _1e2a7b966_ImportInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1e2a276ae_Impl {
	_1e15a2bb9_Token _field_base{_1e15a2bb9_Token()};
	_1e15a2bb9_Token _field_dest{_1e15a2bb9_Token()};
	jule::Slice<jule::Ref<_1e1737e81_Fn>> _field_methods{jule::Slice<jule::Ref<_1e1737e81_Fn>>()};
	jule::Slice<jule::Ref<_1ba80e105_Var>> _field_statics{jule::Slice<jule::Ref<_1ba80e105_Var>>()};


	_1e2a276ae_Impl(_1e15a2bb9_Token __param_base, _1e15a2bb9_Token __param_dest, jule::Slice<jule::Ref<_1e1737e81_Fn>> __param_methods, jule::Slice<jule::Ref<_1ba80e105_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1e2a276ae_Impl(void) = default;

	jule::Bool _method_is_trait_impl(void);


	jule::Bool _method_is_struct_impl(void);


	bool operator==(const _1e2a276ae_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	bool operator!=(const _1e2a276ae_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1ba80e105_Var {
	jule::Ref<_1e2a2e210_Scope> _field_scope{jule::Ref<_1e2a2e210_Scope>()};
	_1e15a2bb9_Token _field_token{_1e15a2bb9_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1a2db8ce3_TypeSymbol> _field_kind{jule::Ref<_1a2db8ce3_TypeSymbol>()};
	jule::Ref<_1a2c74a6c_Value> _field_value{jule::Ref<_1a2c74a6c_Value>()};
	jule::Ref<_1e28b6a59_ReferenceStack> _field_references{jule::Ref<_1e28b6a59_ReferenceStack>()};
	jule::Slice<jule::Ref<_1e16025cb_Directive>> _field_directives{jule::Slice<jule::Ref<_1e16025cb_Directive>>()};
	jule::Ref<_1ba80e105_IterRelation> _field_iter_relation{jule::Ref<_1ba80e105_IterRelation>()};
	jule::Slice<jule::Ref<_1ba80e105_Var>> _field_depends{jule::Slice<jule::Ref<_1ba80e105_Var>>()};


	_1ba80e105_Var(jule::Ref<_1e2a2e210_Scope> __param_scope, _1e15a2bb9_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ref<_1a2db8ce3_TypeSymbol> __param_kind, jule::Ref<_1a2c74a6c_Value> __param_value, jule::Ref<_1e28b6a59_ReferenceStack> __param_references, jule::Slice<jule::Ref<_1e16025cb_Directive>> __param_directives, jule::Ref<_1ba80e105_IterRelation> __param_iter_relation, jule::Slice<jule::Ref<_1ba80e105_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_doc(__param_doc), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_1ba80e105_Var(void) = default;

	jule::Bool _method_is_initialized(void);


	jule::Bool _method_is_type_inferred(void);


	bool operator==(const _1ba80e105_Var &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_directives == _Src._field_directives &&
			this->_field_iter_relation == _Src._field_iter_relation &&
			this->_field_depends == _Src._field_depends;
	}

	bool operator!=(const _1ba80e105_Var &_Src) const { return !this->operator==(_Src); }
};


struct _1a2c73c9c_TypeCompatibilityChecker {
	jule::Ref<_1e2a7c2a2_Sema> _field_s{jule::Ref<_1e2a7c2a2_Sema>()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_dest{jule::Ref<_1a2db8ce3_TypeKind>()};
	jule::Ref<_1a2db8ce3_TypeKind> _field_src{jule::Ref<_1a2db8ce3_TypeKind>()};
	_1e15a2bb9_Token _field_error_token{_1e15a2bb9_Token()};
	jule::Bool _field_ignore_any{jule::Bool()};
	jule::Bool _field_deref{jule::Bool()};
	jule::Bool _field_sub_check{jule::Bool()};


	_1a2c73c9c_TypeCompatibilityChecker(jule::Ref<_1e2a7c2a2_Sema> __param_s, jule::Ref<_1a2db8ce3_TypeKind> __param_dest, jule::Ref<_1a2db8ce3_TypeKind> __param_src, _1e15a2bb9_Token __param_error_token, jule::Bool __param_ignore_any, jule::Bool __param_deref, jule::Bool __param_sub_check): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token), _field_ignore_any(__param_ignore_any), _field_deref(__param_deref), _field_sub_check(__param_sub_check) {}

	

	_1a2c73c9c_TypeCompatibilityChecker(void) = default;

	void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	jule::Bool _method_check_trait(void);


	jule::Bool _method_check_ref(void);


	jule::Bool _method_check_ptr(void);


	jule::Bool _method_check_slc(void);


	jule::Bool _method_check_arr(void);


	jule::Bool _method_check_map(void);


	jule::Bool _method_check_struct(void);


	jule::Bool _method_check_fn(void);


	jule::Bool _method_check_enum(void);


	jule::Bool _method_check_prim(void);


	jule::Bool _method_check_cpp_linked(void);


	jule::Bool _method_check(void);


	bool operator==(const _1a2c73c9c_TypeCompatibilityChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_any == _Src._field_ignore_any &&
			this->_field_deref == _Src._field_deref &&
			this->_field_sub_check == _Src._field_sub_check;
	}

	bool operator!=(const _1a2c73c9c_TypeCompatibilityChecker &_Src) const { return !this->operator==(_Src); }
};


jule::Bool _1d406e253_is_surrogate(jule::I32);
jule::I32 _1d406e253_decode_rune(jule::I32,jule::I32);
std::tuple<jule::I32,jule::I32> _1d406e253_encode_rune(jule::I32);
jule::Slice<jule::U16> _1d406e253_encode(jule::Slice<jule::I32>);
jule::Slice<jule::I32> _1d406e253_decode(jule::Slice<jule::U16>);
jule::Slice<jule::U16> _1d406e253_append_rune(jule::Slice<jule::U16>,jule::I32);
void* _1d40351d6_malloc(jule::Uint);
void* _1d40351d6_calloc(jule::Uint,jule::Uint);
void* _1d40351d6_realloc(void*,jule::Uint);
void _1d40351d6_free(void*);
jule::Str _1ec9a2057_type_id(jule::Any);
jule::Slice<jule::U16> _1d4048606_utf16_from_str(jule::Str);
jule::Str _1d4048606_utf16_to_str(jule::Slice<jule::U16>);
jule::Str _1d4048606_u16_ptr_to_str(jule::U16*);
jule::Str _1d4048606_byte_ptr_to_str(jule::U8*);
jule::Int _1d40342a1_puts(jule::Str);
jule::Int _1d403842b_get_last_errno(void);
jule::Uintptr _1d40585a0_get_std_handle(jule::Uintptr);
jule::Bool _1d40585a0_close_handle(jule::Uintptr);
jule::Int _1d40585a0_wstat(jule::U16*,struct stat*);
jule::Int _1d40585a0__wopen(jule::U16*,jule::Int,jule::Int);
jule::U32 _1d40585a0_get_last_error(void);
jule::U32 _1d40585a0_get_current_directory(jule::U32,jule::U16*);
jule::Bool _1d40585a0_set_current_directory(jule::U16*);
jule::Bool _1d40585a0_delete_file(jule::U16*);
jule::Bool _1d40585a0_create_directory(jule::U16*);
jule::Bool _1d40585a0_remove_directory(jule::U16*);
_WDIR* _1d40585a0__wopendir(jule::U16*);
struct _wdirent* _1d40585a0__wreaddir(_WDIR*);
jule::Int _1d40585a0__wclosedir(_WDIR*);
jule::U32 _1d40585a0_get_full_path_name(jule::U16*,jule::U32,jule::U16*,jule::U16**);
jule::Bool _1d40585a0_get_console_mode(jule::Uintptr,jule::Int&);
jule::Bool _1d40585a0_set_console_mode(jule::Uintptr,jule::Int);
jule::Bool _1d40585a0_write_console(jule::Uintptr,jule::U16*,jule::Int,jule::Int&,void*);
jule::Bool _1d40585a0_read_console(jule::Uintptr,jule::U16*,jule::Int,jule::Int&,void*);
jule::I64 _1d4097a1d_seek(jule::Int,jule::I64,jule::Int);
jule::Int _1d4097a1d_read(jule::Int,void*,jule::Uint);
jule::Int _1d4097a1d_close(jule::Int);
jule::Int _1d4097a1d_write(jule::Int,void*,jule::Uint);
void _1d4097a1d_exit(jule::Int);
jule::Bool _1ec9a1c7c_is_path_sep(jule::U8);
jule::Bool _1ec9a1c7c_is_slash(jule::U8);
jule::U8 _1ec9a1c7c_to_upper(jule::U8);
jule::Bool _1ec9a1c7c_is_abs(jule::Str);
jule::Int _1ec9a1c7c_volume_name_len(jule::Str);
std::tuple<jule::Str,jule::Str,jule::Bool> _1ec9a1c7c_cut_path(jule::Str);
std::tuple<jule::Str,jule::Bool> _1ec9a1c7c_full_path(jule::Str);
std::tuple<jule::Str,jule::Bool> _1ec9a1c7c___abs(jule::Str);
jule::Str _1ec9a1c7c___join(jule::Slice<jule::Str>);
jule::Str _1ec9a2585_clean(jule::Str);
jule::Str _1ec9a2585_to_slash(jule::Str);
jule::Str _1ec9a2585_from_slash(jule::Str);
jule::Str _1ec9a2585_join(jule::Slice<jule::Str>);
jule::Str _1ec9a2585_ext(jule::Str);
std::tuple<jule::Str,jule::Bool> _1ec9a2585_abs(jule::Str);
jule::Str _1ec9a2585_base(jule::Str);
jule::Str _1ec9a2585_dir(jule::Str);
jule::Str _1ec9a2585_volume_name(jule::Str);
jule::Int _1ec9a54ab_get_last_os_error(void);
jule::Int _1d40b320e_get_last_os_error_windows(void);
jule::Slice<jule::Str> _1d40b9c93_args(void);
jule::Slice<jule::Str> _1d40b9c93_env(void);
std::tuple<jule::Str,jule::Int> _1d40b9c93_working_dir(void);
jule::Int _1d40b9c93_set_working_dir(jule::Str);
std::tuple<jule::Str,jule::Int> _1d40a5d8e___getwd(void);
jule::Int _1d40a5d8e___chdir(jule::Str);
void _1ec9bbc86_exit(jule::Int);
jule::Str _1ec9bbc86_executable(void);
jule::Bool _1ec8e3273_is_std_header_path(jule::Str);
jule::Bool _1ec8e3273_is_valid_header_ext(jule::Str);
jule::Bool _1ec8e3273_is_valid_cpp_ext(jule::Str);
jule::Str _1ec8e8025_logf(jule::Str,jule::Slice<jule::Any>);
jule::Str _1ec8e8025_arg_to_str(jule::Any);
jule::Int _1ec8e8025_find_next_fmt(jule::Str);
jule::Str _1ec8e8025_apply_fmt(jule::Str,jule::Slice<jule::Any>);
jule::Bool _1ec93b5b8_is_top_directive(jule::Str);
jule::Bool _1ec970a4d_is_windows(jule::Str);
jule::Bool _1ec970a4d_is_darwin(jule::Str);
jule::Bool _1ec970a4d_is_linux(jule::Str);
jule::Bool _1ec970a4d_is_i386(jule::Str);
jule::Bool _1ec970a4d_is_amd64(jule::Str);
jule::Bool _1ec970a4d_is_arm64(jule::Str);
jule::Bool _1ec970a4d_is_unix(jule::Str);
jule::Bool _1ec970a4d_is_32bit(jule::Str);
jule::Bool _1ec970a4d_is_64bit(jule::Str);
void _1ec9710c0_exit_err(jule::Str);
void _1ec9710c0_init(void);
jule::Bool _1ec984699_is_jule(jule::Str);
jule::Int _1e165619b_leading_zeros(jule::Uint);
jule::Int _1e165619b_leading_zeros8(jule::U8);
jule::Int _1e165619b_leading_zeros16(jule::U16);
jule::Int _1e165619b_leading_zeros32(jule::U32);
jule::Int _1e165619b_leading_zeros64(jule::U64);
jule::Int _1e165619b_trailing_zeros(jule::Uint);
jule::Int _1e165619b_trailing_zeros8(jule::U8);
jule::Int _1e165619b_trailing_zeros16(jule::U16);
jule::Int _1e165619b_trailing_zeros32(jule::U32);
jule::Int _1e165619b_trailing_zeros64(jule::U64);
jule::Int _1e165619b_ones_count(jule::Uint);
jule::Int _1e165619b_ones_count8(jule::U8);
jule::Int _1e165619b_ones_count16(jule::U16);
jule::Int _1e165619b_ones_count32(jule::U32);
jule::Int _1e165619b_ones_count64(jule::U64);
jule::Uint _1e165619b_rotate_left(jule::Uint,jule::Int);
jule::U8 _1e165619b_rotate_left8(jule::U8,jule::Int);
jule::U16 _1e165619b_rotate_left16(jule::U16,jule::Int);
jule::U32 _1e165619b_rotate_left32(jule::U32,jule::Int);
jule::U64 _1e165619b_rotate_left64(jule::U64,jule::Int);
jule::Uint _1e165619b_reverse(jule::Uint);
jule::U8 _1e165619b_reverse8(jule::U8);
jule::U16 _1e165619b_reverse16(jule::U16);
jule::U32 _1e165619b_reverse32(jule::U32);
jule::U64 _1e165619b_reverse64(jule::U64);
jule::Uint _1e165619b_reverse_bytes(jule::Uint);
jule::U16 _1e165619b_reverse_bytes16(jule::U16);
jule::U32 _1e165619b_reverse_bytes32(jule::U32);
jule::U64 _1e165619b_reverse_bytes64(jule::U64);
jule::Int _1e165619b_len(jule::Uint);
jule::Int _1e165619b_len8(jule::U8);
jule::Int _1e165619b_len16(jule::U16);
jule::Int _1e165619b_len32(jule::U32);
jule::Int _1e165619b_len64(jule::U64);
std::tuple<jule::Uint,jule::Uint> _1e165619b_add(jule::Uint,jule::Uint,jule::Uint);
std::tuple<jule::U32,jule::U32> _1e165619b_add32(jule::U32,jule::U32,jule::U32);
std::tuple<jule::U64,jule::U64> _1e165619b_add64(jule::U64,jule::U64,jule::U64);
std::tuple<jule::Uint,jule::Uint> _1e165619b_sub(jule::Uint,jule::Uint,jule::Uint);
std::tuple<jule::U32,jule::U32> _1e165619b_sub32(jule::U32,jule::U32,jule::U32);
std::tuple<jule::U64,jule::U64> _1e165619b_sub64(jule::U64,jule::U64,jule::U64);
std::tuple<jule::Uint,jule::Uint> _1e165619b_mul(jule::Uint,jule::Uint);
std::tuple<jule::U32,jule::U32> _1e165619b_mul32(jule::U32,jule::U32);
std::tuple<jule::U64,jule::U64> _1e165619b_mul64(jule::U64,jule::U64);
std::tuple<jule::Uint,jule::Uint> _1e165619b_div(jule::Uint,jule::Uint,jule::Uint);
std::tuple<jule::U32,jule::U32> _1e165619b_div32(jule::U32,jule::U32,jule::U32);
std::tuple<jule::U64,jule::U64> _1e165619b_div64(jule::U64,jule::U64,jule::U64);
jule::Uint _1e165619b_rem(jule::Uint,jule::Uint,jule::Uint);
jule::U32 _1e165619b_rem32(jule::U32,jule::U32,jule::U32);
jule::U64 _1e165619b_rem64(jule::U64,jule::U64,jule::U64);
jule::F64 _1e10a6657_atanh(jule::F64);
jule::U32 _1e10c0d9c_f32_bits(jule::F32);
jule::F32 _1e10c0d9c_f32_from_bits(jule::U32);
jule::U64 _1e10c0d9c_f64_bits(jule::F64);
jule::F64 _1e10c0d9c_f64_from_bits(jule::U64);
jule::F64 _1e10c8a64_cos(jule::F64);
jule::F64 _1e10c8a64_sin(jule::F64);
jule::F64 _1e10ac95a_tan(jule::F64);
jule::F64 _1e1119cc5_mod(jule::F64,jule::F64);
std::tuple<jule::F64,jule::Int> _1e111d614_frexp(jule::F64);
jule::F32 _1e10cb913_nextafter32(jule::F32,jule::F32);
jule::F64 _1e10cb913_nextafter(jule::F64,jule::F64);
jule::F64 _1e1135d02_copysign(jule::F64,jule::F64);
std::tuple<jule::U64,jule::F64> _1e111d8cd_trig_reduce(jule::F64);
jule::F64 _1e1152bed_atan2(jule::F64,jule::F64);
jule::F64 _1e1154ae0_floor(jule::F64);
jule::F64 _1e1154ae0_ceil(jule::F64);
jule::F64 _1e1154ae0_trunc(jule::F64);
jule::F64 _1e1154ae0_round(jule::F64);
jule::F64 _1e1154ae0_round_even(jule::F64);
jule::F64 _1e119a00e_nan(void);
jule::Bool _1e119a00e_is_nan(jule::F64);
jule::F64 _1e119a00e_inf(jule::Int);
jule::Bool _1e119a00e_is_inf(jule::F64,jule::Int);
std::tuple<jule::F64,jule::Int> _1e119a00e_normalize(jule::F64);
std::tuple<jule::F64,jule::F64> _1e11500d5_sincos(jule::F64);
jule::F64 _1e119b86d_dim(jule::F64,jule::F64);
jule::F64 _1e119b86d_max(jule::F64,jule::F64);
jule::F64 _1e119b86d_min(jule::F64,jule::F64);
jule::F64 _1e119b120_log(jule::F64);
jule::F64 _1e1206c5d_expm1(jule::F64);
jule::F64 _1e11e5279_abs(jule::F64);
jule::F64 _1e124dd71_j1(jule::F64);
jule::F64 _1e124dd71_y1(jule::F64);
jule::F64 _1e124dd71_pone(jule::F64);
jule::F64 _1e124dd71_qone(jule::F64);
jule::U64 _1e12a3c50_zero(jule::U64);
jule::U64 _1e12a3c50_nonzero(jule::U64);
std::tuple<jule::U64,jule::U64> _1e12a3c50_shl(jule::U64,jule::U64,jule::Uint);
std::tuple<jule::U64,jule::U64> _1e12a3c50_shr(jule::U64,jule::U64,jule::Uint);
std::tuple<jule::U64,jule::U64> _1e12a3c50_shrcompress(jule::U64,jule::U64,jule::Uint);
jule::I32 _1e12a3c50_lz(jule::U64,jule::U64);
std::tuple<jule::U32,jule::I32,jule::U64> _1e12a3c50_split(jule::U64);
jule::F64 _1e12a3c50_fma(jule::F64,jule::F64,jule::F64);
std::tuple<jule::F64,jule::F64> _1e125431b_modf(jule::F64);
jule::F64 _1e11dc34d_log10(jule::F64);
jule::F64 _1e11dc34d_log2(jule::F64);
jule::F64 _1e12dc948_hypot(jule::F64,jule::F64);
jule::F64 _1e1300582_j0(jule::F64);
jule::F64 _1e1300582_y0(jule::F64);
jule::F64 _1e1300582_pzero(jule::F64);
jule::F64 _1e1300582_qzero(jule::F64);
jule::F64 _1e135e745_ldexp(jule::F64,jule::Int);
jule::Bool _1e137aec0_signbit(jule::F64);
jule::F64 _1e1368b39_sinh(jule::F64);
jule::F64 _1e1368b39_cosh(jule::F64);
std::tuple<jule::F64,jule::Int> _1e1395968_lgamma(jule::F64);
jule::F64 _1e1395968_sin_pi(jule::F64);
jule::F64 _1e13e51e3_acosh(jule::F64);
jule::F64 _1e1402497_tanh(jule::F64);
jule::F64 _1e140e790_cbrt(jule::F64);
jule::F64 _1e1412287_pow(jule::F64,jule::F64);
jule::Bool _1e1412287_is_odd_int(jule::F64);
jule::F64 _1e142d4e5_exp(jule::F64);
jule::F64 _1e142d4e5_exp2(jule::F64);
jule::F64 _1e142d4e5_expmulti(jule::F64,jule::F64,jule::Int);
jule::F64 _1e148444c_log1p(jule::F64);
std::tuple<jule::F64,jule::F64> _1e142d418_stirling(jule::F64);
jule::F64 _1e142d418_gamma(jule::F64);
jule::Bool _1e142d418_is_neg_int(jule::F64);
jule::F64 _1e1404433_erfinv(jule::F64);
jule::F64 _1e1404433_erfcinv(jule::F64);
jule::F64 _1e145e26d_erf(jule::F64);
jule::F64 _1e145e26d_erfc(jule::F64);
jule::F64 _1e151a9ab_pow10(jule::Int);
jule::F64 _1e151c271_sqrt(jule::F64);
jule::F64 _1e157b115_logb(jule::F64);
jule::Int _1e157b115_ilogb(jule::F64);
jule::Int _1e157b115__ilogb(jule::F64);
jule::F64 _1e1573371_jn(jule::Int,jule::F64);
jule::F64 _1e1573371_yn(jule::Int,jule::F64);
jule::F64 _1e151bb99_remainder(jule::F64,jule::F64);
jule::F64 _1e1592538_xatan(jule::F64);
jule::F64 _1e1592538_satan(jule::F64);
jule::F64 _1e1592538_atan(jule::F64);
jule::F64 _1e16041b0_asin(jule::F64);
jule::F64 _1e16041b0_acos(jule::F64);
jule::F64 _1e163c748_asinh(jule::F64);
std::tuple<jule::Bool,jule::Int> _1ec935dba_conv_bool(jule::Str);
jule::Str _1ec935dba_fmt_bool(jule::Bool);
jule::Str _1ec95e245_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
jule::Slice<jule::U8> _1ec95e245_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
jule::Slice<jule::U8> _1ec95e245_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1ec95e245_FloatInfo&);
jule::Slice<jule::U8> _1ec95e245_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_1ec95e245_DecimalSlice,jule::Int,jule::U8);
void _1ec95e245_round_shortest(_1e103632e_Decimal&,jule::U64,jule::Int,_1ec95e245_FloatInfo&);
jule::Slice<jule::U8> _1ec95e245_fmt_e(jule::Slice<jule::U8>,jule::Bool,_1ec95e245_DecimalSlice,jule::Int,jule::U8);
jule::Slice<jule::U8> _1ec95e245_fmt_f(jule::Slice<jule::U8>,jule::Bool,_1ec95e245_DecimalSlice,jule::Int);
jule::Slice<jule::U8> _1ec95e245_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_1ec95e245_FloatInfo&);
jule::Slice<jule::U8> _1ec95e245_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1ec95e245_FloatInfo&);
jule::Int _1ec95e245_min(jule::Int,jule::Int);
jule::Int _1ec95e245_max(jule::Int,jule::Int);
jule::U8 _1ec95de8c_lower(jule::U8);
std::tuple<jule::U64,jule::Int> _1ec95de8c_parse_uint(jule::Str,jule::Int,jule::Int);
std::tuple<jule::I64,jule::Int> _1ec95de8c_parse_int(jule::Str,jule::Int,jule::Int);
std::tuple<jule::F64,jule::Bool> _1ec97c2b8_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
std::tuple<jule::F32,jule::Bool> _1ec97c2b8_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
jule::Int _1d419b9e0_common_prefix_len_ignore_case(jule::Str,jule::Str);
std::tuple<jule::F64,jule::Int,jule::Bool> _1d419b9e0_special(jule::Str);
std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1d419b9e0_read_float(jule::Str);
std::tuple<jule::F64,jule::Bool> _1d419b9e0_atof64_exact(jule::U64,jule::Int,jule::Bool);
std::tuple<jule::F64,jule::Bool> _1d419b9e0_atof64exact(jule::U64,jule::Int,jule::Bool);
std::tuple<jule::F32,jule::Bool> _1d419b9e0_atof32exact(jule::U64,jule::Int,jule::Bool);
std::tuple<jule::F64,jule::Int> _1d419b9e0_atof_hex(jule::Str,_1ec95e245_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
std::tuple<jule::F32,jule::Int,jule::Int> _1d419b9e0_atof32(jule::Str);
std::tuple<jule::F64,jule::Int,jule::Int> _1d419b9e0_atof64(jule::Str);
std::tuple<jule::F64,jule::Int,jule::Int> _1d419b9e0_parse_float_prefix(jule::Str,jule::Int);
std::tuple<jule::F64,jule::Int> _1d419b9e0_parse_float(jule::Str,jule::Int);
void _1d424203b_ryu_ftoa_fixed32(_1ec95e245_DecimalSlice&,jule::U32,jule::Int,jule::Int);
void _1d424203b_ryu_ftoa_fixed64(_1ec95e245_DecimalSlice&,jule::U64,jule::Int,jule::Int);
void _1d424203b_format_decimal(_1ec95e245_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
void _1d424203b_ryu_ftoa_shortest(_1ec95e245_DecimalSlice&,jule::U64,jule::Int,_1ec95e245_FloatInfo&);
jule::Int _1d424203b_mul_by_log2_log10(jule::Int);
jule::Int _1d424203b_mul_by_log10_log2(jule::Int);
std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1d424203b_compute_bounds(jule::U64,jule::Int,_1ec95e245_FloatInfo&);
void _1d424203b_ryu_digits(_1ec95e245_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
void _1d424203b_ryu_digits32(_1ec95e245_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
std::tuple<jule::U32,jule::Int,jule::Bool> _1d424203b_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
std::tuple<jule::U64,jule::Int,jule::Bool> _1d424203b_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
jule::Bool _1d424203b_divisible_by_pow5(jule::U64,jule::Int);
std::tuple<jule::U32,jule::U32> _1d424203b_divmod1e9(jule::U64);
jule::Int _1e103632e_digit_zero(jule::Slice<jule::U8>);
void _1e103632e_trim(_1e103632e_Decimal&);
void _1e103632e_right_shift(_1e103632e_Decimal&,jule::Uint);
jule::Bool _1e103632e_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
void _1e103632e_left_shift(_1e103632e_Decimal&,jule::Uint);
jule::Bool _1e103632e_should_round_up(_1e103632e_Decimal&,jule::Int);
jule::Str _1e103784c_fmt_uint(jule::U64,jule::Int);
jule::Str _1e103784c_fmt_int(jule::I64,jule::Int);
jule::Str _1e103784c_itoa(jule::Int);
jule::Str _1e103784c_small(jule::Int);
jule::Bool _1e103784c_is_power_of_two(jule::Int);
std::tuple<jule::Slice<jule::U8>,jule::Str> _1e103784c_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
void _1ec945d31_push_opt_level(jule::Int);
jule::Bool _1e176da99_full_rune(jule::Slice<jule::U8>);
jule::Bool _1e176da99_full_rune_str(jule::Str);
std::tuple<jule::I32,jule::Int> _1e176da99_decode_rune(jule::Slice<jule::U8>);
std::tuple<jule::I32,jule::Int> _1e176da99_decode_rune_str(jule::Str);
std::tuple<jule::I32,jule::Int> _1e176da99_decode_last_rune(jule::Slice<jule::U8>);
std::tuple<jule::I32,jule::Int> _1e176da99_decode_last_rune_str(jule::Str);
jule::Int _1e176da99_rune_len(jule::I32);
jule::Int _1e176da99_encode_rune(jule::Slice<jule::U8>,jule::I32);
jule::Slice<jule::U8> _1e176da99_append_rune(jule::Slice<jule::U8>,jule::I32);
jule::Slice<jule::U8> _1e176da99_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
jule::Int _1e176da99_rune_count(jule::Slice<jule::U8>);
jule::Int _1e176da99_rune_count_str(jule::Str);
jule::Bool _1e176da99_rune_start(jule::U8);
jule::Bool _1e176da99_valid(jule::Slice<jule::U8>);
jule::Bool _1e176da99_valid_str(jule::Str);
jule::Bool _1e176da99_valid_rune(jule::I32);
jule::Int _1e14c6bed_get_last_fs_error(void);
jule::Bool _1e1736c60_is_console_handle(jule::Uintptr);
jule::Bool _1e189a1c0_is_graphic(jule::I32);
jule::Bool _1e189a1c0_is_in(jule::I32,jule::Slice<jule::Ref<_1e1976730_RangeTable>>);
jule::Bool _1e189a1c0_is_letter(jule::I32);
jule::Bool _1e189a1c0_is_number(jule::I32);
jule::Bool _1e189a1c0_is_punct(jule::I32);
jule::Bool _1e189a1c0_is_space(jule::I32);
jule::Bool _1e195d030_is_digit(jule::I32);
std::tuple<jule::I32,jule::Bool> _1e1976730___to(jule::Int,jule::I32,jule::Slice<_1e1976730_CaseRange>);
jule::I32 _1e1976730_to(jule::Int,jule::I32);
jule::I32 _1e1976730_to_upper(jule::I32);
jule::I32 _1e1976730_to_lower(jule::I32);
jule::Bool _1e1976730_is16(jule::Slice<_1e1976730_Range16>,jule::U16);
jule::Bool _1e1976730_is32(jule::Slice<_1e1976730_Range32>,jule::U32);
jule::Bool _1e1976730_is(jule::Ref<_1e1976730_RangeTable>,jule::I32);
jule::Bool _1e1976730_is_excluding_latin(jule::Ref<_1e1976730_RangeTable>,jule::I32);
jule::Bool _1e1976730_is_upper(jule::I32);
jule::Bool _1e1976730_is_lower(jule::I32);
jule::Bool _1e15a2bb9_is_unary_op(jule::Str);
jule::Bool _1e15a2bb9_is_bin_op(jule::Str);
jule::Bool _1e15a2bb9_is_weak_op(jule::Str);
jule::Bool _1e15a2bb9_is_str(jule::Str);
jule::Bool _1e15a2bb9_is_raw_str(jule::Str);
jule::Bool _1e15a2bb9_is_rune(jule::Str);
jule::Bool _1e15a2bb9_is_nil(jule::Str);
jule::Bool _1e15a2bb9_is_bool(jule::Str);
jule::Bool _1e15a2bb9_contains_any(jule::Str,jule::Str);
jule::Bool _1e15a2bb9_is_float(jule::Str);
jule::Bool _1e15a2bb9_is_num(jule::Str);
jule::Bool _1e15a2bb9_is_lit(jule::Str);
jule::Bool _1e15a2bb9_is_ignore_ident(jule::Str);
jule::Bool _1e15a2bb9_is_anon_ident(jule::Str);
jule::Bool _1e15a2bb9_is_punct(jule::I32);
jule::Bool _1e15a2bb9_is_space(jule::I32);
jule::Bool _1e15a2bb9_is_letter(jule::I32);
jule::Bool _1e15a2bb9_is_ident_rune(jule::Str);
jule::Bool _1e15a2bb9_is_decimal(jule::U8);
jule::Bool _1e15a2bb9_is_binary(jule::U8);
jule::Bool _1e15a2bb9_is_octal(jule::U8);
jule::Bool _1e15a2bb9_is_hex(jule::U8);
jule::Bool _1e15a2bb9_is_assign(jule::Uint);
jule::Bool _1e15a2bb9_is_postfix_op(jule::Str);
jule::Bool _1e15a2bb9_is_assign_op(jule::Str);
jule::Ref<_1e17bebd8_File> _1e17bebd8_new_file_set(jule::Str);
_1ec8e8025_Log _1e17c9de1_make_err(jule::Int,jule::Int,jule::Ref<_1e17bebd8_File>&,jule::Str,jule::Slice<jule::Any>);
jule::Bool _1e17c9de1_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
jule::Str _1e17c9de1_float_fmt_e(jule::Slice<jule::U8>&,jule::Int);
jule::Str _1e17c9de1_float_fmt_p(jule::Slice<jule::U8>&,jule::Int);
jule::Str _1e17c9de1_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
jule::Str _1e17c9de1_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
jule::Str _1e17c9de1_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
jule::Str _1e17c9de1_float_num(jule::Slice<jule::U8>&,jule::Int);
jule::Str _1e17c9de1_common_num(jule::Slice<jule::U8>&);
jule::Str _1e17c9de1_binary_num(jule::Slice<jule::U8>&);
jule::Bool _1e17c9de1_is_float_fmt_e(jule::U8,jule::Int);
jule::Bool _1e17c9de1_is_float_fmt_p(jule::U8,jule::Int);
jule::Bool _1e17c9de1_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
jule::Bool _1e17c9de1_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
jule::Bool _1e17c9de1_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
jule::Str _1e17c9de1_octal_num(jule::Slice<jule::U8>&);
jule::Str _1e17c9de1_hex_num(jule::Slice<jule::U8>&);
jule::Str _1e17c9de1_hex_escape(jule::Slice<jule::U8>&,jule::Int);
jule::Str _1e17c9de1_big_unicode_point_escape(jule::Slice<jule::U8>&);
jule::Str _1e17c9de1_little_unicode_point_escape(jule::Slice<jule::U8>&);
jule::Str _1e17c9de1_hex_byte_escape(jule::Slice<jule::U8>&);
jule::Str _1e17c9de1_byte_escape(jule::Slice<jule::U8>&);
jule::Slice<_1ec8e8025_Log> _1e17c9de1_lex(jule::Ref<_1e17bebd8_File>);
jule::Ref<_1e1630153_FileInfo> _1e1630153_parse_file(jule::Ref<_1e17bebd8_File>);
jule::Ref<_1e1630153_PackageInfo> _1e1630153_parse_package(jule::Slice<jule::Ref<_1e17bebd8_File>>);
std::tuple<jule::Ref<_1e15a53c5_Ast>,jule::Slice<_1ec8e8025_Log>> _1e1630153_parse_fileset(jule::Ref<_1e17bebd8_File>);
jule::Ref<_1e16025cb_ScopeTree> _1e184a280_new_scope(void);
std::tuple<jule::Bool,jule::Bool> _1e184a280_is_st(_1e15a2bb9_Token,_1e15a2bb9_Token);
jule::Bool _1e184a280_prev_is_incomplete_expr(jule::Slice<_1e15a2bb9_Token>&,jule::Int&);
std::tuple<jule::Int,jule::Bool> _1e184a280_next_st_pos(jule::Slice<_1e15a2bb9_Token>&,jule::Int);
std::tuple<jule::Slice<_1e15a2bb9_Token>,jule::Bool> _1e184a280_skip_st(jule::Int&,jule::Slice<_1e15a2bb9_Token>);
jule::Slice<jule::Ref<_1e184a280_Stmt>> _1e184a280_split_stms(jule::Slice<_1e15a2bb9_Token>&);
jule::Slice<_1e15a2bb9_Token> _1e1776d27_is_fn_call(jule::Slice<_1e15a2bb9_Token>&);
jule::Ref<_1e1776d27_CallData> _1e1776d27_get_call_data(jule::Slice<_1e15a2bb9_Token>&);
jule::Slice<_1e15a2bb9_Token> _1e1776d27_get_block_expr(jule::Slice<_1e15a2bb9_Token>&);
std::tuple<jule::Slice<_1e15a2bb9_Token>,jule::Slice<_1e15a2bb9_Token>> _1e1776d27_split_colon(jule::Slice<_1e15a2bb9_Token>&);
jule::Slice<_1e15a2bb9_Token> _1e1776d27_eliminate_comments(jule::Slice<_1e15a2bb9_Token>&);
jule::Int _1e1776d27_find_lowest_prec_op(jule::Slice<_1e15a2bb9_Token>&);
jule::Ref<_1e16025cb_IdentExpr> _1e1776d27_build_ident_expr(_1e15a2bb9_Token&);
std::tuple<jule::Slice<_1e15a2bb9_Token>,jule::Int> _1e1776d27_get_range_expr_tokens(jule::Slice<_1e15a2bb9_Token>&);
jule::Bool _1e24d74b0_check_assign_tokens(jule::Slice<_1e15a2bb9_Token>&);
_1ec8e8025_Log _1e25dc95b_make_err(jule::Int,jule::Int,jule::Ref<_1e17bebd8_File>&,jule::Str,jule::Slice<jule::Any>);
jule::Slice<_1e15a2bb9_Token> _1e25dc95b_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_1e15a2bb9_Token>&);
std::tuple<jule::Slice<_1e15a2bb9_Token>,jule::Slice<_1e15a2bb9_Token>> _1e25dc95b_range_last(jule::Slice<_1e15a2bb9_Token>&);
std::tuple<jule::Slice<jule::Slice<_1e15a2bb9_Token>>,jule::Slice<_1ec8e8025_Log>> _1e25dc95b_parts(jule::Slice<_1e15a2bb9_Token>&,jule::Uint,jule::Bool);
jule::Str _1e25dc95b_get_close_kind_of_brace(jule::Str);
_1ec8e8025_Log _1e25dc95b_compiler_err(_1e15a2bb9_Token&,jule::Str&,jule::Slice<jule::Any>);
void _1e25dc95b_push_suggestion(_1ec8e8025_Log*,jule::Str,jule::Slice<jule::Any>);
jule::Ref<_1e16025cb_Comment> _1e25dc95b_build_comment(_1e15a2bb9_Token&);
jule::Str _1e25dc95b_tokstoa(jule::Slice<_1e15a2bb9_Token>&);
jule::Ref<_1e16025cb_TypeDecl> _1e2613531_build_void_type(void);
jule::Ref<_1e16025cb_TypeDecl> _1e2613531_build_prim_type(_1e15a2bb9_Token);
std::tuple<jule::Slice<_1e15a2bb9_Token>,jule::Int> _1e2613531_split_map_range(jule::Slice<_1e15a2bb9_Token>&,jule::Int&);
void _1a37ddd88_lshift_unsig(_1a37ddd88_Const&,_1a37ddd88_Const&);
void _1a37ddd88_rshift_unsig(_1a37ddd88_Const&,_1a37ddd88_Const&);
jule::Bool _1a4422ea5_check_bit(jule::Str,jule::Int,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>);
jule::Str _1a4422ea5_real_kind_of(jule::Str);
jule::Int _1a4422ea5_bitsize_of(jule::Str);
jule::Str _1a4422ea5_int_from_bits(jule::U64);
jule::Str _1a4422ea5_uint_from_bits(jule::U64);
jule::Str _1a4422ea5_float_from_bits(jule::U64);
jule::Bool _1a4422ea5_check_bit_int(jule::Str,jule::Int);
jule::Bool _1a4422ea5_check_bit_uint(jule::Str,jule::Int);
jule::Bool _1a4422ea5_check_bit_float(jule::Str,jule::Int);
jule::U64 _1a4422ea5_bitsize_of_float(jule::F64);
jule::U64 _1a4422ea5_bitsize_of_int(jule::I64);
jule::U64 _1a4422ea5_bitsize_of_uint(jule::U64);
jule::F64 _1a4449817_min(jule::Str);
jule::F64 _1a4449817_max(jule::Str);
jule::Bool _1a4415c12_is_i8_compatible(jule::Str);
jule::Bool _1a4415c12_is_i16_compatible(jule::Str);
jule::Bool _1a4415c12_is_i32_compatible(jule::Str);
jule::Bool _1a4415c12_is_i64_compatible(jule::Str);
jule::Bool _1a4415c12_is_u8_compatible(jule::Str);
jule::Bool _1a4415c12_is_u16_compatible(jule::Str);
jule::Bool _1a4415c12_is_u32_compatible(jule::Str);
jule::Bool _1a4415c12_is_u64_compatible(jule::Str);
jule::Bool _1a4415c12_is_f32_compatible(jule::Str);
jule::Bool _1a4415c12_is_f64_compatible(jule::Str);
jule::Bool _1a4415c12_types_are_compatible(jule::Str,jule::Str);
jule::Bool _1a4415c12_is_i16_greater(jule::Str);
jule::Bool _1a4415c12_is_i32_greater(jule::Str);
jule::Bool _1a4415c12_is_i64_greater(jule::Str);
jule::Bool _1a4415c12_is_u8_greater(jule::Str);
jule::Bool _1a4415c12_is_u16_greater(jule::Str);
jule::Bool _1a4415c12_is_u32_greater(jule::Str);
jule::Bool _1a4415c12_is_u64_greater(jule::Str);
jule::Bool _1a4415c12_is_f32_greater(jule::Str);
jule::Bool _1a4415c12_is_f64_greater(jule::Str);
jule::Bool _1a4415c12_is_greater(jule::Str,jule::Str);
jule::Bool _1a44da204_is_sig_int(jule::Str);
jule::Bool _1a44da204_is_unsig_int(jule::Str);
jule::Bool _1a44da204_is_int(jule::Str);
jule::Bool _1a44da204_is_float(jule::Str);
jule::Bool _1a44da204_is_num(jule::Str);
jule::Bool _1a44da204_is_sig_num(jule::Str);
jule::Bool _1a4552e1a_is_ascii(jule::I32);
jule::I32 _1a4552e1a_to_rune(jule::Slice<jule::U8>);
jule::Str _1a4552e1a_to_raw_str(jule::Slice<jule::U8>);
jule::Str _1a4552e1a_to_str(jule::Slice<jule::U8>);
std::tuple<jule::U8,jule::Bool> _1a4552e1a_try_btoa_common_esq(jule::Slice<jule::U8>);
jule::I32 _1a4552e1a_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
jule::Slice<jule::U8> _1a4552e1a_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
jule::Bool _1e1737e81_kind_uses_generics(jule::Ref<_1a2db8ce3_TypeKind>,jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>&);
jule::Bool _1e1737e81_parameter_uses_generics(jule::Ref<_1e1737e81_Param>&,jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>&);
jule::Str _1e28b6a59_str_repeat(jule::Str,jule::Int);
jule::Str _1e28b6a59_build_doc(jule::Ref<_1e16025cb_CommentGroup>);
jule::Ref<_1a2db8ce3_TypeSymbol> _1e28b6a59_build_type(jule::Ref<_1e16025cb_TypeDecl>);
jule::Ref<_1a2c74a6c_Value> _1e28b6a59_build_expr(jule::Ref<_1e16025cb_Expr>);
jule::Ref<_1a2db8ce3_TypeAlias> _1e28b6a59_build_type_alias(jule::Ref<_1e16025cb_TypeAliasDecl>);
jule::Ref<_1e177440c_Field> _1e28b6a59_build_field(jule::Ref<_1e16025cb_FieldDecl>);
jule::Slice<jule::Ref<_1e177440c_Field>> _1e28b6a59_build_fields(jule::Slice<jule::Ref<_1e16025cb_FieldDecl>>&);
jule::Ref<_1e177440c_Struct> _1e28b6a59_build_struct(jule::Ref<_1e16025cb_StructDecl>);
jule::Ref<_1e1737e81_Param> _1e28b6a59_build_param(jule::Ref<_1e16025cb_ParamDecl>);
jule::Slice<jule::Ref<_1e1737e81_Param>> _1e28b6a59_build_params(jule::Slice<jule::Ref<_1e16025cb_ParamDecl>>&);
jule::Ref<_1e1737e81_RetType> _1e28b6a59_build_ret_type(jule::Ref<_1e16025cb_RetTypeDecl>);
jule::Ref<_1e1737e81_Fn> _1e28b6a59_build_fn(jule::Ref<_1e16025cb_FnDecl>);
jule::Slice<jule::Ref<_1e1737e81_Fn>> _1e28b6a59_build_methods(jule::Slice<jule::Ref<_1e16025cb_FnDecl>>&);
jule::Ref<_1e2a1e563_Trait> _1e28b6a59_build_trait(jule::Ref<_1e16025cb_TraitDecl>);
jule::Ref<_1e2a21d4b_EnumItem> _1e28b6a59_build_enum_item(jule::Ref<_1e16025cb_EnumItemDecl>);
jule::Slice<jule::Ref<_1e2a21d4b_EnumItem>> _1e28b6a59_build_enum_items(jule::Slice<jule::Ref<_1e16025cb_EnumItemDecl>>&);
jule::Ref<_1e2a21d4b_Enum> _1e28b6a59_build_enum(jule::Ref<_1e16025cb_EnumDecl>);
jule::Ref<_1ba80e105_Var> _1e28b6a59_build_var(jule::Ref<_1e16025cb_VarDecl>);
jule::Slice<jule::Ref<_1ba80e105_Var>> _1e28b6a59_build_vars(jule::Slice<jule::Ref<_1e16025cb_VarDecl>>);
jule::Ref<_1e2a276ae_Impl> _1e28b6a59_build_impl(jule::Ref<_1e16025cb_Impl>);
jule::Ref<_1e2a2e210_ScopeChecker> _1e2a2e210_new_scope_checker_base(jule::Ref<_1e2a7c2a2_Sema>,jule::Ref<_1e1737e81_FnIns>);
jule::Ref<_1e2a2e210_ScopeChecker> _1e2a2e210_new_scope_checker(jule::Ref<_1e2a7c2a2_Sema>,jule::Ref<_1e1737e81_FnIns>);
jule::Ref<_1e2a2e210_ScopeLabel> _1e2a2e210_find_label_parent(jule::Str,jule::Ref<_1e2a2e210_ScopeChecker>);
jule::Bool _1e2a2e210_stmt_is_goto_scope(jule::Any&,jule::Ref<_1e2a2e210_Scope>&);
jule::Int _1e2a2e210_count_match_type(jule::Ref<_1e2a2e210_Match>,jule::Ref<_1a2db8ce3_TypeKind>);
jule::Slice<jule::Ref<_1a2c74a6c_Data>> _1e2a2e210_get_datas_from_tuple_data(jule::Ref<_1a2c74a6c_Data>);
jule::Slice<jule::Any> _1e2a2e210_get_expr_models(jule::Any);
jule::Bool _1e2a2e210_check_mut(jule::Ref<_1e2a7c2a2_Sema>,jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);
jule::Bool _1e2a2e210_check_assign(jule::Ref<_1e2a7c2a2_Sema>,jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>,_1e15a2bb9_Token);
jule::Bool _1e2a2e210_is_valid_ast_st_for_next_st(jule::Any);
jule::Bool _1e2a2e210_is_valid_st_for_next_st(jule::Any);
jule::Bool _1e2a2e210_st_is_def(jule::Any);
jule::Ref<_1ba80e105_Var> _1e2a7b966_find_var_in_package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>&,jule::Str,jule::Bool);
jule::Ref<_1a2db8ce3_TypeAlias> _1e2a7b966_find_type_alias_in_package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>&,jule::Str,jule::Bool);
jule::Ref<_1e177440c_Struct> _1e2a7b966_find_struct_in_package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>&,jule::Str,jule::Bool);
jule::Ref<_1e1737e81_Fn> _1e2a7b966_find_fn_in_package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>&,jule::Str,jule::Bool);
jule::Ref<_1e2a1e563_Trait> _1e2a7b966_find_trait_in_package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>&,jule::Str);
jule::Ref<_1e2a21d4b_Enum> _1e2a7b966_find_enum_in_package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>&,jule::Str);
jule::Bool _1e2a7c2a2_is_valid_model_for_ref(jule::Any);
_1ec8e8025_Log _1e2a7c2a2_compiler_err(_1e15a2bb9_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
jule::Bool _1e2a7c2a2_imp_is_lookupable(jule::Ref<_1e2a7b966_ImportInfo>&,jule::Str);
jule::Slice<jule::Ref<_1ba80e105_Var>> _1e2a7c2a2_build_ret_vars(jule::Ref<_1e1737e81_FnIns>&);
jule::Slice<jule::Ref<_1ba80e105_Var>> _1e2a7c2a2_build_param_vars(jule::Ref<_1e1737e81_FnIns>&);
jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>> _1e2a7c2a2_build_generic_type_aliases(jule::Ref<_1e1737e81_FnIns>&);
jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_find_file(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>&,jule::Ref<_1e17bebd8_File>&);
std::tuple<jule::Bool,jule::Bool> _1e2a7c2a2_conditional_has_ret(jule::Ref<_1e2a2e210_Conditional>);
jule::Bool _1e2a7c2a2_match_has_ret(jule::Ref<_1e2a2e210_Match>);
std::tuple<jule::Bool,jule::Bool,jule::Bool> _1e2a7c2a2___has_ret(jule::Ref<_1e2a2e210_Scope>);
jule::Bool _1e2a7c2a2_has_ret(jule::Ref<_1e2a2e210_Scope>);
void _1e2a7c2a2_push_suggestion(_1ec8e8025_Log*,jule::Str,jule::Slice<jule::Any>);
jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>> _1a2c73c9c_get_fn_result_types(jule::Ref<_1e1737e81_FnIns>&);
jule::Bool _1a2c73c9c_trait_has_reference_receiver(jule::Ref<_1e2a1e563_Trait>&);
jule::Bool _1a2c73c9c_float_assignable(jule::Str,jule::Ref<_1a2c74a6c_Data>&);
jule::Bool _1a2c73c9c_sig_assignable(jule::Str,jule::Ref<_1a2c74a6c_Data>&);
jule::Bool _1a2c73c9c_unsig_assignable(jule::Str,jule::Ref<_1a2c74a6c_Data>&);
jule::Bool _1a2c73c9c_int_assignable(jule::Str,jule::Ref<_1a2c74a6c_Data>&);
jule::Any _1a2c74a6c_find_builtins_import(jule::Str,jule::Ref<_1e2a7b966_ImportInfo>);
void _1a2c74a6c_make_struct_lit_alloc(jule::Ref<_1a2c74a6c_Data>&,jule::Ref<_1e2a30c17_StructLitExprModel>&);
jule::Any _1a2c74a6c_find_builtins_sema(jule::Str,jule::Ref<_1e2a7c2a2_Sema>);
jule::Bool _1a2c74a6c_is_ok_for_shifting(jule::Ref<_1a2c74a6c_Data>);
jule::Bool _1a2c74a6c_is_instanced_struct(jule::Ref<_1e177440c_StructIns>);
jule::Bool _1a2c74a6c_is_ptr_arithmetic_compatible_int(jule::Ref<_1a2c74a6c_Data>&);
void _1a2c74a6c_normalize_bitsize(jule::Ref<_1a2c74a6c_Data>);
void _1a2c74a6c_normalize_type(jule::Ref<_1a2c74a6c_Data>);
void _1a2c74a6c_apply_cast_kind_model(jule::Ref<_1a2c74a6c_Data>);
void _1a2c74a6c_apply_cast_kind(jule::Ref<_1a2c74a6c_Data>);
jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_build_void_data(void);
jule::Str _1a2c74a6c_kind_by_bitsize(jule::Any);
jule::Str _1a2c74a6c_check_data_for_integer_indexing(jule::Ref<_1a2c74a6c_Data>);
jule::Bool _1a2db8ce3_can_get_ptr(jule::Ref<_1a2c74a6c_Data>&);
jule::Bool _1a2db8ce3_is_valid_for_ref_type(jule::Ref<_1a2db8ce3_TypeKind>&);
jule::Bool _1a2db8ce3_is_valid_for_ref(jule::Ref<_1a2db8ce3_TypeKind>&);
jule::Str _1a2db8ce3_build_link_path_by_tokens(jule::Slice<_1e15a2bb9_Token>&);
jule::Ref<_1a2db8ce3_Prim> _1a2db8ce3_build_prim_type(jule::Str);
jule::Ref<_1e177440c_Struct> _1a2db8ce3_get_struct_from_kind(jule::Ref<_1a2db8ce3_TypeKind>);
jule::Bool _1a2db8ce3_is_prim(jule::Str);
std::tuple<jule::Ref<_1a2d05801_SymbolTable>,jule::Slice<_1ec8e8025_Log>> _1a36c926d_build_symbols(jule::Ref<_1e15a53c5_Ast>&,jule::Trait<_1e2a7b966_Importer>&,jule::Ref<_1e28b6a59_SymbolBuilder>);
std::tuple<jule::Ref<_1e2a7b966_Package>,jule::Slice<_1ec8e8025_Log>> _1a36c926d___analyze_package(jule::Slice<jule::Ref<_1e15a53c5_Ast>>&,jule::Trait<_1e2a7b966_Importer>&,jule::Int&);
std::tuple<jule::Ref<_1e2a7b966_Package>,jule::Slice<_1ec8e8025_Log>> _1a36c926d_analyze_package(jule::Slice<jule::Ref<_1e15a53c5_Ast>>,jule::Trait<_1e2a7b966_Importer>,jule::Int);
std::tuple<jule::Ref<_1a2d05801_SymbolTable>,jule::Slice<_1ec8e8025_Log>> _1a36c926d_analyze_file(jule::Ref<_1e15a53c5_Ast>,jule::Trait<_1e2a7b966_Importer>,jule::Int);
void _1a36e0bad_init(void);
jule::Ref<_1e1737e81_FnIns> _1a36e0bad_find_builtin_fn(jule::Str);
jule::Ref<_1a2db8ce3_TypeAlias> _1a36e0bad_find_builtin_type_alias(jule::Str);
jule::Ref<_1e2a1e563_Trait> _1a36e0bad_find_builtin_trait(jule::Str);
jule::Any _1a36e0bad_find_builtin_def(jule::Str);
jule::Any _1a36e0bad_find_builtin_def_std_mem(jule::Str);
jule::Any _1a36e0bad_find_builtin_def_std_jule_integrated(jule::Str);
jule::Any _1a36e0bad_find_package_builtin_def(jule::Str,jule::Str);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_common_plain(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_common(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_common_mut(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_out(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_outln(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_new(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_real(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_drop(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_panic(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_make(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_append(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_copy(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_recover(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_clone(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_std_mem_size_of(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_std_mem_align_of(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_std_jule_integrated_to_str(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&);
std::tuple<jule::Bool,jule::Bool> _1e1184c1e_check_os(jule::Str);
std::tuple<jule::Bool,jule::Bool> _1e1184c1e_check_arch(jule::Str);
jule::Bool _1e1184c1e_is_pass_file_annotation(jule::Str);
jule::Bool _1e1213066_eval_directive_ident(jule::Str);
jule::Bool _1e1213066_eval_directive_part(jule::Str);
jule::Slice<jule::Str> _1e1213066_split_operans(jule::Str,jule::Str);
jule::Bool _1e1213066_eval_directive_expr(jule::Str);
void _1e12e1320_set_os_flags(void);
void _1e12e1320_set_arch_flags(void);
void _1e12e1320_init_flags(void);
void _1e12e1430_exit_err(jule::Str);
jule::Slice<jule::U8> _1e12e1430_read_buff(jule::Str);
_1ec8e8025_Log _1e12e1430_flat_compiler_err(jule::Str);
std::tuple<jule::Slice<jule::Ref<_1e15268c9_DirEntry>>,jule::Str> _1e12e1430_read_package_dirents(jule::Str);
jule::Str _1e12e1430_concat_all_parts(jule::Slice<jule::Str>);
jule::Bool _1e12e1430_is_pass_build_directives(jule::Ref<_1e15a53c5_Ast>&);
void _1e10d0a8d_push_passes(jule::Ref<_1e2a7b966_Package>&,jule::Slice<jule::Str>&);
jule::Slice<jule::Str> _1e10d0a8d_get_all_unique_passes(jule::Ref<_1e2a7b966_Package>&,jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>>);
jule::Bool _1ec943e0b_is_exist_0(jule::Slice<jule::Any>,jule::Ref<_1e1737e81_FnIns>);
jule::Bool _1ec943e0b_is_exist_1(jule::Slice<jule::Any>,jule::Ref<_1ba80e105_Var>);
jule::Bool _1ec943e0b_is_exist_2(jule::Slice<jule::Any>,jule::Ref<_1e177440c_StructIns>);
jule::Bool _1ec943e0b_is_exist_3(jule::Slice<jule::Any>,jule::Ref<_1e2a1e563_Trait>);
jule::Bool _1ec943e0b_is_exist_ref(jule::Slice<jule::Any>,jule::Any);
jule::Bool _1ec943e0b_is_dead(jule::Any);
void _1ec943e0b_drop_ref(jule::Slice<jule::Any>&,jule::Int);
jule::Bool _1ec943e0b_is_all_references_are_dead_0(jule::Ref<_1e28b6a59_ReferenceStack>);
jule::Bool _1ec943e0b_is_all_references_are_dead_1(jule::Ref<_1e28b6a59_ReferenceStack>);
jule::Bool _1ec943e0b_is_all_references_are_dead_2(jule::Ref<_1e28b6a59_ReferenceStack>);
jule::Bool _1ec943e0b_is_fn_dead(jule::Ref<_1e1737e81_FnIns>);
jule::Bool _1ec943e0b_is_var_dead(jule::Ref<_1ba80e105_Var>);
jule::Bool _1ec943e0b_kind_is_dead(jule::Ref<_1a2db8ce3_TypeKind>);
jule::Bool _1ec943e0b_is_any_generic_is_dead(jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>&);
jule::Bool _1ec943e0b_is_struct_dead(jule::Ref<_1e177440c_StructIns>);
jule::Bool _1ec943e0b_is_trait_dead(jule::Ref<_1e2a1e563_Trait>);
void _1ec943e0b_eliminate_dead_functions(jule::Slice<jule::Ref<_1e1737e81_Fn>>&);
void _1ec943e0b_eliminate_dead_globals(jule::Ref<_1e2a7b966_Package>&);
void _1ec943e0b_eliminate_dead_functions_package(jule::Ref<_1e2a7b966_Package>&);
void _1ec943e0b_eliminate_dead_structs(jule::Ref<_1e2a7b966_Package>&);
void _1ec943e0b_eliminate_dead_traits(jule::Ref<_1e2a7b966_Package>&);
void _1ec943e0b_catch_alive_init(jule::Ref<_1e2a7b966_Package>&);
void _1ec943e0b_eliminate_package(jule::Ref<_1e2a7b966_Package>&);
void _1ec943e0b_eliminate(jule::Ref<_1e10d0a8d_IR>&);
void _1e1037b7c_eliminate_dead_code_of_scope(jule::Ref<_1e2a2e210_Scope>);
jule::U64 _1a48b1542_unix(void);
jule::U64 _1a48b1542_unix_year_to_seconds(jule::Uint,jule::Bool&);
jule::U64 _1a48b1542_unix_month_to_seconds(jule::Uint,jule::Bool);
jule::Bool _1ba858528_iter_expr_is_copy_optimizable(jule::Ref<_1a2c74a6c_Data>&,jule::Ref<_1ba80e105_Var>&);
jule::Str _1ba858528_gen_range_index_iter(jule::Ref<_1e2a2e210_RangeIter>&);
jule::Str _1ba858528_gen_range_hashmap_iter(jule::Ref<_1e2a2e210_RangeIter>&);
jule::Str _1ba858528_gen_if(jule::Ref<_1e2a2e210_If>);
jule::Str _1ba858528_gen_conditional(jule::Ref<_1e2a2e210_Conditional>);
jule::Str _1ba858528_gen_inf_iter(jule::Ref<_1e2a2e210_InfIter>);
jule::Str _1ba858528_gen_while_iter(jule::Ref<_1e2a2e210_WhileIter>);
jule::Str _1ba858528_gen_range_iter(jule::Ref<_1e2a2e210_RangeIter>);
jule::Str _1ba858528_gen_cont(jule::Ref<_1e2a2e210_ContSt>);
jule::Str _1ba858528_gen_label(jule::Ref<_1e2a2e210_Label>);
jule::Str _1ba858528_gen_goto(jule::Ref<_1e2a2e210_GotoSt>);
jule::Str _1ba858528_gen_postfix(jule::Ref<_1e2a2e210_Postfix>);
jule::Str _1ba858528_gen_div_by_zero_assign(jule::Ref<_1e2a2e210_Assign>);
jule::Str _1ba858528_gen_assign(jule::Ref<_1e2a2e210_Assign>);
jule::Str _1ba858528_gen_multi_assign(jule::Ref<_1e2a2e210_MultiAssign>);
jule::Str _1ba858528_gen_case(jule::Ref<_1e2a2e210_Match>,jule::Ref<_1e2a2e210_Case>);
jule::Str _1ba858528_gen_match(jule::Ref<_1e2a2e210_Match>);
jule::Str _1ba858528_gen_fall_st(jule::Ref<_1e2a2e210_FallSt>);
jule::Str _1ba858528_gen_break_st(jule::Ref<_1e2a2e210_BreakSt>);
jule::Str _1ba858528_gen_ret_vars(jule::Ref<_1e2a2e210_RetSt>);
jule::Str _1ba858528_gen_ret_expr_tuple(jule::Ref<_1e2a2e210_RetSt>);
jule::Str _1ba858528_gen_ret_expr(jule::Ref<_1e2a2e210_RetSt>);
jule::Str _1ba858528_gen_ret_st(jule::Ref<_1e2a2e210_RetSt>);
jule::Str _1ba858528_gen_ret_st_with_defaults(jule::Ref<_1a2db8ce3_TypeKind>);
jule::Str _1ba858528_gen_recover(jule::Ref<_1e2a2e210_Recover>);
jule::Str _1ba858528_gen_data_expr(jule::Ref<_1a2c74a6c_Data>);
jule::Str _1ba858528_gen_scope_var(jule::Ref<_1ba80e105_Var>);
jule::Str _1ba858528_gen_st(jule::Any);
jule::Str _1ba858528_gen_scope(jule::Ref<_1e2a2e210_Scope>);
jule::Str _1ba858528_gen_fn_scope(jule::Ref<_1e1737e81_FnIns>);
jule::Str _1ba858528_gen_method_scope(jule::Ref<_1e1737e81_FnIns>);
jule::Str _1a2c9bae9_concat_all_parts(jule::Slice<jule::Str>);
jule::Str _1a2c9bae9_get_accessor(jule::Ref<_1a2db8ce3_TypeKind>&);
jule::Str _1a2c9bae9_decompose_common_esq(jule::U8);
jule::Str _1a2c9bae9_sbtoa(jule::U8);
jule::Str _1a2c9bae9_get_str_model(jule::Ref<_1a37ddd88_Const>&);
jule::Str _1a2c9bae9_get_bool_model(jule::Ref<_1a37ddd88_Const>&);
jule::Str _1a2c9bae9_get_nil_model(void);
jule::Str _1a2c9bae9_gen_float_special_cases(jule::F64&);
jule::Str _1a2c9bae9_ftoa(jule::F64,jule::Int);
jule::Str _1a2c9bae9_get_f32_model(jule::Ref<_1a37ddd88_Const>&);
jule::Str _1a2c9bae9_get_f64_model(jule::Ref<_1a37ddd88_Const>&);
jule::Str _1a2c9bae9_get_float_model(jule::Ref<_1a2c74a6c_Data>&);
jule::Str _1a2c9bae9_i64toa(jule::I64);
jule::Str _1a2c9bae9_get_i64_model(jule::Ref<_1a37ddd88_Const>&);
jule::Str _1a2c9bae9_u64toa(jule::U64);
jule::Str _1a2c9bae9_get_u64_model(jule::Ref<_1a37ddd88_Const>);
jule::Str _1a2c9bae9_gen_const_expr(jule::Ref<_1a2c74a6c_Data>);
jule::Str _1a2c9bae9_gen_const_expr_model(jule::Ref<_1a37ddd88_Const>);
jule::Str _1a2c9bae9_gen_div_by_zero_binop_expr_model(jule::Str,jule::Any,jule::Any);
jule::Str _1a2c9bae9_gen_binop_expr_model(jule::Ref<_1e2a30c17_BinopExprModel>);
jule::Str _1a2c9bae9_gen_var_expr_model(jule::Ref<_1ba80e105_Var>);
jule::Str _1a2c9bae9_gen_struct_expr_model(jule::Ref<_1e177440c_Struct>);
jule::Str _1a2c9bae9_gen_struct_ins_expr_model(jule::Ref<_1e177440c_StructIns>);
jule::Str _1a2c9bae9_gen_unary_expr_model(jule::Ref<_1e2a30c17_UnaryExprModel>);
jule::Str _1a2c9bae9_gen_get_ref_ptr_expr_model(jule::Ref<_1e2a30c17_GetRefPtrExprModel>);
jule::Str _1a2c9bae9_gen_cpp_struct_lit_expr_model(jule::Ref<_1e2a30c17_StructLitExprModel>);
jule::Str _1a2c9bae9_gen_struct_lit_expr_model(jule::Ref<_1e2a30c17_StructLitExprModel>);
jule::Str _1a2c9bae9_gen_alloc_struct_lit_expr_model(jule::Ref<_1e2a30c17_AllocStructLitExprModel>);
jule::Str _1a2c9bae9_gen_casting_expr_model(jule::Ref<_1e2a30c17_CastingExprModel>);
jule::Str _1a2c9bae9_gen_arg_expr_models(jule::Slice<jule::Any>);
jule::Str _1a2c9bae9_gen_expr_model_for_call(jule::Any);
jule::Str _1a2c9bae9_gen_fn_call_expr_model(jule::Ref<_1e2a30c17_FnCallExprModel>);
jule::Str _1a2c9bae9_gen_slice_expr_model(jule::Ref<_1e2a30c17_SliceExprModel>);
jule::Str _1a2c9bae9_gen_indexing_expr_model(jule::Ref<_1e2a30c17_IndexigExprModel>);
jule::Str _1a2c9bae9_gen_anon_fn_expr_model(jule::Ref<_1e2a30c17_AnonFnExprModel>);
jule::Str _1a2c9bae9_gen_map_expr_model(jule::Ref<_1e2a30c17_MapExprModel>);
jule::Str _1a2c9bae9_gen_slicing_expr_model(jule::Ref<_1e2a30c17_SlicingExprModel>);
jule::Str _1a2c9bae9_gen_trait_sub_ident_expr_model(jule::Ref<_1e2a30c17_TraitSubIdentExprModel>);
jule::Str _1a2c9bae9_gen_struct_sub_ident_expr_model(jule::Ref<_1e2a30c17_StructSubIdentExprModel>);
jule::Str _1a2c9bae9_gen_common_ident_expr_model(jule::Ref<_1e2a30c17_CommonIdentExprModel>);
jule::Str _1a2c9bae9_gen_common_sub_ident_expr_model(jule::Ref<_1e2a30c17_CommonSubIdentExprModel>);
jule::Str _1a2c9bae9_gen_array_expr_model(jule::Ref<_1e2a30c17_ArrayExprModel>);
jule::Str _1a2c9bae9_gen_fn_ins_expr_model_common(jule::Ref<_1e1737e81_FnIns>);
jule::Str _1a2c9bae9_gen_fn_ins_expr_model(jule::Ref<_1e1737e81_FnIns>);
jule::Str _1a2c9bae9_gen_tuple_expr_model(jule::Ref<_1e2a30c17_TupleExprModel>);
jule::Str _1a2c9bae9_gen_builtin_new_call_expr_model(jule::Ref<_1e2a30c17_BuiltinNewCallExprModel>);
jule::Str _1a2c9bae9_gen_builtin_out_call_expr_model(jule::Ref<_1e2a30c17_BuiltinOutCallExprModel>);
jule::Str _1a2c9bae9_gen_builtin_outln_call_expr_model(jule::Ref<_1e2a30c17_BuiltinOutlnCallExprModel>);
jule::Str _1a2c9bae9_gen_builtin_real_call_expr_model(jule::Ref<_1e2a30c17_BuiltinRealCallExprModel>);
jule::Str _1a2c9bae9_gen_builtin_drop_call_expr_model(jule::Ref<_1e2a30c17_BuiltinDropCallExprModel>);
jule::Str _1a2c9bae9_gen_builtin_panic_call_expr_model(jule::Ref<_1e2a30c17_BuiltinPanicCallExprModel>);
jule::Str _1a2c9bae9_gen_builtin_make_call_expr_model(jule::Ref<_1e2a30c17_BuiltinMakeCallExprModel>);
jule::Str _1a2c9bae9_gen_builtin_append_call_expr_model_assign_opt(jule::Bool,jule::Str&,jule::Ref<_1a2db8ce3_TypeKind>&,jule::Ref<_1e2a30c17_SliceExprModel>&,jule::Ref<_1e2a30c17_BuiltinAppendCallExprModel>&);
std::tuple<jule::Str,jule::Bool> _1a2c9bae9_gen_builtin_append_call_expr_model_assign(jule::Any,jule::Ref<_1e2a30c17_BuiltinAppendCallExprModel>);
jule::Str _1a2c9bae9_gen_builtin_append_call_expr_model(jule::Ref<_1e2a30c17_BuiltinAppendCallExprModel>);
jule::Str _1a2c9bae9_gen_builtin_clone_call_expr_model(jule::Ref<_1e2a30c17_BuiltinCloneCallExprModel>);
jule::Str _1a2c9bae9_gen_sizeof_expr_model(jule::Ref<_1e2a30c17_SizeofExprModel>);
jule::Str _1a2c9bae9_gen_alignof_expr_model(jule::Ref<_1e2a30c17_AlignofExprModel>);
jule::Str _1a2c9bae9_gen_rune_expr_model(jule::Ref<_1e2a30c17_RuneExprModel>);
jule::Str _1a2c9bae9_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_1e2a30c17_BuiltinErrorTraitSubIdentExprModel>);
jule::Str _1a2c9bae9_gen_explicit_deref_expr_model(jule::Ref<_1e2a30c17_ExplicitDerefExprModel>);
jule::Str _1a2c9bae9_gen_struct_static_ident_expr_model(jule::Ref<_1e2a30c17_StructStaticIdentExprModel>);
jule::Str _1a2c9bae9_gen_integrated_to_str_expr_model(jule::Ref<_1e2a30c17_IntegratedToStrExprModel>);
jule::Str _1a2c9bae9_gen_ternary_expr_model(jule::Ref<_1e2a30c17_TernaryExprModel>);
jule::Str _1a2c9bae9_gen_expr_model(jule::Any);
jule::Str _1a2c9bae9_gen_expr(jule::Any);
jule::Str _1a2c9bae9_gen_val(jule::Ref<_1a2c74a6c_Value>);
jule::Str _1a2c9bae9_get_init_expr(jule::Ref<_1a2db8ce3_TypeKind>);
jule::Str _1a2c75881_get_derive_fn_decl_clone(jule::Ref<_1e177440c_Struct>&);
jule::Str _1a2c75881_get_derive_fn_def_clone(jule::Ref<_1e177440c_Struct>&);
jule::Str _1a474688e_as_ident(jule::Str);
jule::Str _1a474688e_as_jt(jule::Str);
jule::Str _1a474688e_get_addr_as_ident(jule::Uintptr);
jule::Str _1a474688e_as_out_ident(jule::Str,jule::Uintptr);
jule::Str _1a474688e_as_local_ident(jule::Int,jule::Int,jule::Str);
jule::Str _1a474688e_fn_out_ident(jule::Ref<_1e1737e81_Fn>&);
jule::Str _1a474688e_fn_ins_out_ident(jule::Ref<_1e1737e81_FnIns>&);
jule::Str _1a474688e_trait_out_ident(jule::Ref<_1e2a1e563_Trait>);
jule::Str _1a474688e_param_out_ident(jule::Ref<_1e1737e81_Param>&);
jule::Str _1a474688e_struct_out_ident(jule::Ref<_1e177440c_Struct>&);
jule::Str _1a474688e_struct_ins_out_ident(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a474688e_field_out_ident(jule::Ref<_1e177440c_Field>&);
jule::Str _1a474688e_var_out_ident(jule::Ref<_1ba80e105_Var>);
jule::Str _1a474688e_iter_begin_label_ident(jule::Uintptr);
jule::Str _1a474688e_iter_end_label_ident(jule::Uintptr);
jule::Str _1a474688e_iter_next_label_ident(jule::Uintptr);
jule::Str _1a474688e_label_ident(jule::Str);
jule::Str _1a474688e_match_end_label_ident(jule::Uintptr);
jule::Str _1a474688e_case_begin_label_ident(jule::Uintptr);
jule::Str _1a474688e_case_end_label_ident(jule::Uintptr);
jule::Bool _1a4772b73_any_equals_0(jule::Ref<_1ba80e105_Var>&,jule::Any&);
jule::Bool _1a4772b73_any_equals_1(jule::Ref<_1e177440c_FieldIns>&,jule::Any&);
jule::Ref<_1e16025cb_Directive> _1a4772b73_find_directive(jule::Slice<jule::Ref<_1e16025cb_Directive>>&,jule::Str);
jule::Bool _1a4772b73_has_directive(jule::Slice<jule::Ref<_1e16025cb_Directive>>&,jule::Str);
jule::Str _1a4772b73_gen_prim_kind(jule::Ref<_1a2db8ce3_Prim>);
jule::Str _1a4772b73_gen_tuple_kind(jule::Ref<_1a2db8ce3_Tuple>);
jule::Str _1a4772b73_as_ref_kind(jule::Str);
jule::Str _1a4772b73_gen_ref_kind(jule::Ref<_1a2db8ce3_Ref>);
jule::Str _1a4772b73_gen_ptr_kind(jule::Ref<_1a2db8ce3_Ptr>);
jule::Str _1a4772b73_gen_enum_kind(jule::Ref<_1e2a21d4b_Enum>);
jule::Str _1a4772b73_as_slice_kind(jule::Ref<_1a2db8ce3_TypeKind>);
jule::Str _1a4772b73_gen_slice_kind(jule::Ref<_1a2db8ce3_Slc>);
jule::Str _1a4772b73_gen_map_kind(jule::Ref<_1a2db8ce3_Map>);
jule::Str _1a4772b73_gen_trait_kind_from_ident(jule::Str);
jule::Str _1a4772b73_gen_trait_kind(jule::Ref<_1e2a1e563_Trait>);
jule::Str _1a4772b73_gen_struct_kind(jule::Ref<_1e177440c_Struct>);
jule::Str _1a4772b73_gen_struct_kind_ins(jule::Ref<_1e177440c_StructIns>);
jule::Str _1a4772b73_gen_array_kind(jule::Ref<_1a2db8ce3_Arr>);
jule::Str _1a4772b73_gen_fn_anon_decl(jule::Ref<_1e1737e81_FnIns>);
jule::Str _1a4772b73_gen_fn_kind(jule::Ref<_1e1737e81_FnIns>);
jule::Str _1a4772b73_gen_type_kind(jule::Ref<_1a2db8ce3_TypeKind>);
void _1a4770896_add_indent(void);
void _1a4770896_done_indent(void);
jule::Str _1a4770896_indent(void);
jule::Bool _1a4770896_is_cpp_header_file(jule::Str);
jule::Str _1a4770896_gen_links(jule::Ref<_1e10d0a8d_IR>&);
jule::Str _1a4770896_gen_fn_result(jule::Ref<_1e1737e81_Fn>&);
jule::Str _1a4770896_gen_fn_ins_result(jule::Ref<_1e1737e81_FnIns>&);
jule::Str _1a4770896_gen_param_prototype(jule::Ref<_1e1737e81_Param>&);
jule::Str _1a4770896_gen_param_ins(jule::Ref<_1e1737e81_ParamIns>&);
jule::Str _1a4770896_gen_param_ins_prototype(jule::Ref<_1e1737e81_ParamIns>&);
jule::Str _1a4770896_gen_param(jule::Ref<_1e1737e81_Param>&);
jule::Str _1a4770896_gen_params(jule::Slice<jule::Ref<_1e1737e81_Param>>&);
jule::Str _1a4770896_gen_params_ins(jule::Slice<jule::Ref<_1e1737e81_ParamIns>>&);
jule::Str _1a4770896_gen_params_prototypes(jule::Slice<jule::Ref<_1e1737e81_ParamIns>>&);
jule::Str _1a4770896_gen_trait(jule::Ref<_1e2a1e563_Trait>&);
jule::Str _1a4770896_gen_traits_tbl(jule::Ref<_1a2d05801_SymbolTable>&);
jule::Str _1a4770896_gen_traits_pkg(jule::Ref<_1e2a7b966_Package>&);
jule::Str _1a4770896_gen_traits(jule::Ref<_1e10d0a8d_IR>&);
jule::Str _1a4770896_gen_trait_prototype(jule::Ref<_1e2a1e563_Trait>&);
jule::Str _1a4770896_gen_trait_prototypes(jule::Ref<_1e2a7b966_Package>&);
jule::Str _1a4770896_gen_struct_plain_prototype(jule::Ref<_1e177440c_Struct>&);
jule::Str _1a4770896_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_1e177440c_Struct>>&);
jule::Str _1a4770896_gen_struct_traits(jule::Ref<_1e177440c_Struct>&);
jule::Str _1a4770896_gen_field_decl(jule::Ref<_1e177440c_FieldIns>&);
jule::Str _1a4770896_gen_struct_self_field_type_kind(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a4770896_gen_struct_self_field(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a4770896_gen_struct_self_field_init_st(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a4770896_gen_struct_constructor(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a4770896_gen_struct_destructor(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a4770896_gen_struct_operators(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a4770896_gen_struct_derive_defs_prototypes(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a4770896_gen_struct_ins_prototype(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a4770896_gen_struct_prototype(jule::Ref<_1e177440c_Struct>&);
jule::Str _1a4770896_gen_struct_prototypes(jule::Slice<jule::Ref<_1e177440c_Struct>>&);
jule::Str _1a4770896_gen_fn_decl_head(jule::Ref<_1e1737e81_FnIns>&,jule::Bool);
jule::Str _1a4770896_gen_fn_prototype(jule::Ref<_1e1737e81_Fn>&,jule::Bool);
jule::Str _1a4770896_gen_fn_prototypes(jule::Ref<_1e2a7b966_Package>&);
jule::Str _1a4770896_gen_prototypes(jule::Ref<_1e10d0a8d_IR>&);
jule::Str _1a4770896_gen_var_init_expr(jule::Ref<_1ba80e105_Var>&,jule::Str);
jule::Str _1a4770896_gen_var(jule::Ref<_1ba80e105_Var>);
jule::Str _1a4770896_gen_globals(jule::Slice<jule::Ref<_1ba80e105_Var>>&);
jule::Str _1a4770896_gen_fn(jule::Ref<_1e1737e81_Fn>&);
jule::Str _1a4770896_gen_pkg_fns(jule::Ref<_1e2a7b966_Package>&);
jule::Str _1a4770896_gen_struct_method_defs(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a4770896_gen_struct_ostream(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a4770896_gen_struct_derive_defs(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a4770896_gen_struct_ins(jule::Ref<_1e177440c_StructIns>&);
jule::Str _1a4770896_gen_struct(jule::Ref<_1e177440c_Struct>&);
jule::Str _1a4770896_gen_structs(jule::Slice<jule::Ref<_1e177440c_Struct>>&);
jule::Str _1a4770896_gen_fns(jule::Ref<_1e10d0a8d_IR>&);
void _1a4770896_push_init(jule::Ref<_1e2a7b966_Package>&,jule::Str&);
jule::Str _1a4770896_gen_init_caller(jule::Ref<_1e10d0a8d_IR>&);
void _1a4770896_append_standard(jule::Str&,jule::Str,jule::Str);
jule::Str _1a4770896_gen(jule::Ref<_1e10d0a8d_IR>&);
jule::Str _1ec8a717c_str_repeat(jule::Str,jule::Int);
void _1ec8a717c_print_error_message(jule::Str);
void _1ec8a717c_help(jule::Slice<jule::Str>&);
void _1ec8a717c_version(jule::Slice<jule::Str>&);
void _1ec8a717c_tool_distos(void);
void _1ec8a717c_tool_distarch(void);
void _1ec8a717c_tool(jule::Slice<jule::Str>&);
void _1ec8a717c_julenv(void);
jule::Bool _1ec8a717c_process_command(jule::Slice<jule::Str>&);
void _1ec8a717c_exit_err(jule::Str);
void entry_point(void);
void _1ec8c2285___init_common(void);
void _1ec8d7ae7___enable_vtp(void);
void _1ec8d7ae7_init(void);
jule::Int _1ec8e355e_system(jule::Str);
void _1ec8e355e_write_output(jule::Str,jule::Str);
void _1ec8e355e_clear_objects(void);
void _1ec8e355e_compile_ir(jule::Str,jule::Str);
void _1ec8e355e_do_spell(jule::Str,jule::Str,jule::Str);
jule::Bool _1ec8e355e_is_cpp_source_file(jule::Str);
std::tuple<jule::Str,jule::Str> _1ec8e355e_gen_compile_cmd(jule::Str,jule::Ref<_1e10d0a8d_IR>&);
jule::Str _1ec8e355e_get_compile_path(void);
void _1ec8e355e_apply_target_independent_optimizations(jule::Ref<_1e10d0a8d_IR>&);
void _1ec8e355e_check_compiler_flag(void);
void _1ec8e355e_check_target_arch(jule::Str);
void _1ec8e355e_check_target_os(jule::Str);
void _1ec8e355e_check_target_flag(void);
void _1ec8e355e_check_opt_flag(void);
void _1ec8e355e_check_flags(void);
void _1ec8e355e_compile_command(jule::Slice<jule::Str>&);


static jule::Ref<_1ba8540c3_FlagSet> _1ec8e355e_flagset = _1ba8540c3_FlagSet::_static_method_new();
static jule::Ref<jule::Str> _1ec8e355e_COMPILER = jule::new_ref<jule::Str>(jule::Str());
static jule::Ref<jule::Str> _1ec8e355e_COMPILER_PATH = jule::new_ref<jule::Str>(jule::Str());
static jule::Str _1ec8e355e_OUT_DIR = jule::Str("dist", 4);
static jule::Str _1ec8e355e_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Ref<jule::Str> _1ec8e355e_OUT = jule::new_ref<jule::Str>(jule::Str());
static jule::Str _1ec8e355e_CPP_STD = jule::Str("c++17", 5);
static jule::Int _1ec8e355e_SEMA_FLAGS = 0LL;
static jule::Ref<jule::Bool> _1ec8e355e_SHADOWING = jule::new_ref<jule::Bool>(false);
static jule::Ref<jule::Bool> _1ec8e355e_TRANSPILATION = jule::new_ref<jule::Bool>(false);
static jule::Ref<jule::Str> _1ec8e355e_OPT = jule::new_ref<jule::Str>(jule::Str("L0", 2));
static jule::Ref<jule::Str> _1ec8e355e_TARGET = jule::new_ref<jule::Str>(jule::Str("native-native", 13));
static jule::Array<jule::Str,4> _1ec8e3273_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _1ec8e3273_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _1ec8e3273_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Array<jule::Str,6> _1ec93b5b8_DIRECTIVES = jule::Array<jule::Str,6>({jule::Str("cdef", 4),jule::Str("typedef", 7),jule::Str("derive", 6),jule::Str("pass", 4),jule::Str("build", 5),jule::Str("namespace", 9)});
static jule::Array<jule::Str,3> _1ec970a4d_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _1ec970a4d_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _1ec9710c0_PATH_STDLIB = jule::Str();
static jule::Str _1ec9710c0_PATH_EXEC = jule::Str();
static jule::Str _1ec9710c0_PATH_WD = jule::Str();
static jule::Str _1ec9710c0_PATH_API = jule::Str();
static jule::Array<jule::U8,32> _1e165619b_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _1e165619b_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static jule::Trait<jule::Error> _1e16eece4_OVERFLOW_ERROR = jule::new_struct<_1e16eece4_bits_error>(new( std::nothrow ) _1e16eece4_bits_error(jule::Str("integer overflow", 16)));
static jule::Trait<jule::Error> _1e16eece4_DIVIDE_ERROR = jule::new_struct<_1e16eece4_bits_error>(new( std::nothrow ) _1e16eece4_bits_error(jule::Str("integer divide by zero", 22)));
static jule::Array<jule::F64,6> _1e10c8a64__SIN = jule::Array<jule::F64,6>({0.00000000015896230157654656,-0.000000025050747762857807,0.0000027557313621385722,-0.0001984126982958954,0.008333333333322118,-0.1666666666666663});
static jule::Array<jule::F64,6> _1e10c8a64__COS = jule::Array<jule::F64,6>({-0.000000000011358536521387682,0.000000002087570084197473,-0.0000002755731417929674,0.000024801587288851704,-0.0013888888888873056,0.041666666666666595});
static jule::Array<jule::F64,3> _1e10ac95a__TAN_P = jule::Array<jule::F64,3>({-13093.693918138379,1153516.6483858742,-17956525.197648488});
static jule::Array<jule::F64,5> _1e10ac95a__TAN_Q = jule::Array<jule::F64,5>({1LL,13681.296347069296,-1320892.3444021097,25008380.18233579,-53869575.592945464});
static jule::Array<jule::U64,20> _1e111d8cd_M_PI4 = jule::Array<jule::U64,20>({1LLU,5040379952546458195LLU,17892431488136887169LLU,13169980181085364355LLU,18204331823439776451LLU,7946843935494350272LLU,905889640498799673LLU,18175356263134875261LLU,15061281708168349961LLU,15220161563773041794LLU,8296664548579374057LLU,4109744767560208502LLU,4607516669194743839LLU,16023283104648321598LLU,15739233654134936430LLU,11424645774684705882LLU,16883842788696515318LLU,8795094592981902804LLU,15561835991111744016LLU,12395701187267450711LLU});
static jule::Array<jule::F64,6> _1e124dd71_P_1R8 = jule::Array<jule::F64,6>({0LL,0.11718749999998865,13.239480659307358,412.05185430737856,3874.7453891396053,7914.479540318917});
static jule::Array<jule::F64,5> _1e124dd71_P_1S8 = jule::Array<jule::F64,5>({114.20737037567841,3650.9308342085346,36956.206026903346,97602.79359349508,30804.27206278888});
static jule::Array<jule::F64,6> _1e124dd71_P_1R5 = jule::Array<jule::F64,6>({0.000000000013199051955624352,0.1171874931906141,6.802751278684329,108.30818299018911,517.6361395331998,528.7152013633375});
static jule::Array<jule::F64,5> _1e124dd71_P_1S5 = jule::Array<jule::F64,5>({59.28059872211313,991.4014187336144,5353.26695291488,7844.690317495512,1504.0468881036106});
static jule::Array<jule::F64,6> _1e124dd71_P_1R3 = jule::Array<jule::F64,6>({0.000000003025039161373736,0.11718686556725359,3.9329775003331564,35.11940355916369,91.05501107507813,48.55906851973649});
static jule::Array<jule::F64,5> _1e124dd71_P_1S3 = jule::Array<jule::F64,5>({34.79130950012515,336.76245874782575,1046.8713997577513,890.8113463982564,103.78793243963928});
static jule::Array<jule::F64,6> _1e124dd71_P_1R2 = jule::Array<jule::F64,6>({0.00000010771083010687374,0.11717621946268335,2.368514966676088,12.242610914826123,17.693971127168773,5.073523125888185});
static jule::Array<jule::F64,5> _1e124dd71_P_1S2 = jule::Array<jule::F64,5>({21.43648593638214,125.29022716840275,232.2764690571628,117.6793732871471,8.364638933716183});
static jule::Array<jule::F64,6> _1e124dd71_Q_1R8 = jule::Array<jule::F64,6>({0LL,-0.10253906249999271,-16.271753454459,-759.6017225139501,-11849.806670242959,-48438.512428575035});
static jule::Array<jule::F64,6> _1e124dd71_Q_1S8 = jule::Array<jule::F64,6>({161.3953697007229,7825.385999233485,133875.33628724958,719657.7236832409,666601.2326177764,-294490.26430383464});
static jule::Array<jule::F64,6> _1e124dd71_Q_1R5 = jule::Array<jule::F64,6>({-0.00000000002089799311417641,-0.10253905024137543,-8.05644828123936,-183.66960747488838,-1373.1937606550816,-2612.4444045321566});
static jule::Array<jule::F64,6> _1e124dd71_Q_1S5 = jule::Array<jule::F64,6>({81.27655013843358,1991.7987346048596,17468.48519249089,49851.42709103523,27948.075163891812,-4719.183547951285});
static jule::Array<jule::F64,6> _1e124dd71_Q_1R3 = jule::Array<jule::F64,6>({-0.000000005078312264617666,-0.10253782982083709,-4.610115811394734,-57.847221656278364,-228.2445407376317,-219.21012847890933});
static jule::Array<jule::F64,6> _1e124dd71_Q_1S3 = jule::Array<jule::F64,6>({47.66515503237295,673.8651126766997,3380.1528667952634,5547.729097207228,1903.119193388108,-135.20119144430734});
static jule::Array<jule::F64,6> _1e124dd71_Q_1R2 = jule::Array<jule::F64,6>({-0.00000017838172751095887,-0.10251704260798555,-2.7522056827818746,-19.663616264370372,-42.32531333728305,-21.371921170370406});
static jule::Array<jule::F64,6> _1e124dd71_Q_1S2 = jule::Array<jule::F64,6>({29.533362906052385,252.98154998219053,757.5028348686454,739.3932053204672,155.94900333666612,-4.959498988226282});
static jule::Array<jule::F64,6> _1e1300582_P_0R8 = jule::Array<jule::F64,6>({0LL,-0.07031249999999004,-8.081670412753498,-257.06310567970485,-2485.216410094288,-5253.043804907295});
static jule::Array<jule::F64,5> _1e1300582_P_0S8 = jule::Array<jule::F64,5>({116.53436461966818,3833.7447536412183,40597.857264847255,116752.97256437592,47627.728414673096});
static jule::Array<jule::F64,6> _1e1300582_P_0R5 = jule::Array<jule::F64,6>({-0.00000000001141254646918945,-0.07031249408735993,-4.159610644705878,-67.67476522651673,-331.23129964917297,-346.4333883656049});
static jule::Array<jule::F64,5> _1e1300582_P_0S5 = jule::Array<jule::F64,5>({60.753938269230034,1051.2523059570458,5978.970943338558,9625.445143577745,2406.058159229391});
static jule::Array<jule::F64,6> _1e1300582_P_0R3 = jule::Array<jule::F64,6>({-0.000000002547046017719519,-0.07031196163814817,-2.409032215495296,-21.96597747348831,-58.07917047017376,-31.44794705948885});
static jule::Array<jule::F64,5> _1e1300582_P_0S3 = jule::Array<jule::F64,5>({35.85603380552097,361.51398305030386,1193.6078379211153,1127.9967985690741,173.58093081333575});
static jule::Array<jule::F64,6> _1e1300582_P_0R2 = jule::Array<jule::F64,6>({-0.00000008875343330325264,-0.07030309954836247,-1.4507384678095299,-7.635696138235278,-11.193166886035675,-3.2336457935133534});
static jule::Array<jule::F64,5> _1e1300582_P_0S2 = jule::Array<jule::F64,5>({22.22029975320888,136.2067942182152,270.4702786580835,153.87539420832033,14.65761769482562});
static jule::Array<jule::F64,6> _1e1300582_Q_0R8 = jule::Array<jule::F64,6>({0LL,0.0732421874999935,11.76820646822527,557.6733802564019,8859.197207564686,37014.62677768878});
static jule::Array<jule::F64,6> _1e1300582_Q_0S8 = jule::Array<jule::F64,6>({163.77602689568982,8098.344946564498,142538.29141912048,803309.2571195144,840501.5798190605,-343899.2935378666});
static jule::Array<jule::F64,6> _1e1300582_Q_0R5 = jule::Array<jule::F64,6>({0.000000000018408596359451553,0.07324217666126848,5.8356350896205695,135.11157728644983,1027.243765961641,1989.9778586460538});
static jule::Array<jule::F64,6> _1e1300582_Q_0S5 = jule::Array<jule::F64,6>({82.77661022365378,2077.81416421393,18847.28877857181,56751.11228949473,35976.75384251145,-5354.342756019448});
static jule::Array<jule::F64,6> _1e1300582_Q_0R3 = jule::Array<jule::F64,6>({0.000000004377410140897386,0.07324111800429114,3.344231375161707,42.621844074541265,170.8080913405656,166.73394869665117});
static jule::Array<jule::F64,6> _1e1300582_Q_0S3 = jule::Array<jule::F64,6>({48.75887297245872,709.689221056606,3704.1482262011136,6460.425167525689,2516.3336892036896,-149.2474518361564});
static jule::Array<jule::F64,6> _1e1300582_Q_0R2 = jule::Array<jule::F64,6>({0.00000015044444488698327,0.07322342659630793,1.99819174093816,14.495602934788574,31.666231750478154,16.252707571092927});
static jule::Array<jule::F64,6> _1e1300582_Q_0S2 = jule::Array<jule::F64,6>({30.36558483552192,269.34811860804984,844.7837575953201,882.9358451124886,212.66638851179883,-5.3109549388266695});
static jule::Array<jule::F64,12> _1e1395968__LGAM_A = jule::Array<jule::F64,12>({0.07721566490153287,0.3224670334241136,0.06735230105312927,0.020580808432516733,0.007385550860814029,0.0028905138367341563,0.0011927076318336207,0.0005100697921535113,0.00022086279071390839,0.00010801156724758394,0.000025214456545125733,0.000044864094961891516});
static jule::Array<jule::F64,7> _1e1395968__LGAM_R = jule::Array<jule::F64,7>({1LL,1.3920053346762105,0.7219355475671381,0.17193386563280308,0.01864591917156529,0.0007779424963818936,0.000007326684307446256});
static jule::Array<jule::F64,7> _1e1395968__LGAM_S = jule::Array<jule::F64,7>({-0.07721566490153287,0.21498241596060885,0.325778796408931,0.14635047265246445,0.02664227030336386,0.0018402845140733772,0.00003194753265841009});
static jule::Array<jule::F64,15> _1e1395968__LGAM_T = jule::Array<jule::F64,15>({0.48383612272381005,-0.1475877229945939,0.06462494023913339,-0.032788541075985965,0.01797067508118204,-0.010314224129834144,0.006100538702462913,-0.0036845201678113826,0.0022596478090061247,-0.0014034646998923284,0.000881081882437654,-0.0005385953053567405,0.00031563207090362595,-0.00031275416837512086,0.0003355291926355191});
static jule::Array<jule::F64,6> _1e1395968__LGAM_U = jule::Array<jule::F64,6>({-0.07721566490153287,0.6328270640250934,1.4549225013723477,0.9777175279633727,0.22896372806469245,0.013381091853678766});
static jule::Array<jule::F64,6> _1e1395968__LGAM_V = jule::Array<jule::F64,6>({1LL,2.4559779371304113,2.128489763798934,0.7692851504566728,0.10422264559336913,0.003217092422824239});
static jule::Array<jule::F64,7> _1e1395968__LGAM_W = jule::Array<jule::F64,7>({0.4189385332046727,0.08333333333333297,-0.0027777777772877554,0.0007936505586430196,-0.00059518755745034,0.0008363399189962821,-0.0016309293409657527});
static jule::Array<jule::F64,3> _1e1402497_TANH_P = jule::Array<jule::F64,3>({-0.9643991794250523,-99.28772310019185,-1614.6876844170845});
static jule::Array<jule::F64,3> _1e1402497_TANH_Q = jule::Array<jule::F64,3>({112.81167849163293,2235.4883906010045,4844.063053251255});
static jule::Array<jule::F64,7> _1e142d418__GAM_P = jule::Array<jule::F64,7>({0.00016011952247675185,0.0011913514700658638,0.010421379756176158,0.04763678004571372,0.20744822764843598,0.4942148268014971,1LL});
static jule::Array<jule::F64,8> _1e142d418__GAM_Q = jule::Array<jule::F64,8>({-0.000023158187332412014,0.0005396055804933034,-0.004456419138517973,0.011813978522206043,0.035823639860549865,-0.23459179571824335,0.0714304917030273,1LL});
static jule::Array<jule::F64,5> _1e142d418__GAM_S = jule::Array<jule::F64,5>({0.0007873113957930937,-0.00022954996161337813,-0.0026813261780578124,0.0034722222160545866,0.08333333333334822});
static jule::Array<jule::F64,32> _1e151a9ab_POW10_TAB = jule::Array<jule::F64,32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0,100000000000000000000000.0,1000000000000000000000000.0,10000000000000000000000000.0,100000000000000000000000000.0,1000000000000000000000000000.0,10000000000000000000000000000.0,100000000000000000000000000000.0,1000000000000000000000000000000.0,10000000000000000000000000000000.0});
static jule::Array<jule::F64,10> _1e151a9ab_POW10_POSTAB32 = jule::Array<jule::F64,10>({1LL,100000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0});
static jule::Array<jule::F64,11> _1e151a9ab_POW10_NEGTAB32 = jule::Array<jule::F64,11>({1LL,0.00000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001});
static _1ec95e245_FloatInfo _1ec95e245_F32_INFO = _1ec95e245_FloatInfo(23LLU,8LLU,-127LL);
static _1ec95e245_FloatInfo _1ec95e245_F64_INFO = _1ec95e245_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _1ec97c2b8_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _1d419b9e0_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _1d419b9e0_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
static jule::Slice<jule::F32> _1d419b9e0_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
static jule::Array<jule::U64,20> _1d424203b_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_1e103632e_LeftCheat> _1e103632e_LEFTCHEATS = jule::Slice<_1e103632e_LeftCheat>({_1e103632e_LeftCheat(0LL,jule::Str()),_1e103632e_LeftCheat(1LL,jule::Str("5", 1)),_1e103632e_LeftCheat(1LL,jule::Str("25", 2)),_1e103632e_LeftCheat(1LL,jule::Str("125", 3)),_1e103632e_LeftCheat(2LL,jule::Str("625", 3)),_1e103632e_LeftCheat(2LL,jule::Str("3125", 4)),_1e103632e_LeftCheat(2LL,jule::Str("15625", 5)),_1e103632e_LeftCheat(3LL,jule::Str("78125", 5)),_1e103632e_LeftCheat(3LL,jule::Str("390625", 6)),_1e103632e_LeftCheat(3LL,jule::Str("1953125", 7)),_1e103632e_LeftCheat(4LL,jule::Str("9765625", 7)),_1e103632e_LeftCheat(4LL,jule::Str("48828125", 8)),_1e103632e_LeftCheat(4LL,jule::Str("244140625", 9)),_1e103632e_LeftCheat(4LL,jule::Str("1220703125", 10)),_1e103632e_LeftCheat(5LL,jule::Str("6103515625", 10)),_1e103632e_LeftCheat(5LL,jule::Str("30517578125", 11)),_1e103632e_LeftCheat(5LL,jule::Str("152587890625", 12)),_1e103632e_LeftCheat(6LL,jule::Str("762939453125", 12)),_1e103632e_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1e103632e_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1e103632e_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1e103632e_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1e103632e_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1e103632e_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1e103632e_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1e103632e_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1e103632e_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1e103632e_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1e103632e_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1e103632e_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1e103632e_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1e103632e_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1e103632e_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1e103632e_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1e103632e_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1e103632e_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1e103632e_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1e103632e_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1e103632e_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1e103632e_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1e103632e_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1e103632e_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1e103632e_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1e103632e_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1e103632e_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1e103632e_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1e103632e_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1e103632e_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1e103632e_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1e103632e_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1e103632e_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1e103632e_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1e103632e_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1e103632e_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1e103632e_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1e103632e_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1e103632e_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1e103632e_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1e103632e_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1e103632e_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1e103632e_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Ref<jule::Bool> _1ec945d31_OPT_COPY = jule::new_ref<jule::Bool>(false);
static jule::Ref<jule::Bool> _1ec945d31_OPT_DEADCODE = jule::new_ref<jule::Bool>(false);
static jule::Ref<jule::Bool> _1ec945d31_OPT_APPEND = jule::new_ref<jule::Bool>(false);
static jule::Ref<jule::Bool> _1ec945d31_OPT_MATH = jule::new_ref<jule::Bool>(false);
static jule::Ref<jule::Bool> _1ec945d31_OPT_ACCESS = jule::new_ref<jule::Bool>(false);
static jule::Ref<jule::Bool> _1ec945d31_OPT_INLINE = jule::new_ref<jule::Bool>(false);
static jule::Ref<_1e1976730_RangeTable> _1e197052b__C = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(0LLU,31LLU,1LLU),_1e1976730_Range16(127LLU,159LLU,1LLU),_1e1976730_Range16(173LLU,1536LLU,1363LLU),_1e1976730_Range16(1537LLU,1541LLU,1LLU),_1e1976730_Range16(1564LLU,1757LLU,193LLU),_1e1976730_Range16(1807LLU,2192LLU,385LLU),_1e1976730_Range16(2193LLU,2274LLU,81LLU),_1e1976730_Range16(6158LLU,8203LLU,2045LLU),_1e1976730_Range16(8204LLU,8207LLU,1LLU),_1e1976730_Range16(8234LLU,8238LLU,1LLU),_1e1976730_Range16(8288LLU,8292LLU,1LLU),_1e1976730_Range16(8294LLU,8303LLU,1LLU),_1e1976730_Range16(55296LLU,63743LLU,1LLU),_1e1976730_Range16(65279LLU,65529LLU,250LLU),_1e1976730_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69821LLU,69837LLU,16LLU),_1e1976730_Range32(78896LLU,78911LLU,1LLU),_1e1976730_Range32(113824LLU,113827LLU,1LLU),_1e1976730_Range32(119155LLU,119162LLU,1LLU),_1e1976730_Range32(917505LLU,917536LLU,31LLU),_1e1976730_Range32(917537LLU,917631LLU,1LLU),_1e1976730_Range32(983040LLU,1048573LLU,1LLU),_1e1976730_Range32(1048576LLU,1114109LLU,1LLU)}),2LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(0LLU,31LLU,1LLU),_1e1976730_Range16(127LLU,159LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),2LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CF = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(173LLU,1536LLU,1363LLU),_1e1976730_Range16(1537LLU,1541LLU,1LLU),_1e1976730_Range16(1564LLU,1757LLU,193LLU),_1e1976730_Range16(1807LLU,2192LLU,385LLU),_1e1976730_Range16(2193LLU,2274LLU,81LLU),_1e1976730_Range16(6158LLU,8203LLU,2045LLU),_1e1976730_Range16(8204LLU,8207LLU,1LLU),_1e1976730_Range16(8234LLU,8238LLU,1LLU),_1e1976730_Range16(8288LLU,8292LLU,1LLU),_1e1976730_Range16(8294LLU,8303LLU,1LLU),_1e1976730_Range16(65279LLU,65529LLU,250LLU),_1e1976730_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69821LLU,69837LLU,16LLU),_1e1976730_Range32(78896LLU,78911LLU,1LLU),_1e1976730_Range32(113824LLU,113827LLU,1LLU),_1e1976730_Range32(119155LLU,119162LLU,1LLU),_1e1976730_Range32(917505LLU,917536LLU,31LLU),_1e1976730_Range32(917537LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(57344LLU,63743LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(983040LLU,1048573LLU,1LLU),_1e1976730_Range32(1048576LLU,1114109LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CS = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(55296LLU,57343LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__L = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(65LLU,90LLU,1LLU),_1e1976730_Range16(97LLU,122LLU,1LLU),_1e1976730_Range16(170LLU,181LLU,11LLU),_1e1976730_Range16(186LLU,192LLU,6LLU),_1e1976730_Range16(193LLU,214LLU,1LLU),_1e1976730_Range16(216LLU,246LLU,1LLU),_1e1976730_Range16(248LLU,705LLU,1LLU),_1e1976730_Range16(710LLU,721LLU,1LLU),_1e1976730_Range16(736LLU,740LLU,1LLU),_1e1976730_Range16(748LLU,750LLU,2LLU),_1e1976730_Range16(880LLU,884LLU,1LLU),_1e1976730_Range16(886LLU,887LLU,1LLU),_1e1976730_Range16(890LLU,893LLU,1LLU),_1e1976730_Range16(895LLU,902LLU,7LLU),_1e1976730_Range16(904LLU,906LLU,1LLU),_1e1976730_Range16(908LLU,910LLU,2LLU),_1e1976730_Range16(911LLU,929LLU,1LLU),_1e1976730_Range16(931LLU,1013LLU,1LLU),_1e1976730_Range16(1015LLU,1153LLU,1LLU),_1e1976730_Range16(1162LLU,1327LLU,1LLU),_1e1976730_Range16(1329LLU,1366LLU,1LLU),_1e1976730_Range16(1369LLU,1376LLU,7LLU),_1e1976730_Range16(1377LLU,1416LLU,1LLU),_1e1976730_Range16(1488LLU,1514LLU,1LLU),_1e1976730_Range16(1519LLU,1522LLU,1LLU),_1e1976730_Range16(1568LLU,1610LLU,1LLU),_1e1976730_Range16(1646LLU,1647LLU,1LLU),_1e1976730_Range16(1649LLU,1747LLU,1LLU),_1e1976730_Range16(1749LLU,1765LLU,16LLU),_1e1976730_Range16(1766LLU,1774LLU,8LLU),_1e1976730_Range16(1775LLU,1786LLU,11LLU),_1e1976730_Range16(1787LLU,1788LLU,1LLU),_1e1976730_Range16(1791LLU,1808LLU,17LLU),_1e1976730_Range16(1810LLU,1839LLU,1LLU),_1e1976730_Range16(1869LLU,1957LLU,1LLU),_1e1976730_Range16(1969LLU,1994LLU,25LLU),_1e1976730_Range16(1995LLU,2026LLU,1LLU),_1e1976730_Range16(2036LLU,2037LLU,1LLU),_1e1976730_Range16(2042LLU,2048LLU,6LLU),_1e1976730_Range16(2049LLU,2069LLU,1LLU),_1e1976730_Range16(2074LLU,2084LLU,10LLU),_1e1976730_Range16(2088LLU,2112LLU,24LLU),_1e1976730_Range16(2113LLU,2136LLU,1LLU),_1e1976730_Range16(2144LLU,2154LLU,1LLU),_1e1976730_Range16(2160LLU,2183LLU,1LLU),_1e1976730_Range16(2185LLU,2190LLU,1LLU),_1e1976730_Range16(2208LLU,2249LLU,1LLU),_1e1976730_Range16(2308LLU,2361LLU,1LLU),_1e1976730_Range16(2365LLU,2384LLU,19LLU),_1e1976730_Range16(2392LLU,2401LLU,1LLU),_1e1976730_Range16(2417LLU,2432LLU,1LLU),_1e1976730_Range16(2437LLU,2444LLU,1LLU),_1e1976730_Range16(2447LLU,2448LLU,1LLU),_1e1976730_Range16(2451LLU,2472LLU,1LLU),_1e1976730_Range16(2474LLU,2480LLU,1LLU),_1e1976730_Range16(2482LLU,2486LLU,4LLU),_1e1976730_Range16(2487LLU,2489LLU,1LLU),_1e1976730_Range16(2493LLU,2510LLU,17LLU),_1e1976730_Range16(2524LLU,2525LLU,1LLU),_1e1976730_Range16(2527LLU,2529LLU,1LLU),_1e1976730_Range16(2544LLU,2545LLU,1LLU),_1e1976730_Range16(2556LLU,2565LLU,9LLU),_1e1976730_Range16(2566LLU,2570LLU,1LLU),_1e1976730_Range16(2575LLU,2576LLU,1LLU),_1e1976730_Range16(2579LLU,2600LLU,1LLU),_1e1976730_Range16(2602LLU,2608LLU,1LLU),_1e1976730_Range16(2610LLU,2611LLU,1LLU),_1e1976730_Range16(2613LLU,2614LLU,1LLU),_1e1976730_Range16(2616LLU,2617LLU,1LLU),_1e1976730_Range16(2649LLU,2652LLU,1LLU),_1e1976730_Range16(2654LLU,2674LLU,20LLU),_1e1976730_Range16(2675LLU,2676LLU,1LLU),_1e1976730_Range16(2693LLU,2701LLU,1LLU),_1e1976730_Range16(2703LLU,2705LLU,1LLU),_1e1976730_Range16(2707LLU,2728LLU,1LLU),_1e1976730_Range16(2730LLU,2736LLU,1LLU),_1e1976730_Range16(2738LLU,2739LLU,1LLU),_1e1976730_Range16(2741LLU,2745LLU,1LLU),_1e1976730_Range16(2749LLU,2768LLU,19LLU),_1e1976730_Range16(2784LLU,2785LLU,1LLU),_1e1976730_Range16(2809LLU,2821LLU,12LLU),_1e1976730_Range16(2822LLU,2828LLU,1LLU),_1e1976730_Range16(2831LLU,2832LLU,1LLU),_1e1976730_Range16(2835LLU,2856LLU,1LLU),_1e1976730_Range16(2858LLU,2864LLU,1LLU),_1e1976730_Range16(2866LLU,2867LLU,1LLU),_1e1976730_Range16(2869LLU,2873LLU,1LLU),_1e1976730_Range16(2877LLU,2908LLU,31LLU),_1e1976730_Range16(2909LLU,2911LLU,2LLU),_1e1976730_Range16(2912LLU,2913LLU,1LLU),_1e1976730_Range16(2929LLU,2947LLU,18LLU),_1e1976730_Range16(2949LLU,2954LLU,1LLU),_1e1976730_Range16(2958LLU,2960LLU,1LLU),_1e1976730_Range16(2962LLU,2965LLU,1LLU),_1e1976730_Range16(2969LLU,2970LLU,1LLU),_1e1976730_Range16(2972LLU,2974LLU,2LLU),_1e1976730_Range16(2975LLU,2979LLU,4LLU),_1e1976730_Range16(2980LLU,2984LLU,4LLU),_1e1976730_Range16(2985LLU,2986LLU,1LLU),_1e1976730_Range16(2990LLU,3001LLU,1LLU),_1e1976730_Range16(3024LLU,3077LLU,53LLU),_1e1976730_Range16(3078LLU,3084LLU,1LLU),_1e1976730_Range16(3086LLU,3088LLU,1LLU),_1e1976730_Range16(3090LLU,3112LLU,1LLU),_1e1976730_Range16(3114LLU,3129LLU,1LLU),_1e1976730_Range16(3133LLU,3160LLU,27LLU),_1e1976730_Range16(3161LLU,3162LLU,1LLU),_1e1976730_Range16(3165LLU,3168LLU,3LLU),_1e1976730_Range16(3169LLU,3200LLU,31LLU),_1e1976730_Range16(3205LLU,3212LLU,1LLU),_1e1976730_Range16(3214LLU,3216LLU,1LLU),_1e1976730_Range16(3218LLU,3240LLU,1LLU),_1e1976730_Range16(3242LLU,3251LLU,1LLU),_1e1976730_Range16(3253LLU,3257LLU,1LLU),_1e1976730_Range16(3261LLU,3293LLU,32LLU),_1e1976730_Range16(3294LLU,3296LLU,2LLU),_1e1976730_Range16(3297LLU,3313LLU,16LLU),_1e1976730_Range16(3314LLU,3332LLU,18LLU),_1e1976730_Range16(3333LLU,3340LLU,1LLU),_1e1976730_Range16(3342LLU,3344LLU,1LLU),_1e1976730_Range16(3346LLU,3386LLU,1LLU),_1e1976730_Range16(3389LLU,3406LLU,17LLU),_1e1976730_Range16(3412LLU,3414LLU,1LLU),_1e1976730_Range16(3423LLU,3425LLU,1LLU),_1e1976730_Range16(3450LLU,3455LLU,1LLU),_1e1976730_Range16(3461LLU,3478LLU,1LLU),_1e1976730_Range16(3482LLU,3505LLU,1LLU),_1e1976730_Range16(3507LLU,3515LLU,1LLU),_1e1976730_Range16(3517LLU,3520LLU,3LLU),_1e1976730_Range16(3521LLU,3526LLU,1LLU),_1e1976730_Range16(3585LLU,3632LLU,1LLU),_1e1976730_Range16(3634LLU,3635LLU,1LLU),_1e1976730_Range16(3648LLU,3654LLU,1LLU),_1e1976730_Range16(3713LLU,3714LLU,1LLU),_1e1976730_Range16(3716LLU,3718LLU,2LLU),_1e1976730_Range16(3719LLU,3722LLU,1LLU),_1e1976730_Range16(3724LLU,3747LLU,1LLU),_1e1976730_Range16(3749LLU,3751LLU,2LLU),_1e1976730_Range16(3752LLU,3760LLU,1LLU),_1e1976730_Range16(3762LLU,3763LLU,1LLU),_1e1976730_Range16(3773LLU,3776LLU,3LLU),_1e1976730_Range16(3777LLU,3780LLU,1LLU),_1e1976730_Range16(3782LLU,3804LLU,22LLU),_1e1976730_Range16(3805LLU,3807LLU,1LLU),_1e1976730_Range16(3840LLU,3904LLU,64LLU),_1e1976730_Range16(3905LLU,3911LLU,1LLU),_1e1976730_Range16(3913LLU,3948LLU,1LLU),_1e1976730_Range16(3976LLU,3980LLU,1LLU),_1e1976730_Range16(4096LLU,4138LLU,1LLU),_1e1976730_Range16(4159LLU,4176LLU,17LLU),_1e1976730_Range16(4177LLU,4181LLU,1LLU),_1e1976730_Range16(4186LLU,4189LLU,1LLU),_1e1976730_Range16(4193LLU,4197LLU,4LLU),_1e1976730_Range16(4198LLU,4206LLU,8LLU),_1e1976730_Range16(4207LLU,4208LLU,1LLU),_1e1976730_Range16(4213LLU,4225LLU,1LLU),_1e1976730_Range16(4238LLU,4256LLU,18LLU),_1e1976730_Range16(4257LLU,4293LLU,1LLU),_1e1976730_Range16(4295LLU,4301LLU,6LLU),_1e1976730_Range16(4304LLU,4346LLU,1LLU),_1e1976730_Range16(4348LLU,4680LLU,1LLU),_1e1976730_Range16(4682LLU,4685LLU,1LLU),_1e1976730_Range16(4688LLU,4694LLU,1LLU),_1e1976730_Range16(4696LLU,4698LLU,2LLU),_1e1976730_Range16(4699LLU,4701LLU,1LLU),_1e1976730_Range16(4704LLU,4744LLU,1LLU),_1e1976730_Range16(4746LLU,4749LLU,1LLU),_1e1976730_Range16(4752LLU,4784LLU,1LLU),_1e1976730_Range16(4786LLU,4789LLU,1LLU),_1e1976730_Range16(4792LLU,4798LLU,1LLU),_1e1976730_Range16(4800LLU,4802LLU,2LLU),_1e1976730_Range16(4803LLU,4805LLU,1LLU),_1e1976730_Range16(4808LLU,4822LLU,1LLU),_1e1976730_Range16(4824LLU,4880LLU,1LLU),_1e1976730_Range16(4882LLU,4885LLU,1LLU),_1e1976730_Range16(4888LLU,4954LLU,1LLU),_1e1976730_Range16(4992LLU,5007LLU,1LLU),_1e1976730_Range16(5024LLU,5109LLU,1LLU),_1e1976730_Range16(5112LLU,5117LLU,1LLU),_1e1976730_Range16(5121LLU,5740LLU,1LLU),_1e1976730_Range16(5743LLU,5759LLU,1LLU),_1e1976730_Range16(5761LLU,5786LLU,1LLU),_1e1976730_Range16(5792LLU,5866LLU,1LLU),_1e1976730_Range16(5873LLU,5880LLU,1LLU),_1e1976730_Range16(5888LLU,5905LLU,1LLU),_1e1976730_Range16(5919LLU,5937LLU,1LLU),_1e1976730_Range16(5952LLU,5969LLU,1LLU),_1e1976730_Range16(5984LLU,5996LLU,1LLU),_1e1976730_Range16(5998LLU,6000LLU,1LLU),_1e1976730_Range16(6016LLU,6067LLU,1LLU),_1e1976730_Range16(6103LLU,6108LLU,5LLU),_1e1976730_Range16(6176LLU,6264LLU,1LLU),_1e1976730_Range16(6272LLU,6276LLU,1LLU),_1e1976730_Range16(6279LLU,6312LLU,1LLU),_1e1976730_Range16(6314LLU,6320LLU,6LLU),_1e1976730_Range16(6321LLU,6389LLU,1LLU),_1e1976730_Range16(6400LLU,6430LLU,1LLU),_1e1976730_Range16(6480LLU,6509LLU,1LLU),_1e1976730_Range16(6512LLU,6516LLU,1LLU),_1e1976730_Range16(6528LLU,6571LLU,1LLU),_1e1976730_Range16(6576LLU,6601LLU,1LLU),_1e1976730_Range16(6656LLU,6678LLU,1LLU),_1e1976730_Range16(6688LLU,6740LLU,1LLU),_1e1976730_Range16(6823LLU,6917LLU,94LLU),_1e1976730_Range16(6918LLU,6963LLU,1LLU),_1e1976730_Range16(6981LLU,6988LLU,1LLU),_1e1976730_Range16(7043LLU,7072LLU,1LLU),_1e1976730_Range16(7086LLU,7087LLU,1LLU),_1e1976730_Range16(7098LLU,7141LLU,1LLU),_1e1976730_Range16(7168LLU,7203LLU,1LLU),_1e1976730_Range16(7245LLU,7247LLU,1LLU),_1e1976730_Range16(7258LLU,7293LLU,1LLU),_1e1976730_Range16(7296LLU,7304LLU,1LLU),_1e1976730_Range16(7312LLU,7354LLU,1LLU),_1e1976730_Range16(7357LLU,7359LLU,1LLU),_1e1976730_Range16(7401LLU,7404LLU,1LLU),_1e1976730_Range16(7406LLU,7411LLU,1LLU),_1e1976730_Range16(7413LLU,7414LLU,1LLU),_1e1976730_Range16(7418LLU,7424LLU,6LLU),_1e1976730_Range16(7425LLU,7615LLU,1LLU),_1e1976730_Range16(7680LLU,7957LLU,1LLU),_1e1976730_Range16(7960LLU,7965LLU,1LLU),_1e1976730_Range16(7968LLU,8005LLU,1LLU),_1e1976730_Range16(8008LLU,8013LLU,1LLU),_1e1976730_Range16(8016LLU,8023LLU,1LLU),_1e1976730_Range16(8025LLU,8031LLU,2LLU),_1e1976730_Range16(8032LLU,8061LLU,1LLU),_1e1976730_Range16(8064LLU,8116LLU,1LLU),_1e1976730_Range16(8118LLU,8124LLU,1LLU),_1e1976730_Range16(8126LLU,8130LLU,4LLU),_1e1976730_Range16(8131LLU,8132LLU,1LLU),_1e1976730_Range16(8134LLU,8140LLU,1LLU),_1e1976730_Range16(8144LLU,8147LLU,1LLU),_1e1976730_Range16(8150LLU,8155LLU,1LLU),_1e1976730_Range16(8160LLU,8172LLU,1LLU),_1e1976730_Range16(8178LLU,8180LLU,1LLU),_1e1976730_Range16(8182LLU,8188LLU,1LLU),_1e1976730_Range16(8305LLU,8319LLU,14LLU),_1e1976730_Range16(8336LLU,8348LLU,1LLU),_1e1976730_Range16(8450LLU,8455LLU,5LLU),_1e1976730_Range16(8458LLU,8467LLU,1LLU),_1e1976730_Range16(8469LLU,8473LLU,4LLU),_1e1976730_Range16(8474LLU,8477LLU,1LLU),_1e1976730_Range16(8484LLU,8490LLU,2LLU),_1e1976730_Range16(8491LLU,8493LLU,1LLU),_1e1976730_Range16(8495LLU,8505LLU,1LLU),_1e1976730_Range16(8508LLU,8511LLU,1LLU),_1e1976730_Range16(8517LLU,8521LLU,1LLU),_1e1976730_Range16(8526LLU,8579LLU,53LLU),_1e1976730_Range16(8580LLU,11264LLU,2684LLU),_1e1976730_Range16(11265LLU,11492LLU,1LLU),_1e1976730_Range16(11499LLU,11502LLU,1LLU),_1e1976730_Range16(11506LLU,11507LLU,1LLU),_1e1976730_Range16(11520LLU,11557LLU,1LLU),_1e1976730_Range16(11559LLU,11565LLU,6LLU),_1e1976730_Range16(11568LLU,11623LLU,1LLU),_1e1976730_Range16(11631LLU,11648LLU,17LLU),_1e1976730_Range16(11649LLU,11670LLU,1LLU),_1e1976730_Range16(11680LLU,11686LLU,1LLU),_1e1976730_Range16(11688LLU,11694LLU,1LLU),_1e1976730_Range16(11696LLU,11702LLU,1LLU),_1e1976730_Range16(11704LLU,11710LLU,1LLU),_1e1976730_Range16(11712LLU,11718LLU,1LLU),_1e1976730_Range16(11720LLU,11726LLU,1LLU),_1e1976730_Range16(11728LLU,11734LLU,1LLU),_1e1976730_Range16(11736LLU,11742LLU,1LLU),_1e1976730_Range16(11823LLU,12293LLU,470LLU),_1e1976730_Range16(12294LLU,12337LLU,43LLU),_1e1976730_Range16(12338LLU,12341LLU,1LLU),_1e1976730_Range16(12347LLU,12348LLU,1LLU),_1e1976730_Range16(12353LLU,12438LLU,1LLU),_1e1976730_Range16(12445LLU,12447LLU,1LLU),_1e1976730_Range16(12449LLU,12538LLU,1LLU),_1e1976730_Range16(12540LLU,12543LLU,1LLU),_1e1976730_Range16(12549LLU,12591LLU,1LLU),_1e1976730_Range16(12593LLU,12686LLU,1LLU),_1e1976730_Range16(12704LLU,12735LLU,1LLU),_1e1976730_Range16(12784LLU,12799LLU,1LLU),_1e1976730_Range16(13312LLU,19903LLU,1LLU),_1e1976730_Range16(19968LLU,42124LLU,1LLU),_1e1976730_Range16(42192LLU,42237LLU,1LLU),_1e1976730_Range16(42240LLU,42508LLU,1LLU),_1e1976730_Range16(42512LLU,42527LLU,1LLU),_1e1976730_Range16(42538LLU,42539LLU,1LLU),_1e1976730_Range16(42560LLU,42606LLU,1LLU),_1e1976730_Range16(42623LLU,42653LLU,1LLU),_1e1976730_Range16(42656LLU,42725LLU,1LLU),_1e1976730_Range16(42775LLU,42783LLU,1LLU),_1e1976730_Range16(42786LLU,42888LLU,1LLU),_1e1976730_Range16(42891LLU,42954LLU,1LLU),_1e1976730_Range16(42960LLU,42961LLU,1LLU),_1e1976730_Range16(42963LLU,42965LLU,2LLU),_1e1976730_Range16(42966LLU,42969LLU,1LLU),_1e1976730_Range16(42994LLU,43009LLU,1LLU),_1e1976730_Range16(43011LLU,43013LLU,1LLU),_1e1976730_Range16(43015LLU,43018LLU,1LLU),_1e1976730_Range16(43020LLU,43042LLU,1LLU),_1e1976730_Range16(43072LLU,43123LLU,1LLU),_1e1976730_Range16(43138LLU,43187LLU,1LLU),_1e1976730_Range16(43250LLU,43255LLU,1LLU),_1e1976730_Range16(43259LLU,43261LLU,2LLU),_1e1976730_Range16(43262LLU,43274LLU,12LLU),_1e1976730_Range16(43275LLU,43301LLU,1LLU),_1e1976730_Range16(43312LLU,43334LLU,1LLU),_1e1976730_Range16(43360LLU,43388LLU,1LLU),_1e1976730_Range16(43396LLU,43442LLU,1LLU),_1e1976730_Range16(43471LLU,43488LLU,17LLU),_1e1976730_Range16(43489LLU,43492LLU,1LLU),_1e1976730_Range16(43494LLU,43503LLU,1LLU),_1e1976730_Range16(43514LLU,43518LLU,1LLU),_1e1976730_Range16(43520LLU,43560LLU,1LLU),_1e1976730_Range16(43584LLU,43586LLU,1LLU),_1e1976730_Range16(43588LLU,43595LLU,1LLU),_1e1976730_Range16(43616LLU,43638LLU,1LLU),_1e1976730_Range16(43642LLU,43646LLU,4LLU),_1e1976730_Range16(43647LLU,43695LLU,1LLU),_1e1976730_Range16(43697LLU,43701LLU,4LLU),_1e1976730_Range16(43702LLU,43705LLU,3LLU),_1e1976730_Range16(43706LLU,43709LLU,1LLU),_1e1976730_Range16(43712LLU,43714LLU,2LLU),_1e1976730_Range16(43739LLU,43741LLU,1LLU),_1e1976730_Range16(43744LLU,43754LLU,1LLU),_1e1976730_Range16(43762LLU,43764LLU,1LLU),_1e1976730_Range16(43777LLU,43782LLU,1LLU),_1e1976730_Range16(43785LLU,43790LLU,1LLU),_1e1976730_Range16(43793LLU,43798LLU,1LLU),_1e1976730_Range16(43808LLU,43814LLU,1LLU),_1e1976730_Range16(43816LLU,43822LLU,1LLU),_1e1976730_Range16(43824LLU,43866LLU,1LLU),_1e1976730_Range16(43868LLU,43881LLU,1LLU),_1e1976730_Range16(43888LLU,44002LLU,1LLU),_1e1976730_Range16(44032LLU,55203LLU,1LLU),_1e1976730_Range16(55216LLU,55238LLU,1LLU),_1e1976730_Range16(55243LLU,55291LLU,1LLU),_1e1976730_Range16(63744LLU,64109LLU,1LLU),_1e1976730_Range16(64112LLU,64217LLU,1LLU),_1e1976730_Range16(64256LLU,64262LLU,1LLU),_1e1976730_Range16(64275LLU,64279LLU,1LLU),_1e1976730_Range16(64285LLU,64287LLU,2LLU),_1e1976730_Range16(64288LLU,64296LLU,1LLU),_1e1976730_Range16(64298LLU,64310LLU,1LLU),_1e1976730_Range16(64312LLU,64316LLU,1LLU),_1e1976730_Range16(64318LLU,64320LLU,2LLU),_1e1976730_Range16(64321LLU,64323LLU,2LLU),_1e1976730_Range16(64324LLU,64326LLU,2LLU),_1e1976730_Range16(64327LLU,64433LLU,1LLU),_1e1976730_Range16(64467LLU,64829LLU,1LLU),_1e1976730_Range16(64848LLU,64911LLU,1LLU),_1e1976730_Range16(64914LLU,64967LLU,1LLU),_1e1976730_Range16(65008LLU,65019LLU,1LLU),_1e1976730_Range16(65136LLU,65140LLU,1LLU),_1e1976730_Range16(65142LLU,65276LLU,1LLU),_1e1976730_Range16(65313LLU,65338LLU,1LLU),_1e1976730_Range16(65345LLU,65370LLU,1LLU),_1e1976730_Range16(65382LLU,65470LLU,1LLU),_1e1976730_Range16(65474LLU,65479LLU,1LLU),_1e1976730_Range16(65482LLU,65487LLU,1LLU),_1e1976730_Range16(65490LLU,65495LLU,1LLU),_1e1976730_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(65536LLU,65547LLU,1LLU),_1e1976730_Range32(65549LLU,65574LLU,1LLU),_1e1976730_Range32(65576LLU,65594LLU,1LLU),_1e1976730_Range32(65596LLU,65597LLU,1LLU),_1e1976730_Range32(65599LLU,65613LLU,1LLU),_1e1976730_Range32(65616LLU,65629LLU,1LLU),_1e1976730_Range32(65664LLU,65786LLU,1LLU),_1e1976730_Range32(66176LLU,66204LLU,1LLU),_1e1976730_Range32(66208LLU,66256LLU,1LLU),_1e1976730_Range32(66304LLU,66335LLU,1LLU),_1e1976730_Range32(66349LLU,66368LLU,1LLU),_1e1976730_Range32(66370LLU,66377LLU,1LLU),_1e1976730_Range32(66384LLU,66421LLU,1LLU),_1e1976730_Range32(66432LLU,66461LLU,1LLU),_1e1976730_Range32(66464LLU,66499LLU,1LLU),_1e1976730_Range32(66504LLU,66511LLU,1LLU),_1e1976730_Range32(66560LLU,66717LLU,1LLU),_1e1976730_Range32(66736LLU,66771LLU,1LLU),_1e1976730_Range32(66776LLU,66811LLU,1LLU),_1e1976730_Range32(66816LLU,66855LLU,1LLU),_1e1976730_Range32(66864LLU,66915LLU,1LLU),_1e1976730_Range32(66928LLU,66938LLU,1LLU),_1e1976730_Range32(66940LLU,66954LLU,1LLU),_1e1976730_Range32(66956LLU,66962LLU,1LLU),_1e1976730_Range32(66964LLU,66965LLU,1LLU),_1e1976730_Range32(66967LLU,66977LLU,1LLU),_1e1976730_Range32(66979LLU,66993LLU,1LLU),_1e1976730_Range32(66995LLU,67001LLU,1LLU),_1e1976730_Range32(67003LLU,67004LLU,1LLU),_1e1976730_Range32(67072LLU,67382LLU,1LLU),_1e1976730_Range32(67392LLU,67413LLU,1LLU),_1e1976730_Range32(67424LLU,67431LLU,1LLU),_1e1976730_Range32(67456LLU,67461LLU,1LLU),_1e1976730_Range32(67463LLU,67504LLU,1LLU),_1e1976730_Range32(67506LLU,67514LLU,1LLU),_1e1976730_Range32(67584LLU,67589LLU,1LLU),_1e1976730_Range32(67592LLU,67594LLU,2LLU),_1e1976730_Range32(67595LLU,67637LLU,1LLU),_1e1976730_Range32(67639LLU,67640LLU,1LLU),_1e1976730_Range32(67644LLU,67647LLU,3LLU),_1e1976730_Range32(67648LLU,67669LLU,1LLU),_1e1976730_Range32(67680LLU,67702LLU,1LLU),_1e1976730_Range32(67712LLU,67742LLU,1LLU),_1e1976730_Range32(67808LLU,67826LLU,1LLU),_1e1976730_Range32(67828LLU,67829LLU,1LLU),_1e1976730_Range32(67840LLU,67861LLU,1LLU),_1e1976730_Range32(67872LLU,67897LLU,1LLU),_1e1976730_Range32(67968LLU,68023LLU,1LLU),_1e1976730_Range32(68030LLU,68031LLU,1LLU),_1e1976730_Range32(68096LLU,68112LLU,16LLU),_1e1976730_Range32(68113LLU,68115LLU,1LLU),_1e1976730_Range32(68117LLU,68119LLU,1LLU),_1e1976730_Range32(68121LLU,68149LLU,1LLU),_1e1976730_Range32(68192LLU,68220LLU,1LLU),_1e1976730_Range32(68224LLU,68252LLU,1LLU),_1e1976730_Range32(68288LLU,68295LLU,1LLU),_1e1976730_Range32(68297LLU,68324LLU,1LLU),_1e1976730_Range32(68352LLU,68405LLU,1LLU),_1e1976730_Range32(68416LLU,68437LLU,1LLU),_1e1976730_Range32(68448LLU,68466LLU,1LLU),_1e1976730_Range32(68480LLU,68497LLU,1LLU),_1e1976730_Range32(68608LLU,68680LLU,1LLU),_1e1976730_Range32(68736LLU,68786LLU,1LLU),_1e1976730_Range32(68800LLU,68850LLU,1LLU),_1e1976730_Range32(68864LLU,68899LLU,1LLU),_1e1976730_Range32(69248LLU,69289LLU,1LLU),_1e1976730_Range32(69296LLU,69297LLU,1LLU),_1e1976730_Range32(69376LLU,69404LLU,1LLU),_1e1976730_Range32(69415LLU,69424LLU,9LLU),_1e1976730_Range32(69425LLU,69445LLU,1LLU),_1e1976730_Range32(69488LLU,69505LLU,1LLU),_1e1976730_Range32(69552LLU,69572LLU,1LLU),_1e1976730_Range32(69600LLU,69622LLU,1LLU),_1e1976730_Range32(69635LLU,69687LLU,1LLU),_1e1976730_Range32(69745LLU,69746LLU,1LLU),_1e1976730_Range32(69749LLU,69763LLU,14LLU),_1e1976730_Range32(69764LLU,69807LLU,1LLU),_1e1976730_Range32(69840LLU,69864LLU,1LLU),_1e1976730_Range32(69891LLU,69926LLU,1LLU),_1e1976730_Range32(69956LLU,69959LLU,3LLU),_1e1976730_Range32(69968LLU,70002LLU,1LLU),_1e1976730_Range32(70006LLU,70019LLU,13LLU),_1e1976730_Range32(70020LLU,70066LLU,1LLU),_1e1976730_Range32(70081LLU,70084LLU,1LLU),_1e1976730_Range32(70106LLU,70108LLU,2LLU),_1e1976730_Range32(70144LLU,70161LLU,1LLU),_1e1976730_Range32(70163LLU,70187LLU,1LLU),_1e1976730_Range32(70207LLU,70208LLU,1LLU),_1e1976730_Range32(70272LLU,70278LLU,1LLU),_1e1976730_Range32(70280LLU,70282LLU,2LLU),_1e1976730_Range32(70283LLU,70285LLU,1LLU),_1e1976730_Range32(70287LLU,70301LLU,1LLU),_1e1976730_Range32(70303LLU,70312LLU,1LLU),_1e1976730_Range32(70320LLU,70366LLU,1LLU),_1e1976730_Range32(70405LLU,70412LLU,1LLU),_1e1976730_Range32(70415LLU,70416LLU,1LLU),_1e1976730_Range32(70419LLU,70440LLU,1LLU),_1e1976730_Range32(70442LLU,70448LLU,1LLU),_1e1976730_Range32(70450LLU,70451LLU,1LLU),_1e1976730_Range32(70453LLU,70457LLU,1LLU),_1e1976730_Range32(70461LLU,70480LLU,19LLU),_1e1976730_Range32(70493LLU,70497LLU,1LLU),_1e1976730_Range32(70656LLU,70708LLU,1LLU),_1e1976730_Range32(70727LLU,70730LLU,1LLU),_1e1976730_Range32(70751LLU,70753LLU,1LLU),_1e1976730_Range32(70784LLU,70831LLU,1LLU),_1e1976730_Range32(70852LLU,70853LLU,1LLU),_1e1976730_Range32(70855LLU,71040LLU,185LLU),_1e1976730_Range32(71041LLU,71086LLU,1LLU),_1e1976730_Range32(71128LLU,71131LLU,1LLU),_1e1976730_Range32(71168LLU,71215LLU,1LLU),_1e1976730_Range32(71236LLU,71296LLU,60LLU),_1e1976730_Range32(71297LLU,71338LLU,1LLU),_1e1976730_Range32(71352LLU,71424LLU,72LLU),_1e1976730_Range32(71425LLU,71450LLU,1LLU),_1e1976730_Range32(71488LLU,71494LLU,1LLU),_1e1976730_Range32(71680LLU,71723LLU,1LLU),_1e1976730_Range32(71840LLU,71903LLU,1LLU),_1e1976730_Range32(71935LLU,71942LLU,1LLU),_1e1976730_Range32(71945LLU,71948LLU,3LLU),_1e1976730_Range32(71949LLU,71955LLU,1LLU),_1e1976730_Range32(71957LLU,71958LLU,1LLU),_1e1976730_Range32(71960LLU,71983LLU,1LLU),_1e1976730_Range32(71999LLU,72001LLU,2LLU),_1e1976730_Range32(72096LLU,72103LLU,1LLU),_1e1976730_Range32(72106LLU,72144LLU,1LLU),_1e1976730_Range32(72161LLU,72163LLU,2LLU),_1e1976730_Range32(72192LLU,72203LLU,11LLU),_1e1976730_Range32(72204LLU,72242LLU,1LLU),_1e1976730_Range32(72250LLU,72272LLU,22LLU),_1e1976730_Range32(72284LLU,72329LLU,1LLU),_1e1976730_Range32(72349LLU,72368LLU,19LLU),_1e1976730_Range32(72369LLU,72440LLU,1LLU),_1e1976730_Range32(72704LLU,72712LLU,1LLU),_1e1976730_Range32(72714LLU,72750LLU,1LLU),_1e1976730_Range32(72768LLU,72818LLU,50LLU),_1e1976730_Range32(72819LLU,72847LLU,1LLU),_1e1976730_Range32(72960LLU,72966LLU,1LLU),_1e1976730_Range32(72968LLU,72969LLU,1LLU),_1e1976730_Range32(72971LLU,73008LLU,1LLU),_1e1976730_Range32(73030LLU,73056LLU,26LLU),_1e1976730_Range32(73057LLU,73061LLU,1LLU),_1e1976730_Range32(73063LLU,73064LLU,1LLU),_1e1976730_Range32(73066LLU,73097LLU,1LLU),_1e1976730_Range32(73112LLU,73440LLU,328LLU),_1e1976730_Range32(73441LLU,73458LLU,1LLU),_1e1976730_Range32(73474LLU,73476LLU,2LLU),_1e1976730_Range32(73477LLU,73488LLU,1LLU),_1e1976730_Range32(73490LLU,73523LLU,1LLU),_1e1976730_Range32(73648LLU,73728LLU,80LLU),_1e1976730_Range32(73729LLU,74649LLU,1LLU),_1e1976730_Range32(74880LLU,75075LLU,1LLU),_1e1976730_Range32(77712LLU,77808LLU,1LLU),_1e1976730_Range32(77824LLU,78895LLU,1LLU),_1e1976730_Range32(78913LLU,78918LLU,1LLU),_1e1976730_Range32(82944LLU,83526LLU,1LLU),_1e1976730_Range32(92160LLU,92728LLU,1LLU),_1e1976730_Range32(92736LLU,92766LLU,1LLU),_1e1976730_Range32(92784LLU,92862LLU,1LLU),_1e1976730_Range32(92880LLU,92909LLU,1LLU),_1e1976730_Range32(92928LLU,92975LLU,1LLU),_1e1976730_Range32(92992LLU,92995LLU,1LLU),_1e1976730_Range32(93027LLU,93047LLU,1LLU),_1e1976730_Range32(93053LLU,93071LLU,1LLU),_1e1976730_Range32(93760LLU,93823LLU,1LLU),_1e1976730_Range32(93952LLU,94026LLU,1LLU),_1e1976730_Range32(94032LLU,94099LLU,67LLU),_1e1976730_Range32(94100LLU,94111LLU,1LLU),_1e1976730_Range32(94176LLU,94177LLU,1LLU),_1e1976730_Range32(94179LLU,94208LLU,29LLU),_1e1976730_Range32(94209LLU,100343LLU,1LLU),_1e1976730_Range32(100352LLU,101589LLU,1LLU),_1e1976730_Range32(101632LLU,101640LLU,1LLU),_1e1976730_Range32(110576LLU,110579LLU,1LLU),_1e1976730_Range32(110581LLU,110587LLU,1LLU),_1e1976730_Range32(110589LLU,110590LLU,1LLU),_1e1976730_Range32(110592LLU,110882LLU,1LLU),_1e1976730_Range32(110898LLU,110928LLU,30LLU),_1e1976730_Range32(110929LLU,110930LLU,1LLU),_1e1976730_Range32(110933LLU,110948LLU,15LLU),_1e1976730_Range32(110949LLU,110951LLU,1LLU),_1e1976730_Range32(110960LLU,111355LLU,1LLU),_1e1976730_Range32(113664LLU,113770LLU,1LLU),_1e1976730_Range32(113776LLU,113788LLU,1LLU),_1e1976730_Range32(113792LLU,113800LLU,1LLU),_1e1976730_Range32(113808LLU,113817LLU,1LLU),_1e1976730_Range32(119808LLU,119892LLU,1LLU),_1e1976730_Range32(119894LLU,119964LLU,1LLU),_1e1976730_Range32(119966LLU,119967LLU,1LLU),_1e1976730_Range32(119970LLU,119973LLU,3LLU),_1e1976730_Range32(119974LLU,119977LLU,3LLU),_1e1976730_Range32(119978LLU,119980LLU,1LLU),_1e1976730_Range32(119982LLU,119993LLU,1LLU),_1e1976730_Range32(119995LLU,119997LLU,2LLU),_1e1976730_Range32(119998LLU,120003LLU,1LLU),_1e1976730_Range32(120005LLU,120069LLU,1LLU),_1e1976730_Range32(120071LLU,120074LLU,1LLU),_1e1976730_Range32(120077LLU,120084LLU,1LLU),_1e1976730_Range32(120086LLU,120092LLU,1LLU),_1e1976730_Range32(120094LLU,120121LLU,1LLU),_1e1976730_Range32(120123LLU,120126LLU,1LLU),_1e1976730_Range32(120128LLU,120132LLU,1LLU),_1e1976730_Range32(120134LLU,120138LLU,4LLU),_1e1976730_Range32(120139LLU,120144LLU,1LLU),_1e1976730_Range32(120146LLU,120485LLU,1LLU),_1e1976730_Range32(120488LLU,120512LLU,1LLU),_1e1976730_Range32(120514LLU,120538LLU,1LLU),_1e1976730_Range32(120540LLU,120570LLU,1LLU),_1e1976730_Range32(120572LLU,120596LLU,1LLU),_1e1976730_Range32(120598LLU,120628LLU,1LLU),_1e1976730_Range32(120630LLU,120654LLU,1LLU),_1e1976730_Range32(120656LLU,120686LLU,1LLU),_1e1976730_Range32(120688LLU,120712LLU,1LLU),_1e1976730_Range32(120714LLU,120744LLU,1LLU),_1e1976730_Range32(120746LLU,120770LLU,1LLU),_1e1976730_Range32(120772LLU,120779LLU,1LLU),_1e1976730_Range32(122624LLU,122654LLU,1LLU),_1e1976730_Range32(122661LLU,122666LLU,1LLU),_1e1976730_Range32(122928LLU,122989LLU,1LLU),_1e1976730_Range32(123136LLU,123180LLU,1LLU),_1e1976730_Range32(123191LLU,123197LLU,1LLU),_1e1976730_Range32(123214LLU,123536LLU,322LLU),_1e1976730_Range32(123537LLU,123565LLU,1LLU),_1e1976730_Range32(123584LLU,123627LLU,1LLU),_1e1976730_Range32(124112LLU,124139LLU,1LLU),_1e1976730_Range32(124896LLU,124902LLU,1LLU),_1e1976730_Range32(124904LLU,124907LLU,1LLU),_1e1976730_Range32(124909LLU,124910LLU,1LLU),_1e1976730_Range32(124912LLU,124926LLU,1LLU),_1e1976730_Range32(124928LLU,125124LLU,1LLU),_1e1976730_Range32(125184LLU,125251LLU,1LLU),_1e1976730_Range32(125259LLU,126464LLU,1205LLU),_1e1976730_Range32(126465LLU,126467LLU,1LLU),_1e1976730_Range32(126469LLU,126495LLU,1LLU),_1e1976730_Range32(126497LLU,126498LLU,1LLU),_1e1976730_Range32(126500LLU,126503LLU,3LLU),_1e1976730_Range32(126505LLU,126514LLU,1LLU),_1e1976730_Range32(126516LLU,126519LLU,1LLU),_1e1976730_Range32(126521LLU,126523LLU,2LLU),_1e1976730_Range32(126530LLU,126535LLU,5LLU),_1e1976730_Range32(126537LLU,126541LLU,2LLU),_1e1976730_Range32(126542LLU,126543LLU,1LLU),_1e1976730_Range32(126545LLU,126546LLU,1LLU),_1e1976730_Range32(126548LLU,126551LLU,3LLU),_1e1976730_Range32(126553LLU,126561LLU,2LLU),_1e1976730_Range32(126562LLU,126564LLU,2LLU),_1e1976730_Range32(126567LLU,126570LLU,1LLU),_1e1976730_Range32(126572LLU,126578LLU,1LLU),_1e1976730_Range32(126580LLU,126583LLU,1LLU),_1e1976730_Range32(126585LLU,126588LLU,1LLU),_1e1976730_Range32(126590LLU,126592LLU,2LLU),_1e1976730_Range32(126593LLU,126601LLU,1LLU),_1e1976730_Range32(126603LLU,126619LLU,1LLU),_1e1976730_Range32(126625LLU,126627LLU,1LLU),_1e1976730_Range32(126629LLU,126633LLU,1LLU),_1e1976730_Range32(126635LLU,126651LLU,1LLU),_1e1976730_Range32(131072LLU,173791LLU,1LLU),_1e1976730_Range32(173824LLU,177977LLU,1LLU),_1e1976730_Range32(177984LLU,178205LLU,1LLU),_1e1976730_Range32(178208LLU,183969LLU,1LLU),_1e1976730_Range32(183984LLU,191456LLU,1LLU),_1e1976730_Range32(194560LLU,195101LLU,1LLU),_1e1976730_Range32(196608LLU,201546LLU,1LLU),_1e1976730_Range32(201552LLU,205743LLU,1LLU)}),6LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LL = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(97LLU,122LLU,1LLU),_1e1976730_Range16(181LLU,223LLU,42LLU),_1e1976730_Range16(224LLU,246LLU,1LLU),_1e1976730_Range16(248LLU,255LLU,1LLU),_1e1976730_Range16(257LLU,311LLU,2LLU),_1e1976730_Range16(312LLU,328LLU,2LLU),_1e1976730_Range16(329LLU,375LLU,2LLU),_1e1976730_Range16(378LLU,382LLU,2LLU),_1e1976730_Range16(383LLU,384LLU,1LLU),_1e1976730_Range16(387LLU,389LLU,2LLU),_1e1976730_Range16(392LLU,396LLU,4LLU),_1e1976730_Range16(397LLU,402LLU,5LLU),_1e1976730_Range16(405LLU,409LLU,4LLU),_1e1976730_Range16(410LLU,411LLU,1LLU),_1e1976730_Range16(414LLU,417LLU,3LLU),_1e1976730_Range16(419LLU,421LLU,2LLU),_1e1976730_Range16(424LLU,426LLU,2LLU),_1e1976730_Range16(427LLU,429LLU,2LLU),_1e1976730_Range16(432LLU,436LLU,4LLU),_1e1976730_Range16(438LLU,441LLU,3LLU),_1e1976730_Range16(442LLU,445LLU,3LLU),_1e1976730_Range16(446LLU,447LLU,1LLU),_1e1976730_Range16(454LLU,460LLU,3LLU),_1e1976730_Range16(462LLU,476LLU,2LLU),_1e1976730_Range16(477LLU,495LLU,2LLU),_1e1976730_Range16(496LLU,499LLU,3LLU),_1e1976730_Range16(501LLU,505LLU,4LLU),_1e1976730_Range16(507LLU,563LLU,2LLU),_1e1976730_Range16(564LLU,569LLU,1LLU),_1e1976730_Range16(572LLU,575LLU,3LLU),_1e1976730_Range16(576LLU,578LLU,2LLU),_1e1976730_Range16(583LLU,591LLU,2LLU),_1e1976730_Range16(592LLU,659LLU,1LLU),_1e1976730_Range16(661LLU,687LLU,1LLU),_1e1976730_Range16(881LLU,883LLU,2LLU),_1e1976730_Range16(887LLU,891LLU,4LLU),_1e1976730_Range16(892LLU,893LLU,1LLU),_1e1976730_Range16(912LLU,940LLU,28LLU),_1e1976730_Range16(941LLU,974LLU,1LLU),_1e1976730_Range16(976LLU,977LLU,1LLU),_1e1976730_Range16(981LLU,983LLU,1LLU),_1e1976730_Range16(985LLU,1007LLU,2LLU),_1e1976730_Range16(1008LLU,1011LLU,1LLU),_1e1976730_Range16(1013LLU,1019LLU,3LLU),_1e1976730_Range16(1020LLU,1072LLU,52LLU),_1e1976730_Range16(1073LLU,1119LLU,1LLU),_1e1976730_Range16(1121LLU,1153LLU,2LLU),_1e1976730_Range16(1163LLU,1215LLU,2LLU),_1e1976730_Range16(1218LLU,1230LLU,2LLU),_1e1976730_Range16(1231LLU,1327LLU,2LLU),_1e1976730_Range16(1376LLU,1416LLU,1LLU),_1e1976730_Range16(4304LLU,4346LLU,1LLU),_1e1976730_Range16(4349LLU,4351LLU,1LLU),_1e1976730_Range16(5112LLU,5117LLU,1LLU),_1e1976730_Range16(7296LLU,7304LLU,1LLU),_1e1976730_Range16(7424LLU,7467LLU,1LLU),_1e1976730_Range16(7531LLU,7543LLU,1LLU),_1e1976730_Range16(7545LLU,7578LLU,1LLU),_1e1976730_Range16(7681LLU,7829LLU,2LLU),_1e1976730_Range16(7830LLU,7837LLU,1LLU),_1e1976730_Range16(7839LLU,7935LLU,2LLU),_1e1976730_Range16(7936LLU,7943LLU,1LLU),_1e1976730_Range16(7952LLU,7957LLU,1LLU),_1e1976730_Range16(7968LLU,7975LLU,1LLU),_1e1976730_Range16(7984LLU,7991LLU,1LLU),_1e1976730_Range16(8000LLU,8005LLU,1LLU),_1e1976730_Range16(8016LLU,8023LLU,1LLU),_1e1976730_Range16(8032LLU,8039LLU,1LLU),_1e1976730_Range16(8048LLU,8061LLU,1LLU),_1e1976730_Range16(8064LLU,8071LLU,1LLU),_1e1976730_Range16(8080LLU,8087LLU,1LLU),_1e1976730_Range16(8096LLU,8103LLU,1LLU),_1e1976730_Range16(8112LLU,8116LLU,1LLU),_1e1976730_Range16(8118LLU,8119LLU,1LLU),_1e1976730_Range16(8126LLU,8130LLU,4LLU),_1e1976730_Range16(8131LLU,8132LLU,1LLU),_1e1976730_Range16(8134LLU,8135LLU,1LLU),_1e1976730_Range16(8144LLU,8147LLU,1LLU),_1e1976730_Range16(8150LLU,8151LLU,1LLU),_1e1976730_Range16(8160LLU,8167LLU,1LLU),_1e1976730_Range16(8178LLU,8180LLU,1LLU),_1e1976730_Range16(8182LLU,8183LLU,1LLU),_1e1976730_Range16(8458LLU,8462LLU,4LLU),_1e1976730_Range16(8463LLU,8467LLU,4LLU),_1e1976730_Range16(8495LLU,8505LLU,5LLU),_1e1976730_Range16(8508LLU,8509LLU,1LLU),_1e1976730_Range16(8518LLU,8521LLU,1LLU),_1e1976730_Range16(8526LLU,8580LLU,54LLU),_1e1976730_Range16(11312LLU,11359LLU,1LLU),_1e1976730_Range16(11361LLU,11365LLU,4LLU),_1e1976730_Range16(11366LLU,11372LLU,2LLU),_1e1976730_Range16(11377LLU,11379LLU,2LLU),_1e1976730_Range16(11380LLU,11382LLU,2LLU),_1e1976730_Range16(11383LLU,11387LLU,1LLU),_1e1976730_Range16(11393LLU,11491LLU,2LLU),_1e1976730_Range16(11492LLU,11500LLU,8LLU),_1e1976730_Range16(11502LLU,11507LLU,5LLU),_1e1976730_Range16(11520LLU,11557LLU,1LLU),_1e1976730_Range16(11559LLU,11565LLU,6LLU),_1e1976730_Range16(42561LLU,42605LLU,2LLU),_1e1976730_Range16(42625LLU,42651LLU,2LLU),_1e1976730_Range16(42787LLU,42799LLU,2LLU),_1e1976730_Range16(42800LLU,42801LLU,1LLU),_1e1976730_Range16(42803LLU,42865LLU,2LLU),_1e1976730_Range16(42866LLU,42872LLU,1LLU),_1e1976730_Range16(42874LLU,42876LLU,2LLU),_1e1976730_Range16(42879LLU,42887LLU,2LLU),_1e1976730_Range16(42892LLU,42894LLU,2LLU),_1e1976730_Range16(42897LLU,42899LLU,2LLU),_1e1976730_Range16(42900LLU,42901LLU,1LLU),_1e1976730_Range16(42903LLU,42921LLU,2LLU),_1e1976730_Range16(42927LLU,42933LLU,6LLU),_1e1976730_Range16(42935LLU,42947LLU,2LLU),_1e1976730_Range16(42952LLU,42954LLU,2LLU),_1e1976730_Range16(42961LLU,42969LLU,2LLU),_1e1976730_Range16(42998LLU,43002LLU,4LLU),_1e1976730_Range16(43824LLU,43866LLU,1LLU),_1e1976730_Range16(43872LLU,43880LLU,1LLU),_1e1976730_Range16(43888LLU,43967LLU,1LLU),_1e1976730_Range16(64256LLU,64262LLU,1LLU),_1e1976730_Range16(64275LLU,64279LLU,1LLU),_1e1976730_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66600LLU,66639LLU,1LLU),_1e1976730_Range32(66776LLU,66811LLU,1LLU),_1e1976730_Range32(66967LLU,66977LLU,1LLU),_1e1976730_Range32(66979LLU,66993LLU,1LLU),_1e1976730_Range32(66995LLU,67001LLU,1LLU),_1e1976730_Range32(67003LLU,67004LLU,1LLU),_1e1976730_Range32(68800LLU,68850LLU,1LLU),_1e1976730_Range32(71872LLU,71903LLU,1LLU),_1e1976730_Range32(93792LLU,93823LLU,1LLU),_1e1976730_Range32(119834LLU,119859LLU,1LLU),_1e1976730_Range32(119886LLU,119892LLU,1LLU),_1e1976730_Range32(119894LLU,119911LLU,1LLU),_1e1976730_Range32(119938LLU,119963LLU,1LLU),_1e1976730_Range32(119990LLU,119993LLU,1LLU),_1e1976730_Range32(119995LLU,119997LLU,2LLU),_1e1976730_Range32(119998LLU,120003LLU,1LLU),_1e1976730_Range32(120005LLU,120015LLU,1LLU),_1e1976730_Range32(120042LLU,120067LLU,1LLU),_1e1976730_Range32(120094LLU,120119LLU,1LLU),_1e1976730_Range32(120146LLU,120171LLU,1LLU),_1e1976730_Range32(120198LLU,120223LLU,1LLU),_1e1976730_Range32(120250LLU,120275LLU,1LLU),_1e1976730_Range32(120302LLU,120327LLU,1LLU),_1e1976730_Range32(120354LLU,120379LLU,1LLU),_1e1976730_Range32(120406LLU,120431LLU,1LLU),_1e1976730_Range32(120458LLU,120485LLU,1LLU),_1e1976730_Range32(120514LLU,120538LLU,1LLU),_1e1976730_Range32(120540LLU,120545LLU,1LLU),_1e1976730_Range32(120572LLU,120596LLU,1LLU),_1e1976730_Range32(120598LLU,120603LLU,1LLU),_1e1976730_Range32(120630LLU,120654LLU,1LLU),_1e1976730_Range32(120656LLU,120661LLU,1LLU),_1e1976730_Range32(120688LLU,120712LLU,1LLU),_1e1976730_Range32(120714LLU,120719LLU,1LLU),_1e1976730_Range32(120746LLU,120770LLU,1LLU),_1e1976730_Range32(120772LLU,120777LLU,1LLU),_1e1976730_Range32(120779LLU,122624LLU,1845LLU),_1e1976730_Range32(122625LLU,122633LLU,1LLU),_1e1976730_Range32(122635LLU,122654LLU,1LLU),_1e1976730_Range32(122661LLU,122666LLU,1LLU),_1e1976730_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LM = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(688LLU,705LLU,1LLU),_1e1976730_Range16(710LLU,721LLU,1LLU),_1e1976730_Range16(736LLU,740LLU,1LLU),_1e1976730_Range16(748LLU,750LLU,2LLU),_1e1976730_Range16(884LLU,890LLU,6LLU),_1e1976730_Range16(1369LLU,1600LLU,231LLU),_1e1976730_Range16(1765LLU,1766LLU,1LLU),_1e1976730_Range16(2036LLU,2037LLU,1LLU),_1e1976730_Range16(2042LLU,2074LLU,32LLU),_1e1976730_Range16(2084LLU,2088LLU,4LLU),_1e1976730_Range16(2249LLU,2417LLU,168LLU),_1e1976730_Range16(3654LLU,3782LLU,128LLU),_1e1976730_Range16(4348LLU,6103LLU,1755LLU),_1e1976730_Range16(6211LLU,6823LLU,612LLU),_1e1976730_Range16(7288LLU,7293LLU,1LLU),_1e1976730_Range16(7468LLU,7530LLU,1LLU),_1e1976730_Range16(7544LLU,7579LLU,35LLU),_1e1976730_Range16(7580LLU,7615LLU,1LLU),_1e1976730_Range16(8305LLU,8319LLU,14LLU),_1e1976730_Range16(8336LLU,8348LLU,1LLU),_1e1976730_Range16(11388LLU,11389LLU,1LLU),_1e1976730_Range16(11631LLU,11823LLU,192LLU),_1e1976730_Range16(12293LLU,12337LLU,44LLU),_1e1976730_Range16(12338LLU,12341LLU,1LLU),_1e1976730_Range16(12347LLU,12445LLU,98LLU),_1e1976730_Range16(12446LLU,12540LLU,94LLU),_1e1976730_Range16(12541LLU,12542LLU,1LLU),_1e1976730_Range16(40981LLU,42232LLU,1251LLU),_1e1976730_Range16(42233LLU,42237LLU,1LLU),_1e1976730_Range16(42508LLU,42623LLU,115LLU),_1e1976730_Range16(42652LLU,42653LLU,1LLU),_1e1976730_Range16(42775LLU,42783LLU,1LLU),_1e1976730_Range16(42864LLU,42888LLU,24LLU),_1e1976730_Range16(42994LLU,42996LLU,1LLU),_1e1976730_Range16(43000LLU,43001LLU,1LLU),_1e1976730_Range16(43471LLU,43494LLU,23LLU),_1e1976730_Range16(43632LLU,43741LLU,109LLU),_1e1976730_Range16(43763LLU,43764LLU,1LLU),_1e1976730_Range16(43868LLU,43871LLU,1LLU),_1e1976730_Range16(43881LLU,65392LLU,21511LLU),_1e1976730_Range16(65438LLU,65439LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67456LLU,67461LLU,1LLU),_1e1976730_Range32(67463LLU,67504LLU,1LLU),_1e1976730_Range32(67506LLU,67514LLU,1LLU),_1e1976730_Range32(92992LLU,92995LLU,1LLU),_1e1976730_Range32(94099LLU,94111LLU,1LLU),_1e1976730_Range32(94176LLU,94177LLU,1LLU),_1e1976730_Range32(94179LLU,110576LLU,16397LLU),_1e1976730_Range32(110577LLU,110579LLU,1LLU),_1e1976730_Range32(110581LLU,110587LLU,1LLU),_1e1976730_Range32(110589LLU,110590LLU,1LLU),_1e1976730_Range32(122928LLU,122989LLU,1LLU),_1e1976730_Range32(123191LLU,123197LLU,1LLU),_1e1976730_Range32(124139LLU,125259LLU,1120LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(170LLU,186LLU,16LLU),_1e1976730_Range16(443LLU,448LLU,5LLU),_1e1976730_Range16(449LLU,451LLU,1LLU),_1e1976730_Range16(660LLU,1488LLU,828LLU),_1e1976730_Range16(1489LLU,1514LLU,1LLU),_1e1976730_Range16(1519LLU,1522LLU,1LLU),_1e1976730_Range16(1568LLU,1599LLU,1LLU),_1e1976730_Range16(1601LLU,1610LLU,1LLU),_1e1976730_Range16(1646LLU,1647LLU,1LLU),_1e1976730_Range16(1649LLU,1747LLU,1LLU),_1e1976730_Range16(1749LLU,1774LLU,25LLU),_1e1976730_Range16(1775LLU,1786LLU,11LLU),_1e1976730_Range16(1787LLU,1788LLU,1LLU),_1e1976730_Range16(1791LLU,1808LLU,17LLU),_1e1976730_Range16(1810LLU,1839LLU,1LLU),_1e1976730_Range16(1869LLU,1957LLU,1LLU),_1e1976730_Range16(1969LLU,1994LLU,25LLU),_1e1976730_Range16(1995LLU,2026LLU,1LLU),_1e1976730_Range16(2048LLU,2069LLU,1LLU),_1e1976730_Range16(2112LLU,2136LLU,1LLU),_1e1976730_Range16(2144LLU,2154LLU,1LLU),_1e1976730_Range16(2160LLU,2183LLU,1LLU),_1e1976730_Range16(2185LLU,2190LLU,1LLU),_1e1976730_Range16(2208LLU,2248LLU,1LLU),_1e1976730_Range16(2308LLU,2361LLU,1LLU),_1e1976730_Range16(2365LLU,2384LLU,19LLU),_1e1976730_Range16(2392LLU,2401LLU,1LLU),_1e1976730_Range16(2418LLU,2432LLU,1LLU),_1e1976730_Range16(2437LLU,2444LLU,1LLU),_1e1976730_Range16(2447LLU,2448LLU,1LLU),_1e1976730_Range16(2451LLU,2472LLU,1LLU),_1e1976730_Range16(2474LLU,2480LLU,1LLU),_1e1976730_Range16(2482LLU,2486LLU,4LLU),_1e1976730_Range16(2487LLU,2489LLU,1LLU),_1e1976730_Range16(2493LLU,2510LLU,17LLU),_1e1976730_Range16(2524LLU,2525LLU,1LLU),_1e1976730_Range16(2527LLU,2529LLU,1LLU),_1e1976730_Range16(2544LLU,2545LLU,1LLU),_1e1976730_Range16(2556LLU,2565LLU,9LLU),_1e1976730_Range16(2566LLU,2570LLU,1LLU),_1e1976730_Range16(2575LLU,2576LLU,1LLU),_1e1976730_Range16(2579LLU,2600LLU,1LLU),_1e1976730_Range16(2602LLU,2608LLU,1LLU),_1e1976730_Range16(2610LLU,2611LLU,1LLU),_1e1976730_Range16(2613LLU,2614LLU,1LLU),_1e1976730_Range16(2616LLU,2617LLU,1LLU),_1e1976730_Range16(2649LLU,2652LLU,1LLU),_1e1976730_Range16(2654LLU,2674LLU,20LLU),_1e1976730_Range16(2675LLU,2676LLU,1LLU),_1e1976730_Range16(2693LLU,2701LLU,1LLU),_1e1976730_Range16(2703LLU,2705LLU,1LLU),_1e1976730_Range16(2707LLU,2728LLU,1LLU),_1e1976730_Range16(2730LLU,2736LLU,1LLU),_1e1976730_Range16(2738LLU,2739LLU,1LLU),_1e1976730_Range16(2741LLU,2745LLU,1LLU),_1e1976730_Range16(2749LLU,2768LLU,19LLU),_1e1976730_Range16(2784LLU,2785LLU,1LLU),_1e1976730_Range16(2809LLU,2821LLU,12LLU),_1e1976730_Range16(2822LLU,2828LLU,1LLU),_1e1976730_Range16(2831LLU,2832LLU,1LLU),_1e1976730_Range16(2835LLU,2856LLU,1LLU),_1e1976730_Range16(2858LLU,2864LLU,1LLU),_1e1976730_Range16(2866LLU,2867LLU,1LLU),_1e1976730_Range16(2869LLU,2873LLU,1LLU),_1e1976730_Range16(2877LLU,2908LLU,31LLU),_1e1976730_Range16(2909LLU,2911LLU,2LLU),_1e1976730_Range16(2912LLU,2913LLU,1LLU),_1e1976730_Range16(2929LLU,2947LLU,18LLU),_1e1976730_Range16(2949LLU,2954LLU,1LLU),_1e1976730_Range16(2958LLU,2960LLU,1LLU),_1e1976730_Range16(2962LLU,2965LLU,1LLU),_1e1976730_Range16(2969LLU,2970LLU,1LLU),_1e1976730_Range16(2972LLU,2974LLU,2LLU),_1e1976730_Range16(2975LLU,2979LLU,4LLU),_1e1976730_Range16(2980LLU,2984LLU,4LLU),_1e1976730_Range16(2985LLU,2986LLU,1LLU),_1e1976730_Range16(2990LLU,3001LLU,1LLU),_1e1976730_Range16(3024LLU,3077LLU,53LLU),_1e1976730_Range16(3078LLU,3084LLU,1LLU),_1e1976730_Range16(3086LLU,3088LLU,1LLU),_1e1976730_Range16(3090LLU,3112LLU,1LLU),_1e1976730_Range16(3114LLU,3129LLU,1LLU),_1e1976730_Range16(3133LLU,3160LLU,27LLU),_1e1976730_Range16(3161LLU,3162LLU,1LLU),_1e1976730_Range16(3165LLU,3168LLU,3LLU),_1e1976730_Range16(3169LLU,3200LLU,31LLU),_1e1976730_Range16(3205LLU,3212LLU,1LLU),_1e1976730_Range16(3214LLU,3216LLU,1LLU),_1e1976730_Range16(3218LLU,3240LLU,1LLU),_1e1976730_Range16(3242LLU,3251LLU,1LLU),_1e1976730_Range16(3253LLU,3257LLU,1LLU),_1e1976730_Range16(3261LLU,3293LLU,32LLU),_1e1976730_Range16(3294LLU,3296LLU,2LLU),_1e1976730_Range16(3297LLU,3313LLU,16LLU),_1e1976730_Range16(3314LLU,3332LLU,18LLU),_1e1976730_Range16(3333LLU,3340LLU,1LLU),_1e1976730_Range16(3342LLU,3344LLU,1LLU),_1e1976730_Range16(3346LLU,3386LLU,1LLU),_1e1976730_Range16(3389LLU,3406LLU,17LLU),_1e1976730_Range16(3412LLU,3414LLU,1LLU),_1e1976730_Range16(3423LLU,3425LLU,1LLU),_1e1976730_Range16(3450LLU,3455LLU,1LLU),_1e1976730_Range16(3461LLU,3478LLU,1LLU),_1e1976730_Range16(3482LLU,3505LLU,1LLU),_1e1976730_Range16(3507LLU,3515LLU,1LLU),_1e1976730_Range16(3517LLU,3520LLU,3LLU),_1e1976730_Range16(3521LLU,3526LLU,1LLU),_1e1976730_Range16(3585LLU,3632LLU,1LLU),_1e1976730_Range16(3634LLU,3635LLU,1LLU),_1e1976730_Range16(3648LLU,3653LLU,1LLU),_1e1976730_Range16(3713LLU,3714LLU,1LLU),_1e1976730_Range16(3716LLU,3718LLU,2LLU),_1e1976730_Range16(3719LLU,3722LLU,1LLU),_1e1976730_Range16(3724LLU,3747LLU,1LLU),_1e1976730_Range16(3749LLU,3751LLU,2LLU),_1e1976730_Range16(3752LLU,3760LLU,1LLU),_1e1976730_Range16(3762LLU,3763LLU,1LLU),_1e1976730_Range16(3773LLU,3776LLU,3LLU),_1e1976730_Range16(3777LLU,3780LLU,1LLU),_1e1976730_Range16(3804LLU,3807LLU,1LLU),_1e1976730_Range16(3840LLU,3904LLU,64LLU),_1e1976730_Range16(3905LLU,3911LLU,1LLU),_1e1976730_Range16(3913LLU,3948LLU,1LLU),_1e1976730_Range16(3976LLU,3980LLU,1LLU),_1e1976730_Range16(4096LLU,4138LLU,1LLU),_1e1976730_Range16(4159LLU,4176LLU,17LLU),_1e1976730_Range16(4177LLU,4181LLU,1LLU),_1e1976730_Range16(4186LLU,4189LLU,1LLU),_1e1976730_Range16(4193LLU,4197LLU,4LLU),_1e1976730_Range16(4198LLU,4206LLU,8LLU),_1e1976730_Range16(4207LLU,4208LLU,1LLU),_1e1976730_Range16(4213LLU,4225LLU,1LLU),_1e1976730_Range16(4238LLU,4352LLU,114LLU),_1e1976730_Range16(4353LLU,4680LLU,1LLU),_1e1976730_Range16(4682LLU,4685LLU,1LLU),_1e1976730_Range16(4688LLU,4694LLU,1LLU),_1e1976730_Range16(4696LLU,4698LLU,2LLU),_1e1976730_Range16(4699LLU,4701LLU,1LLU),_1e1976730_Range16(4704LLU,4744LLU,1LLU),_1e1976730_Range16(4746LLU,4749LLU,1LLU),_1e1976730_Range16(4752LLU,4784LLU,1LLU),_1e1976730_Range16(4786LLU,4789LLU,1LLU),_1e1976730_Range16(4792LLU,4798LLU,1LLU),_1e1976730_Range16(4800LLU,4802LLU,2LLU),_1e1976730_Range16(4803LLU,4805LLU,1LLU),_1e1976730_Range16(4808LLU,4822LLU,1LLU),_1e1976730_Range16(4824LLU,4880LLU,1LLU),_1e1976730_Range16(4882LLU,4885LLU,1LLU),_1e1976730_Range16(4888LLU,4954LLU,1LLU),_1e1976730_Range16(4992LLU,5007LLU,1LLU),_1e1976730_Range16(5121LLU,5740LLU,1LLU),_1e1976730_Range16(5743LLU,5759LLU,1LLU),_1e1976730_Range16(5761LLU,5786LLU,1LLU),_1e1976730_Range16(5792LLU,5866LLU,1LLU),_1e1976730_Range16(5873LLU,5880LLU,1LLU),_1e1976730_Range16(5888LLU,5905LLU,1LLU),_1e1976730_Range16(5919LLU,5937LLU,1LLU),_1e1976730_Range16(5952LLU,5969LLU,1LLU),_1e1976730_Range16(5984LLU,5996LLU,1LLU),_1e1976730_Range16(5998LLU,6000LLU,1LLU),_1e1976730_Range16(6016LLU,6067LLU,1LLU),_1e1976730_Range16(6108LLU,6176LLU,68LLU),_1e1976730_Range16(6177LLU,6210LLU,1LLU),_1e1976730_Range16(6212LLU,6264LLU,1LLU),_1e1976730_Range16(6272LLU,6276LLU,1LLU),_1e1976730_Range16(6279LLU,6312LLU,1LLU),_1e1976730_Range16(6314LLU,6320LLU,6LLU),_1e1976730_Range16(6321LLU,6389LLU,1LLU),_1e1976730_Range16(6400LLU,6430LLU,1LLU),_1e1976730_Range16(6480LLU,6509LLU,1LLU),_1e1976730_Range16(6512LLU,6516LLU,1LLU),_1e1976730_Range16(6528LLU,6571LLU,1LLU),_1e1976730_Range16(6576LLU,6601LLU,1LLU),_1e1976730_Range16(6656LLU,6678LLU,1LLU),_1e1976730_Range16(6688LLU,6740LLU,1LLU),_1e1976730_Range16(6917LLU,6963LLU,1LLU),_1e1976730_Range16(6981LLU,6988LLU,1LLU),_1e1976730_Range16(7043LLU,7072LLU,1LLU),_1e1976730_Range16(7086LLU,7087LLU,1LLU),_1e1976730_Range16(7098LLU,7141LLU,1LLU),_1e1976730_Range16(7168LLU,7203LLU,1LLU),_1e1976730_Range16(7245LLU,7247LLU,1LLU),_1e1976730_Range16(7258LLU,7287LLU,1LLU),_1e1976730_Range16(7401LLU,7404LLU,1LLU),_1e1976730_Range16(7406LLU,7411LLU,1LLU),_1e1976730_Range16(7413LLU,7414LLU,1LLU),_1e1976730_Range16(7418LLU,8501LLU,1083LLU),_1e1976730_Range16(8502LLU,8504LLU,1LLU),_1e1976730_Range16(11568LLU,11623LLU,1LLU),_1e1976730_Range16(11648LLU,11670LLU,1LLU),_1e1976730_Range16(11680LLU,11686LLU,1LLU),_1e1976730_Range16(11688LLU,11694LLU,1LLU),_1e1976730_Range16(11696LLU,11702LLU,1LLU),_1e1976730_Range16(11704LLU,11710LLU,1LLU),_1e1976730_Range16(11712LLU,11718LLU,1LLU),_1e1976730_Range16(11720LLU,11726LLU,1LLU),_1e1976730_Range16(11728LLU,11734LLU,1LLU),_1e1976730_Range16(11736LLU,11742LLU,1LLU),_1e1976730_Range16(12294LLU,12348LLU,54LLU),_1e1976730_Range16(12353LLU,12438LLU,1LLU),_1e1976730_Range16(12447LLU,12449LLU,2LLU),_1e1976730_Range16(12450LLU,12538LLU,1LLU),_1e1976730_Range16(12543LLU,12549LLU,6LLU),_1e1976730_Range16(12550LLU,12591LLU,1LLU),_1e1976730_Range16(12593LLU,12686LLU,1LLU),_1e1976730_Range16(12704LLU,12735LLU,1LLU),_1e1976730_Range16(12784LLU,12799LLU,1LLU),_1e1976730_Range16(13312LLU,19903LLU,1LLU),_1e1976730_Range16(19968LLU,40980LLU,1LLU),_1e1976730_Range16(40982LLU,42124LLU,1LLU),_1e1976730_Range16(42192LLU,42231LLU,1LLU),_1e1976730_Range16(42240LLU,42507LLU,1LLU),_1e1976730_Range16(42512LLU,42527LLU,1LLU),_1e1976730_Range16(42538LLU,42539LLU,1LLU),_1e1976730_Range16(42606LLU,42656LLU,50LLU),_1e1976730_Range16(42657LLU,42725LLU,1LLU),_1e1976730_Range16(42895LLU,42999LLU,104LLU),_1e1976730_Range16(43003LLU,43009LLU,1LLU),_1e1976730_Range16(43011LLU,43013LLU,1LLU),_1e1976730_Range16(43015LLU,43018LLU,1LLU),_1e1976730_Range16(43020LLU,43042LLU,1LLU),_1e1976730_Range16(43072LLU,43123LLU,1LLU),_1e1976730_Range16(43138LLU,43187LLU,1LLU),_1e1976730_Range16(43250LLU,43255LLU,1LLU),_1e1976730_Range16(43259LLU,43261LLU,2LLU),_1e1976730_Range16(43262LLU,43274LLU,12LLU),_1e1976730_Range16(43275LLU,43301LLU,1LLU),_1e1976730_Range16(43312LLU,43334LLU,1LLU),_1e1976730_Range16(43360LLU,43388LLU,1LLU),_1e1976730_Range16(43396LLU,43442LLU,1LLU),_1e1976730_Range16(43488LLU,43492LLU,1LLU),_1e1976730_Range16(43495LLU,43503LLU,1LLU),_1e1976730_Range16(43514LLU,43518LLU,1LLU),_1e1976730_Range16(43520LLU,43560LLU,1LLU),_1e1976730_Range16(43584LLU,43586LLU,1LLU),_1e1976730_Range16(43588LLU,43595LLU,1LLU),_1e1976730_Range16(43616LLU,43631LLU,1LLU),_1e1976730_Range16(43633LLU,43638LLU,1LLU),_1e1976730_Range16(43642LLU,43646LLU,4LLU),_1e1976730_Range16(43647LLU,43695LLU,1LLU),_1e1976730_Range16(43697LLU,43701LLU,4LLU),_1e1976730_Range16(43702LLU,43705LLU,3LLU),_1e1976730_Range16(43706LLU,43709LLU,1LLU),_1e1976730_Range16(43712LLU,43714LLU,2LLU),_1e1976730_Range16(43739LLU,43740LLU,1LLU),_1e1976730_Range16(43744LLU,43754LLU,1LLU),_1e1976730_Range16(43762LLU,43777LLU,15LLU),_1e1976730_Range16(43778LLU,43782LLU,1LLU),_1e1976730_Range16(43785LLU,43790LLU,1LLU),_1e1976730_Range16(43793LLU,43798LLU,1LLU),_1e1976730_Range16(43808LLU,43814LLU,1LLU),_1e1976730_Range16(43816LLU,43822LLU,1LLU),_1e1976730_Range16(43968LLU,44002LLU,1LLU),_1e1976730_Range16(44032LLU,55203LLU,1LLU),_1e1976730_Range16(55216LLU,55238LLU,1LLU),_1e1976730_Range16(55243LLU,55291LLU,1LLU),_1e1976730_Range16(63744LLU,64109LLU,1LLU),_1e1976730_Range16(64112LLU,64217LLU,1LLU),_1e1976730_Range16(64285LLU,64287LLU,2LLU),_1e1976730_Range16(64288LLU,64296LLU,1LLU),_1e1976730_Range16(64298LLU,64310LLU,1LLU),_1e1976730_Range16(64312LLU,64316LLU,1LLU),_1e1976730_Range16(64318LLU,64320LLU,2LLU),_1e1976730_Range16(64321LLU,64323LLU,2LLU),_1e1976730_Range16(64324LLU,64326LLU,2LLU),_1e1976730_Range16(64327LLU,64433LLU,1LLU),_1e1976730_Range16(64467LLU,64829LLU,1LLU),_1e1976730_Range16(64848LLU,64911LLU,1LLU),_1e1976730_Range16(64914LLU,64967LLU,1LLU),_1e1976730_Range16(65008LLU,65019LLU,1LLU),_1e1976730_Range16(65136LLU,65140LLU,1LLU),_1e1976730_Range16(65142LLU,65276LLU,1LLU),_1e1976730_Range16(65382LLU,65391LLU,1LLU),_1e1976730_Range16(65393LLU,65437LLU,1LLU),_1e1976730_Range16(65440LLU,65470LLU,1LLU),_1e1976730_Range16(65474LLU,65479LLU,1LLU),_1e1976730_Range16(65482LLU,65487LLU,1LLU),_1e1976730_Range16(65490LLU,65495LLU,1LLU),_1e1976730_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(65536LLU,65547LLU,1LLU),_1e1976730_Range32(65549LLU,65574LLU,1LLU),_1e1976730_Range32(65576LLU,65594LLU,1LLU),_1e1976730_Range32(65596LLU,65597LLU,1LLU),_1e1976730_Range32(65599LLU,65613LLU,1LLU),_1e1976730_Range32(65616LLU,65629LLU,1LLU),_1e1976730_Range32(65664LLU,65786LLU,1LLU),_1e1976730_Range32(66176LLU,66204LLU,1LLU),_1e1976730_Range32(66208LLU,66256LLU,1LLU),_1e1976730_Range32(66304LLU,66335LLU,1LLU),_1e1976730_Range32(66349LLU,66368LLU,1LLU),_1e1976730_Range32(66370LLU,66377LLU,1LLU),_1e1976730_Range32(66384LLU,66421LLU,1LLU),_1e1976730_Range32(66432LLU,66461LLU,1LLU),_1e1976730_Range32(66464LLU,66499LLU,1LLU),_1e1976730_Range32(66504LLU,66511LLU,1LLU),_1e1976730_Range32(66640LLU,66717LLU,1LLU),_1e1976730_Range32(66816LLU,66855LLU,1LLU),_1e1976730_Range32(66864LLU,66915LLU,1LLU),_1e1976730_Range32(67072LLU,67382LLU,1LLU),_1e1976730_Range32(67392LLU,67413LLU,1LLU),_1e1976730_Range32(67424LLU,67431LLU,1LLU),_1e1976730_Range32(67584LLU,67589LLU,1LLU),_1e1976730_Range32(67592LLU,67594LLU,2LLU),_1e1976730_Range32(67595LLU,67637LLU,1LLU),_1e1976730_Range32(67639LLU,67640LLU,1LLU),_1e1976730_Range32(67644LLU,67647LLU,3LLU),_1e1976730_Range32(67648LLU,67669LLU,1LLU),_1e1976730_Range32(67680LLU,67702LLU,1LLU),_1e1976730_Range32(67712LLU,67742LLU,1LLU),_1e1976730_Range32(67808LLU,67826LLU,1LLU),_1e1976730_Range32(67828LLU,67829LLU,1LLU),_1e1976730_Range32(67840LLU,67861LLU,1LLU),_1e1976730_Range32(67872LLU,67897LLU,1LLU),_1e1976730_Range32(67968LLU,68023LLU,1LLU),_1e1976730_Range32(68030LLU,68031LLU,1LLU),_1e1976730_Range32(68096LLU,68112LLU,16LLU),_1e1976730_Range32(68113LLU,68115LLU,1LLU),_1e1976730_Range32(68117LLU,68119LLU,1LLU),_1e1976730_Range32(68121LLU,68149LLU,1LLU),_1e1976730_Range32(68192LLU,68220LLU,1LLU),_1e1976730_Range32(68224LLU,68252LLU,1LLU),_1e1976730_Range32(68288LLU,68295LLU,1LLU),_1e1976730_Range32(68297LLU,68324LLU,1LLU),_1e1976730_Range32(68352LLU,68405LLU,1LLU),_1e1976730_Range32(68416LLU,68437LLU,1LLU),_1e1976730_Range32(68448LLU,68466LLU,1LLU),_1e1976730_Range32(68480LLU,68497LLU,1LLU),_1e1976730_Range32(68608LLU,68680LLU,1LLU),_1e1976730_Range32(68864LLU,68899LLU,1LLU),_1e1976730_Range32(69248LLU,69289LLU,1LLU),_1e1976730_Range32(69296LLU,69297LLU,1LLU),_1e1976730_Range32(69376LLU,69404LLU,1LLU),_1e1976730_Range32(69415LLU,69424LLU,9LLU),_1e1976730_Range32(69425LLU,69445LLU,1LLU),_1e1976730_Range32(69488LLU,69505LLU,1LLU),_1e1976730_Range32(69552LLU,69572LLU,1LLU),_1e1976730_Range32(69600LLU,69622LLU,1LLU),_1e1976730_Range32(69635LLU,69687LLU,1LLU),_1e1976730_Range32(69745LLU,69746LLU,1LLU),_1e1976730_Range32(69749LLU,69763LLU,14LLU),_1e1976730_Range32(69764LLU,69807LLU,1LLU),_1e1976730_Range32(69840LLU,69864LLU,1LLU),_1e1976730_Range32(69891LLU,69926LLU,1LLU),_1e1976730_Range32(69956LLU,69959LLU,3LLU),_1e1976730_Range32(69968LLU,70002LLU,1LLU),_1e1976730_Range32(70006LLU,70019LLU,13LLU),_1e1976730_Range32(70020LLU,70066LLU,1LLU),_1e1976730_Range32(70081LLU,70084LLU,1LLU),_1e1976730_Range32(70106LLU,70108LLU,2LLU),_1e1976730_Range32(70144LLU,70161LLU,1LLU),_1e1976730_Range32(70163LLU,70187LLU,1LLU),_1e1976730_Range32(70207LLU,70208LLU,1LLU),_1e1976730_Range32(70272LLU,70278LLU,1LLU),_1e1976730_Range32(70280LLU,70282LLU,2LLU),_1e1976730_Range32(70283LLU,70285LLU,1LLU),_1e1976730_Range32(70287LLU,70301LLU,1LLU),_1e1976730_Range32(70303LLU,70312LLU,1LLU),_1e1976730_Range32(70320LLU,70366LLU,1LLU),_1e1976730_Range32(70405LLU,70412LLU,1LLU),_1e1976730_Range32(70415LLU,70416LLU,1LLU),_1e1976730_Range32(70419LLU,70440LLU,1LLU),_1e1976730_Range32(70442LLU,70448LLU,1LLU),_1e1976730_Range32(70450LLU,70451LLU,1LLU),_1e1976730_Range32(70453LLU,70457LLU,1LLU),_1e1976730_Range32(70461LLU,70480LLU,19LLU),_1e1976730_Range32(70493LLU,70497LLU,1LLU),_1e1976730_Range32(70656LLU,70708LLU,1LLU),_1e1976730_Range32(70727LLU,70730LLU,1LLU),_1e1976730_Range32(70751LLU,70753LLU,1LLU),_1e1976730_Range32(70784LLU,70831LLU,1LLU),_1e1976730_Range32(70852LLU,70853LLU,1LLU),_1e1976730_Range32(70855LLU,71040LLU,185LLU),_1e1976730_Range32(71041LLU,71086LLU,1LLU),_1e1976730_Range32(71128LLU,71131LLU,1LLU),_1e1976730_Range32(71168LLU,71215LLU,1LLU),_1e1976730_Range32(71236LLU,71296LLU,60LLU),_1e1976730_Range32(71297LLU,71338LLU,1LLU),_1e1976730_Range32(71352LLU,71424LLU,72LLU),_1e1976730_Range32(71425LLU,71450LLU,1LLU),_1e1976730_Range32(71488LLU,71494LLU,1LLU),_1e1976730_Range32(71680LLU,71723LLU,1LLU),_1e1976730_Range32(71935LLU,71942LLU,1LLU),_1e1976730_Range32(71945LLU,71948LLU,3LLU),_1e1976730_Range32(71949LLU,71955LLU,1LLU),_1e1976730_Range32(71957LLU,71958LLU,1LLU),_1e1976730_Range32(71960LLU,71983LLU,1LLU),_1e1976730_Range32(71999LLU,72001LLU,2LLU),_1e1976730_Range32(72096LLU,72103LLU,1LLU),_1e1976730_Range32(72106LLU,72144LLU,1LLU),_1e1976730_Range32(72161LLU,72163LLU,2LLU),_1e1976730_Range32(72192LLU,72203LLU,11LLU),_1e1976730_Range32(72204LLU,72242LLU,1LLU),_1e1976730_Range32(72250LLU,72272LLU,22LLU),_1e1976730_Range32(72284LLU,72329LLU,1LLU),_1e1976730_Range32(72349LLU,72368LLU,19LLU),_1e1976730_Range32(72369LLU,72440LLU,1LLU),_1e1976730_Range32(72704LLU,72712LLU,1LLU),_1e1976730_Range32(72714LLU,72750LLU,1LLU),_1e1976730_Range32(72768LLU,72818LLU,50LLU),_1e1976730_Range32(72819LLU,72847LLU,1LLU),_1e1976730_Range32(72960LLU,72966LLU,1LLU),_1e1976730_Range32(72968LLU,72969LLU,1LLU),_1e1976730_Range32(72971LLU,73008LLU,1LLU),_1e1976730_Range32(73030LLU,73056LLU,26LLU),_1e1976730_Range32(73057LLU,73061LLU,1LLU),_1e1976730_Range32(73063LLU,73064LLU,1LLU),_1e1976730_Range32(73066LLU,73097LLU,1LLU),_1e1976730_Range32(73112LLU,73440LLU,328LLU),_1e1976730_Range32(73441LLU,73458LLU,1LLU),_1e1976730_Range32(73474LLU,73476LLU,2LLU),_1e1976730_Range32(73477LLU,73488LLU,1LLU),_1e1976730_Range32(73490LLU,73523LLU,1LLU),_1e1976730_Range32(73648LLU,73728LLU,80LLU),_1e1976730_Range32(73729LLU,74649LLU,1LLU),_1e1976730_Range32(74880LLU,75075LLU,1LLU),_1e1976730_Range32(77712LLU,77808LLU,1LLU),_1e1976730_Range32(77824LLU,78895LLU,1LLU),_1e1976730_Range32(78913LLU,78918LLU,1LLU),_1e1976730_Range32(82944LLU,83526LLU,1LLU),_1e1976730_Range32(92160LLU,92728LLU,1LLU),_1e1976730_Range32(92736LLU,92766LLU,1LLU),_1e1976730_Range32(92784LLU,92862LLU,1LLU),_1e1976730_Range32(92880LLU,92909LLU,1LLU),_1e1976730_Range32(92928LLU,92975LLU,1LLU),_1e1976730_Range32(93027LLU,93047LLU,1LLU),_1e1976730_Range32(93053LLU,93071LLU,1LLU),_1e1976730_Range32(93952LLU,94026LLU,1LLU),_1e1976730_Range32(94032LLU,94208LLU,176LLU),_1e1976730_Range32(94209LLU,100343LLU,1LLU),_1e1976730_Range32(100352LLU,101589LLU,1LLU),_1e1976730_Range32(101632LLU,101640LLU,1LLU),_1e1976730_Range32(110592LLU,110882LLU,1LLU),_1e1976730_Range32(110898LLU,110928LLU,30LLU),_1e1976730_Range32(110929LLU,110930LLU,1LLU),_1e1976730_Range32(110933LLU,110948LLU,15LLU),_1e1976730_Range32(110949LLU,110951LLU,1LLU),_1e1976730_Range32(110960LLU,111355LLU,1LLU),_1e1976730_Range32(113664LLU,113770LLU,1LLU),_1e1976730_Range32(113776LLU,113788LLU,1LLU),_1e1976730_Range32(113792LLU,113800LLU,1LLU),_1e1976730_Range32(113808LLU,113817LLU,1LLU),_1e1976730_Range32(122634LLU,123136LLU,502LLU),_1e1976730_Range32(123137LLU,123180LLU,1LLU),_1e1976730_Range32(123214LLU,123536LLU,322LLU),_1e1976730_Range32(123537LLU,123565LLU,1LLU),_1e1976730_Range32(123584LLU,123627LLU,1LLU),_1e1976730_Range32(124112LLU,124138LLU,1LLU),_1e1976730_Range32(124896LLU,124902LLU,1LLU),_1e1976730_Range32(124904LLU,124907LLU,1LLU),_1e1976730_Range32(124909LLU,124910LLU,1LLU),_1e1976730_Range32(124912LLU,124926LLU,1LLU),_1e1976730_Range32(124928LLU,125124LLU,1LLU),_1e1976730_Range32(126464LLU,126467LLU,1LLU),_1e1976730_Range32(126469LLU,126495LLU,1LLU),_1e1976730_Range32(126497LLU,126498LLU,1LLU),_1e1976730_Range32(126500LLU,126503LLU,3LLU),_1e1976730_Range32(126505LLU,126514LLU,1LLU),_1e1976730_Range32(126516LLU,126519LLU,1LLU),_1e1976730_Range32(126521LLU,126523LLU,2LLU),_1e1976730_Range32(126530LLU,126535LLU,5LLU),_1e1976730_Range32(126537LLU,126541LLU,2LLU),_1e1976730_Range32(126542LLU,126543LLU,1LLU),_1e1976730_Range32(126545LLU,126546LLU,1LLU),_1e1976730_Range32(126548LLU,126551LLU,3LLU),_1e1976730_Range32(126553LLU,126561LLU,2LLU),_1e1976730_Range32(126562LLU,126564LLU,2LLU),_1e1976730_Range32(126567LLU,126570LLU,1LLU),_1e1976730_Range32(126572LLU,126578LLU,1LLU),_1e1976730_Range32(126580LLU,126583LLU,1LLU),_1e1976730_Range32(126585LLU,126588LLU,1LLU),_1e1976730_Range32(126590LLU,126592LLU,2LLU),_1e1976730_Range32(126593LLU,126601LLU,1LLU),_1e1976730_Range32(126603LLU,126619LLU,1LLU),_1e1976730_Range32(126625LLU,126627LLU,1LLU),_1e1976730_Range32(126629LLU,126633LLU,1LLU),_1e1976730_Range32(126635LLU,126651LLU,1LLU),_1e1976730_Range32(131072LLU,173791LLU,1LLU),_1e1976730_Range32(173824LLU,177977LLU,1LLU),_1e1976730_Range32(177984LLU,178205LLU,1LLU),_1e1976730_Range32(178208LLU,183969LLU,1LLU),_1e1976730_Range32(183984LLU,191456LLU,1LLU),_1e1976730_Range32(194560LLU,195101LLU,1LLU),_1e1976730_Range32(196608LLU,201546LLU,1LLU),_1e1976730_Range32(201552LLU,205743LLU,1LLU)}),1LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LT = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(453LLU,459LLU,3LLU),_1e1976730_Range16(498LLU,8072LLU,7574LLU),_1e1976730_Range16(8073LLU,8079LLU,1LLU),_1e1976730_Range16(8088LLU,8095LLU,1LLU),_1e1976730_Range16(8104LLU,8111LLU,1LLU),_1e1976730_Range16(8124LLU,8140LLU,16LLU),_1e1976730_Range16(8188LLU,8188LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LU = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(65LLU,90LLU,1LLU),_1e1976730_Range16(192LLU,214LLU,1LLU),_1e1976730_Range16(216LLU,222LLU,1LLU),_1e1976730_Range16(256LLU,310LLU,2LLU),_1e1976730_Range16(313LLU,327LLU,2LLU),_1e1976730_Range16(330LLU,376LLU,2LLU),_1e1976730_Range16(377LLU,381LLU,2LLU),_1e1976730_Range16(385LLU,386LLU,1LLU),_1e1976730_Range16(388LLU,390LLU,2LLU),_1e1976730_Range16(391LLU,393LLU,2LLU),_1e1976730_Range16(394LLU,395LLU,1LLU),_1e1976730_Range16(398LLU,401LLU,1LLU),_1e1976730_Range16(403LLU,404LLU,1LLU),_1e1976730_Range16(406LLU,408LLU,1LLU),_1e1976730_Range16(412LLU,413LLU,1LLU),_1e1976730_Range16(415LLU,416LLU,1LLU),_1e1976730_Range16(418LLU,422LLU,2LLU),_1e1976730_Range16(423LLU,425LLU,2LLU),_1e1976730_Range16(428LLU,430LLU,2LLU),_1e1976730_Range16(431LLU,433LLU,2LLU),_1e1976730_Range16(434LLU,435LLU,1LLU),_1e1976730_Range16(437LLU,439LLU,2LLU),_1e1976730_Range16(440LLU,444LLU,4LLU),_1e1976730_Range16(452LLU,461LLU,3LLU),_1e1976730_Range16(463LLU,475LLU,2LLU),_1e1976730_Range16(478LLU,494LLU,2LLU),_1e1976730_Range16(497LLU,500LLU,3LLU),_1e1976730_Range16(502LLU,504LLU,1LLU),_1e1976730_Range16(506LLU,562LLU,2LLU),_1e1976730_Range16(570LLU,571LLU,1LLU),_1e1976730_Range16(573LLU,574LLU,1LLU),_1e1976730_Range16(577LLU,579LLU,2LLU),_1e1976730_Range16(580LLU,582LLU,1LLU),_1e1976730_Range16(584LLU,590LLU,2LLU),_1e1976730_Range16(880LLU,882LLU,2LLU),_1e1976730_Range16(886LLU,895LLU,9LLU),_1e1976730_Range16(902LLU,904LLU,2LLU),_1e1976730_Range16(905LLU,906LLU,1LLU),_1e1976730_Range16(908LLU,910LLU,2LLU),_1e1976730_Range16(911LLU,913LLU,2LLU),_1e1976730_Range16(914LLU,929LLU,1LLU),_1e1976730_Range16(931LLU,939LLU,1LLU),_1e1976730_Range16(975LLU,978LLU,3LLU),_1e1976730_Range16(979LLU,980LLU,1LLU),_1e1976730_Range16(984LLU,1006LLU,2LLU),_1e1976730_Range16(1012LLU,1015LLU,3LLU),_1e1976730_Range16(1017LLU,1018LLU,1LLU),_1e1976730_Range16(1021LLU,1071LLU,1LLU),_1e1976730_Range16(1120LLU,1152LLU,2LLU),_1e1976730_Range16(1162LLU,1216LLU,2LLU),_1e1976730_Range16(1217LLU,1229LLU,2LLU),_1e1976730_Range16(1232LLU,1326LLU,2LLU),_1e1976730_Range16(1329LLU,1366LLU,1LLU),_1e1976730_Range16(4256LLU,4293LLU,1LLU),_1e1976730_Range16(4295LLU,4301LLU,6LLU),_1e1976730_Range16(5024LLU,5109LLU,1LLU),_1e1976730_Range16(7312LLU,7354LLU,1LLU),_1e1976730_Range16(7357LLU,7359LLU,1LLU),_1e1976730_Range16(7680LLU,7828LLU,2LLU),_1e1976730_Range16(7838LLU,7934LLU,2LLU),_1e1976730_Range16(7944LLU,7951LLU,1LLU),_1e1976730_Range16(7960LLU,7965LLU,1LLU),_1e1976730_Range16(7976LLU,7983LLU,1LLU),_1e1976730_Range16(7992LLU,7999LLU,1LLU),_1e1976730_Range16(8008LLU,8013LLU,1LLU),_1e1976730_Range16(8025LLU,8031LLU,2LLU),_1e1976730_Range16(8040LLU,8047LLU,1LLU),_1e1976730_Range16(8120LLU,8123LLU,1LLU),_1e1976730_Range16(8136LLU,8139LLU,1LLU),_1e1976730_Range16(8152LLU,8155LLU,1LLU),_1e1976730_Range16(8168LLU,8172LLU,1LLU),_1e1976730_Range16(8184LLU,8187LLU,1LLU),_1e1976730_Range16(8450LLU,8455LLU,5LLU),_1e1976730_Range16(8459LLU,8461LLU,1LLU),_1e1976730_Range16(8464LLU,8466LLU,1LLU),_1e1976730_Range16(8469LLU,8473LLU,4LLU),_1e1976730_Range16(8474LLU,8477LLU,1LLU),_1e1976730_Range16(8484LLU,8490LLU,2LLU),_1e1976730_Range16(8491LLU,8493LLU,1LLU),_1e1976730_Range16(8496LLU,8499LLU,1LLU),_1e1976730_Range16(8510LLU,8511LLU,1LLU),_1e1976730_Range16(8517LLU,8579LLU,62LLU),_1e1976730_Range16(11264LLU,11311LLU,1LLU),_1e1976730_Range16(11360LLU,11362LLU,2LLU),_1e1976730_Range16(11363LLU,11364LLU,1LLU),_1e1976730_Range16(11367LLU,11373LLU,2LLU),_1e1976730_Range16(11374LLU,11376LLU,1LLU),_1e1976730_Range16(11378LLU,11381LLU,3LLU),_1e1976730_Range16(11390LLU,11392LLU,1LLU),_1e1976730_Range16(11394LLU,11490LLU,2LLU),_1e1976730_Range16(11499LLU,11501LLU,2LLU),_1e1976730_Range16(11506LLU,42560LLU,31054LLU),_1e1976730_Range16(42562LLU,42604LLU,2LLU),_1e1976730_Range16(42624LLU,42650LLU,2LLU),_1e1976730_Range16(42786LLU,42798LLU,2LLU),_1e1976730_Range16(42802LLU,42862LLU,2LLU),_1e1976730_Range16(42873LLU,42877LLU,2LLU),_1e1976730_Range16(42878LLU,42886LLU,2LLU),_1e1976730_Range16(42891LLU,42893LLU,2LLU),_1e1976730_Range16(42896LLU,42898LLU,2LLU),_1e1976730_Range16(42902LLU,42922LLU,2LLU),_1e1976730_Range16(42923LLU,42926LLU,1LLU),_1e1976730_Range16(42928LLU,42932LLU,1LLU),_1e1976730_Range16(42934LLU,42948LLU,2LLU),_1e1976730_Range16(42949LLU,42951LLU,1LLU),_1e1976730_Range16(42953LLU,42960LLU,7LLU),_1e1976730_Range16(42966LLU,42968LLU,2LLU),_1e1976730_Range16(42997LLU,65313LLU,22316LLU),_1e1976730_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66560LLU,66599LLU,1LLU),_1e1976730_Range32(66736LLU,66771LLU,1LLU),_1e1976730_Range32(66928LLU,66938LLU,1LLU),_1e1976730_Range32(66940LLU,66954LLU,1LLU),_1e1976730_Range32(66956LLU,66962LLU,1LLU),_1e1976730_Range32(66964LLU,66965LLU,1LLU),_1e1976730_Range32(68736LLU,68786LLU,1LLU),_1e1976730_Range32(71840LLU,71871LLU,1LLU),_1e1976730_Range32(93760LLU,93791LLU,1LLU),_1e1976730_Range32(119808LLU,119833LLU,1LLU),_1e1976730_Range32(119860LLU,119885LLU,1LLU),_1e1976730_Range32(119912LLU,119937LLU,1LLU),_1e1976730_Range32(119964LLU,119966LLU,2LLU),_1e1976730_Range32(119967LLU,119973LLU,3LLU),_1e1976730_Range32(119974LLU,119977LLU,3LLU),_1e1976730_Range32(119978LLU,119980LLU,1LLU),_1e1976730_Range32(119982LLU,119989LLU,1LLU),_1e1976730_Range32(120016LLU,120041LLU,1LLU),_1e1976730_Range32(120068LLU,120069LLU,1LLU),_1e1976730_Range32(120071LLU,120074LLU,1LLU),_1e1976730_Range32(120077LLU,120084LLU,1LLU),_1e1976730_Range32(120086LLU,120092LLU,1LLU),_1e1976730_Range32(120120LLU,120121LLU,1LLU),_1e1976730_Range32(120123LLU,120126LLU,1LLU),_1e1976730_Range32(120128LLU,120132LLU,1LLU),_1e1976730_Range32(120134LLU,120138LLU,4LLU),_1e1976730_Range32(120139LLU,120144LLU,1LLU),_1e1976730_Range32(120172LLU,120197LLU,1LLU),_1e1976730_Range32(120224LLU,120249LLU,1LLU),_1e1976730_Range32(120276LLU,120301LLU,1LLU),_1e1976730_Range32(120328LLU,120353LLU,1LLU),_1e1976730_Range32(120380LLU,120405LLU,1LLU),_1e1976730_Range32(120432LLU,120457LLU,1LLU),_1e1976730_Range32(120488LLU,120512LLU,1LLU),_1e1976730_Range32(120546LLU,120570LLU,1LLU),_1e1976730_Range32(120604LLU,120628LLU,1LLU),_1e1976730_Range32(120662LLU,120686LLU,1LLU),_1e1976730_Range32(120720LLU,120744LLU,1LLU),_1e1976730_Range32(120778LLU,125184LLU,4406LLU),_1e1976730_Range32(125185LLU,125217LLU,1LLU)}),3LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__M = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(768LLU,879LLU,1LLU),_1e1976730_Range16(1155LLU,1161LLU,1LLU),_1e1976730_Range16(1425LLU,1469LLU,1LLU),_1e1976730_Range16(1471LLU,1473LLU,2LLU),_1e1976730_Range16(1474LLU,1476LLU,2LLU),_1e1976730_Range16(1477LLU,1479LLU,2LLU),_1e1976730_Range16(1552LLU,1562LLU,1LLU),_1e1976730_Range16(1611LLU,1631LLU,1LLU),_1e1976730_Range16(1648LLU,1750LLU,102LLU),_1e1976730_Range16(1751LLU,1756LLU,1LLU),_1e1976730_Range16(1759LLU,1764LLU,1LLU),_1e1976730_Range16(1767LLU,1768LLU,1LLU),_1e1976730_Range16(1770LLU,1773LLU,1LLU),_1e1976730_Range16(1809LLU,1840LLU,31LLU),_1e1976730_Range16(1841LLU,1866LLU,1LLU),_1e1976730_Range16(1958LLU,1968LLU,1LLU),_1e1976730_Range16(2027LLU,2035LLU,1LLU),_1e1976730_Range16(2045LLU,2070LLU,25LLU),_1e1976730_Range16(2071LLU,2073LLU,1LLU),_1e1976730_Range16(2075LLU,2083LLU,1LLU),_1e1976730_Range16(2085LLU,2087LLU,1LLU),_1e1976730_Range16(2089LLU,2093LLU,1LLU),_1e1976730_Range16(2137LLU,2139LLU,1LLU),_1e1976730_Range16(2200LLU,2207LLU,1LLU),_1e1976730_Range16(2250LLU,2273LLU,1LLU),_1e1976730_Range16(2275LLU,2307LLU,1LLU),_1e1976730_Range16(2362LLU,2364LLU,1LLU),_1e1976730_Range16(2366LLU,2383LLU,1LLU),_1e1976730_Range16(2385LLU,2391LLU,1LLU),_1e1976730_Range16(2402LLU,2403LLU,1LLU),_1e1976730_Range16(2433LLU,2435LLU,1LLU),_1e1976730_Range16(2492LLU,2494LLU,2LLU),_1e1976730_Range16(2495LLU,2500LLU,1LLU),_1e1976730_Range16(2503LLU,2504LLU,1LLU),_1e1976730_Range16(2507LLU,2509LLU,1LLU),_1e1976730_Range16(2519LLU,2530LLU,11LLU),_1e1976730_Range16(2531LLU,2558LLU,27LLU),_1e1976730_Range16(2561LLU,2563LLU,1LLU),_1e1976730_Range16(2620LLU,2622LLU,2LLU),_1e1976730_Range16(2623LLU,2626LLU,1LLU),_1e1976730_Range16(2631LLU,2632LLU,1LLU),_1e1976730_Range16(2635LLU,2637LLU,1LLU),_1e1976730_Range16(2641LLU,2672LLU,31LLU),_1e1976730_Range16(2673LLU,2677LLU,4LLU),_1e1976730_Range16(2689LLU,2691LLU,1LLU),_1e1976730_Range16(2748LLU,2750LLU,2LLU),_1e1976730_Range16(2751LLU,2757LLU,1LLU),_1e1976730_Range16(2759LLU,2761LLU,1LLU),_1e1976730_Range16(2763LLU,2765LLU,1LLU),_1e1976730_Range16(2786LLU,2787LLU,1LLU),_1e1976730_Range16(2810LLU,2815LLU,1LLU),_1e1976730_Range16(2817LLU,2819LLU,1LLU),_1e1976730_Range16(2876LLU,2878LLU,2LLU),_1e1976730_Range16(2879LLU,2884LLU,1LLU),_1e1976730_Range16(2887LLU,2888LLU,1LLU),_1e1976730_Range16(2891LLU,2893LLU,1LLU),_1e1976730_Range16(2901LLU,2903LLU,1LLU),_1e1976730_Range16(2914LLU,2915LLU,1LLU),_1e1976730_Range16(2946LLU,3006LLU,60LLU),_1e1976730_Range16(3007LLU,3010LLU,1LLU),_1e1976730_Range16(3014LLU,3016LLU,1LLU),_1e1976730_Range16(3018LLU,3021LLU,1LLU),_1e1976730_Range16(3031LLU,3072LLU,41LLU),_1e1976730_Range16(3073LLU,3076LLU,1LLU),_1e1976730_Range16(3132LLU,3134LLU,2LLU),_1e1976730_Range16(3135LLU,3140LLU,1LLU),_1e1976730_Range16(3142LLU,3144LLU,1LLU),_1e1976730_Range16(3146LLU,3149LLU,1LLU),_1e1976730_Range16(3157LLU,3158LLU,1LLU),_1e1976730_Range16(3170LLU,3171LLU,1LLU),_1e1976730_Range16(3201LLU,3203LLU,1LLU),_1e1976730_Range16(3260LLU,3262LLU,2LLU),_1e1976730_Range16(3263LLU,3268LLU,1LLU),_1e1976730_Range16(3270LLU,3272LLU,1LLU),_1e1976730_Range16(3274LLU,3277LLU,1LLU),_1e1976730_Range16(3285LLU,3286LLU,1LLU),_1e1976730_Range16(3298LLU,3299LLU,1LLU),_1e1976730_Range16(3315LLU,3328LLU,13LLU),_1e1976730_Range16(3329LLU,3331LLU,1LLU),_1e1976730_Range16(3387LLU,3388LLU,1LLU),_1e1976730_Range16(3390LLU,3396LLU,1LLU),_1e1976730_Range16(3398LLU,3400LLU,1LLU),_1e1976730_Range16(3402LLU,3405LLU,1LLU),_1e1976730_Range16(3415LLU,3426LLU,11LLU),_1e1976730_Range16(3427LLU,3457LLU,30LLU),_1e1976730_Range16(3458LLU,3459LLU,1LLU),_1e1976730_Range16(3530LLU,3535LLU,5LLU),_1e1976730_Range16(3536LLU,3540LLU,1LLU),_1e1976730_Range16(3542LLU,3544LLU,2LLU),_1e1976730_Range16(3545LLU,3551LLU,1LLU),_1e1976730_Range16(3570LLU,3571LLU,1LLU),_1e1976730_Range16(3633LLU,3636LLU,3LLU),_1e1976730_Range16(3637LLU,3642LLU,1LLU),_1e1976730_Range16(3655LLU,3662LLU,1LLU),_1e1976730_Range16(3761LLU,3764LLU,3LLU),_1e1976730_Range16(3765LLU,3772LLU,1LLU),_1e1976730_Range16(3784LLU,3790LLU,1LLU),_1e1976730_Range16(3864LLU,3865LLU,1LLU),_1e1976730_Range16(3893LLU,3897LLU,2LLU),_1e1976730_Range16(3902LLU,3903LLU,1LLU),_1e1976730_Range16(3953LLU,3972LLU,1LLU),_1e1976730_Range16(3974LLU,3975LLU,1LLU),_1e1976730_Range16(3981LLU,3991LLU,1LLU),_1e1976730_Range16(3993LLU,4028LLU,1LLU),_1e1976730_Range16(4038LLU,4139LLU,101LLU),_1e1976730_Range16(4140LLU,4158LLU,1LLU),_1e1976730_Range16(4182LLU,4185LLU,1LLU),_1e1976730_Range16(4190LLU,4192LLU,1LLU),_1e1976730_Range16(4194LLU,4196LLU,1LLU),_1e1976730_Range16(4199LLU,4205LLU,1LLU),_1e1976730_Range16(4209LLU,4212LLU,1LLU),_1e1976730_Range16(4226LLU,4237LLU,1LLU),_1e1976730_Range16(4239LLU,4250LLU,11LLU),_1e1976730_Range16(4251LLU,4253LLU,1LLU),_1e1976730_Range16(4957LLU,4959LLU,1LLU),_1e1976730_Range16(5906LLU,5909LLU,1LLU),_1e1976730_Range16(5938LLU,5940LLU,1LLU),_1e1976730_Range16(5970LLU,5971LLU,1LLU),_1e1976730_Range16(6002LLU,6003LLU,1LLU),_1e1976730_Range16(6068LLU,6099LLU,1LLU),_1e1976730_Range16(6109LLU,6155LLU,46LLU),_1e1976730_Range16(6156LLU,6157LLU,1LLU),_1e1976730_Range16(6159LLU,6277LLU,118LLU),_1e1976730_Range16(6278LLU,6313LLU,35LLU),_1e1976730_Range16(6432LLU,6443LLU,1LLU),_1e1976730_Range16(6448LLU,6459LLU,1LLU),_1e1976730_Range16(6679LLU,6683LLU,1LLU),_1e1976730_Range16(6741LLU,6750LLU,1LLU),_1e1976730_Range16(6752LLU,6780LLU,1LLU),_1e1976730_Range16(6783LLU,6832LLU,49LLU),_1e1976730_Range16(6833LLU,6862LLU,1LLU),_1e1976730_Range16(6912LLU,6916LLU,1LLU),_1e1976730_Range16(6964LLU,6980LLU,1LLU),_1e1976730_Range16(7019LLU,7027LLU,1LLU),_1e1976730_Range16(7040LLU,7042LLU,1LLU),_1e1976730_Range16(7073LLU,7085LLU,1LLU),_1e1976730_Range16(7142LLU,7155LLU,1LLU),_1e1976730_Range16(7204LLU,7223LLU,1LLU),_1e1976730_Range16(7376LLU,7378LLU,1LLU),_1e1976730_Range16(7380LLU,7400LLU,1LLU),_1e1976730_Range16(7405LLU,7412LLU,7LLU),_1e1976730_Range16(7415LLU,7417LLU,1LLU),_1e1976730_Range16(7616LLU,7679LLU,1LLU),_1e1976730_Range16(8400LLU,8432LLU,1LLU),_1e1976730_Range16(11503LLU,11505LLU,1LLU),_1e1976730_Range16(11647LLU,11744LLU,97LLU),_1e1976730_Range16(11745LLU,11775LLU,1LLU),_1e1976730_Range16(12330LLU,12335LLU,1LLU),_1e1976730_Range16(12441LLU,12442LLU,1LLU),_1e1976730_Range16(42607LLU,42610LLU,1LLU),_1e1976730_Range16(42612LLU,42621LLU,1LLU),_1e1976730_Range16(42654LLU,42655LLU,1LLU),_1e1976730_Range16(42736LLU,42737LLU,1LLU),_1e1976730_Range16(43010LLU,43014LLU,4LLU),_1e1976730_Range16(43019LLU,43043LLU,24LLU),_1e1976730_Range16(43044LLU,43047LLU,1LLU),_1e1976730_Range16(43052LLU,43136LLU,84LLU),_1e1976730_Range16(43137LLU,43188LLU,51LLU),_1e1976730_Range16(43189LLU,43205LLU,1LLU),_1e1976730_Range16(43232LLU,43249LLU,1LLU),_1e1976730_Range16(43263LLU,43302LLU,39LLU),_1e1976730_Range16(43303LLU,43309LLU,1LLU),_1e1976730_Range16(43335LLU,43347LLU,1LLU),_1e1976730_Range16(43392LLU,43395LLU,1LLU),_1e1976730_Range16(43443LLU,43456LLU,1LLU),_1e1976730_Range16(43493LLU,43561LLU,68LLU),_1e1976730_Range16(43562LLU,43574LLU,1LLU),_1e1976730_Range16(43587LLU,43596LLU,9LLU),_1e1976730_Range16(43597LLU,43643LLU,46LLU),_1e1976730_Range16(43644LLU,43645LLU,1LLU),_1e1976730_Range16(43696LLU,43698LLU,2LLU),_1e1976730_Range16(43699LLU,43700LLU,1LLU),_1e1976730_Range16(43703LLU,43704LLU,1LLU),_1e1976730_Range16(43710LLU,43711LLU,1LLU),_1e1976730_Range16(43713LLU,43755LLU,42LLU),_1e1976730_Range16(43756LLU,43759LLU,1LLU),_1e1976730_Range16(43765LLU,43766LLU,1LLU),_1e1976730_Range16(44003LLU,44010LLU,1LLU),_1e1976730_Range16(44012LLU,44013LLU,1LLU),_1e1976730_Range16(64286LLU,65024LLU,738LLU),_1e1976730_Range16(65025LLU,65039LLU,1LLU),_1e1976730_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66045LLU,66272LLU,227LLU),_1e1976730_Range32(66422LLU,66426LLU,1LLU),_1e1976730_Range32(68097LLU,68099LLU,1LLU),_1e1976730_Range32(68101LLU,68102LLU,1LLU),_1e1976730_Range32(68108LLU,68111LLU,1LLU),_1e1976730_Range32(68152LLU,68154LLU,1LLU),_1e1976730_Range32(68159LLU,68325LLU,166LLU),_1e1976730_Range32(68326LLU,68900LLU,574LLU),_1e1976730_Range32(68901LLU,68903LLU,1LLU),_1e1976730_Range32(69291LLU,69292LLU,1LLU),_1e1976730_Range32(69373LLU,69375LLU,1LLU),_1e1976730_Range32(69446LLU,69456LLU,1LLU),_1e1976730_Range32(69506LLU,69509LLU,1LLU),_1e1976730_Range32(69632LLU,69634LLU,1LLU),_1e1976730_Range32(69688LLU,69702LLU,1LLU),_1e1976730_Range32(69744LLU,69747LLU,3LLU),_1e1976730_Range32(69748LLU,69759LLU,11LLU),_1e1976730_Range32(69760LLU,69762LLU,1LLU),_1e1976730_Range32(69808LLU,69818LLU,1LLU),_1e1976730_Range32(69826LLU,69888LLU,62LLU),_1e1976730_Range32(69889LLU,69890LLU,1LLU),_1e1976730_Range32(69927LLU,69940LLU,1LLU),_1e1976730_Range32(69957LLU,69958LLU,1LLU),_1e1976730_Range32(70003LLU,70016LLU,13LLU),_1e1976730_Range32(70017LLU,70018LLU,1LLU),_1e1976730_Range32(70067LLU,70080LLU,1LLU),_1e1976730_Range32(70089LLU,70092LLU,1LLU),_1e1976730_Range32(70094LLU,70095LLU,1LLU),_1e1976730_Range32(70188LLU,70199LLU,1LLU),_1e1976730_Range32(70206LLU,70209LLU,3LLU),_1e1976730_Range32(70367LLU,70378LLU,1LLU),_1e1976730_Range32(70400LLU,70403LLU,1LLU),_1e1976730_Range32(70459LLU,70460LLU,1LLU),_1e1976730_Range32(70462LLU,70468LLU,1LLU),_1e1976730_Range32(70471LLU,70472LLU,1LLU),_1e1976730_Range32(70475LLU,70477LLU,1LLU),_1e1976730_Range32(70487LLU,70498LLU,11LLU),_1e1976730_Range32(70499LLU,70502LLU,3LLU),_1e1976730_Range32(70503LLU,70508LLU,1LLU),_1e1976730_Range32(70512LLU,70516LLU,1LLU),_1e1976730_Range32(70709LLU,70726LLU,1LLU),_1e1976730_Range32(70750LLU,70832LLU,82LLU),_1e1976730_Range32(70833LLU,70851LLU,1LLU),_1e1976730_Range32(71087LLU,71093LLU,1LLU),_1e1976730_Range32(71096LLU,71104LLU,1LLU),_1e1976730_Range32(71132LLU,71133LLU,1LLU),_1e1976730_Range32(71216LLU,71232LLU,1LLU),_1e1976730_Range32(71339LLU,71351LLU,1LLU),_1e1976730_Range32(71453LLU,71467LLU,1LLU),_1e1976730_Range32(71724LLU,71738LLU,1LLU),_1e1976730_Range32(71984LLU,71989LLU,1LLU),_1e1976730_Range32(71991LLU,71992LLU,1LLU),_1e1976730_Range32(71995LLU,71998LLU,1LLU),_1e1976730_Range32(72000LLU,72002LLU,2LLU),_1e1976730_Range32(72003LLU,72145LLU,142LLU),_1e1976730_Range32(72146LLU,72151LLU,1LLU),_1e1976730_Range32(72154LLU,72160LLU,1LLU),_1e1976730_Range32(72164LLU,72193LLU,29LLU),_1e1976730_Range32(72194LLU,72202LLU,1LLU),_1e1976730_Range32(72243LLU,72249LLU,1LLU),_1e1976730_Range32(72251LLU,72254LLU,1LLU),_1e1976730_Range32(72263LLU,72273LLU,10LLU),_1e1976730_Range32(72274LLU,72283LLU,1LLU),_1e1976730_Range32(72330LLU,72345LLU,1LLU),_1e1976730_Range32(72751LLU,72758LLU,1LLU),_1e1976730_Range32(72760LLU,72767LLU,1LLU),_1e1976730_Range32(72850LLU,72871LLU,1LLU),_1e1976730_Range32(72873LLU,72886LLU,1LLU),_1e1976730_Range32(73009LLU,73014LLU,1LLU),_1e1976730_Range32(73018LLU,73020LLU,2LLU),_1e1976730_Range32(73021LLU,73023LLU,2LLU),_1e1976730_Range32(73024LLU,73029LLU,1LLU),_1e1976730_Range32(73031LLU,73098LLU,67LLU),_1e1976730_Range32(73099LLU,73102LLU,1LLU),_1e1976730_Range32(73104LLU,73105LLU,1LLU),_1e1976730_Range32(73107LLU,73111LLU,1LLU),_1e1976730_Range32(73459LLU,73462LLU,1LLU),_1e1976730_Range32(73472LLU,73473LLU,1LLU),_1e1976730_Range32(73475LLU,73524LLU,49LLU),_1e1976730_Range32(73525LLU,73530LLU,1LLU),_1e1976730_Range32(73534LLU,73538LLU,1LLU),_1e1976730_Range32(78912LLU,78919LLU,7LLU),_1e1976730_Range32(78920LLU,78933LLU,1LLU),_1e1976730_Range32(92912LLU,92916LLU,1LLU),_1e1976730_Range32(92976LLU,92982LLU,1LLU),_1e1976730_Range32(94031LLU,94033LLU,2LLU),_1e1976730_Range32(94034LLU,94087LLU,1LLU),_1e1976730_Range32(94095LLU,94098LLU,1LLU),_1e1976730_Range32(94180LLU,94192LLU,12LLU),_1e1976730_Range32(94193LLU,113821LLU,19628LLU),_1e1976730_Range32(113822LLU,118528LLU,4706LLU),_1e1976730_Range32(118529LLU,118573LLU,1LLU),_1e1976730_Range32(118576LLU,118598LLU,1LLU),_1e1976730_Range32(119141LLU,119145LLU,1LLU),_1e1976730_Range32(119149LLU,119154LLU,1LLU),_1e1976730_Range32(119163LLU,119170LLU,1LLU),_1e1976730_Range32(119173LLU,119179LLU,1LLU),_1e1976730_Range32(119210LLU,119213LLU,1LLU),_1e1976730_Range32(119362LLU,119364LLU,1LLU),_1e1976730_Range32(121344LLU,121398LLU,1LLU),_1e1976730_Range32(121403LLU,121452LLU,1LLU),_1e1976730_Range32(121461LLU,121476LLU,15LLU),_1e1976730_Range32(121499LLU,121503LLU,1LLU),_1e1976730_Range32(121505LLU,121519LLU,1LLU),_1e1976730_Range32(122880LLU,122886LLU,1LLU),_1e1976730_Range32(122888LLU,122904LLU,1LLU),_1e1976730_Range32(122907LLU,122913LLU,1LLU),_1e1976730_Range32(122915LLU,122916LLU,1LLU),_1e1976730_Range32(122918LLU,122922LLU,1LLU),_1e1976730_Range32(123023LLU,123184LLU,161LLU),_1e1976730_Range32(123185LLU,123190LLU,1LLU),_1e1976730_Range32(123566LLU,123628LLU,62LLU),_1e1976730_Range32(123629LLU,123631LLU,1LLU),_1e1976730_Range32(124140LLU,124143LLU,1LLU),_1e1976730_Range32(125136LLU,125142LLU,1LLU),_1e1976730_Range32(125252LLU,125258LLU,1LLU),_1e1976730_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(2307LLU,2363LLU,56LLU),_1e1976730_Range16(2366LLU,2368LLU,1LLU),_1e1976730_Range16(2377LLU,2380LLU,1LLU),_1e1976730_Range16(2382LLU,2383LLU,1LLU),_1e1976730_Range16(2434LLU,2435LLU,1LLU),_1e1976730_Range16(2494LLU,2496LLU,1LLU),_1e1976730_Range16(2503LLU,2504LLU,1LLU),_1e1976730_Range16(2507LLU,2508LLU,1LLU),_1e1976730_Range16(2519LLU,2563LLU,44LLU),_1e1976730_Range16(2622LLU,2624LLU,1LLU),_1e1976730_Range16(2691LLU,2750LLU,59LLU),_1e1976730_Range16(2751LLU,2752LLU,1LLU),_1e1976730_Range16(2761LLU,2763LLU,2LLU),_1e1976730_Range16(2764LLU,2818LLU,54LLU),_1e1976730_Range16(2819LLU,2878LLU,59LLU),_1e1976730_Range16(2880LLU,2887LLU,7LLU),_1e1976730_Range16(2888LLU,2891LLU,3LLU),_1e1976730_Range16(2892LLU,2903LLU,11LLU),_1e1976730_Range16(3006LLU,3007LLU,1LLU),_1e1976730_Range16(3009LLU,3010LLU,1LLU),_1e1976730_Range16(3014LLU,3016LLU,1LLU),_1e1976730_Range16(3018LLU,3020LLU,1LLU),_1e1976730_Range16(3031LLU,3073LLU,42LLU),_1e1976730_Range16(3074LLU,3075LLU,1LLU),_1e1976730_Range16(3137LLU,3140LLU,1LLU),_1e1976730_Range16(3202LLU,3203LLU,1LLU),_1e1976730_Range16(3262LLU,3264LLU,2LLU),_1e1976730_Range16(3265LLU,3268LLU,1LLU),_1e1976730_Range16(3271LLU,3272LLU,1LLU),_1e1976730_Range16(3274LLU,3275LLU,1LLU),_1e1976730_Range16(3285LLU,3286LLU,1LLU),_1e1976730_Range16(3315LLU,3330LLU,15LLU),_1e1976730_Range16(3331LLU,3390LLU,59LLU),_1e1976730_Range16(3391LLU,3392LLU,1LLU),_1e1976730_Range16(3398LLU,3400LLU,1LLU),_1e1976730_Range16(3402LLU,3404LLU,1LLU),_1e1976730_Range16(3415LLU,3458LLU,43LLU),_1e1976730_Range16(3459LLU,3535LLU,76LLU),_1e1976730_Range16(3536LLU,3537LLU,1LLU),_1e1976730_Range16(3544LLU,3551LLU,1LLU),_1e1976730_Range16(3570LLU,3571LLU,1LLU),_1e1976730_Range16(3902LLU,3903LLU,1LLU),_1e1976730_Range16(3967LLU,4139LLU,172LLU),_1e1976730_Range16(4140LLU,4145LLU,5LLU),_1e1976730_Range16(4152LLU,4155LLU,3LLU),_1e1976730_Range16(4156LLU,4182LLU,26LLU),_1e1976730_Range16(4183LLU,4194LLU,11LLU),_1e1976730_Range16(4195LLU,4196LLU,1LLU),_1e1976730_Range16(4199LLU,4205LLU,1LLU),_1e1976730_Range16(4227LLU,4228LLU,1LLU),_1e1976730_Range16(4231LLU,4236LLU,1LLU),_1e1976730_Range16(4239LLU,4250LLU,11LLU),_1e1976730_Range16(4251LLU,4252LLU,1LLU),_1e1976730_Range16(5909LLU,5940LLU,31LLU),_1e1976730_Range16(6070LLU,6078LLU,8LLU),_1e1976730_Range16(6079LLU,6085LLU,1LLU),_1e1976730_Range16(6087LLU,6088LLU,1LLU),_1e1976730_Range16(6435LLU,6438LLU,1LLU),_1e1976730_Range16(6441LLU,6443LLU,1LLU),_1e1976730_Range16(6448LLU,6449LLU,1LLU),_1e1976730_Range16(6451LLU,6456LLU,1LLU),_1e1976730_Range16(6681LLU,6682LLU,1LLU),_1e1976730_Range16(6741LLU,6743LLU,2LLU),_1e1976730_Range16(6753LLU,6755LLU,2LLU),_1e1976730_Range16(6756LLU,6765LLU,9LLU),_1e1976730_Range16(6766LLU,6770LLU,1LLU),_1e1976730_Range16(6916LLU,6965LLU,49LLU),_1e1976730_Range16(6971LLU,6973LLU,2LLU),_1e1976730_Range16(6974LLU,6977LLU,1LLU),_1e1976730_Range16(6979LLU,6980LLU,1LLU),_1e1976730_Range16(7042LLU,7073LLU,31LLU),_1e1976730_Range16(7078LLU,7079LLU,1LLU),_1e1976730_Range16(7082LLU,7143LLU,61LLU),_1e1976730_Range16(7146LLU,7148LLU,1LLU),_1e1976730_Range16(7150LLU,7154LLU,4LLU),_1e1976730_Range16(7155LLU,7204LLU,49LLU),_1e1976730_Range16(7205LLU,7211LLU,1LLU),_1e1976730_Range16(7220LLU,7221LLU,1LLU),_1e1976730_Range16(7393LLU,7415LLU,22LLU),_1e1976730_Range16(12334LLU,12335LLU,1LLU),_1e1976730_Range16(43043LLU,43044LLU,1LLU),_1e1976730_Range16(43047LLU,43136LLU,89LLU),_1e1976730_Range16(43137LLU,43188LLU,51LLU),_1e1976730_Range16(43189LLU,43203LLU,1LLU),_1e1976730_Range16(43346LLU,43347LLU,1LLU),_1e1976730_Range16(43395LLU,43444LLU,49LLU),_1e1976730_Range16(43445LLU,43450LLU,5LLU),_1e1976730_Range16(43451LLU,43454LLU,3LLU),_1e1976730_Range16(43455LLU,43456LLU,1LLU),_1e1976730_Range16(43567LLU,43568LLU,1LLU),_1e1976730_Range16(43571LLU,43572LLU,1LLU),_1e1976730_Range16(43597LLU,43643LLU,46LLU),_1e1976730_Range16(43645LLU,43755LLU,110LLU),_1e1976730_Range16(43758LLU,43759LLU,1LLU),_1e1976730_Range16(43765LLU,44003LLU,238LLU),_1e1976730_Range16(44004LLU,44006LLU,2LLU),_1e1976730_Range16(44007LLU,44009LLU,2LLU),_1e1976730_Range16(44010LLU,44012LLU,2LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69632LLU,69634LLU,2LLU),_1e1976730_Range32(69762LLU,69808LLU,46LLU),_1e1976730_Range32(69809LLU,69810LLU,1LLU),_1e1976730_Range32(69815LLU,69816LLU,1LLU),_1e1976730_Range32(69932LLU,69957LLU,25LLU),_1e1976730_Range32(69958LLU,70018LLU,60LLU),_1e1976730_Range32(70067LLU,70069LLU,1LLU),_1e1976730_Range32(70079LLU,70080LLU,1LLU),_1e1976730_Range32(70094LLU,70188LLU,94LLU),_1e1976730_Range32(70189LLU,70190LLU,1LLU),_1e1976730_Range32(70194LLU,70195LLU,1LLU),_1e1976730_Range32(70197LLU,70368LLU,171LLU),_1e1976730_Range32(70369LLU,70370LLU,1LLU),_1e1976730_Range32(70402LLU,70403LLU,1LLU),_1e1976730_Range32(70462LLU,70463LLU,1LLU),_1e1976730_Range32(70465LLU,70468LLU,1LLU),_1e1976730_Range32(70471LLU,70472LLU,1LLU),_1e1976730_Range32(70475LLU,70477LLU,1LLU),_1e1976730_Range32(70487LLU,70498LLU,11LLU),_1e1976730_Range32(70499LLU,70709LLU,210LLU),_1e1976730_Range32(70710LLU,70711LLU,1LLU),_1e1976730_Range32(70720LLU,70721LLU,1LLU),_1e1976730_Range32(70725LLU,70832LLU,107LLU),_1e1976730_Range32(70833LLU,70834LLU,1LLU),_1e1976730_Range32(70841LLU,70843LLU,2LLU),_1e1976730_Range32(70844LLU,70846LLU,1LLU),_1e1976730_Range32(70849LLU,71087LLU,238LLU),_1e1976730_Range32(71088LLU,71089LLU,1LLU),_1e1976730_Range32(71096LLU,71099LLU,1LLU),_1e1976730_Range32(71102LLU,71216LLU,114LLU),_1e1976730_Range32(71217LLU,71218LLU,1LLU),_1e1976730_Range32(71227LLU,71228LLU,1LLU),_1e1976730_Range32(71230LLU,71340LLU,110LLU),_1e1976730_Range32(71342LLU,71343LLU,1LLU),_1e1976730_Range32(71350LLU,71456LLU,106LLU),_1e1976730_Range32(71457LLU,71462LLU,5LLU),_1e1976730_Range32(71724LLU,71726LLU,1LLU),_1e1976730_Range32(71736LLU,71984LLU,248LLU),_1e1976730_Range32(71985LLU,71989LLU,1LLU),_1e1976730_Range32(71991LLU,71992LLU,1LLU),_1e1976730_Range32(71997LLU,72000LLU,3LLU),_1e1976730_Range32(72002LLU,72145LLU,143LLU),_1e1976730_Range32(72146LLU,72147LLU,1LLU),_1e1976730_Range32(72156LLU,72159LLU,1LLU),_1e1976730_Range32(72164LLU,72249LLU,85LLU),_1e1976730_Range32(72279LLU,72280LLU,1LLU),_1e1976730_Range32(72343LLU,72751LLU,408LLU),_1e1976730_Range32(72766LLU,72873LLU,107LLU),_1e1976730_Range32(72881LLU,72884LLU,3LLU),_1e1976730_Range32(73098LLU,73102LLU,1LLU),_1e1976730_Range32(73107LLU,73108LLU,1LLU),_1e1976730_Range32(73110LLU,73461LLU,351LLU),_1e1976730_Range32(73462LLU,73475LLU,13LLU),_1e1976730_Range32(73524LLU,73525LLU,1LLU),_1e1976730_Range32(73534LLU,73535LLU,1LLU),_1e1976730_Range32(73537LLU,94033LLU,20496LLU),_1e1976730_Range32(94034LLU,94087LLU,1LLU),_1e1976730_Range32(94192LLU,94193LLU,1LLU),_1e1976730_Range32(119141LLU,119142LLU,1LLU),_1e1976730_Range32(119149LLU,119154LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ME = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(1160LLU,1161LLU,1LLU),_1e1976730_Range16(6846LLU,8413LLU,1567LLU),_1e1976730_Range16(8414LLU,8416LLU,1LLU),_1e1976730_Range16(8418LLU,8420LLU,1LLU),_1e1976730_Range16(42608LLU,42610LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(768LLU,879LLU,1LLU),_1e1976730_Range16(1155LLU,1159LLU,1LLU),_1e1976730_Range16(1425LLU,1469LLU,1LLU),_1e1976730_Range16(1471LLU,1473LLU,2LLU),_1e1976730_Range16(1474LLU,1476LLU,2LLU),_1e1976730_Range16(1477LLU,1479LLU,2LLU),_1e1976730_Range16(1552LLU,1562LLU,1LLU),_1e1976730_Range16(1611LLU,1631LLU,1LLU),_1e1976730_Range16(1648LLU,1750LLU,102LLU),_1e1976730_Range16(1751LLU,1756LLU,1LLU),_1e1976730_Range16(1759LLU,1764LLU,1LLU),_1e1976730_Range16(1767LLU,1768LLU,1LLU),_1e1976730_Range16(1770LLU,1773LLU,1LLU),_1e1976730_Range16(1809LLU,1840LLU,31LLU),_1e1976730_Range16(1841LLU,1866LLU,1LLU),_1e1976730_Range16(1958LLU,1968LLU,1LLU),_1e1976730_Range16(2027LLU,2035LLU,1LLU),_1e1976730_Range16(2045LLU,2070LLU,25LLU),_1e1976730_Range16(2071LLU,2073LLU,1LLU),_1e1976730_Range16(2075LLU,2083LLU,1LLU),_1e1976730_Range16(2085LLU,2087LLU,1LLU),_1e1976730_Range16(2089LLU,2093LLU,1LLU),_1e1976730_Range16(2137LLU,2139LLU,1LLU),_1e1976730_Range16(2200LLU,2207LLU,1LLU),_1e1976730_Range16(2250LLU,2273LLU,1LLU),_1e1976730_Range16(2275LLU,2306LLU,1LLU),_1e1976730_Range16(2362LLU,2364LLU,2LLU),_1e1976730_Range16(2369LLU,2376LLU,1LLU),_1e1976730_Range16(2381LLU,2385LLU,4LLU),_1e1976730_Range16(2386LLU,2391LLU,1LLU),_1e1976730_Range16(2402LLU,2403LLU,1LLU),_1e1976730_Range16(2433LLU,2492LLU,59LLU),_1e1976730_Range16(2497LLU,2500LLU,1LLU),_1e1976730_Range16(2509LLU,2530LLU,21LLU),_1e1976730_Range16(2531LLU,2558LLU,27LLU),_1e1976730_Range16(2561LLU,2562LLU,1LLU),_1e1976730_Range16(2620LLU,2625LLU,5LLU),_1e1976730_Range16(2626LLU,2631LLU,5LLU),_1e1976730_Range16(2632LLU,2635LLU,3LLU),_1e1976730_Range16(2636LLU,2637LLU,1LLU),_1e1976730_Range16(2641LLU,2672LLU,31LLU),_1e1976730_Range16(2673LLU,2677LLU,4LLU),_1e1976730_Range16(2689LLU,2690LLU,1LLU),_1e1976730_Range16(2748LLU,2753LLU,5LLU),_1e1976730_Range16(2754LLU,2757LLU,1LLU),_1e1976730_Range16(2759LLU,2760LLU,1LLU),_1e1976730_Range16(2765LLU,2786LLU,21LLU),_1e1976730_Range16(2787LLU,2810LLU,23LLU),_1e1976730_Range16(2811LLU,2815LLU,1LLU),_1e1976730_Range16(2817LLU,2876LLU,59LLU),_1e1976730_Range16(2879LLU,2881LLU,2LLU),_1e1976730_Range16(2882LLU,2884LLU,1LLU),_1e1976730_Range16(2893LLU,2901LLU,8LLU),_1e1976730_Range16(2902LLU,2914LLU,12LLU),_1e1976730_Range16(2915LLU,2946LLU,31LLU),_1e1976730_Range16(3008LLU,3021LLU,13LLU),_1e1976730_Range16(3072LLU,3076LLU,4LLU),_1e1976730_Range16(3132LLU,3134LLU,2LLU),_1e1976730_Range16(3135LLU,3136LLU,1LLU),_1e1976730_Range16(3142LLU,3144LLU,1LLU),_1e1976730_Range16(3146LLU,3149LLU,1LLU),_1e1976730_Range16(3157LLU,3158LLU,1LLU),_1e1976730_Range16(3170LLU,3171LLU,1LLU),_1e1976730_Range16(3201LLU,3260LLU,59LLU),_1e1976730_Range16(3263LLU,3270LLU,7LLU),_1e1976730_Range16(3276LLU,3277LLU,1LLU),_1e1976730_Range16(3298LLU,3299LLU,1LLU),_1e1976730_Range16(3328LLU,3329LLU,1LLU),_1e1976730_Range16(3387LLU,3388LLU,1LLU),_1e1976730_Range16(3393LLU,3396LLU,1LLU),_1e1976730_Range16(3405LLU,3426LLU,21LLU),_1e1976730_Range16(3427LLU,3457LLU,30LLU),_1e1976730_Range16(3530LLU,3538LLU,8LLU),_1e1976730_Range16(3539LLU,3540LLU,1LLU),_1e1976730_Range16(3542LLU,3633LLU,91LLU),_1e1976730_Range16(3636LLU,3642LLU,1LLU),_1e1976730_Range16(3655LLU,3662LLU,1LLU),_1e1976730_Range16(3761LLU,3764LLU,3LLU),_1e1976730_Range16(3765LLU,3772LLU,1LLU),_1e1976730_Range16(3784LLU,3790LLU,1LLU),_1e1976730_Range16(3864LLU,3865LLU,1LLU),_1e1976730_Range16(3893LLU,3897LLU,2LLU),_1e1976730_Range16(3953LLU,3966LLU,1LLU),_1e1976730_Range16(3968LLU,3972LLU,1LLU),_1e1976730_Range16(3974LLU,3975LLU,1LLU),_1e1976730_Range16(3981LLU,3991LLU,1LLU),_1e1976730_Range16(3993LLU,4028LLU,1LLU),_1e1976730_Range16(4038LLU,4141LLU,103LLU),_1e1976730_Range16(4142LLU,4144LLU,1LLU),_1e1976730_Range16(4146LLU,4151LLU,1LLU),_1e1976730_Range16(4153LLU,4154LLU,1LLU),_1e1976730_Range16(4157LLU,4158LLU,1LLU),_1e1976730_Range16(4184LLU,4185LLU,1LLU),_1e1976730_Range16(4190LLU,4192LLU,1LLU),_1e1976730_Range16(4209LLU,4212LLU,1LLU),_1e1976730_Range16(4226LLU,4229LLU,3LLU),_1e1976730_Range16(4230LLU,4237LLU,7LLU),_1e1976730_Range16(4253LLU,4957LLU,704LLU),_1e1976730_Range16(4958LLU,4959LLU,1LLU),_1e1976730_Range16(5906LLU,5908LLU,1LLU),_1e1976730_Range16(5938LLU,5939LLU,1LLU),_1e1976730_Range16(5970LLU,5971LLU,1LLU),_1e1976730_Range16(6002LLU,6003LLU,1LLU),_1e1976730_Range16(6068LLU,6069LLU,1LLU),_1e1976730_Range16(6071LLU,6077LLU,1LLU),_1e1976730_Range16(6086LLU,6089LLU,3LLU),_1e1976730_Range16(6090LLU,6099LLU,1LLU),_1e1976730_Range16(6109LLU,6155LLU,46LLU),_1e1976730_Range16(6156LLU,6157LLU,1LLU),_1e1976730_Range16(6159LLU,6277LLU,118LLU),_1e1976730_Range16(6278LLU,6313LLU,35LLU),_1e1976730_Range16(6432LLU,6434LLU,1LLU),_1e1976730_Range16(6439LLU,6440LLU,1LLU),_1e1976730_Range16(6450LLU,6457LLU,7LLU),_1e1976730_Range16(6458LLU,6459LLU,1LLU),_1e1976730_Range16(6679LLU,6680LLU,1LLU),_1e1976730_Range16(6683LLU,6742LLU,59LLU),_1e1976730_Range16(6744LLU,6750LLU,1LLU),_1e1976730_Range16(6752LLU,6754LLU,2LLU),_1e1976730_Range16(6757LLU,6764LLU,1LLU),_1e1976730_Range16(6771LLU,6780LLU,1LLU),_1e1976730_Range16(6783LLU,6832LLU,49LLU),_1e1976730_Range16(6833LLU,6845LLU,1LLU),_1e1976730_Range16(6847LLU,6862LLU,1LLU),_1e1976730_Range16(6912LLU,6915LLU,1LLU),_1e1976730_Range16(6964LLU,6966LLU,2LLU),_1e1976730_Range16(6967LLU,6970LLU,1LLU),_1e1976730_Range16(6972LLU,6978LLU,6LLU),_1e1976730_Range16(7019LLU,7027LLU,1LLU),_1e1976730_Range16(7040LLU,7041LLU,1LLU),_1e1976730_Range16(7074LLU,7077LLU,1LLU),_1e1976730_Range16(7080LLU,7081LLU,1LLU),_1e1976730_Range16(7083LLU,7085LLU,1LLU),_1e1976730_Range16(7142LLU,7144LLU,2LLU),_1e1976730_Range16(7145LLU,7149LLU,4LLU),_1e1976730_Range16(7151LLU,7153LLU,1LLU),_1e1976730_Range16(7212LLU,7219LLU,1LLU),_1e1976730_Range16(7222LLU,7223LLU,1LLU),_1e1976730_Range16(7376LLU,7378LLU,1LLU),_1e1976730_Range16(7380LLU,7392LLU,1LLU),_1e1976730_Range16(7394LLU,7400LLU,1LLU),_1e1976730_Range16(7405LLU,7412LLU,7LLU),_1e1976730_Range16(7416LLU,7417LLU,1LLU),_1e1976730_Range16(7616LLU,7679LLU,1LLU),_1e1976730_Range16(8400LLU,8412LLU,1LLU),_1e1976730_Range16(8417LLU,8421LLU,4LLU),_1e1976730_Range16(8422LLU,8432LLU,1LLU),_1e1976730_Range16(11503LLU,11505LLU,1LLU),_1e1976730_Range16(11647LLU,11744LLU,97LLU),_1e1976730_Range16(11745LLU,11775LLU,1LLU),_1e1976730_Range16(12330LLU,12333LLU,1LLU),_1e1976730_Range16(12441LLU,12442LLU,1LLU),_1e1976730_Range16(42607LLU,42612LLU,5LLU),_1e1976730_Range16(42613LLU,42621LLU,1LLU),_1e1976730_Range16(42654LLU,42655LLU,1LLU),_1e1976730_Range16(42736LLU,42737LLU,1LLU),_1e1976730_Range16(43010LLU,43014LLU,4LLU),_1e1976730_Range16(43019LLU,43045LLU,26LLU),_1e1976730_Range16(43046LLU,43052LLU,6LLU),_1e1976730_Range16(43204LLU,43205LLU,1LLU),_1e1976730_Range16(43232LLU,43249LLU,1LLU),_1e1976730_Range16(43263LLU,43302LLU,39LLU),_1e1976730_Range16(43303LLU,43309LLU,1LLU),_1e1976730_Range16(43335LLU,43345LLU,1LLU),_1e1976730_Range16(43392LLU,43394LLU,1LLU),_1e1976730_Range16(43443LLU,43446LLU,3LLU),_1e1976730_Range16(43447LLU,43449LLU,1LLU),_1e1976730_Range16(43452LLU,43453LLU,1LLU),_1e1976730_Range16(43493LLU,43561LLU,68LLU),_1e1976730_Range16(43562LLU,43566LLU,1LLU),_1e1976730_Range16(43569LLU,43570LLU,1LLU),_1e1976730_Range16(43573LLU,43574LLU,1LLU),_1e1976730_Range16(43587LLU,43596LLU,9LLU),_1e1976730_Range16(43644LLU,43696LLU,52LLU),_1e1976730_Range16(43698LLU,43700LLU,1LLU),_1e1976730_Range16(43703LLU,43704LLU,1LLU),_1e1976730_Range16(43710LLU,43711LLU,1LLU),_1e1976730_Range16(43713LLU,43756LLU,43LLU),_1e1976730_Range16(43757LLU,43766LLU,9LLU),_1e1976730_Range16(44005LLU,44008LLU,3LLU),_1e1976730_Range16(44013LLU,64286LLU,20273LLU),_1e1976730_Range16(65024LLU,65039LLU,1LLU),_1e1976730_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66045LLU,66272LLU,227LLU),_1e1976730_Range32(66422LLU,66426LLU,1LLU),_1e1976730_Range32(68097LLU,68099LLU,1LLU),_1e1976730_Range32(68101LLU,68102LLU,1LLU),_1e1976730_Range32(68108LLU,68111LLU,1LLU),_1e1976730_Range32(68152LLU,68154LLU,1LLU),_1e1976730_Range32(68159LLU,68325LLU,166LLU),_1e1976730_Range32(68326LLU,68900LLU,574LLU),_1e1976730_Range32(68901LLU,68903LLU,1LLU),_1e1976730_Range32(69291LLU,69292LLU,1LLU),_1e1976730_Range32(69373LLU,69375LLU,1LLU),_1e1976730_Range32(69446LLU,69456LLU,1LLU),_1e1976730_Range32(69506LLU,69509LLU,1LLU),_1e1976730_Range32(69633LLU,69688LLU,55LLU),_1e1976730_Range32(69689LLU,69702LLU,1LLU),_1e1976730_Range32(69744LLU,69747LLU,3LLU),_1e1976730_Range32(69748LLU,69759LLU,11LLU),_1e1976730_Range32(69760LLU,69761LLU,1LLU),_1e1976730_Range32(69811LLU,69814LLU,1LLU),_1e1976730_Range32(69817LLU,69818LLU,1LLU),_1e1976730_Range32(69826LLU,69888LLU,62LLU),_1e1976730_Range32(69889LLU,69890LLU,1LLU),_1e1976730_Range32(69927LLU,69931LLU,1LLU),_1e1976730_Range32(69933LLU,69940LLU,1LLU),_1e1976730_Range32(70003LLU,70016LLU,13LLU),_1e1976730_Range32(70017LLU,70070LLU,53LLU),_1e1976730_Range32(70071LLU,70078LLU,1LLU),_1e1976730_Range32(70089LLU,70092LLU,1LLU),_1e1976730_Range32(70095LLU,70191LLU,96LLU),_1e1976730_Range32(70192LLU,70193LLU,1LLU),_1e1976730_Range32(70196LLU,70198LLU,2LLU),_1e1976730_Range32(70199LLU,70206LLU,7LLU),_1e1976730_Range32(70209LLU,70367LLU,158LLU),_1e1976730_Range32(70371LLU,70378LLU,1LLU),_1e1976730_Range32(70400LLU,70401LLU,1LLU),_1e1976730_Range32(70459LLU,70460LLU,1LLU),_1e1976730_Range32(70464LLU,70502LLU,38LLU),_1e1976730_Range32(70503LLU,70508LLU,1LLU),_1e1976730_Range32(70512LLU,70516LLU,1LLU),_1e1976730_Range32(70712LLU,70719LLU,1LLU),_1e1976730_Range32(70722LLU,70724LLU,1LLU),_1e1976730_Range32(70726LLU,70750LLU,24LLU),_1e1976730_Range32(70835LLU,70840LLU,1LLU),_1e1976730_Range32(70842LLU,70847LLU,5LLU),_1e1976730_Range32(70848LLU,70850LLU,2LLU),_1e1976730_Range32(70851LLU,71090LLU,239LLU),_1e1976730_Range32(71091LLU,71093LLU,1LLU),_1e1976730_Range32(71100LLU,71101LLU,1LLU),_1e1976730_Range32(71103LLU,71104LLU,1LLU),_1e1976730_Range32(71132LLU,71133LLU,1LLU),_1e1976730_Range32(71219LLU,71226LLU,1LLU),_1e1976730_Range32(71229LLU,71231LLU,2LLU),_1e1976730_Range32(71232LLU,71339LLU,107LLU),_1e1976730_Range32(71341LLU,71344LLU,3LLU),_1e1976730_Range32(71345LLU,71349LLU,1LLU),_1e1976730_Range32(71351LLU,71453LLU,102LLU),_1e1976730_Range32(71454LLU,71455LLU,1LLU),_1e1976730_Range32(71458LLU,71461LLU,1LLU),_1e1976730_Range32(71463LLU,71467LLU,1LLU),_1e1976730_Range32(71727LLU,71735LLU,1LLU),_1e1976730_Range32(71737LLU,71738LLU,1LLU),_1e1976730_Range32(71995LLU,71996LLU,1LLU),_1e1976730_Range32(71998LLU,72003LLU,5LLU),_1e1976730_Range32(72148LLU,72151LLU,1LLU),_1e1976730_Range32(72154LLU,72155LLU,1LLU),_1e1976730_Range32(72160LLU,72193LLU,33LLU),_1e1976730_Range32(72194LLU,72202LLU,1LLU),_1e1976730_Range32(72243LLU,72248LLU,1LLU),_1e1976730_Range32(72251LLU,72254LLU,1LLU),_1e1976730_Range32(72263LLU,72273LLU,10LLU),_1e1976730_Range32(72274LLU,72278LLU,1LLU),_1e1976730_Range32(72281LLU,72283LLU,1LLU),_1e1976730_Range32(72330LLU,72342LLU,1LLU),_1e1976730_Range32(72344LLU,72345LLU,1LLU),_1e1976730_Range32(72752LLU,72758LLU,1LLU),_1e1976730_Range32(72760LLU,72765LLU,1LLU),_1e1976730_Range32(72767LLU,72850LLU,83LLU),_1e1976730_Range32(72851LLU,72871LLU,1LLU),_1e1976730_Range32(72874LLU,72880LLU,1LLU),_1e1976730_Range32(72882LLU,72883LLU,1LLU),_1e1976730_Range32(72885LLU,72886LLU,1LLU),_1e1976730_Range32(73009LLU,73014LLU,1LLU),_1e1976730_Range32(73018LLU,73020LLU,2LLU),_1e1976730_Range32(73021LLU,73023LLU,2LLU),_1e1976730_Range32(73024LLU,73029LLU,1LLU),_1e1976730_Range32(73031LLU,73104LLU,73LLU),_1e1976730_Range32(73105LLU,73109LLU,4LLU),_1e1976730_Range32(73111LLU,73459LLU,348LLU),_1e1976730_Range32(73460LLU,73472LLU,12LLU),_1e1976730_Range32(73473LLU,73526LLU,53LLU),_1e1976730_Range32(73527LLU,73530LLU,1LLU),_1e1976730_Range32(73536LLU,73538LLU,2LLU),_1e1976730_Range32(78912LLU,78919LLU,7LLU),_1e1976730_Range32(78920LLU,78933LLU,1LLU),_1e1976730_Range32(92912LLU,92916LLU,1LLU),_1e1976730_Range32(92976LLU,92982LLU,1LLU),_1e1976730_Range32(94031LLU,94095LLU,64LLU),_1e1976730_Range32(94096LLU,94098LLU,1LLU),_1e1976730_Range32(94180LLU,113821LLU,19641LLU),_1e1976730_Range32(113822LLU,118528LLU,4706LLU),_1e1976730_Range32(118529LLU,118573LLU,1LLU),_1e1976730_Range32(118576LLU,118598LLU,1LLU),_1e1976730_Range32(119143LLU,119145LLU,1LLU),_1e1976730_Range32(119163LLU,119170LLU,1LLU),_1e1976730_Range32(119173LLU,119179LLU,1LLU),_1e1976730_Range32(119210LLU,119213LLU,1LLU),_1e1976730_Range32(119362LLU,119364LLU,1LLU),_1e1976730_Range32(121344LLU,121398LLU,1LLU),_1e1976730_Range32(121403LLU,121452LLU,1LLU),_1e1976730_Range32(121461LLU,121476LLU,15LLU),_1e1976730_Range32(121499LLU,121503LLU,1LLU),_1e1976730_Range32(121505LLU,121519LLU,1LLU),_1e1976730_Range32(122880LLU,122886LLU,1LLU),_1e1976730_Range32(122888LLU,122904LLU,1LLU),_1e1976730_Range32(122907LLU,122913LLU,1LLU),_1e1976730_Range32(122915LLU,122916LLU,1LLU),_1e1976730_Range32(122918LLU,122922LLU,1LLU),_1e1976730_Range32(123023LLU,123184LLU,161LLU),_1e1976730_Range32(123185LLU,123190LLU,1LLU),_1e1976730_Range32(123566LLU,123628LLU,62LLU),_1e1976730_Range32(123629LLU,123631LLU,1LLU),_1e1976730_Range32(124140LLU,124143LLU,1LLU),_1e1976730_Range32(125136LLU,125142LLU,1LLU),_1e1976730_Range32(125252LLU,125258LLU,1LLU),_1e1976730_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__N = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(48LLU,57LLU,1LLU),_1e1976730_Range16(178LLU,179LLU,1LLU),_1e1976730_Range16(185LLU,188LLU,3LLU),_1e1976730_Range16(189LLU,190LLU,1LLU),_1e1976730_Range16(1632LLU,1641LLU,1LLU),_1e1976730_Range16(1776LLU,1785LLU,1LLU),_1e1976730_Range16(1984LLU,1993LLU,1LLU),_1e1976730_Range16(2406LLU,2415LLU,1LLU),_1e1976730_Range16(2534LLU,2543LLU,1LLU),_1e1976730_Range16(2548LLU,2553LLU,1LLU),_1e1976730_Range16(2662LLU,2671LLU,1LLU),_1e1976730_Range16(2790LLU,2799LLU,1LLU),_1e1976730_Range16(2918LLU,2927LLU,1LLU),_1e1976730_Range16(2930LLU,2935LLU,1LLU),_1e1976730_Range16(3046LLU,3058LLU,1LLU),_1e1976730_Range16(3174LLU,3183LLU,1LLU),_1e1976730_Range16(3192LLU,3198LLU,1LLU),_1e1976730_Range16(3302LLU,3311LLU,1LLU),_1e1976730_Range16(3416LLU,3422LLU,1LLU),_1e1976730_Range16(3430LLU,3448LLU,1LLU),_1e1976730_Range16(3558LLU,3567LLU,1LLU),_1e1976730_Range16(3664LLU,3673LLU,1LLU),_1e1976730_Range16(3792LLU,3801LLU,1LLU),_1e1976730_Range16(3872LLU,3891LLU,1LLU),_1e1976730_Range16(4160LLU,4169LLU,1LLU),_1e1976730_Range16(4240LLU,4249LLU,1LLU),_1e1976730_Range16(4969LLU,4988LLU,1LLU),_1e1976730_Range16(5870LLU,5872LLU,1LLU),_1e1976730_Range16(6112LLU,6121LLU,1LLU),_1e1976730_Range16(6128LLU,6137LLU,1LLU),_1e1976730_Range16(6160LLU,6169LLU,1LLU),_1e1976730_Range16(6470LLU,6479LLU,1LLU),_1e1976730_Range16(6608LLU,6618LLU,1LLU),_1e1976730_Range16(6784LLU,6793LLU,1LLU),_1e1976730_Range16(6800LLU,6809LLU,1LLU),_1e1976730_Range16(6992LLU,7001LLU,1LLU),_1e1976730_Range16(7088LLU,7097LLU,1LLU),_1e1976730_Range16(7232LLU,7241LLU,1LLU),_1e1976730_Range16(7248LLU,7257LLU,1LLU),_1e1976730_Range16(8304LLU,8308LLU,4LLU),_1e1976730_Range16(8309LLU,8313LLU,1LLU),_1e1976730_Range16(8320LLU,8329LLU,1LLU),_1e1976730_Range16(8528LLU,8578LLU,1LLU),_1e1976730_Range16(8581LLU,8585LLU,1LLU),_1e1976730_Range16(9312LLU,9371LLU,1LLU),_1e1976730_Range16(9450LLU,9471LLU,1LLU),_1e1976730_Range16(10102LLU,10131LLU,1LLU),_1e1976730_Range16(11517LLU,12295LLU,778LLU),_1e1976730_Range16(12321LLU,12329LLU,1LLU),_1e1976730_Range16(12344LLU,12346LLU,1LLU),_1e1976730_Range16(12690LLU,12693LLU,1LLU),_1e1976730_Range16(12832LLU,12841LLU,1LLU),_1e1976730_Range16(12872LLU,12879LLU,1LLU),_1e1976730_Range16(12881LLU,12895LLU,1LLU),_1e1976730_Range16(12928LLU,12937LLU,1LLU),_1e1976730_Range16(12977LLU,12991LLU,1LLU),_1e1976730_Range16(42528LLU,42537LLU,1LLU),_1e1976730_Range16(42726LLU,42735LLU,1LLU),_1e1976730_Range16(43056LLU,43061LLU,1LLU),_1e1976730_Range16(43216LLU,43225LLU,1LLU),_1e1976730_Range16(43264LLU,43273LLU,1LLU),_1e1976730_Range16(43472LLU,43481LLU,1LLU),_1e1976730_Range16(43504LLU,43513LLU,1LLU),_1e1976730_Range16(43600LLU,43609LLU,1LLU),_1e1976730_Range16(44016LLU,44025LLU,1LLU),_1e1976730_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(65799LLU,65843LLU,1LLU),_1e1976730_Range32(65856LLU,65912LLU,1LLU),_1e1976730_Range32(65930LLU,65931LLU,1LLU),_1e1976730_Range32(66273LLU,66299LLU,1LLU),_1e1976730_Range32(66336LLU,66339LLU,1LLU),_1e1976730_Range32(66369LLU,66378LLU,9LLU),_1e1976730_Range32(66513LLU,66517LLU,1LLU),_1e1976730_Range32(66720LLU,66729LLU,1LLU),_1e1976730_Range32(67672LLU,67679LLU,1LLU),_1e1976730_Range32(67705LLU,67711LLU,1LLU),_1e1976730_Range32(67751LLU,67759LLU,1LLU),_1e1976730_Range32(67835LLU,67839LLU,1LLU),_1e1976730_Range32(67862LLU,67867LLU,1LLU),_1e1976730_Range32(68028LLU,68029LLU,1LLU),_1e1976730_Range32(68032LLU,68047LLU,1LLU),_1e1976730_Range32(68050LLU,68095LLU,1LLU),_1e1976730_Range32(68160LLU,68168LLU,1LLU),_1e1976730_Range32(68221LLU,68222LLU,1LLU),_1e1976730_Range32(68253LLU,68255LLU,1LLU),_1e1976730_Range32(68331LLU,68335LLU,1LLU),_1e1976730_Range32(68440LLU,68447LLU,1LLU),_1e1976730_Range32(68472LLU,68479LLU,1LLU),_1e1976730_Range32(68521LLU,68527LLU,1LLU),_1e1976730_Range32(68858LLU,68863LLU,1LLU),_1e1976730_Range32(68912LLU,68921LLU,1LLU),_1e1976730_Range32(69216LLU,69246LLU,1LLU),_1e1976730_Range32(69405LLU,69414LLU,1LLU),_1e1976730_Range32(69457LLU,69460LLU,1LLU),_1e1976730_Range32(69573LLU,69579LLU,1LLU),_1e1976730_Range32(69714LLU,69743LLU,1LLU),_1e1976730_Range32(69872LLU,69881LLU,1LLU),_1e1976730_Range32(69942LLU,69951LLU,1LLU),_1e1976730_Range32(70096LLU,70105LLU,1LLU),_1e1976730_Range32(70113LLU,70132LLU,1LLU),_1e1976730_Range32(70384LLU,70393LLU,1LLU),_1e1976730_Range32(70736LLU,70745LLU,1LLU),_1e1976730_Range32(70864LLU,70873LLU,1LLU),_1e1976730_Range32(71248LLU,71257LLU,1LLU),_1e1976730_Range32(71360LLU,71369LLU,1LLU),_1e1976730_Range32(71472LLU,71483LLU,1LLU),_1e1976730_Range32(71904LLU,71922LLU,1LLU),_1e1976730_Range32(72016LLU,72025LLU,1LLU),_1e1976730_Range32(72784LLU,72812LLU,1LLU),_1e1976730_Range32(73040LLU,73049LLU,1LLU),_1e1976730_Range32(73120LLU,73129LLU,1LLU),_1e1976730_Range32(73552LLU,73561LLU,1LLU),_1e1976730_Range32(73664LLU,73684LLU,1LLU),_1e1976730_Range32(74752LLU,74862LLU,1LLU),_1e1976730_Range32(92768LLU,92777LLU,1LLU),_1e1976730_Range32(92864LLU,92873LLU,1LLU),_1e1976730_Range32(93008LLU,93017LLU,1LLU),_1e1976730_Range32(93019LLU,93025LLU,1LLU),_1e1976730_Range32(93824LLU,93846LLU,1LLU),_1e1976730_Range32(119488LLU,119507LLU,1LLU),_1e1976730_Range32(119520LLU,119539LLU,1LLU),_1e1976730_Range32(119648LLU,119672LLU,1LLU),_1e1976730_Range32(120782LLU,120831LLU,1LLU),_1e1976730_Range32(123200LLU,123209LLU,1LLU),_1e1976730_Range32(123632LLU,123641LLU,1LLU),_1e1976730_Range32(124144LLU,124153LLU,1LLU),_1e1976730_Range32(125127LLU,125135LLU,1LLU),_1e1976730_Range32(125264LLU,125273LLU,1LLU),_1e1976730_Range32(126065LLU,126123LLU,1LLU),_1e1976730_Range32(126125LLU,126127LLU,1LLU),_1e1976730_Range32(126129LLU,126132LLU,1LLU),_1e1976730_Range32(126209LLU,126253LLU,1LLU),_1e1976730_Range32(126255LLU,126269LLU,1LLU),_1e1976730_Range32(127232LLU,127244LLU,1LLU),_1e1976730_Range32(130032LLU,130041LLU,1LLU)}),4LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ND = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(48LLU,57LLU,1LLU),_1e1976730_Range16(1632LLU,1641LLU,1LLU),_1e1976730_Range16(1776LLU,1785LLU,1LLU),_1e1976730_Range16(1984LLU,1993LLU,1LLU),_1e1976730_Range16(2406LLU,2415LLU,1LLU),_1e1976730_Range16(2534LLU,2543LLU,1LLU),_1e1976730_Range16(2662LLU,2671LLU,1LLU),_1e1976730_Range16(2790LLU,2799LLU,1LLU),_1e1976730_Range16(2918LLU,2927LLU,1LLU),_1e1976730_Range16(3046LLU,3055LLU,1LLU),_1e1976730_Range16(3174LLU,3183LLU,1LLU),_1e1976730_Range16(3302LLU,3311LLU,1LLU),_1e1976730_Range16(3430LLU,3439LLU,1LLU),_1e1976730_Range16(3558LLU,3567LLU,1LLU),_1e1976730_Range16(3664LLU,3673LLU,1LLU),_1e1976730_Range16(3792LLU,3801LLU,1LLU),_1e1976730_Range16(3872LLU,3881LLU,1LLU),_1e1976730_Range16(4160LLU,4169LLU,1LLU),_1e1976730_Range16(4240LLU,4249LLU,1LLU),_1e1976730_Range16(6112LLU,6121LLU,1LLU),_1e1976730_Range16(6160LLU,6169LLU,1LLU),_1e1976730_Range16(6470LLU,6479LLU,1LLU),_1e1976730_Range16(6608LLU,6617LLU,1LLU),_1e1976730_Range16(6784LLU,6793LLU,1LLU),_1e1976730_Range16(6800LLU,6809LLU,1LLU),_1e1976730_Range16(6992LLU,7001LLU,1LLU),_1e1976730_Range16(7088LLU,7097LLU,1LLU),_1e1976730_Range16(7232LLU,7241LLU,1LLU),_1e1976730_Range16(7248LLU,7257LLU,1LLU),_1e1976730_Range16(42528LLU,42537LLU,1LLU),_1e1976730_Range16(43216LLU,43225LLU,1LLU),_1e1976730_Range16(43264LLU,43273LLU,1LLU),_1e1976730_Range16(43472LLU,43481LLU,1LLU),_1e1976730_Range16(43504LLU,43513LLU,1LLU),_1e1976730_Range16(43600LLU,43609LLU,1LLU),_1e1976730_Range16(44016LLU,44025LLU,1LLU),_1e1976730_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66720LLU,66729LLU,1LLU),_1e1976730_Range32(68912LLU,68921LLU,1LLU),_1e1976730_Range32(69734LLU,69743LLU,1LLU),_1e1976730_Range32(69872LLU,69881LLU,1LLU),_1e1976730_Range32(69942LLU,69951LLU,1LLU),_1e1976730_Range32(70096LLU,70105LLU,1LLU),_1e1976730_Range32(70384LLU,70393LLU,1LLU),_1e1976730_Range32(70736LLU,70745LLU,1LLU),_1e1976730_Range32(70864LLU,70873LLU,1LLU),_1e1976730_Range32(71248LLU,71257LLU,1LLU),_1e1976730_Range32(71360LLU,71369LLU,1LLU),_1e1976730_Range32(71472LLU,71481LLU,1LLU),_1e1976730_Range32(71904LLU,71913LLU,1LLU),_1e1976730_Range32(72016LLU,72025LLU,1LLU),_1e1976730_Range32(72784LLU,72793LLU,1LLU),_1e1976730_Range32(73040LLU,73049LLU,1LLU),_1e1976730_Range32(73120LLU,73129LLU,1LLU),_1e1976730_Range32(73552LLU,73561LLU,1LLU),_1e1976730_Range32(92768LLU,92777LLU,1LLU),_1e1976730_Range32(92864LLU,92873LLU,1LLU),_1e1976730_Range32(93008LLU,93017LLU,1LLU),_1e1976730_Range32(120782LLU,120831LLU,1LLU),_1e1976730_Range32(123200LLU,123209LLU,1LLU),_1e1976730_Range32(123632LLU,123641LLU,1LLU),_1e1976730_Range32(124144LLU,124153LLU,1LLU),_1e1976730_Range32(125264LLU,125273LLU,1LLU),_1e1976730_Range32(130032LLU,130041LLU,1LLU)}),1LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__NL = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(5870LLU,5872LLU,1LLU),_1e1976730_Range16(8544LLU,8578LLU,1LLU),_1e1976730_Range16(8581LLU,8584LLU,1LLU),_1e1976730_Range16(12295LLU,12321LLU,26LLU),_1e1976730_Range16(12322LLU,12329LLU,1LLU),_1e1976730_Range16(12344LLU,12346LLU,1LLU),_1e1976730_Range16(42726LLU,42735LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(65856LLU,65908LLU,1LLU),_1e1976730_Range32(66369LLU,66378LLU,9LLU),_1e1976730_Range32(66513LLU,66517LLU,1LLU),_1e1976730_Range32(74752LLU,74862LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__NO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(178LLU,179LLU,1LLU),_1e1976730_Range16(185LLU,188LLU,3LLU),_1e1976730_Range16(189LLU,190LLU,1LLU),_1e1976730_Range16(2548LLU,2553LLU,1LLU),_1e1976730_Range16(2930LLU,2935LLU,1LLU),_1e1976730_Range16(3056LLU,3058LLU,1LLU),_1e1976730_Range16(3192LLU,3198LLU,1LLU),_1e1976730_Range16(3416LLU,3422LLU,1LLU),_1e1976730_Range16(3440LLU,3448LLU,1LLU),_1e1976730_Range16(3882LLU,3891LLU,1LLU),_1e1976730_Range16(4969LLU,4988LLU,1LLU),_1e1976730_Range16(6128LLU,6137LLU,1LLU),_1e1976730_Range16(6618LLU,8304LLU,1686LLU),_1e1976730_Range16(8308LLU,8313LLU,1LLU),_1e1976730_Range16(8320LLU,8329LLU,1LLU),_1e1976730_Range16(8528LLU,8543LLU,1LLU),_1e1976730_Range16(8585LLU,9312LLU,727LLU),_1e1976730_Range16(9313LLU,9371LLU,1LLU),_1e1976730_Range16(9450LLU,9471LLU,1LLU),_1e1976730_Range16(10102LLU,10131LLU,1LLU),_1e1976730_Range16(11517LLU,12690LLU,1173LLU),_1e1976730_Range16(12691LLU,12693LLU,1LLU),_1e1976730_Range16(12832LLU,12841LLU,1LLU),_1e1976730_Range16(12872LLU,12879LLU,1LLU),_1e1976730_Range16(12881LLU,12895LLU,1LLU),_1e1976730_Range16(12928LLU,12937LLU,1LLU),_1e1976730_Range16(12977LLU,12991LLU,1LLU),_1e1976730_Range16(43056LLU,43061LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(65799LLU,65843LLU,1LLU),_1e1976730_Range32(65909LLU,65912LLU,1LLU),_1e1976730_Range32(65930LLU,65931LLU,1LLU),_1e1976730_Range32(66273LLU,66299LLU,1LLU),_1e1976730_Range32(66336LLU,66339LLU,1LLU),_1e1976730_Range32(67672LLU,67679LLU,1LLU),_1e1976730_Range32(67705LLU,67711LLU,1LLU),_1e1976730_Range32(67751LLU,67759LLU,1LLU),_1e1976730_Range32(67835LLU,67839LLU,1LLU),_1e1976730_Range32(67862LLU,67867LLU,1LLU),_1e1976730_Range32(68028LLU,68029LLU,1LLU),_1e1976730_Range32(68032LLU,68047LLU,1LLU),_1e1976730_Range32(68050LLU,68095LLU,1LLU),_1e1976730_Range32(68160LLU,68168LLU,1LLU),_1e1976730_Range32(68221LLU,68222LLU,1LLU),_1e1976730_Range32(68253LLU,68255LLU,1LLU),_1e1976730_Range32(68331LLU,68335LLU,1LLU),_1e1976730_Range32(68440LLU,68447LLU,1LLU),_1e1976730_Range32(68472LLU,68479LLU,1LLU),_1e1976730_Range32(68521LLU,68527LLU,1LLU),_1e1976730_Range32(68858LLU,68863LLU,1LLU),_1e1976730_Range32(69216LLU,69246LLU,1LLU),_1e1976730_Range32(69405LLU,69414LLU,1LLU),_1e1976730_Range32(69457LLU,69460LLU,1LLU),_1e1976730_Range32(69573LLU,69579LLU,1LLU),_1e1976730_Range32(69714LLU,69733LLU,1LLU),_1e1976730_Range32(70113LLU,70132LLU,1LLU),_1e1976730_Range32(71482LLU,71483LLU,1LLU),_1e1976730_Range32(71914LLU,71922LLU,1LLU),_1e1976730_Range32(72794LLU,72812LLU,1LLU),_1e1976730_Range32(73664LLU,73684LLU,1LLU),_1e1976730_Range32(93019LLU,93025LLU,1LLU),_1e1976730_Range32(93824LLU,93846LLU,1LLU),_1e1976730_Range32(119488LLU,119507LLU,1LLU),_1e1976730_Range32(119520LLU,119539LLU,1LLU),_1e1976730_Range32(119648LLU,119672LLU,1LLU),_1e1976730_Range32(125127LLU,125135LLU,1LLU),_1e1976730_Range32(126065LLU,126123LLU,1LLU),_1e1976730_Range32(126125LLU,126127LLU,1LLU),_1e1976730_Range32(126129LLU,126132LLU,1LLU),_1e1976730_Range32(126209LLU,126253LLU,1LLU),_1e1976730_Range32(126255LLU,126269LLU,1LLU),_1e1976730_Range32(127232LLU,127244LLU,1LLU)}),3LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__P = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(33LLU,35LLU,1LLU),_1e1976730_Range16(37LLU,42LLU,1LLU),_1e1976730_Range16(44LLU,47LLU,1LLU),_1e1976730_Range16(58LLU,59LLU,1LLU),_1e1976730_Range16(63LLU,64LLU,1LLU),_1e1976730_Range16(91LLU,93LLU,1LLU),_1e1976730_Range16(95LLU,123LLU,28LLU),_1e1976730_Range16(125LLU,161LLU,36LLU),_1e1976730_Range16(167LLU,171LLU,4LLU),_1e1976730_Range16(182LLU,183LLU,1LLU),_1e1976730_Range16(187LLU,191LLU,4LLU),_1e1976730_Range16(894LLU,903LLU,9LLU),_1e1976730_Range16(1370LLU,1375LLU,1LLU),_1e1976730_Range16(1417LLU,1418LLU,1LLU),_1e1976730_Range16(1470LLU,1472LLU,2LLU),_1e1976730_Range16(1475LLU,1478LLU,3LLU),_1e1976730_Range16(1523LLU,1524LLU,1LLU),_1e1976730_Range16(1545LLU,1546LLU,1LLU),_1e1976730_Range16(1548LLU,1549LLU,1LLU),_1e1976730_Range16(1563LLU,1565LLU,2LLU),_1e1976730_Range16(1566LLU,1567LLU,1LLU),_1e1976730_Range16(1642LLU,1645LLU,1LLU),_1e1976730_Range16(1748LLU,1792LLU,44LLU),_1e1976730_Range16(1793LLU,1805LLU,1LLU),_1e1976730_Range16(2039LLU,2041LLU,1LLU),_1e1976730_Range16(2096LLU,2110LLU,1LLU),_1e1976730_Range16(2142LLU,2404LLU,262LLU),_1e1976730_Range16(2405LLU,2416LLU,11LLU),_1e1976730_Range16(2557LLU,2678LLU,121LLU),_1e1976730_Range16(2800LLU,3191LLU,391LLU),_1e1976730_Range16(3204LLU,3572LLU,368LLU),_1e1976730_Range16(3663LLU,3674LLU,11LLU),_1e1976730_Range16(3675LLU,3844LLU,169LLU),_1e1976730_Range16(3845LLU,3858LLU,1LLU),_1e1976730_Range16(3860LLU,3898LLU,38LLU),_1e1976730_Range16(3899LLU,3901LLU,1LLU),_1e1976730_Range16(3973LLU,4048LLU,75LLU),_1e1976730_Range16(4049LLU,4052LLU,1LLU),_1e1976730_Range16(4057LLU,4058LLU,1LLU),_1e1976730_Range16(4170LLU,4175LLU,1LLU),_1e1976730_Range16(4347LLU,4960LLU,613LLU),_1e1976730_Range16(4961LLU,4968LLU,1LLU),_1e1976730_Range16(5120LLU,5742LLU,622LLU),_1e1976730_Range16(5787LLU,5788LLU,1LLU),_1e1976730_Range16(5867LLU,5869LLU,1LLU),_1e1976730_Range16(5941LLU,5942LLU,1LLU),_1e1976730_Range16(6100LLU,6102LLU,1LLU),_1e1976730_Range16(6104LLU,6106LLU,1LLU),_1e1976730_Range16(6144LLU,6154LLU,1LLU),_1e1976730_Range16(6468LLU,6469LLU,1LLU),_1e1976730_Range16(6686LLU,6687LLU,1LLU),_1e1976730_Range16(6816LLU,6822LLU,1LLU),_1e1976730_Range16(6824LLU,6829LLU,1LLU),_1e1976730_Range16(7002LLU,7008LLU,1LLU),_1e1976730_Range16(7037LLU,7038LLU,1LLU),_1e1976730_Range16(7164LLU,7167LLU,1LLU),_1e1976730_Range16(7227LLU,7231LLU,1LLU),_1e1976730_Range16(7294LLU,7295LLU,1LLU),_1e1976730_Range16(7360LLU,7367LLU,1LLU),_1e1976730_Range16(7379LLU,8208LLU,829LLU),_1e1976730_Range16(8209LLU,8231LLU,1LLU),_1e1976730_Range16(8240LLU,8259LLU,1LLU),_1e1976730_Range16(8261LLU,8273LLU,1LLU),_1e1976730_Range16(8275LLU,8286LLU,1LLU),_1e1976730_Range16(8317LLU,8318LLU,1LLU),_1e1976730_Range16(8333LLU,8334LLU,1LLU),_1e1976730_Range16(8968LLU,8971LLU,1LLU),_1e1976730_Range16(9001LLU,9002LLU,1LLU),_1e1976730_Range16(10088LLU,10101LLU,1LLU),_1e1976730_Range16(10181LLU,10182LLU,1LLU),_1e1976730_Range16(10214LLU,10223LLU,1LLU),_1e1976730_Range16(10627LLU,10648LLU,1LLU),_1e1976730_Range16(10712LLU,10715LLU,1LLU),_1e1976730_Range16(10748LLU,10749LLU,1LLU),_1e1976730_Range16(11513LLU,11516LLU,1LLU),_1e1976730_Range16(11518LLU,11519LLU,1LLU),_1e1976730_Range16(11632LLU,11776LLU,144LLU),_1e1976730_Range16(11777LLU,11822LLU,1LLU),_1e1976730_Range16(11824LLU,11855LLU,1LLU),_1e1976730_Range16(11858LLU,11869LLU,1LLU),_1e1976730_Range16(12289LLU,12291LLU,1LLU),_1e1976730_Range16(12296LLU,12305LLU,1LLU),_1e1976730_Range16(12308LLU,12319LLU,1LLU),_1e1976730_Range16(12336LLU,12349LLU,13LLU),_1e1976730_Range16(12448LLU,12539LLU,91LLU),_1e1976730_Range16(42238LLU,42239LLU,1LLU),_1e1976730_Range16(42509LLU,42511LLU,1LLU),_1e1976730_Range16(42611LLU,42622LLU,11LLU),_1e1976730_Range16(42738LLU,42743LLU,1LLU),_1e1976730_Range16(43124LLU,43127LLU,1LLU),_1e1976730_Range16(43214LLU,43215LLU,1LLU),_1e1976730_Range16(43256LLU,43258LLU,1LLU),_1e1976730_Range16(43260LLU,43310LLU,50LLU),_1e1976730_Range16(43311LLU,43359LLU,48LLU),_1e1976730_Range16(43457LLU,43469LLU,1LLU),_1e1976730_Range16(43486LLU,43487LLU,1LLU),_1e1976730_Range16(43612LLU,43615LLU,1LLU),_1e1976730_Range16(43742LLU,43743LLU,1LLU),_1e1976730_Range16(43760LLU,43761LLU,1LLU),_1e1976730_Range16(44011LLU,64830LLU,20819LLU),_1e1976730_Range16(64831LLU,65040LLU,209LLU),_1e1976730_Range16(65041LLU,65049LLU,1LLU),_1e1976730_Range16(65072LLU,65106LLU,1LLU),_1e1976730_Range16(65108LLU,65121LLU,1LLU),_1e1976730_Range16(65123LLU,65128LLU,5LLU),_1e1976730_Range16(65130LLU,65131LLU,1LLU),_1e1976730_Range16(65281LLU,65283LLU,1LLU),_1e1976730_Range16(65285LLU,65290LLU,1LLU),_1e1976730_Range16(65292LLU,65295LLU,1LLU),_1e1976730_Range16(65306LLU,65307LLU,1LLU),_1e1976730_Range16(65311LLU,65312LLU,1LLU),_1e1976730_Range16(65339LLU,65341LLU,1LLU),_1e1976730_Range16(65343LLU,65371LLU,28LLU),_1e1976730_Range16(65373LLU,65375LLU,2LLU),_1e1976730_Range16(65376LLU,65381LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(65792LLU,65794LLU,1LLU),_1e1976730_Range32(66463LLU,66512LLU,49LLU),_1e1976730_Range32(66927LLU,67671LLU,744LLU),_1e1976730_Range32(67871LLU,67903LLU,32LLU),_1e1976730_Range32(68176LLU,68184LLU,1LLU),_1e1976730_Range32(68223LLU,68336LLU,113LLU),_1e1976730_Range32(68337LLU,68342LLU,1LLU),_1e1976730_Range32(68409LLU,68415LLU,1LLU),_1e1976730_Range32(68505LLU,68508LLU,1LLU),_1e1976730_Range32(69293LLU,69461LLU,168LLU),_1e1976730_Range32(69462LLU,69465LLU,1LLU),_1e1976730_Range32(69510LLU,69513LLU,1LLU),_1e1976730_Range32(69703LLU,69709LLU,1LLU),_1e1976730_Range32(69819LLU,69820LLU,1LLU),_1e1976730_Range32(69822LLU,69825LLU,1LLU),_1e1976730_Range32(69952LLU,69955LLU,1LLU),_1e1976730_Range32(70004LLU,70005LLU,1LLU),_1e1976730_Range32(70085LLU,70088LLU,1LLU),_1e1976730_Range32(70093LLU,70107LLU,14LLU),_1e1976730_Range32(70109LLU,70111LLU,1LLU),_1e1976730_Range32(70200LLU,70205LLU,1LLU),_1e1976730_Range32(70313LLU,70731LLU,418LLU),_1e1976730_Range32(70732LLU,70735LLU,1LLU),_1e1976730_Range32(70746LLU,70747LLU,1LLU),_1e1976730_Range32(70749LLU,70854LLU,105LLU),_1e1976730_Range32(71105LLU,71127LLU,1LLU),_1e1976730_Range32(71233LLU,71235LLU,1LLU),_1e1976730_Range32(71264LLU,71276LLU,1LLU),_1e1976730_Range32(71353LLU,71484LLU,131LLU),_1e1976730_Range32(71485LLU,71486LLU,1LLU),_1e1976730_Range32(71739LLU,72004LLU,265LLU),_1e1976730_Range32(72005LLU,72006LLU,1LLU),_1e1976730_Range32(72162LLU,72255LLU,93LLU),_1e1976730_Range32(72256LLU,72262LLU,1LLU),_1e1976730_Range32(72346LLU,72348LLU,1LLU),_1e1976730_Range32(72350LLU,72354LLU,1LLU),_1e1976730_Range32(72448LLU,72457LLU,1LLU),_1e1976730_Range32(72769LLU,72773LLU,1LLU),_1e1976730_Range32(72816LLU,72817LLU,1LLU),_1e1976730_Range32(73463LLU,73464LLU,1LLU),_1e1976730_Range32(73539LLU,73551LLU,1LLU),_1e1976730_Range32(73727LLU,74864LLU,1137LLU),_1e1976730_Range32(74865LLU,74868LLU,1LLU),_1e1976730_Range32(77809LLU,77810LLU,1LLU),_1e1976730_Range32(92782LLU,92783LLU,1LLU),_1e1976730_Range32(92917LLU,92983LLU,66LLU),_1e1976730_Range32(92984LLU,92987LLU,1LLU),_1e1976730_Range32(92996LLU,93847LLU,851LLU),_1e1976730_Range32(93848LLU,93850LLU,1LLU),_1e1976730_Range32(94178LLU,113823LLU,19645LLU),_1e1976730_Range32(121479LLU,121483LLU,1LLU),_1e1976730_Range32(125278LLU,125279LLU,1LLU)}),11LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(95LLU,8255LLU,8160LLU),_1e1976730_Range16(8256LLU,8276LLU,20LLU),_1e1976730_Range16(65075LLU,65076LLU,1LLU),_1e1976730_Range16(65101LLU,65103LLU,1LLU),_1e1976730_Range16(65343LLU,65343LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PD = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(45LLU,1418LLU,1373LLU),_1e1976730_Range16(1470LLU,5120LLU,3650LLU),_1e1976730_Range16(6150LLU,8208LLU,2058LLU),_1e1976730_Range16(8209LLU,8213LLU,1LLU),_1e1976730_Range16(11799LLU,11802LLU,3LLU),_1e1976730_Range16(11834LLU,11835LLU,1LLU),_1e1976730_Range16(11840LLU,11869LLU,29LLU),_1e1976730_Range16(12316LLU,12336LLU,20LLU),_1e1976730_Range16(12448LLU,65073LLU,52625LLU),_1e1976730_Range16(65074LLU,65112LLU,38LLU),_1e1976730_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(41LLU,93LLU,52LLU),_1e1976730_Range16(125LLU,3899LLU,3774LLU),_1e1976730_Range16(3901LLU,5788LLU,1887LLU),_1e1976730_Range16(8262LLU,8318LLU,56LLU),_1e1976730_Range16(8334LLU,8969LLU,635LLU),_1e1976730_Range16(8971LLU,9002LLU,31LLU),_1e1976730_Range16(10089LLU,10101LLU,2LLU),_1e1976730_Range16(10182LLU,10215LLU,33LLU),_1e1976730_Range16(10217LLU,10223LLU,2LLU),_1e1976730_Range16(10628LLU,10648LLU,2LLU),_1e1976730_Range16(10713LLU,10715LLU,2LLU),_1e1976730_Range16(10749LLU,11811LLU,1062LLU),_1e1976730_Range16(11813LLU,11817LLU,2LLU),_1e1976730_Range16(11862LLU,11868LLU,2LLU),_1e1976730_Range16(12297LLU,12305LLU,2LLU),_1e1976730_Range16(12309LLU,12315LLU,2LLU),_1e1976730_Range16(12318LLU,12319LLU,1LLU),_1e1976730_Range16(64830LLU,65048LLU,218LLU),_1e1976730_Range16(65078LLU,65092LLU,2LLU),_1e1976730_Range16(65096LLU,65114LLU,18LLU),_1e1976730_Range16(65116LLU,65118LLU,2LLU),_1e1976730_Range16(65289LLU,65341LLU,52LLU),_1e1976730_Range16(65373LLU,65379LLU,3LLU)}),jule::Slice<_1e1976730_Range32>(),1LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PF = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(187LLU,8217LLU,8030LLU),_1e1976730_Range16(8221LLU,8250LLU,29LLU),_1e1976730_Range16(11779LLU,11781LLU,2LLU),_1e1976730_Range16(11786LLU,11789LLU,3LLU),_1e1976730_Range16(11805LLU,11809LLU,4LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(171LLU,8216LLU,8045LLU),_1e1976730_Range16(8219LLU,8220LLU,1LLU),_1e1976730_Range16(8223LLU,8249LLU,26LLU),_1e1976730_Range16(11778LLU,11780LLU,2LLU),_1e1976730_Range16(11785LLU,11788LLU,3LLU),_1e1976730_Range16(11804LLU,11808LLU,4LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(33LLU,35LLU,1LLU),_1e1976730_Range16(37LLU,39LLU,1LLU),_1e1976730_Range16(42LLU,46LLU,2LLU),_1e1976730_Range16(47LLU,58LLU,11LLU),_1e1976730_Range16(59LLU,63LLU,4LLU),_1e1976730_Range16(64LLU,92LLU,28LLU),_1e1976730_Range16(161LLU,167LLU,6LLU),_1e1976730_Range16(182LLU,183LLU,1LLU),_1e1976730_Range16(191LLU,894LLU,703LLU),_1e1976730_Range16(903LLU,1370LLU,467LLU),_1e1976730_Range16(1371LLU,1375LLU,1LLU),_1e1976730_Range16(1417LLU,1472LLU,55LLU),_1e1976730_Range16(1475LLU,1478LLU,3LLU),_1e1976730_Range16(1523LLU,1524LLU,1LLU),_1e1976730_Range16(1545LLU,1546LLU,1LLU),_1e1976730_Range16(1548LLU,1549LLU,1LLU),_1e1976730_Range16(1563LLU,1565LLU,2LLU),_1e1976730_Range16(1566LLU,1567LLU,1LLU),_1e1976730_Range16(1642LLU,1645LLU,1LLU),_1e1976730_Range16(1748LLU,1792LLU,44LLU),_1e1976730_Range16(1793LLU,1805LLU,1LLU),_1e1976730_Range16(2039LLU,2041LLU,1LLU),_1e1976730_Range16(2096LLU,2110LLU,1LLU),_1e1976730_Range16(2142LLU,2404LLU,262LLU),_1e1976730_Range16(2405LLU,2416LLU,11LLU),_1e1976730_Range16(2557LLU,2678LLU,121LLU),_1e1976730_Range16(2800LLU,3191LLU,391LLU),_1e1976730_Range16(3204LLU,3572LLU,368LLU),_1e1976730_Range16(3663LLU,3674LLU,11LLU),_1e1976730_Range16(3675LLU,3844LLU,169LLU),_1e1976730_Range16(3845LLU,3858LLU,1LLU),_1e1976730_Range16(3860LLU,3973LLU,113LLU),_1e1976730_Range16(4048LLU,4052LLU,1LLU),_1e1976730_Range16(4057LLU,4058LLU,1LLU),_1e1976730_Range16(4170LLU,4175LLU,1LLU),_1e1976730_Range16(4347LLU,4960LLU,613LLU),_1e1976730_Range16(4961LLU,4968LLU,1LLU),_1e1976730_Range16(5742LLU,5867LLU,125LLU),_1e1976730_Range16(5868LLU,5869LLU,1LLU),_1e1976730_Range16(5941LLU,5942LLU,1LLU),_1e1976730_Range16(6100LLU,6102LLU,1LLU),_1e1976730_Range16(6104LLU,6106LLU,1LLU),_1e1976730_Range16(6144LLU,6149LLU,1LLU),_1e1976730_Range16(6151LLU,6154LLU,1LLU),_1e1976730_Range16(6468LLU,6469LLU,1LLU),_1e1976730_Range16(6686LLU,6687LLU,1LLU),_1e1976730_Range16(6816LLU,6822LLU,1LLU),_1e1976730_Range16(6824LLU,6829LLU,1LLU),_1e1976730_Range16(7002LLU,7008LLU,1LLU),_1e1976730_Range16(7037LLU,7038LLU,1LLU),_1e1976730_Range16(7164LLU,7167LLU,1LLU),_1e1976730_Range16(7227LLU,7231LLU,1LLU),_1e1976730_Range16(7294LLU,7295LLU,1LLU),_1e1976730_Range16(7360LLU,7367LLU,1LLU),_1e1976730_Range16(7379LLU,8214LLU,835LLU),_1e1976730_Range16(8215LLU,8224LLU,9LLU),_1e1976730_Range16(8225LLU,8231LLU,1LLU),_1e1976730_Range16(8240LLU,8248LLU,1LLU),_1e1976730_Range16(8251LLU,8254LLU,1LLU),_1e1976730_Range16(8257LLU,8259LLU,1LLU),_1e1976730_Range16(8263LLU,8273LLU,1LLU),_1e1976730_Range16(8275LLU,8277LLU,2LLU),_1e1976730_Range16(8278LLU,8286LLU,1LLU),_1e1976730_Range16(11513LLU,11516LLU,1LLU),_1e1976730_Range16(11518LLU,11519LLU,1LLU),_1e1976730_Range16(11632LLU,11776LLU,144LLU),_1e1976730_Range16(11777LLU,11782LLU,5LLU),_1e1976730_Range16(11783LLU,11784LLU,1LLU),_1e1976730_Range16(11787LLU,11790LLU,3LLU),_1e1976730_Range16(11791LLU,11798LLU,1LLU),_1e1976730_Range16(11800LLU,11801LLU,1LLU),_1e1976730_Range16(11803LLU,11806LLU,3LLU),_1e1976730_Range16(11807LLU,11818LLU,11LLU),_1e1976730_Range16(11819LLU,11822LLU,1LLU),_1e1976730_Range16(11824LLU,11833LLU,1LLU),_1e1976730_Range16(11836LLU,11839LLU,1LLU),_1e1976730_Range16(11841LLU,11843LLU,2LLU),_1e1976730_Range16(11844LLU,11855LLU,1LLU),_1e1976730_Range16(11858LLU,11860LLU,1LLU),_1e1976730_Range16(12289LLU,12291LLU,1LLU),_1e1976730_Range16(12349LLU,12539LLU,190LLU),_1e1976730_Range16(42238LLU,42239LLU,1LLU),_1e1976730_Range16(42509LLU,42511LLU,1LLU),_1e1976730_Range16(42611LLU,42622LLU,11LLU),_1e1976730_Range16(42738LLU,42743LLU,1LLU),_1e1976730_Range16(43124LLU,43127LLU,1LLU),_1e1976730_Range16(43214LLU,43215LLU,1LLU),_1e1976730_Range16(43256LLU,43258LLU,1LLU),_1e1976730_Range16(43260LLU,43310LLU,50LLU),_1e1976730_Range16(43311LLU,43359LLU,48LLU),_1e1976730_Range16(43457LLU,43469LLU,1LLU),_1e1976730_Range16(43486LLU,43487LLU,1LLU),_1e1976730_Range16(43612LLU,43615LLU,1LLU),_1e1976730_Range16(43742LLU,43743LLU,1LLU),_1e1976730_Range16(43760LLU,43761LLU,1LLU),_1e1976730_Range16(44011LLU,65040LLU,21029LLU),_1e1976730_Range16(65041LLU,65046LLU,1LLU),_1e1976730_Range16(65049LLU,65072LLU,23LLU),_1e1976730_Range16(65093LLU,65094LLU,1LLU),_1e1976730_Range16(65097LLU,65100LLU,1LLU),_1e1976730_Range16(65104LLU,65106LLU,1LLU),_1e1976730_Range16(65108LLU,65111LLU,1LLU),_1e1976730_Range16(65119LLU,65121LLU,1LLU),_1e1976730_Range16(65128LLU,65130LLU,2LLU),_1e1976730_Range16(65131LLU,65281LLU,150LLU),_1e1976730_Range16(65282LLU,65283LLU,1LLU),_1e1976730_Range16(65285LLU,65287LLU,1LLU),_1e1976730_Range16(65290LLU,65294LLU,2LLU),_1e1976730_Range16(65295LLU,65306LLU,11LLU),_1e1976730_Range16(65307LLU,65311LLU,4LLU),_1e1976730_Range16(65312LLU,65340LLU,28LLU),_1e1976730_Range16(65377LLU,65380LLU,3LLU),_1e1976730_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(65792LLU,65794LLU,1LLU),_1e1976730_Range32(66463LLU,66512LLU,49LLU),_1e1976730_Range32(66927LLU,67671LLU,744LLU),_1e1976730_Range32(67871LLU,67903LLU,32LLU),_1e1976730_Range32(68176LLU,68184LLU,1LLU),_1e1976730_Range32(68223LLU,68336LLU,113LLU),_1e1976730_Range32(68337LLU,68342LLU,1LLU),_1e1976730_Range32(68409LLU,68415LLU,1LLU),_1e1976730_Range32(68505LLU,68508LLU,1LLU),_1e1976730_Range32(69461LLU,69465LLU,1LLU),_1e1976730_Range32(69510LLU,69513LLU,1LLU),_1e1976730_Range32(69703LLU,69709LLU,1LLU),_1e1976730_Range32(69819LLU,69820LLU,1LLU),_1e1976730_Range32(69822LLU,69825LLU,1LLU),_1e1976730_Range32(69952LLU,69955LLU,1LLU),_1e1976730_Range32(70004LLU,70005LLU,1LLU),_1e1976730_Range32(70085LLU,70088LLU,1LLU),_1e1976730_Range32(70093LLU,70107LLU,14LLU),_1e1976730_Range32(70109LLU,70111LLU,1LLU),_1e1976730_Range32(70200LLU,70205LLU,1LLU),_1e1976730_Range32(70313LLU,70731LLU,418LLU),_1e1976730_Range32(70732LLU,70735LLU,1LLU),_1e1976730_Range32(70746LLU,70747LLU,1LLU),_1e1976730_Range32(70749LLU,70854LLU,105LLU),_1e1976730_Range32(71105LLU,71127LLU,1LLU),_1e1976730_Range32(71233LLU,71235LLU,1LLU),_1e1976730_Range32(71264LLU,71276LLU,1LLU),_1e1976730_Range32(71353LLU,71484LLU,131LLU),_1e1976730_Range32(71485LLU,71486LLU,1LLU),_1e1976730_Range32(71739LLU,72004LLU,265LLU),_1e1976730_Range32(72005LLU,72006LLU,1LLU),_1e1976730_Range32(72162LLU,72255LLU,93LLU),_1e1976730_Range32(72256LLU,72262LLU,1LLU),_1e1976730_Range32(72346LLU,72348LLU,1LLU),_1e1976730_Range32(72350LLU,72354LLU,1LLU),_1e1976730_Range32(72448LLU,72457LLU,1LLU),_1e1976730_Range32(72769LLU,72773LLU,1LLU),_1e1976730_Range32(72816LLU,72817LLU,1LLU),_1e1976730_Range32(73463LLU,73464LLU,1LLU),_1e1976730_Range32(73539LLU,73551LLU,1LLU),_1e1976730_Range32(73727LLU,74864LLU,1137LLU),_1e1976730_Range32(74865LLU,74868LLU,1LLU),_1e1976730_Range32(77809LLU,77810LLU,1LLU),_1e1976730_Range32(92782LLU,92783LLU,1LLU),_1e1976730_Range32(92917LLU,92983LLU,66LLU),_1e1976730_Range32(92984LLU,92987LLU,1LLU),_1e1976730_Range32(92996LLU,93847LLU,851LLU),_1e1976730_Range32(93848LLU,93850LLU,1LLU),_1e1976730_Range32(94178LLU,113823LLU,19645LLU),_1e1976730_Range32(121479LLU,121483LLU,1LLU),_1e1976730_Range32(125278LLU,125279LLU,1LLU)}),8LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PS = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(40LLU,91LLU,51LLU),_1e1976730_Range16(123LLU,3898LLU,3775LLU),_1e1976730_Range16(3900LLU,5787LLU,1887LLU),_1e1976730_Range16(8218LLU,8222LLU,4LLU),_1e1976730_Range16(8261LLU,8317LLU,56LLU),_1e1976730_Range16(8333LLU,8968LLU,635LLU),_1e1976730_Range16(8970LLU,9001LLU,31LLU),_1e1976730_Range16(10088LLU,10100LLU,2LLU),_1e1976730_Range16(10181LLU,10214LLU,33LLU),_1e1976730_Range16(10216LLU,10222LLU,2LLU),_1e1976730_Range16(10627LLU,10647LLU,2LLU),_1e1976730_Range16(10712LLU,10714LLU,2LLU),_1e1976730_Range16(10748LLU,11810LLU,1062LLU),_1e1976730_Range16(11812LLU,11816LLU,2LLU),_1e1976730_Range16(11842LLU,11861LLU,19LLU),_1e1976730_Range16(11863LLU,11867LLU,2LLU),_1e1976730_Range16(12296LLU,12304LLU,2LLU),_1e1976730_Range16(12308LLU,12314LLU,2LLU),_1e1976730_Range16(12317LLU,64831LLU,52514LLU),_1e1976730_Range16(65047LLU,65077LLU,30LLU),_1e1976730_Range16(65079LLU,65091LLU,2LLU),_1e1976730_Range16(65095LLU,65113LLU,18LLU),_1e1976730_Range16(65115LLU,65117LLU,2LLU),_1e1976730_Range16(65288LLU,65339LLU,51LLU),_1e1976730_Range16(65371LLU,65375LLU,4LLU),_1e1976730_Range16(65378LLU,65378LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),1LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__S = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(36LLU,43LLU,7LLU),_1e1976730_Range16(60LLU,62LLU,1LLU),_1e1976730_Range16(94LLU,96LLU,2LLU),_1e1976730_Range16(124LLU,126LLU,2LLU),_1e1976730_Range16(162LLU,166LLU,1LLU),_1e1976730_Range16(168LLU,169LLU,1LLU),_1e1976730_Range16(172LLU,174LLU,2LLU),_1e1976730_Range16(175LLU,177LLU,1LLU),_1e1976730_Range16(180LLU,184LLU,4LLU),_1e1976730_Range16(215LLU,247LLU,32LLU),_1e1976730_Range16(706LLU,709LLU,1LLU),_1e1976730_Range16(722LLU,735LLU,1LLU),_1e1976730_Range16(741LLU,747LLU,1LLU),_1e1976730_Range16(749LLU,751LLU,2LLU),_1e1976730_Range16(752LLU,767LLU,1LLU),_1e1976730_Range16(885LLU,900LLU,15LLU),_1e1976730_Range16(901LLU,1014LLU,113LLU),_1e1976730_Range16(1154LLU,1421LLU,267LLU),_1e1976730_Range16(1422LLU,1423LLU,1LLU),_1e1976730_Range16(1542LLU,1544LLU,1LLU),_1e1976730_Range16(1547LLU,1550LLU,3LLU),_1e1976730_Range16(1551LLU,1758LLU,207LLU),_1e1976730_Range16(1769LLU,1789LLU,20LLU),_1e1976730_Range16(1790LLU,2038LLU,248LLU),_1e1976730_Range16(2046LLU,2047LLU,1LLU),_1e1976730_Range16(2184LLU,2546LLU,362LLU),_1e1976730_Range16(2547LLU,2554LLU,7LLU),_1e1976730_Range16(2555LLU,2801LLU,246LLU),_1e1976730_Range16(2928LLU,3059LLU,131LLU),_1e1976730_Range16(3060LLU,3066LLU,1LLU),_1e1976730_Range16(3199LLU,3407LLU,208LLU),_1e1976730_Range16(3449LLU,3647LLU,198LLU),_1e1976730_Range16(3841LLU,3843LLU,1LLU),_1e1976730_Range16(3859LLU,3861LLU,2LLU),_1e1976730_Range16(3862LLU,3863LLU,1LLU),_1e1976730_Range16(3866LLU,3871LLU,1LLU),_1e1976730_Range16(3892LLU,3896LLU,2LLU),_1e1976730_Range16(4030LLU,4037LLU,1LLU),_1e1976730_Range16(4039LLU,4044LLU,1LLU),_1e1976730_Range16(4046LLU,4047LLU,1LLU),_1e1976730_Range16(4053LLU,4056LLU,1LLU),_1e1976730_Range16(4254LLU,4255LLU,1LLU),_1e1976730_Range16(5008LLU,5017LLU,1LLU),_1e1976730_Range16(5741LLU,6107LLU,366LLU),_1e1976730_Range16(6464LLU,6622LLU,158LLU),_1e1976730_Range16(6623LLU,6655LLU,1LLU),_1e1976730_Range16(7009LLU,7018LLU,1LLU),_1e1976730_Range16(7028LLU,7036LLU,1LLU),_1e1976730_Range16(8125LLU,8127LLU,2LLU),_1e1976730_Range16(8128LLU,8129LLU,1LLU),_1e1976730_Range16(8141LLU,8143LLU,1LLU),_1e1976730_Range16(8157LLU,8159LLU,1LLU),_1e1976730_Range16(8173LLU,8175LLU,1LLU),_1e1976730_Range16(8189LLU,8190LLU,1LLU),_1e1976730_Range16(8260LLU,8274LLU,14LLU),_1e1976730_Range16(8314LLU,8316LLU,1LLU),_1e1976730_Range16(8330LLU,8332LLU,1LLU),_1e1976730_Range16(8352LLU,8384LLU,1LLU),_1e1976730_Range16(8448LLU,8449LLU,1LLU),_1e1976730_Range16(8451LLU,8454LLU,1LLU),_1e1976730_Range16(8456LLU,8457LLU,1LLU),_1e1976730_Range16(8468LLU,8470LLU,2LLU),_1e1976730_Range16(8471LLU,8472LLU,1LLU),_1e1976730_Range16(8478LLU,8483LLU,1LLU),_1e1976730_Range16(8485LLU,8489LLU,2LLU),_1e1976730_Range16(8494LLU,8506LLU,12LLU),_1e1976730_Range16(8507LLU,8512LLU,5LLU),_1e1976730_Range16(8513LLU,8516LLU,1LLU),_1e1976730_Range16(8522LLU,8525LLU,1LLU),_1e1976730_Range16(8527LLU,8586LLU,59LLU),_1e1976730_Range16(8587LLU,8592LLU,5LLU),_1e1976730_Range16(8593LLU,8967LLU,1LLU),_1e1976730_Range16(8972LLU,9000LLU,1LLU),_1e1976730_Range16(9003LLU,9254LLU,1LLU),_1e1976730_Range16(9280LLU,9290LLU,1LLU),_1e1976730_Range16(9372LLU,9449LLU,1LLU),_1e1976730_Range16(9472LLU,10087LLU,1LLU),_1e1976730_Range16(10132LLU,10180LLU,1LLU),_1e1976730_Range16(10183LLU,10213LLU,1LLU),_1e1976730_Range16(10224LLU,10626LLU,1LLU),_1e1976730_Range16(10649LLU,10711LLU,1LLU),_1e1976730_Range16(10716LLU,10747LLU,1LLU),_1e1976730_Range16(10750LLU,11123LLU,1LLU),_1e1976730_Range16(11126LLU,11157LLU,1LLU),_1e1976730_Range16(11159LLU,11263LLU,1LLU),_1e1976730_Range16(11493LLU,11498LLU,1LLU),_1e1976730_Range16(11856LLU,11857LLU,1LLU),_1e1976730_Range16(11904LLU,11929LLU,1LLU),_1e1976730_Range16(11931LLU,12019LLU,1LLU),_1e1976730_Range16(12032LLU,12245LLU,1LLU),_1e1976730_Range16(12272LLU,12283LLU,1LLU),_1e1976730_Range16(12292LLU,12306LLU,14LLU),_1e1976730_Range16(12307LLU,12320LLU,13LLU),_1e1976730_Range16(12342LLU,12343LLU,1LLU),_1e1976730_Range16(12350LLU,12351LLU,1LLU),_1e1976730_Range16(12443LLU,12444LLU,1LLU),_1e1976730_Range16(12688LLU,12689LLU,1LLU),_1e1976730_Range16(12694LLU,12703LLU,1LLU),_1e1976730_Range16(12736LLU,12771LLU,1LLU),_1e1976730_Range16(12800LLU,12830LLU,1LLU),_1e1976730_Range16(12842LLU,12871LLU,1LLU),_1e1976730_Range16(12880LLU,12896LLU,16LLU),_1e1976730_Range16(12897LLU,12927LLU,1LLU),_1e1976730_Range16(12938LLU,12976LLU,1LLU),_1e1976730_Range16(12992LLU,13311LLU,1LLU),_1e1976730_Range16(19904LLU,19967LLU,1LLU),_1e1976730_Range16(42128LLU,42182LLU,1LLU),_1e1976730_Range16(42752LLU,42774LLU,1LLU),_1e1976730_Range16(42784LLU,42785LLU,1LLU),_1e1976730_Range16(42889LLU,42890LLU,1LLU),_1e1976730_Range16(43048LLU,43051LLU,1LLU),_1e1976730_Range16(43062LLU,43065LLU,1LLU),_1e1976730_Range16(43639LLU,43641LLU,1LLU),_1e1976730_Range16(43867LLU,43882LLU,15LLU),_1e1976730_Range16(43883LLU,64297LLU,20414LLU),_1e1976730_Range16(64434LLU,64450LLU,1LLU),_1e1976730_Range16(64832LLU,64847LLU,1LLU),_1e1976730_Range16(64975LLU,65020LLU,45LLU),_1e1976730_Range16(65021LLU,65023LLU,1LLU),_1e1976730_Range16(65122LLU,65124LLU,2LLU),_1e1976730_Range16(65125LLU,65126LLU,1LLU),_1e1976730_Range16(65129LLU,65284LLU,155LLU),_1e1976730_Range16(65291LLU,65308LLU,17LLU),_1e1976730_Range16(65309LLU,65310LLU,1LLU),_1e1976730_Range16(65342LLU,65344LLU,2LLU),_1e1976730_Range16(65372LLU,65374LLU,2LLU),_1e1976730_Range16(65504LLU,65510LLU,1LLU),_1e1976730_Range16(65512LLU,65518LLU,1LLU),_1e1976730_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(65847LLU,65855LLU,1LLU),_1e1976730_Range32(65913LLU,65929LLU,1LLU),_1e1976730_Range32(65932LLU,65934LLU,1LLU),_1e1976730_Range32(65936LLU,65948LLU,1LLU),_1e1976730_Range32(65952LLU,66000LLU,48LLU),_1e1976730_Range32(66001LLU,66044LLU,1LLU),_1e1976730_Range32(67703LLU,67704LLU,1LLU),_1e1976730_Range32(68296LLU,71487LLU,3191LLU),_1e1976730_Range32(73685LLU,73713LLU,1LLU),_1e1976730_Range32(92988LLU,92991LLU,1LLU),_1e1976730_Range32(92997LLU,113820LLU,20823LLU),_1e1976730_Range32(118608LLU,118723LLU,1LLU),_1e1976730_Range32(118784LLU,119029LLU,1LLU),_1e1976730_Range32(119040LLU,119078LLU,1LLU),_1e1976730_Range32(119081LLU,119140LLU,1LLU),_1e1976730_Range32(119146LLU,119148LLU,1LLU),_1e1976730_Range32(119171LLU,119172LLU,1LLU),_1e1976730_Range32(119180LLU,119209LLU,1LLU),_1e1976730_Range32(119214LLU,119274LLU,1LLU),_1e1976730_Range32(119296LLU,119361LLU,1LLU),_1e1976730_Range32(119365LLU,119552LLU,187LLU),_1e1976730_Range32(119553LLU,119638LLU,1LLU),_1e1976730_Range32(120513LLU,120539LLU,26LLU),_1e1976730_Range32(120571LLU,120597LLU,26LLU),_1e1976730_Range32(120629LLU,120655LLU,26LLU),_1e1976730_Range32(120687LLU,120713LLU,26LLU),_1e1976730_Range32(120745LLU,120771LLU,26LLU),_1e1976730_Range32(120832LLU,121343LLU,1LLU),_1e1976730_Range32(121399LLU,121402LLU,1LLU),_1e1976730_Range32(121453LLU,121460LLU,1LLU),_1e1976730_Range32(121462LLU,121475LLU,1LLU),_1e1976730_Range32(121477LLU,121478LLU,1LLU),_1e1976730_Range32(123215LLU,123647LLU,432LLU),_1e1976730_Range32(126124LLU,126128LLU,4LLU),_1e1976730_Range32(126254LLU,126704LLU,450LLU),_1e1976730_Range32(126705LLU,126976LLU,271LLU),_1e1976730_Range32(126977LLU,127019LLU,1LLU),_1e1976730_Range32(127024LLU,127123LLU,1LLU),_1e1976730_Range32(127136LLU,127150LLU,1LLU),_1e1976730_Range32(127153LLU,127167LLU,1LLU),_1e1976730_Range32(127169LLU,127183LLU,1LLU),_1e1976730_Range32(127185LLU,127221LLU,1LLU),_1e1976730_Range32(127245LLU,127405LLU,1LLU),_1e1976730_Range32(127462LLU,127490LLU,1LLU),_1e1976730_Range32(127504LLU,127547LLU,1LLU),_1e1976730_Range32(127552LLU,127560LLU,1LLU),_1e1976730_Range32(127568LLU,127569LLU,1LLU),_1e1976730_Range32(127584LLU,127589LLU,1LLU),_1e1976730_Range32(127744LLU,128727LLU,1LLU),_1e1976730_Range32(128732LLU,128748LLU,1LLU),_1e1976730_Range32(128752LLU,128764LLU,1LLU),_1e1976730_Range32(128768LLU,128886LLU,1LLU),_1e1976730_Range32(128891LLU,128985LLU,1LLU),_1e1976730_Range32(128992LLU,129003LLU,1LLU),_1e1976730_Range32(129008LLU,129024LLU,16LLU),_1e1976730_Range32(129025LLU,129035LLU,1LLU),_1e1976730_Range32(129040LLU,129095LLU,1LLU),_1e1976730_Range32(129104LLU,129113LLU,1LLU),_1e1976730_Range32(129120LLU,129159LLU,1LLU),_1e1976730_Range32(129168LLU,129197LLU,1LLU),_1e1976730_Range32(129200LLU,129201LLU,1LLU),_1e1976730_Range32(129280LLU,129619LLU,1LLU),_1e1976730_Range32(129632LLU,129645LLU,1LLU),_1e1976730_Range32(129648LLU,129660LLU,1LLU),_1e1976730_Range32(129664LLU,129672LLU,1LLU),_1e1976730_Range32(129680LLU,129725LLU,1LLU),_1e1976730_Range32(129727LLU,129733LLU,1LLU),_1e1976730_Range32(129742LLU,129755LLU,1LLU),_1e1976730_Range32(129760LLU,129768LLU,1LLU),_1e1976730_Range32(129776LLU,129784LLU,1LLU),_1e1976730_Range32(129792LLU,129938LLU,1LLU),_1e1976730_Range32(129940LLU,129994LLU,1LLU)}),10LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(36LLU,162LLU,126LLU),_1e1976730_Range16(163LLU,165LLU,1LLU),_1e1976730_Range16(1423LLU,1547LLU,124LLU),_1e1976730_Range16(2046LLU,2047LLU,1LLU),_1e1976730_Range16(2546LLU,2547LLU,1LLU),_1e1976730_Range16(2555LLU,2801LLU,246LLU),_1e1976730_Range16(3065LLU,3647LLU,582LLU),_1e1976730_Range16(6107LLU,8352LLU,2245LLU),_1e1976730_Range16(8353LLU,8384LLU,1LLU),_1e1976730_Range16(43064LLU,65020LLU,21956LLU),_1e1976730_Range16(65129LLU,65284LLU,155LLU),_1e1976730_Range16(65504LLU,65505LLU,1LLU),_1e1976730_Range16(65509LLU,65510LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(73693LLU,73696LLU,1LLU),_1e1976730_Range32(123647LLU,126128LLU,2481LLU)}),2LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SK = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(94LLU,96LLU,2LLU),_1e1976730_Range16(168LLU,175LLU,7LLU),_1e1976730_Range16(180LLU,184LLU,4LLU),_1e1976730_Range16(706LLU,709LLU,1LLU),_1e1976730_Range16(722LLU,735LLU,1LLU),_1e1976730_Range16(741LLU,747LLU,1LLU),_1e1976730_Range16(749LLU,751LLU,2LLU),_1e1976730_Range16(752LLU,767LLU,1LLU),_1e1976730_Range16(885LLU,900LLU,15LLU),_1e1976730_Range16(901LLU,2184LLU,1283LLU),_1e1976730_Range16(8125LLU,8127LLU,2LLU),_1e1976730_Range16(8128LLU,8129LLU,1LLU),_1e1976730_Range16(8141LLU,8143LLU,1LLU),_1e1976730_Range16(8157LLU,8159LLU,1LLU),_1e1976730_Range16(8173LLU,8175LLU,1LLU),_1e1976730_Range16(8189LLU,8190LLU,1LLU),_1e1976730_Range16(12443LLU,12444LLU,1LLU),_1e1976730_Range16(42752LLU,42774LLU,1LLU),_1e1976730_Range16(42784LLU,42785LLU,1LLU),_1e1976730_Range16(42889LLU,42890LLU,1LLU),_1e1976730_Range16(43867LLU,43882LLU,15LLU),_1e1976730_Range16(43883LLU,64434LLU,20551LLU),_1e1976730_Range16(64435LLU,64450LLU,1LLU),_1e1976730_Range16(65342LLU,65344LLU,2LLU),_1e1976730_Range16(65507LLU,65507LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(127995LLU,127999LLU,1LLU)}),3LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SM = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(43LLU,60LLU,17LLU),_1e1976730_Range16(61LLU,62LLU,1LLU),_1e1976730_Range16(124LLU,126LLU,2LLU),_1e1976730_Range16(172LLU,177LLU,5LLU),_1e1976730_Range16(215LLU,247LLU,32LLU),_1e1976730_Range16(1014LLU,1542LLU,528LLU),_1e1976730_Range16(1543LLU,1544LLU,1LLU),_1e1976730_Range16(8260LLU,8274LLU,14LLU),_1e1976730_Range16(8314LLU,8316LLU,1LLU),_1e1976730_Range16(8330LLU,8332LLU,1LLU),_1e1976730_Range16(8472LLU,8512LLU,40LLU),_1e1976730_Range16(8513LLU,8516LLU,1LLU),_1e1976730_Range16(8523LLU,8592LLU,69LLU),_1e1976730_Range16(8593LLU,8596LLU,1LLU),_1e1976730_Range16(8602LLU,8603LLU,1LLU),_1e1976730_Range16(8608LLU,8614LLU,3LLU),_1e1976730_Range16(8622LLU,8654LLU,32LLU),_1e1976730_Range16(8655LLU,8658LLU,3LLU),_1e1976730_Range16(8660LLU,8692LLU,32LLU),_1e1976730_Range16(8693LLU,8959LLU,1LLU),_1e1976730_Range16(8992LLU,8993LLU,1LLU),_1e1976730_Range16(9084LLU,9115LLU,31LLU),_1e1976730_Range16(9116LLU,9139LLU,1LLU),_1e1976730_Range16(9180LLU,9185LLU,1LLU),_1e1976730_Range16(9655LLU,9665LLU,10LLU),_1e1976730_Range16(9720LLU,9727LLU,1LLU),_1e1976730_Range16(9839LLU,10176LLU,337LLU),_1e1976730_Range16(10177LLU,10180LLU,1LLU),_1e1976730_Range16(10183LLU,10213LLU,1LLU),_1e1976730_Range16(10224LLU,10239LLU,1LLU),_1e1976730_Range16(10496LLU,10626LLU,1LLU),_1e1976730_Range16(10649LLU,10711LLU,1LLU),_1e1976730_Range16(10716LLU,10747LLU,1LLU),_1e1976730_Range16(10750LLU,11007LLU,1LLU),_1e1976730_Range16(11056LLU,11076LLU,1LLU),_1e1976730_Range16(11079LLU,11084LLU,1LLU),_1e1976730_Range16(64297LLU,65122LLU,825LLU),_1e1976730_Range16(65124LLU,65126LLU,1LLU),_1e1976730_Range16(65291LLU,65308LLU,17LLU),_1e1976730_Range16(65309LLU,65310LLU,1LLU),_1e1976730_Range16(65372LLU,65374LLU,2LLU),_1e1976730_Range16(65506LLU,65513LLU,7LLU),_1e1976730_Range16(65514LLU,65516LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(120513LLU,120539LLU,26LLU),_1e1976730_Range32(120571LLU,120597LLU,26LLU),_1e1976730_Range32(120629LLU,120655LLU,26LLU),_1e1976730_Range32(120687LLU,120713LLU,26LLU),_1e1976730_Range32(120745LLU,120771LLU,26LLU),_1e1976730_Range32(126704LLU,126705LLU,1LLU)}),5LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(166LLU,169LLU,3LLU),_1e1976730_Range16(174LLU,176LLU,2LLU),_1e1976730_Range16(1154LLU,1421LLU,267LLU),_1e1976730_Range16(1422LLU,1550LLU,128LLU),_1e1976730_Range16(1551LLU,1758LLU,207LLU),_1e1976730_Range16(1769LLU,1789LLU,20LLU),_1e1976730_Range16(1790LLU,2038LLU,248LLU),_1e1976730_Range16(2554LLU,2928LLU,374LLU),_1e1976730_Range16(3059LLU,3064LLU,1LLU),_1e1976730_Range16(3066LLU,3199LLU,133LLU),_1e1976730_Range16(3407LLU,3449LLU,42LLU),_1e1976730_Range16(3841LLU,3843LLU,1LLU),_1e1976730_Range16(3859LLU,3861LLU,2LLU),_1e1976730_Range16(3862LLU,3863LLU,1LLU),_1e1976730_Range16(3866LLU,3871LLU,1LLU),_1e1976730_Range16(3892LLU,3896LLU,2LLU),_1e1976730_Range16(4030LLU,4037LLU,1LLU),_1e1976730_Range16(4039LLU,4044LLU,1LLU),_1e1976730_Range16(4046LLU,4047LLU,1LLU),_1e1976730_Range16(4053LLU,4056LLU,1LLU),_1e1976730_Range16(4254LLU,4255LLU,1LLU),_1e1976730_Range16(5008LLU,5017LLU,1LLU),_1e1976730_Range16(5741LLU,6464LLU,723LLU),_1e1976730_Range16(6622LLU,6655LLU,1LLU),_1e1976730_Range16(7009LLU,7018LLU,1LLU),_1e1976730_Range16(7028LLU,7036LLU,1LLU),_1e1976730_Range16(8448LLU,8449LLU,1LLU),_1e1976730_Range16(8451LLU,8454LLU,1LLU),_1e1976730_Range16(8456LLU,8457LLU,1LLU),_1e1976730_Range16(8468LLU,8470LLU,2LLU),_1e1976730_Range16(8471LLU,8478LLU,7LLU),_1e1976730_Range16(8479LLU,8483LLU,1LLU),_1e1976730_Range16(8485LLU,8489LLU,2LLU),_1e1976730_Range16(8494LLU,8506LLU,12LLU),_1e1976730_Range16(8507LLU,8522LLU,15LLU),_1e1976730_Range16(8524LLU,8525LLU,1LLU),_1e1976730_Range16(8527LLU,8586LLU,59LLU),_1e1976730_Range16(8587LLU,8597LLU,10LLU),_1e1976730_Range16(8598LLU,8601LLU,1LLU),_1e1976730_Range16(8604LLU,8607LLU,1LLU),_1e1976730_Range16(8609LLU,8610LLU,1LLU),_1e1976730_Range16(8612LLU,8613LLU,1LLU),_1e1976730_Range16(8615LLU,8621LLU,1LLU),_1e1976730_Range16(8623LLU,8653LLU,1LLU),_1e1976730_Range16(8656LLU,8657LLU,1LLU),_1e1976730_Range16(8659LLU,8661LLU,2LLU),_1e1976730_Range16(8662LLU,8691LLU,1LLU),_1e1976730_Range16(8960LLU,8967LLU,1LLU),_1e1976730_Range16(8972LLU,8991LLU,1LLU),_1e1976730_Range16(8994LLU,9000LLU,1LLU),_1e1976730_Range16(9003LLU,9083LLU,1LLU),_1e1976730_Range16(9085LLU,9114LLU,1LLU),_1e1976730_Range16(9140LLU,9179LLU,1LLU),_1e1976730_Range16(9186LLU,9254LLU,1LLU),_1e1976730_Range16(9280LLU,9290LLU,1LLU),_1e1976730_Range16(9372LLU,9449LLU,1LLU),_1e1976730_Range16(9472LLU,9654LLU,1LLU),_1e1976730_Range16(9656LLU,9664LLU,1LLU),_1e1976730_Range16(9666LLU,9719LLU,1LLU),_1e1976730_Range16(9728LLU,9838LLU,1LLU),_1e1976730_Range16(9840LLU,10087LLU,1LLU),_1e1976730_Range16(10132LLU,10175LLU,1LLU),_1e1976730_Range16(10240LLU,10495LLU,1LLU),_1e1976730_Range16(11008LLU,11055LLU,1LLU),_1e1976730_Range16(11077LLU,11078LLU,1LLU),_1e1976730_Range16(11085LLU,11123LLU,1LLU),_1e1976730_Range16(11126LLU,11157LLU,1LLU),_1e1976730_Range16(11159LLU,11263LLU,1LLU),_1e1976730_Range16(11493LLU,11498LLU,1LLU),_1e1976730_Range16(11856LLU,11857LLU,1LLU),_1e1976730_Range16(11904LLU,11929LLU,1LLU),_1e1976730_Range16(11931LLU,12019LLU,1LLU),_1e1976730_Range16(12032LLU,12245LLU,1LLU),_1e1976730_Range16(12272LLU,12283LLU,1LLU),_1e1976730_Range16(12292LLU,12306LLU,14LLU),_1e1976730_Range16(12307LLU,12320LLU,13LLU),_1e1976730_Range16(12342LLU,12343LLU,1LLU),_1e1976730_Range16(12350LLU,12351LLU,1LLU),_1e1976730_Range16(12688LLU,12689LLU,1LLU),_1e1976730_Range16(12694LLU,12703LLU,1LLU),_1e1976730_Range16(12736LLU,12771LLU,1LLU),_1e1976730_Range16(12800LLU,12830LLU,1LLU),_1e1976730_Range16(12842LLU,12871LLU,1LLU),_1e1976730_Range16(12880LLU,12896LLU,16LLU),_1e1976730_Range16(12897LLU,12927LLU,1LLU),_1e1976730_Range16(12938LLU,12976LLU,1LLU),_1e1976730_Range16(12992LLU,13311LLU,1LLU),_1e1976730_Range16(19904LLU,19967LLU,1LLU),_1e1976730_Range16(42128LLU,42182LLU,1LLU),_1e1976730_Range16(43048LLU,43051LLU,1LLU),_1e1976730_Range16(43062LLU,43063LLU,1LLU),_1e1976730_Range16(43065LLU,43639LLU,574LLU),_1e1976730_Range16(43640LLU,43641LLU,1LLU),_1e1976730_Range16(64832LLU,64847LLU,1LLU),_1e1976730_Range16(64975LLU,65021LLU,46LLU),_1e1976730_Range16(65022LLU,65023LLU,1LLU),_1e1976730_Range16(65508LLU,65512LLU,4LLU),_1e1976730_Range16(65517LLU,65518LLU,1LLU),_1e1976730_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(65847LLU,65855LLU,1LLU),_1e1976730_Range32(65913LLU,65929LLU,1LLU),_1e1976730_Range32(65932LLU,65934LLU,1LLU),_1e1976730_Range32(65936LLU,65948LLU,1LLU),_1e1976730_Range32(65952LLU,66000LLU,48LLU),_1e1976730_Range32(66001LLU,66044LLU,1LLU),_1e1976730_Range32(67703LLU,67704LLU,1LLU),_1e1976730_Range32(68296LLU,71487LLU,3191LLU),_1e1976730_Range32(73685LLU,73692LLU,1LLU),_1e1976730_Range32(73697LLU,73713LLU,1LLU),_1e1976730_Range32(92988LLU,92991LLU,1LLU),_1e1976730_Range32(92997LLU,113820LLU,20823LLU),_1e1976730_Range32(118608LLU,118723LLU,1LLU),_1e1976730_Range32(118784LLU,119029LLU,1LLU),_1e1976730_Range32(119040LLU,119078LLU,1LLU),_1e1976730_Range32(119081LLU,119140LLU,1LLU),_1e1976730_Range32(119146LLU,119148LLU,1LLU),_1e1976730_Range32(119171LLU,119172LLU,1LLU),_1e1976730_Range32(119180LLU,119209LLU,1LLU),_1e1976730_Range32(119214LLU,119274LLU,1LLU),_1e1976730_Range32(119296LLU,119361LLU,1LLU),_1e1976730_Range32(119365LLU,119552LLU,187LLU),_1e1976730_Range32(119553LLU,119638LLU,1LLU),_1e1976730_Range32(120832LLU,121343LLU,1LLU),_1e1976730_Range32(121399LLU,121402LLU,1LLU),_1e1976730_Range32(121453LLU,121460LLU,1LLU),_1e1976730_Range32(121462LLU,121475LLU,1LLU),_1e1976730_Range32(121477LLU,121478LLU,1LLU),_1e1976730_Range32(123215LLU,126124LLU,2909LLU),_1e1976730_Range32(126254LLU,126976LLU,722LLU),_1e1976730_Range32(126977LLU,127019LLU,1LLU),_1e1976730_Range32(127024LLU,127123LLU,1LLU),_1e1976730_Range32(127136LLU,127150LLU,1LLU),_1e1976730_Range32(127153LLU,127167LLU,1LLU),_1e1976730_Range32(127169LLU,127183LLU,1LLU),_1e1976730_Range32(127185LLU,127221LLU,1LLU),_1e1976730_Range32(127245LLU,127405LLU,1LLU),_1e1976730_Range32(127462LLU,127490LLU,1LLU),_1e1976730_Range32(127504LLU,127547LLU,1LLU),_1e1976730_Range32(127552LLU,127560LLU,1LLU),_1e1976730_Range32(127568LLU,127569LLU,1LLU),_1e1976730_Range32(127584LLU,127589LLU,1LLU),_1e1976730_Range32(127744LLU,127994LLU,1LLU),_1e1976730_Range32(128000LLU,128727LLU,1LLU),_1e1976730_Range32(128732LLU,128748LLU,1LLU),_1e1976730_Range32(128752LLU,128764LLU,1LLU),_1e1976730_Range32(128768LLU,128886LLU,1LLU),_1e1976730_Range32(128891LLU,128985LLU,1LLU),_1e1976730_Range32(128992LLU,129003LLU,1LLU),_1e1976730_Range32(129008LLU,129024LLU,16LLU),_1e1976730_Range32(129025LLU,129035LLU,1LLU),_1e1976730_Range32(129040LLU,129095LLU,1LLU),_1e1976730_Range32(129104LLU,129113LLU,1LLU),_1e1976730_Range32(129120LLU,129159LLU,1LLU),_1e1976730_Range32(129168LLU,129197LLU,1LLU),_1e1976730_Range32(129200LLU,129201LLU,1LLU),_1e1976730_Range32(129280LLU,129619LLU,1LLU),_1e1976730_Range32(129632LLU,129645LLU,1LLU),_1e1976730_Range32(129648LLU,129660LLU,1LLU),_1e1976730_Range32(129664LLU,129672LLU,1LLU),_1e1976730_Range32(129680LLU,129725LLU,1LLU),_1e1976730_Range32(129727LLU,129733LLU,1LLU),_1e1976730_Range32(129742LLU,129755LLU,1LLU),_1e1976730_Range32(129760LLU,129768LLU,1LLU),_1e1976730_Range32(129776LLU,129784LLU,1LLU),_1e1976730_Range32(129792LLU,129938LLU,1LLU),_1e1976730_Range32(129940LLU,129994LLU,1LLU)}),2LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__Z = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(32LLU,160LLU,128LLU),_1e1976730_Range16(5760LLU,8192LLU,2432LLU),_1e1976730_Range16(8193LLU,8202LLU,1LLU),_1e1976730_Range16(8232LLU,8233LLU,1LLU),_1e1976730_Range16(8239LLU,8287LLU,48LLU),_1e1976730_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),1LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ZL = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(8232LLU,8232LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ZP = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(8233LLU,8233LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ZS = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(32LLU,160LLU,128LLU),_1e1976730_Range16(5760LLU,8192LLU,2432LLU),_1e1976730_Range16(8193LLU,8202LLU,1LLU),_1e1976730_Range16(8239LLU,8287LLU,48LLU),_1e1976730_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),1LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ADLAM = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(125184LLU,125259LLU,1LLU),_1e1976730_Range32(125264LLU,125273LLU,1LLU),_1e1976730_Range32(125278LLU,125279LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__AHOM = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(71424LLU,71450LLU,1LLU),_1e1976730_Range32(71453LLU,71467LLU,1LLU),_1e1976730_Range32(71472LLU,71494LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ANATOLIAN_HIEROGLYPHS = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(82944LLU,83526LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ARABIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(1536LLU,1540LLU,1LLU),_1e1976730_Range16(1542LLU,1547LLU,1LLU),_1e1976730_Range16(1549LLU,1562LLU,1LLU),_1e1976730_Range16(1564LLU,1566LLU,1LLU),_1e1976730_Range16(1568LLU,1599LLU,1LLU),_1e1976730_Range16(1601LLU,1610LLU,1LLU),_1e1976730_Range16(1622LLU,1647LLU,1LLU),_1e1976730_Range16(1649LLU,1756LLU,1LLU),_1e1976730_Range16(1758LLU,1791LLU,1LLU),_1e1976730_Range16(1872LLU,1919LLU,1LLU),_1e1976730_Range16(2160LLU,2190LLU,1LLU),_1e1976730_Range16(2192LLU,2193LLU,1LLU),_1e1976730_Range16(2200LLU,2273LLU,1LLU),_1e1976730_Range16(2275LLU,2303LLU,1LLU),_1e1976730_Range16(64336LLU,64450LLU,1LLU),_1e1976730_Range16(64467LLU,64829LLU,1LLU),_1e1976730_Range16(64832LLU,64911LLU,1LLU),_1e1976730_Range16(64914LLU,64967LLU,1LLU),_1e1976730_Range16(64975LLU,65008LLU,33LLU),_1e1976730_Range16(65009LLU,65023LLU,1LLU),_1e1976730_Range16(65136LLU,65140LLU,1LLU),_1e1976730_Range16(65142LLU,65276LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69216LLU,69246LLU,1LLU),_1e1976730_Range32(69373LLU,69375LLU,1LLU),_1e1976730_Range32(126464LLU,126467LLU,1LLU),_1e1976730_Range32(126469LLU,126495LLU,1LLU),_1e1976730_Range32(126497LLU,126498LLU,1LLU),_1e1976730_Range32(126500LLU,126503LLU,3LLU),_1e1976730_Range32(126505LLU,126514LLU,1LLU),_1e1976730_Range32(126516LLU,126519LLU,1LLU),_1e1976730_Range32(126521LLU,126523LLU,2LLU),_1e1976730_Range32(126530LLU,126535LLU,5LLU),_1e1976730_Range32(126537LLU,126541LLU,2LLU),_1e1976730_Range32(126542LLU,126543LLU,1LLU),_1e1976730_Range32(126545LLU,126546LLU,1LLU),_1e1976730_Range32(126548LLU,126551LLU,3LLU),_1e1976730_Range32(126553LLU,126561LLU,2LLU),_1e1976730_Range32(126562LLU,126564LLU,2LLU),_1e1976730_Range32(126567LLU,126570LLU,1LLU),_1e1976730_Range32(126572LLU,126578LLU,1LLU),_1e1976730_Range32(126580LLU,126583LLU,1LLU),_1e1976730_Range32(126585LLU,126588LLU,1LLU),_1e1976730_Range32(126590LLU,126592LLU,2LLU),_1e1976730_Range32(126593LLU,126601LLU,1LLU),_1e1976730_Range32(126603LLU,126619LLU,1LLU),_1e1976730_Range32(126625LLU,126627LLU,1LLU),_1e1976730_Range32(126629LLU,126633LLU,1LLU),_1e1976730_Range32(126635LLU,126651LLU,1LLU),_1e1976730_Range32(126704LLU,126705LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ARMENIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(1329LLU,1366LLU,1LLU),_1e1976730_Range16(1369LLU,1418LLU,1LLU),_1e1976730_Range16(1421LLU,1423LLU,1LLU),_1e1976730_Range16(64275LLU,64279LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__AVESTAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68352LLU,68405LLU,1LLU),_1e1976730_Range32(68409LLU,68415LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__BALINESE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(6912LLU,6988LLU,1LLU),_1e1976730_Range16(6992LLU,7038LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__BAMUM = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(42656LLU,42743LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(92160LLU,92728LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__BASSA_VAH = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(92880LLU,92909LLU,1LLU),_1e1976730_Range32(92912LLU,92917LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__BATAK = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(7104LLU,7155LLU,1LLU),_1e1976730_Range16(7164LLU,7167LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__BENGALI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(2432LLU,2435LLU,1LLU),_1e1976730_Range16(2437LLU,2444LLU,1LLU),_1e1976730_Range16(2447LLU,2448LLU,1LLU),_1e1976730_Range16(2451LLU,2472LLU,1LLU),_1e1976730_Range16(2474LLU,2480LLU,1LLU),_1e1976730_Range16(2482LLU,2486LLU,4LLU),_1e1976730_Range16(2487LLU,2489LLU,1LLU),_1e1976730_Range16(2492LLU,2500LLU,1LLU),_1e1976730_Range16(2503LLU,2504LLU,1LLU),_1e1976730_Range16(2507LLU,2510LLU,1LLU),_1e1976730_Range16(2519LLU,2524LLU,5LLU),_1e1976730_Range16(2525LLU,2527LLU,2LLU),_1e1976730_Range16(2528LLU,2531LLU,1LLU),_1e1976730_Range16(2534LLU,2558LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__BHAIKSUKI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(72704LLU,72712LLU,1LLU),_1e1976730_Range32(72714LLU,72758LLU,1LLU),_1e1976730_Range32(72760LLU,72773LLU,1LLU),_1e1976730_Range32(72784LLU,72812LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__BOPOMOFO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(746LLU,747LLU,1LLU),_1e1976730_Range16(12549LLU,12591LLU,1LLU),_1e1976730_Range16(12704LLU,12735LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__BRAHMI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69632LLU,69709LLU,1LLU),_1e1976730_Range32(69714LLU,69749LLU,1LLU),_1e1976730_Range32(69759LLU,69759LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__BRAILLE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(10240LLU,10495LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__BUGINESE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(6656LLU,6683LLU,1LLU),_1e1976730_Range16(6686LLU,6687LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__BUHID = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(5952LLU,5971LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CANADIAN_ABORIGINAL = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(5120LLU,5759LLU,1LLU),_1e1976730_Range16(6320LLU,6389LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(72368LLU,72383LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CARIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66208LLU,66256LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CAUCASIAN_ALBANIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66864LLU,66915LLU,1LLU),_1e1976730_Range32(66927LLU,66927LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CHAKMA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69888LLU,69940LLU,1LLU),_1e1976730_Range32(69942LLU,69959LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CHAM = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(43520LLU,43574LLU,1LLU),_1e1976730_Range16(43584LLU,43597LLU,1LLU),_1e1976730_Range16(43600LLU,43609LLU,1LLU),_1e1976730_Range16(43612LLU,43615LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CHEROKEE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(5024LLU,5109LLU,1LLU),_1e1976730_Range16(5112LLU,5117LLU,1LLU),_1e1976730_Range16(43888LLU,43967LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CHORASMIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69552LLU,69579LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__COMMON = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(0LLU,64LLU,1LLU),_1e1976730_Range16(91LLU,96LLU,1LLU),_1e1976730_Range16(123LLU,169LLU,1LLU),_1e1976730_Range16(171LLU,185LLU,1LLU),_1e1976730_Range16(187LLU,191LLU,1LLU),_1e1976730_Range16(215LLU,247LLU,32LLU),_1e1976730_Range16(697LLU,735LLU,1LLU),_1e1976730_Range16(741LLU,745LLU,1LLU),_1e1976730_Range16(748LLU,767LLU,1LLU),_1e1976730_Range16(884LLU,894LLU,10LLU),_1e1976730_Range16(901LLU,903LLU,2LLU),_1e1976730_Range16(1541LLU,1548LLU,7LLU),_1e1976730_Range16(1563LLU,1567LLU,4LLU),_1e1976730_Range16(1600LLU,1757LLU,157LLU),_1e1976730_Range16(2274LLU,2404LLU,130LLU),_1e1976730_Range16(2405LLU,3647LLU,1242LLU),_1e1976730_Range16(4053LLU,4056LLU,1LLU),_1e1976730_Range16(4347LLU,5867LLU,1520LLU),_1e1976730_Range16(5868LLU,5869LLU,1LLU),_1e1976730_Range16(5941LLU,5942LLU,1LLU),_1e1976730_Range16(6146LLU,6147LLU,1LLU),_1e1976730_Range16(6149LLU,7379LLU,1230LLU),_1e1976730_Range16(7393LLU,7401LLU,8LLU),_1e1976730_Range16(7402LLU,7404LLU,1LLU),_1e1976730_Range16(7406LLU,7411LLU,1LLU),_1e1976730_Range16(7413LLU,7415LLU,1LLU),_1e1976730_Range16(7418LLU,8192LLU,774LLU),_1e1976730_Range16(8193LLU,8203LLU,1LLU),_1e1976730_Range16(8206LLU,8292LLU,1LLU),_1e1976730_Range16(8294LLU,8304LLU,1LLU),_1e1976730_Range16(8308LLU,8318LLU,1LLU),_1e1976730_Range16(8320LLU,8334LLU,1LLU),_1e1976730_Range16(8352LLU,8384LLU,1LLU),_1e1976730_Range16(8448LLU,8485LLU,1LLU),_1e1976730_Range16(8487LLU,8489LLU,1LLU),_1e1976730_Range16(8492LLU,8497LLU,1LLU),_1e1976730_Range16(8499LLU,8525LLU,1LLU),_1e1976730_Range16(8527LLU,8543LLU,1LLU),_1e1976730_Range16(8585LLU,8587LLU,1LLU),_1e1976730_Range16(8592LLU,9254LLU,1LLU),_1e1976730_Range16(9280LLU,9290LLU,1LLU),_1e1976730_Range16(9312LLU,10239LLU,1LLU),_1e1976730_Range16(10496LLU,11123LLU,1LLU),_1e1976730_Range16(11126LLU,11157LLU,1LLU),_1e1976730_Range16(11159LLU,11263LLU,1LLU),_1e1976730_Range16(11776LLU,11869LLU,1LLU),_1e1976730_Range16(12272LLU,12283LLU,1LLU),_1e1976730_Range16(12288LLU,12292LLU,1LLU),_1e1976730_Range16(12294LLU,12296LLU,2LLU),_1e1976730_Range16(12297LLU,12320LLU,1LLU),_1e1976730_Range16(12336LLU,12343LLU,1LLU),_1e1976730_Range16(12348LLU,12351LLU,1LLU),_1e1976730_Range16(12443LLU,12444LLU,1LLU),_1e1976730_Range16(12448LLU,12539LLU,91LLU),_1e1976730_Range16(12540LLU,12688LLU,148LLU),_1e1976730_Range16(12689LLU,12703LLU,1LLU),_1e1976730_Range16(12736LLU,12771LLU,1LLU),_1e1976730_Range16(12832LLU,12895LLU,1LLU),_1e1976730_Range16(12927LLU,13007LLU,1LLU),_1e1976730_Range16(13055LLU,13144LLU,89LLU),_1e1976730_Range16(13145LLU,13311LLU,1LLU),_1e1976730_Range16(19904LLU,19967LLU,1LLU),_1e1976730_Range16(42752LLU,42785LLU,1LLU),_1e1976730_Range16(42888LLU,42890LLU,1LLU),_1e1976730_Range16(43056LLU,43065LLU,1LLU),_1e1976730_Range16(43310LLU,43471LLU,161LLU),_1e1976730_Range16(43867LLU,43882LLU,15LLU),_1e1976730_Range16(43883LLU,64830LLU,20947LLU),_1e1976730_Range16(64831LLU,65040LLU,209LLU),_1e1976730_Range16(65041LLU,65049LLU,1LLU),_1e1976730_Range16(65072LLU,65106LLU,1LLU),_1e1976730_Range16(65108LLU,65126LLU,1LLU),_1e1976730_Range16(65128LLU,65131LLU,1LLU),_1e1976730_Range16(65279LLU,65281LLU,2LLU),_1e1976730_Range16(65282LLU,65312LLU,1LLU),_1e1976730_Range16(65339LLU,65344LLU,1LLU),_1e1976730_Range16(65371LLU,65381LLU,1LLU),_1e1976730_Range16(65392LLU,65438LLU,46LLU),_1e1976730_Range16(65439LLU,65504LLU,65LLU),_1e1976730_Range16(65505LLU,65510LLU,1LLU),_1e1976730_Range16(65512LLU,65518LLU,1LLU),_1e1976730_Range16(65529LLU,65533LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(65792LLU,65794LLU,1LLU),_1e1976730_Range32(65799LLU,65843LLU,1LLU),_1e1976730_Range32(65847LLU,65855LLU,1LLU),_1e1976730_Range32(65936LLU,65948LLU,1LLU),_1e1976730_Range32(66000LLU,66044LLU,1LLU),_1e1976730_Range32(66273LLU,66299LLU,1LLU),_1e1976730_Range32(113824LLU,113827LLU,1LLU),_1e1976730_Range32(118608LLU,118723LLU,1LLU),_1e1976730_Range32(118784LLU,119029LLU,1LLU),_1e1976730_Range32(119040LLU,119078LLU,1LLU),_1e1976730_Range32(119081LLU,119142LLU,1LLU),_1e1976730_Range32(119146LLU,119162LLU,1LLU),_1e1976730_Range32(119171LLU,119172LLU,1LLU),_1e1976730_Range32(119180LLU,119209LLU,1LLU),_1e1976730_Range32(119214LLU,119274LLU,1LLU),_1e1976730_Range32(119488LLU,119507LLU,1LLU),_1e1976730_Range32(119520LLU,119539LLU,1LLU),_1e1976730_Range32(119552LLU,119638LLU,1LLU),_1e1976730_Range32(119648LLU,119672LLU,1LLU),_1e1976730_Range32(119808LLU,119892LLU,1LLU),_1e1976730_Range32(119894LLU,119964LLU,1LLU),_1e1976730_Range32(119966LLU,119967LLU,1LLU),_1e1976730_Range32(119970LLU,119973LLU,3LLU),_1e1976730_Range32(119974LLU,119977LLU,3LLU),_1e1976730_Range32(119978LLU,119980LLU,1LLU),_1e1976730_Range32(119982LLU,119993LLU,1LLU),_1e1976730_Range32(119995LLU,119997LLU,2LLU),_1e1976730_Range32(119998LLU,120003LLU,1LLU),_1e1976730_Range32(120005LLU,120069LLU,1LLU),_1e1976730_Range32(120071LLU,120074LLU,1LLU),_1e1976730_Range32(120077LLU,120084LLU,1LLU),_1e1976730_Range32(120086LLU,120092LLU,1LLU),_1e1976730_Range32(120094LLU,120121LLU,1LLU),_1e1976730_Range32(120123LLU,120126LLU,1LLU),_1e1976730_Range32(120128LLU,120132LLU,1LLU),_1e1976730_Range32(120134LLU,120138LLU,4LLU),_1e1976730_Range32(120139LLU,120144LLU,1LLU),_1e1976730_Range32(120146LLU,120485LLU,1LLU),_1e1976730_Range32(120488LLU,120779LLU,1LLU),_1e1976730_Range32(120782LLU,120831LLU,1LLU),_1e1976730_Range32(126065LLU,126132LLU,1LLU),_1e1976730_Range32(126209LLU,126269LLU,1LLU),_1e1976730_Range32(126976LLU,127019LLU,1LLU),_1e1976730_Range32(127024LLU,127123LLU,1LLU),_1e1976730_Range32(127136LLU,127150LLU,1LLU),_1e1976730_Range32(127153LLU,127167LLU,1LLU),_1e1976730_Range32(127169LLU,127183LLU,1LLU),_1e1976730_Range32(127185LLU,127221LLU,1LLU),_1e1976730_Range32(127232LLU,127405LLU,1LLU),_1e1976730_Range32(127462LLU,127487LLU,1LLU),_1e1976730_Range32(127489LLU,127490LLU,1LLU),_1e1976730_Range32(127504LLU,127547LLU,1LLU),_1e1976730_Range32(127552LLU,127560LLU,1LLU),_1e1976730_Range32(127568LLU,127569LLU,1LLU),_1e1976730_Range32(127584LLU,127589LLU,1LLU),_1e1976730_Range32(127744LLU,128727LLU,1LLU),_1e1976730_Range32(128732LLU,128748LLU,1LLU),_1e1976730_Range32(128752LLU,128764LLU,1LLU),_1e1976730_Range32(128768LLU,128886LLU,1LLU),_1e1976730_Range32(128891LLU,128985LLU,1LLU),_1e1976730_Range32(128992LLU,129003LLU,1LLU),_1e1976730_Range32(129008LLU,129024LLU,16LLU),_1e1976730_Range32(129025LLU,129035LLU,1LLU),_1e1976730_Range32(129040LLU,129095LLU,1LLU),_1e1976730_Range32(129104LLU,129113LLU,1LLU),_1e1976730_Range32(129120LLU,129159LLU,1LLU),_1e1976730_Range32(129168LLU,129197LLU,1LLU),_1e1976730_Range32(129200LLU,129201LLU,1LLU),_1e1976730_Range32(129280LLU,129619LLU,1LLU),_1e1976730_Range32(129632LLU,129645LLU,1LLU),_1e1976730_Range32(129648LLU,129660LLU,1LLU),_1e1976730_Range32(129664LLU,129672LLU,1LLU),_1e1976730_Range32(129680LLU,129725LLU,1LLU),_1e1976730_Range32(129727LLU,129733LLU,1LLU),_1e1976730_Range32(129742LLU,129755LLU,1LLU),_1e1976730_Range32(129760LLU,129768LLU,1LLU),_1e1976730_Range32(129776LLU,129784LLU,1LLU),_1e1976730_Range32(129792LLU,129938LLU,1LLU),_1e1976730_Range32(129940LLU,129994LLU,1LLU),_1e1976730_Range32(130032LLU,130041LLU,1LLU),_1e1976730_Range32(917505LLU,917536LLU,31LLU),_1e1976730_Range32(917537LLU,917631LLU,1LLU)}),6LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__COPTIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(994LLU,1007LLU,1LLU),_1e1976730_Range16(11392LLU,11507LLU,1LLU),_1e1976730_Range16(11513LLU,11519LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CUNEIFORM = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(73728LLU,74649LLU,1LLU),_1e1976730_Range32(74752LLU,74862LLU,1LLU),_1e1976730_Range32(74864LLU,74868LLU,1LLU),_1e1976730_Range32(74880LLU,75075LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CYPRIOT = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67584LLU,67589LLU,1LLU),_1e1976730_Range32(67592LLU,67594LLU,2LLU),_1e1976730_Range32(67595LLU,67637LLU,1LLU),_1e1976730_Range32(67639LLU,67640LLU,1LLU),_1e1976730_Range32(67644LLU,67647LLU,3LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CYPRO_MINOAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(77712LLU,77810LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__CYRILLIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(1024LLU,1156LLU,1LLU),_1e1976730_Range16(1159LLU,1327LLU,1LLU),_1e1976730_Range16(7296LLU,7304LLU,1LLU),_1e1976730_Range16(7467LLU,7544LLU,77LLU),_1e1976730_Range16(11744LLU,11775LLU,1LLU),_1e1976730_Range16(42560LLU,42655LLU,1LLU),_1e1976730_Range16(65070LLU,65071LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(122928LLU,122989LLU,1LLU),_1e1976730_Range32(123023LLU,123023LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__DESERET = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66560LLU,66639LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__DEVANAGARI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(2304LLU,2384LLU,1LLU),_1e1976730_Range16(2389LLU,2403LLU,1LLU),_1e1976730_Range16(2406LLU,2431LLU,1LLU),_1e1976730_Range16(43232LLU,43263LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(72448LLU,72457LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__DIVES_AKURU = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(71936LLU,71942LLU,1LLU),_1e1976730_Range32(71945LLU,71948LLU,3LLU),_1e1976730_Range32(71949LLU,71955LLU,1LLU),_1e1976730_Range32(71957LLU,71958LLU,1LLU),_1e1976730_Range32(71960LLU,71989LLU,1LLU),_1e1976730_Range32(71991LLU,71992LLU,1LLU),_1e1976730_Range32(71995LLU,72006LLU,1LLU),_1e1976730_Range32(72016LLU,72025LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__DOGRA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(71680LLU,71739LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__DUPLOYAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(113664LLU,113770LLU,1LLU),_1e1976730_Range32(113776LLU,113788LLU,1LLU),_1e1976730_Range32(113792LLU,113800LLU,1LLU),_1e1976730_Range32(113808LLU,113817LLU,1LLU),_1e1976730_Range32(113820LLU,113823LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__EGYPTIAN_HIEROGLYPHS = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(77824LLU,78933LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ELBASAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66816LLU,66855LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ELYMAIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69600LLU,69622LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ETHIOPIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(4608LLU,4680LLU,1LLU),_1e1976730_Range16(4682LLU,4685LLU,1LLU),_1e1976730_Range16(4688LLU,4694LLU,1LLU),_1e1976730_Range16(4696LLU,4698LLU,2LLU),_1e1976730_Range16(4699LLU,4701LLU,1LLU),_1e1976730_Range16(4704LLU,4744LLU,1LLU),_1e1976730_Range16(4746LLU,4749LLU,1LLU),_1e1976730_Range16(4752LLU,4784LLU,1LLU),_1e1976730_Range16(4786LLU,4789LLU,1LLU),_1e1976730_Range16(4792LLU,4798LLU,1LLU),_1e1976730_Range16(4800LLU,4802LLU,2LLU),_1e1976730_Range16(4803LLU,4805LLU,1LLU),_1e1976730_Range16(4808LLU,4822LLU,1LLU),_1e1976730_Range16(4824LLU,4880LLU,1LLU),_1e1976730_Range16(4882LLU,4885LLU,1LLU),_1e1976730_Range16(4888LLU,4954LLU,1LLU),_1e1976730_Range16(4957LLU,4988LLU,1LLU),_1e1976730_Range16(4992LLU,5017LLU,1LLU),_1e1976730_Range16(11648LLU,11670LLU,1LLU),_1e1976730_Range16(11680LLU,11686LLU,1LLU),_1e1976730_Range16(11688LLU,11694LLU,1LLU),_1e1976730_Range16(11696LLU,11702LLU,1LLU),_1e1976730_Range16(11704LLU,11710LLU,1LLU),_1e1976730_Range16(11712LLU,11718LLU,1LLU),_1e1976730_Range16(11720LLU,11726LLU,1LLU),_1e1976730_Range16(11728LLU,11734LLU,1LLU),_1e1976730_Range16(11736LLU,11742LLU,1LLU),_1e1976730_Range16(43777LLU,43782LLU,1LLU),_1e1976730_Range16(43785LLU,43790LLU,1LLU),_1e1976730_Range16(43793LLU,43798LLU,1LLU),_1e1976730_Range16(43808LLU,43814LLU,1LLU),_1e1976730_Range16(43816LLU,43822LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(124896LLU,124902LLU,1LLU),_1e1976730_Range32(124904LLU,124907LLU,1LLU),_1e1976730_Range32(124909LLU,124910LLU,1LLU),_1e1976730_Range32(124912LLU,124926LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__GEORGIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(4256LLU,4293LLU,1LLU),_1e1976730_Range16(4295LLU,4301LLU,6LLU),_1e1976730_Range16(4304LLU,4346LLU,1LLU),_1e1976730_Range16(4348LLU,4351LLU,1LLU),_1e1976730_Range16(7312LLU,7354LLU,1LLU),_1e1976730_Range16(7357LLU,7359LLU,1LLU),_1e1976730_Range16(11520LLU,11557LLU,1LLU),_1e1976730_Range16(11559LLU,11565LLU,6LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__GLAGOLITIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(11264LLU,11359LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(122880LLU,122886LLU,1LLU),_1e1976730_Range32(122888LLU,122904LLU,1LLU),_1e1976730_Range32(122907LLU,122913LLU,1LLU),_1e1976730_Range32(122915LLU,122916LLU,1LLU),_1e1976730_Range32(122918LLU,122922LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__GOTHIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66352LLU,66378LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__GRANTHA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(70400LLU,70403LLU,1LLU),_1e1976730_Range32(70405LLU,70412LLU,1LLU),_1e1976730_Range32(70415LLU,70416LLU,1LLU),_1e1976730_Range32(70419LLU,70440LLU,1LLU),_1e1976730_Range32(70442LLU,70448LLU,1LLU),_1e1976730_Range32(70450LLU,70451LLU,1LLU),_1e1976730_Range32(70453LLU,70457LLU,1LLU),_1e1976730_Range32(70460LLU,70468LLU,1LLU),_1e1976730_Range32(70471LLU,70472LLU,1LLU),_1e1976730_Range32(70475LLU,70477LLU,1LLU),_1e1976730_Range32(70480LLU,70487LLU,7LLU),_1e1976730_Range32(70493LLU,70499LLU,1LLU),_1e1976730_Range32(70502LLU,70508LLU,1LLU),_1e1976730_Range32(70512LLU,70516LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__GREEK = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(880LLU,883LLU,1LLU),_1e1976730_Range16(885LLU,887LLU,1LLU),_1e1976730_Range16(890LLU,893LLU,1LLU),_1e1976730_Range16(895LLU,900LLU,5LLU),_1e1976730_Range16(902LLU,904LLU,2LLU),_1e1976730_Range16(905LLU,906LLU,1LLU),_1e1976730_Range16(908LLU,910LLU,2LLU),_1e1976730_Range16(911LLU,929LLU,1LLU),_1e1976730_Range16(931LLU,993LLU,1LLU),_1e1976730_Range16(1008LLU,1023LLU,1LLU),_1e1976730_Range16(7462LLU,7466LLU,1LLU),_1e1976730_Range16(7517LLU,7521LLU,1LLU),_1e1976730_Range16(7526LLU,7530LLU,1LLU),_1e1976730_Range16(7615LLU,7936LLU,321LLU),_1e1976730_Range16(7937LLU,7957LLU,1LLU),_1e1976730_Range16(7960LLU,7965LLU,1LLU),_1e1976730_Range16(7968LLU,8005LLU,1LLU),_1e1976730_Range16(8008LLU,8013LLU,1LLU),_1e1976730_Range16(8016LLU,8023LLU,1LLU),_1e1976730_Range16(8025LLU,8031LLU,2LLU),_1e1976730_Range16(8032LLU,8061LLU,1LLU),_1e1976730_Range16(8064LLU,8116LLU,1LLU),_1e1976730_Range16(8118LLU,8132LLU,1LLU),_1e1976730_Range16(8134LLU,8147LLU,1LLU),_1e1976730_Range16(8150LLU,8155LLU,1LLU),_1e1976730_Range16(8157LLU,8175LLU,1LLU),_1e1976730_Range16(8178LLU,8180LLU,1LLU),_1e1976730_Range16(8182LLU,8190LLU,1LLU),_1e1976730_Range16(8486LLU,43877LLU,35391LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(65856LLU,65934LLU,1LLU),_1e1976730_Range32(65952LLU,119296LLU,53344LLU),_1e1976730_Range32(119297LLU,119365LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__GUJARATI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(2689LLU,2691LLU,1LLU),_1e1976730_Range16(2693LLU,2701LLU,1LLU),_1e1976730_Range16(2703LLU,2705LLU,1LLU),_1e1976730_Range16(2707LLU,2728LLU,1LLU),_1e1976730_Range16(2730LLU,2736LLU,1LLU),_1e1976730_Range16(2738LLU,2739LLU,1LLU),_1e1976730_Range16(2741LLU,2745LLU,1LLU),_1e1976730_Range16(2748LLU,2757LLU,1LLU),_1e1976730_Range16(2759LLU,2761LLU,1LLU),_1e1976730_Range16(2763LLU,2765LLU,1LLU),_1e1976730_Range16(2768LLU,2784LLU,16LLU),_1e1976730_Range16(2785LLU,2787LLU,1LLU),_1e1976730_Range16(2790LLU,2801LLU,1LLU),_1e1976730_Range16(2809LLU,2815LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__GUNJALA_GONDI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(73056LLU,73061LLU,1LLU),_1e1976730_Range32(73063LLU,73064LLU,1LLU),_1e1976730_Range32(73066LLU,73102LLU,1LLU),_1e1976730_Range32(73104LLU,73105LLU,1LLU),_1e1976730_Range32(73107LLU,73112LLU,1LLU),_1e1976730_Range32(73120LLU,73129LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__GURMUKHI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(2561LLU,2563LLU,1LLU),_1e1976730_Range16(2565LLU,2570LLU,1LLU),_1e1976730_Range16(2575LLU,2576LLU,1LLU),_1e1976730_Range16(2579LLU,2600LLU,1LLU),_1e1976730_Range16(2602LLU,2608LLU,1LLU),_1e1976730_Range16(2610LLU,2611LLU,1LLU),_1e1976730_Range16(2613LLU,2614LLU,1LLU),_1e1976730_Range16(2616LLU,2617LLU,1LLU),_1e1976730_Range16(2620LLU,2622LLU,2LLU),_1e1976730_Range16(2623LLU,2626LLU,1LLU),_1e1976730_Range16(2631LLU,2632LLU,1LLU),_1e1976730_Range16(2635LLU,2637LLU,1LLU),_1e1976730_Range16(2641LLU,2649LLU,8LLU),_1e1976730_Range16(2650LLU,2652LLU,1LLU),_1e1976730_Range16(2654LLU,2662LLU,8LLU),_1e1976730_Range16(2663LLU,2678LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__HAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(11904LLU,11929LLU,1LLU),_1e1976730_Range16(11931LLU,12019LLU,1LLU),_1e1976730_Range16(12032LLU,12245LLU,1LLU),_1e1976730_Range16(12293LLU,12295LLU,2LLU),_1e1976730_Range16(12321LLU,12329LLU,1LLU),_1e1976730_Range16(12344LLU,12347LLU,1LLU),_1e1976730_Range16(13312LLU,19903LLU,1LLU),_1e1976730_Range16(19968LLU,40959LLU,1LLU),_1e1976730_Range16(63744LLU,64109LLU,1LLU),_1e1976730_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(94178LLU,94179LLU,1LLU),_1e1976730_Range32(94192LLU,94193LLU,1LLU),_1e1976730_Range32(131072LLU,173791LLU,1LLU),_1e1976730_Range32(173824LLU,177977LLU,1LLU),_1e1976730_Range32(177984LLU,178205LLU,1LLU),_1e1976730_Range32(178208LLU,183969LLU,1LLU),_1e1976730_Range32(183984LLU,191456LLU,1LLU),_1e1976730_Range32(194560LLU,195101LLU,1LLU),_1e1976730_Range32(196608LLU,201546LLU,1LLU),_1e1976730_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__HANGUL = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(4352LLU,4607LLU,1LLU),_1e1976730_Range16(12334LLU,12335LLU,1LLU),_1e1976730_Range16(12593LLU,12686LLU,1LLU),_1e1976730_Range16(12800LLU,12830LLU,1LLU),_1e1976730_Range16(12896LLU,12926LLU,1LLU),_1e1976730_Range16(43360LLU,43388LLU,1LLU),_1e1976730_Range16(44032LLU,55203LLU,1LLU),_1e1976730_Range16(55216LLU,55238LLU,1LLU),_1e1976730_Range16(55243LLU,55291LLU,1LLU),_1e1976730_Range16(65440LLU,65470LLU,1LLU),_1e1976730_Range16(65474LLU,65479LLU,1LLU),_1e1976730_Range16(65482LLU,65487LLU,1LLU),_1e1976730_Range16(65490LLU,65495LLU,1LLU),_1e1976730_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__HANIFI_ROHINGYA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68864LLU,68903LLU,1LLU),_1e1976730_Range32(68912LLU,68921LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__HANUNOO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(5920LLU,5940LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__HATRAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67808LLU,67826LLU,1LLU),_1e1976730_Range32(67828LLU,67829LLU,1LLU),_1e1976730_Range32(67835LLU,67839LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__HEBREW = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(1425LLU,1479LLU,1LLU),_1e1976730_Range16(1488LLU,1514LLU,1LLU),_1e1976730_Range16(1519LLU,1524LLU,1LLU),_1e1976730_Range16(64285LLU,64310LLU,1LLU),_1e1976730_Range16(64312LLU,64316LLU,1LLU),_1e1976730_Range16(64318LLU,64320LLU,2LLU),_1e1976730_Range16(64321LLU,64323LLU,2LLU),_1e1976730_Range16(64324LLU,64326LLU,2LLU),_1e1976730_Range16(64327LLU,64335LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__HIRAGANA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(12353LLU,12438LLU,1LLU),_1e1976730_Range16(12445LLU,12447LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(110593LLU,110879LLU,1LLU),_1e1976730_Range32(110898LLU,110928LLU,30LLU),_1e1976730_Range32(110929LLU,110930LLU,1LLU),_1e1976730_Range32(127488LLU,127488LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__IMPERIAL_ARAMAIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67648LLU,67669LLU,1LLU),_1e1976730_Range32(67671LLU,67679LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__INHERITED = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(768LLU,879LLU,1LLU),_1e1976730_Range16(1157LLU,1158LLU,1LLU),_1e1976730_Range16(1611LLU,1621LLU,1LLU),_1e1976730_Range16(1648LLU,2385LLU,737LLU),_1e1976730_Range16(2386LLU,2388LLU,1LLU),_1e1976730_Range16(6832LLU,6862LLU,1LLU),_1e1976730_Range16(7376LLU,7378LLU,1LLU),_1e1976730_Range16(7380LLU,7392LLU,1LLU),_1e1976730_Range16(7394LLU,7400LLU,1LLU),_1e1976730_Range16(7405LLU,7412LLU,7LLU),_1e1976730_Range16(7416LLU,7417LLU,1LLU),_1e1976730_Range16(7616LLU,7679LLU,1LLU),_1e1976730_Range16(8204LLU,8205LLU,1LLU),_1e1976730_Range16(8400LLU,8432LLU,1LLU),_1e1976730_Range16(12330LLU,12333LLU,1LLU),_1e1976730_Range16(12441LLU,12442LLU,1LLU),_1e1976730_Range16(65024LLU,65039LLU,1LLU),_1e1976730_Range16(65056LLU,65069LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66045LLU,66272LLU,227LLU),_1e1976730_Range32(70459LLU,118528LLU,48069LLU),_1e1976730_Range32(118529LLU,118573LLU,1LLU),_1e1976730_Range32(118576LLU,118598LLU,1LLU),_1e1976730_Range32(119143LLU,119145LLU,1LLU),_1e1976730_Range32(119163LLU,119170LLU,1LLU),_1e1976730_Range32(119173LLU,119179LLU,1LLU),_1e1976730_Range32(119210LLU,119213LLU,1LLU),_1e1976730_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__INSCRIPTIONAL_PAHLAVI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68448LLU,68466LLU,1LLU),_1e1976730_Range32(68472LLU,68479LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__INSCRIPTIONAL_PARTHIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68416LLU,68437LLU,1LLU),_1e1976730_Range32(68440LLU,68447LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__JAVANESE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(43392LLU,43469LLU,1LLU),_1e1976730_Range16(43472LLU,43481LLU,1LLU),_1e1976730_Range16(43486LLU,43487LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__KAITHI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69760LLU,69826LLU,1LLU),_1e1976730_Range32(69837LLU,69837LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__KANNADA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(3200LLU,3212LLU,1LLU),_1e1976730_Range16(3214LLU,3216LLU,1LLU),_1e1976730_Range16(3218LLU,3240LLU,1LLU),_1e1976730_Range16(3242LLU,3251LLU,1LLU),_1e1976730_Range16(3253LLU,3257LLU,1LLU),_1e1976730_Range16(3260LLU,3268LLU,1LLU),_1e1976730_Range16(3270LLU,3272LLU,1LLU),_1e1976730_Range16(3274LLU,3277LLU,1LLU),_1e1976730_Range16(3285LLU,3286LLU,1LLU),_1e1976730_Range16(3293LLU,3294LLU,1LLU),_1e1976730_Range16(3296LLU,3299LLU,1LLU),_1e1976730_Range16(3302LLU,3311LLU,1LLU),_1e1976730_Range16(3313LLU,3315LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__KATAKANA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(12449LLU,12538LLU,1LLU),_1e1976730_Range16(12541LLU,12543LLU,1LLU),_1e1976730_Range16(12784LLU,12799LLU,1LLU),_1e1976730_Range16(13008LLU,13054LLU,1LLU),_1e1976730_Range16(13056LLU,13143LLU,1LLU),_1e1976730_Range16(65382LLU,65391LLU,1LLU),_1e1976730_Range16(65393LLU,65437LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(110576LLU,110579LLU,1LLU),_1e1976730_Range32(110581LLU,110587LLU,1LLU),_1e1976730_Range32(110589LLU,110590LLU,1LLU),_1e1976730_Range32(110592LLU,110880LLU,288LLU),_1e1976730_Range32(110881LLU,110882LLU,1LLU),_1e1976730_Range32(110933LLU,110948LLU,15LLU),_1e1976730_Range32(110949LLU,110951LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__KAWI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(73472LLU,73488LLU,1LLU),_1e1976730_Range32(73490LLU,73530LLU,1LLU),_1e1976730_Range32(73534LLU,73561LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__KAYAH_LI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(43264LLU,43309LLU,1LLU),_1e1976730_Range16(43311LLU,43311LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__KHAROSHTHI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68096LLU,68099LLU,1LLU),_1e1976730_Range32(68101LLU,68102LLU,1LLU),_1e1976730_Range32(68108LLU,68115LLU,1LLU),_1e1976730_Range32(68117LLU,68119LLU,1LLU),_1e1976730_Range32(68121LLU,68149LLU,1LLU),_1e1976730_Range32(68152LLU,68154LLU,1LLU),_1e1976730_Range32(68159LLU,68168LLU,1LLU),_1e1976730_Range32(68176LLU,68184LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__KHITAN_SMALL_SCRIPT = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(94180LLU,101120LLU,6940LLU),_1e1976730_Range32(101121LLU,101589LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__KHMER = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(6016LLU,6109LLU,1LLU),_1e1976730_Range16(6112LLU,6121LLU,1LLU),_1e1976730_Range16(6128LLU,6137LLU,1LLU),_1e1976730_Range16(6624LLU,6655LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__KHOJKI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(70144LLU,70161LLU,1LLU),_1e1976730_Range32(70163LLU,70209LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__KHUDAWADI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(70320LLU,70378LLU,1LLU),_1e1976730_Range32(70384LLU,70393LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LAO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(3713LLU,3714LLU,1LLU),_1e1976730_Range16(3716LLU,3718LLU,2LLU),_1e1976730_Range16(3719LLU,3722LLU,1LLU),_1e1976730_Range16(3724LLU,3747LLU,1LLU),_1e1976730_Range16(3749LLU,3751LLU,2LLU),_1e1976730_Range16(3752LLU,3773LLU,1LLU),_1e1976730_Range16(3776LLU,3780LLU,1LLU),_1e1976730_Range16(3782LLU,3784LLU,2LLU),_1e1976730_Range16(3785LLU,3790LLU,1LLU),_1e1976730_Range16(3792LLU,3801LLU,1LLU),_1e1976730_Range16(3804LLU,3807LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LATIN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(65LLU,90LLU,1LLU),_1e1976730_Range16(97LLU,122LLU,1LLU),_1e1976730_Range16(170LLU,186LLU,16LLU),_1e1976730_Range16(192LLU,214LLU,1LLU),_1e1976730_Range16(216LLU,246LLU,1LLU),_1e1976730_Range16(248LLU,696LLU,1LLU),_1e1976730_Range16(736LLU,740LLU,1LLU),_1e1976730_Range16(7424LLU,7461LLU,1LLU),_1e1976730_Range16(7468LLU,7516LLU,1LLU),_1e1976730_Range16(7522LLU,7525LLU,1LLU),_1e1976730_Range16(7531LLU,7543LLU,1LLU),_1e1976730_Range16(7545LLU,7614LLU,1LLU),_1e1976730_Range16(7680LLU,7935LLU,1LLU),_1e1976730_Range16(8305LLU,8319LLU,14LLU),_1e1976730_Range16(8336LLU,8348LLU,1LLU),_1e1976730_Range16(8490LLU,8491LLU,1LLU),_1e1976730_Range16(8498LLU,8526LLU,28LLU),_1e1976730_Range16(8544LLU,8584LLU,1LLU),_1e1976730_Range16(11360LLU,11391LLU,1LLU),_1e1976730_Range16(42786LLU,42887LLU,1LLU),_1e1976730_Range16(42891LLU,42954LLU,1LLU),_1e1976730_Range16(42960LLU,42961LLU,1LLU),_1e1976730_Range16(42963LLU,42965LLU,2LLU),_1e1976730_Range16(42966LLU,42969LLU,1LLU),_1e1976730_Range16(42994LLU,43007LLU,1LLU),_1e1976730_Range16(43824LLU,43866LLU,1LLU),_1e1976730_Range16(43868LLU,43876LLU,1LLU),_1e1976730_Range16(43878LLU,43881LLU,1LLU),_1e1976730_Range16(64256LLU,64262LLU,1LLU),_1e1976730_Range16(65313LLU,65338LLU,1LLU),_1e1976730_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67456LLU,67461LLU,1LLU),_1e1976730_Range32(67463LLU,67504LLU,1LLU),_1e1976730_Range32(67506LLU,67514LLU,1LLU),_1e1976730_Range32(122624LLU,122654LLU,1LLU),_1e1976730_Range32(122661LLU,122666LLU,1LLU)}),5LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LEPCHA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(7168LLU,7223LLU,1LLU),_1e1976730_Range16(7227LLU,7241LLU,1LLU),_1e1976730_Range16(7245LLU,7247LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LIMBU = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(6400LLU,6430LLU,1LLU),_1e1976730_Range16(6432LLU,6443LLU,1LLU),_1e1976730_Range16(6448LLU,6459LLU,1LLU),_1e1976730_Range16(6464LLU,6468LLU,4LLU),_1e1976730_Range16(6469LLU,6479LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LINEAR_A = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67072LLU,67382LLU,1LLU),_1e1976730_Range32(67392LLU,67413LLU,1LLU),_1e1976730_Range32(67424LLU,67431LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LINEAR_B = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(65536LLU,65547LLU,1LLU),_1e1976730_Range32(65549LLU,65574LLU,1LLU),_1e1976730_Range32(65576LLU,65594LLU,1LLU),_1e1976730_Range32(65596LLU,65597LLU,1LLU),_1e1976730_Range32(65599LLU,65613LLU,1LLU),_1e1976730_Range32(65616LLU,65629LLU,1LLU),_1e1976730_Range32(65664LLU,65786LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LISU = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(42192LLU,42239LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(73648LLU,73648LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LYCIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66176LLU,66204LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LYDIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67872LLU,67897LLU,1LLU),_1e1976730_Range32(67903LLU,67903LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MAHAJANI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69968LLU,70006LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MAKASAR = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(73440LLU,73464LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MALAYALAM = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(3328LLU,3340LLU,1LLU),_1e1976730_Range16(3342LLU,3344LLU,1LLU),_1e1976730_Range16(3346LLU,3396LLU,1LLU),_1e1976730_Range16(3398LLU,3400LLU,1LLU),_1e1976730_Range16(3402LLU,3407LLU,1LLU),_1e1976730_Range16(3412LLU,3427LLU,1LLU),_1e1976730_Range16(3430LLU,3455LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MANDAIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(2112LLU,2139LLU,1LLU),_1e1976730_Range16(2142LLU,2142LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MANICHAEAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68288LLU,68326LLU,1LLU),_1e1976730_Range32(68331LLU,68342LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MARCHEN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(72816LLU,72847LLU,1LLU),_1e1976730_Range32(72850LLU,72871LLU,1LLU),_1e1976730_Range32(72873LLU,72886LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MASARAM_GONDI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(72960LLU,72966LLU,1LLU),_1e1976730_Range32(72968LLU,72969LLU,1LLU),_1e1976730_Range32(72971LLU,73014LLU,1LLU),_1e1976730_Range32(73018LLU,73020LLU,2LLU),_1e1976730_Range32(73021LLU,73023LLU,2LLU),_1e1976730_Range32(73024LLU,73031LLU,1LLU),_1e1976730_Range32(73040LLU,73049LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MEDEFAIDRIN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(93760LLU,93850LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MEETEI_MAYEK = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(43744LLU,43766LLU,1LLU),_1e1976730_Range16(43968LLU,44013LLU,1LLU),_1e1976730_Range16(44016LLU,44025LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MENDE_KIKAKUI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(124928LLU,125124LLU,1LLU),_1e1976730_Range32(125127LLU,125142LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MEROITIC_CURSIVE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68000LLU,68023LLU,1LLU),_1e1976730_Range32(68028LLU,68047LLU,1LLU),_1e1976730_Range32(68050LLU,68095LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MEROITIC_HIEROGLYPHS = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67968LLU,67999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MIAO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(93952LLU,94026LLU,1LLU),_1e1976730_Range32(94031LLU,94087LLU,1LLU),_1e1976730_Range32(94095LLU,94111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MODI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(71168LLU,71236LLU,1LLU),_1e1976730_Range32(71248LLU,71257LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MONGOLIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(6144LLU,6145LLU,1LLU),_1e1976730_Range16(6148LLU,6150LLU,2LLU),_1e1976730_Range16(6151LLU,6169LLU,1LLU),_1e1976730_Range16(6176LLU,6264LLU,1LLU),_1e1976730_Range16(6272LLU,6314LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(71264LLU,71276LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MRO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(92736LLU,92766LLU,1LLU),_1e1976730_Range32(92768LLU,92777LLU,1LLU),_1e1976730_Range32(92782LLU,92783LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MULTANI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(70272LLU,70278LLU,1LLU),_1e1976730_Range32(70280LLU,70282LLU,2LLU),_1e1976730_Range32(70283LLU,70285LLU,1LLU),_1e1976730_Range32(70287LLU,70301LLU,1LLU),_1e1976730_Range32(70303LLU,70313LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__MYANMAR = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(4096LLU,4255LLU,1LLU),_1e1976730_Range16(43488LLU,43518LLU,1LLU),_1e1976730_Range16(43616LLU,43647LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__NABATAEAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67712LLU,67742LLU,1LLU),_1e1976730_Range32(67751LLU,67759LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__NAG_MUNDARI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(124112LLU,124153LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__NANDINAGARI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(72096LLU,72103LLU,1LLU),_1e1976730_Range32(72106LLU,72151LLU,1LLU),_1e1976730_Range32(72154LLU,72164LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__NEW_TAI_LUE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(6528LLU,6571LLU,1LLU),_1e1976730_Range16(6576LLU,6601LLU,1LLU),_1e1976730_Range16(6608LLU,6618LLU,1LLU),_1e1976730_Range16(6622LLU,6623LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__NEWA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(70656LLU,70747LLU,1LLU),_1e1976730_Range32(70749LLU,70753LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__NKO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(1984LLU,2042LLU,1LLU),_1e1976730_Range16(2045LLU,2047LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__NUSHU = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(94177LLU,110960LLU,16783LLU),_1e1976730_Range32(110961LLU,111355LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__NYIAKENG_PUACHUE_HMONG = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(123136LLU,123180LLU,1LLU),_1e1976730_Range32(123184LLU,123197LLU,1LLU),_1e1976730_Range32(123200LLU,123209LLU,1LLU),_1e1976730_Range32(123214LLU,123215LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OGHAM = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(5760LLU,5788LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OL_CHIKI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(7248LLU,7295LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OLD_HUNGARIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68736LLU,68786LLU,1LLU),_1e1976730_Range32(68800LLU,68850LLU,1LLU),_1e1976730_Range32(68858LLU,68863LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OLD_ITALIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66304LLU,66339LLU,1LLU),_1e1976730_Range32(66349LLU,66351LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OLD_NORTH_ARABIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68224LLU,68255LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OLD_PERMIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66384LLU,66426LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OLD_PERSIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66464LLU,66499LLU,1LLU),_1e1976730_Range32(66504LLU,66517LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OLD_SOGDIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69376LLU,69415LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OLD_SOUTH_ARABIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68192LLU,68223LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OLD_TURKIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68608LLU,68680LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OLD_UYGHUR = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69488LLU,69513LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ORIYA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(2817LLU,2819LLU,1LLU),_1e1976730_Range16(2821LLU,2828LLU,1LLU),_1e1976730_Range16(2831LLU,2832LLU,1LLU),_1e1976730_Range16(2835LLU,2856LLU,1LLU),_1e1976730_Range16(2858LLU,2864LLU,1LLU),_1e1976730_Range16(2866LLU,2867LLU,1LLU),_1e1976730_Range16(2869LLU,2873LLU,1LLU),_1e1976730_Range16(2876LLU,2884LLU,1LLU),_1e1976730_Range16(2887LLU,2888LLU,1LLU),_1e1976730_Range16(2891LLU,2893LLU,1LLU),_1e1976730_Range16(2901LLU,2903LLU,1LLU),_1e1976730_Range16(2908LLU,2909LLU,1LLU),_1e1976730_Range16(2911LLU,2915LLU,1LLU),_1e1976730_Range16(2918LLU,2935LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OSAGE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66736LLU,66771LLU,1LLU),_1e1976730_Range32(66776LLU,66811LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OSMANYA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66688LLU,66717LLU,1LLU),_1e1976730_Range32(66720LLU,66729LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PAHAWH_HMONG = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(92928LLU,92997LLU,1LLU),_1e1976730_Range32(93008LLU,93017LLU,1LLU),_1e1976730_Range32(93019LLU,93025LLU,1LLU),_1e1976730_Range32(93027LLU,93047LLU,1LLU),_1e1976730_Range32(93053LLU,93071LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PALMYRENE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67680LLU,67711LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PAU_CIN_HAU = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(72384LLU,72440LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PHAGS_PA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(43072LLU,43127LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PHOENICIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67840LLU,67867LLU,1LLU),_1e1976730_Range32(67871LLU,67871LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PSALTER_PAHLAVI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68480LLU,68497LLU,1LLU),_1e1976730_Range32(68505LLU,68508LLU,1LLU),_1e1976730_Range32(68521LLU,68527LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__REJANG = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(43312LLU,43347LLU,1LLU),_1e1976730_Range16(43359LLU,43359LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__RUNIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(5792LLU,5866LLU,1LLU),_1e1976730_Range16(5870LLU,5880LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SAMARITAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(2048LLU,2093LLU,1LLU),_1e1976730_Range16(2096LLU,2110LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SAURASHTRA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(43136LLU,43205LLU,1LLU),_1e1976730_Range16(43214LLU,43225LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SHARADA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(70016LLU,70111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SHAVIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66640LLU,66687LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SIDDHAM = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(71040LLU,71093LLU,1LLU),_1e1976730_Range32(71096LLU,71133LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SIGN_WRITING = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(120832LLU,121483LLU,1LLU),_1e1976730_Range32(121499LLU,121503LLU,1LLU),_1e1976730_Range32(121505LLU,121519LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SINHALA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(3457LLU,3459LLU,1LLU),_1e1976730_Range16(3461LLU,3478LLU,1LLU),_1e1976730_Range16(3482LLU,3505LLU,1LLU),_1e1976730_Range16(3507LLU,3515LLU,1LLU),_1e1976730_Range16(3517LLU,3520LLU,3LLU),_1e1976730_Range16(3521LLU,3526LLU,1LLU),_1e1976730_Range16(3530LLU,3535LLU,5LLU),_1e1976730_Range16(3536LLU,3540LLU,1LLU),_1e1976730_Range16(3542LLU,3544LLU,2LLU),_1e1976730_Range16(3545LLU,3551LLU,1LLU),_1e1976730_Range16(3558LLU,3567LLU,1LLU),_1e1976730_Range16(3570LLU,3572LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(70113LLU,70132LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SOGDIAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69424LLU,69465LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SORA_SOMPENG = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69840LLU,69864LLU,1LLU),_1e1976730_Range32(69872LLU,69881LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SOYOMBO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(72272LLU,72354LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SUNDANESE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(7040LLU,7103LLU,1LLU),_1e1976730_Range16(7360LLU,7367LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SYLOTI_NAGRI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(43008LLU,43052LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SYRIAC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(1792LLU,1805LLU,1LLU),_1e1976730_Range16(1807LLU,1866LLU,1LLU),_1e1976730_Range16(1869LLU,1871LLU,1LLU),_1e1976730_Range16(2144LLU,2154LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TAGALOG = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(5888LLU,5909LLU,1LLU),_1e1976730_Range16(5919LLU,5919LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TAGBANWA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(5984LLU,5996LLU,1LLU),_1e1976730_Range16(5998LLU,6000LLU,1LLU),_1e1976730_Range16(6002LLU,6003LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TAI_LE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(6480LLU,6509LLU,1LLU),_1e1976730_Range16(6512LLU,6516LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TAI_THAM = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(6688LLU,6750LLU,1LLU),_1e1976730_Range16(6752LLU,6780LLU,1LLU),_1e1976730_Range16(6783LLU,6793LLU,1LLU),_1e1976730_Range16(6800LLU,6809LLU,1LLU),_1e1976730_Range16(6816LLU,6829LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TAI_VIET = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(43648LLU,43714LLU,1LLU),_1e1976730_Range16(43739LLU,43743LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TAKRI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(71296LLU,71353LLU,1LLU),_1e1976730_Range32(71360LLU,71369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TAMIL = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(2946LLU,2947LLU,1LLU),_1e1976730_Range16(2949LLU,2954LLU,1LLU),_1e1976730_Range16(2958LLU,2960LLU,1LLU),_1e1976730_Range16(2962LLU,2965LLU,1LLU),_1e1976730_Range16(2969LLU,2970LLU,1LLU),_1e1976730_Range16(2972LLU,2974LLU,2LLU),_1e1976730_Range16(2975LLU,2979LLU,4LLU),_1e1976730_Range16(2980LLU,2984LLU,4LLU),_1e1976730_Range16(2985LLU,2986LLU,1LLU),_1e1976730_Range16(2990LLU,3001LLU,1LLU),_1e1976730_Range16(3006LLU,3010LLU,1LLU),_1e1976730_Range16(3014LLU,3016LLU,1LLU),_1e1976730_Range16(3018LLU,3021LLU,1LLU),_1e1976730_Range16(3024LLU,3031LLU,7LLU),_1e1976730_Range16(3046LLU,3066LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(73664LLU,73713LLU,1LLU),_1e1976730_Range32(73727LLU,73727LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TANGSA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(92784LLU,92862LLU,1LLU),_1e1976730_Range32(92864LLU,92873LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TANGUT = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(94176LLU,94208LLU,32LLU),_1e1976730_Range32(94209LLU,100343LLU,1LLU),_1e1976730_Range32(100352LLU,101119LLU,1LLU),_1e1976730_Range32(101632LLU,101640LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TELUGU = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(3072LLU,3084LLU,1LLU),_1e1976730_Range16(3086LLU,3088LLU,1LLU),_1e1976730_Range16(3090LLU,3112LLU,1LLU),_1e1976730_Range16(3114LLU,3129LLU,1LLU),_1e1976730_Range16(3132LLU,3140LLU,1LLU),_1e1976730_Range16(3142LLU,3144LLU,1LLU),_1e1976730_Range16(3146LLU,3149LLU,1LLU),_1e1976730_Range16(3157LLU,3158LLU,1LLU),_1e1976730_Range16(3160LLU,3162LLU,1LLU),_1e1976730_Range16(3165LLU,3168LLU,3LLU),_1e1976730_Range16(3169LLU,3171LLU,1LLU),_1e1976730_Range16(3174LLU,3183LLU,1LLU),_1e1976730_Range16(3191LLU,3199LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__THAANA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(1920LLU,1969LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__THAI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(3585LLU,3642LLU,1LLU),_1e1976730_Range16(3648LLU,3675LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TIBETAN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(3840LLU,3911LLU,1LLU),_1e1976730_Range16(3913LLU,3948LLU,1LLU),_1e1976730_Range16(3953LLU,3991LLU,1LLU),_1e1976730_Range16(3993LLU,4028LLU,1LLU),_1e1976730_Range16(4030LLU,4044LLU,1LLU),_1e1976730_Range16(4046LLU,4052LLU,1LLU),_1e1976730_Range16(4057LLU,4058LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TIFINAGH = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(11568LLU,11623LLU,1LLU),_1e1976730_Range16(11631LLU,11632LLU,1LLU),_1e1976730_Range16(11647LLU,11647LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TIRHUTA = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(70784LLU,70855LLU,1LLU),_1e1976730_Range32(70864LLU,70873LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TOTO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(123536LLU,123566LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__UGARITIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66432LLU,66461LLU,1LLU),_1e1976730_Range32(66463LLU,66463LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__VAI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(42240LLU,42539LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__VITHKUQI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66928LLU,66938LLU,1LLU),_1e1976730_Range32(66940LLU,66954LLU,1LLU),_1e1976730_Range32(66956LLU,66962LLU,1LLU),_1e1976730_Range32(66964LLU,66965LLU,1LLU),_1e1976730_Range32(66967LLU,66977LLU,1LLU),_1e1976730_Range32(66979LLU,66993LLU,1LLU),_1e1976730_Range32(66995LLU,67001LLU,1LLU),_1e1976730_Range32(67003LLU,67004LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__WANCHO = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(123584LLU,123641LLU,1LLU),_1e1976730_Range32(123647LLU,123647LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__WARANG_CITI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(71840LLU,71922LLU,1LLU),_1e1976730_Range32(71935LLU,71935LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__YEZIDI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69248LLU,69289LLU,1LLU),_1e1976730_Range32(69291LLU,69293LLU,1LLU),_1e1976730_Range32(69296LLU,69297LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__YI = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(40960LLU,42124LLU,1LLU),_1e1976730_Range16(42128LLU,42182LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ZANABAZAR_SQUARE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(72192LLU,72263LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__ASCII_HEX_DIGIT = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(48LLU,57LLU,1LLU),_1e1976730_Range16(65LLU,70LLU,1LLU),_1e1976730_Range16(97LLU,102LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),3LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__BIDI_CONTROL = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(1564LLU,8206LLU,6642LLU),_1e1976730_Range16(8207LLU,8234LLU,27LLU),_1e1976730_Range16(8235LLU,8238LLU,1LLU),_1e1976730_Range16(8294LLU,8297LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__DASH = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(45LLU,1418LLU,1373LLU),_1e1976730_Range16(1470LLU,5120LLU,3650LLU),_1e1976730_Range16(6150LLU,8208LLU,2058LLU),_1e1976730_Range16(8209LLU,8213LLU,1LLU),_1e1976730_Range16(8275LLU,8315LLU,40LLU),_1e1976730_Range16(8331LLU,8722LLU,391LLU),_1e1976730_Range16(11799LLU,11802LLU,3LLU),_1e1976730_Range16(11834LLU,11835LLU,1LLU),_1e1976730_Range16(11840LLU,11869LLU,29LLU),_1e1976730_Range16(12316LLU,12336LLU,20LLU),_1e1976730_Range16(12448LLU,65073LLU,52625LLU),_1e1976730_Range16(65074LLU,65112LLU,38LLU),_1e1976730_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__DEPRECATED = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(329LLU,1651LLU,1322LLU),_1e1976730_Range16(3959LLU,3961LLU,2LLU),_1e1976730_Range16(6051LLU,6052LLU,1LLU),_1e1976730_Range16(8298LLU,8303LLU,1LLU),_1e1976730_Range16(9001LLU,9002LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(917505LLU,917505LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__DIACRITIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(94LLU,96LLU,2LLU),_1e1976730_Range16(168LLU,175LLU,7LLU),_1e1976730_Range16(180LLU,183LLU,3LLU),_1e1976730_Range16(184LLU,688LLU,504LLU),_1e1976730_Range16(689LLU,846LLU,1LLU),_1e1976730_Range16(848LLU,855LLU,1LLU),_1e1976730_Range16(861LLU,866LLU,1LLU),_1e1976730_Range16(884LLU,885LLU,1LLU),_1e1976730_Range16(890LLU,900LLU,10LLU),_1e1976730_Range16(901LLU,1155LLU,254LLU),_1e1976730_Range16(1156LLU,1159LLU,1LLU),_1e1976730_Range16(1369LLU,1425LLU,56LLU),_1e1976730_Range16(1426LLU,1441LLU,1LLU),_1e1976730_Range16(1443LLU,1469LLU,1LLU),_1e1976730_Range16(1471LLU,1473LLU,2LLU),_1e1976730_Range16(1474LLU,1476LLU,2LLU),_1e1976730_Range16(1611LLU,1618LLU,1LLU),_1e1976730_Range16(1623LLU,1624LLU,1LLU),_1e1976730_Range16(1759LLU,1760LLU,1LLU),_1e1976730_Range16(1765LLU,1766LLU,1LLU),_1e1976730_Range16(1770LLU,1772LLU,1LLU),_1e1976730_Range16(1840LLU,1866LLU,1LLU),_1e1976730_Range16(1958LLU,1968LLU,1LLU),_1e1976730_Range16(2027LLU,2037LLU,1LLU),_1e1976730_Range16(2072LLU,2073LLU,1LLU),_1e1976730_Range16(2200LLU,2207LLU,1LLU),_1e1976730_Range16(2249LLU,2258LLU,1LLU),_1e1976730_Range16(2275LLU,2302LLU,1LLU),_1e1976730_Range16(2364LLU,2381LLU,17LLU),_1e1976730_Range16(2385LLU,2388LLU,1LLU),_1e1976730_Range16(2417LLU,2492LLU,75LLU),_1e1976730_Range16(2509LLU,2620LLU,111LLU),_1e1976730_Range16(2637LLU,2748LLU,111LLU),_1e1976730_Range16(2765LLU,2813LLU,48LLU),_1e1976730_Range16(2814LLU,2815LLU,1LLU),_1e1976730_Range16(2876LLU,2893LLU,17LLU),_1e1976730_Range16(2901LLU,3021LLU,120LLU),_1e1976730_Range16(3132LLU,3149LLU,17LLU),_1e1976730_Range16(3260LLU,3277LLU,17LLU),_1e1976730_Range16(3387LLU,3388LLU,1LLU),_1e1976730_Range16(3405LLU,3655LLU,125LLU),_1e1976730_Range16(3656LLU,3660LLU,1LLU),_1e1976730_Range16(3662LLU,3770LLU,108LLU),_1e1976730_Range16(3784LLU,3788LLU,1LLU),_1e1976730_Range16(3864LLU,3865LLU,1LLU),_1e1976730_Range16(3893LLU,3897LLU,2LLU),_1e1976730_Range16(3902LLU,3903LLU,1LLU),_1e1976730_Range16(3970LLU,3972LLU,1LLU),_1e1976730_Range16(3974LLU,3975LLU,1LLU),_1e1976730_Range16(4038LLU,4151LLU,113LLU),_1e1976730_Range16(4153LLU,4154LLU,1LLU),_1e1976730_Range16(4195LLU,4196LLU,1LLU),_1e1976730_Range16(4201LLU,4205LLU,1LLU),_1e1976730_Range16(4231LLU,4237LLU,1LLU),_1e1976730_Range16(4239LLU,4250LLU,11LLU),_1e1976730_Range16(4251LLU,4957LLU,706LLU),_1e1976730_Range16(4958LLU,4959LLU,1LLU),_1e1976730_Range16(5908LLU,5909LLU,1LLU),_1e1976730_Range16(6089LLU,6099LLU,1LLU),_1e1976730_Range16(6109LLU,6457LLU,348LLU),_1e1976730_Range16(6458LLU,6459LLU,1LLU),_1e1976730_Range16(6773LLU,6780LLU,1LLU),_1e1976730_Range16(6783LLU,6832LLU,49LLU),_1e1976730_Range16(6833LLU,6846LLU,1LLU),_1e1976730_Range16(6849LLU,6859LLU,1LLU),_1e1976730_Range16(6964LLU,6980LLU,16LLU),_1e1976730_Range16(7019LLU,7027LLU,1LLU),_1e1976730_Range16(7082LLU,7083LLU,1LLU),_1e1976730_Range16(7222LLU,7223LLU,1LLU),_1e1976730_Range16(7288LLU,7293LLU,1LLU),_1e1976730_Range16(7376LLU,7400LLU,1LLU),_1e1976730_Range16(7405LLU,7412LLU,7LLU),_1e1976730_Range16(7415LLU,7417LLU,1LLU),_1e1976730_Range16(7468LLU,7530LLU,1LLU),_1e1976730_Range16(7620LLU,7631LLU,1LLU),_1e1976730_Range16(7669LLU,7679LLU,1LLU),_1e1976730_Range16(8125LLU,8127LLU,2LLU),_1e1976730_Range16(8128LLU,8129LLU,1LLU),_1e1976730_Range16(8141LLU,8143LLU,1LLU),_1e1976730_Range16(8157LLU,8159LLU,1LLU),_1e1976730_Range16(8173LLU,8175LLU,1LLU),_1e1976730_Range16(8189LLU,8190LLU,1LLU),_1e1976730_Range16(11503LLU,11505LLU,1LLU),_1e1976730_Range16(11823LLU,12330LLU,507LLU),_1e1976730_Range16(12331LLU,12335LLU,1LLU),_1e1976730_Range16(12441LLU,12444LLU,1LLU),_1e1976730_Range16(12540LLU,42607LLU,30067LLU),_1e1976730_Range16(42620LLU,42621LLU,1LLU),_1e1976730_Range16(42623LLU,42652LLU,29LLU),_1e1976730_Range16(42653LLU,42736LLU,83LLU),_1e1976730_Range16(42737LLU,42752LLU,15LLU),_1e1976730_Range16(42753LLU,42785LLU,1LLU),_1e1976730_Range16(42888LLU,42890LLU,1LLU),_1e1976730_Range16(43000LLU,43001LLU,1LLU),_1e1976730_Range16(43204LLU,43232LLU,28LLU),_1e1976730_Range16(43233LLU,43249LLU,1LLU),_1e1976730_Range16(43307LLU,43310LLU,1LLU),_1e1976730_Range16(43347LLU,43443LLU,96LLU),_1e1976730_Range16(43456LLU,43493LLU,37LLU),_1e1976730_Range16(43643LLU,43645LLU,1LLU),_1e1976730_Range16(43711LLU,43714LLU,1LLU),_1e1976730_Range16(43766LLU,43867LLU,101LLU),_1e1976730_Range16(43868LLU,43871LLU,1LLU),_1e1976730_Range16(43881LLU,43883LLU,1LLU),_1e1976730_Range16(44012LLU,44013LLU,1LLU),_1e1976730_Range16(64286LLU,65056LLU,770LLU),_1e1976730_Range16(65057LLU,65071LLU,1LLU),_1e1976730_Range16(65342LLU,65344LLU,2LLU),_1e1976730_Range16(65392LLU,65438LLU,46LLU),_1e1976730_Range16(65439LLU,65507LLU,68LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66272LLU,67456LLU,1184LLU),_1e1976730_Range32(67457LLU,67461LLU,1LLU),_1e1976730_Range32(67463LLU,67504LLU,1LLU),_1e1976730_Range32(67506LLU,67514LLU,1LLU),_1e1976730_Range32(68325LLU,68326LLU,1LLU),_1e1976730_Range32(68898LLU,68903LLU,1LLU),_1e1976730_Range32(69373LLU,69375LLU,1LLU),_1e1976730_Range32(69446LLU,69456LLU,1LLU),_1e1976730_Range32(69506LLU,69509LLU,1LLU),_1e1976730_Range32(69702LLU,69744LLU,42LLU),_1e1976730_Range32(69817LLU,69818LLU,1LLU),_1e1976730_Range32(69939LLU,69940LLU,1LLU),_1e1976730_Range32(70003LLU,70080LLU,77LLU),_1e1976730_Range32(70090LLU,70092LLU,1LLU),_1e1976730_Range32(70197LLU,70198LLU,1LLU),_1e1976730_Range32(70377LLU,70378LLU,1LLU),_1e1976730_Range32(70460LLU,70477LLU,17LLU),_1e1976730_Range32(70502LLU,70508LLU,1LLU),_1e1976730_Range32(70512LLU,70516LLU,1LLU),_1e1976730_Range32(70722LLU,70726LLU,4LLU),_1e1976730_Range32(70850LLU,70851LLU,1LLU),_1e1976730_Range32(71103LLU,71104LLU,1LLU),_1e1976730_Range32(71231LLU,71350LLU,119LLU),_1e1976730_Range32(71351LLU,71467LLU,116LLU),_1e1976730_Range32(71737LLU,71738LLU,1LLU),_1e1976730_Range32(71997LLU,71998LLU,1LLU),_1e1976730_Range32(72003LLU,72160LLU,157LLU),_1e1976730_Range32(72244LLU,72263LLU,19LLU),_1e1976730_Range32(72345LLU,72767LLU,422LLU),_1e1976730_Range32(73026LLU,73028LLU,2LLU),_1e1976730_Range32(73029LLU,73111LLU,82LLU),_1e1976730_Range32(78919LLU,78933LLU,1LLU),_1e1976730_Range32(92912LLU,92916LLU,1LLU),_1e1976730_Range32(92976LLU,92982LLU,1LLU),_1e1976730_Range32(94095LLU,94111LLU,1LLU),_1e1976730_Range32(94192LLU,94193LLU,1LLU),_1e1976730_Range32(110576LLU,110579LLU,1LLU),_1e1976730_Range32(110581LLU,110587LLU,1LLU),_1e1976730_Range32(110589LLU,110590LLU,1LLU),_1e1976730_Range32(118528LLU,118573LLU,1LLU),_1e1976730_Range32(118576LLU,118598LLU,1LLU),_1e1976730_Range32(119143LLU,119145LLU,1LLU),_1e1976730_Range32(119149LLU,119154LLU,1LLU),_1e1976730_Range32(119163LLU,119170LLU,1LLU),_1e1976730_Range32(119173LLU,119179LLU,1LLU),_1e1976730_Range32(119210LLU,119213LLU,1LLU),_1e1976730_Range32(122928LLU,122989LLU,1LLU),_1e1976730_Range32(123184LLU,123190LLU,1LLU),_1e1976730_Range32(123566LLU,123628LLU,62LLU),_1e1976730_Range32(123629LLU,123631LLU,1LLU),_1e1976730_Range32(125136LLU,125142LLU,1LLU),_1e1976730_Range32(125252LLU,125254LLU,1LLU),_1e1976730_Range32(125256LLU,125258LLU,1LLU)}),3LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__EXTENDER = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(183LLU,720LLU,537LLU),_1e1976730_Range16(721LLU,1600LLU,879LLU),_1e1976730_Range16(2042LLU,2901LLU,859LLU),_1e1976730_Range16(3654LLU,3782LLU,128LLU),_1e1976730_Range16(6154LLU,6211LLU,57LLU),_1e1976730_Range16(6823LLU,7222LLU,399LLU),_1e1976730_Range16(7291LLU,12293LLU,5002LLU),_1e1976730_Range16(12337LLU,12341LLU,1LLU),_1e1976730_Range16(12445LLU,12446LLU,1LLU),_1e1976730_Range16(12540LLU,12542LLU,1LLU),_1e1976730_Range16(40981LLU,42508LLU,1527LLU),_1e1976730_Range16(43471LLU,43494LLU,23LLU),_1e1976730_Range16(43632LLU,43741LLU,109LLU),_1e1976730_Range16(43763LLU,43764LLU,1LLU),_1e1976730_Range16(65392LLU,65392LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67457LLU,67458LLU,1LLU),_1e1976730_Range32(70493LLU,71110LLU,617LLU),_1e1976730_Range32(71111LLU,71112LLU,1LLU),_1e1976730_Range32(72344LLU,92994LLU,20650LLU),_1e1976730_Range32(92995LLU,94176LLU,1181LLU),_1e1976730_Range32(94177LLU,94179LLU,2LLU),_1e1976730_Range32(123196LLU,123197LLU,1LLU),_1e1976730_Range32(125252LLU,125254LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__HEX_DIGIT = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(48LLU,57LLU,1LLU),_1e1976730_Range16(65LLU,70LLU,1LLU),_1e1976730_Range16(97LLU,102LLU,1LLU),_1e1976730_Range16(65296LLU,65305LLU,1LLU),_1e1976730_Range16(65313LLU,65318LLU,1LLU),_1e1976730_Range16(65345LLU,65350LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),3LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__HYPHEN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(45LLU,173LLU,128LLU),_1e1976730_Range16(1418LLU,6150LLU,4732LLU),_1e1976730_Range16(8208LLU,8209LLU,1LLU),_1e1976730_Range16(11799LLU,12539LLU,740LLU),_1e1976730_Range16(65123LLU,65293LLU,170LLU),_1e1976730_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),1LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__IDS_BINARY_OPERATOR = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(12272LLU,12273LLU,1LLU),_1e1976730_Range16(12276LLU,12283LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__IDS_TRINARY_OPERATOR = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(12274LLU,12275LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__IDEOGRAPHIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(12294LLU,12295LLU,1LLU),_1e1976730_Range16(12321LLU,12329LLU,1LLU),_1e1976730_Range16(12344LLU,12346LLU,1LLU),_1e1976730_Range16(13312LLU,19903LLU,1LLU),_1e1976730_Range16(19968LLU,40959LLU,1LLU),_1e1976730_Range16(63744LLU,64109LLU,1LLU),_1e1976730_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(94180LLU,94208LLU,28LLU),_1e1976730_Range32(94209LLU,100343LLU,1LLU),_1e1976730_Range32(100352LLU,101589LLU,1LLU),_1e1976730_Range32(101632LLU,101640LLU,1LLU),_1e1976730_Range32(110960LLU,111355LLU,1LLU),_1e1976730_Range32(131072LLU,173791LLU,1LLU),_1e1976730_Range32(173824LLU,177977LLU,1LLU),_1e1976730_Range32(177984LLU,178205LLU,1LLU),_1e1976730_Range32(178208LLU,183969LLU,1LLU),_1e1976730_Range32(183984LLU,191456LLU,1LLU),_1e1976730_Range32(194560LLU,195101LLU,1LLU),_1e1976730_Range32(196608LLU,201546LLU,1LLU),_1e1976730_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__JOIN_CONTROL = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(8204LLU,8205LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__LOGICAL_ORDER_EXCEPTION = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(3648LLU,3652LLU,1LLU),_1e1976730_Range16(3776LLU,3780LLU,1LLU),_1e1976730_Range16(6581LLU,6583LLU,1LLU),_1e1976730_Range16(6586LLU,43701LLU,37115LLU),_1e1976730_Range16(43702LLU,43705LLU,3LLU),_1e1976730_Range16(43707LLU,43708LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__NONCHARACTER_CODE_POINT = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(64976LLU,65007LLU,1LLU),_1e1976730_Range16(65534LLU,65535LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(131070LLU,131071LLU,1LLU),_1e1976730_Range32(196606LLU,196607LLU,1LLU),_1e1976730_Range32(262142LLU,262143LLU,1LLU),_1e1976730_Range32(327678LLU,327679LLU,1LLU),_1e1976730_Range32(393214LLU,393215LLU,1LLU),_1e1976730_Range32(458750LLU,458751LLU,1LLU),_1e1976730_Range32(524286LLU,524287LLU,1LLU),_1e1976730_Range32(589822LLU,589823LLU,1LLU),_1e1976730_Range32(655358LLU,655359LLU,1LLU),_1e1976730_Range32(720894LLU,720895LLU,1LLU),_1e1976730_Range32(786430LLU,786431LLU,1LLU),_1e1976730_Range32(851966LLU,851967LLU,1LLU),_1e1976730_Range32(917502LLU,917503LLU,1LLU),_1e1976730_Range32(983038LLU,983039LLU,1LLU),_1e1976730_Range32(1048574LLU,1048575LLU,1LLU),_1e1976730_Range32(1114110LLU,1114111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OTHER_ALPHABETIC = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(837LLU,1456LLU,619LLU),_1e1976730_Range16(1457LLU,1469LLU,1LLU),_1e1976730_Range16(1471LLU,1473LLU,2LLU),_1e1976730_Range16(1474LLU,1476LLU,2LLU),_1e1976730_Range16(1477LLU,1479LLU,2LLU),_1e1976730_Range16(1552LLU,1562LLU,1LLU),_1e1976730_Range16(1611LLU,1623LLU,1LLU),_1e1976730_Range16(1625LLU,1631LLU,1LLU),_1e1976730_Range16(1648LLU,1750LLU,102LLU),_1e1976730_Range16(1751LLU,1756LLU,1LLU),_1e1976730_Range16(1761LLU,1764LLU,1LLU),_1e1976730_Range16(1767LLU,1768LLU,1LLU),_1e1976730_Range16(1773LLU,1809LLU,36LLU),_1e1976730_Range16(1840LLU,1855LLU,1LLU),_1e1976730_Range16(1958LLU,1968LLU,1LLU),_1e1976730_Range16(2070LLU,2071LLU,1LLU),_1e1976730_Range16(2075LLU,2083LLU,1LLU),_1e1976730_Range16(2085LLU,2087LLU,1LLU),_1e1976730_Range16(2089LLU,2092LLU,1LLU),_1e1976730_Range16(2260LLU,2271LLU,1LLU),_1e1976730_Range16(2275LLU,2281LLU,1LLU),_1e1976730_Range16(2288LLU,2307LLU,1LLU),_1e1976730_Range16(2362LLU,2363LLU,1LLU),_1e1976730_Range16(2366LLU,2380LLU,1LLU),_1e1976730_Range16(2382LLU,2383LLU,1LLU),_1e1976730_Range16(2389LLU,2391LLU,1LLU),_1e1976730_Range16(2402LLU,2403LLU,1LLU),_1e1976730_Range16(2433LLU,2435LLU,1LLU),_1e1976730_Range16(2494LLU,2500LLU,1LLU),_1e1976730_Range16(2503LLU,2504LLU,1LLU),_1e1976730_Range16(2507LLU,2508LLU,1LLU),_1e1976730_Range16(2519LLU,2530LLU,11LLU),_1e1976730_Range16(2531LLU,2561LLU,30LLU),_1e1976730_Range16(2562LLU,2563LLU,1LLU),_1e1976730_Range16(2622LLU,2626LLU,1LLU),_1e1976730_Range16(2631LLU,2632LLU,1LLU),_1e1976730_Range16(2635LLU,2636LLU,1LLU),_1e1976730_Range16(2641LLU,2672LLU,31LLU),_1e1976730_Range16(2673LLU,2677LLU,4LLU),_1e1976730_Range16(2689LLU,2691LLU,1LLU),_1e1976730_Range16(2750LLU,2757LLU,1LLU),_1e1976730_Range16(2759LLU,2761LLU,1LLU),_1e1976730_Range16(2763LLU,2764LLU,1LLU),_1e1976730_Range16(2786LLU,2787LLU,1LLU),_1e1976730_Range16(2810LLU,2812LLU,1LLU),_1e1976730_Range16(2817LLU,2819LLU,1LLU),_1e1976730_Range16(2878LLU,2884LLU,1LLU),_1e1976730_Range16(2887LLU,2888LLU,1LLU),_1e1976730_Range16(2891LLU,2892LLU,1LLU),_1e1976730_Range16(2902LLU,2903LLU,1LLU),_1e1976730_Range16(2914LLU,2915LLU,1LLU),_1e1976730_Range16(2946LLU,3006LLU,60LLU),_1e1976730_Range16(3007LLU,3010LLU,1LLU),_1e1976730_Range16(3014LLU,3016LLU,1LLU),_1e1976730_Range16(3018LLU,3020LLU,1LLU),_1e1976730_Range16(3031LLU,3072LLU,41LLU),_1e1976730_Range16(3073LLU,3076LLU,1LLU),_1e1976730_Range16(3134LLU,3140LLU,1LLU),_1e1976730_Range16(3142LLU,3144LLU,1LLU),_1e1976730_Range16(3146LLU,3148LLU,1LLU),_1e1976730_Range16(3157LLU,3158LLU,1LLU),_1e1976730_Range16(3170LLU,3171LLU,1LLU),_1e1976730_Range16(3201LLU,3203LLU,1LLU),_1e1976730_Range16(3262LLU,3268LLU,1LLU),_1e1976730_Range16(3270LLU,3272LLU,1LLU),_1e1976730_Range16(3274LLU,3276LLU,1LLU),_1e1976730_Range16(3285LLU,3286LLU,1LLU),_1e1976730_Range16(3298LLU,3299LLU,1LLU),_1e1976730_Range16(3315LLU,3328LLU,13LLU),_1e1976730_Range16(3329LLU,3331LLU,1LLU),_1e1976730_Range16(3390LLU,3396LLU,1LLU),_1e1976730_Range16(3398LLU,3400LLU,1LLU),_1e1976730_Range16(3402LLU,3404LLU,1LLU),_1e1976730_Range16(3415LLU,3426LLU,11LLU),_1e1976730_Range16(3427LLU,3457LLU,30LLU),_1e1976730_Range16(3458LLU,3459LLU,1LLU),_1e1976730_Range16(3535LLU,3540LLU,1LLU),_1e1976730_Range16(3542LLU,3544LLU,2LLU),_1e1976730_Range16(3545LLU,3551LLU,1LLU),_1e1976730_Range16(3570LLU,3571LLU,1LLU),_1e1976730_Range16(3633LLU,3636LLU,3LLU),_1e1976730_Range16(3637LLU,3642LLU,1LLU),_1e1976730_Range16(3661LLU,3761LLU,100LLU),_1e1976730_Range16(3764LLU,3769LLU,1LLU),_1e1976730_Range16(3771LLU,3772LLU,1LLU),_1e1976730_Range16(3789LLU,3953LLU,164LLU),_1e1976730_Range16(3954LLU,3971LLU,1LLU),_1e1976730_Range16(3981LLU,3991LLU,1LLU),_1e1976730_Range16(3993LLU,4028LLU,1LLU),_1e1976730_Range16(4139LLU,4150LLU,1LLU),_1e1976730_Range16(4152LLU,4155LLU,3LLU),_1e1976730_Range16(4156LLU,4158LLU,1LLU),_1e1976730_Range16(4182LLU,4185LLU,1LLU),_1e1976730_Range16(4190LLU,4192LLU,1LLU),_1e1976730_Range16(4194LLU,4196LLU,1LLU),_1e1976730_Range16(4199LLU,4205LLU,1LLU),_1e1976730_Range16(4209LLU,4212LLU,1LLU),_1e1976730_Range16(4226LLU,4237LLU,1LLU),_1e1976730_Range16(4239LLU,4250LLU,11LLU),_1e1976730_Range16(4251LLU,4253LLU,1LLU),_1e1976730_Range16(5906LLU,5907LLU,1LLU),_1e1976730_Range16(5938LLU,5939LLU,1LLU),_1e1976730_Range16(5970LLU,5971LLU,1LLU),_1e1976730_Range16(6002LLU,6003LLU,1LLU),_1e1976730_Range16(6070LLU,6088LLU,1LLU),_1e1976730_Range16(6277LLU,6278LLU,1LLU),_1e1976730_Range16(6313LLU,6432LLU,119LLU),_1e1976730_Range16(6433LLU,6443LLU,1LLU),_1e1976730_Range16(6448LLU,6456LLU,1LLU),_1e1976730_Range16(6679LLU,6683LLU,1LLU),_1e1976730_Range16(6741LLU,6750LLU,1LLU),_1e1976730_Range16(6753LLU,6772LLU,1LLU),_1e1976730_Range16(6847LLU,6848LLU,1LLU),_1e1976730_Range16(6860LLU,6862LLU,1LLU),_1e1976730_Range16(6912LLU,6916LLU,1LLU),_1e1976730_Range16(6965LLU,6979LLU,1LLU),_1e1976730_Range16(7040LLU,7042LLU,1LLU),_1e1976730_Range16(7073LLU,7081LLU,1LLU),_1e1976730_Range16(7084LLU,7085LLU,1LLU),_1e1976730_Range16(7143LLU,7153LLU,1LLU),_1e1976730_Range16(7204LLU,7222LLU,1LLU),_1e1976730_Range16(7655LLU,7668LLU,1LLU),_1e1976730_Range16(9398LLU,9449LLU,1LLU),_1e1976730_Range16(11744LLU,11775LLU,1LLU),_1e1976730_Range16(42612LLU,42619LLU,1LLU),_1e1976730_Range16(42654LLU,42655LLU,1LLU),_1e1976730_Range16(43010LLU,43019LLU,9LLU),_1e1976730_Range16(43043LLU,43047LLU,1LLU),_1e1976730_Range16(43136LLU,43137LLU,1LLU),_1e1976730_Range16(43188LLU,43203LLU,1LLU),_1e1976730_Range16(43205LLU,43263LLU,58LLU),_1e1976730_Range16(43302LLU,43306LLU,1LLU),_1e1976730_Range16(43335LLU,43346LLU,1LLU),_1e1976730_Range16(43392LLU,43395LLU,1LLU),_1e1976730_Range16(43444LLU,43455LLU,1LLU),_1e1976730_Range16(43493LLU,43561LLU,68LLU),_1e1976730_Range16(43562LLU,43574LLU,1LLU),_1e1976730_Range16(43587LLU,43596LLU,9LLU),_1e1976730_Range16(43597LLU,43643LLU,46LLU),_1e1976730_Range16(43644LLU,43645LLU,1LLU),_1e1976730_Range16(43696LLU,43698LLU,2LLU),_1e1976730_Range16(43699LLU,43700LLU,1LLU),_1e1976730_Range16(43703LLU,43704LLU,1LLU),_1e1976730_Range16(43710LLU,43755LLU,45LLU),_1e1976730_Range16(43756LLU,43759LLU,1LLU),_1e1976730_Range16(43765LLU,44003LLU,238LLU),_1e1976730_Range16(44004LLU,44010LLU,1LLU),_1e1976730_Range16(64286LLU,64286LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66422LLU,66426LLU,1LLU),_1e1976730_Range32(68097LLU,68099LLU,1LLU),_1e1976730_Range32(68101LLU,68102LLU,1LLU),_1e1976730_Range32(68108LLU,68111LLU,1LLU),_1e1976730_Range32(68900LLU,68903LLU,1LLU),_1e1976730_Range32(69291LLU,69292LLU,1LLU),_1e1976730_Range32(69632LLU,69634LLU,1LLU),_1e1976730_Range32(69688LLU,69701LLU,1LLU),_1e1976730_Range32(69747LLU,69748LLU,1LLU),_1e1976730_Range32(69760LLU,69762LLU,1LLU),_1e1976730_Range32(69808LLU,69816LLU,1LLU),_1e1976730_Range32(69826LLU,69888LLU,62LLU),_1e1976730_Range32(69889LLU,69890LLU,1LLU),_1e1976730_Range32(69927LLU,69938LLU,1LLU),_1e1976730_Range32(69957LLU,69958LLU,1LLU),_1e1976730_Range32(70016LLU,70018LLU,1LLU),_1e1976730_Range32(70067LLU,70079LLU,1LLU),_1e1976730_Range32(70094LLU,70095LLU,1LLU),_1e1976730_Range32(70188LLU,70196LLU,1LLU),_1e1976730_Range32(70199LLU,70206LLU,7LLU),_1e1976730_Range32(70209LLU,70367LLU,158LLU),_1e1976730_Range32(70368LLU,70376LLU,1LLU),_1e1976730_Range32(70400LLU,70403LLU,1LLU),_1e1976730_Range32(70462LLU,70468LLU,1LLU),_1e1976730_Range32(70471LLU,70472LLU,1LLU),_1e1976730_Range32(70475LLU,70476LLU,1LLU),_1e1976730_Range32(70487LLU,70498LLU,11LLU),_1e1976730_Range32(70499LLU,70709LLU,210LLU),_1e1976730_Range32(70710LLU,70721LLU,1LLU),_1e1976730_Range32(70723LLU,70725LLU,1LLU),_1e1976730_Range32(70832LLU,70849LLU,1LLU),_1e1976730_Range32(71087LLU,71093LLU,1LLU),_1e1976730_Range32(71096LLU,71102LLU,1LLU),_1e1976730_Range32(71132LLU,71133LLU,1LLU),_1e1976730_Range32(71216LLU,71230LLU,1LLU),_1e1976730_Range32(71232LLU,71339LLU,107LLU),_1e1976730_Range32(71340LLU,71349LLU,1LLU),_1e1976730_Range32(71453LLU,71466LLU,1LLU),_1e1976730_Range32(71724LLU,71736LLU,1LLU),_1e1976730_Range32(71984LLU,71989LLU,1LLU),_1e1976730_Range32(71991LLU,71992LLU,1LLU),_1e1976730_Range32(71995LLU,71996LLU,1LLU),_1e1976730_Range32(72000LLU,72002LLU,2LLU),_1e1976730_Range32(72145LLU,72151LLU,1LLU),_1e1976730_Range32(72154LLU,72159LLU,1LLU),_1e1976730_Range32(72164LLU,72193LLU,29LLU),_1e1976730_Range32(72194LLU,72202LLU,1LLU),_1e1976730_Range32(72245LLU,72249LLU,1LLU),_1e1976730_Range32(72251LLU,72254LLU,1LLU),_1e1976730_Range32(72273LLU,72283LLU,1LLU),_1e1976730_Range32(72330LLU,72343LLU,1LLU),_1e1976730_Range32(72751LLU,72758LLU,1LLU),_1e1976730_Range32(72760LLU,72766LLU,1LLU),_1e1976730_Range32(72850LLU,72871LLU,1LLU),_1e1976730_Range32(72873LLU,72886LLU,1LLU),_1e1976730_Range32(73009LLU,73014LLU,1LLU),_1e1976730_Range32(73018LLU,73020LLU,2LLU),_1e1976730_Range32(73021LLU,73023LLU,2LLU),_1e1976730_Range32(73024LLU,73025LLU,1LLU),_1e1976730_Range32(73027LLU,73031LLU,4LLU),_1e1976730_Range32(73098LLU,73102LLU,1LLU),_1e1976730_Range32(73104LLU,73105LLU,1LLU),_1e1976730_Range32(73107LLU,73110LLU,1LLU),_1e1976730_Range32(73459LLU,73462LLU,1LLU),_1e1976730_Range32(73472LLU,73473LLU,1LLU),_1e1976730_Range32(73475LLU,73524LLU,49LLU),_1e1976730_Range32(73525LLU,73530LLU,1LLU),_1e1976730_Range32(73534LLU,73536LLU,1LLU),_1e1976730_Range32(94031LLU,94033LLU,2LLU),_1e1976730_Range32(94034LLU,94087LLU,1LLU),_1e1976730_Range32(94095LLU,94098LLU,1LLU),_1e1976730_Range32(94192LLU,94193LLU,1LLU),_1e1976730_Range32(113822LLU,122880LLU,9058LLU),_1e1976730_Range32(122881LLU,122886LLU,1LLU),_1e1976730_Range32(122888LLU,122904LLU,1LLU),_1e1976730_Range32(122907LLU,122913LLU,1LLU),_1e1976730_Range32(122915LLU,122916LLU,1LLU),_1e1976730_Range32(122918LLU,122922LLU,1LLU),_1e1976730_Range32(123023LLU,125255LLU,2232LLU),_1e1976730_Range32(127280LLU,127305LLU,1LLU),_1e1976730_Range32(127312LLU,127337LLU,1LLU),_1e1976730_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OTHER_DEFAULT_IGNORABLE_CODE_POINT = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(847LLU,4447LLU,3600LLU),_1e1976730_Range16(4448LLU,6068LLU,1620LLU),_1e1976730_Range16(6069LLU,8293LLU,2224LLU),_1e1976730_Range16(12644LLU,65440LLU,52796LLU),_1e1976730_Range16(65520LLU,65528LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(917504LLU,917506LLU,2LLU),_1e1976730_Range32(917507LLU,917535LLU,1LLU),_1e1976730_Range32(917632LLU,917759LLU,1LLU),_1e1976730_Range32(918000LLU,921599LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OTHER_GRAPHEME_EXTEND = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(2494LLU,2519LLU,25LLU),_1e1976730_Range16(2878LLU,2903LLU,25LLU),_1e1976730_Range16(3006LLU,3031LLU,25LLU),_1e1976730_Range16(3266LLU,3285LLU,19LLU),_1e1976730_Range16(3286LLU,3390LLU,104LLU),_1e1976730_Range16(3415LLU,3535LLU,120LLU),_1e1976730_Range16(3551LLU,6965LLU,3414LLU),_1e1976730_Range16(8204LLU,12334LLU,4130LLU),_1e1976730_Range16(12335LLU,65438LLU,53103LLU),_1e1976730_Range16(65439LLU,65439LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(70462LLU,70487LLU,25LLU),_1e1976730_Range32(70832LLU,70845LLU,13LLU),_1e1976730_Range32(71087LLU,71984LLU,897LLU),_1e1976730_Range32(119141LLU,119150LLU,9LLU),_1e1976730_Range32(119151LLU,119154LLU,1LLU),_1e1976730_Range32(917536LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OTHER_ID_CONTINUE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(183LLU,903LLU,720LLU),_1e1976730_Range16(4969LLU,4977LLU,1LLU),_1e1976730_Range16(6618LLU,6618LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OTHER_ID_START = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(6277LLU,6278LLU,1LLU),_1e1976730_Range16(8472LLU,8494LLU,22LLU),_1e1976730_Range16(12443LLU,12444LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OTHER_LOWERCASE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(170LLU,186LLU,16LLU),_1e1976730_Range16(688LLU,696LLU,1LLU),_1e1976730_Range16(704LLU,705LLU,1LLU),_1e1976730_Range16(736LLU,740LLU,1LLU),_1e1976730_Range16(837LLU,890LLU,53LLU),_1e1976730_Range16(4348LLU,7468LLU,3120LLU),_1e1976730_Range16(7469LLU,7530LLU,1LLU),_1e1976730_Range16(7544LLU,7579LLU,35LLU),_1e1976730_Range16(7580LLU,7615LLU,1LLU),_1e1976730_Range16(8305LLU,8319LLU,14LLU),_1e1976730_Range16(8336LLU,8348LLU,1LLU),_1e1976730_Range16(8560LLU,8575LLU,1LLU),_1e1976730_Range16(9424LLU,9449LLU,1LLU),_1e1976730_Range16(11388LLU,11389LLU,1LLU),_1e1976730_Range16(42652LLU,42653LLU,1LLU),_1e1976730_Range16(42864LLU,42994LLU,130LLU),_1e1976730_Range16(42995LLU,42996LLU,1LLU),_1e1976730_Range16(43000LLU,43001LLU,1LLU),_1e1976730_Range16(43868LLU,43871LLU,1LLU),_1e1976730_Range16(43881LLU,43881LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(67456LLU,67459LLU,3LLU),_1e1976730_Range32(67460LLU,67461LLU,1LLU),_1e1976730_Range32(67463LLU,67504LLU,1LLU),_1e1976730_Range32(67506LLU,67514LLU,1LLU),_1e1976730_Range32(122928LLU,122989LLU,1LLU)}),1LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OTHER_MATH = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(94LLU,976LLU,882LLU),_1e1976730_Range16(977LLU,978LLU,1LLU),_1e1976730_Range16(981LLU,1008LLU,27LLU),_1e1976730_Range16(1009LLU,1012LLU,3LLU),_1e1976730_Range16(1013LLU,8214LLU,7201LLU),_1e1976730_Range16(8242LLU,8244LLU,1LLU),_1e1976730_Range16(8256LLU,8289LLU,33LLU),_1e1976730_Range16(8290LLU,8292LLU,1LLU),_1e1976730_Range16(8317LLU,8318LLU,1LLU),_1e1976730_Range16(8333LLU,8334LLU,1LLU),_1e1976730_Range16(8400LLU,8412LLU,1LLU),_1e1976730_Range16(8417LLU,8421LLU,4LLU),_1e1976730_Range16(8422LLU,8427LLU,5LLU),_1e1976730_Range16(8428LLU,8431LLU,1LLU),_1e1976730_Range16(8450LLU,8455LLU,5LLU),_1e1976730_Range16(8458LLU,8467LLU,1LLU),_1e1976730_Range16(8469LLU,8473LLU,4LLU),_1e1976730_Range16(8474LLU,8477LLU,1LLU),_1e1976730_Range16(8484LLU,8488LLU,4LLU),_1e1976730_Range16(8489LLU,8492LLU,3LLU),_1e1976730_Range16(8493LLU,8495LLU,2LLU),_1e1976730_Range16(8496LLU,8497LLU,1LLU),_1e1976730_Range16(8499LLU,8504LLU,1LLU),_1e1976730_Range16(8508LLU,8511LLU,1LLU),_1e1976730_Range16(8517LLU,8521LLU,1LLU),_1e1976730_Range16(8597LLU,8601LLU,1LLU),_1e1976730_Range16(8604LLU,8607LLU,1LLU),_1e1976730_Range16(8609LLU,8610LLU,1LLU),_1e1976730_Range16(8612LLU,8613LLU,1LLU),_1e1976730_Range16(8615LLU,8617LLU,2LLU),_1e1976730_Range16(8618LLU,8621LLU,1LLU),_1e1976730_Range16(8624LLU,8625LLU,1LLU),_1e1976730_Range16(8630LLU,8631LLU,1LLU),_1e1976730_Range16(8636LLU,8653LLU,1LLU),_1e1976730_Range16(8656LLU,8657LLU,1LLU),_1e1976730_Range16(8659LLU,8661LLU,2LLU),_1e1976730_Range16(8662LLU,8667LLU,1LLU),_1e1976730_Range16(8669LLU,8676LLU,7LLU),_1e1976730_Range16(8677LLU,8968LLU,291LLU),_1e1976730_Range16(8969LLU,8971LLU,1LLU),_1e1976730_Range16(9140LLU,9141LLU,1LLU),_1e1976730_Range16(9143LLU,9168LLU,25LLU),_1e1976730_Range16(9186LLU,9632LLU,446LLU),_1e1976730_Range16(9633LLU,9646LLU,13LLU),_1e1976730_Range16(9647LLU,9654LLU,1LLU),_1e1976730_Range16(9660LLU,9664LLU,1LLU),_1e1976730_Range16(9670LLU,9671LLU,1LLU),_1e1976730_Range16(9674LLU,9675LLU,1LLU),_1e1976730_Range16(9679LLU,9683LLU,1LLU),_1e1976730_Range16(9698LLU,9700LLU,2LLU),_1e1976730_Range16(9703LLU,9708LLU,1LLU),_1e1976730_Range16(9733LLU,9734LLU,1LLU),_1e1976730_Range16(9792LLU,9794LLU,2LLU),_1e1976730_Range16(9824LLU,9827LLU,1LLU),_1e1976730_Range16(9837LLU,9838LLU,1LLU),_1e1976730_Range16(10181LLU,10182LLU,1LLU),_1e1976730_Range16(10214LLU,10223LLU,1LLU),_1e1976730_Range16(10627LLU,10648LLU,1LLU),_1e1976730_Range16(10712LLU,10715LLU,1LLU),_1e1976730_Range16(10748LLU,10749LLU,1LLU),_1e1976730_Range16(65121LLU,65123LLU,2LLU),_1e1976730_Range16(65128LLU,65340LLU,212LLU),_1e1976730_Range16(65342LLU,65342LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(119808LLU,119892LLU,1LLU),_1e1976730_Range32(119894LLU,119964LLU,1LLU),_1e1976730_Range32(119966LLU,119967LLU,1LLU),_1e1976730_Range32(119970LLU,119973LLU,3LLU),_1e1976730_Range32(119974LLU,119977LLU,3LLU),_1e1976730_Range32(119978LLU,119980LLU,1LLU),_1e1976730_Range32(119982LLU,119993LLU,1LLU),_1e1976730_Range32(119995LLU,119997LLU,2LLU),_1e1976730_Range32(119998LLU,120003LLU,1LLU),_1e1976730_Range32(120005LLU,120069LLU,1LLU),_1e1976730_Range32(120071LLU,120074LLU,1LLU),_1e1976730_Range32(120077LLU,120084LLU,1LLU),_1e1976730_Range32(120086LLU,120092LLU,1LLU),_1e1976730_Range32(120094LLU,120121LLU,1LLU),_1e1976730_Range32(120123LLU,120126LLU,1LLU),_1e1976730_Range32(120128LLU,120132LLU,1LLU),_1e1976730_Range32(120134LLU,120138LLU,4LLU),_1e1976730_Range32(120139LLU,120144LLU,1LLU),_1e1976730_Range32(120146LLU,120485LLU,1LLU),_1e1976730_Range32(120488LLU,120512LLU,1LLU),_1e1976730_Range32(120514LLU,120538LLU,1LLU),_1e1976730_Range32(120540LLU,120570LLU,1LLU),_1e1976730_Range32(120572LLU,120596LLU,1LLU),_1e1976730_Range32(120598LLU,120628LLU,1LLU),_1e1976730_Range32(120630LLU,120654LLU,1LLU),_1e1976730_Range32(120656LLU,120686LLU,1LLU),_1e1976730_Range32(120688LLU,120712LLU,1LLU),_1e1976730_Range32(120714LLU,120744LLU,1LLU),_1e1976730_Range32(120746LLU,120770LLU,1LLU),_1e1976730_Range32(120772LLU,120779LLU,1LLU),_1e1976730_Range32(120782LLU,120831LLU,1LLU),_1e1976730_Range32(126464LLU,126467LLU,1LLU),_1e1976730_Range32(126469LLU,126495LLU,1LLU),_1e1976730_Range32(126497LLU,126498LLU,1LLU),_1e1976730_Range32(126500LLU,126503LLU,3LLU),_1e1976730_Range32(126505LLU,126514LLU,1LLU),_1e1976730_Range32(126516LLU,126519LLU,1LLU),_1e1976730_Range32(126521LLU,126523LLU,2LLU),_1e1976730_Range32(126530LLU,126535LLU,5LLU),_1e1976730_Range32(126537LLU,126541LLU,2LLU),_1e1976730_Range32(126542LLU,126543LLU,1LLU),_1e1976730_Range32(126545LLU,126546LLU,1LLU),_1e1976730_Range32(126548LLU,126551LLU,3LLU),_1e1976730_Range32(126553LLU,126561LLU,2LLU),_1e1976730_Range32(126562LLU,126564LLU,2LLU),_1e1976730_Range32(126567LLU,126570LLU,1LLU),_1e1976730_Range32(126572LLU,126578LLU,1LLU),_1e1976730_Range32(126580LLU,126583LLU,1LLU),_1e1976730_Range32(126585LLU,126588LLU,1LLU),_1e1976730_Range32(126590LLU,126592LLU,2LLU),_1e1976730_Range32(126593LLU,126601LLU,1LLU),_1e1976730_Range32(126603LLU,126619LLU,1LLU),_1e1976730_Range32(126625LLU,126627LLU,1LLU),_1e1976730_Range32(126629LLU,126633LLU,1LLU),_1e1976730_Range32(126635LLU,126651LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__OTHER_UPPERCASE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(8544LLU,8559LLU,1LLU),_1e1976730_Range16(9398LLU,9423LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(127280LLU,127305LLU,1LLU),_1e1976730_Range32(127312LLU,127337LLU,1LLU),_1e1976730_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PATTERN_SYNTAX = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(33LLU,47LLU,1LLU),_1e1976730_Range16(58LLU,64LLU,1LLU),_1e1976730_Range16(91LLU,94LLU,1LLU),_1e1976730_Range16(96LLU,123LLU,27LLU),_1e1976730_Range16(124LLU,126LLU,1LLU),_1e1976730_Range16(161LLU,167LLU,1LLU),_1e1976730_Range16(169LLU,171LLU,2LLU),_1e1976730_Range16(172LLU,176LLU,2LLU),_1e1976730_Range16(177LLU,187LLU,5LLU),_1e1976730_Range16(191LLU,215LLU,24LLU),_1e1976730_Range16(247LLU,8208LLU,7961LLU),_1e1976730_Range16(8209LLU,8231LLU,1LLU),_1e1976730_Range16(8240LLU,8254LLU,1LLU),_1e1976730_Range16(8257LLU,8275LLU,1LLU),_1e1976730_Range16(8277LLU,8286LLU,1LLU),_1e1976730_Range16(8592LLU,9311LLU,1LLU),_1e1976730_Range16(9472LLU,10101LLU,1LLU),_1e1976730_Range16(10132LLU,11263LLU,1LLU),_1e1976730_Range16(11776LLU,11903LLU,1LLU),_1e1976730_Range16(12289LLU,12291LLU,1LLU),_1e1976730_Range16(12296LLU,12320LLU,1LLU),_1e1976730_Range16(12336LLU,64830LLU,52494LLU),_1e1976730_Range16(64831LLU,65093LLU,262LLU),_1e1976730_Range16(65094LLU,65094LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),10LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PATTERN_WHITE_SPACE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(9LLU,13LLU,1LLU),_1e1976730_Range16(32LLU,133LLU,101LLU),_1e1976730_Range16(8206LLU,8207LLU,1LLU),_1e1976730_Range16(8232LLU,8233LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),2LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__PREPENDED_CONCATENATION_MARK = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(1536LLU,1541LLU,1LLU),_1e1976730_Range16(1757LLU,1807LLU,50LLU),_1e1976730_Range16(2192LLU,2193LLU,1LLU),_1e1976730_Range16(2274LLU,2274LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(69821LLU,69837LLU,16LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__QUOTATION_MARK = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(34LLU,39LLU,5LLU),_1e1976730_Range16(171LLU,187LLU,16LLU),_1e1976730_Range16(8216LLU,8223LLU,1LLU),_1e1976730_Range16(8249LLU,8250LLU,1LLU),_1e1976730_Range16(11842LLU,12300LLU,458LLU),_1e1976730_Range16(12301LLU,12303LLU,1LLU),_1e1976730_Range16(12317LLU,12319LLU,1LLU),_1e1976730_Range16(65089LLU,65092LLU,1LLU),_1e1976730_Range16(65282LLU,65287LLU,5LLU),_1e1976730_Range16(65378LLU,65379LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),2LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__RADICAL = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(11904LLU,11929LLU,1LLU),_1e1976730_Range16(11931LLU,12019LLU,1LLU),_1e1976730_Range16(12032LLU,12245LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__REGIONAL_INDICATOR = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(127462LLU,127487LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SENTENCE_TERMINAL = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(33LLU,46LLU,13LLU),_1e1976730_Range16(63LLU,1417LLU,1354LLU),_1e1976730_Range16(1565LLU,1567LLU,1LLU),_1e1976730_Range16(1748LLU,1792LLU,44LLU),_1e1976730_Range16(1793LLU,1794LLU,1LLU),_1e1976730_Range16(2041LLU,2103LLU,62LLU),_1e1976730_Range16(2105LLU,2109LLU,4LLU),_1e1976730_Range16(2110LLU,2404LLU,294LLU),_1e1976730_Range16(2405LLU,4170LLU,1765LLU),_1e1976730_Range16(4171LLU,4962LLU,791LLU),_1e1976730_Range16(4967LLU,4968LLU,1LLU),_1e1976730_Range16(5742LLU,5941LLU,199LLU),_1e1976730_Range16(5942LLU,6147LLU,205LLU),_1e1976730_Range16(6153LLU,6468LLU,315LLU),_1e1976730_Range16(6469LLU,6824LLU,355LLU),_1e1976730_Range16(6825LLU,6827LLU,1LLU),_1e1976730_Range16(7002LLU,7003LLU,1LLU),_1e1976730_Range16(7006LLU,7007LLU,1LLU),_1e1976730_Range16(7037LLU,7038LLU,1LLU),_1e1976730_Range16(7227LLU,7228LLU,1LLU),_1e1976730_Range16(7294LLU,7295LLU,1LLU),_1e1976730_Range16(8252LLU,8253LLU,1LLU),_1e1976730_Range16(8263LLU,8265LLU,1LLU),_1e1976730_Range16(11822LLU,11836LLU,14LLU),_1e1976730_Range16(11859LLU,11860LLU,1LLU),_1e1976730_Range16(12290LLU,42239LLU,29949LLU),_1e1976730_Range16(42510LLU,42511LLU,1LLU),_1e1976730_Range16(42739LLU,42743LLU,4LLU),_1e1976730_Range16(43126LLU,43127LLU,1LLU),_1e1976730_Range16(43214LLU,43215LLU,1LLU),_1e1976730_Range16(43311LLU,43464LLU,153LLU),_1e1976730_Range16(43465LLU,43613LLU,148LLU),_1e1976730_Range16(43614LLU,43615LLU,1LLU),_1e1976730_Range16(43760LLU,43761LLU,1LLU),_1e1976730_Range16(44011LLU,65106LLU,21095LLU),_1e1976730_Range16(65110LLU,65111LLU,1LLU),_1e1976730_Range16(65281LLU,65294LLU,13LLU),_1e1976730_Range16(65311LLU,65377LLU,66LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(68182LLU,68183LLU,1LLU),_1e1976730_Range32(69461LLU,69465LLU,1LLU),_1e1976730_Range32(69510LLU,69513LLU,1LLU),_1e1976730_Range32(69703LLU,69704LLU,1LLU),_1e1976730_Range32(69822LLU,69825LLU,1LLU),_1e1976730_Range32(69953LLU,69955LLU,1LLU),_1e1976730_Range32(70085LLU,70086LLU,1LLU),_1e1976730_Range32(70093LLU,70110LLU,17LLU),_1e1976730_Range32(70111LLU,70200LLU,89LLU),_1e1976730_Range32(70201LLU,70203LLU,2LLU),_1e1976730_Range32(70204LLU,70313LLU,109LLU),_1e1976730_Range32(70731LLU,70732LLU,1LLU),_1e1976730_Range32(71106LLU,71107LLU,1LLU),_1e1976730_Range32(71113LLU,71127LLU,1LLU),_1e1976730_Range32(71233LLU,71234LLU,1LLU),_1e1976730_Range32(71484LLU,71486LLU,1LLU),_1e1976730_Range32(72004LLU,72006LLU,2LLU),_1e1976730_Range32(72258LLU,72259LLU,1LLU),_1e1976730_Range32(72347LLU,72348LLU,1LLU),_1e1976730_Range32(72769LLU,72770LLU,1LLU),_1e1976730_Range32(73463LLU,73464LLU,1LLU),_1e1976730_Range32(73539LLU,73540LLU,1LLU),_1e1976730_Range32(92782LLU,92783LLU,1LLU),_1e1976730_Range32(92917LLU,92983LLU,66LLU),_1e1976730_Range32(92984LLU,92996LLU,12LLU),_1e1976730_Range32(93848LLU,113823LLU,19975LLU),_1e1976730_Range32(121480LLU,121480LLU,1LLU)}),1LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__SOFT_DOTTED = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(105LLU,106LLU,1LLU),_1e1976730_Range16(303LLU,585LLU,282LLU),_1e1976730_Range16(616LLU,669LLU,53LLU),_1e1976730_Range16(690LLU,1011LLU,321LLU),_1e1976730_Range16(1110LLU,1112LLU,2LLU),_1e1976730_Range16(7522LLU,7574LLU,52LLU),_1e1976730_Range16(7588LLU,7592LLU,4LLU),_1e1976730_Range16(7725LLU,7883LLU,158LLU),_1e1976730_Range16(8305LLU,8520LLU,215LLU),_1e1976730_Range16(8521LLU,11388LLU,2867LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(119842LLU,119843LLU,1LLU),_1e1976730_Range32(119894LLU,119895LLU,1LLU),_1e1976730_Range32(119946LLU,119947LLU,1LLU),_1e1976730_Range32(119998LLU,119999LLU,1LLU),_1e1976730_Range32(120050LLU,120051LLU,1LLU),_1e1976730_Range32(120102LLU,120103LLU,1LLU),_1e1976730_Range32(120154LLU,120155LLU,1LLU),_1e1976730_Range32(120206LLU,120207LLU,1LLU),_1e1976730_Range32(120258LLU,120259LLU,1LLU),_1e1976730_Range32(120310LLU,120311LLU,1LLU),_1e1976730_Range32(120362LLU,120363LLU,1LLU),_1e1976730_Range32(120414LLU,120415LLU,1LLU),_1e1976730_Range32(120466LLU,120467LLU,1LLU),_1e1976730_Range32(122650LLU,122956LLU,306LLU),_1e1976730_Range32(122957LLU,122984LLU,27LLU)}),1LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__TERMINAL_PUNCTUATION = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(33LLU,44LLU,11LLU),_1e1976730_Range16(46LLU,58LLU,12LLU),_1e1976730_Range16(59LLU,63LLU,4LLU),_1e1976730_Range16(894LLU,903LLU,9LLU),_1e1976730_Range16(1417LLU,1475LLU,58LLU),_1e1976730_Range16(1548LLU,1563LLU,15LLU),_1e1976730_Range16(1565LLU,1567LLU,1LLU),_1e1976730_Range16(1748LLU,1792LLU,44LLU),_1e1976730_Range16(1793LLU,1802LLU,1LLU),_1e1976730_Range16(1804LLU,2040LLU,236LLU),_1e1976730_Range16(2041LLU,2096LLU,55LLU),_1e1976730_Range16(2097LLU,2110LLU,1LLU),_1e1976730_Range16(2142LLU,2404LLU,262LLU),_1e1976730_Range16(2405LLU,3674LLU,1269LLU),_1e1976730_Range16(3675LLU,3848LLU,173LLU),_1e1976730_Range16(3853LLU,3858LLU,1LLU),_1e1976730_Range16(4170LLU,4171LLU,1LLU),_1e1976730_Range16(4961LLU,4968LLU,1LLU),_1e1976730_Range16(5742LLU,5867LLU,125LLU),_1e1976730_Range16(5868LLU,5869LLU,1LLU),_1e1976730_Range16(5941LLU,5942LLU,1LLU),_1e1976730_Range16(6100LLU,6102LLU,1LLU),_1e1976730_Range16(6106LLU,6146LLU,40LLU),_1e1976730_Range16(6147LLU,6149LLU,1LLU),_1e1976730_Range16(6152LLU,6153LLU,1LLU),_1e1976730_Range16(6468LLU,6469LLU,1LLU),_1e1976730_Range16(6824LLU,6827LLU,1LLU),_1e1976730_Range16(7002LLU,7003LLU,1LLU),_1e1976730_Range16(7005LLU,7007LLU,1LLU),_1e1976730_Range16(7037LLU,7038LLU,1LLU),_1e1976730_Range16(7227LLU,7231LLU,1LLU),_1e1976730_Range16(7294LLU,7295LLU,1LLU),_1e1976730_Range16(8252LLU,8253LLU,1LLU),_1e1976730_Range16(8263LLU,8265LLU,1LLU),_1e1976730_Range16(11822LLU,11836LLU,14LLU),_1e1976730_Range16(11841LLU,11852LLU,11LLU),_1e1976730_Range16(11854LLU,11855LLU,1LLU),_1e1976730_Range16(11859LLU,11860LLU,1LLU),_1e1976730_Range16(12289LLU,12290LLU,1LLU),_1e1976730_Range16(42238LLU,42239LLU,1LLU),_1e1976730_Range16(42509LLU,42511LLU,1LLU),_1e1976730_Range16(42739LLU,42743LLU,1LLU),_1e1976730_Range16(43126LLU,43127LLU,1LLU),_1e1976730_Range16(43214LLU,43215LLU,1LLU),_1e1976730_Range16(43311LLU,43463LLU,152LLU),_1e1976730_Range16(43464LLU,43465LLU,1LLU),_1e1976730_Range16(43613LLU,43615LLU,1LLU),_1e1976730_Range16(43743LLU,43760LLU,17LLU),_1e1976730_Range16(43761LLU,44011LLU,250LLU),_1e1976730_Range16(65104LLU,65106LLU,1LLU),_1e1976730_Range16(65108LLU,65111LLU,1LLU),_1e1976730_Range16(65281LLU,65292LLU,11LLU),_1e1976730_Range16(65294LLU,65306LLU,12LLU),_1e1976730_Range16(65307LLU,65311LLU,4LLU),_1e1976730_Range16(65377LLU,65380LLU,3LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66463LLU,66512LLU,49LLU),_1e1976730_Range32(67671LLU,67871LLU,200LLU),_1e1976730_Range32(68182LLU,68183LLU,1LLU),_1e1976730_Range32(68336LLU,68341LLU,1LLU),_1e1976730_Range32(68410LLU,68415LLU,1LLU),_1e1976730_Range32(68505LLU,68508LLU,1LLU),_1e1976730_Range32(69461LLU,69465LLU,1LLU),_1e1976730_Range32(69510LLU,69513LLU,1LLU),_1e1976730_Range32(69703LLU,69709LLU,1LLU),_1e1976730_Range32(69822LLU,69825LLU,1LLU),_1e1976730_Range32(69953LLU,69955LLU,1LLU),_1e1976730_Range32(70085LLU,70086LLU,1LLU),_1e1976730_Range32(70093LLU,70110LLU,17LLU),_1e1976730_Range32(70111LLU,70200LLU,89LLU),_1e1976730_Range32(70201LLU,70204LLU,1LLU),_1e1976730_Range32(70313LLU,70731LLU,418LLU),_1e1976730_Range32(70732LLU,70733LLU,1LLU),_1e1976730_Range32(70746LLU,70747LLU,1LLU),_1e1976730_Range32(71106LLU,71109LLU,1LLU),_1e1976730_Range32(71113LLU,71127LLU,1LLU),_1e1976730_Range32(71233LLU,71234LLU,1LLU),_1e1976730_Range32(71484LLU,71486LLU,1LLU),_1e1976730_Range32(72004LLU,72006LLU,2LLU),_1e1976730_Range32(72258LLU,72259LLU,1LLU),_1e1976730_Range32(72347LLU,72348LLU,1LLU),_1e1976730_Range32(72353LLU,72354LLU,1LLU),_1e1976730_Range32(72769LLU,72771LLU,1LLU),_1e1976730_Range32(72817LLU,73463LLU,646LLU),_1e1976730_Range32(73464LLU,73539LLU,75LLU),_1e1976730_Range32(73540LLU,74864LLU,1324LLU),_1e1976730_Range32(74865LLU,74868LLU,1LLU),_1e1976730_Range32(92782LLU,92783LLU,1LLU),_1e1976730_Range32(92917LLU,92983LLU,66LLU),_1e1976730_Range32(92984LLU,92985LLU,1LLU),_1e1976730_Range32(92996LLU,93847LLU,851LLU),_1e1976730_Range32(93848LLU,113823LLU,19975LLU),_1e1976730_Range32(121479LLU,121482LLU,1LLU)}),3LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__UNIFIED_IDEOGRAPH = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(13312LLU,19903LLU,1LLU),_1e1976730_Range16(19968LLU,40959LLU,1LLU),_1e1976730_Range16(64014LLU,64015LLU,1LLU),_1e1976730_Range16(64017LLU,64019LLU,2LLU),_1e1976730_Range16(64020LLU,64031LLU,11LLU),_1e1976730_Range16(64033LLU,64035LLU,2LLU),_1e1976730_Range16(64036LLU,64039LLU,3LLU),_1e1976730_Range16(64040LLU,64041LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(131072LLU,173791LLU,1LLU),_1e1976730_Range32(173824LLU,177977LLU,1LLU),_1e1976730_Range32(177984LLU,178205LLU,1LLU),_1e1976730_Range32(178208LLU,183969LLU,1LLU),_1e1976730_Range32(183984LLU,191456LLU,1LLU),_1e1976730_Range32(196608LLU,201546LLU,1LLU),_1e1976730_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__VARIATION_SELECTOR = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(6155LLU,6157LLU,1LLU),_1e1976730_Range16(6159LLU,65024LLU,58865LLU),_1e1976730_Range16(65025LLU,65039LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b__WHITE_SPACE = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(9LLU,13LLU,1LLU),_1e1976730_Range16(32LLU,133LLU,101LLU),_1e1976730_Range16(160LLU,5760LLU,5600LLU),_1e1976730_Range16(8192LLU,8202LLU,1LLU),_1e1976730_Range16(8232LLU,8233LLU,1LLU),_1e1976730_Range16(8239LLU,8287LLU,48LLU),_1e1976730_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),2LL));
static jule::Array<jule::U16,128> _1e197052b_ASCII_FOLD = jule::Array<jule::U16,128>({0LLU,1LLU,2LLU,3LLU,4LLU,5LLU,6LLU,7LLU,8LLU,9LLU,10LLU,11LLU,12LLU,13LLU,14LLU,15LLU,16LLU,17LLU,18LLU,19LLU,20LLU,21LLU,22LLU,23LLU,24LLU,25LLU,26LLU,27LLU,28LLU,29LLU,30LLU,31LLU,32LLU,33LLU,34LLU,35LLU,36LLU,37LLU,38LLU,39LLU,40LLU,41LLU,42LLU,43LLU,44LLU,45LLU,46LLU,47LLU,48LLU,49LLU,50LLU,51LLU,52LLU,53LLU,54LLU,55LLU,56LLU,57LLU,58LLU,59LLU,60LLU,61LLU,62LLU,63LLU,64LLU,97LLU,98LLU,99LLU,100LLU,101LLU,102LLU,103LLU,104LLU,105LLU,106LLU,107LLU,108LLU,109LLU,110LLU,111LLU,112LLU,113LLU,114LLU,115LLU,116LLU,117LLU,118LLU,119LLU,120LLU,121LLU,122LLU,91LLU,92LLU,93LLU,94LLU,95LLU,96LLU,65LLU,66LLU,67LLU,68LLU,69LLU,70LLU,71LLU,72LLU,73LLU,74LLU,8490LLU,76LLU,77LLU,78LLU,79LLU,80LLU,81LLU,82LLU,383LLU,84LLU,85LLU,86LLU,87LLU,88LLU,89LLU,90LLU,123LLU,124LLU,125LLU,126LLU,127LLU});
static jule::Slice<_1e1976730_FoldPair> _1e197052b_CASE_ORBIT = jule::Slice<_1e1976730_FoldPair>({_1e1976730_FoldPair(75LLU,107LLU),_1e1976730_FoldPair(83LLU,115LLU),_1e1976730_FoldPair(107LLU,8490LLU),_1e1976730_FoldPair(115LLU,383LLU),_1e1976730_FoldPair(181LLU,924LLU),_1e1976730_FoldPair(197LLU,229LLU),_1e1976730_FoldPair(223LLU,7838LLU),_1e1976730_FoldPair(229LLU,8491LLU),_1e1976730_FoldPair(304LLU,304LLU),_1e1976730_FoldPair(305LLU,305LLU),_1e1976730_FoldPair(383LLU,83LLU),_1e1976730_FoldPair(452LLU,453LLU),_1e1976730_FoldPair(453LLU,454LLU),_1e1976730_FoldPair(454LLU,452LLU),_1e1976730_FoldPair(455LLU,456LLU),_1e1976730_FoldPair(456LLU,457LLU),_1e1976730_FoldPair(457LLU,455LLU),_1e1976730_FoldPair(458LLU,459LLU),_1e1976730_FoldPair(459LLU,460LLU),_1e1976730_FoldPair(460LLU,458LLU),_1e1976730_FoldPair(497LLU,498LLU),_1e1976730_FoldPair(498LLU,499LLU),_1e1976730_FoldPair(499LLU,497LLU),_1e1976730_FoldPair(837LLU,921LLU),_1e1976730_FoldPair(914LLU,946LLU),_1e1976730_FoldPair(917LLU,949LLU),_1e1976730_FoldPair(920LLU,952LLU),_1e1976730_FoldPair(921LLU,953LLU),_1e1976730_FoldPair(922LLU,954LLU),_1e1976730_FoldPair(924LLU,956LLU),_1e1976730_FoldPair(928LLU,960LLU),_1e1976730_FoldPair(929LLU,961LLU),_1e1976730_FoldPair(931LLU,962LLU),_1e1976730_FoldPair(934LLU,966LLU),_1e1976730_FoldPair(937LLU,969LLU),_1e1976730_FoldPair(946LLU,976LLU),_1e1976730_FoldPair(949LLU,1013LLU),_1e1976730_FoldPair(952LLU,977LLU),_1e1976730_FoldPair(953LLU,8126LLU),_1e1976730_FoldPair(954LLU,1008LLU),_1e1976730_FoldPair(956LLU,181LLU),_1e1976730_FoldPair(960LLU,982LLU),_1e1976730_FoldPair(961LLU,1009LLU),_1e1976730_FoldPair(962LLU,963LLU),_1e1976730_FoldPair(963LLU,931LLU),_1e1976730_FoldPair(966LLU,981LLU),_1e1976730_FoldPair(969LLU,8486LLU),_1e1976730_FoldPair(976LLU,914LLU),_1e1976730_FoldPair(977LLU,1012LLU),_1e1976730_FoldPair(981LLU,934LLU),_1e1976730_FoldPair(982LLU,928LLU),_1e1976730_FoldPair(1008LLU,922LLU),_1e1976730_FoldPair(1009LLU,929LLU),_1e1976730_FoldPair(1012LLU,920LLU),_1e1976730_FoldPair(1013LLU,917LLU),_1e1976730_FoldPair(1042LLU,1074LLU),_1e1976730_FoldPair(1044LLU,1076LLU),_1e1976730_FoldPair(1054LLU,1086LLU),_1e1976730_FoldPair(1057LLU,1089LLU),_1e1976730_FoldPair(1058LLU,1090LLU),_1e1976730_FoldPair(1066LLU,1098LLU),_1e1976730_FoldPair(1074LLU,7296LLU),_1e1976730_FoldPair(1076LLU,7297LLU),_1e1976730_FoldPair(1086LLU,7298LLU),_1e1976730_FoldPair(1089LLU,7299LLU),_1e1976730_FoldPair(1090LLU,7300LLU),_1e1976730_FoldPair(1098LLU,7302LLU),_1e1976730_FoldPair(1122LLU,1123LLU),_1e1976730_FoldPair(1123LLU,7303LLU),_1e1976730_FoldPair(7296LLU,1042LLU),_1e1976730_FoldPair(7297LLU,1044LLU),_1e1976730_FoldPair(7298LLU,1054LLU),_1e1976730_FoldPair(7299LLU,1057LLU),_1e1976730_FoldPair(7300LLU,7301LLU),_1e1976730_FoldPair(7301LLU,1058LLU),_1e1976730_FoldPair(7302LLU,1066LLU),_1e1976730_FoldPair(7303LLU,1122LLU),_1e1976730_FoldPair(7304LLU,42570LLU),_1e1976730_FoldPair(7776LLU,7777LLU),_1e1976730_FoldPair(7777LLU,7835LLU),_1e1976730_FoldPair(7835LLU,7776LLU),_1e1976730_FoldPair(7838LLU,223LLU),_1e1976730_FoldPair(8126LLU,837LLU),_1e1976730_FoldPair(8486LLU,937LLU),_1e1976730_FoldPair(8490LLU,75LLU),_1e1976730_FoldPair(8491LLU,197LLU),_1e1976730_FoldPair(42570LLU,42571LLU),_1e1976730_FoldPair(42571LLU,7304LLU)});
static jule::Ref<_1e1976730_RangeTable> _1e197052b_FOLD_L = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(837LLU,837LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b_FOLD_LL = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(65LLU,90LLU,1LLU),_1e1976730_Range16(192LLU,214LLU,1LLU),_1e1976730_Range16(216LLU,222LLU,1LLU),_1e1976730_Range16(256LLU,302LLU,2LLU),_1e1976730_Range16(306LLU,310LLU,2LLU),_1e1976730_Range16(313LLU,327LLU,2LLU),_1e1976730_Range16(330LLU,376LLU,2LLU),_1e1976730_Range16(377LLU,381LLU,2LLU),_1e1976730_Range16(385LLU,386LLU,1LLU),_1e1976730_Range16(388LLU,390LLU,2LLU),_1e1976730_Range16(391LLU,393LLU,2LLU),_1e1976730_Range16(394LLU,395LLU,1LLU),_1e1976730_Range16(398LLU,401LLU,1LLU),_1e1976730_Range16(403LLU,404LLU,1LLU),_1e1976730_Range16(406LLU,408LLU,1LLU),_1e1976730_Range16(412LLU,413LLU,1LLU),_1e1976730_Range16(415LLU,416LLU,1LLU),_1e1976730_Range16(418LLU,422LLU,2LLU),_1e1976730_Range16(423LLU,425LLU,2LLU),_1e1976730_Range16(428LLU,430LLU,2LLU),_1e1976730_Range16(431LLU,433LLU,2LLU),_1e1976730_Range16(434LLU,435LLU,1LLU),_1e1976730_Range16(437LLU,439LLU,2LLU),_1e1976730_Range16(440LLU,444LLU,4LLU),_1e1976730_Range16(452LLU,453LLU,1LLU),_1e1976730_Range16(455LLU,456LLU,1LLU),_1e1976730_Range16(458LLU,459LLU,1LLU),_1e1976730_Range16(461LLU,475LLU,2LLU),_1e1976730_Range16(478LLU,494LLU,2LLU),_1e1976730_Range16(497LLU,498LLU,1LLU),_1e1976730_Range16(500LLU,502LLU,2LLU),_1e1976730_Range16(503LLU,504LLU,1LLU),_1e1976730_Range16(506LLU,562LLU,2LLU),_1e1976730_Range16(570LLU,571LLU,1LLU),_1e1976730_Range16(573LLU,574LLU,1LLU),_1e1976730_Range16(577LLU,579LLU,2LLU),_1e1976730_Range16(580LLU,582LLU,1LLU),_1e1976730_Range16(584LLU,590LLU,2LLU),_1e1976730_Range16(837LLU,880LLU,43LLU),_1e1976730_Range16(882LLU,886LLU,4LLU),_1e1976730_Range16(895LLU,902LLU,7LLU),_1e1976730_Range16(904LLU,906LLU,1LLU),_1e1976730_Range16(908LLU,910LLU,2LLU),_1e1976730_Range16(911LLU,913LLU,2LLU),_1e1976730_Range16(914LLU,929LLU,1LLU),_1e1976730_Range16(931LLU,939LLU,1LLU),_1e1976730_Range16(975LLU,984LLU,9LLU),_1e1976730_Range16(986LLU,1006LLU,2LLU),_1e1976730_Range16(1012LLU,1015LLU,3LLU),_1e1976730_Range16(1017LLU,1018LLU,1LLU),_1e1976730_Range16(1021LLU,1071LLU,1LLU),_1e1976730_Range16(1120LLU,1152LLU,2LLU),_1e1976730_Range16(1162LLU,1216LLU,2LLU),_1e1976730_Range16(1217LLU,1229LLU,2LLU),_1e1976730_Range16(1232LLU,1326LLU,2LLU),_1e1976730_Range16(1329LLU,1366LLU,1LLU),_1e1976730_Range16(4256LLU,4293LLU,1LLU),_1e1976730_Range16(4295LLU,4301LLU,6LLU),_1e1976730_Range16(5024LLU,5109LLU,1LLU),_1e1976730_Range16(7312LLU,7354LLU,1LLU),_1e1976730_Range16(7357LLU,7359LLU,1LLU),_1e1976730_Range16(7680LLU,7828LLU,2LLU),_1e1976730_Range16(7838LLU,7934LLU,2LLU),_1e1976730_Range16(7944LLU,7951LLU,1LLU),_1e1976730_Range16(7960LLU,7965LLU,1LLU),_1e1976730_Range16(7976LLU,7983LLU,1LLU),_1e1976730_Range16(7992LLU,7999LLU,1LLU),_1e1976730_Range16(8008LLU,8013LLU,1LLU),_1e1976730_Range16(8025LLU,8031LLU,2LLU),_1e1976730_Range16(8040LLU,8047LLU,1LLU),_1e1976730_Range16(8072LLU,8079LLU,1LLU),_1e1976730_Range16(8088LLU,8095LLU,1LLU),_1e1976730_Range16(8104LLU,8111LLU,1LLU),_1e1976730_Range16(8120LLU,8124LLU,1LLU),_1e1976730_Range16(8136LLU,8140LLU,1LLU),_1e1976730_Range16(8152LLU,8155LLU,1LLU),_1e1976730_Range16(8168LLU,8172LLU,1LLU),_1e1976730_Range16(8184LLU,8188LLU,1LLU),_1e1976730_Range16(8486LLU,8490LLU,4LLU),_1e1976730_Range16(8491LLU,8498LLU,7LLU),_1e1976730_Range16(8579LLU,11264LLU,2685LLU),_1e1976730_Range16(11265LLU,11311LLU,1LLU),_1e1976730_Range16(11360LLU,11362LLU,2LLU),_1e1976730_Range16(11363LLU,11364LLU,1LLU),_1e1976730_Range16(11367LLU,11373LLU,2LLU),_1e1976730_Range16(11374LLU,11376LLU,1LLU),_1e1976730_Range16(11378LLU,11381LLU,3LLU),_1e1976730_Range16(11390LLU,11392LLU,1LLU),_1e1976730_Range16(11394LLU,11490LLU,2LLU),_1e1976730_Range16(11499LLU,11501LLU,2LLU),_1e1976730_Range16(11506LLU,42560LLU,31054LLU),_1e1976730_Range16(42562LLU,42604LLU,2LLU),_1e1976730_Range16(42624LLU,42650LLU,2LLU),_1e1976730_Range16(42786LLU,42798LLU,2LLU),_1e1976730_Range16(42802LLU,42862LLU,2LLU),_1e1976730_Range16(42873LLU,42877LLU,2LLU),_1e1976730_Range16(42878LLU,42886LLU,2LLU),_1e1976730_Range16(42891LLU,42893LLU,2LLU),_1e1976730_Range16(42896LLU,42898LLU,2LLU),_1e1976730_Range16(42902LLU,42922LLU,2LLU),_1e1976730_Range16(42923LLU,42926LLU,1LLU),_1e1976730_Range16(42928LLU,42932LLU,1LLU),_1e1976730_Range16(42934LLU,42948LLU,2LLU),_1e1976730_Range16(42949LLU,42951LLU,1LLU),_1e1976730_Range16(42953LLU,42960LLU,7LLU),_1e1976730_Range16(42966LLU,42968LLU,2LLU),_1e1976730_Range16(42997LLU,65313LLU,22316LLU),_1e1976730_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66560LLU,66599LLU,1LLU),_1e1976730_Range32(66736LLU,66771LLU,1LLU),_1e1976730_Range32(66928LLU,66938LLU,1LLU),_1e1976730_Range32(66940LLU,66954LLU,1LLU),_1e1976730_Range32(66956LLU,66962LLU,1LLU),_1e1976730_Range32(66964LLU,66965LLU,1LLU),_1e1976730_Range32(68736LLU,68786LLU,1LLU),_1e1976730_Range32(71840LLU,71871LLU,1LLU),_1e1976730_Range32(93760LLU,93791LLU,1LLU),_1e1976730_Range32(125184LLU,125217LLU,1LLU)}),3LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b_FOLD_LT = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(452LLU,454LLU,2LLU),_1e1976730_Range16(455LLU,457LLU,2LLU),_1e1976730_Range16(458LLU,460LLU,2LLU),_1e1976730_Range16(497LLU,499LLU,2LLU),_1e1976730_Range16(8064LLU,8071LLU,1LLU),_1e1976730_Range16(8080LLU,8087LLU,1LLU),_1e1976730_Range16(8096LLU,8103LLU,1LLU),_1e1976730_Range16(8115LLU,8131LLU,16LLU),_1e1976730_Range16(8179LLU,8179LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b_FOLD_LU = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(97LLU,122LLU,1LLU),_1e1976730_Range16(181LLU,223LLU,42LLU),_1e1976730_Range16(224LLU,246LLU,1LLU),_1e1976730_Range16(248LLU,255LLU,1LLU),_1e1976730_Range16(257LLU,303LLU,2LLU),_1e1976730_Range16(307LLU,311LLU,2LLU),_1e1976730_Range16(314LLU,328LLU,2LLU),_1e1976730_Range16(331LLU,375LLU,2LLU),_1e1976730_Range16(378LLU,382LLU,2LLU),_1e1976730_Range16(383LLU,384LLU,1LLU),_1e1976730_Range16(387LLU,389LLU,2LLU),_1e1976730_Range16(392LLU,396LLU,4LLU),_1e1976730_Range16(402LLU,405LLU,3LLU),_1e1976730_Range16(409LLU,410LLU,1LLU),_1e1976730_Range16(414LLU,417LLU,3LLU),_1e1976730_Range16(419LLU,421LLU,2LLU),_1e1976730_Range16(424LLU,429LLU,5LLU),_1e1976730_Range16(432LLU,436LLU,4LLU),_1e1976730_Range16(438LLU,441LLU,3LLU),_1e1976730_Range16(445LLU,447LLU,2LLU),_1e1976730_Range16(453LLU,454LLU,1LLU),_1e1976730_Range16(456LLU,457LLU,1LLU),_1e1976730_Range16(459LLU,460LLU,1LLU),_1e1976730_Range16(462LLU,476LLU,2LLU),_1e1976730_Range16(477LLU,495LLU,2LLU),_1e1976730_Range16(498LLU,499LLU,1LLU),_1e1976730_Range16(501LLU,505LLU,4LLU),_1e1976730_Range16(507LLU,543LLU,2LLU),_1e1976730_Range16(547LLU,563LLU,2LLU),_1e1976730_Range16(572LLU,575LLU,3LLU),_1e1976730_Range16(576LLU,578LLU,2LLU),_1e1976730_Range16(583LLU,591LLU,2LLU),_1e1976730_Range16(592LLU,596LLU,1LLU),_1e1976730_Range16(598LLU,599LLU,1LLU),_1e1976730_Range16(601LLU,603LLU,2LLU),_1e1976730_Range16(604LLU,608LLU,4LLU),_1e1976730_Range16(609LLU,613LLU,2LLU),_1e1976730_Range16(614LLU,616LLU,2LLU),_1e1976730_Range16(617LLU,620LLU,1LLU),_1e1976730_Range16(623LLU,625LLU,2LLU),_1e1976730_Range16(626LLU,629LLU,3LLU),_1e1976730_Range16(637LLU,640LLU,3LLU),_1e1976730_Range16(642LLU,643LLU,1LLU),_1e1976730_Range16(647LLU,652LLU,1LLU),_1e1976730_Range16(658LLU,669LLU,11LLU),_1e1976730_Range16(670LLU,837LLU,167LLU),_1e1976730_Range16(881LLU,883LLU,2LLU),_1e1976730_Range16(887LLU,891LLU,4LLU),_1e1976730_Range16(892LLU,893LLU,1LLU),_1e1976730_Range16(940LLU,943LLU,1LLU),_1e1976730_Range16(945LLU,974LLU,1LLU),_1e1976730_Range16(976LLU,977LLU,1LLU),_1e1976730_Range16(981LLU,983LLU,1LLU),_1e1976730_Range16(985LLU,1007LLU,2LLU),_1e1976730_Range16(1008LLU,1011LLU,1LLU),_1e1976730_Range16(1013LLU,1019LLU,3LLU),_1e1976730_Range16(1072LLU,1119LLU,1LLU),_1e1976730_Range16(1121LLU,1153LLU,2LLU),_1e1976730_Range16(1163LLU,1215LLU,2LLU),_1e1976730_Range16(1218LLU,1230LLU,2LLU),_1e1976730_Range16(1231LLU,1327LLU,2LLU),_1e1976730_Range16(1377LLU,1414LLU,1LLU),_1e1976730_Range16(4304LLU,4346LLU,1LLU),_1e1976730_Range16(4349LLU,4351LLU,1LLU),_1e1976730_Range16(5112LLU,5117LLU,1LLU),_1e1976730_Range16(7296LLU,7304LLU,1LLU),_1e1976730_Range16(7545LLU,7549LLU,4LLU),_1e1976730_Range16(7566LLU,7681LLU,115LLU),_1e1976730_Range16(7683LLU,7829LLU,2LLU),_1e1976730_Range16(7835LLU,7841LLU,6LLU),_1e1976730_Range16(7843LLU,7935LLU,2LLU),_1e1976730_Range16(7936LLU,7943LLU,1LLU),_1e1976730_Range16(7952LLU,7957LLU,1LLU),_1e1976730_Range16(7968LLU,7975LLU,1LLU),_1e1976730_Range16(7984LLU,7991LLU,1LLU),_1e1976730_Range16(8000LLU,8005LLU,1LLU),_1e1976730_Range16(8017LLU,8023LLU,2LLU),_1e1976730_Range16(8032LLU,8039LLU,1LLU),_1e1976730_Range16(8048LLU,8061LLU,1LLU),_1e1976730_Range16(8112LLU,8113LLU,1LLU),_1e1976730_Range16(8126LLU,8144LLU,18LLU),_1e1976730_Range16(8145LLU,8160LLU,15LLU),_1e1976730_Range16(8161LLU,8165LLU,4LLU),_1e1976730_Range16(8526LLU,8580LLU,54LLU),_1e1976730_Range16(11312LLU,11359LLU,1LLU),_1e1976730_Range16(11361LLU,11365LLU,4LLU),_1e1976730_Range16(11366LLU,11372LLU,2LLU),_1e1976730_Range16(11379LLU,11382LLU,3LLU),_1e1976730_Range16(11393LLU,11491LLU,2LLU),_1e1976730_Range16(11500LLU,11502LLU,2LLU),_1e1976730_Range16(11507LLU,11520LLU,13LLU),_1e1976730_Range16(11521LLU,11557LLU,1LLU),_1e1976730_Range16(11559LLU,11565LLU,6LLU),_1e1976730_Range16(42561LLU,42605LLU,2LLU),_1e1976730_Range16(42625LLU,42651LLU,2LLU),_1e1976730_Range16(42787LLU,42799LLU,2LLU),_1e1976730_Range16(42803LLU,42863LLU,2LLU),_1e1976730_Range16(42874LLU,42876LLU,2LLU),_1e1976730_Range16(42879LLU,42887LLU,2LLU),_1e1976730_Range16(42892LLU,42897LLU,5LLU),_1e1976730_Range16(42899LLU,42900LLU,1LLU),_1e1976730_Range16(42903LLU,42921LLU,2LLU),_1e1976730_Range16(42933LLU,42947LLU,2LLU),_1e1976730_Range16(42952LLU,42954LLU,2LLU),_1e1976730_Range16(42961LLU,42967LLU,6LLU),_1e1976730_Range16(42969LLU,42998LLU,29LLU),_1e1976730_Range16(43859LLU,43888LLU,29LLU),_1e1976730_Range16(43889LLU,43967LLU,1LLU),_1e1976730_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1e1976730_Range32>({_1e1976730_Range32(66600LLU,66639LLU,1LLU),_1e1976730_Range32(66776LLU,66811LLU,1LLU),_1e1976730_Range32(66967LLU,66977LLU,1LLU),_1e1976730_Range32(66979LLU,66993LLU,1LLU),_1e1976730_Range32(66995LLU,67001LLU,1LLU),_1e1976730_Range32(67003LLU,67004LLU,1LLU),_1e1976730_Range32(68800LLU,68850LLU,1LLU),_1e1976730_Range32(71872LLU,71903LLU,1LLU),_1e1976730_Range32(93792LLU,93823LLU,1LLU),_1e1976730_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ref<_1e1976730_RangeTable> _1e197052b_FOLD_M = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(921LLU,953LLU,32LLU),_1e1976730_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b_FOLD_MN = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(921LLU,953LLU,32LLU),_1e1976730_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b_FOLD_COMMON = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(924LLU,956LLU,32LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b_FOLD_GREEK = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(181LLU,837LLU,656LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Ref<_1e1976730_RangeTable> _1e197052b_FOLD_INHERITED = jule::new_struct<_1e1976730_RangeTable>(new( std::nothrow ) _1e1976730_RangeTable(jule::Slice<_1e1976730_Range16>({_1e1976730_Range16(921LLU,953LLU,32LLU),_1e1976730_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1e1976730_Range32>(),jule::Int()));
static jule::Array<jule::I32,33> _1e15a2bb9_PUNCTS = jule::Array<jule::I32,33>({'!','#','$',',','.','\'','\"',':',';','<','>','=','?','-','+','*','(',')','[',']','{','}','%','&','/','\\','@','^','_','`','|','~',166LL});
static jule::Array<jule::I32,5> _1e15a2bb9_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _1e15a2bb9_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,13> _1e15a2bb9_BIN_OPS = jule::Array<jule::Str,13>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("!", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _1e15a2bb9_WEAK_OPS = jule::Array<jule::Str,2>({jule::Str("...", 3),jule::Str(":", 1)});
static jule::Array<jule::Str,2> _1e15a2bb9_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _1e15a2bb9_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_1e17c9de1_KindPair,46> _1e17c9de1_KEYWORDS = jule::Array<_1e17c9de1_KindPair,46>({_1e17c9de1_KindPair(jule::Str("i8", 2),1LLU),_1e17c9de1_KindPair(jule::Str("i16", 3),1LLU),_1e17c9de1_KindPair(jule::Str("i32", 3),1LLU),_1e17c9de1_KindPair(jule::Str("i64", 3),1LLU),_1e17c9de1_KindPair(jule::Str("u8", 2),1LLU),_1e17c9de1_KindPair(jule::Str("u16", 3),1LLU),_1e17c9de1_KindPair(jule::Str("u32", 3),1LLU),_1e17c9de1_KindPair(jule::Str("u64", 3),1LLU),_1e17c9de1_KindPair(jule::Str("f32", 3),1LLU),_1e17c9de1_KindPair(jule::Str("f64", 3),1LLU),_1e17c9de1_KindPair(jule::Str("uint", 4),1LLU),_1e17c9de1_KindPair(jule::Str("int", 3),1LLU),_1e17c9de1_KindPair(jule::Str("uintptr", 7),1LLU),_1e17c9de1_KindPair(jule::Str("bool", 4),1LLU),_1e17c9de1_KindPair(jule::Str("str", 3),1LLU),_1e17c9de1_KindPair(jule::Str("any", 3),1LLU),_1e17c9de1_KindPair(jule::Str("true", 4),6LLU),_1e17c9de1_KindPair(jule::Str("false", 5),6LLU),_1e17c9de1_KindPair(jule::Str("nil", 3),6LLU),_1e17c9de1_KindPair(jule::Str("const", 5),9LLU),_1e17c9de1_KindPair(jule::Str("ret", 3),4LLU),_1e17c9de1_KindPair(jule::Str("type", 4),10LLU),_1e17c9de1_KindPair(jule::Str("for", 3),12LLU),_1e17c9de1_KindPair(jule::Str("break", 5),13LLU),_1e17c9de1_KindPair(jule::Str("continue", 8),14LLU),_1e17c9de1_KindPair(jule::Str("in", 2),15LLU),_1e17c9de1_KindPair(jule::Str("if", 2),16LLU),_1e17c9de1_KindPair(jule::Str("else", 4),17LLU),_1e17c9de1_KindPair(jule::Str("use", 3),19LLU),_1e17c9de1_KindPair(jule::Str("pub", 3),21LLU),_1e17c9de1_KindPair(jule::Str("goto", 4),22LLU),_1e17c9de1_KindPair(jule::Str("enum", 4),24LLU),_1e17c9de1_KindPair(jule::Str("struct", 6),25LLU),_1e17c9de1_KindPair(jule::Str("co", 2),26LLU),_1e17c9de1_KindPair(jule::Str("match", 5),27LLU),_1e17c9de1_KindPair(jule::Str("self", 4),28LLU),_1e17c9de1_KindPair(jule::Str("trait", 5),29LLU),_1e17c9de1_KindPair(jule::Str("impl", 4),30LLU),_1e17c9de1_KindPair(jule::Str("cpp", 3),31LLU),_1e17c9de1_KindPair(jule::Str("fall", 4),32LLU),_1e17c9de1_KindPair(jule::Str("fn", 2),33LLU),_1e17c9de1_KindPair(jule::Str("let", 3),34LLU),_1e17c9de1_KindPair(jule::Str("unsafe", 6),35LLU),_1e17c9de1_KindPair(jule::Str("mut", 3),36LLU),_1e17c9de1_KindPair(jule::Str("defer", 5),37LLU),_1e17c9de1_KindPair(jule::Str("static", 6),38LLU)});
static jule::Array<_1e17c9de1_KindPair,38> _1e17c9de1_BASIC_OPS = jule::Array<_1e17c9de1_KindPair,38>({_1e17c9de1_KindPair(jule::Str("::", 2),23LLU),_1e17c9de1_KindPair(jule::Str(":", 1),11LLU),_1e17c9de1_KindPair(jule::Str(";", 1),5LLU),_1e17c9de1_KindPair(jule::Str(",", 1),8LLU),_1e17c9de1_KindPair(jule::Str("...", 3),7LLU),_1e17c9de1_KindPair(jule::Str(".", 1),20LLU),_1e17c9de1_KindPair(jule::Str("+=", 2),7LLU),_1e17c9de1_KindPair(jule::Str("-=", 2),7LLU),_1e17c9de1_KindPair(jule::Str("*=", 2),7LLU),_1e17c9de1_KindPair(jule::Str("/=", 2),7LLU),_1e17c9de1_KindPair(jule::Str("%=", 2),7LLU),_1e17c9de1_KindPair(jule::Str("<<=", 3),7LLU),_1e17c9de1_KindPair(jule::Str(">>=", 3),7LLU),_1e17c9de1_KindPair(jule::Str("^=", 2),7LLU),_1e17c9de1_KindPair(jule::Str("&=", 2),7LLU),_1e17c9de1_KindPair(jule::Str("|=", 2),7LLU),_1e17c9de1_KindPair(jule::Str("==", 2),7LLU),_1e17c9de1_KindPair(jule::Str("!=", 2),7LLU),_1e17c9de1_KindPair(jule::Str(">=", 2),7LLU),_1e17c9de1_KindPair(jule::Str("<=", 2),7LLU),_1e17c9de1_KindPair(jule::Str("&&", 2),7LLU),_1e17c9de1_KindPair(jule::Str("||", 2),7LLU),_1e17c9de1_KindPair(jule::Str("<<", 2),7LLU),_1e17c9de1_KindPair(jule::Str(">>", 2),7LLU),_1e17c9de1_KindPair(jule::Str("++", 2),7LLU),_1e17c9de1_KindPair(jule::Str("--", 2),7LLU),_1e17c9de1_KindPair(jule::Str("+", 1),7LLU),_1e17c9de1_KindPair(jule::Str("-", 1),7LLU),_1e17c9de1_KindPair(jule::Str("*", 1),7LLU),_1e17c9de1_KindPair(jule::Str("/", 1),7LLU),_1e17c9de1_KindPair(jule::Str("%", 1),7LLU),_1e17c9de1_KindPair(jule::Str("&", 1),7LLU),_1e17c9de1_KindPair(jule::Str("|", 1),7LLU),_1e17c9de1_KindPair(jule::Str("^", 1),7LLU),_1e17c9de1_KindPair(jule::Str("!", 1),7LLU),_1e17c9de1_KindPair(jule::Str("<", 1),7LLU),_1e17c9de1_KindPair(jule::Str(">", 1),7LLU),_1e17c9de1_KindPair(jule::Str("=", 1),7LLU)});
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_OUT = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns());
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_OUTLN = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns());
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_NEW = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns());
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_DROP = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns());
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_PANIC = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns());
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_MAKE = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns());
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_APPEND = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns());
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_RECOVER = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns());
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_CLONE = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns());
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns());
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns());
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns());
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_REAL = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>(),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_1e1737e81_FnIns> _1a36e0bad_BUILTIN_FN_COPY = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>(),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_1a2db8ce3_TypeAlias> _1a36e0bad_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_1a2db8ce3_TypeAlias>(new( std::nothrow ) _1a2db8ce3_TypeAlias(jule::Ref<_1e16025cb_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1e15a2bb9_Token(),jule::Str(),jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_1a2db8ce3_TypeAlias> _1a36e0bad_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_1a2db8ce3_TypeAlias>(new( std::nothrow ) _1a2db8ce3_TypeAlias(jule::Ref<_1e16025cb_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1e15a2bb9_Token(),jule::Str(),jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_1e2a1e563_Trait> _1a36e0bad_BUILTIN_TRAIT_ERROR = jule::new_struct<_1e2a1e563_Trait>(new( std::nothrow ) _1e2a1e563_Trait(_1e15a2bb9_Token(),jule::Str("Error", 5),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1e1737e81_Fn>>({jule::new_struct_ref<_1e1737e81_Fn>(new( std::nothrow ) _1e1737e81_Fn(jule::Ref<_1e2a7c2a2_Sema>(),_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("error", 5),jule::Slice<jule::Ref<_1e16025cb_Directive>>(),jule::Str(),jule::Ref<_1e16025cb_ScopeTree>(),jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>(),jule::new_struct<_1e1737e81_RetType>(new( std::nothrow ) _1e1737e81_RetType(jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_1e15a2bb9_Token(),jule::Any(jule::new_struct<_1e16025cb_IdentTypeDecl>(new( std::nothrow ) _1e16025cb_IdentTypeDecl(_1e15a2bb9_Token(),jule::Str("str", 3),jule::Bool(),jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>()))))),jule::Ref<_1a2db8ce3_TypeKind>())),jule::Slice<_1e15a2bb9_Token>())),jule::Slice<jule::Ref<_1e1737e81_Param>>({jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_1e177440c_Struct>(),jule::Slice<jule::Ref<_1e1737e81_FnIns>>()))}),jule::Slice<jule::Ref<_1e177440c_Struct>>()));
static jule::Ref<_1e2a1e563_Trait> _1a36e0bad_BUILTIN_TRAIT_DISPOSE = jule::new_struct<_1e2a1e563_Trait>(new( std::nothrow ) _1e2a1e563_Trait(_1e15a2bb9_Token(),jule::Str("Dispose", 7),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1e1737e81_Fn>>({jule::new_struct_ref<_1e1737e81_Fn>(new( std::nothrow ) _1e1737e81_Fn(jule::Ref<_1e2a7c2a2_Sema>(),_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("dispose", 7),jule::Slice<jule::Ref<_1e16025cb_Directive>>(),jule::Str(),jule::Ref<_1e16025cb_ScopeTree>(),jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>(),jule::Ref<_1e1737e81_RetType>(),jule::Slice<jule::Ref<_1e1737e81_Param>>({jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_1e177440c_Struct>(),jule::Slice<jule::Ref<_1e1737e81_FnIns>>()))}),jule::Slice<jule::Ref<_1e177440c_Struct>>()));
static jule::Slice<jule::Str> _1e12e1320_FLAGS = nullptr;
static jule::Slice<jule::Any> _1ec943e0b_deads = nullptr;
static jule::Slice<jule::Any> _1ec943e0b_checking = nullptr;
static jule::Any _1ec943e0b_current = jule::Any(nullptr);
static jule::Any _1ec943e0b_main_current = jule::Any(nullptr);
static jule::Array<jule::Int,12> _1a48b1542_MDAYS = jule::Array<jule::Int,12>({31LL,30LL,31LL,30LL,31LL,31LL,30LL,31LL,30LL,31LL,31LL,29LL});
static jule::Slice<jule::U8> _1a4770896_INDENT = nullptr;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CHAM = _1e197052b__CHAM;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CHEROKEE = _1e197052b__CHEROKEE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CHORASMIAN = _1e197052b__CHORASMIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_COMMON = _1e197052b__COMMON;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_COPTIC = _1e197052b__COPTIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CUNEIFORM = _1e197052b__CUNEIFORM;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CYPRIOT = _1e197052b__CYPRIOT;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CYPRO_MINOAN = _1e197052b__CYPRO_MINOAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CYRILLIC = _1e197052b__CYRILLIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_DESERET = _1e197052b__DESERET;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_DEVANAGARI = _1e197052b__DEVANAGARI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_DIVES_AKURU = _1e197052b__DIVES_AKURU;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_DOGRA = _1e197052b__DOGRA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_DUPLOYAN = _1e197052b__DUPLOYAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_EGYPTIAN_HIEROGLYPHS = _1e197052b__EGYPTIAN_HIEROGLYPHS;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ELBASAN = _1e197052b__ELBASAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ELYMAIC = _1e197052b__ELYMAIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ETHIOPIC = _1e197052b__ETHIOPIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_GEORGIAN = _1e197052b__GEORGIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_GLAGOLITIC = _1e197052b__GLAGOLITIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_GOTHIC = _1e197052b__GOTHIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_GRANTHA = _1e197052b__GRANTHA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_GREEK = _1e197052b__GREEK;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_GUJARATI = _1e197052b__GUJARATI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_GUNJALA_GONDI = _1e197052b__GUNJALA_GONDI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_GURMUKHI = _1e197052b__GURMUKHI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_HAN = _1e197052b__HAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_HANGUL = _1e197052b__HANGUL;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_HANIFI_ROHINGYA = _1e197052b__HANIFI_ROHINGYA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_HANUNOO = _1e197052b__HANUNOO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_HATRAN = _1e197052b__HATRAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_HEBREW = _1e197052b__HEBREW;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_HIRAGANA = _1e197052b__HIRAGANA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_IMPERIAL_ARAMAIC = _1e197052b__IMPERIAL_ARAMAIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_INHERITED = _1e197052b__INHERITED;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_INSCRIPTIONAL_PAHLAVI = _1e197052b__INSCRIPTIONAL_PAHLAVI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_INSCRIPTIONAL_PARTHIAN = _1e197052b__INSCRIPTIONAL_PARTHIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_JAVANESE = _1e197052b__JAVANESE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_KAITHI = _1e197052b__KAITHI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_KANNADA = _1e197052b__KANNADA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_KATAKANA = _1e197052b__KATAKANA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_KAWI = _1e197052b__KAWI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_KAYAH_LI = _1e197052b__KAYAH_LI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_KHAROSHTHI = _1e197052b__KHAROSHTHI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_KHITAN_SMALL_SCRIPT = _1e197052b__KHITAN_SMALL_SCRIPT;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_KHMER = _1e197052b__KHMER;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_KHOJKI = _1e197052b__KHOJKI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_KHUDAWADI = _1e197052b__KHUDAWADI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LAO = _1e197052b__LAO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LATIN = _1e197052b__LATIN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LEPCHA = _1e197052b__LEPCHA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LIMBU = _1e197052b__LIMBU;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LINEAR_A = _1e197052b__LINEAR_A;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LINEAR_B = _1e197052b__LINEAR_B;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LISU = _1e197052b__LISU;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LYCIAN = _1e197052b__LYCIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LYDIAN = _1e197052b__LYDIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MAHAJANI = _1e197052b__MAHAJANI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MAKASAR = _1e197052b__MAKASAR;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MALAYALAM = _1e197052b__MALAYALAM;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MANDAIC = _1e197052b__MANDAIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MANICHAEAN = _1e197052b__MANICHAEAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MARCHEN = _1e197052b__MARCHEN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MASARAM_GONDI = _1e197052b__MASARAM_GONDI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MEDEFAIDRIN = _1e197052b__MEDEFAIDRIN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MEETEI_MAYEK = _1e197052b__MEETEI_MAYEK;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MENDE_KIKAKUI = _1e197052b__MENDE_KIKAKUI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MEROITIC_CURSIVE = _1e197052b__MEROITIC_CURSIVE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MEROITIC_HIEROGLYPHS = _1e197052b__MEROITIC_HIEROGLYPHS;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MIAO = _1e197052b__MIAO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MODI = _1e197052b__MODI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MONGOLIAN = _1e197052b__MONGOLIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MRO = _1e197052b__MRO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MULTANI = _1e197052b__MULTANI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MYANMAR = _1e197052b__MYANMAR;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_NABATAEAN = _1e197052b__NABATAEAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_NAG_MUNDARI = _1e197052b__NAG_MUNDARI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_NANDINAGARI = _1e197052b__NANDINAGARI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_NEW_TAI_LUE = _1e197052b__NEW_TAI_LUE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_NEWA = _1e197052b__NEWA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_NKO = _1e197052b__NKO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_NUSHU = _1e197052b__NUSHU;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_NYIAKENG_PUACHUE_HMONG = _1e197052b__NYIAKENG_PUACHUE_HMONG;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OGHAM = _1e197052b__OGHAM;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OL_CHIKI = _1e197052b__OL_CHIKI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OLD_HUNGARIAN = _1e197052b__OLD_HUNGARIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OLD_ITALIC = _1e197052b__OLD_ITALIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OLD_NORTH_ARABIAN = _1e197052b__OLD_NORTH_ARABIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OLD_PERMIC = _1e197052b__OLD_PERMIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OLD_PERSIAN = _1e197052b__OLD_PERSIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OLD_SOGDIAN = _1e197052b__OLD_SOGDIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OLD_SOUTH_ARABIAN = _1e197052b__OLD_SOUTH_ARABIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OLD_TURKIC = _1e197052b__OLD_TURKIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OLD_UYGHUR = _1e197052b__OLD_UYGHUR;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ORIYA = _1e197052b__ORIYA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OSAGE = _1e197052b__OSAGE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OSMANYA = _1e197052b__OSMANYA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PAHAWH_HMONG = _1e197052b__PAHAWH_HMONG;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PALMYRENE = _1e197052b__PALMYRENE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PAU_CIN_HAU = _1e197052b__PAU_CIN_HAU;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PHAGS_PA = _1e197052b__PHAGS_PA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PHOENICIAN = _1e197052b__PHOENICIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PSALTER_PAHLAVI = _1e197052b__PSALTER_PAHLAVI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_REJANG = _1e197052b__REJANG;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_RUNIC = _1e197052b__RUNIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SAMARITAN = _1e197052b__SAMARITAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SAURASHTRA = _1e197052b__SAURASHTRA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SHARADA = _1e197052b__SHARADA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SHAVIAN = _1e197052b__SHAVIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SIDDHAM = _1e197052b__SIDDHAM;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SIGN_WRITING = _1e197052b__SIGN_WRITING;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SINHALA = _1e197052b__SINHALA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SOGDIAN = _1e197052b__SOGDIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SORA_SOMPENG = _1e197052b__SORA_SOMPENG;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SOYOMBO = _1e197052b__SOYOMBO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SUNDANESE = _1e197052b__SUNDANESE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SYLOTI_NAGRI = _1e197052b__SYLOTI_NAGRI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SYRIAC = _1e197052b__SYRIAC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TAGALOG = _1e197052b__TAGALOG;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TAGBANWA = _1e197052b__TAGBANWA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TAI_LE = _1e197052b__TAI_LE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TAI_THAM = _1e197052b__TAI_THAM;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TAI_VIET = _1e197052b__TAI_VIET;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TAKRI = _1e197052b__TAKRI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TAMIL = _1e197052b__TAMIL;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TANGSA = _1e197052b__TANGSA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TANGUT = _1e197052b__TANGUT;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TELUGU = _1e197052b__TELUGU;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_THAANA = _1e197052b__THAANA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_THAI = _1e197052b__THAI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TIBETAN = _1e197052b__TIBETAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TIFINAGH = _1e197052b__TIFINAGH;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TIRHUTA = _1e197052b__TIRHUTA;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TOTO = _1e197052b__TOTO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_UGARITIC = _1e197052b__UGARITIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_VAI = _1e197052b__VAI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_VITHKUQI = _1e197052b__VITHKUQI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_WANCHO = _1e197052b__WANCHO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_WARANG_CITI = _1e197052b__WARANG_CITI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_YEZIDI = _1e197052b__YEZIDI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_YI = _1e197052b__YI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ZANABAZAR_SQUARE = _1e197052b__ZANABAZAR_SQUARE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_Z = _1e197052b__Z;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SYMBOL = _1e197052b__S;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_S = _1e197052b__S;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TITLE = _1e197052b__LT;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LT = _1e197052b__LT;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_UPPER = _1e197052b__LU;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LU = _1e197052b__LU;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ZL = _1e197052b__ZL;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ZP = _1e197052b__ZP;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ZS = _1e197052b__ZS;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CC = _1e197052b__CC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CF = _1e197052b__CF;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CO = _1e197052b__CO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CS = _1e197052b__CS;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_DIGIT = _1e197052b__ND;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ND = _1e197052b__ND;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LETTER = _1e197052b__L;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_L = _1e197052b__L;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LM = _1e197052b__LM;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LO = _1e197052b__LO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LOWER = _1e197052b__LL;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LL = _1e197052b__LL;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MARK = _1e197052b__M;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ASCII_HEX_DIGIT = _1e197052b__ASCII_HEX_DIGIT;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_BIDI_CONTROL = _1e197052b__BIDI_CONTROL;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_DASH = _1e197052b__DASH;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_DEPRECATED = _1e197052b__DEPRECATED;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_DIACRITIC = _1e197052b__DIACRITIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_EXTENDER = _1e197052b__EXTENDER;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_HEX_DIGIT = _1e197052b__HEX_DIGIT;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_HYPHEN = _1e197052b__HYPHEN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_IDS_BINARY_OPERATOR = _1e197052b__IDS_BINARY_OPERATOR;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_IDS_TRINARY_OPERATOR = _1e197052b__IDS_TRINARY_OPERATOR;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_IDEOGRAPHIC = _1e197052b__IDEOGRAPHIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_JOIN_CONTROL = _1e197052b__JOIN_CONTROL;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_LOGICAL_ORDER_EXCEPTION = _1e197052b__LOGICAL_ORDER_EXCEPTION;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_NONCHARACTER_CODE_POINT = _1e197052b__NONCHARACTER_CODE_POINT;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OTHER_ALPHABETIC = _1e197052b__OTHER_ALPHABETIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OTHER_DEFAULT_IGNORABLE_CODE_POINT = _1e197052b__OTHER_DEFAULT_IGNORABLE_CODE_POINT;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OTHER_GRAPHEME_EXTEND = _1e197052b__OTHER_GRAPHEME_EXTEND;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OTHER_ID_CONTINUE = _1e197052b__OTHER_ID_CONTINUE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OTHER_ID_START = _1e197052b__OTHER_ID_START;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OTHER_LOWERCASE = _1e197052b__OTHER_LOWERCASE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OTHER_MATH = _1e197052b__OTHER_MATH;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OTHER_UPPERCASE = _1e197052b__OTHER_UPPERCASE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PATTERN_SYNTAX = _1e197052b__PATTERN_SYNTAX;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PATTERN_WHITE_SPACE = _1e197052b__PATTERN_WHITE_SPACE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PREPENDED_CONCATENATION_MARK = _1e197052b__PREPENDED_CONCATENATION_MARK;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_QUOTATION_MARK = _1e197052b__QUOTATION_MARK;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_RADICAL = _1e197052b__RADICAL;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_REGIONAL_INDICATOR = _1e197052b__REGIONAL_INDICATOR;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SENTENCE_TERMINAL = _1e197052b__SENTENCE_TERMINAL;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SOFT_DOTTED = _1e197052b__SOFT_DOTTED;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_TERMINAL_PUNCTUATION = _1e197052b__TERMINAL_PUNCTUATION;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_UNIFIED_IDEOGRAPH = _1e197052b__UNIFIED_IDEOGRAPH;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_VARIATION_SELECTOR = _1e197052b__VARIATION_SELECTOR;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_WHITE_SPACE = _1e197052b__WHITE_SPACE;
static jule::Map<jule::Str,jule::Ref<_1e1976730_RangeTable>> _1e197052b_PROPERTIES = jule::Map<jule::Str,jule::Ref<_1e1976730_RangeTable>>({{jule::Str("ASCII_HEX_DIGIT", 15),_1e197052b_ASCII_HEX_DIGIT},{jule::Str("BIDI_CONTROL", 12),_1e197052b_BIDI_CONTROL},{jule::Str("DASH", 4),_1e197052b_DASH},{jule::Str("DEPRECATED", 10),_1e197052b_DEPRECATED},{jule::Str("DIACRITIC", 9),_1e197052b_DIACRITIC},{jule::Str("EXTENDER", 8),_1e197052b_EXTENDER},{jule::Str("HEX_DIGIT", 9),_1e197052b_HEX_DIGIT},{jule::Str("HYPHEN", 6),_1e197052b_HYPHEN},{jule::Str("IDS_BINARY_OPERATOR", 19),_1e197052b_IDS_BINARY_OPERATOR},{jule::Str("IDS_TRINARY_OPERATOR", 20),_1e197052b_IDS_TRINARY_OPERATOR},{jule::Str("IDEOGRAPHIC", 11),_1e197052b_IDEOGRAPHIC},{jule::Str("JOIN_CONTROL", 12),_1e197052b_JOIN_CONTROL},{jule::Str("LOGICAL_ORDER_EXCEPTION", 23),_1e197052b_LOGICAL_ORDER_EXCEPTION},{jule::Str("NONCHARACTER_CODE_POINT", 23),_1e197052b_NONCHARACTER_CODE_POINT},{jule::Str("OTHER_ALPHABETIC", 16),_1e197052b_OTHER_ALPHABETIC},{jule::Str("OTHER_DEFAULT_IGNORABLE_CODE_POINT", 34),_1e197052b_OTHER_DEFAULT_IGNORABLE_CODE_POINT},{jule::Str("OTHER_GRAPHEME_EXTEND", 21),_1e197052b_OTHER_GRAPHEME_EXTEND},{jule::Str("OTHER_ID_CONTINUE", 17),_1e197052b_OTHER_ID_CONTINUE},{jule::Str("OTHER_ID_START", 14),_1e197052b_OTHER_ID_START},{jule::Str("OTHER_LOWERCASE", 15),_1e197052b_OTHER_LOWERCASE},{jule::Str("OTHER_MATH", 10),_1e197052b_OTHER_MATH},{jule::Str("OTHER_UPPERCASE", 15),_1e197052b_OTHER_UPPERCASE},{jule::Str("PATTERN_SYNTAX", 14),_1e197052b_PATTERN_SYNTAX},{jule::Str("PATTERN_WHITE_SPACE", 19),_1e197052b_PATTERN_WHITE_SPACE},{jule::Str("PREPENDED_CONCATENATION_MARK", 28),_1e197052b_PREPENDED_CONCATENATION_MARK},{jule::Str("QUOTATION_MARK", 14),_1e197052b_QUOTATION_MARK},{jule::Str("RADICAL", 7),_1e197052b_RADICAL},{jule::Str("REGIONAL_INDICATOR", 18),_1e197052b_REGIONAL_INDICATOR},{jule::Str("SENTENCE_TERMINAL", 17),_1e197052b_SENTENCE_TERMINAL},{jule::Str("SOFT_DOTTED", 11),_1e197052b_SOFT_DOTTED},{jule::Str("TERMINAL_PUNCTUATION", 20),_1e197052b_TERMINAL_PUNCTUATION},{jule::Str("UNIFIED_IDEOGRAPH", 17),_1e197052b_UNIFIED_IDEOGRAPH},{jule::Str("VARIATION_SELECTOR", 18),_1e197052b_VARIATION_SELECTOR},{jule::Str("WHITE_SPACE", 11),_1e197052b_WHITE_SPACE}});
static jule::Ref<_1e1976730_RangeTable> _1e197052b_M = _1e197052b__M;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MC = _1e197052b__MC;
static jule::Map<jule::Str,jule::Ref<_1e1976730_RangeTable>> _1e197052b_FOLD_CATEGORY = jule::Map<jule::Str,jule::Ref<_1e1976730_RangeTable>>({{jule::Str("L", 1),_1e197052b_FOLD_L},{jule::Str("LL", 2),_1e197052b_FOLD_LL},{jule::Str("LT", 2),_1e197052b_FOLD_LT},{jule::Str("LU", 2),_1e197052b_FOLD_LU},{jule::Str("M", 1),_1e197052b_FOLD_M},{jule::Str("MN", 2),_1e197052b_FOLD_MN}});
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ME = _1e197052b__ME;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_MN = _1e197052b__MN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_NL = _1e197052b__NL;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_NO = _1e197052b__NO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_NUMBER = _1e197052b__N;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_N = _1e197052b__N;
static jule::Map<jule::Str,jule::Ref<_1e1976730_RangeTable>> _1e197052b_FOLD_SCRIPT = jule::Map<jule::Str,jule::Ref<_1e1976730_RangeTable>>({{jule::Str("Common", 6),_1e197052b_FOLD_COMMON},{jule::Str("Greek", 5),_1e197052b_FOLD_GREEK},{jule::Str("Inherited", 9),_1e197052b_FOLD_INHERITED}});
static jule::Ref<_1e1976730_RangeTable> _1e197052b_OTHER = _1e197052b__C;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_C = _1e197052b__C;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PC = _1e197052b__PC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PD = _1e197052b__PD;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PE = _1e197052b__PE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PF = _1e197052b__PF;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PI = _1e197052b__PI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PO = _1e197052b__PO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PS = _1e197052b__PS;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_PUNCT = _1e197052b__P;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_P = _1e197052b__P;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SC = _1e197052b__SC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SK = _1e197052b__SK;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SM = _1e197052b__SM;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SO = _1e197052b__SO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_SPACE = _1e197052b__Z;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ADLAM = _1e197052b__ADLAM;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_AHOM = _1e197052b__AHOM;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ANATOLIAN_HIEROGLYPHS = _1e197052b__ANATOLIAN_HIEROGLYPHS;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ARABIC = _1e197052b__ARABIC;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_ARMENIAN = _1e197052b__ARMENIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_AVESTAN = _1e197052b__AVESTAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_BALINESE = _1e197052b__BALINESE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_BAMUM = _1e197052b__BAMUM;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_BASSA_VAH = _1e197052b__BASSA_VAH;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_BATAK = _1e197052b__BATAK;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_BENGALI = _1e197052b__BENGALI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_BHAIKSUKI = _1e197052b__BHAIKSUKI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_BOPOMOFO = _1e197052b__BOPOMOFO;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_BRAHMI = _1e197052b__BRAHMI;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_BRAILLE = _1e197052b__BRAILLE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_BUGINESE = _1e197052b__BUGINESE;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_BUHID = _1e197052b__BUHID;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CANADIAN_ABORIGINAL = _1e197052b__CANADIAN_ABORIGINAL;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CARIAN = _1e197052b__CARIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CAUCASIAN_ALBANIAN = _1e197052b__CAUCASIAN_ALBANIAN;
static jule::Ref<_1e1976730_RangeTable> _1e197052b_CHAKMA = _1e197052b__CHAKMA;
static jule::Uintptr _1d40585a0_STDIN = static_cast<jule::Uintptr>(_1d40585a0_get_std_handle(static_cast<jule::Uintptr>(18446744073709551606LLU)));
static jule::Str _1ec94303c_OS = jule::Str("windows", 7);
static jule::Str _1ec94303c_ARCH = jule::Str("i386", 4);
static jule::Slice<_1e1976730_CaseRange> _1e197052b__CASE_RANGES = jule::Slice<_1e1976730_CaseRange>({_1e1976730_CaseRange(65LLU,90LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1e1976730_CaseRange(97LLU,122LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1e1976730_CaseRange(181LLU,181LLU,jule::Array<jule::I32,3>({743LL,0LL,743LL})),_1e1976730_CaseRange(192LLU,214LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1e1976730_CaseRange(216LLU,222LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1e1976730_CaseRange(224LLU,246LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1e1976730_CaseRange(248LLU,254LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1e1976730_CaseRange(255LLU,255LLU,jule::Array<jule::I32,3>({121LL,0LL,121LL})),_1e1976730_CaseRange(256LLU,303LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(304LLU,304LLU,jule::Array<jule::I32,3>({0LL,-199LL,0LL})),_1e1976730_CaseRange(305LLU,305LLU,jule::Array<jule::I32,3>({-232LL,0LL,-232LL})),_1e1976730_CaseRange(306LLU,311LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(313LLU,328LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(330LLU,375LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(376LLU,376LLU,jule::Array<jule::I32,3>({0LL,-121LL,0LL})),_1e1976730_CaseRange(377LLU,382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(383LLU,383LLU,jule::Array<jule::I32,3>({-300LL,0LL,-300LL})),_1e1976730_CaseRange(384LLU,384LLU,jule::Array<jule::I32,3>({195LL,0LL,195LL})),_1e1976730_CaseRange(385LLU,385LLU,jule::Array<jule::I32,3>({0LL,210LL,0LL})),_1e1976730_CaseRange(386LLU,389LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(390LLU,390LLU,jule::Array<jule::I32,3>({0LL,206LL,0LL})),_1e1976730_CaseRange(391LLU,392LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(393LLU,394LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_1e1976730_CaseRange(395LLU,396LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(398LLU,398LLU,jule::Array<jule::I32,3>({0LL,79LL,0LL})),_1e1976730_CaseRange(399LLU,399LLU,jule::Array<jule::I32,3>({0LL,202LL,0LL})),_1e1976730_CaseRange(400LLU,400LLU,jule::Array<jule::I32,3>({0LL,203LL,0LL})),_1e1976730_CaseRange(401LLU,402LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(403LLU,403LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_1e1976730_CaseRange(404LLU,404LLU,jule::Array<jule::I32,3>({0LL,207LL,0LL})),_1e1976730_CaseRange(405LLU,405LLU,jule::Array<jule::I32,3>({97LL,0LL,97LL})),_1e1976730_CaseRange(406LLU,406LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_1e1976730_CaseRange(407LLU,407LLU,jule::Array<jule::I32,3>({0LL,209LL,0LL})),_1e1976730_CaseRange(408LLU,409LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(410LLU,410LLU,jule::Array<jule::I32,3>({163LL,0LL,163LL})),_1e1976730_CaseRange(412LLU,412LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_1e1976730_CaseRange(413LLU,413LLU,jule::Array<jule::I32,3>({0LL,213LL,0LL})),_1e1976730_CaseRange(414LLU,414LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_1e1976730_CaseRange(415LLU,415LLU,jule::Array<jule::I32,3>({0LL,214LL,0LL})),_1e1976730_CaseRange(416LLU,421LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(422LLU,422LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1e1976730_CaseRange(423LLU,424LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(425LLU,425LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1e1976730_CaseRange(428LLU,429LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(430LLU,430LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1e1976730_CaseRange(431LLU,432LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(433LLU,434LLU,jule::Array<jule::I32,3>({0LL,217LL,0LL})),_1e1976730_CaseRange(435LLU,438LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(439LLU,439LLU,jule::Array<jule::I32,3>({0LL,219LL,0LL})),_1e1976730_CaseRange(440LLU,441LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(444LLU,445LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(447LLU,447LLU,jule::Array<jule::I32,3>({56LL,0LL,56LL})),_1e1976730_CaseRange(452LLU,452LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1e1976730_CaseRange(453LLU,453LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1e1976730_CaseRange(454LLU,454LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1e1976730_CaseRange(455LLU,455LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1e1976730_CaseRange(456LLU,456LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1e1976730_CaseRange(457LLU,457LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1e1976730_CaseRange(458LLU,458LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1e1976730_CaseRange(459LLU,459LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1e1976730_CaseRange(460LLU,460LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1e1976730_CaseRange(461LLU,476LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(477LLU,477LLU,jule::Array<jule::I32,3>({-79LL,0LL,-79LL})),_1e1976730_CaseRange(478LLU,495LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(497LLU,497LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1e1976730_CaseRange(498LLU,498LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1e1976730_CaseRange(499LLU,499LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1e1976730_CaseRange(500LLU,501LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(502LLU,502LLU,jule::Array<jule::I32,3>({0LL,-97LL,0LL})),_1e1976730_CaseRange(503LLU,503LLU,jule::Array<jule::I32,3>({0LL,-56LL,0LL})),_1e1976730_CaseRange(504LLU,543LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(544LLU,544LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_1e1976730_CaseRange(546LLU,563LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(570LLU,570LLU,jule::Array<jule::I32,3>({0LL,10795LL,0LL})),_1e1976730_CaseRange(571LLU,572LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(573LLU,573LLU,jule::Array<jule::I32,3>({0LL,-163LL,0LL})),_1e1976730_CaseRange(574LLU,574LLU,jule::Array<jule::I32,3>({0LL,10792LL,0LL})),_1e1976730_CaseRange(575LLU,576LLU,jule::Array<jule::I32,3>({10815LL,0LL,10815LL})),_1e1976730_CaseRange(577LLU,578LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(579LLU,579LLU,jule::Array<jule::I32,3>({0LL,-195LL,0LL})),_1e1976730_CaseRange(580LLU,580LLU,jule::Array<jule::I32,3>({0LL,69LL,0LL})),_1e1976730_CaseRange(581LLU,581LLU,jule::Array<jule::I32,3>({0LL,71LL,0LL})),_1e1976730_CaseRange(582LLU,591LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(592LLU,592LLU,jule::Array<jule::I32,3>({10783LL,0LL,10783LL})),_1e1976730_CaseRange(593LLU,593LLU,jule::Array<jule::I32,3>({10780LL,0LL,10780LL})),_1e1976730_CaseRange(594LLU,594LLU,jule::Array<jule::I32,3>({10782LL,0LL,10782LL})),_1e1976730_CaseRange(595LLU,595LLU,jule::Array<jule::I32,3>({-210LL,0LL,-210LL})),_1e1976730_CaseRange(596LLU,596LLU,jule::Array<jule::I32,3>({-206LL,0LL,-206LL})),_1e1976730_CaseRange(598LLU,599LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_1e1976730_CaseRange(601LLU,601LLU,jule::Array<jule::I32,3>({-202LL,0LL,-202LL})),_1e1976730_CaseRange(603LLU,603LLU,jule::Array<jule::I32,3>({-203LL,0LL,-203LL})),_1e1976730_CaseRange(604LLU,604LLU,jule::Array<jule::I32,3>({42319LL,0LL,42319LL})),_1e1976730_CaseRange(608LLU,608LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_1e1976730_CaseRange(609LLU,609LLU,jule::Array<jule::I32,3>({42315LL,0LL,42315LL})),_1e1976730_CaseRange(611LLU,611LLU,jule::Array<jule::I32,3>({-207LL,0LL,-207LL})),_1e1976730_CaseRange(613LLU,613LLU,jule::Array<jule::I32,3>({42280LL,0LL,42280LL})),_1e1976730_CaseRange(614LLU,614LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_1e1976730_CaseRange(616LLU,616LLU,jule::Array<jule::I32,3>({-209LL,0LL,-209LL})),_1e1976730_CaseRange(617LLU,617LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_1e1976730_CaseRange(618LLU,618LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_1e1976730_CaseRange(619LLU,619LLU,jule::Array<jule::I32,3>({10743LL,0LL,10743LL})),_1e1976730_CaseRange(620LLU,620LLU,jule::Array<jule::I32,3>({42305LL,0LL,42305LL})),_1e1976730_CaseRange(623LLU,623LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_1e1976730_CaseRange(625LLU,625LLU,jule::Array<jule::I32,3>({10749LL,0LL,10749LL})),_1e1976730_CaseRange(626LLU,626LLU,jule::Array<jule::I32,3>({-213LL,0LL,-213LL})),_1e1976730_CaseRange(629LLU,629LLU,jule::Array<jule::I32,3>({-214LL,0LL,-214LL})),_1e1976730_CaseRange(637LLU,637LLU,jule::Array<jule::I32,3>({10727LL,0LL,10727LL})),_1e1976730_CaseRange(640LLU,640LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1e1976730_CaseRange(642LLU,642LLU,jule::Array<jule::I32,3>({42307LL,0LL,42307LL})),_1e1976730_CaseRange(643LLU,643LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1e1976730_CaseRange(647LLU,647LLU,jule::Array<jule::I32,3>({42282LL,0LL,42282LL})),_1e1976730_CaseRange(648LLU,648LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1e1976730_CaseRange(649LLU,649LLU,jule::Array<jule::I32,3>({-69LL,0LL,-69LL})),_1e1976730_CaseRange(650LLU,651LLU,jule::Array<jule::I32,3>({-217LL,0LL,-217LL})),_1e1976730_CaseRange(652LLU,652LLU,jule::Array<jule::I32,3>({-71LL,0LL,-71LL})),_1e1976730_CaseRange(658LLU,658LLU,jule::Array<jule::I32,3>({-219LL,0LL,-219LL})),_1e1976730_CaseRange(669LLU,669LLU,jule::Array<jule::I32,3>({42261LL,0LL,42261LL})),_1e1976730_CaseRange(670LLU,670LLU,jule::Array<jule::I32,3>({42258LL,0LL,42258LL})),_1e1976730_CaseRange(837LLU,837LLU,jule::Array<jule::I32,3>({84LL,0LL,84LL})),_1e1976730_CaseRange(880LLU,883LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(886LLU,887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(891LLU,893LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_1e1976730_CaseRange(895LLU,895LLU,jule::Array<jule::I32,3>({0LL,116LL,0LL})),_1e1976730_CaseRange(902LLU,902LLU,jule::Array<jule::I32,3>({0LL,38LL,0LL})),_1e1976730_CaseRange(904LLU,906LLU,jule::Array<jule::I32,3>({0LL,37LL,0LL})),_1e1976730_CaseRange(908LLU,908LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_1e1976730_CaseRange(910LLU,911LLU,jule::Array<jule::I32,3>({0LL,63LL,0LL})),_1e1976730_CaseRange(913LLU,929LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1e1976730_CaseRange(931LLU,939LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1e1976730_CaseRange(940LLU,940LLU,jule::Array<jule::I32,3>({-38LL,0LL,-38LL})),_1e1976730_CaseRange(941LLU,943LLU,jule::Array<jule::I32,3>({-37LL,0LL,-37LL})),_1e1976730_CaseRange(945LLU,961LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1e1976730_CaseRange(962LLU,962LLU,jule::Array<jule::I32,3>({-31LL,0LL,-31LL})),_1e1976730_CaseRange(963LLU,971LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1e1976730_CaseRange(972LLU,972LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_1e1976730_CaseRange(973LLU,974LLU,jule::Array<jule::I32,3>({-63LL,0LL,-63LL})),_1e1976730_CaseRange(975LLU,975LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_1e1976730_CaseRange(976LLU,976LLU,jule::Array<jule::I32,3>({-62LL,0LL,-62LL})),_1e1976730_CaseRange(977LLU,977LLU,jule::Array<jule::I32,3>({-57LL,0LL,-57LL})),_1e1976730_CaseRange(981LLU,981LLU,jule::Array<jule::I32,3>({-47LL,0LL,-47LL})),_1e1976730_CaseRange(982LLU,982LLU,jule::Array<jule::I32,3>({-54LL,0LL,-54LL})),_1e1976730_CaseRange(983LLU,983LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_1e1976730_CaseRange(984LLU,1007LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(1008LLU,1008LLU,jule::Array<jule::I32,3>({-86LL,0LL,-86LL})),_1e1976730_CaseRange(1009LLU,1009LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_1e1976730_CaseRange(1010LLU,1010LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_1e1976730_CaseRange(1011LLU,1011LLU,jule::Array<jule::I32,3>({-116LL,0LL,-116LL})),_1e1976730_CaseRange(1012LLU,1012LLU,jule::Array<jule::I32,3>({0LL,-60LL,0LL})),_1e1976730_CaseRange(1013LLU,1013LLU,jule::Array<jule::I32,3>({-96LL,0LL,-96LL})),_1e1976730_CaseRange(1015LLU,1016LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(1017LLU,1017LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_1e1976730_CaseRange(1018LLU,1019LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(1021LLU,1023LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_1e1976730_CaseRange(1024LLU,1039LLU,jule::Array<jule::I32,3>({0LL,80LL,0LL})),_1e1976730_CaseRange(1040LLU,1071LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1e1976730_CaseRange(1072LLU,1103LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1e1976730_CaseRange(1104LLU,1119LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_1e1976730_CaseRange(1120LLU,1153LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(1162LLU,1215LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(1216LLU,1216LLU,jule::Array<jule::I32,3>({0LL,15LL,0LL})),_1e1976730_CaseRange(1217LLU,1230LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(1231LLU,1231LLU,jule::Array<jule::I32,3>({-15LL,0LL,-15LL})),_1e1976730_CaseRange(1232LLU,1327LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(1329LLU,1366LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_1e1976730_CaseRange(1377LLU,1414LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_1e1976730_CaseRange(4256LLU,4293LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1e1976730_CaseRange(4295LLU,4295LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1e1976730_CaseRange(4301LLU,4301LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1e1976730_CaseRange(4304LLU,4346LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_1e1976730_CaseRange(4349LLU,4351LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_1e1976730_CaseRange(5024LLU,5103LLU,jule::Array<jule::I32,3>({0LL,38864LL,0LL})),_1e1976730_CaseRange(5104LLU,5109LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_1e1976730_CaseRange(5112LLU,5117LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_1e1976730_CaseRange(7296LLU,7296LLU,jule::Array<jule::I32,3>({-6254LL,0LL,-6254LL})),_1e1976730_CaseRange(7297LLU,7297LLU,jule::Array<jule::I32,3>({-6253LL,0LL,-6253LL})),_1e1976730_CaseRange(7298LLU,7298LLU,jule::Array<jule::I32,3>({-6244LL,0LL,-6244LL})),_1e1976730_CaseRange(7299LLU,7300LLU,jule::Array<jule::I32,3>({-6242LL,0LL,-6242LL})),_1e1976730_CaseRange(7301LLU,7301LLU,jule::Array<jule::I32,3>({-6243LL,0LL,-6243LL})),_1e1976730_CaseRange(7302LLU,7302LLU,jule::Array<jule::I32,3>({-6236LL,0LL,-6236LL})),_1e1976730_CaseRange(7303LLU,7303LLU,jule::Array<jule::I32,3>({-6181LL,0LL,-6181LL})),_1e1976730_CaseRange(7304LLU,7304LLU,jule::Array<jule::I32,3>({35266LL,0LL,35266LL})),_1e1976730_CaseRange(7312LLU,7354LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_1e1976730_CaseRange(7357LLU,7359LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_1e1976730_CaseRange(7545LLU,7545LLU,jule::Array<jule::I32,3>({35332LL,0LL,35332LL})),_1e1976730_CaseRange(7549LLU,7549LLU,jule::Array<jule::I32,3>({3814LL,0LL,3814LL})),_1e1976730_CaseRange(7566LLU,7566LLU,jule::Array<jule::I32,3>({35384LL,0LL,35384LL})),_1e1976730_CaseRange(7680LLU,7829LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(7835LLU,7835LLU,jule::Array<jule::I32,3>({-59LL,0LL,-59LL})),_1e1976730_CaseRange(7838LLU,7838LLU,jule::Array<jule::I32,3>({0LL,-7615LL,0LL})),_1e1976730_CaseRange(7840LLU,7935LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(7936LLU,7943LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(7944LLU,7951LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(7952LLU,7957LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(7960LLU,7965LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(7968LLU,7975LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(7976LLU,7983LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(7984LLU,7991LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(7992LLU,7999LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8000LLU,8005LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(8008LLU,8013LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8017LLU,8017LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(8019LLU,8019LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(8021LLU,8021LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(8023LLU,8023LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(8025LLU,8025LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8027LLU,8027LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8029LLU,8029LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8031LLU,8031LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8032LLU,8039LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(8040LLU,8047LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8048LLU,8049LLU,jule::Array<jule::I32,3>({74LL,0LL,74LL})),_1e1976730_CaseRange(8050LLU,8053LLU,jule::Array<jule::I32,3>({86LL,0LL,86LL})),_1e1976730_CaseRange(8054LLU,8055LLU,jule::Array<jule::I32,3>({100LL,0LL,100LL})),_1e1976730_CaseRange(8056LLU,8057LLU,jule::Array<jule::I32,3>({128LL,0LL,128LL})),_1e1976730_CaseRange(8058LLU,8059LLU,jule::Array<jule::I32,3>({112LL,0LL,112LL})),_1e1976730_CaseRange(8060LLU,8061LLU,jule::Array<jule::I32,3>({126LL,0LL,126LL})),_1e1976730_CaseRange(8064LLU,8071LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(8072LLU,8079LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8080LLU,8087LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(8088LLU,8095LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8096LLU,8103LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(8104LLU,8111LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8112LLU,8113LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(8115LLU,8115LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1e1976730_CaseRange(8120LLU,8121LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8122LLU,8123LLU,jule::Array<jule::I32,3>({0LL,-74LL,0LL})),_1e1976730_CaseRange(8124LLU,8124LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1e1976730_CaseRange(8126LLU,8126LLU,jule::Array<jule::I32,3>({-7205LL,0LL,-7205LL})),_1e1976730_CaseRange(8131LLU,8131LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1e1976730_CaseRange(8136LLU,8139LLU,jule::Array<jule::I32,3>({0LL,-86LL,0LL})),_1e1976730_CaseRange(8140LLU,8140LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1e1976730_CaseRange(8144LLU,8145LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(8152LLU,8153LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8154LLU,8155LLU,jule::Array<jule::I32,3>({0LL,-100LL,0LL})),_1e1976730_CaseRange(8160LLU,8161LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1e1976730_CaseRange(8165LLU,8165LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_1e1976730_CaseRange(8168LLU,8169LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1e1976730_CaseRange(8170LLU,8171LLU,jule::Array<jule::I32,3>({0LL,-112LL,0LL})),_1e1976730_CaseRange(8172LLU,8172LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_1e1976730_CaseRange(8179LLU,8179LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1e1976730_CaseRange(8184LLU,8185LLU,jule::Array<jule::I32,3>({0LL,-128LL,0LL})),_1e1976730_CaseRange(8186LLU,8187LLU,jule::Array<jule::I32,3>({0LL,-126LL,0LL})),_1e1976730_CaseRange(8188LLU,8188LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1e1976730_CaseRange(8486LLU,8486LLU,jule::Array<jule::I32,3>({0LL,-7517LL,0LL})),_1e1976730_CaseRange(8490LLU,8490LLU,jule::Array<jule::I32,3>({0LL,-8383LL,0LL})),_1e1976730_CaseRange(8491LLU,8491LLU,jule::Array<jule::I32,3>({0LL,-8262LL,0LL})),_1e1976730_CaseRange(8498LLU,8498LLU,jule::Array<jule::I32,3>({0LL,28LL,0LL})),_1e1976730_CaseRange(8526LLU,8526LLU,jule::Array<jule::I32,3>({-28LL,0LL,-28LL})),_1e1976730_CaseRange(8544LLU,8559LLU,jule::Array<jule::I32,3>({0LL,16LL,0LL})),_1e1976730_CaseRange(8560LLU,8575LLU,jule::Array<jule::I32,3>({-16LL,0LL,-16LL})),_1e1976730_CaseRange(8579LLU,8580LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(9398LLU,9423LLU,jule::Array<jule::I32,3>({0LL,26LL,0LL})),_1e1976730_CaseRange(9424LLU,9449LLU,jule::Array<jule::I32,3>({-26LL,0LL,-26LL})),_1e1976730_CaseRange(11264LLU,11311LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_1e1976730_CaseRange(11312LLU,11359LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_1e1976730_CaseRange(11360LLU,11361LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(11362LLU,11362LLU,jule::Array<jule::I32,3>({0LL,-10743LL,0LL})),_1e1976730_CaseRange(11363LLU,11363LLU,jule::Array<jule::I32,3>({0LL,-3814LL,0LL})),_1e1976730_CaseRange(11364LLU,11364LLU,jule::Array<jule::I32,3>({0LL,-10727LL,0LL})),_1e1976730_CaseRange(11365LLU,11365LLU,jule::Array<jule::I32,3>({-10795LL,0LL,-10795LL})),_1e1976730_CaseRange(11366LLU,11366LLU,jule::Array<jule::I32,3>({-10792LL,0LL,-10792LL})),_1e1976730_CaseRange(11367LLU,11372LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(11373LLU,11373LLU,jule::Array<jule::I32,3>({0LL,-10780LL,0LL})),_1e1976730_CaseRange(11374LLU,11374LLU,jule::Array<jule::I32,3>({0LL,-10749LL,0LL})),_1e1976730_CaseRange(11375LLU,11375LLU,jule::Array<jule::I32,3>({0LL,-10783LL,0LL})),_1e1976730_CaseRange(11376LLU,11376LLU,jule::Array<jule::I32,3>({0LL,-10782LL,0LL})),_1e1976730_CaseRange(11378LLU,11379LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(11381LLU,11382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(11390LLU,11391LLU,jule::Array<jule::I32,3>({0LL,-10815LL,0LL})),_1e1976730_CaseRange(11392LLU,11491LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(11499LLU,11502LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(11506LLU,11507LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(11520LLU,11557LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1e1976730_CaseRange(11559LLU,11559LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1e1976730_CaseRange(11565LLU,11565LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1e1976730_CaseRange(42560LLU,42605LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42624LLU,42651LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42786LLU,42799LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42802LLU,42863LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42873LLU,42876LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42877LLU,42877LLU,jule::Array<jule::I32,3>({0LL,-35332LL,0LL})),_1e1976730_CaseRange(42878LLU,42887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42891LLU,42892LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42893LLU,42893LLU,jule::Array<jule::I32,3>({0LL,-42280LL,0LL})),_1e1976730_CaseRange(42896LLU,42899LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42900LLU,42900LLU,jule::Array<jule::I32,3>({48LL,0LL,48LL})),_1e1976730_CaseRange(42902LLU,42921LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42922LLU,42922LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_1e1976730_CaseRange(42923LLU,42923LLU,jule::Array<jule::I32,3>({0LL,-42319LL,0LL})),_1e1976730_CaseRange(42924LLU,42924LLU,jule::Array<jule::I32,3>({0LL,-42315LL,0LL})),_1e1976730_CaseRange(42925LLU,42925LLU,jule::Array<jule::I32,3>({0LL,-42305LL,0LL})),_1e1976730_CaseRange(42926LLU,42926LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_1e1976730_CaseRange(42928LLU,42928LLU,jule::Array<jule::I32,3>({0LL,-42258LL,0LL})),_1e1976730_CaseRange(42929LLU,42929LLU,jule::Array<jule::I32,3>({0LL,-42282LL,0LL})),_1e1976730_CaseRange(42930LLU,42930LLU,jule::Array<jule::I32,3>({0LL,-42261LL,0LL})),_1e1976730_CaseRange(42931LLU,42931LLU,jule::Array<jule::I32,3>({0LL,928LL,0LL})),_1e1976730_CaseRange(42932LLU,42947LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42948LLU,42948LLU,jule::Array<jule::I32,3>({0LL,-48LL,0LL})),_1e1976730_CaseRange(42949LLU,42949LLU,jule::Array<jule::I32,3>({0LL,-42307LL,0LL})),_1e1976730_CaseRange(42950LLU,42950LLU,jule::Array<jule::I32,3>({0LL,-35384LL,0LL})),_1e1976730_CaseRange(42951LLU,42954LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42960LLU,42961LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42966LLU,42969LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(42997LLU,42998LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1e1976730_CaseRange(43859LLU,43859LLU,jule::Array<jule::I32,3>({-928LL,0LL,-928LL})),_1e1976730_CaseRange(43888LLU,43967LLU,jule::Array<jule::I32,3>({-38864LL,0LL,-38864LL})),_1e1976730_CaseRange(65313LLU,65338LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1e1976730_CaseRange(65345LLU,65370LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1e1976730_CaseRange(66560LLU,66599LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_1e1976730_CaseRange(66600LLU,66639LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_1e1976730_CaseRange(66736LLU,66771LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_1e1976730_CaseRange(66776LLU,66811LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_1e1976730_CaseRange(66928LLU,66938LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1e1976730_CaseRange(66940LLU,66954LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1e1976730_CaseRange(66956LLU,66962LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1e1976730_CaseRange(66964LLU,66965LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1e1976730_CaseRange(66967LLU,66977LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1e1976730_CaseRange(66979LLU,66993LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1e1976730_CaseRange(66995LLU,67001LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1e1976730_CaseRange(67003LLU,67004LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1e1976730_CaseRange(68736LLU,68786LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_1e1976730_CaseRange(68800LLU,68850LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_1e1976730_CaseRange(71840LLU,71871LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1e1976730_CaseRange(71872LLU,71903LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1e1976730_CaseRange(93760LLU,93791LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1e1976730_CaseRange(93792LLU,93823LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1e1976730_CaseRange(125184LLU,125217LLU,jule::Array<jule::I32,3>({0LL,34LL,0LL})),_1e1976730_CaseRange(125218LLU,125251LLU,jule::Array<jule::I32,3>({-34LL,0LL,-34LL}))});
static jule::Slice<_1e1976730_CaseRange> _1e197052b_CASE_RANGES = _1e197052b__CASE_RANGES;
static jule::Array<jule::U8,256> _1e197052b__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
static jule::Map<jule::Str,jule::Ref<_1e1976730_RangeTable>> _1e197052b_SCRIPTS = jule::Map<jule::Str,jule::Ref<_1e1976730_RangeTable>>({{jule::Str("Adlam", 5),_1e197052b_ADLAM},{jule::Str("Ahom", 4),_1e197052b_AHOM},{jule::Str("Anatolian_Hieroglyphs", 21),_1e197052b_ANATOLIAN_HIEROGLYPHS},{jule::Str("Arabic", 6),_1e197052b_ARABIC},{jule::Str("Armenian", 8),_1e197052b_ARMENIAN},{jule::Str("Avestan", 7),_1e197052b_AVESTAN},{jule::Str("Balinese", 8),_1e197052b_BALINESE},{jule::Str("Bamum", 5),_1e197052b_BAMUM},{jule::Str("Bassa_Vah", 9),_1e197052b_BASSA_VAH},{jule::Str("Batak", 5),_1e197052b_BATAK},{jule::Str("Bengali", 7),_1e197052b_BENGALI},{jule::Str("Bhaiksuki", 9),_1e197052b_BHAIKSUKI},{jule::Str("Bopomofo", 8),_1e197052b_BOPOMOFO},{jule::Str("Brahmi", 6),_1e197052b_BRAHMI},{jule::Str("Braille", 7),_1e197052b_BRAILLE},{jule::Str("Buginese", 8),_1e197052b_BUGINESE},{jule::Str("Buhid", 5),_1e197052b_BUHID},{jule::Str("Canadian_Aboriginal", 19),_1e197052b_CANADIAN_ABORIGINAL},{jule::Str("Carian", 6),_1e197052b_CARIAN},{jule::Str("Caucasian_Albanian", 18),_1e197052b_CAUCASIAN_ALBANIAN},{jule::Str("Chakma", 6),_1e197052b_CHAKMA},{jule::Str("Cham", 4),_1e197052b_CHAM},{jule::Str("Cherokee", 8),_1e197052b_CHEROKEE},{jule::Str("Chorasmian", 10),_1e197052b_CHORASMIAN},{jule::Str("Common", 6),_1e197052b_COMMON},{jule::Str("Coptic", 6),_1e197052b_COPTIC},{jule::Str("Cuneiform", 9),_1e197052b_CUNEIFORM},{jule::Str("Cypriot", 7),_1e197052b_CYPRIOT},{jule::Str("Cypro_Minoan", 12),_1e197052b_CYPRO_MINOAN},{jule::Str("Cyrillic", 8),_1e197052b_CYRILLIC},{jule::Str("Deseret", 7),_1e197052b_DESERET},{jule::Str("Devanagari", 10),_1e197052b_DEVANAGARI},{jule::Str("Dives_Akuru", 11),_1e197052b_DIVES_AKURU},{jule::Str("Dogra", 5),_1e197052b_DOGRA},{jule::Str("Duployan", 8),_1e197052b_DUPLOYAN},{jule::Str("Egyptian_Hieroglyphs", 20),_1e197052b_EGYPTIAN_HIEROGLYPHS},{jule::Str("Elbasan", 7),_1e197052b_ELBASAN},{jule::Str("Elymaic", 7),_1e197052b_ELYMAIC},{jule::Str("Ethiopic", 8),_1e197052b_ETHIOPIC},{jule::Str("Georgian", 8),_1e197052b_GEORGIAN},{jule::Str("Glagolitic", 10),_1e197052b_GLAGOLITIC},{jule::Str("Gothic", 6),_1e197052b_GOTHIC},{jule::Str("Grantha", 7),_1e197052b_GRANTHA},{jule::Str("Greek", 5),_1e197052b_GREEK},{jule::Str("Gujarati", 8),_1e197052b_GUJARATI},{jule::Str("Gunjala_Gondi", 13),_1e197052b_GUNJALA_GONDI},{jule::Str("Gurmukhi", 8),_1e197052b_GURMUKHI},{jule::Str("Han", 3),_1e197052b_HAN},{jule::Str("Hangul", 6),_1e197052b_HANGUL},{jule::Str("Hanifi_Rohingya", 15),_1e197052b_HANIFI_ROHINGYA},{jule::Str("Hanunoo", 7),_1e197052b_HANUNOO},{jule::Str("Hatran", 6),_1e197052b_HATRAN},{jule::Str("Hebrew", 6),_1e197052b_HEBREW},{jule::Str("Hiragana", 8),_1e197052b_HIRAGANA},{jule::Str("Imperial_Aramaic", 16),_1e197052b_IMPERIAL_ARAMAIC},{jule::Str("Inherited", 9),_1e197052b_INHERITED},{jule::Str("Inscriptional_Pahlavi", 21),_1e197052b_INSCRIPTIONAL_PAHLAVI},{jule::Str("Inscriptional_Parthian", 22),_1e197052b_INSCRIPTIONAL_PARTHIAN},{jule::Str("Javanese", 8),_1e197052b_JAVANESE},{jule::Str("Kaithi", 6),_1e197052b_KAITHI},{jule::Str("Kannada", 7),_1e197052b_KANNADA},{jule::Str("Katakana", 8),_1e197052b_KATAKANA},{jule::Str("Kawi", 4),_1e197052b_KAWI},{jule::Str("Kayah_Li", 8),_1e197052b_KAYAH_LI},{jule::Str("Kharoshthi", 10),_1e197052b_KHAROSHTHI},{jule::Str("Khitan_Small_Script", 19),_1e197052b_KHITAN_SMALL_SCRIPT},{jule::Str("Khmer", 5),_1e197052b_KHMER},{jule::Str("Khojki", 6),_1e197052b_KHOJKI},{jule::Str("Khudawadi", 9),_1e197052b_KHUDAWADI},{jule::Str("Lao", 3),_1e197052b_LAO},{jule::Str("Latin", 5),_1e197052b_LATIN},{jule::Str("Lepcha", 6),_1e197052b_LEPCHA},{jule::Str("Limbu", 5),_1e197052b_LIMBU},{jule::Str("Linear_A", 8),_1e197052b_LINEAR_A},{jule::Str("Linear_B", 8),_1e197052b_LINEAR_B},{jule::Str("Lisu", 4),_1e197052b_LISU},{jule::Str("Lycian", 6),_1e197052b_LYCIAN},{jule::Str("Lydian", 6),_1e197052b_LYDIAN},{jule::Str("Mahajani", 8),_1e197052b_MAHAJANI},{jule::Str("Makasar", 7),_1e197052b_MAKASAR},{jule::Str("Malayalam", 9),_1e197052b_MALAYALAM},{jule::Str("Mandaic", 7),_1e197052b_MANDAIC},{jule::Str("Manichaean", 10),_1e197052b_MANICHAEAN},{jule::Str("Marchen", 7),_1e197052b_MARCHEN},{jule::Str("Masaram_Gondi", 13),_1e197052b_MASARAM_GONDI},{jule::Str("Medefaidrin", 11),_1e197052b_MEDEFAIDRIN},{jule::Str("Meetei_Mayek", 12),_1e197052b_MEETEI_MAYEK},{jule::Str("Mende_Kikakui", 13),_1e197052b_MENDE_KIKAKUI},{jule::Str("Meroitic_Cursive", 16),_1e197052b_MEROITIC_CURSIVE},{jule::Str("Meroitic_Hieroglyphs", 20),_1e197052b_MEROITIC_HIEROGLYPHS},{jule::Str("Miao", 4),_1e197052b_MIAO},{jule::Str("Modi", 4),_1e197052b_MODI},{jule::Str("Mongolian", 9),_1e197052b_MONGOLIAN},{jule::Str("Mro", 3),_1e197052b_MRO},{jule::Str("Multani", 7),_1e197052b_MULTANI},{jule::Str("Myanmar", 7),_1e197052b_MYANMAR},{jule::Str("Nabataean", 9),_1e197052b_NABATAEAN},{jule::Str("Nag_Mundari", 11),_1e197052b_NAG_MUNDARI},{jule::Str("Nandinagari", 11),_1e197052b_NANDINAGARI},{jule::Str("New_Tai_Lue", 11),_1e197052b_NEW_TAI_LUE},{jule::Str("Newa", 4),_1e197052b_NEWA},{jule::Str("Nko", 3),_1e197052b_NKO},{jule::Str("Nushu", 5),_1e197052b_NUSHU},{jule::Str("Nyiakeng_Puachue_Hmong", 22),_1e197052b_NYIAKENG_PUACHUE_HMONG},{jule::Str("Ogham", 5),_1e197052b_OGHAM},{jule::Str("Ol_Chiki", 8),_1e197052b_OL_CHIKI},{jule::Str("Old_Hungarian", 13),_1e197052b_OLD_HUNGARIAN},{jule::Str("Old_Italic", 10),_1e197052b_OLD_ITALIC},{jule::Str("Old_North_Arabian", 17),_1e197052b_OLD_NORTH_ARABIAN},{jule::Str("Old_Permic", 10),_1e197052b_OLD_PERMIC},{jule::Str("Old_Persian", 11),_1e197052b_OLD_PERSIAN},{jule::Str("Old_Sogdian", 11),_1e197052b_OLD_SOGDIAN},{jule::Str("Old_South_Arabian", 17),_1e197052b_OLD_SOUTH_ARABIAN},{jule::Str("Old_Turkic", 10),_1e197052b_OLD_TURKIC},{jule::Str("Old_Uyghur", 10),_1e197052b_OLD_UYGHUR},{jule::Str("Oriya", 5),_1e197052b_ORIYA},{jule::Str("Osage", 5),_1e197052b_OSAGE},{jule::Str("Osmanya", 7),_1e197052b_OSMANYA},{jule::Str("Pahawh_Hmong", 12),_1e197052b_PAHAWH_HMONG},{jule::Str("Palmyrene", 9),_1e197052b_PALMYRENE},{jule::Str("Pau_Cin_Hau", 11),_1e197052b_PAU_CIN_HAU},{jule::Str("Phags_Pa", 8),_1e197052b_PHAGS_PA},{jule::Str("Phoenician", 10),_1e197052b_PHOENICIAN},{jule::Str("Psalter_Pahlavi", 15),_1e197052b_PSALTER_PAHLAVI},{jule::Str("Rejang", 6),_1e197052b_REJANG},{jule::Str("Runic", 5),_1e197052b_RUNIC},{jule::Str("Samaritan", 9),_1e197052b_SAMARITAN},{jule::Str("Saurashtra", 10),_1e197052b_SAURASHTRA},{jule::Str("Sharada", 7),_1e197052b_SHARADA},{jule::Str("Shavian", 7),_1e197052b_SHAVIAN},{jule::Str("Siddham", 7),_1e197052b_SIDDHAM},{jule::Str("SignWriting", 11),_1e197052b_SIGN_WRITING},{jule::Str("Sinhala", 7),_1e197052b_SINHALA},{jule::Str("Sogdian", 7),_1e197052b_SOGDIAN},{jule::Str("Sora_Sompeng", 12),_1e197052b_SORA_SOMPENG},{jule::Str("Soyombo", 7),_1e197052b_SOYOMBO},{jule::Str("Sundanese", 9),_1e197052b_SUNDANESE},{jule::Str("Syloti_Nagri", 12),_1e197052b_SYLOTI_NAGRI},{jule::Str("Syriac", 6),_1e197052b_SYRIAC},{jule::Str("Tagalog", 7),_1e197052b_TAGALOG},{jule::Str("Tagbanwa", 8),_1e197052b_TAGBANWA},{jule::Str("Tai_Le", 6),_1e197052b_TAI_LE},{jule::Str("Tai_Tham", 8),_1e197052b_TAI_THAM},{jule::Str("Tai_Viet", 8),_1e197052b_TAI_VIET},{jule::Str("Takri", 5),_1e197052b_TAKRI},{jule::Str("Tamil", 5),_1e197052b_TAMIL},{jule::Str("Tangsa", 6),_1e197052b_TANGSA},{jule::Str("Tangut", 6),_1e197052b_TANGUT},{jule::Str("Telugu", 6),_1e197052b_TELUGU},{jule::Str("Thaana", 6),_1e197052b_THAANA},{jule::Str("Thai", 4),_1e197052b_THAI},{jule::Str("Tibetan", 7),_1e197052b_TIBETAN},{jule::Str("Tifinagh", 8),_1e197052b_TIFINAGH},{jule::Str("Tirhuta", 7),_1e197052b_TIRHUTA},{jule::Str("Toto", 4),_1e197052b_TOTO},{jule::Str("Ugaritic", 8),_1e197052b_UGARITIC},{jule::Str("Vai", 3),_1e197052b_VAI},{jule::Str("Vithkuqi", 8),_1e197052b_VITHKUQI},{jule::Str("Wancho", 6),_1e197052b_WANCHO},{jule::Str("Warang_Citi", 11),_1e197052b_WARANG_CITI},{jule::Str("Yezidi", 6),_1e197052b_YEZIDI},{jule::Str("Yi", 2),_1e197052b_YI},{jule::Str("Zanabazar_Square", 16),_1e197052b_ZANABAZAR_SQUARE}});
static jule::Array<jule::U8,256> _1e176da99_FIRST = jule::Array<jule::U8,256>({});
static jule::Array<_1e176da99_accept_range,16> _1e176da99_ACCEPT_RANGES = jule::Array<_1e176da99_accept_range,16>({_1e176da99_accept_range(128LLU,191LLU),_1e176da99_accept_range(160LLU,191LLU),_1e176da99_accept_range(128LLU,159LLU),_1e176da99_accept_range(144LLU,191LLU),_1e176da99_accept_range(128LLU,143LLU)});
static jule::Slice<jule::Ref<_1e1976730_RangeTable>> _1e189a1c0_GRAPHIC_RANGES = jule::Slice<jule::Ref<_1e1976730_RangeTable>>({_1e197052b_L,_1e197052b_M,_1e197052b_N,_1e197052b_P,_1e197052b_S,_1e197052b_ZS});
static jule::Map<jule::Str,jule::Ref<_1e1976730_RangeTable>> _1e197052b_CATEGORIES = jule::Map<jule::Str,jule::Ref<_1e1976730_RangeTable>>({{jule::Str("C", 1),_1e197052b_C},{jule::Str("CC", 2),_1e197052b_CC},{jule::Str("CF", 2),_1e197052b_CF},{jule::Str("CO", 2),_1e197052b_CO},{jule::Str("CS", 2),_1e197052b_CS},{jule::Str("L", 1),_1e197052b_L},{jule::Str("LL", 2),_1e197052b_LL},{jule::Str("LM", 2),_1e197052b_LM},{jule::Str("LO", 2),_1e197052b_LO},{jule::Str("LT", 2),_1e197052b_LT},{jule::Str("LU", 2),_1e197052b_LU},{jule::Str("M", 1),_1e197052b_M},{jule::Str("MC", 2),_1e197052b_MC},{jule::Str("ME", 2),_1e197052b_ME},{jule::Str("MN", 2),_1e197052b_MN},{jule::Str("N", 1),_1e197052b_N},{jule::Str("ND", 2),_1e197052b_ND},{jule::Str("NL", 2),_1e197052b_NL},{jule::Str("NO", 2),_1e197052b_NO},{jule::Str("P", 1),_1e197052b_P},{jule::Str("PC", 2),_1e197052b_PC},{jule::Str("PD", 2),_1e197052b_PD},{jule::Str("PE", 2),_1e197052b_PE},{jule::Str("PF", 2),_1e197052b_PF},{jule::Str("PI", 2),_1e197052b_PI},{jule::Str("PO", 2),_1e197052b_PO},{jule::Str("PS", 2),_1e197052b_PS},{jule::Str("S", 1),_1e197052b_S},{jule::Str("SC", 2),_1e197052b_SC},{jule::Str("SK", 2),_1e197052b_SK},{jule::Str("SM", 2),_1e197052b_SM},{jule::Str("SO", 2),_1e197052b_SO},{jule::Str("Z", 1),_1e197052b_Z},{jule::Str("ZL", 2),_1e197052b_ZL},{jule::Str("ZP", 2),_1e197052b_ZP},{jule::Str("ZS", 2),_1e197052b_ZS}});
static jule::Uintptr _1d40585a0_STDOUT = static_cast<jule::Uintptr>(_1d40585a0_get_std_handle(static_cast<jule::Uintptr>(18446744073709551605LLU)));
static jule::Uintptr _1d40585a0_STDERR = static_cast<jule::Uintptr>(_1d40585a0_get_std_handle(static_cast<jule::Uintptr>(18446744073709551604LLU)));
static jule::Array<jule::Array<jule::Str,2>,4> _1ec8a717c_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,4>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)})});

void _1ec8a7cd7_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



void _1ec8a7cd7_AnsiEscape::_static_method_print(jule::Str _2021_escape,jule::Str _2034_text) {
	jule::out(_2021_escape);
	jule::out(_2034_text);
	_1ec8a7cd7_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _1ec8a7cd7_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



void _1ec8a7cd7_Logger::_static_method_log_flat(_1ec8e8025_Log& _3125_l) {
	jule::outln(_3125_l._field_text);
}



void _1ec8a7cd7_Logger::_static_method_log_error(_1ec8e8025_Log& _3426_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_3426_l._field_text);
	_1ec8a7cd7_AnsiEscape::_static_method_reset();
	if (_3426_l._field_path.len() != 0LL) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_3426_l._field_path);
	}
	if ((_3426_l._field_row != 0LL) && (_3426_l._field_column != 0LL)) {
		jule::out(jule::Str(":", 1));
		jule::out(_1e103784c_itoa(_3426_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1e103784c_itoa(_3426_l._field_column));
	}
	if (_3426_l._field_line.len() != 0LL) {
		jule::Str _5121_line = _3426_l._field_line.ltrim(jule::Str("\r\n\v\b ", 5));
		jule::I64 _5221_offset = (_3426_l._field_line.len() - _5121_line.len()) + 1LL;
		jule::I64 _5321_old_len = _5121_line.len();
		_5121_line=_5121_line.ltrim(jule::Str("\t", 1));
		if (_5321_old_len != _5121_line.len()) {
			_5221_offset+=static_cast<jule::I64>((_5321_old_len - _5121_line.len()) * 8LL);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _5917_row = _1e103784c_itoa(_3426_l._field_row);
		jule::out(_5917_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_5121_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1ec8a717c_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5917_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1ec8a717c_str_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_3426_l._field_column - _5221_offset)));
		jule::out(jule::Str("^", 1));
		if (_3426_l._field_suggestion.len() != 0LL) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1ec8a717c_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5917_row.len())));
			jule::out(jule::Str(" | ", 3));
			_1ec8a7cd7_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_3426_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



void _1ec8a7cd7_Logger::_static_method_log(_1ec8e8025_Log& _8020_l) {
	{
		auto _match_expr{ _8020_l._field_kind };
		if (!((0LLU) == _match_expr)) { goto _case_end_4356332768; }
		_case_begin_4356332768:;
		{
			_1ec8a7cd7_Logger::_static_method_log_flat(_8020_l);
		}
		goto _match_end_4356332640;
		_case_end_4356332768:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4356332864; }
		_case_begin_4356332864:;
		{
			_1ec8a7cd7_Logger::_static_method_log_error(_8020_l);
		}
		goto _match_end_4356332640;
		_case_end_4356332864:;
		_match_end_4356332640:;
	}
}



void _1ec8a7cd7_Logger::_static_method_print_logs(jule::Slice<_1ec8e8025_Log>& _8827_logs) {
	{
		auto expr = _8827_logs;
		auto it = expr.begin();
		_iter_begin_4356336240:;
		if (it != expr.end()) {
			_1ec8e8025_Log _1ec8a7cd7_l = *it;
			{
				_1ec8a7cd7_Logger::_static_method_log(_1ec8a7cd7_l);
			}
			_iter_next_4356336240:;
			++it;
			goto _iter_begin_4356336240;
		}
		_iter_end_4356336240:;
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_1e103784c_itoa(static_cast<jule::I64>(_8827_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ec8a7cd7_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



jule::U8 _1ec9a2585_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[_5324_i];
	}
	return (*this)._field_path[_5324_i];
}



void _1ec9a2585_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[(*this)._field_w] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*this)._field_path.len()));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,(*this)._field_w)));
	}
	(*this)._field_buff[(*this)._field_w]=_6025_c;
	((*this)._field_w)++;
}



jule::Str _1ec9a2585_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len + (*this)._field_w);
	}
	return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,(*this)._field_w));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ec9a2585_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ec8e8025_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



jule::Str _1e16eece4_bits_error::_method_error(void) {
	return jule::Str("runtime error: ", 15) + (*this)._field_message;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16eece4_bits_error &_Src) {
	_Stream << "bits_error{";
	_Stream << "message:" << _Src._field_message;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ec95e245_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ec95e245_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e103632e_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e103632e_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (!((_22922_s[_23017_i] == '+'))) { goto _case_end_4328172944; }
		_case_begin_4328172944:;
		{
			(_23017_i)++;
		}
		goto _match_end_4328172496;
		_case_end_4328172944:;
		if (!((_22922_s[_23017_i] == '-'))) { goto _case_end_4328173040; }
		_case_begin_4328173040:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_4328172496;
		_case_end_4328173040:;
		_match_end_4328172496:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	for (; _23017_i < _22922_s.len(); (_23017_i)++) {
		{
			{
				if (!((_22922_s[_23017_i] == '.'))) { goto _case_end_4328178656; }
				_case_begin_4328178656:;
				{
					if (_24717_sawdot) {
						return _22932_ok;
					}
					_24717_sawdot=true;
					(*this)._field_dp=(*this)._field_nd;
					goto _iter_next_4328177392;
				}
				goto _match_end_4328178432;
				_case_end_4328178656:;
				if (!((('0' <= _22922_s[_23017_i]) && (_22922_s[_23017_i] <= '9')))) { goto _case_end_4328178768; }
				_case_begin_4328178768:;
				{
					_24817_sawdigits=true;
					if ((_22922_s[_23017_i] == '0') && ((*this)._field_nd == 0LL)) {
						((*this)._field_dp)--;
						goto _iter_next_4328177392;
					}
					if ((*this)._field_nd < 800LL) {
						(*this)._field_d[(*this)._field_nd]=_22922_s[_23017_i];
						((*this)._field_nd)++;
					} else if (_22922_s[_23017_i] != '0') {
						(*this)._field_trunc=true;
					}
					goto _iter_next_4328177392;
				}
				goto _match_end_4328178432;
				_case_end_4328178768:;
				_match_end_4328178432:;
			}
			goto _iter_end_4328177392;
		}
	_iter_next_4328177392:;
	}
	_iter_end_4328177392:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_1ec95de8c_lower(_22922_s[_23017_i]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[_23017_i] == '+') {
			(_23017_i)++;
		} else if (_22922_s[_23017_i] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[_23017_i] < '0')) || (_22922_s[_23017_i] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		for (; (_23017_i < _22922_s.len()) && (('0' <= _22922_s[_23017_i]) && (_22922_s[_23017_i] <= '9')); (_23017_i)++) {
			{
				if (_30121_e < 10000LL) {
					_30121_e=static_cast<jule::Int>(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[_23017_i])) - '0');
				}
			}
		_iter_next_4328196464:;
		}
		_iter_end_4328196464:;
		(*this)._field_dp+=static_cast<jule::Int>(_30121_e * _29121_esign);
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



std::tuple<jule::U64,jule::Bool> _1e103632e_Decimal::_method_float_bits(_1ec95e245_FloatInfo& _31830_flt) {
	jule::U64 _31848_b = jule::U64();
	jule::Bool _31856_overflow = jule::Bool();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	while ((*this)._field_dp > 0LL) {
		{
			jule::Int _34521_n = 0LL;
			if ((*this)._field_dp >= _1d419b9e0_POWTAB.len()) {
				_34521_n=27LL;
			} else {
				_34521_n=_1d419b9e0_POWTAB[(*this)._field_dp];
			}
			(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
			_31917_exp+=_34521_n;
		}
	_iter_next_4328214400:;
	}
	_iter_end_4328214400:;
	while (((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d[0LL] < '5'))) {
		{
			jule::Int _35521_n = 0LL;
			if ((-((*this)._field_dp)) >= _1d419b9e0_POWTAB.len()) {
				_35521_n=27LL;
			} else {
				_35521_n=_1d419b9e0_POWTAB[(-((*this)._field_dp))];
			}
			(*this)._method_shift(_35521_n);
			_31917_exp-=_35521_n;
		}
	_iter_next_4328218576:;
	}
	_iter_end_4328218576:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	_31856_overflow = _31856_overflow;
	return std::make_tuple(_31848_b,_31856_overflow);
}



void _1e103632e_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>({});
	jule::Int _15617_n = 0LL;
	while (_15229_v > 0LL) {
		{
			jule::U64 _15817_v1 = jule::div(_15229_v,10LL);
			_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
			_15317_buf[_15617_n]=static_cast<jule::U8>(_15229_v + '0');
			(_15617_n)++;
			_15229_v=_15817_v1;
		}
	_iter_next_4328251984:;
	}
	_iter_end_4328251984:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	for (; _15617_n >= 0LL; (_15617_n)--) {
		{
			(*this)._field_d[(*this)._field_nd]=_15317_buf[_15617_n];
			((*this)._field_nd)++;
		}
	_iter_next_4328254624:;
	}
	_iter_end_4328254624:;
	(*this)._field_dp=(*this)._field_nd;
	_1e103632e_trim((*this));
}



void _1e103632e_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if (!(((*this)._field_nd == 0LL))) { goto _case_end_4328261568; }
		goto _match_end_4328261344;
		_case_end_4328261568:;
		if (!((_17728_k > 0LL))) { goto _case_end_4328261680; }
		_case_begin_4328261680:;
		{
			while (_17728_k > 60LLU) {
				{
					_1e103632e_left_shift((*this),60LLU);
					_17728_k-=60LLU;
				}
			_iter_next_4328262896:;
			}
			_iter_end_4328262896:;
			_1e103632e_left_shift((*this),static_cast<jule::Uint>(_17728_k));
		}
		goto _match_end_4328261344;
		_case_end_4328261680:;
		if (!((_17728_k < 0LL))) { goto _case_end_4328261792; }
		_case_begin_4328261792:;
		{
			while (_17728_k < -60LL) {
				{
					_1e103632e_right_shift((*this),60LLU);
					_17728_k+=60LLU;
				}
			_iter_next_4328265792:;
			}
			_iter_end_4328265792:;
			_1e103632e_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
		}
		goto _match_end_4328261344;
		_case_end_4328261792:;
		_match_end_4328261344:;
	}
}



void _1e103632e_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_1e103632e_trim((*this));
}



void _1e103632e_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	for (; _21217_i >= 0LL; (_21217_i)--) {
		{
			jule::U8 _21417_c = (*this)._field_d[_21217_i];
			if (_21417_c < '9') {
				((*this)._field_d[_21217_i])++;
				(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
				return;
			}
		}
	_iter_next_4328273456:;
	}
	_iter_end_4328273456:;
	(*this)._field_d[0LL]='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



void _1e103632e_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_1e103632e_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



jule::U64 _1e103632e_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	for (; (_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd); (_25017_i)++) {
		{
			_25117_n=static_cast<jule::U64>((_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[_25017_i] - '0'));
		}
	_iter_next_4328284640:;
	}
	_iter_end_4328284640:;
	for (; _25017_i < (*this)._field_dp; (_25017_i)++) {
		{
			_25117_n*=10LL;
		}
	_iter_next_4328290400:;
	}
	_iter_end_4328290400:;
	if (_1e103632e_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e103632e_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e176da99_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e15268c9_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



std::tuple<jule::Slice<jule::Ref<_1e15268c9_DirEntry>>,jule::Int> _1e15268c9_Directory::_static_method_read(jule::Str _1624_path) {
	jule::Slice<jule::Ref<_1e15268c9_DirEntry>> _1637_dirents = jule::Slice<jule::Ref<_1e15268c9_DirEntry>>();
	jule::Int _1659_err = 0LLU;
	jule::Slice<jule::U16> _1713_utf16_path = _1d4048606_utf16_from_str(_1624_path);
	_WDIR* _1817_dir = _1d40585a0__wopendir((&(_1713_utf16_path[0LL])));
	if (_1817_dir == nullptr) {
		_1659_err=_1e14c6bed_get_last_fs_error();
		return std::make_tuple(_1637_dirents,_1659_err);
	}
	for (;;) {
		{
			struct _wdirent* _2417_dirent = _1d40585a0__wreaddir(_1817_dir);
			if (_2417_dirent == nullptr) {
				goto _iter_end_4328702288;
			}
			jule::Str _2817_name = _1d4048606_u16_ptr_to_str(((jule::U16*)(_2417_dirent->d_name)));
			jule::Ref<_1e15771dd_Status> _2922_stat;
			jule::Int _2928_serr;
			std::tie(_2922_stat,_2928_serr) = _1e15771dd_Status::_static_method_of(_1ec9a2585_join(jule::Slice<jule::Str>({_1624_path,_2817_name})));
			if (_2928_serr != 0LLU) {
				_1659_err=_2928_serr;
				_1637_dirents=nullptr;
				goto _iter_end_4328702288;
			}
			_1637_dirents=jule::append(_1637_dirents,jule::Slice<jule::Ref<_1e15268c9_DirEntry>>({jule::new_struct<_1e15268c9_DirEntry>(new( std::nothrow ) _1e15268c9_DirEntry(_2817_name,_2922_stat))}));
		}
	_iter_next_4328702288:;
	}
	_iter_end_4328702288:;
	_1d40585a0__wclosedir(_1817_dir);
	return std::make_tuple(_1637_dirents,_1659_err);
}



jule::Int _1e15268c9_Directory::_static_method_create(jule::Str _4726_path) {
	jule::Slice<jule::U16> _5213_utf16_path = _1d4048606_utf16_from_str(_4726_path);
	if (_1d40585a0_create_directory((&(_5213_utf16_path[0LL])))) {
		return 0LLU;
	}
	return _1e14c6bed_get_last_fs_error();
}



jule::Int _1e15268c9_Directory::_static_method_remove(jule::Str _6226_path) {
	jule::Slice<jule::U16> _6313_utf16_path = _1d4048606_utf16_from_str(_6226_path);
	if (_1d40585a0_remove_directory((&(_6313_utf16_path[0LL])))) {
		return 0LLU;
	}
	return _1e14c6bed_get_last_fs_error();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e15268c9_Directory &_Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1e159479e_File> _1e159479e_File::_static_method_new(jule::Uintptr _4523_handle) {
	return jule::new_struct<_1e159479e_File>(new( std::nothrow ) _1e159479e_File(_4523_handle));
}



std::tuple<jule::Ref<_1e159479e_File>,jule::Int> _1e159479e_File::_static_method_create(jule::Str _5526_path) {
	jule::Ref<_1e159479e_File> _5618_f;
	jule::Int _5621_err;
	std::tie(_5618_f,_5621_err) = _1e159479e_File::_static_method_open(_5526_path,770LL,438LL);
	return std::make_tuple(_5618_f,_5621_err);
}



std::tuple<jule::Slice<jule::U8>,jule::Int> _1e159479e_File::_static_method_read(jule::Str _6824_path) {
	jule::Ref<_1e15771dd_Status> _6914_s;
	jule::Int _6921_err;
	std::tie(_6914_s,_6921_err) = _1e15771dd_Status::_static_method_of(_6824_path);
	if (_6921_err != 0LLU) {
		return std::make_tuple(nullptr,_6921_err);
	}
	if ((!(_6914_s->_method_is_reg()))) {
		return std::make_tuple(nullptr,15LLU);
	}
	if (_6914_s->_field_size == 0LL) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(0LL),0LLU);
	}
	jule::Ref<_1e159479e_File> _8218_f;
	std::tie(_8218_f,_6921_err) = _1e159479e_File::_static_method_open(_6824_path,0LL,0LL);
	if (_6921_err != 0LLU) {
		return std::make_tuple(nullptr,_6921_err);
	}
	__JULE_DEFER({
		_8218_f->_method_close();
	});
	jule::Slice<jule::U8> _8817_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_6914_s->_field_size));
	jule::Int _8914_n;
	std::tie(_8914_n,_6921_err) = _8218_f->_method_read(_8817_buff);
	if (_6921_err != 0LLU) {
		return std::make_tuple(nullptr,_6921_err);
	}
	return std::make_tuple(_8817_buff.slice(0LL,_8914_n),0LLU);
}



jule::Int _1e159479e_File::_static_method_write(jule::Str _10125_path,jule::Slice<jule::U8> _10136_data,jule::Int _10150_perm) {
	jule::Ref<_1e159479e_File> _10218_f;
	jule::Int _10225_err;
	std::tie(_10218_f,_10225_err) = _1e159479e_File::_static_method_open(_10125_path,769LL,_10150_perm);
	if (_10225_err != 0LLU) {
		return _10225_err;
	}
	std::tie(std::ignore,_10225_err) = _10218_f->_method_write(_10136_data);
	if (_10225_err != 0LLU) {
		return _10225_err;
	}
	return _10218_f->_method_close();
}



std::tuple<jule::I64,jule::Int> _1e159479e_File::_method_seek(jule::I64 _12227_offset,jule::Int _12240_origin) {
	jule::I64 _12313_pos = _1d4097a1d_seek(static_cast<jule::Int>((*this)._field_handle),_12227_offset,static_cast<jule::Int>(_12240_origin));
	return std::make_tuple(_12313_pos,0LLU);
}



jule::Int _1e159479e_File::_method_close(void) {
	if (_1d4097a1d_close(static_cast<jule::Int>((*this)._field_handle)) == -1LL) {
		return _1e14c6bed_get_last_fs_error();
	}
	return 0LLU;
}



std::tuple<jule::Ref<_1e159479e_File>,jule::Int> _1e159479e_File::_static_method_open(jule::Str _2224_path,jule::Int _2235_flag,jule::Int _2248_mode) {
	jule::Slice<jule::U16> _2313_utf16_path = _1d4048606_utf16_from_str(_2224_path);
	jule::Int _2413_handle = _1d40585a0__wopen((&(_2313_utf16_path[0LL])),static_cast<jule::Int>(_2235_flag),_2248_mode);
	if (_2413_handle == -1LL) {
		return std::make_tuple(_1e159479e_File::_static_method_new(0LLU),_1e14c6bed_get_last_fs_error());
	}
	return std::make_tuple(_1e159479e_File::_static_method_new(static_cast<jule::Uintptr>(_2413_handle)),0LLU);
}



jule::Int _1e159479e_File::_static_method_remove(jule::Str _3526_path) {
	jule::Slice<jule::U16> _3613_utf16_path = _1d4048606_utf16_from_str(_3526_path);
	if (_1d40585a0_delete_file((&(_3613_utf16_path[0LL])))) {
		return 0LLU;
	}
	return _1e14c6bed_get_last_fs_error();
}



std::tuple<jule::Int,jule::Int> _1e159479e_File::_method_write(jule::Slice<jule::U8> _5228_buff) {
	jule::Int _5244_n = jule::Int();
	if (_5228_buff.len() == 0LL) {
		_5244_n = 0LL;
		return std::make_tuple(_5244_n,0LLU);
	}
	if (_1e1736c60_is_console_handle((*this)._field_handle)) {
		jule::Slice<jule::U16> _5817_utf16_buff = _1d4048606_utf16_from_str(static_cast<jule::Str>(_5228_buff));
		jule::Bool _5917_ok = _1d40585a0_write_console((*this)._field_handle,(&(_5817_utf16_buff[0LL])),static_cast<jule::I64>(_5817_utf16_buff.len()),_5244_n,nullptr);
		if ((!(_5917_ok))) {
			_5244_n = 0LL;
			return std::make_tuple(_5244_n,_1e14c6bed_get_last_fs_error());
		}
		_5244_n = _5244_n;
		return std::make_tuple(_5244_n,0LLU);
	}
	_5244_n=static_cast<jule::Int>(static_cast<jule::Int>(_1d4097a1d_write(static_cast<jule::Int>((*this)._field_handle),(&(_5228_buff[0LL])),static_cast<jule::Uint>(_5228_buff.len()))));
	if (_5244_n == -1LL) {
		_5244_n = 0LL;
		return std::make_tuple(_5244_n,_1e14c6bed_get_last_fs_error());
	}
	_5244_n = _5244_n;
	return std::make_tuple(_5244_n,0LLU);
}



std::tuple<jule::Int,jule::Int> _1e159479e_File::_method_read(jule::Slice<jule::U8> _8631_buff) {
	jule::Int _8647_n = jule::Int();
	if (_8631_buff.len() == 0LL) {
		_8647_n = 0LL;
		return std::make_tuple(_8647_n,0LLU);
	}
	if (_1e1736c60_is_console_handle((*this)._field_handle)) {
		jule::Slice<jule::U16> _9221_codepage = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_8631_buff.len()));
		jule::Bool _9317_ok = _1d40585a0_read_console((*this)._field_handle,(&(_9221_codepage[0LL])),static_cast<jule::I64>(_8631_buff.len()),_8647_n,nullptr);
		if ((!(_9317_ok))) {
			_8647_n = 0LL;
			return std::make_tuple(_8647_n,_1e14c6bed_get_last_fs_error());
		}
		jule::Slice<jule::I32> _10017_runes = _1d406e253_decode(_9221_codepage.slice(0LL,_8647_n));
		_8647_n=0LL;
		{
			auto expr = _10017_runes;
			auto it = expr.begin();
			_iter_begin_4328803488:;
			if (it != expr.end()) {
				jule::I32 _1e1736c60_r = *it;
				{
					jule::Int _10321_size = _1e176da99_rune_len(_1e1736c60_r);
					if ((_8647_n + _10321_size) > _8631_buff.len()) {
						goto _iter_end_4328803488;
					}
					_1e176da99_encode_rune(_8631_buff.slice(_8647_n),_1e1736c60_r);
					_8647_n+=_10321_size;
				}
				_iter_next_4328803488:;
				++it;
				goto _iter_begin_4328803488;
			}
			_iter_end_4328803488:;
		}
		_8647_n = _8647_n;
		return std::make_tuple(_8647_n,0LLU);
	}
	_8647_n=static_cast<jule::Int>(static_cast<jule::Int>(_1d4097a1d_read(static_cast<jule::Int>((*this)._field_handle),(&(_8631_buff[0LL])),static_cast<jule::Uint>(_8631_buff.len()))));
	if (_8647_n == -1LL) {
		_8647_n=0LL;
		_8647_n = _8647_n;
		return std::make_tuple(_8647_n,_1e14c6bed_get_last_fs_error());
	}
	_8647_n = _8647_n;
	return std::make_tuple(_8647_n,0LLU);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e159479e_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e15771dd_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



jule::Bool _1e15771dd_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}



std::tuple<jule::Ref<_1e15771dd_Status>,jule::Int> _1e15771dd_Status::_static_method_of(jule::Str _1322_path) {
	jule::Ref<_1e15771dd_Status> _1335_s = jule::Ref<_1e15771dd_Status>();
	jule::Int _1347_err = 0LLU;
	jule::Slice<jule::U16> _1413_utf16_path = _1d4048606_utf16_from_str(_1322_path);
	struct stat _1517_handle = (struct stat){};
	jule::Int _1613_code = _1d40585a0_wstat((&(_1413_utf16_path[0LL])),(&(_1517_handle)));
	if (_1613_code != -1LL) {
		_1347_err=0LLU;
		_1335_s=jule::new_struct<_1e15771dd_Status>(new( std::nothrow ) _1e15771dd_Status(static_cast<jule::Uint>(_1517_handle.st_mode),static_cast<jule::Uint>(_1517_handle.st_size)));
	} else {
		_1347_err=_1e14c6bed_get_last_fs_error();
	}
	return std::make_tuple(_1335_s,_1347_err);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e15771dd_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1976730_FoldPair &_Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1976730_CaseRange &_Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1976730_Range16 &_Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1976730_Range32 &_Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1976730_RangeTable &_Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}



jule::Int _1e15a2bb9_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return -1LL;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str(">>", 2)) == _match_expr || (jule::Str("<<", 2)) == _match_expr || (jule::Str("&", 1)) == _match_expr)) { goto _case_end_4332657968; }
		_case_begin_4332657968:;
		{
			return 5LL;
		}
		goto _match_end_4332656400;
		_case_end_4332657968:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4332658064; }
		_case_begin_4332658064:;
		{
			return 4LL;
		}
		goto _match_end_4332656400;
		_case_end_4332658064:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("=", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4332658320; }
		_case_begin_4332658320:;
		{
			return 3LL;
		}
		goto _match_end_4332656400;
		_case_end_4332658320:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4332658416; }
		_case_begin_4332658416:;
		{
			return 2LL;
		}
		goto _match_end_4332656400;
		_case_end_4332658416:;
		if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4332657216; }
		_case_begin_4332657216:;
		{
			return 1LL;
		}
		goto _match_end_4332656400;
		_case_end_4332657216:;
		_case_begin_4332657072:;
		{
			return -1LL;
		}
		goto _match_end_4332656400;
		_case_end_4332657072:;
		_match_end_4332656400:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1e15a2bb9_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e17bebd8_File::_method_is_ok(void) {
	jule::Int _1917_err;
	std::tie(std::ignore,_1917_err) = _1e15771dd_Status::_static_method_of((*this)._field__path);
	return _1917_err == 0LLU;
}



void _1e17bebd8_File::_method_fill(jule::Slice<jule::U8> _2431_data) {
	(*this)._field_data=_2431_data;
}



jule::Str _1e17bebd8_File::_method_path(void) {
	return (*this)._field__path;
}



jule::Str _1e17bebd8_File::_method_dir(void) {
	return _1ec9a2585_dir((*this)._field__path);
}



jule::Str _1e17bebd8_File::_method_name(void) {
	return _1ec9a2585_base((*this)._field__path);
}



jule::Uintptr _1e17bebd8_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



jule::Slice<_1e15a2bb9_Token> _1e17bebd8_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



jule::Str _1e17bebd8_File::_method_get_row(jule::Int _4426_row) {
	jule::Int _4517_n = 0LL;
	jule::Int _4617_line_start = 0LL;
	jule::Int _4717_i = 0LL;
	for (; _4717_i < (*this)._field_data.len(); (_4717_i)++) {
		{
			if ((*this)._field_data[_4717_i] != '\n') {
				goto _iter_next_4332678176;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*this)._field_data.slice(_4617_line_start,_4717_i));
			}
			_4617_line_start=static_cast<jule::Int>(_4717_i + 1LL);
		}
	_iter_next_4332678176:;
	}
	_iter_end_4332678176:;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e17bebd8_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e17c9de1_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



void _1e17c9de1_Lex::_method_push_err(jule::Str _40227_fmt,jule::Slice<jule::Any> _40240_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1ec8e8025_Log>({_1e17c9de1_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40227_fmt,_40240_args)}));
}



void _1e17c9de1_Lex::_method_push_err_tok(_1e15a2bb9_Token& _40732_token,jule::Str _40746_fmt) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1ec8e8025_Log>({_1e17c9de1_make_err(_40732_token._field_row,_40732_token._field_column,(*this)._field_file,_40746_fmt,jule::Slice<jule::Any>({}))}));
}



void _1e17c9de1_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			_1e15a2bb9_Token _41721_token = (*this)._method_token();
			if (_41721_token._field_id != 0LLU) {
				(*this)._field_tokens=jule::append((*this)._field_tokens,jule::Slice<_1e15a2bb9_Token>({_41721_token}));
			}
		}
	_iter_next_4332693776:;
	}
	_iter_end_4332693776:;
}



jule::Str _1e17c9de1_Lex::_method_id(jule::Slice<jule::U8>& _42622_ln) {
	if (_42622_ln.len() == 0LL) {
		return jule::Str();
	}
	jule::I32 _43014_r;
	jule::Int _43021_i;
	std::tie(_43014_r,_43021_i) = _1e176da99_decode_rune(_42622_ln);
	if ((_43014_r != '_') && (!(_1e15a2bb9_is_letter(_43014_r)))) {
		return jule::Str();
	}
	while (_43021_i < _42622_ln.len()) {
		{
			jule::I32 _43618_r;
			jule::Int _43621_n;
			std::tie(_43618_r,_43621_n) = _1e176da99_decode_rune(_42622_ln.slice(_43021_i));
			if (((_43618_r != '_') && (!(_1e15a2bb9_is_decimal(static_cast<jule::U8>(_43618_r))))) && (!(_1e15a2bb9_is_letter(_43618_r)))) {
				(*this)._field_pos+=_43021_i;
				return static_cast<jule::Str>(_42622_ln.slice(0LL,_43021_i));
			}
			_43021_i+=_43621_n;
		}
	_iter_next_4332706992:;
	}
	_iter_end_4332706992:;
	(*this)._field_pos+=static_cast<jule::I64>(_42622_ln.len());
	return static_cast<jule::Str>(_42622_ln);
}



jule::Slice<jule::U8> _1e17c9de1_Lex::_method_resume(void) {
	jule::Int _45117_i = (*this)._field_pos;
	for (; _45117_i < (*this)._field_file->_field_data.len(); (_45117_i)++) {
		{
			jule::I32 _45317_r = static_cast<jule::I32>((*this)._field_file->_field_data[_45117_i]);
			if (_1e15a2bb9_is_space(_45317_r)) {
				((*this)._field_pos)++;
				{
					auto _match_expr{ _45317_r };
					if (!(('\n') == _match_expr)) { goto _case_end_4333784416; }
					_case_begin_4333784416:;
					{
						(*this)._method_new_line();
					}
					goto _match_end_4333784320;
					_case_end_4333784416:;
					if (!(('\t') == _match_expr)) { goto _case_end_4333785888; }
					_case_begin_4333785888:;
					{
						(*this)._field_column+=8LL;
					}
					goto _match_end_4333784320;
					_case_end_4333785888:;
					_case_begin_4333783632:;
					{
						((*this)._field_column)++;
					}
					goto _match_end_4333784320;
					_case_end_4333783632:;
					_match_end_4333784320:;
				}
				goto _iter_next_4332714464;
			}
			jule::Int _46421_j = _45117_i;
			for (; _46421_j < (*this)._field_file->_field_data.len(); (_46421_j)++) {
				{
					if ((*this)._field_file->_field_data[_46421_j] == '\n') {
						goto _iter_end_4333782816;
					}
				}
			_iter_next_4333782816:;
			}
			_iter_end_4333782816:;
			return (*this)._field_file->_field_data.slice(_45117_i,_46421_j);
		}
	_iter_next_4332714464:;
	}
	_iter_end_4332714464:;
	return nullptr;
}



void _1e17c9de1_Lex::_method_lex_line_comment(_1e15a2bb9_Token& _47640_token) {
	jule::Int _47713_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _48117_r = (*this)._field_file->_field_data[(*this)._field_pos];
			if ((_48117_r == '\n') || (_48117_r == '\r')) {
				if ((*this)._method_is_first_token_of_line()) {
					_47640_token._field_id=18LLU;
					_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(_47713_start,(*this)._field_pos));
				}
				return;
			}
		}
	_iter_next_4333795456:;
	}
	_iter_end_4333795456:;
	if ((*this)._method_is_first_token_of_line()) {
		_47640_token._field_id=18LLU;
		_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(_47713_start));
	}
}



void _1e17c9de1_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _50017_r = (*this)._field_file->_field_data[(*this)._field_pos];
			if (_50017_r == '\r') {
				goto _iter_next_4333806304;
			}
			if (_50017_r == '\n') {
				(*this)._method_new_line();
				goto _iter_next_4333806304;
			}
			(*this)._field_column+=1LL;
			if (((((*this)._field_pos + 1LL) < (*this)._field_file->_field_data.len()) && (_50017_r == '*')) && ((*this)._field_file->_field_data[(*this)._field_pos + 1LL] == '/')) {
				(*this)._field_column+=2LL;
				(*this)._field_pos+=2LL;
				return;
			}
		}
	_iter_next_4333806304:;
	}
	_iter_end_4333806304:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>({}));
}



jule::Str _1e17c9de1_Lex::_method_num(jule::Slice<jule::U8>& _52123_txt) {
	jule::Str _52138_lit = jule::Str();
	_52138_lit=_1e17c9de1_hex_num(_52123_txt);
	if (_52138_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52138_lit=_1e17c9de1_octal_num(_52123_txt);
	if (_52138_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52138_lit=_1e17c9de1_binary_num(_52123_txt);
	if (_52138_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52138_lit=_1e17c9de1_common_num(_52123_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_52138_lit.len());
	return _52138_lit;
}



jule::Str _1e17c9de1_Lex::_method_escape_seq(jule::Slice<jule::U8>& _54030_txt) {
	jule::Str _54117_seq = jule::Str();
	if (_54030_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto _match_expr{ _54030_txt[1LL] };
		if (!(('\\') == _match_expr || ('\'') == _match_expr || ('\"') == _match_expr || ('a') == _match_expr || ('b') == _match_expr || ('f') == _match_expr || ('n') == _match_expr || ('r') == _match_expr || ('t') == _match_expr || ('v') == _match_expr)) { goto _case_end_4333835328; }
		_case_begin_4333835328:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_54030_txt.slice(0LL,2LL));
		}
		goto _match_end_4333834496;
		_case_end_4333835328:;
		if (!(('U') == _match_expr)) { goto _case_end_4333835504; }
		_case_begin_4333835504:;
		{
			_54117_seq=_1e17c9de1_big_unicode_point_escape(_54030_txt);
		}
		goto _match_end_4333834496;
		_case_end_4333835504:;
		if (!(('u') == _match_expr)) { goto _case_end_4333835600; }
		_case_begin_4333835600:;
		{
			_54117_seq=_1e17c9de1_little_unicode_point_escape(_54030_txt);
		}
		goto _match_end_4333834496;
		_case_end_4333835600:;
		if (!(('x') == _match_expr)) { goto _case_end_4333836352; }
		_case_begin_4333836352:;
		{
			_54117_seq=_1e17c9de1_hex_byte_escape(_54030_txt);
		}
		goto _match_end_4333834496;
		_case_end_4333836352:;
		_case_begin_4333833136:;
		{
			_54117_seq=_1e17c9de1_byte_escape(_54030_txt);
		}
		goto _match_end_4333834496;
		_case_end_4333833136:;
		_match_end_4333834496:;
	}
	_julec_label_end:;
	if (_54117_seq == jule::Str()) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>({}));
		return jule::Str();
	}
	(*this)._field_pos+=static_cast<jule::I64>(_54117_seq.len());
	return _54117_seq;
}



jule::Str _1e17c9de1_Lex::_method_get_rune(jule::Slice<jule::U8>& _57428_txt,jule::Bool _57441_raw) {
	if ((!(_57441_raw)) && (_57428_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_57428_txt);
	}
	jule::I32 _57914_r;
	jule::Int _57917_n;
	std::tie(_57914_r,_57917_n) = _1e176da99_decode_rune(_57428_txt);
	(*this)._field_pos+=_57917_n;
	return static_cast<jule::Str>(_57914_r);
}



jule::Str _1e17c9de1_Lex::_method_lex_rune(jule::Slice<jule::U8>& _58428_txt) {
	jule::Str _58517_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58717_n = 0LL;
	jule::Int _58817_i = 1LL;
	for (; _58817_i < _58428_txt.len(); (_58817_i)++) {
		{
			if (_58428_txt[_58817_i] == '\r') {
				goto _iter_next_4333853008;
			}
			if (_58428_txt[_58817_i] == '\n') {
				(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>({}));
				((*this)._field_pos)++;
				(*this)._method_new_line();
				return jule::Str();
			}
			jule::Slice<jule::U8> _60017_part = _58428_txt.slice(_58817_i);
			jule::Str _60117_r = (*this)._method_get_rune(_60017_part,false);
			_58517_run+=_60117_r;
			jule::I64 _60317_length = _60117_r.len();
			(*this)._field_column+=_60317_length;
			if (_60117_r == jule::Str("'", 1)) {
				((*this)._field_pos)++;
				goto _iter_end_4333853008;
			}
			if (_60317_length > 1LL) {
				_58817_i+=static_cast<jule::I64>(_60317_length - 1LL);
			}
			(_58717_n)++;
		}
	_iter_next_4333853008:;
	}
	_iter_end_4333853008:;
	if (_58717_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>({}));
	} else if (_58717_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>({}));
	}
	return _58517_run;
}



jule::Str _1e17c9de1_Lex::_method_lex_str(void) {
	jule::Str _62517_s = jule::Str();
	jule::U8 _62613_mark = (*this)._field_file->_field_data[(*this)._field_pos];
	((*this)._field_pos)++;
	jule::Bool _62813_raw = _62613_mark == '`';
	_62517_s+=static_cast<jule::Str>(_62613_mark);
	((*this)._field_column)++;
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			jule::U8 _63317_ch = (*this)._field_file->_field_data[(*this)._field_pos];
			if (_63317_ch == '\r') {
				goto _iter_next_4333875776;
			}
			if (_63317_ch == '\n') {
				(*this)._method_new_line();
				if ((!(_62813_raw))) {
					(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>({}));
					((*this)._field_pos)++;
					return jule::Str();
				}
			}
			jule::Slice<jule::U8> _64521_part = (*this)._field_file->_field_data.slice((*this)._field_pos);
			jule::Str _64617_r = (*this)._method_get_rune(_64521_part,_62813_raw);
			_62517_s+=_64617_r;
			(*this)._field_column+=static_cast<jule::I64>(_64617_r.len());
			if (_63317_ch == _62613_mark) {
				goto _iter_end_4333875776;
			}
		}
	_iter_next_4333875776:;
	}
	_iter_end_4333875776:;
	return _62517_s;
}



jule::Bool _1e17c9de1_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



void _1e17c9de1_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



jule::Bool _1e17c9de1_Lex::_method_is_op(jule::Slice<jule::U8>& _66625_txt,jule::Str _66638_kind,jule::Uint _66649_id,_1e15a2bb9_Token& _66667_t) {
	if ((!(_1e17c9de1_bytes_has_prefix(_66625_txt,_66638_kind)))) {
		return false;
	}
	_66667_t._field_kind=_66638_kind;
	_66667_t._field_id=_66649_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66638_kind.len());
	return true;
}



jule::Bool _1e17c9de1_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67732_txt,_1e15a2bb9_Token& _67750_tok) {
	{
		auto expr = _1e17c9de1_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_4333901792:;
		if (it != expr.end()) {
			_1e17c9de1_KindPair _1e17c9de1_pair = *it;
			{
				if ((*this)._method_is_op(_67732_txt,_1e17c9de1_pair._field_kind,_1e17c9de1_pair._field_id,_67750_tok)) {
					return true;
				}
			}
			_iter_next_4333901792:;
			++it;
			goto _iter_begin_4333901792;
		}
		_iter_end_4333901792:;
	}
	return false;
}



jule::Bool _1e17c9de1_Lex::_method_lex_id(jule::Slice<jule::U8>& _68726_txt,_1e15a2bb9_Token& _68744_t) {
	jule::Str _68813_lex = (*this)._method_id(_68726_txt);
	if (_68813_lex == jule::Str()) {
		return false;
	}
	_68744_t._field_kind=_68813_lex;
	_68744_t._field_id=2LLU;
	return true;
}



jule::Bool _1e17c9de1_Lex::_method_lex_num(jule::Slice<jule::U8>& _69827_txt,_1e15a2bb9_Token& _69845_t) {
	jule::Str _69913_lex = (*this)._method_num(_69827_txt);
	if (_69913_lex == jule::Str()) {
		return false;
	}
	_69845_t._field_kind=_69913_lex;
	_69845_t._field_id=6LLU;
	return true;
}



_1e15a2bb9_Token _1e17c9de1_Lex::_method_token(void) {
	_1e15a2bb9_Token _71117_t = _1e15a2bb9_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _71313_txt = (*this)._method_resume();
	if (_71313_txt == nullptr) {
		return _71117_t;
	}
	_71117_t._field_column=(*this)._field_column;
	_71117_t._field_row=(*this)._field_row;
	{
		if (!(((*this)._method_lex_num(_71313_txt,_71117_t)))) { goto _case_end_4333923664; }
		goto _match_end_4333919616;
		_case_end_4333923664:;
		if (!((_71313_txt[0LL] == '\''))) { goto _case_end_4333925584; }
		_case_begin_4333925584:;
		{
			_71117_t._field_kind=(*this)._method_lex_rune(_71313_txt);
			_71117_t._field_id=6LLU;
			return _71117_t;
		}
		goto _match_end_4333919616;
		_case_end_4333925584:;
		if (!(((_71313_txt[0LL] == '\"') || (_71313_txt[0LL] == '`')))) { goto _case_end_4333921584; }
		_case_begin_4333921584:;
		{
			_71117_t._field_kind=(*this)._method_lex_str();
			_71117_t._field_id=6LLU;
			return _71117_t;
		}
		goto _match_end_4333919616;
		_case_end_4333921584:;
		if (!((_1e17c9de1_bytes_has_prefix(_71313_txt,jule::Str("//", 2))))) { goto _case_end_4333921680; }
		_case_begin_4333921680:;
		{
			(*this)._method_lex_line_comment(_71117_t);
			return _71117_t;
		}
		goto _match_end_4333919616;
		_case_end_4333921680:;
		if (!((_1e17c9de1_bytes_has_prefix(_71313_txt,jule::Str("/*", 2))))) { goto _case_end_4333921776; }
		_case_begin_4333921776:;
		{
			(*this)._method_lex_range_comment();
			return _71117_t;
		}
		goto _match_end_4333919616;
		_case_end_4333921776:;
		if (!(((*this)._method_is_op(_71313_txt,jule::Str("(", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str(")", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("{", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("}", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("[", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("]", 1),3LLU,_71117_t)) || ((*this)._method_lex_basic_ops(_71313_txt,_71117_t)))) { goto _case_end_4333921872; }
		goto _match_end_4333919616;
		_case_end_4333921872:;
		if (!(((*this)._method_lex_id(_71313_txt,_71117_t)))) { goto _case_end_4333926176; }
		_case_begin_4333926176:;
		{
			{
				auto expr = _1e17c9de1_KEYWORDS;
				auto it = expr.begin();
				_iter_begin_4333940352:;
				if (it != expr.end()) {
					_1e17c9de1_KindPair _1e17c9de1_pair = *it;
					{
						if (_1e17c9de1_pair._field_kind == _71117_t._field_kind) {
							_71117_t._field_id=_1e17c9de1_pair._field_id;
							goto _iter_end_4333940352;
						}
					}
					_iter_next_4333940352:;
					++it;
					goto _iter_begin_4333940352;
				}
				_iter_end_4333940352:;
			}
		}
		goto _match_end_4333919616;
		_case_end_4333926176:;
		_case_begin_4333920576:;
		{
			jule::I32 _76318_r;
			jule::Int _76321_sz;
			std::tie(_76318_r,_76321_sz) = _1e176da99_decode_rune(_71313_txt);
			(*this)._method_push_err(jule::Str("undefined code content: @", 25),jule::Slice<jule::Any>({jule::Any(_76318_r)}));
			((*this)._field_column)++;
			(*this)._field_pos+=_76321_sz;
			return _71117_t;
		}
		goto _match_end_4333919616;
		_case_end_4333920576:;
		_match_end_4333919616:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_71117_t._field_kind.len());
	return _71117_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e17c9de1_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e15a53c5_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_RefTypeDecl &_Src) {
	_Stream << "RefTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_PtrTypeDecl::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_ArrTypeDecl::_method_auto_sized(void) {
	return (!(jule::real((*this)._field_size)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1630153_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1630153_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e184a280_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



void _1e184a280_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



jule::Bool _1e184a280_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



jule::Bool _1e184a280_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stms.len();
}



jule::Bool _1e184a280_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stms.len();
}



void _1e184a280_ScopeParser::_method_push_err(_1e15a2bb9_Token _17627_token,jule::Str _17641_fmt) {
	(*this)._field_p->_method_push_err(_17627_token,_17641_fmt,jule::Slice<jule::Any>({}));
}



void _1e184a280_ScopeParser::_method_push_suggestion(jule::Str _17934_fmt,jule::Slice<jule::Any> _17947_args) {
	(*this)._field_p->_method_push_suggestion(_17934_fmt,_17947_args);
}



void _1e184a280_ScopeParser::_method_insert_as_next(jule::Slice<_1e15a2bb9_Token>& _18338_tokens) {
	(*this)._field_stms=jule::append((*this)._field_stms.slice(0LL,(*this)._field_pos + 1LL),(*this)._field_stms.slice((*this)._field_pos));
	(*this)._field_stms[(*this)._field_pos + 1LL]=jule::new_struct<_1e184a280_Stmt>(new( std::nothrow ) _1e184a280_Stmt(_18338_tokens,jule::Bool()));
}



jule::Ref<_1e184a280_Stmt> _1e184a280_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stms[(*this)._field_pos];
}



jule::Ref<_1e16025cb_ScopeTree> _1e184a280_ScopeParser::_method_build_scope(jule::Slice<_1e15a2bb9_Token>& _19335_tokens) {
	jule::Ref<_1e16025cb_ScopeTree> _19417_s = _1e184a280_new_scope();
	_19417_s->_field_parent=(*this)._field_s;
	_1e184a280_ScopeParser _19617_ssp = _1e184a280_ScopeParser((*this)._field_p,jule::Ref<_1e16025cb_ScopeTree>(),jule::Slice<jule::Ref<_1e184a280_Stmt>>(),jule::Int());
	_19617_ssp._method_build(_19335_tokens,_19417_s);
	return _19417_s;
}



jule::Any _1e184a280_ScopeParser::_method_build_var_st(jule::Slice<_1e15a2bb9_Token>& _20336_tokens) {
	jule::Ref<_1e16025cb_VarDecl> _20417_v = (*this)._field_p->_method_build_var(_20336_tokens);
	_20417_v->_field_scope=(*this)._field_s;
	return jule::Any(_20417_v);
}



jule::Any _1e184a280_ScopeParser::_method_build_ret_st(jule::Slice<_1e15a2bb9_Token> _20935_tokens) {
	jule::Ref<_1e16025cb_RetSt> _21017_st = jule::new_struct<_1e16025cb_RetSt>(new( std::nothrow ) _1e16025cb_RetSt(_20935_tokens[0LL],jule::Ref<_1e16025cb_Expr>()));
	if (_20935_tokens.len() > 1LL) {
		_20935_tokens=_20935_tokens.slice(1LL);
		_21017_st->_field_expr=(*this)._field_p->_method_build_expr(_20935_tokens);
	}
	return jule::Any(_21017_st);
}



jule::Any _1e184a280_ScopeParser::_method_build_while_next_iter(jule::Ref<_1e184a280_Stmt>& _22045_s) {
	jule::Ref<_1e16025cb_Iter> _22117_it = jule::new_struct<_1e16025cb_Iter>(new( std::nothrow ) _1e16025cb_Iter(_22045_s->_field_tokens[0LL],jule::Any(),jule::Ref<_1e16025cb_ScopeTree>()));
	jule::Slice<_1e15a2bb9_Token> _22417_tokens = _22045_s->_field_tokens.slice(1LL);
	jule::Ref<_1e16025cb_WhileKind> _22517_kind = jule::new_struct<_1e16025cb_WhileKind>(new( std::nothrow ) _1e16025cb_WhileKind());
	if (_22417_tokens.len() > 0LL) {
		_22517_kind->_field_expr=(*this)._field_p->_method_build_expr(_22417_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_22117_it->_field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_22417_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_1e15a2bb9_Token> _23717_st_tokens = _1e1776d27_get_block_expr(_22417_tokens);
	if (_23717_st_tokens.len() > 0LL) {
		jule::Ref<_1e184a280_Stmt> _23921_stmt = jule::new_struct<_1e184a280_Stmt>(new( std::nothrow ) _1e184a280_Stmt(_23717_st_tokens,_22045_s->_field_terminated));
		_22517_kind->_field_next_token=_23717_st_tokens[0LL];
		_22517_kind->_field_next=(*this)._method_build_st(_23921_stmt);
	}
	jule::I64 _24717_i = _23717_st_tokens.len();
	jule::Slice<_1e15a2bb9_Token> _24817_block_tokens = _1e25dc95b_range(_24717_i,jule::Str("{", 1),jule::Str("}", 1),_22417_tokens);
	if (_24817_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_22117_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_24717_i < _22417_tokens.len()) {
		(*this)._method_push_err(_22417_tokens[_24717_i],jule::Str("invalid syntax", 14));
	}
	_22117_it->_field_scope=(*this)._method_build_scope(_24817_block_tokens);
	_22117_it->_field_kind=jule::Any(_22517_kind);
	return jule::Any(_22117_it);
}



jule::Ref<_1e16025cb_WhileKind> _1e184a280_ScopeParser::_method_build_while_iter_kind(jule::Slice<_1e15a2bb9_Token>& _26545_tokens) {
	return jule::new_struct<_1e16025cb_WhileKind>(new( std::nothrow ) _1e16025cb_WhileKind((*this)._field_p->_method_build_expr(_26545_tokens),jule::Any(),_1e15a2bb9_Token()));
}



jule::Slice<jule::Slice<_1e15a2bb9_Token>> _1e184a280_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_1e15a2bb9_Token>& _27150_toks) {
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _27218_vars;
	jule::Slice<_1ec8e8025_Log> _27224_errs;
	std::tie(_27218_vars,_27224_errs) = _1e25dc95b_parts(_27150_toks,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_27224_errs);
	return _27218_vars;
}



jule::Ref<_1e16025cb_VarDecl> _1e184a280_ScopeParser::_method_build_range_kind_key(jule::Slice<_1e15a2bb9_Token>& _27744_tokens) {
	if (_27744_tokens.len() == 0LL) {
		return jule::new_ref<_1e16025cb_VarDecl>();
	}
	jule::Ref<_1e16025cb_VarDecl> _28117_key = jule::new_struct<_1e16025cb_VarDecl>(new( std::nothrow ) _1e16025cb_VarDecl(jule::Ref<_1e16025cb_ScopeTree>(),_27744_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1e16025cb_Directive>>(),jule::Ref<_1e16025cb_CommentGroup>(),jule::Ref<_1e16025cb_TypeDecl>(),jule::Ref<_1e16025cb_Expr>()));
	if (_28117_key->_field_token._field_id == 36LLU) {
		_28117_key->_field_mutable=true;
		if (_27744_tokens.len() == 1LL) {
			(*this)._method_push_err(_28117_key->_field_token,jule::Str("invalid syntax", 14));
		}
		_28117_key->_field_token=_27744_tokens[1LL];
	} else if (_27744_tokens.len() > 1LL) {
		(*this)._method_push_err(_27744_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_28117_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_28117_key->_field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_VarDecl>();
	}
	_28117_key->_field_ident=_28117_key->_field_token._field_kind;
	return _28117_key;
}



jule::Slice<jule::Ref<_1e16025cb_VarDecl>> _1e184a280_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_1e15a2bb9_Token>>& _30245_parts) {
	jule::Slice<jule::Ref<_1e16025cb_VarDecl>> _30317_keys = nullptr;
	{
		auto expr = _30245_parts;
		auto it = expr.begin();
		_iter_begin_4334678480:;
		if (it != expr.end()) {
			jule::Slice<_1e15a2bb9_Token> _1e184a280_tokens = *it;
			{
				_30317_keys=jule::append(_30317_keys,jule::Slice<jule::Ref<_1e16025cb_VarDecl>>({(*this)._method_build_range_kind_key(_1e184a280_tokens)}));
			}
			_iter_next_4334678480:;
			++it;
			goto _iter_begin_4334678480;
		}
		_iter_end_4334678480:;
	}
	return _30317_keys;
}



void _1e184a280_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ref<_1e16025cb_RangeKind>& _31051_rng,jule::Slice<_1e15a2bb9_Token>& _31073_tokens) {
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _31117_key_tokens = (*this)._method_get_range_kind_keys_tokens(_31073_tokens);
	if (_31117_key_tokens.len() == 0LL) {
		return;
	}
	if (_31117_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_31051_rng->_field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ref<_1e16025cb_VarDecl>> _31817_keys = (*this)._method_build_range_kind_keys(_31117_key_tokens);
	_31051_rng->_field_key_a=_31817_keys[0LL];
	if (_31817_keys.len() > 1LL) {
		_31051_rng->_field_key_b=_31817_keys[1LL];
	}
}



void _1e184a280_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ref<_1e16025cb_RangeKind>& _32554_rng,jule::Slice<_1e15a2bb9_Token>& _32576_tokens) {
	jule::Int _32617_i = 0LL;
	jule::Slice<_1e15a2bb9_Token> _32717_rang = _1e25dc95b_range(_32617_i,jule::Str("(", 1),jule::Str(")", 1),_32576_tokens);
	if (_32617_i < _32576_tokens.len()) {
		(*this)._method_push_err(_32554_rng->_field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_32554_rng,_32717_rang);
}



void _1e184a280_ScopeParser::_method_setup_range_kind_keys(jule::Ref<_1e16025cb_RangeKind>& _33445_rng,jule::Slice<_1e15a2bb9_Token>& _33467_tokens) {
	if (_33467_tokens[0LL]._field_id == 3LLU) {
		if (_33467_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_33467_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_33445_rng,_33467_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_33445_rng,_33467_tokens);
}



jule::Ref<_1e16025cb_RangeKind> _1e184a280_ScopeParser::_method_build_range_iter_kind(jule::Slice<_1e15a2bb9_Token>& _34645_var_tokens,jule::Slice<_1e15a2bb9_Token>& _34714_expr_tokens,_1e15a2bb9_Token& _34741_in_token) {
	jule::Ref<_1e16025cb_RangeKind> _34817_rng = jule::new_struct<_1e16025cb_RangeKind>(new( std::nothrow ) _1e16025cb_RangeKind(_34741_in_token,jule::Ref<_1e16025cb_Expr>(),jule::Ref<_1e16025cb_VarDecl>(),jule::Ref<_1e16025cb_VarDecl>()));
	if (_34714_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_34817_rng->_field_in_token,jule::Str("expression missing", 18));
		return _34817_rng;
	}
	_34817_rng->_field_expr=(*this)._field_p->_method_build_expr(_34714_expr_tokens);
	if (_34645_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_34817_rng,_34645_var_tokens);
	}
	return _34817_rng;
}



jule::Any _1e184a280_ScopeParser::_method_build_common_iter_kind(jule::Slice<_1e15a2bb9_Token>& _36246_tokens,_1e15a2bb9_Token& _36264_err_tok) {
	jule::Int _36317_brace_n = 0LL;
	{
		auto expr = _36246_tokens;
		auto it = expr.begin();
		_iter_begin_4334720480:;
		if (it != expr.end()) {
			jule::Int _1e184a280_i = it - expr.begin();
			_1e15a2bb9_Token _1e184a280_tok = *it;
			{
				if (_1e184a280_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1e184a280_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4334725264; }
						_case_begin_4334725264:;
						{
							(_36317_brace_n)++;
							goto _iter_next_4334720480;
						}
						goto _match_end_4334723904;
						_case_end_4334725264:;
						_case_begin_4334723216:;
						{
							(_36317_brace_n)--;
						}
						goto _match_end_4334723904;
						_case_end_4334723216:;
						_match_end_4334723904:;
					}
				}
				if (_36317_brace_n != 0LL) {
					goto _iter_next_4334720480;
				}
				{
					auto _match_expr{ _1e184a280_tok._field_id };
					if (!((15LLU) == _match_expr)) { goto _case_end_4334724416; }
					_case_begin_4334724416:;
					{
						jule::Slice<_1e15a2bb9_Token> _38225_decl_tokens = _36246_tokens.slice(0LL,_1e184a280_i);
						jule::Slice<_1e15a2bb9_Token> _38325_expr_tokens = _36246_tokens.slice(_1e184a280_i + 1LL);
						return jule::Any((*this)._method_build_range_iter_kind(_38225_decl_tokens,_38325_expr_tokens,_1e184a280_tok));
					}
					goto _match_end_4334725616;
					_case_end_4334724416:;
					_match_end_4334725616:;
				}
			}
			_iter_next_4334720480:;
			++it;
			_1e184a280_i++;
			goto _iter_begin_4334720480;
		}
		_iter_end_4334720480:;
	}
	return jule::Any((*this)._method_build_while_iter_kind(_36246_tokens));
}



jule::Any _1e184a280_ScopeParser::_method_build_common_iter(jule::Slice<_1e15a2bb9_Token> _39040_tokens) {
	jule::Ref<_1e16025cb_Iter> _39117_it = jule::new_struct<_1e16025cb_Iter>(new( std::nothrow ) _1e16025cb_Iter(_39040_tokens[0LL],jule::Any(),jule::Ref<_1e16025cb_ScopeTree>()));
	_39040_tokens=_39040_tokens.slice(1LL);
	if (_39040_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_39117_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	jule::Slice<_1e15a2bb9_Token> _40117_expr_tokens = _1e1776d27_get_block_expr(_39040_tokens);
	if (_40117_expr_tokens.len() > 0LL) {
		_39117_it->_field_kind=(*this)._method_build_common_iter_kind(_40117_expr_tokens,_39117_it->_field_token);
	}
	jule::I64 _40517_i = _40117_expr_tokens.len();
	jule::Slice<_1e15a2bb9_Token> _40617_scope_tokens = _1e25dc95b_range(_40517_i,jule::Str("{", 1),jule::Str("}", 1),_39040_tokens);
	if (_40617_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_39117_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_40517_i < _39040_tokens.len()) {
		(*this)._method_push_err(_39040_tokens[_40517_i],jule::Str("invalid syntax", 14));
	}
	_39117_it->_field_scope=(*this)._method_build_scope(_40617_scope_tokens);
	return jule::Any(_39117_it);
}



jule::Any _1e184a280_ScopeParser::_method_buid_iter_st(jule::Ref<_1e184a280_Stmt>& _42036_st) {
	if (_42036_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_42036_st);
	}
	return (*this)._method_build_common_iter(_42036_st->_field_tokens);
}



jule::Any _1e184a280_ScopeParser::_method_build_break_st(jule::Slice<_1e15a2bb9_Token>& _42738_tokens) {
	jule::Ref<_1e16025cb_BreakSt> _42817_brk = jule::new_struct<_1e16025cb_BreakSt>(new( std::nothrow ) _1e16025cb_BreakSt(_42738_tokens[0LL],_1e15a2bb9_Token()));
	if (_42738_tokens.len() > 1LL) {
		if (_42738_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_42738_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_42817_brk->_field_label=_42738_tokens[1LL];
			if (_42738_tokens.len() > 2LL) {
				(*this)._method_push_err(_42738_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_42817_brk);
}



jule::Any _1e184a280_ScopeParser::_method_build_cont_st(jule::Slice<_1e15a2bb9_Token>& _44537_tokens) {
	jule::Ref<_1e16025cb_ContSt> _44617_cont = jule::new_struct<_1e16025cb_ContSt>(new( std::nothrow ) _1e16025cb_ContSt(_44537_tokens[0LL],_1e15a2bb9_Token()));
	if (_44537_tokens.len() > 1LL) {
		if (_44537_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_44537_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_44617_cont->_field_label=_44537_tokens[1LL];
			if (_44537_tokens.len() > 2LL) {
				(*this)._method_push_err(_44537_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44617_cont);
}



jule::Ref<_1e16025cb_If> _1e184a280_ScopeParser::_method_build_if(jule::Slice<_1e15a2bb9_Token>& _46332_tokens) {
	jule::Ref<_1e16025cb_If> _46417_model = jule::new_struct<_1e16025cb_If>(new( std::nothrow ) _1e16025cb_If(_46332_tokens[0LL],jule::Ref<_1e16025cb_Expr>(),jule::Ref<_1e16025cb_ScopeTree>()));
	_46332_tokens=_46332_tokens.slice(1LL);
	jule::Slice<_1e15a2bb9_Token> _46817_expr_tokens = _1e1776d27_get_block_expr(_46332_tokens);
	jule::Int _46917_i = 0LL;
	if (_46817_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_46417_model->_field_token,jule::Str("expression missing", 18));
	} else {
		_46917_i=static_cast<jule::I64>(_46817_expr_tokens.len());
	}
	jule::Slice<_1e15a2bb9_Token> _47517_scope_tokens = _1e25dc95b_range(_46917_i,jule::Str("{", 1),jule::Str("}", 1),_46332_tokens);
	if (_47517_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_46417_model->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_If>();
	}
	if (_46917_i < _46332_tokens.len()) {
		if (_46332_tokens[_46917_i]._field_id == 17LLU) {
			_46332_tokens=_46332_tokens.slice(_46917_i);
		} else {
			(*this)._method_push_err(_46332_tokens[_46917_i],jule::Str("invalid syntax", 14));
			_46332_tokens=nullptr;
		}
	}
	_46417_model->_field_expr=(*this)._field_p->_method_build_expr(_46817_expr_tokens);
	_46417_model->_field_scope=(*this)._method_build_scope(_47517_scope_tokens);
	return _46417_model;
}



jule::Ref<_1e16025cb_Else> _1e184a280_ScopeParser::_method_build_else(jule::Slice<_1e15a2bb9_Token>& _49534_tokens) {
	jule::Ref<_1e16025cb_Else> _49617_els = jule::new_struct<_1e16025cb_Else>(new( std::nothrow ) _1e16025cb_Else(_49534_tokens[0LL],jule::Ref<_1e16025cb_ScopeTree>()));
	_49534_tokens=_49534_tokens.slice(1LL);
	jule::Int _50017_i = 0LL;
	jule::Slice<_1e15a2bb9_Token> _50117_scope_tokens = _1e25dc95b_range(_50017_i,jule::Str("{", 1),jule::Str("}", 1),_49534_tokens);
	if (_50117_scope_tokens == nullptr) {
		if (_50017_i < _49534_tokens.len()) {
			(*this)._method_push_err(_49617_els->_field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_49617_els->_field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_1e16025cb_Else>();
	}
	if (_50017_i < _49534_tokens.len()) {
		(*this)._method_push_err(_49534_tokens[_50017_i],jule::Str("invalid syntax", 14));
	}
	_49617_els->_field_scope=(*this)._method_build_scope(_50117_scope_tokens);
	return _49617_els;
}



jule::Any _1e184a280_ScopeParser::_method_build_if_else_chain(jule::Slice<_1e15a2bb9_Token> _51942_tokens) {
	jule::Ref<_1e16025cb_Conditional> _52017_chain = jule::new_struct<_1e16025cb_Conditional>(new( std::nothrow ) _1e16025cb_Conditional((*this)._method_build_if(_51942_tokens),jule::Slice<jule::Ref<_1e16025cb_If>>(),jule::Ref<_1e16025cb_Else>()));
	if ((!(jule::real(_52017_chain->_field_head)))) {
		return jule::Any(nullptr);
	}
	while (_51942_tokens != nullptr) {
		{
			if (_51942_tokens[0LL]._field_id != 17LLU) {
				goto _iter_end_4334832496;
			}
			if ((_51942_tokens.len() > 1LL) && (_51942_tokens[1LL]._field_id == 16LLU)) {
				_51942_tokens=_51942_tokens.slice(1LL);
				jule::Ref<_1e16025cb_If> _53225_elif = (*this)._method_build_if(_51942_tokens);
				_52017_chain->_field_tail=jule::append(_52017_chain->_field_tail,jule::Slice<jule::Ref<_1e16025cb_If>>({_53225_elif}));
				goto _iter_next_4334832496;
			}
			_52017_chain->_field_default=(*this)._method_build_else(_51942_tokens);
			goto _iter_end_4334832496;
		}
	_iter_next_4334832496:;
	}
	_iter_end_4334832496:;
	return jule::Any(_52017_chain);
}



jule::Any _1e184a280_ScopeParser::_method_build_comment_st(_1e15a2bb9_Token& _54236_token) {
	return jule::Any(_1e25dc95b_build_comment(_54236_token));
}



jule::Any _1e184a280_ScopeParser::_method_build_call_st(jule::Slice<_1e15a2bb9_Token>& _54637_tokens) {
	_1e15a2bb9_Token _54713_token = _54637_tokens[0LL];
	if (_1e1776d27_is_fn_call(_54637_tokens) == nullptr) {
		(*this)._method_push_err(_54713_token,jule::Str("statement must have function call expression", 44));
	}
	jule::Ref<_1e16025cb_Expr> _55117_expr = (*this)._field_p->_method_build_expr(_54637_tokens);
	if (jule::real(_55117_expr) && (!(_55117_expr->_method_is_fn_call()))) {
		(*this)._method_push_err(_54713_token,jule::Str("invalid syntax", 14));
	}
	return jule::Any(_55117_expr);
}



jule::Any _1e184a280_ScopeParser::_method_build_co_call_st(jule::Slice<_1e15a2bb9_Token> _55839_tokens) {
	_55839_tokens=_55839_tokens.slice(1LL);
	jule::Any _56017_cc = (*this)._method_build_call_st(_55839_tokens);
	_56017_cc.operator jule::Ref<_1e16025cb_Expr>()->_field_kind.operator jule::Ref<_1e16025cb_FnCallExpr>()->_field_concurrent=true;
	return _56017_cc;
}



jule::Any _1e184a280_ScopeParser::_method_build_goto_st(jule::Slice<_1e15a2bb9_Token>& _56537_tokens) {
	jule::Ref<_1e16025cb_GotoSt> _56617_gt = jule::new_struct<_1e16025cb_GotoSt>(new( std::nothrow ) _1e16025cb_GotoSt(_56537_tokens[0LL],_1e15a2bb9_Token()));
	if (_56537_tokens.len() == 1LL) {
		(*this)._method_push_err(_56617_gt->_field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_56537_tokens.len() > 2LL) {
		(*this)._method_push_err(_56537_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_1e15a2bb9_Token _57517_ident_token = _56537_tokens[1LL];
	if (_57517_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_57517_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::Any(_56617_gt);
	}
	_56617_gt->_field_label=_57517_ident_token;
	return jule::Any(_56617_gt);
}



jule::Any _1e184a280_ScopeParser::_method_build_fall_st(jule::Slice<_1e15a2bb9_Token>& _58537_tokens) {
	jule::Ref<_1e16025cb_FallSt> _58617_fll = jule::new_struct<_1e16025cb_FallSt>(new( std::nothrow ) _1e16025cb_FallSt(_58537_tokens[0LL]));
	if (_58537_tokens.len() > 1LL) {
		(*this)._method_push_err(_58537_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_58617_fll);
}



jule::Any _1e184a280_ScopeParser::_method_build_type_alias_st(jule::Slice<_1e15a2bb9_Token>& _59543_tokens) {
	jule::Ref<_1e16025cb_TypeAliasDecl> _59617_tad = (*this)._field_p->_method_build_type_alias_decl(_59543_tokens);
	_59617_tad->_field_scope=(*this)._field_s;
	return jule::Any(_59617_tad);
}



void _1e184a280_ScopeParser::_method_push_case_expr(jule::Slice<_1e15a2bb9_Token> _60137_tokens,_1e15a2bb9_Token _60158_token,jule::Bool _6029_type_match,jule::Slice<jule::Ref<_1e16025cb_Expr>>& _60232_exprs) {
	if (_60137_tokens.len() == 0LL) {
		return;
	}
	if (_6029_type_match) {
		jule::Int _60821_i = 0LL;
		jule::Ref<_1e16025cb_TypeDecl> _60922_t;
		jule::Bool _60925_ok;
		std::tie(_60922_t,_60925_ok) = (*this)._field_p->_method_build_type(_60137_tokens,(&(_60821_i)),true);
		if (_60925_ok) {
			_60232_exprs=jule::append(_60232_exprs,jule::Slice<jule::Ref<_1e16025cb_Expr>>({jule::new_struct<_1e16025cb_Expr>(new( std::nothrow ) _1e16025cb_Expr(_60158_token,jule::Any(_60922_t)))}));
		}
		if (_60821_i < _60137_tokens.len()) {
			(*this)._method_push_err(_60137_tokens[_60821_i],jule::Str("invalid syntax", 14));
		}
		return;
	}
	_60232_exprs=jule::append(_60232_exprs,jule::Slice<jule::Ref<_1e16025cb_Expr>>({(*this)._field_p->_method_build_expr(_60137_tokens)}));
}



jule::Slice<jule::Ref<_1e16025cb_Expr>> _1e184a280_ScopeParser::_method_build_case_exprs(jule::Slice<_1e15a2bb9_Token>& _62440_tokens,jule::Bool _62457_type_match) {
	jule::Slice<jule::Ref<_1e16025cb_Expr>> _62517_exprs = jule::Slice<jule::Ref<_1e16025cb_Expr>>::alloc(0LL,1LL);
	jule::Int _62717_brace_n = 0LL;
	jule::Int _62817_j = 0LL;
	{
		auto expr = _62440_tokens;
		auto it = expr.begin();
		_iter_begin_4334902720:;
		if (it != expr.end()) {
			jule::Int _1e184a280_i = it - expr.begin();
			_1e15a2bb9_Token _1e184a280_tok = *it;
			{
				if (_1e184a280_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1e184a280_tok._field_kind };
						if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4334907552; }
						_case_begin_4334907552:;
						{
							(_62717_brace_n)++;
						}
						goto _match_end_4334906192;
						_case_end_4334907552:;
						_case_begin_4334905504:;
						{
							(_62717_brace_n)--;
						}
						goto _match_end_4334906192;
						_case_end_4334905504:;
						_match_end_4334906192:;
					}
					goto _iter_next_4334902720;
				} else if (_62717_brace_n != 0LL) {
					goto _iter_next_4334902720;
				}
				{
					if (!(((_1e184a280_tok._field_id == 7LLU) && (_1e184a280_tok._field_kind == jule::Str("|", 1))))) { goto _case_end_4334908352; }
					_case_begin_4334908352:;
					{
						jule::Slice<_1e15a2bb9_Token> _64621_expr_tokens = _62440_tokens.slice(_62817_j,_1e184a280_i);
						if (_64621_expr_tokens.len() == 0LL) {
							(*this)._method_push_err(_1e184a280_tok,jule::Str("expression missing", 18));
						} else {
							(*this)._method_push_case_expr(_62440_tokens.slice(_62817_j,_1e184a280_i),_1e184a280_tok,_62457_type_match,_62517_exprs);
						}
						_62817_j=static_cast<jule::Int>(_1e184a280_i + 1LL);
					}
					goto _match_end_4334905056;
					_case_end_4334908352:;
					if (!((_1e184a280_tok._field_id == 11LLU))) { goto _case_end_4334907904; }
					_case_begin_4334907904:;
					{
						(*this)._method_push_case_expr(_62440_tokens.slice(_62817_j,_1e184a280_i),_1e184a280_tok,_62457_type_match,_62517_exprs);
						_62440_tokens=_62440_tokens.slice(_1e184a280_i + 1LL);
						return _62517_exprs;
					}
					goto _match_end_4334905056;
					_case_end_4334907904:;
					_match_end_4334905056:;
				}
			}
			_iter_next_4334902720:;
			++it;
			_1e184a280_i++;
			goto _iter_begin_4334902720;
		}
		_iter_end_4334902720:;
	}
	(*this)._method_push_err(_62440_tokens[0LL],jule::Str("invalid syntax", 14));
	_62440_tokens=nullptr;
	return nullptr;
}



jule::Ref<_1e16025cb_ScopeTree> _1e184a280_ScopeParser::_method_build_case_scope(jule::Slice<_1e15a2bb9_Token>& _66540_tokens) {
	jule::Int _66617_n = 0LL;
	for (;;) {
		{
			jule::Int _66821_i = 0LL;
			jule::Slice<_1e15a2bb9_Token> _66922_next;
			std::tie(_66922_next,std::ignore) = _1e184a280_skip_st(_66821_i,_66540_tokens.slice(_66617_n));
			if (_66922_next.len() == 0LL) {
				goto _iter_end_4334921088;
			}
			_1e15a2bb9_Token _67317_tok = _66922_next[0LL];
			if ((_67317_tok._field_id != 7LLU) || (_67317_tok._field_kind != jule::Str("|", 1))) {
				_66617_n+=_66821_i;
				goto _iter_next_4334921088;
			}
			jule::Slice<_1e15a2bb9_Token> _67821_scope_tokens = _66540_tokens.slice(0LL,_66617_n);
			jule::Ref<_1e16025cb_ScopeTree> _67921_scope = (*this)._method_build_scope(_67821_scope_tokens);
			_66540_tokens=_66540_tokens.slice(_66617_n);
			return _67921_scope;
		}
	_iter_next_4334921088:;
	}
	_iter_end_4334921088:;
	jule::Ref<_1e16025cb_ScopeTree> _68317_scope = (*this)._method_build_scope(_66540_tokens);
	_66540_tokens=nullptr;
	return _68317_scope;
}



std::tuple<jule::Ref<_1e16025cb_Case>,jule::Bool> _1e184a280_ScopeParser::_method_build_case(jule::Slice<_1e15a2bb9_Token>& _68834_tokens,jule::Bool _68851_type_match) {
	jule::Ref<_1e16025cb_Case> _68917_c = jule::new_struct<_1e16025cb_Case>(new( std::nothrow ) _1e16025cb_Case(_68834_tokens[0LL],jule::Ref<_1e16025cb_ScopeTree>(),jule::Slice<jule::Ref<_1e16025cb_Expr>>()));
	_68834_tokens=_68834_tokens.slice(1LL);
	_68917_c->_field_exprs=(*this)._method_build_case_exprs(_68834_tokens,_68851_type_match);
	_68917_c->_field_scope=(*this)._method_build_case_scope(_68834_tokens);
	jule::Bool _69513_is_default = _68917_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_68917_c,_69513_is_default);
}



std::tuple<jule::Slice<jule::Ref<_1e16025cb_Case>>,jule::Ref<_1e16025cb_Else>> _1e184a280_ScopeParser::_method_build_cases(jule::Slice<_1e15a2bb9_Token> _69934_tokens,jule::Bool _69951_type_match) {
	jule::Slice<jule::Ref<_1e16025cb_Case>> _70017_cases = nullptr;
	jule::Ref<_1e16025cb_Else> _70117_def = jule::new_ref<_1e16025cb_Else>();
	jule::Bool _70217_def_not_last = false;
	while (_69934_tokens.len() > 0LL) {
		{
			_1e15a2bb9_Token _70421_tok = _69934_tokens[0LL];
			if (_70421_tok._field_id == 18LLU) {
				_69934_tokens=_69934_tokens.slice(1LL);
				goto _iter_next_4334946688;
			}
			if ((_70421_tok._field_id != 7LLU) || (_70421_tok._field_kind != jule::Str("|", 1))) {
				(*this)._method_push_err(_70421_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_4334946688;
			}
			jule::Ref<_1e16025cb_Case> _71522_c;
			jule::Bool _71525_is_default;
			std::tie(_71522_c,_71525_is_default) = (*this)._method_build_case(_69934_tokens,_69951_type_match);
			if (_71525_is_default) {
				_71522_c->_field_token=_70421_tok;
				if ((!(jule::real(_70117_def)))) {
					_70117_def=jule::new_struct<_1e16025cb_Else>(new( std::nothrow ) _1e16025cb_Else(_71522_c->_field_token,_71522_c->_field_scope));
				} else {
					(*this)._method_push_err(_70421_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_70217_def_not_last=_70217_def_not_last || jule::real(_70117_def);
				_70017_cases=jule::append(_70017_cases,jule::Slice<jule::Ref<_1e16025cb_Case>>({_71522_c}));
			}
		}
	_iter_next_4334946688:;
	}
	_iter_end_4334946688:;
	if (_70217_def_not_last) {
		(*this)._method_push_err(_70117_def->_field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_70017_cases,_70117_def);
}



jule::Ref<_1e16025cb_MatchCase> _1e184a280_ScopeParser::_method_build_match_case(jule::Slice<_1e15a2bb9_Token> _73939_tokens) {
	jule::Ref<_1e16025cb_MatchCase> _74017_m = jule::new_struct<_1e16025cb_MatchCase>(new( std::nothrow ) _1e16025cb_MatchCase(_73939_tokens[0LL],jule::Bool(),jule::Ref<_1e16025cb_Expr>(),jule::Slice<jule::Ref<_1e16025cb_Case>>(),jule::Ref<_1e16025cb_Else>()));
	_73939_tokens=_73939_tokens.slice(1LL);
	if ((_73939_tokens.len() > 0LL) && (_73939_tokens[0LL]._field_id == 10LLU)) {
		_74017_m->_field_type_match=true;
		_73939_tokens=_73939_tokens.slice(1LL);
	}
	jule::Slice<_1e15a2bb9_Token> _75017_expr_tokens = _1e1776d27_get_block_expr(_73939_tokens);
	if (_75017_expr_tokens.len() > 0LL) {
		_74017_m->_field_expr=(*this)._field_p->_method_build_expr(_75017_expr_tokens);
	} else if (_74017_m->_field_type_match) {
		(*this)._method_push_err(_74017_m->_field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _75717_i = _75017_expr_tokens.len();
	jule::Slice<_1e15a2bb9_Token> _75817_block_toks = _1e25dc95b_range(_75717_i,jule::Str("{", 1),jule::Str("}", 1),_73939_tokens);
	if (_75817_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_74017_m->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_MatchCase>();
	}
	std::tie(_74017_m->_field_cases,_74017_m->_field_default) = (*this)._method_build_cases(_75817_block_toks,_74017_m->_field_type_match);
	return _74017_m;
}



jule::Ref<_1e16025cb_ScopeTree> _1e184a280_ScopeParser::_method_build_scope_st(jule::Slice<_1e15a2bb9_Token> _77037_tokens) {
	jule::Bool _77117_is_unsafe = false;
	jule::Bool _77217_is_deferred = false;
	_1e15a2bb9_Token _77317_token = _77037_tokens[0LL];
	if (_77317_token._field_id == 35LLU) {
		_77117_is_unsafe=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if (_77037_tokens.len() == 0LL) {
			(*this)._method_push_err(_77317_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1e16025cb_ScopeTree>();
		}
		_77317_token=_77037_tokens[0LL];
		if (_77317_token._field_id == 37LLU) {
			_77217_is_deferred=true;
			_77037_tokens=_77037_tokens.slice(1LL);
			if (_77037_tokens.len() == 0LL) {
				(*this)._method_push_err(_77317_token,jule::Str("invalid syntax", 14));
				return jule::new_ref<_1e16025cb_ScopeTree>();
			}
		}
	} else if (_77317_token._field_id == 37LLU) {
		_77217_is_deferred=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if (_77037_tokens.len() == 0LL) {
			(*this)._method_push_err(_77317_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1e16025cb_ScopeTree>();
		}
	}
	jule::Int _79917_i = 0LL;
	jule::Slice<_1e15a2bb9_Token> _80017_scope_tokens = _1e25dc95b_range(_79917_i,jule::Str("{", 1),jule::Str("}", 1),_77037_tokens);
	if (_80017_scope_tokens == nullptr) {
		(*this)._method_push_err(_77317_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1e16025cb_ScopeTree>();
	} else if (_79917_i < _77037_tokens.len()) {
		(*this)._method_push_err(_77037_tokens[_79917_i],jule::Str("invalid syntax", 14));
	}
	jule::Ref<_1e16025cb_ScopeTree> _80717_scope = (*this)._method_build_scope(_80017_scope_tokens);
	_80717_scope->_field_unsafety=_77117_is_unsafe;
	_80717_scope->_field_deferred=_77217_is_deferred;
	return _80717_scope;
}



jule::Ref<_1e16025cb_LabelSt> _1e184a280_ScopeParser::_method_build_label_st(jule::Slice<_1e15a2bb9_Token>& _81338_tokens) {
	jule::Ref<_1e16025cb_LabelSt> _81417_lbl = jule::new_struct<_1e16025cb_LabelSt>(new( std::nothrow ) _1e16025cb_LabelSt(_81338_tokens[0LL],_81338_tokens[0LL]._field_kind));
	if (_81338_tokens.len() > 2LL) {
		_81338_tokens=_81338_tokens.slice(2LL);
		(*this)._method_insert_as_next(_81338_tokens);
	}
	return _81417_lbl;
}



std::tuple<jule::Any,jule::Bool> _1e184a280_ScopeParser::_method_build_id_st(jule::Slice<_1e15a2bb9_Token>& _82835_tokens) {
	jule::Bool _82864_ok = jule::Bool();
	if (_82835_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_82864_ok);
	}
	_1e15a2bb9_Token _83317_token = _82835_tokens[1LL];
	{
		auto _match_expr{ _83317_token._field_id };
		if (!((11LLU) == _match_expr)) { goto _case_end_4335013280; }
		_case_begin_4335013280:;
		{
			_82864_ok = true;
			return std::make_tuple(jule::Any((*this)._method_build_label_st(_82835_tokens)),_82864_ok);
		}
		goto _match_end_4335016016;
		_case_end_4335013280:;
		_match_end_4335016016:;
	}
	return std::make_tuple(jule::Any(),_82864_ok);
}



jule::Ref<_1e24d74b0_AssignInfo> _1e184a280_ScopeParser::_method_build_assign_info(jule::Slice<_1e15a2bb9_Token>& _84241_tokens) {
	jule::Ref<_1e24d74b0_AssignInfo> _84317_info = jule::new_struct<_1e24d74b0_AssignInfo>(new( std::nothrow ) _1e24d74b0_AssignInfo(jule::Slice<_1e15a2bb9_Token>(),jule::Slice<_1e15a2bb9_Token>(),_1e15a2bb9_Token(),true));
	jule::Int _84617_brace_n = 0LL;
	{
		auto expr = _84241_tokens;
		auto it = expr.begin();
		_iter_begin_4335023248:;
		if (it != expr.end()) {
			jule::Int _1e184a280_i = it - expr.begin();
			_1e15a2bb9_Token _1e184a280_token = *it;
			{
				if (_1e184a280_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1e184a280_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4335027968; }
						_case_begin_4335027968:;
						{
							(_84617_brace_n)++;
						}
						goto _match_end_4335026608;
						_case_end_4335027968:;
						_case_begin_4335025920:;
						{
							(_84617_brace_n)--;
						}
						goto _match_end_4335026608;
						_case_end_4335025920:;
						_match_end_4335026608:;
					}
				}
				{
					if (!((_84617_brace_n > 0LL))) { goto _case_end_4335025616; }
					_case_begin_4335025616:;
					{
						goto _iter_next_4335023248;
					}
					goto _match_end_4335025408;
					_case_end_4335025616:;
					if (!((_1e184a280_token._field_id != 7LLU))) { goto _case_end_4335025712; }
					_case_begin_4335025712:;
					{
						goto _iter_next_4335023248;
					}
					goto _match_end_4335025408;
					_case_end_4335025712:;
					if (!(((!(_1e15a2bb9_is_assign_op(_1e184a280_token._field_kind)))))) { goto _case_end_4335028288; }
					_case_begin_4335028288:;
					{
						goto _iter_next_4335023248;
					}
					goto _match_end_4335025408;
					_case_end_4335028288:;
					_match_end_4335025408:;
				}
				_84317_info->_field_l=_84241_tokens.slice(0LL,_1e184a280_i);
				if (_84317_info->_field_l.len() == 0LL) {
					_84317_info->_field_ok=false;
				}
				_84317_info->_field_setter=_1e184a280_token;
				if ((_1e184a280_i + 1LL) >= _84241_tokens.len()) {
					_84317_info->_field_r=nullptr;
					_84317_info->_field_ok=_1e15a2bb9_is_postfix_op(_84317_info->_field_setter._field_kind);
					goto _iter_end_4335023248;
				}
				_84317_info->_field_r=_84241_tokens.slice(_1e184a280_i + 1LL);
				if (_1e15a2bb9_is_postfix_op(_84317_info->_field_setter._field_kind)) {
					if (_84317_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_84317_info->_field_r[0LL],jule::Str("invalid syntax", 14));
						_84317_info->_field_r=nullptr;
					}
				}
				goto _iter_end_4335023248;
			}
			_iter_next_4335023248:;
			++it;
			_1e184a280_i++;
			goto _iter_begin_4335023248;
		}
		_iter_end_4335023248:;
	}
	return _84317_info;
}



jule::Ref<_1e16025cb_AssignLeft> _1e184a280_ScopeParser::_method_build_assign_l(jule::Slice<_1e15a2bb9_Token>& _88938_tokens) {
	jule::Ref<_1e16025cb_AssignLeft> _89017_l = jule::new_struct<_1e16025cb_AssignLeft>(new( std::nothrow ) _1e16025cb_AssignLeft(_88938_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ref<_1e16025cb_Expr>()));
	if (_88938_tokens[0LL]._field_id == 2LLU) {
		_89017_l->_field_ident=_89017_l->_field_token._field_kind;
	}
	_89017_l->_field_expr=(*this)._field_p->_method_build_expr(_88938_tokens);
	return _89017_l;
}



jule::Slice<jule::Ref<_1e16025cb_AssignLeft>> _1e184a280_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_1e15a2bb9_Token>>& _90239_parts) {
	jule::Slice<jule::Ref<_1e16025cb_AssignLeft>> _90317_lefts = nullptr;
	{
		auto expr = _90239_parts;
		auto it = expr.begin();
		_iter_begin_4335051120:;
		if (it != expr.end()) {
			jule::Slice<_1e15a2bb9_Token> _1e184a280_part = *it;
			{
				jule::Ref<_1e16025cb_AssignLeft> _90521_l = (*this)._method_build_assign_l(_1e184a280_part);
				_90317_lefts=jule::append(_90317_lefts,jule::Slice<jule::Ref<_1e16025cb_AssignLeft>>({_90521_l}));
			}
			_iter_next_4335051120:;
			++it;
			goto _iter_begin_4335051120;
		}
		_iter_end_4335051120:;
	}
	return _90317_lefts;
}



std::tuple<jule::Ref<_1e16025cb_AssignSt>,jule::Bool> _1e184a280_ScopeParser::_method_build_plain_assign(jule::Slice<_1e15a2bb9_Token>& _91242_tokens) {
	jule::Ref<_1e24d74b0_AssignInfo> _91317_info = (*this)._method_build_assign_info(_91242_tokens);
	if ((!(_91317_info->_field_ok))) {
		return std::make_tuple(jule::new_ref<_1e16025cb_AssignSt>(),false);
	}
	jule::Ref<_1e16025cb_AssignSt> _91817_assign = jule::new_struct<_1e16025cb_AssignSt>(new( std::nothrow ) _1e16025cb_AssignSt(jule::Bool(),_91317_info->_field_setter,jule::Slice<jule::Ref<_1e16025cb_AssignLeft>>(),jule::Ref<_1e16025cb_Expr>()));
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _92218_parts;
	jule::Slice<_1ec8e8025_Log> _92225_errs;
	std::tie(_92218_parts,_92225_errs) = _1e25dc95b_parts(_91317_info->_field_l,8LLU,true);
	if (_92225_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_92225_errs);
		return std::make_tuple(jule::new_ref<_1e16025cb_AssignSt>(),false);
	}
	_91817_assign->_field_left=(*this)._method_build_assign_ls(_92218_parts);
	if (_91317_info->_field_r != nullptr) {
		_91817_assign->_field_right=(*this)._field_p->_method_build_expr(_91317_info->_field_r);
	}
	return std::make_tuple(_91817_assign,true);
}



std::tuple<jule::Ref<_1e16025cb_AssignSt>,jule::Bool> _1e184a280_ScopeParser::_method_build_decl_assign(jule::Slice<_1e15a2bb9_Token> _93640_tokens) {
	if (_93640_tokens.len() < 1LL) {
		return std::make_tuple(jule::new_ref<_1e16025cb_AssignSt>(),false);
	}
	_93640_tokens=_93640_tokens.slice(1LL);
	_1e15a2bb9_Token _94217_token = _93640_tokens[0LL];
	if ((_94217_token._field_id != 3LLU) || (_94217_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(jule::new_ref<_1e16025cb_AssignSt>(),false);
	}
	jule::Ref<_1e16025cb_AssignSt> _94717_assign = jule::new_struct<_1e16025cb_AssignSt>(new( std::nothrow ) _1e16025cb_AssignSt(true,_1e15a2bb9_Token(),jule::Slice<jule::Ref<_1e16025cb_AssignLeft>>(),jule::Ref<_1e16025cb_Expr>()));
	jule::Int _95117_i = 0LL;
	jule::Slice<_1e15a2bb9_Token> _95217_rang = _1e25dc95b_range(_95117_i,jule::Str("(", 1),jule::Str(")", 1),_93640_tokens);
	if (_95217_rang == nullptr) {
		(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(jule::new_ref<_1e16025cb_AssignSt>(),false);
	} else if ((_95117_i + 1LL) < _93640_tokens.len()) {
		_94717_assign->_field_setter=_93640_tokens[_95117_i];
		(_95117_i)++;
		jule::Slice<_1e15a2bb9_Token> _95921_expr_tokens = _93640_tokens.slice(_95117_i);
		_94717_assign->_field_right=(*this)._field_p->_method_build_expr(_95921_expr_tokens);
	}
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _96418_parts;
	jule::Slice<_1ec8e8025_Log> _96425_errs;
	std::tie(_96418_parts,_96425_errs) = _1e25dc95b_parts(_95217_rang,8LLU,true);
	if (_96425_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_96425_errs);
		return std::make_tuple(jule::new_ref<_1e16025cb_AssignSt>(),false);
	}
	{
		auto expr = _96418_parts;
		auto it = expr.begin();
		_iter_begin_4335088304:;
		if (it != expr.end()) {
			jule::Slice<_1e15a2bb9_Token> _1e184a280_part = *it;
			{
				jule::Bool _97121_is_mut = false;
				jule::Bool _97221_is_ref = false;
				_94217_token=_1e184a280_part[0LL];
				if (_94217_token._field_id == 36LLU) {
					_97121_is_mut=true;
					_1e184a280_part=_1e184a280_part.slice(1LL);
					if (_1e184a280_part.len() == 0LL) {
						(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4335088304;
					}
				}
				if ((_1e184a280_part[0LL]._field_id == 7LLU) && (_1e184a280_part[0LL]._field_kind == jule::Str("&", 1))) {
					_97221_is_ref=true;
					_1e184a280_part=_1e184a280_part.slice(1LL);
					if (_1e184a280_part.len() == 0LL) {
						(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4335088304;
					}
				}
				if (((_1e184a280_part[0LL]._field_id != 2LLU) && (_1e184a280_part[0LL]._field_id != 3LLU)) && (_1e184a280_part[0LL]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
					goto _iter_next_4335088304;
				}
				jule::Ref<_1e16025cb_AssignLeft> _100021_l = (*this)._method_build_assign_l(_1e184a280_part);
				_100021_l->_field_mutable=_97121_is_mut;
				_100021_l->_field_reference=_97221_is_ref;
				_94717_assign->_field_left=jule::append(_94717_assign->_field_left,jule::Slice<jule::Ref<_1e16025cb_AssignLeft>>({_100021_l}));
			}
			_iter_next_4335088304:;
			++it;
			goto _iter_begin_4335088304;
		}
		_iter_end_4335088304:;
	}
	return std::make_tuple(_94717_assign,true);
}



std::tuple<jule::Ref<_1e16025cb_AssignSt>,jule::Bool> _1e184a280_ScopeParser::_method_build_assign_st(jule::Slice<_1e15a2bb9_Token>& _100939_tokens) {
	jule::Ref<_1e16025cb_AssignSt> _100958_st = jule::Ref<_1e16025cb_AssignSt>();
	jule::Bool _100973_ok = jule::Bool();
	if ((!(_1e24d74b0_check_assign_tokens(_100939_tokens)))) {
		_100958_st = jule::new_ref<_1e16025cb_AssignSt>();
		_100973_ok = false;
		return std::make_tuple(_100958_st,_100973_ok);
	}
	{
		auto _match_expr{ _100939_tokens[0LL]._field_id };
		if (!((34LLU) == _match_expr)) { goto _case_end_4335118576; }
		_case_begin_4335118576:;
		{
			std::tie(_100958_st,_100973_ok) = (*this)._method_build_decl_assign(_100939_tokens);
		}
		goto _match_end_4335116944;
		_case_end_4335118576:;
		_case_begin_4335116368:;
		{
			std::tie(_100958_st,_100973_ok) = (*this)._method_build_plain_assign(_100939_tokens);
		}
		goto _match_end_4335116944;
		_case_end_4335116368:;
		_match_end_4335116944:;
	}
	return std::make_tuple(_100958_st,_100973_ok);
}



jule::Any _1e184a280_ScopeParser::_method_build_st(jule::Ref<_1e184a280_Stmt>& _102232_st) {
	_1e15a2bb9_Token _102317_token = _102232_st->_field_tokens[0LL];
	if (_102317_token._field_id == 2LLU) {
		jule::Any _102522_s;
		jule::Bool _102525_ok;
		std::tie(_102522_s,_102525_ok) = (*this)._method_build_id_st(_102232_st->_field_tokens);
		if (_102525_ok) {
			return _102522_s;
		}
	}
	jule::Ref<_1e16025cb_AssignSt> _103118_s;
	jule::Bool _103121_ok;
	std::tie(_103118_s,_103121_ok) = (*this)._method_build_assign_st(_102232_st->_field_tokens);
	if (_103121_ok) {
		return jule::Any(_103118_s);
	}
	{
		auto _match_expr{ _102317_token._field_id };
		if (!((38LLU) == _match_expr || (9LLU) == _match_expr || (34LLU) == _match_expr || (36LLU) == _match_expr)) { goto _case_end_4335131360; }
		_case_begin_4335131360:;
		{
			return (*this)._method_build_var_st(_102232_st->_field_tokens);
		}
		goto _match_end_4335128288;
		_case_end_4335131360:;
		if (!((4LLU) == _match_expr)) { goto _case_end_4335129280; }
		_case_begin_4335129280:;
		{
			return (*this)._method_build_ret_st(_102232_st->_field_tokens);
		}
		goto _match_end_4335128288;
		_case_end_4335129280:;
		if (!((12LLU) == _match_expr)) { goto _case_end_4335129376; }
		_case_begin_4335129376:;
		{
			return (*this)._method_buid_iter_st(_102232_st);
		}
		goto _match_end_4335128288;
		_case_end_4335129376:;
		if (!((13LLU) == _match_expr)) { goto _case_end_4335129472; }
		_case_begin_4335129472:;
		{
			return (*this)._method_build_break_st(_102232_st->_field_tokens);
		}
		goto _match_end_4335128288;
		_case_end_4335129472:;
		if (!((14LLU) == _match_expr)) { goto _case_end_4335129568; }
		_case_begin_4335129568:;
		{
			return (*this)._method_build_cont_st(_102232_st->_field_tokens);
		}
		goto _match_end_4335128288;
		_case_end_4335129568:;
		if (!((16LLU) == _match_expr)) { goto _case_end_4335129728; }
		_case_begin_4335129728:;
		{
			return (*this)._method_build_if_else_chain(_102232_st->_field_tokens);
		}
		goto _match_end_4335128288;
		_case_end_4335129728:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4335129824; }
		_case_begin_4335129824:;
		{
			return (*this)._method_build_comment_st(_102317_token);
		}
		goto _match_end_4335128288;
		_case_end_4335129824:;
		if (!((26LLU) == _match_expr)) { goto _case_end_4335129920; }
		_case_begin_4335129920:;
		{
			return (*this)._method_build_co_call_st(_102232_st->_field_tokens);
		}
		goto _match_end_4335128288;
		_case_end_4335129920:;
		if (!((22LLU) == _match_expr)) { goto _case_end_4335130016; }
		_case_begin_4335130016:;
		{
			return (*this)._method_build_goto_st(_102232_st->_field_tokens);
		}
		goto _match_end_4335128288;
		_case_end_4335130016:;
		if (!((32LLU) == _match_expr)) { goto _case_end_4335130112; }
		_case_begin_4335130112:;
		{
			return (*this)._method_build_fall_st(_102232_st->_field_tokens);
		}
		goto _match_end_4335128288;
		_case_end_4335130112:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4335132112; }
		_case_begin_4335132112:;
		{
			return (*this)._method_build_type_alias_st(_102232_st->_field_tokens);
		}
		goto _match_end_4335128288;
		_case_end_4335132112:;
		if (!((27LLU) == _match_expr)) { goto _case_end_4335132208; }
		_case_begin_4335132208:;
		{
			return jule::Any((*this)._method_build_match_case(_102232_st->_field_tokens));
		}
		goto _match_end_4335128288;
		_case_end_4335132208:;
		if (!((35LLU) == _match_expr || (37LLU) == _match_expr)) { goto _case_end_4335132304; }
		_case_begin_4335132304:;
		{
			return jule::Any((*this)._method_build_scope_st(_102232_st->_field_tokens));
		}
		goto _match_end_4335128288;
		_case_end_4335132304:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4335132400; }
		_case_begin_4335132400:;
		{
			if (_102317_token._field_kind == jule::Str("{", 1)) {
				return jule::Any((*this)._method_build_scope_st(_102232_st->_field_tokens));
			}
		}
		goto _match_end_4335128288;
		_case_end_4335132400:;
		_case_begin_4335128576:;
		{
			if (_1e1776d27_is_fn_call(_102232_st->_field_tokens) != nullptr) {
				return (*this)._method_build_call_st(_102232_st->_field_tokens);
			}
		}
		goto _match_end_4335128288;
		_case_end_4335128576:;
		_match_end_4335128288:;
	}
	(*this)._method_push_err(_102317_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



void _1e184a280_ScopeParser::_method_build(jule::Slice<_1e15a2bb9_Token>& _109829_tokens,jule::Ref<_1e16025cb_ScopeTree>& _109851_s) {
	if ((!(jule::real(_109851_s)))) {
		return;
	}
	(*this)._field_stms=_1e184a280_split_stms(_109829_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_109851_s;
	while ((!((*this)._method_is_last_st())) && (!((*this)._method_finished()))) {
		{
			jule::Ref<_1e184a280_Stmt> _110721_st = (*this)._method_next();
			jule::Any _110821_data = (*this)._method_build_st(_110721_st);
			if (_110821_data != nullptr) {
				(*this)._field_s->_field_stmts=jule::append((*this)._field_s->_field_stmts,jule::Slice<jule::Any>({_110821_data}));
			}
			if ((*this)._method_stopped()) {
				goto _iter_end_4335150576;
			}
		}
	_iter_next_4335150576:;
	}
	_iter_end_4335150576:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e184a280_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stms:" << _Src._field_stms << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1776d27_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



void _1e1776d27_Precedencer::_method_set(jule::Int _15622_level,jule::Any _15634_expr) {
	{
		auto expr = (*this)._field_pairs;
		auto it = expr.begin();
		_iter_begin_4335160736:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			jule::Slice<jule::Any> _1e1776d27_pair = *it;
			{
				jule::Int _15817_pair_level = _1e1776d27_pair[0LL].operator jule::Int();
				if (_15622_level > _15817_pair_level) {
					jule::Slice<jule::Slice<jule::Any>> _16025_first = (*this)._field_pairs.slice(0LL,_1e1776d27_i);
					jule::Slice<jule::Slice<jule::Any>> _16125_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15622_level),_15634_expr})});
					jule::Slice<jule::Slice<jule::Any>> _16225_appended = jule::append(_16125_buffer,(*this)._field_pairs.slice(_1e1776d27_i));
					(*this)._field_pairs=jule::append(_16025_first,_16225_appended);
					return;
				}
			}
			_iter_next_4335160736:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4335160736;
		}
		_iter_end_4335160736:;
	}
	(*this)._field_pairs=jule::append((*this)._field_pairs,jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15622_level),_15634_expr})}));
}



jule::Any _1e1776d27_Precedencer::_method_get_lower(void) {
	jule::I64 _17117_i = (*this)._field_pairs.len() - 1LL;
	for (; _17117_i >= 0LL; (_17117_i)--) {
		{
			jule::Any _17321_data = (*this)._field_pairs[_17117_i][1LL];
			if (_17321_data != nullptr) {
				return _17321_data;
			}
		}
	_iter_next_4335171104:;
	}
	_iter_end_4335171104:;
	return jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1776d27_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



void _1e1776d27_ExprBuilder::_method_push_err(_1e15a2bb9_Token _29927_token,jule::Str _29941_fmt,jule::Slice<jule::Any> _29954_args) {
	(*this)._field_p->_method_push_err(_29927_token,_29941_fmt,_29954_args);
}



void _1e1776d27_ExprBuilder::_method_push_suggestion(jule::Str _30434_fmt,jule::Slice<jule::Any> _30447_args) {
	(*this)._field_p->_method_push_suggestion(_30434_fmt,_30447_args);
}



jule::Ref<_1e16025cb_TupleExpr> _1e1776d27_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_1e15a2bb9_Token>>& _30835_parts) {
	jule::Ref<_1e16025cb_TupleExpr> _30917_tuple = jule::new_struct<_1e16025cb_TupleExpr>(new( std::nothrow ) _1e16025cb_TupleExpr(jule::Slice<jule::Ref<_1e16025cb_Expr>>::alloc(static_cast<jule::I64>(_30835_parts.len()))));
	{
		auto expr = _30835_parts;
		auto it = expr.begin();
		_iter_begin_4335206656:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			jule::Slice<_1e15a2bb9_Token> _1e1776d27_part = *it;
			{
				_30917_tuple->_field_expr[_1e1776d27_i]=(*this)._method_build_from_tokens(_1e1776d27_part);
			}
			_iter_next_4335206656:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4335206656;
		}
		_iter_end_4335206656:;
	}
	return _30917_tuple;
}



jule::Ref<_1e16025cb_LitExpr> _1e1776d27_ExprBuilder::_method_build_lit(_1e15a2bb9_Token _31828_token) {
	return jule::new_struct<_1e16025cb_LitExpr>(new( std::nothrow ) _1e16025cb_LitExpr(_31828_token,_31828_token._field_kind));
}



jule::Ref<_1e16025cb_TypeDecl> _1e1776d27_ExprBuilder::_method_build_primitive_type(_1e15a2bb9_Token& _32540_token) {
	return _1e2613531_build_prim_type(_32540_token);
}



jule::Any _1e1776d27_ExprBuilder::_method_build_single(_1e15a2bb9_Token _32935_token) {
	{
		auto _match_expr{ _32935_token._field_id };
		if (!((6LLU) == _match_expr)) { goto _case_end_4335218368; }
		_case_begin_4335218368:;
		{
			return jule::Any((*this)._method_build_lit(_32935_token));
		}
		goto _match_end_4335217584;
		_case_end_4335218368:;
		if (!((2LLU) == _match_expr || (28LLU) == _match_expr)) { goto _case_end_4335220432; }
		_case_begin_4335220432:;
		{
			return jule::Any(_1e1776d27_build_ident_expr(_32935_token));
		}
		goto _match_end_4335217584;
		_case_end_4335220432:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4335219824; }
		_case_begin_4335219824:;
		{
			return jule::Any((*this)._method_build_primitive_type(_32935_token));
		}
		goto _match_end_4335217584;
		_case_end_4335219824:;
		_case_begin_4335217040:;
		{
			(*this)._method_push_err(_32935_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4335217584;
		_case_end_4335217040:;
		_match_end_4335217584:;
	}
}



jule::Ref<_1e16025cb_IdentExpr> _1e1776d27_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_1e15a2bb9_Token>& _34746_tokens) {
	if (_34746_tokens[0LL]._field_id != 31LLU) {
		return jule::new_ref<_1e16025cb_IdentExpr>();
	} else if (_34746_tokens[1LL]._field_id != 20LLU) {
		(*this)._method_push_err(_34746_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_IdentExpr>();
	}
	_1e15a2bb9_Token _35517_token = _34746_tokens[2LL];
	if (_35517_token._field_id != 2LLU) {
		(*this)._method_push_err(_34746_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_IdentExpr>();
	}
	jule::Ref<_1e16025cb_IdentExpr> _36117_expr = _1e1776d27_build_ident_expr(_35517_token);
	_36117_expr->_field_cpp_linked=true;
	return _36117_expr;
}



jule::Ref<_1e16025cb_UnaryExpr> _1e1776d27_ExprBuilder::_method_build_unary(jule::Slice<_1e15a2bb9_Token> _36634_tokens) {
	_1e15a2bb9_Token _36717_op = _36634_tokens[0LL];
	if (_36634_tokens.len() == 1LL) {
		(*this)._method_push_err(_36717_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_UnaryExpr>();
	} else if ((!(_1e15a2bb9_is_unary_op(_36717_op._field_kind)))) {
		(*this)._method_push_err(_36717_op,jule::Str("invalid_operator_for_unary: @", 29),jule::Slice<jule::Any>({jule::Any(_36717_op._field_kind)}));
		return jule::new_ref<_1e16025cb_UnaryExpr>();
	}
	_36634_tokens=_36634_tokens.slice(1LL);
	return jule::new_struct<_1e16025cb_UnaryExpr>(new( std::nothrow ) _1e16025cb_UnaryExpr(_36717_op,(*this)._method_build(_36634_tokens)));
}



jule::Ref<_1e16025cb_SubIdentExpr> _1e1776d27_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_1e15a2bb9_Token> _38742_tokens) {
	jule::I64 _38817_i = _38742_tokens.len() - 1LL;
	_1e15a2bb9_Token _38917_ident_token = _38742_tokens[_38817_i];
	(_38817_i)--;
	_38742_tokens=_38742_tokens.slice(0LL,_38817_i);
	if (_38742_tokens.len() == 0LL) {
		(*this)._method_push_err(_38917_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_SubIdentExpr>();
	}
	return jule::new_struct<_1e16025cb_SubIdentExpr>(new( std::nothrow ) _1e16025cb_SubIdentExpr(jule::Bool(),(*this)._method_build(_38742_tokens),_38917_ident_token));
}



jule::Ref<_1e16025cb_NsSelectionExpr> _1e1776d27_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_1e15a2bb9_Token>& _40242_tokens) {
	jule::Ref<_1e16025cb_NsSelectionExpr> _40317_ns = jule::new_struct<_1e16025cb_NsSelectionExpr>(new( std::nothrow ) _1e16025cb_NsSelectionExpr());
	{
		auto expr = _40242_tokens;
		auto it = expr.begin();
		_iter_begin_4335258128:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			_1e15a2bb9_Token _1e1776d27_token = *it;
			{
				if (jule::mod(_1e1776d27_i,2LL) == 0LL) {
					if (_1e1776d27_token._field_id != 2LLU) {
						(*this)._method_push_err(_1e1776d27_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					}
					_40317_ns->_field_ns=jule::append(_40317_ns->_field_ns,jule::Slice<_1e15a2bb9_Token>({_1e1776d27_token}));
				} else if (_1e1776d27_token._field_id != 23LLU) {
					(*this)._method_push_err(_1e1776d27_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>({}));
				}
			}
			_iter_next_4335258128:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4335258128;
		}
		_iter_end_4335258128:;
	}
	_40317_ns->_field_ident=_40317_ns->_field_ns[_40317_ns->_field_ns.len() - 1LL];
	_40317_ns->_field_ns=_40317_ns->_field_ns.slice(0LL,_40317_ns->_field_ns.len() - 1LL);
	return _40317_ns;
}



jule::Ref<_1e16025cb_TypeDecl> _1e1776d27_ExprBuilder::_method_build_type(jule::Slice<_1e15a2bb9_Token>& _42134_tokens) {
	jule::Int _42217_i = 0LL;
	jule::Ref<_1e16025cb_TypeDecl> _42318_t;
	jule::Bool _42321_ok;
	std::tie(_42318_t,_42321_ok) = (*this)._field_p->_method_build_type(_42134_tokens,(&(_42217_i)),false);
	if ((!(_42321_ok))) {
		(*this)._method_push_err(_42134_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_TypeDecl>();
	}
	if (_42217_i < _42134_tokens.len()) {
		(*this)._method_push_err(_42134_tokens[_42217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _42318_t;
}



jule::Any _1e1776d27_ExprBuilder::_method_build_sub_ident(jule::Slice<_1e15a2bb9_Token>& _43539_tokens) {
	jule::I64 _43613_i = _43539_tokens.len() - 2LL;
	_1e15a2bb9_Token _43713_token = _43539_tokens[_43613_i];
	{
		auto _match_expr{ _43713_token._field_id };
		if (!((20LLU) == _match_expr)) { goto _case_end_4335284064; }
		_case_begin_4335284064:;
		{
			return jule::Any((*this)._method_build_obj_sub_ident(_43539_tokens));
		}
		goto _match_end_4335283872;
		_case_end_4335284064:;
		if (!((23LLU) == _match_expr)) { goto _case_end_4335284160; }
		_case_begin_4335284160:;
		{
			return jule::Any((*this)._method_build_ns_sub_ident(_43539_tokens));
		}
		goto _match_end_4335283872;
		_case_end_4335284160:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4335284256; }
		_case_begin_4335284256:;
		{
			if (_43713_token._field_kind == jule::Str("]", 1)) {
				return jule::Any((*this)._method_build_type(_43539_tokens));
			}
		}
		goto _match_end_4335283872;
		_case_end_4335284256:;
		_match_end_4335283872:;
	}
	(*this)._method_push_err(_43713_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



jule::Ref<_1e16025cb_VariadicExpr> _1e1776d27_ExprBuilder::_method_build_variadic(jule::Slice<_1e15a2bb9_Token> _45637_tokens) {
	_1e15a2bb9_Token _45717_token = _45637_tokens[_45637_tokens.len() - 1LL];
	_45637_tokens=_45637_tokens.slice(0LL,_45637_tokens.len() - 1LL);
	return jule::new_struct<_1e16025cb_VariadicExpr>(new( std::nothrow ) _1e16025cb_VariadicExpr(_45717_token,(*this)._method_build(_45637_tokens)));
}



jule::Any _1e1776d27_ExprBuilder::_method_build_op_right(jule::Slice<_1e15a2bb9_Token>& _46538_tokens) {
	_1e15a2bb9_Token _46617_token = _46538_tokens[_46538_tokens.len() - 1LL];
	{
		auto _match_expr{ _46617_token._field_kind };
		if (!((jule::Str("...", 3)) == _match_expr)) { goto _case_end_4335301936; }
		_case_begin_4335301936:;
		{
			return jule::Any((*this)._method_build_variadic(_46538_tokens));
		}
		goto _match_end_4335299200;
		_case_end_4335301936:;
		_case_begin_4335297376:;
		{
			(*this)._method_push_err(_46617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4335299200;
		_case_end_4335297376:;
		_match_end_4335299200:;
	}
}



jule::Any _1e1776d27_ExprBuilder::_method_build_between_parentheses(jule::Slice<_1e15a2bb9_Token> _47748_tokens) {
	_1e15a2bb9_Token _47813_token = _47748_tokens[0LL];
	_47748_tokens=_47748_tokens.slice(1LL,_47748_tokens.len() - 1LL);
	if (_47748_tokens.len() == 0LL) {
		(*this)._method_push_err(_47813_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_47748_tokens);
}



jule::Ref<_1e16025cb_CastExpr> _1e1776d27_ExprBuilder::_method_try_build_cast(jule::Slice<_1e15a2bb9_Token>& _48838_tokens) {
	jule::Int _48917_range_n = 0LL;
	{
		auto expr = _48838_tokens;
		auto it = expr.begin();
		_iter_begin_4335312896:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			_1e15a2bb9_Token _1e1776d27_token = *it;
			{
				if (_1e1776d27_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1e1776d27_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4335317680; }
						_case_begin_4335317680:;
						{
							(_48917_range_n)++;
							goto _iter_next_4335312896;
						}
						goto _match_end_4335316320;
						_case_end_4335317680:;
						_case_begin_4335315632:;
						{
							(_48917_range_n)--;
						}
						goto _match_end_4335316320;
						_case_end_4335315632:;
						_match_end_4335316320:;
					}
				}
				if (_48917_range_n > 0LL) {
					goto _iter_next_4335312896;
				} else if ((_1e1776d27_i + 1LL) == _48838_tokens.len()) {
					return jule::new_ref<_1e16025cb_CastExpr>();
				}
				jule::Slice<_1e15a2bb9_Token> _51021_type_tokens = _48838_tokens.slice(0LL,_1e1776d27_i + 1LL);
				jule::Slice<_1e15a2bb9_Token> _51121_expr_tokens = _48838_tokens.slice(_1e1776d27_i + 1LL);
				if (_51121_expr_tokens.len() == 0LL) {
					return jule::new_ref<_1e16025cb_CastExpr>();
				}
				_1e15a2bb9_Token _51817_tok = _51121_expr_tokens[0LL];
				if ((_51817_tok._field_id != 3LLU) || (_51817_tok._field_kind != jule::Str("(", 1))) {
					return jule::new_ref<_1e16025cb_CastExpr>();
				}
				jule::Ref<_1e16025cb_CastExpr> _52321_cast = jule::new_struct<_1e16025cb_CastExpr>(new( std::nothrow ) _1e16025cb_CastExpr());
				if (_51121_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_51121_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>({}));
				}
				if (_51021_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_51021_type_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>({}));
				} else {
					_51021_type_tokens=_51021_type_tokens.slice(1LL,_51021_type_tokens.len() - 1LL);
					jule::Int _53725_type_index = 0LL;
					jule::Ref<_1e16025cb_TypeDecl> _53826_t;
					jule::Bool _53829_ok;
					std::tie(_53826_t,_53829_ok) = (*this)._field_p->_method_build_type(_51021_type_tokens,(&(_53725_type_index)),true);
					if (_53829_ok && (_53725_type_index < _51021_type_tokens.len())) {
						(*this)._method_push_err(_51021_type_tokens[_53725_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					} else if ((!(_53829_ok))) {
						return _52321_cast;
					}
					_52321_cast->_field_kind=_53826_t;
					if (_51121_expr_tokens.len() > 2LL) {
						jule::Int _54829_j = 0LL;
						_1e25dc95b_range(_54829_j,jule::Str("(", 1),jule::Str(")", 1),_51121_expr_tokens);
						if (_54829_j < _51121_expr_tokens.len()) {
							return jule::new_ref<_1e16025cb_CastExpr>();
						}
						_51121_expr_tokens=_51121_expr_tokens.slice(0LL,_54829_j);
						_52321_cast->_field_expr=(*this)._method_build(_51121_expr_tokens);
					}
				}
				return _52321_cast;
			}
			_iter_next_4335312896:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4335312896;
		}
		_iter_end_4335312896:;
	}
	return jule::new_ref<_1e16025cb_CastExpr>();
}



void _1e1776d27_ExprBuilder::_method_push_arg(jule::Slice<jule::Ref<_1e16025cb_Expr>>& _56332_args,jule::Slice<_1e15a2bb9_Token> _56351_tokens,_1e15a2bb9_Token _56368_err_token) {
	if (_56351_tokens.len() == 0LL) {
		(*this)._method_push_err(_56368_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_56332_args=jule::append(_56332_args,jule::Slice<jule::Ref<_1e16025cb_Expr>>({(*this)._method_build_from_tokens(_56351_tokens)}));
}



jule::Slice<jule::Ref<_1e16025cb_Expr>> _1e1776d27_ExprBuilder::_method_build_args(jule::Slice<_1e15a2bb9_Token> _57233_tokens) {
	if (_57233_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1e16025cb_Expr>> _57817_args = nullptr;
	jule::Int _57917_last = 0LL;
	jule::Int _58017_range_n = 0LL;
	_57233_tokens=_57233_tokens.slice(1LL,_57233_tokens.len() - 1LL);
	{
		auto expr = _57233_tokens;
		auto it = expr.begin();
		_iter_begin_4335358256:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			_1e15a2bb9_Token _1e1776d27_token = *it;
			{
				if (_1e1776d27_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1e1776d27_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4335363600; }
						_case_begin_4335363600:;
						{
							(_58017_range_n)++;
						}
						goto _match_end_4335362240;
						_case_end_4335363600:;
						_case_begin_4335361552:;
						{
							(_58017_range_n)--;
						}
						goto _match_end_4335362240;
						_case_end_4335361552:;
						_match_end_4335362240:;
					}
				}
				if ((_58017_range_n > 0LL) || (_1e1776d27_token._field_id != 8LLU)) {
					goto _iter_next_4335358256;
				}
				(*this)._method_push_arg(_57817_args,_57233_tokens.slice(_57917_last,_1e1776d27_i),_1e1776d27_token);
				_57917_last=static_cast<jule::Int>(_1e1776d27_i + 1LL);
			}
			_iter_next_4335358256:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4335358256;
		}
		_iter_end_4335358256:;
	}
	if (_57917_last < _57233_tokens.len()) {
		if (_57917_last == 0LL) {
			if (_57233_tokens.len() > 0LL) {
				(*this)._method_push_arg(_57817_args,_57233_tokens.slice(_57917_last),_57233_tokens[_57917_last]);
			}
		} else {
			(*this)._method_push_arg(_57817_args,_57233_tokens.slice(_57917_last),_57233_tokens[_57917_last - 1LL]);
		}
	}
	return _57817_args;
}



jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> _1e1776d27_ExprBuilder::_method_build_call_generics(jule::Slice<_1e15a2bb9_Token> _61542_tokens) {
	if (_61542_tokens.len() == 0LL) {
		return nullptr;
	}
	_61542_tokens=_61542_tokens.slice(1LL,_61542_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _62118_parts;
	jule::Slice<_1ec8e8025_Log> _62125_errs;
	std::tie(_62118_parts,_62125_errs) = _1e25dc95b_parts(_61542_tokens,8LLU,true);
	jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> _62217_generics = jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>::alloc(static_cast<jule::I64>(_62118_parts.len()));
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_62125_errs);
	{
		auto expr = _62118_parts;
		auto it = expr.begin();
		_iter_begin_4335379744:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			jule::Slice<_1e15a2bb9_Token> _1e1776d27_part = *it;
			{
				if (_1e1776d27_part.len() == 0LL) {
					goto _iter_next_4335379744;
				}
				jule::Int _62821_j = 0LL;
				jule::Ref<_1e16025cb_TypeDecl> _62922_generic;
				std::tie(_62922_generic,std::ignore) = (*this)._field_p->_method_build_type(_1e1776d27_part,(&(_62821_j)),true);
				if (_62821_j < _1e1776d27_part.len()) {
					(*this)._method_push_err(_1e1776d27_part[_62821_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_62217_generics[_1e1776d27_i]=_62922_generic;
			}
			_iter_next_4335379744:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4335379744;
		}
		_iter_end_4335379744:;
	}
	return _62217_generics;
}



jule::Ref<_1e16025cb_FnCallExpr> _1e1776d27_ExprBuilder::_method_build_fn_call(_1e15a2bb9_Token& _63937_token,jule::Ref<_1e1776d27_CallData>& _63956_data) {
	return jule::new_struct<_1e16025cb_FnCallExpr>(new( std::nothrow ) _1e16025cb_FnCallExpr(_63937_token,(*this)._method_build_from_tokens(_63956_data->_field_expr_tokens),(*this)._method_build_call_generics(_63956_data->_field_generics_tokens),(*this)._method_build_args(_63956_data->_field_args_tokens),jule::Bool()));
}



jule::Any _1e1776d27_ExprBuilder::_method_build_parentheses_range(jule::Slice<_1e15a2bb9_Token>& _64847_tokens) {
	_1e15a2bb9_Token _64917_token = _64847_tokens[0LL];
	{
		auto _match_expr{ _64917_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4335397744; }
		_case_begin_4335397744:;
		{
			{
				auto _match_expr{ _64917_token._field_kind };
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4335400912; }
				_case_begin_4335400912:;
				{
					jule::Ref<_1e16025cb_CastExpr> _65425_expr = (*this)._method_try_build_cast(_64847_tokens);
					if (jule::real(_65425_expr)) {
						return jule::Any(_65425_expr);
					}
				}
				goto _match_end_4335400752;
				_case_end_4335400912:;
				_match_end_4335400752:;
			}
		}
		goto _match_end_4335399344;
		_case_end_4335397744:;
		_match_end_4335399344:;
	}
	jule::Ref<_1e1776d27_CallData> _66117_data = _1e1776d27_get_call_data(_64847_tokens);
	if (_66117_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_66117_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_64917_token,_66117_data));
}



jule::Ref<_1e16025cb_UnsafeExpr> _1e1776d27_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_1e15a2bb9_Token> _67240_tokens) {
	_1e15a2bb9_Token _67317_token = _67240_tokens[0LL];
	_67240_tokens=_67240_tokens.slice(1LL);
	jule::Int _67517_i = 0LL;
	jule::Slice<_1e15a2bb9_Token> _67617_range_tokens = _1e25dc95b_range(_67517_i,jule::Str("{", 1),jule::Str("}", 1),_67240_tokens);
	if (_67617_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_67240_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_UnsafeExpr>();
	}
	return jule::new_struct<_1e16025cb_UnsafeExpr>(new( std::nothrow ) _1e16025cb_UnsafeExpr(_67317_token,(*this)._method_build_from_tokens(_67617_range_tokens)->_field_kind));
}



jule::Ref<_1e16025cb_FnDecl> _1e1776d27_ExprBuilder::_method_build_anon_fn(jule::Slice<_1e15a2bb9_Token>& _68737_tokens) {
	jule::Ref<_1e16025cb_FnDecl> _68817_f = (*this)._field_p->_method_build_fn(_68737_tokens,false,false);
	if ((!(_68817_f->_method_is_anon()))) {
		(*this)._method_push_err(_68817_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>({}));
	}
	return _68817_f;
}



jule::Any _1e1776d27_ExprBuilder::_method_build_unsafe(jule::Slice<_1e15a2bb9_Token>& _69636_tokens) {
	{
		auto _match_expr{ _69636_tokens[1LL]._field_id };
		if (!((33LLU) == _match_expr)) { goto _case_end_4335428400; }
		_case_begin_4335428400:;
		{
			return jule::Any((*this)._method_build_anon_fn(_69636_tokens));
		}
		goto _match_end_4335426992;
		_case_end_4335428400:;
		_case_begin_4335425952:;
		{
			return jule::Any((*this)._method_build_unsafe_expr(_69636_tokens));
		}
		goto _match_end_4335426992;
		_case_end_4335425952:;
		_match_end_4335426992:;
	}
}



void _1e1776d27_ExprBuilder::_method_push_range_lit_part(jule::Slice<_1e15a2bb9_Token> _70742_part,_1e15a2bb9_Token _7089_error_token,jule::Slice<jule::Slice<_1e15a2bb9_Token>>& _70834_parts) {
	if (_70742_part.len() == 0LL) {
		(*this)._method_push_err(_7089_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_70834_parts=jule::append(_70834_parts,jule::Slice<jule::Slice<_1e15a2bb9_Token>>({_70742_part}));
}



jule::Slice<jule::Slice<_1e15a2bb9_Token>> _1e1776d27_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_1e15a2bb9_Token> _71853_tokens) {
	if (_71853_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _72417_parts = nullptr;
	jule::Int _72617_last = 0LL;
	jule::Int _72717_range_n = 0LL;
	_71853_tokens=_71853_tokens.slice(1LL,_71853_tokens.len() - 1LL);
	{
		auto expr = _71853_tokens;
		auto it = expr.begin();
		_iter_begin_4335442960:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			_1e15a2bb9_Token _1e1776d27_token = *it;
			{
				if (_1e1776d27_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1e1776d27_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4335448304; }
						_case_begin_4335448304:;
						{
							(_72717_range_n)++;
						}
						goto _match_end_4335446944;
						_case_end_4335448304:;
						_case_begin_4335446256:;
						{
							(_72717_range_n)--;
						}
						goto _match_end_4335446944;
						_case_end_4335446256:;
						_match_end_4335446944:;
					}
				}
				if ((_72717_range_n > 0LL) || (_1e1776d27_token._field_id != 8LLU)) {
					goto _iter_next_4335442960;
				}
				(*this)._method_push_range_lit_part(_71853_tokens.slice(_72617_last,_1e1776d27_i),_1e1776d27_token,_72417_parts);
				_72617_last=static_cast<jule::Int>(_1e1776d27_i + 1LL);
			}
			_iter_next_4335442960:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4335442960;
		}
		_iter_end_4335442960:;
	}
	if (_72617_last < _71853_tokens.len()) {
		if (_72617_last == 0LL) {
			if (_71853_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_71853_tokens.slice(_72617_last),_71853_tokens[_72617_last],_72417_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_71853_tokens.slice(_72617_last),_71853_tokens[_72617_last - 1LL],_72417_parts);
		}
	}
	return _72417_parts;
}



jule::Ref<_1e16025cb_FieldExprPair> _1e1776d27_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_1e15a2bb9_Token> _76144_tokens) {
	jule::Ref<_1e16025cb_FieldExprPair> _76217_pair = jule::new_struct<_1e16025cb_FieldExprPair>(new( std::nothrow ) _1e16025cb_FieldExprPair(_76144_tokens[0LL],jule::Any()));
	_76144_tokens=_76144_tokens.slice(2LL);
	_76217_pair->_field_expr=(*this)._method_build_from_tokens(_76144_tokens)->_field_kind;
	return _76217_pair;
}



jule::Any _1e1776d27_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_1e15a2bb9_Token>& _77045_tokens) {
	_1e15a2bb9_Token _77117_token = _77045_tokens[0LL];
	if (_77117_token._field_id == 2LLU) {
		if (_77045_tokens.len() > 1LL) {
			_77117_token=_77045_tokens[1LL];
			if (_77117_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_77045_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_77045_tokens));
}



jule::Slice<jule::Any> _1e1776d27_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_1e15a2bb9_Token>& _78346_tokens) {
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _78417_parts = (*this)._method_get_brace_range_lit_expr_parts(_78346_tokens);
	if (_78417_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _78917_pairs = jule::Slice<jule::Any>::alloc(static_cast<jule::I64>(_78417_parts.len()));
	{
		auto expr = _78417_parts;
		auto it = expr.begin();
		_iter_begin_4335474720:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			jule::Slice<_1e15a2bb9_Token> _1e1776d27_part = *it;
			{
				_78917_pairs[_1e1776d27_i]=(*this)._method_build_struct_lit_expr(_1e1776d27_part);
			}
			_iter_next_4335474720:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4335474720;
		}
		_iter_end_4335474720:;
	}
	return _78917_pairs;
}



jule::Ref<_1e16025cb_StructLit> _1e1776d27_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_1e15a2bb9_Token> _79649_tokens) {
	jule::Int _79717_i = 0LL;
	jule::Ref<_1e16025cb_TypeDecl> _79818_t;
	jule::Bool _79821_ok;
	std::tie(_79818_t,_79821_ok) = (*this)._field_p->_method_build_type(_79649_tokens,(&(_79717_i)),true);
	if ((!(_79821_ok))) {
		return jule::new_ref<_1e16025cb_StructLit>();
	} else if (_79717_i >= _79649_tokens.len()) {
		(*this)._method_push_err(_79649_tokens[_79717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_StructLit>();
	}
	_79649_tokens=_79649_tokens.slice(_79717_i);
	_1e15a2bb9_Token _80713_token = _79649_tokens[0LL];
	if ((_80713_token._field_id != 3LLU) || (_80713_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_80713_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_StructLit>();
	}
	return jule::new_struct<_1e16025cb_StructLit>(new( std::nothrow ) _1e16025cb_StructLit(_79818_t,(*this)._method_build_struct_lit_exprs(_79649_tokens)));
}



jule::Any _1e1776d27_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_1e15a2bb9_Token>& _81944_tokens) {
	jule::Slice<_1e15a2bb9_Token> _82018_l;
	jule::Slice<_1e15a2bb9_Token> _82025_r;
	std::tie(_82018_l,_82025_r) = _1e1776d27_split_colon(_81944_tokens);
	if (_82018_l != nullptr) {
		return jule::Any(jule::new_struct<_1e16025cb_KeyValPair>(new( std::nothrow ) _1e16025cb_KeyValPair((*this)._method_build_from_tokens(_82018_l)->_field_kind,(*this)._method_build_from_tokens(_82025_r)->_field_kind,_81944_tokens[_82018_l.len()])));
	}
	return jule::Any((*this)._method_build_from_tokens(_81944_tokens));
}



jule::Ref<_1e16025cb_BraceLit> _1e1776d27_ExprBuilder::_method_build_brace_lit(jule::Slice<_1e15a2bb9_Token>& _83239_tokens) {
	jule::Ref<_1e16025cb_BraceLit> _83317_lit = jule::new_struct<_1e16025cb_BraceLit>(new( std::nothrow ) _1e16025cb_BraceLit(_83239_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _83717_parts = (*this)._method_get_brace_range_lit_expr_parts(_83239_tokens);
	if (_83717_parts == nullptr) {
		return _83317_lit;
	}
	_83317_lit->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::I64>(_83717_parts.len()));
	{
		auto expr = _83717_parts;
		auto it = expr.begin();
		_iter_begin_4335506752:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			jule::Slice<_1e15a2bb9_Token> _1e1776d27_part = *it;
			{
				_83317_lit->_field_exprs[_1e1776d27_i]=(*this)._method_build_brace_lit_part(_1e1776d27_part);
			}
			_iter_next_4335506752:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4335506752;
		}
		_iter_end_4335506752:;
	}
	return _83317_lit;
}



jule::Any _1e1776d27_ExprBuilder::_method_build_brace_range(jule::Slice<_1e15a2bb9_Token>& _85041_tokens) {
	jule::Slice<_1e15a2bb9_Token> _85114_expr_tokens;
	jule::Int _85127_range_n;
	std::tie(_85114_expr_tokens,_85127_range_n) = _1e1776d27_get_range_expr_tokens(_85041_tokens);
	{
		if (!((_85114_expr_tokens.len() == 0LL))) { goto _case_end_4335513344; }
		_case_begin_4335513344:;
		{
			return jule::Any((*this)._method_build_brace_lit(_85041_tokens));
		}
		goto _match_end_4335513200;
		_case_end_4335513344:;
		if (!((_85127_range_n > 0LL))) { goto _case_end_4335513456; }
		_case_begin_4335513456:;
		{
			(*this)._method_push_err(_85041_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4335513200;
		_case_end_4335513456:;
		_match_end_4335513200:;
	}
	{
		auto _match_expr{ _85114_expr_tokens[0LL]._field_id };
		if (!((35LLU) == _match_expr)) { goto _case_end_4335518848; }
		_case_begin_4335518848:;
		{
			return (*this)._method_build_unsafe(_85041_tokens);
		}
		goto _match_end_4335515008;
		_case_end_4335518848:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4335521360; }
		_case_begin_4335521360:;
		{
			return jule::Any((*this)._method_build_anon_fn(_85041_tokens));
		}
		goto _match_end_4335515008;
		_case_end_4335521360:;
		if (!((2LLU) == _match_expr || (31LLU) == _match_expr)) { goto _case_end_4335520752; }
		_case_begin_4335520752:;
		{
			return jule::Any((*this)._method_build_typed_struct_literal(_85041_tokens));
		}
		goto _match_end_4335515008;
		_case_end_4335520752:;
		_case_begin_4335516112:;
		{
			(*this)._method_push_err(_85114_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4335515008;
		_case_end_4335516112:;
		_match_end_4335515008:;
	}
}



jule::Slice<jule::Slice<_1e15a2bb9_Token>> _1e1776d27_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_1e15a2bb9_Token> _88043_tokens) {
	_88043_tokens=_88043_tokens.slice(1LL,_88043_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _88218_parts;
	jule::Slice<_1ec8e8025_Log> _88225_errors;
	std::tie(_88218_parts,_88225_errors) = _1e25dc95b_parts(_88043_tokens,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_88225_errors);
	return _88218_parts;
}



jule::Ref<_1e16025cb_SliceExpr> _1e1776d27_ExprBuilder::_method_build_slice(jule::Slice<_1e15a2bb9_Token> _88734_tokens) {
	jule::Ref<_1e16025cb_SliceExpr> _88817_slc = jule::new_struct<_1e16025cb_SliceExpr>(new( std::nothrow ) _1e16025cb_SliceExpr(_88734_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _89217_parts = (*this)._method_get_enumerable_parts(_88734_tokens);
	if (_89217_parts.len() == 0LL) {
		return _88817_slc;
	}
	_88817_slc->_field_elems=jule::Slice<jule::Any>::alloc(static_cast<jule::I64>(_89217_parts.len()));
	{
		auto expr = _89217_parts;
		auto it = expr.begin();
		_iter_begin_4335537104:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			jule::Slice<_1e15a2bb9_Token> _1e1776d27_p = *it;
			{
				_88817_slc->_field_elems[_1e1776d27_i]=(*this)._method_build_from_tokens(_1e1776d27_p)->_field_kind;
			}
			_iter_next_4335537104:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4335537104;
		}
		_iter_end_4335537104:;
	}
	return _88817_slc;
}



jule::Ref<_1e16025cb_IndexingExpr> _1e1776d27_ExprBuilder::_method_build_indexing(jule::Slice<_1e15a2bb9_Token> _90537_expr_tokens,jule::Slice<_1e15a2bb9_Token> _90613_tokens,_1e15a2bb9_Token _90634_error_token) {
	_90613_tokens=_90613_tokens.slice(1LL,_90613_tokens.len() - 1LL);
	return jule::new_struct<_1e16025cb_IndexingExpr>(new( std::nothrow ) _1e16025cb_IndexingExpr(_90634_error_token,(*this)._method_build_from_tokens(_90537_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_90613_tokens)->_field_kind));
}



jule::Ref<_1e16025cb_SlicingExpr> _1e1776d27_ExprBuilder::_method_build_slicing(jule::Slice<_1e15a2bb9_Token>& _91537_expr_tokens,jule::Slice<_1e15a2bb9_Token>& _91564_slicing_tokens,jule::Int& _91610_colon,_1e15a2bb9_Token& _91627_error_token) {
	jule::Ref<_1e16025cb_SlicingExpr> _91717_slc = jule::new_struct<_1e16025cb_SlicingExpr>(new( std::nothrow ) _1e16025cb_SlicingExpr(_91627_error_token,(*this)._method_build_from_tokens(_91537_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_1e15a2bb9_Token> _92217_start_expr_tokens = _91564_slicing_tokens.slice(0LL,_91610_colon);
	if (_92217_start_expr_tokens.len() > 0LL) {
		_91717_slc->_field_start=(*this)._method_build_from_tokens(_92217_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_1e15a2bb9_Token> _92717_to_expr_tokens = _91564_slicing_tokens.slice(_91610_colon + 1LL);
	if (_92717_to_expr_tokens.len() > 0LL) {
		_91717_slc->_field_to=(*this)._method_build_from_tokens(_92717_to_expr_tokens)->_field_kind;
	}
	return _91717_slc;
}



jule::Any _1e1776d27_ExprBuilder::_method_build_bracket_range(jule::Slice<_1e15a2bb9_Token> _93542_tokens) {
	_1e15a2bb9_Token _93617_error_token = _93542_tokens[0LL];
	jule::Slice<_1e15a2bb9_Token> _93718_expr_tokens;
	jule::Int _93731_range_n;
	std::tie(_93718_expr_tokens,_93731_range_n) = _1e1776d27_get_range_expr_tokens(_93542_tokens);
	{
		if (!((_93718_expr_tokens.len() == 0LL))) { goto _case_end_4335562912; }
		_case_begin_4335562912:;
		{
			return jule::Any((*this)._method_build_slice(_93542_tokens));
		}
		goto _match_end_4335562752;
		_case_end_4335562912:;
		if (!(((_93718_expr_tokens.len() == 0LL) || (_93731_range_n > 0LL)))) { goto _case_end_4335563024; }
		_case_begin_4335563024:;
		{
			(*this)._method_push_err(_93617_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4335562752;
		_case_end_4335563024:;
		_match_end_4335562752:;
	}
	_93542_tokens=_93542_tokens.slice(_93718_expr_tokens.len());
	jule::Int _95617_i = 0LL;
	jule::Slice<_1e15a2bb9_Token> _95718_slicing_tokens;
	jule::Int _95734_colon;
	std::tie(_95718_slicing_tokens,_95734_colon) = _1e2613531_split_map_range(_93542_tokens,_95617_i);
	if (_95734_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_93718_expr_tokens,_95718_slicing_tokens,_95734_colon,_93617_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_93718_expr_tokens,_93542_tokens,_93617_error_token));
}



jule::Any _1e1776d27_ExprBuilder::_method_build_ternary(jule::Slice<_1e15a2bb9_Token> _96436_tokens) {
	jule::Ref<_1e16025cb_TernaryExpr> _96517_ter = jule::new_struct<_1e16025cb_TernaryExpr>(new( std::nothrow ) _1e16025cb_TernaryExpr());
	_96517_ter->_field_token=_96436_tokens[0LL];
	_96436_tokens=_96436_tokens.slice(1LL);
	jule::Slice<_1e15a2bb9_Token> _96917_expr_tokens = _1e1776d27_get_block_expr(_96436_tokens);
	if (_96917_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_96517_ter->_field_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	_96517_ter->_field_condition=(*this)._method_build_kind(_96917_expr_tokens);
	jule::I64 _97617_i = _96917_expr_tokens.len();
	jule::Slice<_1e15a2bb9_Token> _97717_true_expr = _1e25dc95b_range(_97617_i,jule::Str("{", 1),jule::Str("}", 1),_96436_tokens);
	if (_97717_true_expr == nullptr) {
		(*this)._method_push_err(_96517_ter->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(_96517_ter);
	} else if (_97717_true_expr.len() == 0LL) {
		(*this)._method_push_err(_96436_tokens[_96917_expr_tokens.len()],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	if (_97617_i >= _96436_tokens.len()) {
		(*this)._method_push_err(_96517_ter->_field_token,jule::Str("else block missed for ternary operator", 38),jule::Slice<jule::Any>({}));
		return jule::Any(_96517_ter);
	}
	_1e15a2bb9_Token _99113_else_token = _96436_tokens[_97617_i];
	if (_99113_else_token._field_id != 17LLU) {
		(*this)._method_push_err(_99113_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("else keyword expected for else block of ternary operator", 56),jule::Slice<jule::Any>({}));
		return jule::Any(_96517_ter);
	}
	(_97617_i)++;
	jule::I64 _99913_j = _97617_i;
	jule::Slice<_1e15a2bb9_Token> _100017_false_expr = _1e25dc95b_range(_97617_i,jule::Str("{", 1),jule::Str("}", 1),_96436_tokens);
	if (_100017_false_expr == nullptr) {
		(*this)._method_push_err(_99113_else_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(_96517_ter);
	} else if (_100017_false_expr.len() == 0LL) {
		(*this)._method_push_err(_96436_tokens[_99913_j],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	if (_97617_i < _96436_tokens.len()) {
		(*this)._method_push_err(_96436_tokens[_97617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_96517_ter->_field_true_expr=(*this)._method_build_kind(_97717_true_expr);
	_96517_ter->_field_false_expr=(*this)._method_build_kind(_100017_false_expr);
	return jule::Any(_96517_ter);
}



jule::Any _1e1776d27_ExprBuilder::_method_build_data(jule::Slice<_1e15a2bb9_Token>& _101934_tokens) {
	{
		auto _match_expr{ _101934_tokens.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4335607440; }
		_case_begin_4335607440:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4335607008;
		_case_end_4335607440:;
		if (!((1LL) == _match_expr)) { goto _case_end_4335607536; }
		_case_begin_4335607536:;
		{
			return (*this)._method_build_single(_101934_tokens[0LL]);
		}
		goto _match_end_4335607008;
		_case_end_4335607536:;
		if (!((3LL) == _match_expr)) { goto _case_end_4335607632; }
		_case_begin_4335607632:;
		{
			if (_101934_tokens[0LL]._field_id == 31LLU) {
				return jule::Any((*this)._method_build_cpp_linked_ident(_101934_tokens));
			}
		}
		goto _match_end_4335607008;
		_case_end_4335607632:;
		_match_end_4335607008:;
	}
	_1e15a2bb9_Token _103317_token = _101934_tokens[0LL];
	{
		auto _match_expr{ _103317_token._field_id };
		if (!((16LLU) == _match_expr)) { goto _case_end_4335614000; }
		_case_begin_4335614000:;
		{
			return (*this)._method_build_ternary(_101934_tokens);
		}
		goto _match_end_4335613776;
		_case_end_4335614000:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4335614096; }
		_case_begin_4335614096:;
		{
			if ((_101934_tokens.len() > 1LL) && (_103317_token._field_kind == jule::Str("*", 1))) {
				_103317_token=_101934_tokens[1LL];
				if ((_103317_token._field_id == 1LLU) || (_103317_token._field_id == 35LLU)) {
					return jule::Any((*this)._method_build_type(_101934_tokens));
				}
			}
			return jule::Any((*this)._method_build_unary(_101934_tokens));
		}
		goto _match_end_4335613776;
		_case_end_4335614096:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4335614192; }
		_case_begin_4335614192:;
		{
			if (_101934_tokens.len() < 3LL) {
				goto _match_end_4335613776;
			}
			if (_101934_tokens.len() > 3LL) {
				_1e15a2bb9_Token _105621_t = _101934_tokens[_101934_tokens.len() - 1LL];
				if ((_105621_t._field_id == 3LLU) && (_105621_t._field_kind == jule::Str(")", 1))) {
					goto _match_end_4335613776;
				}
			}
			_1e15a2bb9_Token _106217_next = _101934_tokens[1LL];
			if ((_106217_next._field_id != 3LLU) || (_106217_next._field_kind != jule::Str("]", 1))) {
				goto _match_end_4335613776;
			}
			return jule::Any((*this)._method_build_type(_101934_tokens));
		}
		goto _match_end_4335613776;
		_case_end_4335614192:;
		_match_end_4335613776:;
	}
	_103317_token=_101934_tokens[_101934_tokens.len() - 1LL];
	{
		auto _match_expr{ _103317_token._field_id };
		if (!((2LLU) == _match_expr)) { goto _case_end_4335629088; }
		_case_begin_4335629088:;
		{
			return (*this)._method_build_sub_ident(_101934_tokens);
		}
		goto _match_end_4335629008;
		_case_end_4335629088:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4335629184; }
		_case_begin_4335629184:;
		{
			return jule::Any((*this)._method_build_type(_101934_tokens));
		}
		goto _match_end_4335629008;
		_case_end_4335629184:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4335629280; }
		_case_begin_4335629280:;
		{
			return (*this)._method_build_op_right(_101934_tokens);
		}
		goto _match_end_4335629008;
		_case_end_4335629280:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4335629376; }
		_case_begin_4335629376:;
		{
			{
				auto _match_expr{ _103317_token._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4335633552; }
				_case_begin_4335633552:;
				{
					return (*this)._method_build_parentheses_range(_101934_tokens);
				}
				goto _match_end_4335633424;
				_case_end_4335633552:;
				if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4335633648; }
				_case_begin_4335633648:;
				{
					return (*this)._method_build_brace_range(_101934_tokens);
				}
				goto _match_end_4335633424;
				_case_end_4335633648:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4335633824; }
				_case_begin_4335633824:;
				{
					return (*this)._method_build_bracket_range(_101934_tokens);
				}
				goto _match_end_4335633424;
				_case_end_4335633824:;
				_match_end_4335633424:;
			}
		}
		goto _match_end_4335629008;
		_case_end_4335629376:;
		_match_end_4335629008:;
	}
	(*this)._method_push_err(_103317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



jule::Ref<_1e16025cb_BinopExpr> _1e1776d27_ExprBuilder::_method_build_binop(jule::Slice<_1e15a2bb9_Token>& _109935_tokens,jule::Int _109952_i) {
	jule::Slice<_1e15a2bb9_Token> _110017_left_tokens = _109935_tokens.slice(0LL,_109952_i);
	jule::Slice<_1e15a2bb9_Token> _110117_right_tokens = _109935_tokens.slice(_109952_i + 1LL);
	if (_110017_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_109935_tokens[_109952_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_BinopExpr>();
	}
	if (_110117_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_109935_tokens[_109952_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_BinopExpr>();
	}
	return jule::new_struct<_1e16025cb_BinopExpr>(new( std::nothrow ) _1e16025cb_BinopExpr((*this)._method_build(_110017_left_tokens),(*this)._method_build(_110117_right_tokens),_109935_tokens[_109952_i]));
}



jule::Any _1e1776d27_ExprBuilder::_method_build(jule::Slice<_1e15a2bb9_Token>& _112229_tokens) {
	jule::Int _112313_i = _1e1776d27_find_lowest_prec_op(_112229_tokens);
	if (_112313_i == -1LL) {
		return (*this)._method_build_data(_112229_tokens);
	}
	return jule::Any((*this)._method_build_binop(_112229_tokens,_112313_i));
}



jule::Any _1e1776d27_ExprBuilder::_method_build_kind(jule::Slice<_1e15a2bb9_Token>& _113034_tokens) {
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _113118_parts;
	jule::Slice<_1ec8e8025_Log> _113125_errors;
	std::tie(_113118_parts,_113125_errors) = _1e25dc95b_parts(_113034_tokens,8LLU,true);
	if (_113125_errors != nullptr) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_113125_errors);
		return jule::Any(nullptr);
	} else if (_113118_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_113118_parts));
	}
	return (*this)._method_build(_113034_tokens);
}



jule::Ref<_1e16025cb_Expr> _1e1776d27_ExprBuilder::_method_build_from_tokens(jule::Slice<_1e15a2bb9_Token> _114140_tokens) {
	_114140_tokens=_1e1776d27_eliminate_comments(_114140_tokens);
	if (_114140_tokens.len() == 0LL) {
		return jule::new_ref<_1e16025cb_Expr>();
	}
	return jule::new_struct<_1e16025cb_Expr>(new( std::nothrow ) _1e16025cb_Expr(_114140_tokens[0LL],(*this)._method_build_kind(_114140_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1776d27_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



void _1e25dc95b_Parser::_method_stop(void) {
	jule::drop((*this)._field_ast);
}



jule::Bool _1e25dc95b_Parser::_method_stopped(void) {
	return (!(jule::real((*this)._field_ast)));
}



void _1e25dc95b_Parser::_method_push_err(_1e15a2bb9_Token _24027_token,jule::Str _24041_fmt,jule::Slice<jule::Any> _24054_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1ec8e8025_Log>({_1e25dc95b_compiler_err(_24027_token,_24041_fmt,_24054_args)}));
}



void _1e25dc95b_Parser::_method_push_suggestion(jule::Str _24534_fmt,jule::Slice<jule::Any> _24547_args) {
	{
		_1e25dc95b_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_24534_fmt,_24547_args);
	}
}



jule::Ref<_1e16025cb_Expr> _1e25dc95b_Parser::_method_build_expr(jule::Slice<_1e15a2bb9_Token>& _24935_tokens) {
	jule::Ref<_1e1776d27_ExprBuilder> _25017_ep = jule::new_struct<_1e1776d27_ExprBuilder>(new( std::nothrow ) _1e1776d27_ExprBuilder(this->self));
	jule::Ref<_1e16025cb_Expr> _25117_expr = _25017_ep->_method_build_from_tokens(_24935_tokens);
	return _25117_expr;
}



jule::Ref<_1e16025cb_Directive> _1e25dc95b_Parser::_method_get_directive(jule::Ref<_1e16025cb_Comment> _25532_c) {
	if (_25532_c->_field_text.len() <= jule::Str("jule:", 5).len()) {
		return jule::new_ref<_1e16025cb_Directive>();
	}
	jule::Ref<_1e16025cb_Directive> _26017_d = jule::new_struct<_1e16025cb_Directive>(new( std::nothrow ) _1e16025cb_Directive(_25532_c->_field_token,jule::Str(),jule::Slice<jule::Str>()));
	jule::Str _26413_pragma = _25532_c->_field_token._field_kind.slice(jule::Str("jule:", 5).len());
	jule::Slice<jule::Str> _26517_parts = _26413_pragma.split(jule::Str(" ", 1),-1LL);
	_26017_d->_field_tag=_26517_parts[0LL];
	_26017_d->_field_args=_26517_parts.slice(1LL);
	jule::Bool _27117_ok = false;
	{
		auto expr = _1ec93b5b8_DIRECTIVES;
		auto it = expr.begin();
		_iter_begin_4335687632:;
		if (it != expr.end()) {
			jule::Str _1e25dc95b_kind = *it;
			{
				if (_26017_d->_field_tag == _1e25dc95b_kind) {
					_27117_ok=true;
					goto _iter_end_4335687632;
				}
			}
			_iter_next_4335687632:;
			++it;
			goto _iter_begin_4335687632;
		}
		_iter_end_4335687632:;
	}
	if ((!(_27117_ok))) {
		return jule::new_ref<_1e16025cb_Directive>();
	}
	return _26017_d;
}



void _1e25dc95b_Parser::_method_push_directive(jule::Ref<_1e16025cb_Comment>& _28538_c) {
	jule::Ref<_1e16025cb_Directive> _28617_d = (*this)._method_get_directive(_28538_c);
	if ((!(jule::real(_28617_d)))) {
		return;
	}
	{
		auto expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_4335698336:;
		if (it != expr.end()) {
			jule::Ref<_1e16025cb_Directive> _1e25dc95b_pd = *it;
			{
				if (_28617_d->_field_tag == _1e25dc95b_pd->_field_tag) {
					return;
				}
			}
			_iter_next_4335698336:;
			++it;
			goto _iter_begin_4335698336;
		}
		_iter_end_4335698336:;
	}
	(*this)._field_directives=jule::append((*this)._field_directives,jule::Slice<jule::Ref<_1e16025cb_Directive>>({_28617_d}));
}



void _1e25dc95b_Parser::_method_process_comment(jule::Ref<_1e16025cb_Comment>& _30139_c) {
	if (_30139_c->_method_is_directive()) {
		(*this)._method_push_directive(_30139_c);
		return;
	}
	if ((!(jule::real((*this)._field_comment_group)))) {
		(*this)._field_comment_group=jule::new_struct<_1e16025cb_CommentGroup>(new( std::nothrow ) _1e16025cb_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments=jule::append((*this)._field_comment_group->_field_comments,jule::Slice<jule::Ref<_1e16025cb_Comment>>({_30139_c}));
}



jule::Ref<_1e16025cb_ScopeTree> _1e25dc95b_Parser::_method_build_scope(jule::Slice<_1e15a2bb9_Token>& _31236_tokens) {
	jule::Ref<_1e16025cb_ScopeTree> _31317_s = _1e184a280_new_scope();
	_1e184a280_ScopeParser _31417_sp = _1e184a280_ScopeParser(this->self,jule::Ref<_1e16025cb_ScopeTree>(),jule::Slice<jule::Ref<_1e184a280_Stmt>>(),jule::Int());
	_31417_sp._method_build(_31236_tokens,_31317_s);
	return _31317_s;
}



std::tuple<jule::Ref<_1e16025cb_TypeDecl>,jule::Bool> _1e25dc95b_Parser::_method___build_type(jule::Slice<_1e15a2bb9_Token>& _32144_tokens,jule::Int* _32213_i,jule::Bool _32222_err) {
	_1e2613531_TypeBuilder _32317_tb = _1e2613531_TypeBuilder(this->self,_32144_tokens,_32213_i,_32222_err);
	jule::Ref<_1e16025cb_TypeDecl> _32918_decl;
	jule::Bool _32924_ok;
	std::tie(_32918_decl,_32924_ok) = _32317_tb._method_build();
	return std::make_tuple(_32918_decl,_32924_ok);
}



std::tuple<jule::Ref<_1e16025cb_TypeDecl>,jule::Bool> _1e25dc95b_Parser::_method_build_type(jule::Slice<_1e15a2bb9_Token>& _33442_tokens,jule::Int* _33513_i,jule::Bool _33522_err) {
	_1e15a2bb9_Token _33613_token = _33442_tokens[(*(_33513_i))];
	jule::Ref<_1e16025cb_TypeDecl> _33718_t;
	jule::Bool _33721_ok;
	std::tie(_33718_t,_33721_ok) = this->self->_method___build_type(_33442_tokens,_33513_i,_33522_err);
	if (_33522_err && (!(_33721_ok))) {
		this->self->_method_push_err(_33613_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
	}
	return std::make_tuple(_33718_t,_33721_ok);
}



jule::Ref<_1e16025cb_TypeAliasDecl> _1e25dc95b_Parser::_method_build_type_alias_decl(jule::Slice<_1e15a2bb9_Token>& _34446_tokens) {
	jule::Int _34517_i = 1LL;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[_34517_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_TypeAliasDecl>();
	}
	jule::Ref<_1e16025cb_TypeAliasDecl> _35017_tad = jule::new_struct<_1e16025cb_TypeAliasDecl>(new( std::nothrow ) _1e16025cb_TypeAliasDecl(jule::Ref<_1e16025cb_ScopeTree>(),jule::Bool(),jule::Bool(),_34446_tokens[1LL],_34446_tokens[1LL]._field_kind,jule::Ref<_1e16025cb_TypeDecl>(),jule::Ref<_1e16025cb_CommentGroup>()));
	_1e15a2bb9_Token _35417_token = _34446_tokens[_34517_i];
	if (_35417_token._field_id != 2LLU) {
		this->self->_method_push_err(_35417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_34517_i)++;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[_34517_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	_35417_token=_34446_tokens[_34517_i];
	if (_35417_token._field_id != 11LLU) {
		this->self->_method_push_err(_34446_tokens[_34517_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	(_34517_i)++;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[_34517_i - 1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	jule::Ref<_1e16025cb_TypeDecl> _37518_t;
	jule::Bool _37521_ok;
	std::tie(_37518_t,_37521_ok) = this->self->_method_build_type(_34446_tokens,(&(_34517_i)),true);
	_35017_tad->_field_kind=_37518_t;
	if (_37521_ok && (_34517_i < _34446_tokens.len())) {
		this->self->_method_push_err(_34446_tokens[_34517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _35017_tad;
}



void _1e25dc95b_Parser::_method_build_var_type_and_expr(jule::Ref<_1e16025cb_VarDecl>& _38348_v,jule::Slice<_1e15a2bb9_Token>& _38366_tokens) {
	jule::Int _38417_i = 0LL;
	_1e15a2bb9_Token _38517_tok = _38366_tokens[_38417_i];
	if (_38517_tok._field_id == 11LLU) {
		(_38417_i)++;
		if ((_38417_i >= _38366_tokens.len()) || ((_38366_tokens[_38417_i]._field_id == 7LLU) && (_38366_tokens[_38417_i]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_38517_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Ref<_1e16025cb_TypeDecl> _39322_t;
		jule::Bool _39325_ok;
		std::tie(_39322_t,_39325_ok) = this->self->_method_build_type(_38366_tokens,(&(_38417_i)),true);
		if (_39325_ok) {
			_38348_v->_field_kind=_39322_t;
			if (_38417_i >= _38366_tokens.len()) {
				return;
			}
			_38517_tok=_38366_tokens[_38417_i];
		}
	}
	if (_38517_tok._field_id == 7LLU) {
		if (_38517_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Slice<_1e15a2bb9_Token> _40821_expr_tokens = _38366_tokens.slice(_38417_i + 1LL);
		if (_40821_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_38517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			return;
		}
		_38348_v->_field_expr=this->self->_method_build_expr(_40821_expr_tokens);
	} else {
		this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



void _1e25dc95b_Parser::_method_build_var_common(jule::Ref<_1e16025cb_VarDecl>& _41941_v,jule::Slice<_1e15a2bb9_Token> _41958_tokens) {
	_41941_v->_field_token=_41958_tokens[0LL];
	if (_41941_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_41941_v->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	_41941_v->_field_ident=_41941_v->_field_token._field_kind;
	jule::drop(_41941_v->_field_kind);
	if (_41958_tokens.len() > 1LL) {
		_41958_tokens=_41958_tokens.slice(1LL);
		this->self->_method_build_var_type_and_expr(_41941_v,_41958_tokens);
	}
}



void _1e25dc95b_Parser::_method_build_var_begin(jule::Ref<_1e16025cb_VarDecl>& _43439_v,jule::Ref<jule::Int> _43456_i,jule::Slice<_1e15a2bb9_Token>& _43466_tokens) {
	_1e15a2bb9_Token _43513_tok = _43466_tokens[static_cast<jule::Int>(_43456_i)];
	{
		auto _match_expr{ _43513_tok._field_id };
		if (!((38LLU) == _match_expr)) { goto _case_end_4335800624; }
		_case_begin_4335800624:;
		{
			_43439_v->_field_statically=true;
			goto _case_begin_4335800720;
		}
		goto _match_end_4335800352;
		_case_end_4335800624:;
		if (!((34LLU) == _match_expr)) { goto _case_end_4335800720; }
		_case_begin_4335800720:;
		{
			(_43456_i)++;
			if (_43456_i >= _43466_tokens.len()) {
				(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			if (_43466_tokens[static_cast<jule::Int>(_43456_i)]._field_id == 36LLU) {
				_43439_v->_field_mutable=true;
				(_43456_i)++;
			}
		}
		goto _match_end_4335800352;
		_case_end_4335800720:;
		if (!((9LLU) == _match_expr)) { goto _case_end_4335800816; }
		_case_begin_4335800816:;
		{
			(_43456_i)++;
			_43439_v->_field_constant=true;
		}
		goto _match_end_4335800352;
		_case_end_4335800816:;
		_case_begin_4335798704:;
		{
			(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4335800352;
		_case_end_4335798704:;
		_match_end_4335800352:;
	}
	if (_43456_i >= _43466_tokens.len()) {
		(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



jule::Ref<_1e16025cb_VarDecl> _1e25dc95b_Parser::_method_build_var(jule::Slice<_1e15a2bb9_Token> _46833_tokens) {
	jule::Ref<jule::Int> _46917_i = jule::new_ref<jule::Int>(0LL);
	jule::Ref<_1e16025cb_VarDecl> _47017_v = jule::new_struct<_1e16025cb_VarDecl>(new( std::nothrow ) _1e16025cb_VarDecl(jule::Ref<_1e16025cb_ScopeTree>(),_46833_tokens[static_cast<jule::Int>(_46917_i)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1e16025cb_Directive>>(),jule::Ref<_1e16025cb_CommentGroup>(),jule::Ref<_1e16025cb_TypeDecl>(),jule::Ref<_1e16025cb_Expr>()));
	this->self->_method_build_var_begin(_47017_v,_46917_i,_46833_tokens);
	if (_46917_i >= _46833_tokens.len()) {
		return jule::new_ref<_1e16025cb_VarDecl>();
	}
	_46833_tokens=_46833_tokens.slice(static_cast<jule::Int>(_46917_i));
	if ((_46833_tokens[0LL]._field_id == 7LLU) && (_46833_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_47017_v->_field_reference=true;
		if (_46833_tokens.len() == 1LL) {
			return jule::new_ref<_1e16025cb_VarDecl>();
		}
		_46833_tokens=_46833_tokens.slice(1LL);
	}
	this->self->_method_build_var_common(_47017_v,_46833_tokens);
	return _47017_v;
}



jule::Ref<_1e16025cb_GenericDecl> _1e25dc95b_Parser::_method_build_generic(jule::Slice<_1e15a2bb9_Token>& _49037_tokens) {
	if (_49037_tokens.len() > 1LL) {
		(*this)._method_push_err(_49037_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1e16025cb_GenericDecl> _49417_g = jule::new_struct<_1e16025cb_GenericDecl>(new( std::nothrow ) _1e16025cb_GenericDecl(_49037_tokens[0LL],jule::Str()));
	if (_49417_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_49417_g->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_49417_g->_field_ident=_49417_g->_field_token._field_kind;
	return _49417_g;
}



jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> _1e25dc95b_Parser::_method_build_generics(jule::Slice<_1e15a2bb9_Token>& _50538_tokens,_1e15a2bb9_Token& _50556_error_token) {
	if (_50538_tokens.len() == 0LL) {
		(*this)._method_push_err(_50556_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _51118_parts;
	jule::Slice<_1ec8e8025_Log> _51125_errors;
	std::tie(_51118_parts,_51125_errors) = _1e25dc95b_parts(_50538_tokens,8LLU,true);
	(*this)._field_errors=jule::append((*this)._field_errors,_51125_errors);
	jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> _51417_generics = jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>::alloc(static_cast<jule::I64>(_51118_parts.len()));
	{
		auto expr = _51118_parts;
		auto it = expr.begin();
		_iter_begin_4335838608:;
		if (it != expr.end()) {
			jule::Int _1e25dc95b_i = it - expr.begin();
			jule::Slice<_1e15a2bb9_Token> _1e25dc95b_part = *it;
			{
				if (_51118_parts.len() > 0LL) {
					_51417_generics[_1e25dc95b_i]=(*this)._method_build_generic(_1e25dc95b_part);
				}
			}
			_iter_next_4335838608:;
			++it;
			_1e25dc95b_i++;
			goto _iter_begin_4335838608;
		}
		_iter_end_4335838608:;
	}
	return _51417_generics;
}



jule::Ref<_1e16025cb_ParamDecl> _1e25dc95b_Parser::_method_build_self_param(jule::Slice<_1e15a2bb9_Token> _52439_tokens) {
	if (_52439_tokens.len() == 0LL) {
		return jule::new_ref<_1e16025cb_ParamDecl>();
	}
	jule::Ref<_1e16025cb_ParamDecl> _52917_param = jule::new_struct<_1e16025cb_ParamDecl>(new( std::nothrow ) _1e16025cb_ParamDecl());
	jule::Int _53217_i = 0LL;
	if (_52439_tokens[_53217_i]._field_id == 36LLU) {
		_52917_param->_field_mutable=true;
		(_53217_i)++;
		if (_53217_i >= _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[_53217_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1e16025cb_ParamDecl>();
		}
	}
	if (_52439_tokens[_53217_i]._field_kind == jule::Str("&", 1)) {
		_52917_param->_field_ident=jule::Str("&", 1);
		(_53217_i)++;
		if (_53217_i >= _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[_53217_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1e16025cb_ParamDecl>();
		}
	}
	if (_52439_tokens[_53217_i]._field_id == 28LLU) {
		_52917_param->_field_ident+=jule::Str("self", 4);
		_52917_param->_field_token=_52439_tokens[_53217_i];
		(_53217_i)++;
		if (_53217_i < _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[_53217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	}
	return _52917_param;
}



void _1e25dc95b_Parser::_method_param_type_begin(jule::Ref<_1e16025cb_ParamDecl>& _56340_param,jule::Int& _56364_i,jule::Slice<_1e15a2bb9_Token>& _56373_tokens) {
	for (; _56364_i < _56373_tokens.len(); (_56364_i)++) {
		{
			_1e15a2bb9_Token _56517_token = _56373_tokens[_56364_i];
			if (_56517_token._field_id != 7LLU) {
				return;
			} else if (_56517_token._field_kind != jule::Str("...", 3)) {
				return;
			}
			if (_56340_param->_field_variadic) {
				(*this)._method_push_err(_56517_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>({}));
				goto _iter_next_4335882192;
			}
			_56340_param->_field_variadic=true;
		}
	_iter_next_4335882192:;
	}
	_iter_end_4335882192:;
}



void _1e25dc95b_Parser::_method_build_param_type(jule::Ref<_1e16025cb_ParamDecl>& _58041_param,jule::Slice<_1e15a2bb9_Token>& _58065_tokens) {
	jule::Int _58117_i = 0LL;
	this->self->_method_param_type_begin(_58041_param,_58117_i,_58065_tokens);
	if (_58117_i >= _58065_tokens.len()) {
		return;
	}
	std::tie(_58041_param->_field_kind,std::ignore) = this->self->_method_build_type(_58065_tokens,(&(_58117_i)),true);
	if (_58117_i < _58065_tokens.len()) {
		this->self->_method_push_err(_58065_tokens[_58117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



void _1e25dc95b_Parser::_method_param_body_id(jule::Ref<_1e16025cb_ParamDecl> _59332_param,_1e15a2bb9_Token _59351_token) {
	if (_1e15a2bb9_is_ignore_ident(_59351_token._field_kind)) {
		_59332_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_59332_param->_field_ident=_59351_token._field_kind;
}



void _1e25dc95b_Parser::_method_build_param_body(jule::Ref<_1e16025cb_ParamDecl>& _60141_param,jule::Ref<jule::Int> _60164_i,jule::Slice<_1e15a2bb9_Token> _60177_tokens) {
	this->self->_method_param_body_id(_60141_param,_60177_tokens[static_cast<jule::Int>(_60164_i)]);
	_1e15a2bb9_Token _60317_tok = _60177_tokens[static_cast<jule::Int>(_60164_i)];
	if ((_60164_i + 1LL) >= _60177_tokens.len()) {
		return;
	} else if (((_60177_tokens.len() - _60164_i) - 1LL) < 2LL) {
		this->self->_method_push_err(_60317_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return;
	}
	_60317_tok=_60177_tokens[_60164_i + 1LL];
	if (_60317_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_60141_param,_60177_tokens);
		return;
	}
	_60177_tokens=_60177_tokens.slice(_60164_i + 2LL);
	this->self->_method_build_param_type(_60141_param,_60177_tokens);
}



jule::Ref<_1e16025cb_ParamDecl> _1e25dc95b_Parser::_method_build_param(jule::Slice<_1e15a2bb9_Token> _62235_tokens) {
	jule::Ref<_1e16025cb_ParamDecl> _62317_param = jule::new_struct<_1e16025cb_ParamDecl>(new( std::nothrow ) _1e16025cb_ParamDecl(_62235_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1e16025cb_TypeDecl>(),jule::Str()));
	if (_62317_param->_field_token._field_id == 36LLU) {
		_62317_param->_field_mutable=true;
		if (_62235_tokens.len() == 1LL) {
			this->self->_method_push_err(_62235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1e16025cb_ParamDecl>();
		}
		_62235_tokens=_62235_tokens.slice(1LL);
		_62317_param->_field_token=_62235_tokens[0LL];
	}
	if (_62235_tokens.len() >= 3LL) {
		if ((_62317_param->_field_token._field_id == 7LLU) && (_62317_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_62235_tokens.len() == 1LL) {
				this->self->_method_push_err(_62235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1e16025cb_ParamDecl>();
			}
			if ((_62235_tokens[1LL]._field_id == 2LLU) && (_62235_tokens[2LL]._field_id == 11LLU)) {
				_62317_param->_field_reference=true;
				_62235_tokens=_62235_tokens.slice(1LL);
				_62317_param->_field_token=_62235_tokens[0LL];
			}
		}
	}
	if (_62317_param->_field_token._field_id != 2LLU) {
		_62317_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_62317_param,_62235_tokens);
	} else {
		jule::Ref<jule::Int> _65921_i = jule::new_ref<jule::Int>(0LL);
		this->self->_method_build_param_body(_62317_param,_65921_i,_62235_tokens);
	}
	return _62317_param;
}



void _1e25dc95b_Parser::_method_check_params(jule::Slice<jule::Ref<_1e16025cb_ParamDecl>>& _66636_params) {
	{
		auto expr = _66636_params;
		auto it = expr.begin();
		_iter_begin_4335939552:;
		if (it != expr.end()) {
			jule::Ref<_1e16025cb_ParamDecl> _1e25dc95b_param = *it;
			{
				if (_1e25dc95b_param->_method_is_self() || jule::real(_1e25dc95b_param->_field_kind)) {
					goto _iter_next_4335939552;
				}
				if (_1e25dc95b_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_1e25dc95b_param->_field_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				} else {
					_1e25dc95b_param->_field_kind=jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_1e25dc95b_param->_field_token,jule::Any(jule::new_struct<_1e16025cb_IdentTypeDecl>(new( std::nothrow ) _1e16025cb_IdentTypeDecl(_1e25dc95b_param->_field_token,_1e25dc95b_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>())))));
					_1e25dc95b_param->_field_ident=jule::Str("<anonymous>", 11);
					_1e25dc95b_param->_field_token=_1e15a2bb9_Token();
				}
			}
			_iter_next_4335939552:;
			++it;
			goto _iter_begin_4335939552;
		}
		_iter_end_4335939552:;
	}
}



jule::Slice<jule::Ref<_1e16025cb_ParamDecl>> _1e25dc95b_Parser::_method_build_params(jule::Slice<_1e15a2bb9_Token>& _68737_tokens,jule::Bool _68754_method) {
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _68818_parts;
	jule::Slice<_1ec8e8025_Log> _68825_errs;
	std::tie(_68818_parts,_68825_errs) = _1e25dc95b_parts(_68737_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_68825_errs);
	if (_68818_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1e16025cb_ParamDecl>> _69417_params = nullptr;
	if (_68754_method && (_68818_parts.len() > 0LL)) {
		jule::Ref<_1e16025cb_ParamDecl> _69621_param = this->self->_method_build_self_param(_68818_parts[0LL]);
		if (jule::real(_69621_param) && _69621_param->_method_is_self()) {
			_69417_params=jule::append(_69417_params,jule::Slice<jule::Ref<_1e16025cb_ParamDecl>>({_69621_param}));
			_68818_parts=_68818_parts.slice(1LL);
		}
	}
	{
		auto expr = _68818_parts;
		auto it = expr.begin();
		_iter_begin_4335959344:;
		if (it != expr.end()) {
			jule::Slice<_1e15a2bb9_Token> _1e25dc95b_part = *it;
			{
				jule::Ref<_1e16025cb_ParamDecl> _70421_param = this->self->_method_build_param(_1e25dc95b_part);
				if (jule::real(_70421_param)) {
					_69417_params=jule::append(_69417_params,jule::Slice<jule::Ref<_1e16025cb_ParamDecl>>({_70421_param}));
				}
			}
			_iter_next_4335959344:;
			++it;
			goto _iter_begin_4335959344;
		}
		_iter_end_4335959344:;
	}
	this->self->_method_check_params(_69417_params);
	return _69417_params;
}



std::tuple<jule::Ref<_1e16025cb_RetTypeDecl>,jule::Bool> _1e25dc95b_Parser::_method_build_multi_ret_type(jule::Slice<_1e15a2bb9_Token>& _71445_tokens,jule::Int& _71467_i) {
	jule::Ref<_1e16025cb_RetTypeDecl> _71477_t = jule::Ref<_1e16025cb_RetTypeDecl>();
	jule::Bool _71494_ok = jule::Bool();
	_71477_t=jule::new_struct<_1e16025cb_RetTypeDecl>(new( std::nothrow ) _1e16025cb_RetTypeDecl());
	(_71467_i)++;
	if (_71467_i >= _71445_tokens.len()) {
		(_71467_i)--;
		std::tie(_71477_t->_field_kind,_71494_ok) = this->self->_method_build_type(_71445_tokens,(&(_71467_i)),false);
		return std::make_tuple(_71477_t,_71494_ok);
	}
	(_71467_i)--;
	jule::Slice<_1e15a2bb9_Token> _72417_range_tokens = _1e25dc95b_range(_71467_i,jule::Str("(", 1),jule::Str(")", 1),_71445_tokens);
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _72618_parts;
	jule::Slice<_1ec8e8025_Log> _72625_errs;
	std::tie(_72618_parts,_72625_errs) = _1e25dc95b_parts(_72417_range_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_72625_errs);
	if (_72618_parts.len() == 0LL) {
		return std::make_tuple(_71477_t,_71494_ok);
	}
	jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> _73217_types = jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_72618_parts.len()));
	_71477_t->_field_idents=jule::Slice<_1e15a2bb9_Token>::alloc(0LL,static_cast<jule::I64>(_72618_parts.len()));
	{
		auto expr = _72618_parts;
		auto it = expr.begin();
		_iter_begin_4335978912:;
		if (it != expr.end()) {
			jule::Slice<_1e15a2bb9_Token> _1e25dc95b_part = *it;
			{
				_1e15a2bb9_Token _73521_token = _1e25dc95b_part[0LL];
				jule::Int _73621_offset = 0LL;
				if (_1e25dc95b_part.len() > 1LL) {
					_73521_token=_1e25dc95b_part[1LL];
					if (_73521_token._field_id == 11LLU) {
						_73621_offset=2LL;
						if (_1e25dc95b_part.len() < 3LL) {
							this->self->_method_push_err(_73521_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4335978912;
						}
					}
				}
				_73521_token=_1e25dc95b_part[0LL];
				if (_73621_offset == 2LL) {
					if (_73521_token._field_id != 2LLU) {
					}
					_71477_t->_field_idents=jule::append(_71477_t->_field_idents,jule::Slice<_1e15a2bb9_Token>({_73521_token}));
				} else {
					_73521_token._field_kind=jule::Str("_", 1);
					_71477_t->_field_idents=jule::append(_71477_t->_field_idents,jule::Slice<_1e15a2bb9_Token>({_73521_token}));
				}
				jule::Ref<_1e16025cb_TypeDecl> _76122_t;
				std::tie(_76122_t,std::ignore) = this->self->_method_build_type(_1e25dc95b_part,(&(_73621_offset)),true);
				if (_73621_offset < _1e25dc95b_part.len()) {
					this->self->_method_push_err(_1e25dc95b_part[_73621_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_73217_types=jule::append(_73217_types,jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>({_76122_t}));
			}
			_iter_next_4335978912:;
			++it;
			goto _iter_begin_4335978912;
		}
		_iter_end_4335978912:;
	}
	if (_73217_types.len() > 1LL) {
		_71477_t->_field_kind=jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_71445_tokens[0LL],jule::Any(jule::new_struct<_1e16025cb_TupleTypeDecl>(new( std::nothrow ) _1e16025cb_TupleTypeDecl(_73217_types)))));
	} else {
		_71477_t->_field_kind=_73217_types[0LL];
	}
	_71494_ok=true;
	return std::make_tuple(_71477_t,_71494_ok);
}



std::tuple<jule::Ref<_1e16025cb_RetTypeDecl>,jule::Bool> _1e25dc95b_Parser::_method_build_ret_type(jule::Slice<_1e15a2bb9_Token>& _78439_tokens,jule::Int& _78461_i) {
	jule::Ref<_1e16025cb_RetTypeDecl> _78471_t = jule::Ref<_1e16025cb_RetTypeDecl>();
	jule::Bool _78488_ok = jule::Bool();
	_78471_t=jule::new_struct<_1e16025cb_RetTypeDecl>(new( std::nothrow ) _1e16025cb_RetTypeDecl());
	if (_78461_i >= _78439_tokens.len()) {
		return std::make_tuple(_78471_t,_78488_ok);
	}
	_1e15a2bb9_Token _79017_token = _78439_tokens[_78461_i];
	{
		auto _match_expr{ _79017_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4336007376; }
		_case_begin_4336007376:;
		{
			if (_79017_token._field_kind == jule::Str("{", 1)) {
				return std::make_tuple(_78471_t,_78488_ok);
			}
		}
		goto _match_end_4336007264;
		_case_end_4336007376:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4336007472; }
		_case_begin_4336007472:;
		{
			if (_79017_token._field_kind == jule::Str("=", 1)) {
				return std::make_tuple(_78471_t,_78488_ok);
			}
		}
		goto _match_end_4336007264;
		_case_end_4336007472:;
		if (!((11LLU) == _match_expr)) { goto _case_end_4336007568; }
		_case_begin_4336007568:;
		{
			if ((_78461_i + 1LL) >= _78439_tokens.len()) {
				this->self->_method_push_err(_79017_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				return std::make_tuple(_78471_t,_78488_ok);
			}
			(_78461_i)++;
			_79017_token=_78439_tokens[_78461_i];
			if (_79017_token._field_id == 3LLU) {
				{
					auto _match_expr{ _79017_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4336013280; }
					_case_begin_4336013280:;
					{
						jule::Ref<_1e16025cb_RetTypeDecl> _81330_decl;
						jule::Bool _81336_ok;
						std::tie(_81330_decl,_81336_ok) = this->self->_method_build_multi_ret_type(_78439_tokens,_78461_i);
						_78471_t = _81330_decl;
						_78488_ok = _81336_ok;
						return std::make_tuple(_78471_t,_78488_ok);
					}
					goto _match_end_4336014848;
					_case_end_4336013280:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4336015040; }
					_case_begin_4336015040:;
					{
						this->self->_method_push_err(_79017_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
						return std::make_tuple(_78471_t,_78488_ok);
					}
					goto _match_end_4336014848;
					_case_end_4336015040:;
					_match_end_4336014848:;
				}
			}
			std::tie(_78471_t->_field_kind,_78488_ok) = this->self->_method_build_type(_78439_tokens,(&(_78461_i)),true);
			return std::make_tuple(_78471_t,_78488_ok);
		}
		goto _match_end_4336007264;
		_case_end_4336007568:;
		_match_end_4336007264:;
	}
	(_78461_i)++;
	this->self->_method_push_err(_79017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return std::make_tuple(_78471_t,_78488_ok);
}



jule::Ref<_1e16025cb_FnDecl> _1e25dc95b_Parser::_method_build_fn_prototype(jule::Slice<_1e15a2bb9_Token>& _83243_tokens,jule::Int& _83265_i,jule::Bool _83273_method) {
	jule::Ref<_1e16025cb_FnDecl> _83317_f = jule::new_struct<_1e16025cb_FnDecl>(new( std::nothrow ) _1e16025cb_FnDecl(_83243_tokens[_83265_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1e16025cb_Directive>>(),jule::Ref<_1e16025cb_CommentGroup>(),jule::Ref<_1e16025cb_ScopeTree>(),jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>(),jule::Ref<_1e16025cb_RetTypeDecl>(),jule::Slice<jule::Ref<_1e16025cb_ParamDecl>>()));
	if (_83317_f->_field_token._field_id == 38LLU) {
		_83317_f->_field_statically=true;
		(_83265_i)++;
		if (_83265_i >= _83243_tokens.len()) {
			this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1e16025cb_FnDecl>();
		}
		_83317_f->_field_token=_83243_tokens[_83265_i];
	}
	if (_83317_f->_field_token._field_id == 35LLU) {
		_83317_f->_field_unsafety=true;
		(_83265_i)++;
		if (_83265_i >= _83243_tokens.len()) {
			this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1e16025cb_FnDecl>();
		}
		_83317_f->_field_token=_83243_tokens[_83265_i];
	}
	(_83265_i)++;
	if (_83265_i >= _83243_tokens.len()) {
		this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_FnDecl>();
	}
	_1e15a2bb9_Token _86613_tok = _83243_tokens[_83265_i];
	if (_86613_tok._field_id == 2LLU) {
		(_83265_i)++;
		if (_83265_i >= _83243_tokens.len()) {
			this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1e16025cb_FnDecl>();
		}
		_83317_f->_field_ident=_86613_tok._field_kind;
	} else {
		_83317_f->_field_ident=jule::Str("<anonymous>", 11);
	}
	_1e15a2bb9_Token _87813_error_token = _83243_tokens[_83265_i];
	jule::Slice<_1e15a2bb9_Token> _87917_generics_tokens = _1e25dc95b_range(_83265_i,jule::Str("[", 1),jule::Str("]", 1),_83243_tokens);
	if (_87917_generics_tokens != nullptr) {
		_83317_f->_field_generics=this->self->_method_build_generics(_87917_generics_tokens,_87813_error_token);
	}
	if (_83243_tokens[_83265_i]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_83243_tokens[_83265_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_FnDecl>();
	}
	jule::Slice<_1e15a2bb9_Token> _88917_params_toks = _1e25dc95b_range(_83265_i,jule::Str("(", 1),jule::Str(")", 1),_83243_tokens);
	if (_88917_params_toks.len() > 0LL) {
		_83317_f->_field_params=this->self->_method_build_params(_88917_params_toks,_83273_method);
	}
	std::tie(_83317_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_83243_tokens,_83265_i);
	return _83317_f;
}



jule::Ref<_1e16025cb_FnDecl> _1e25dc95b_Parser::_method_build_fn(jule::Slice<_1e15a2bb9_Token>& _90033_tokens,jule::Bool _90050_method,jule::Bool _90064_prototype) {
	jule::Int _90117_i = 0LL;
	jule::Ref<_1e16025cb_FnDecl> _90217_f = this->self->_method_build_fn_prototype(_90033_tokens,_90117_i,_90050_method);
	if (_90064_prototype) {
		if (_90117_i < _90033_tokens.len()) {
			this->self->_method_push_err(_90033_tokens[_90117_i + 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		return _90217_f;
	} else if ((!(jule::real(_90217_f)))) {
		return _90217_f;
	}
	if (_90117_i >= _90033_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_90217_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_FnDecl>();
	}
	jule::Slice<_1e15a2bb9_Token> _91817_block_tokens = _1e25dc95b_range(_90117_i,jule::Str("{", 1),jule::Str("}", 1),_90033_tokens);
	if (_91817_block_tokens != nullptr) {
		_90217_f->_field_scope=this->self->_method_build_scope(_91817_block_tokens);
		_90217_f->_field_scope->_field_unsafety=_90217_f->_field_unsafety;
		if (_90117_i < _90033_tokens.len()) {
			this->self->_method_push_err(_90033_tokens[_90117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_90217_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_FnDecl>();
	}
	return _90217_f;
}



jule::Slice<_1e15a2bb9_Token> _1e25dc95b_Parser::_method_get_use_decl_selectors(jule::Slice<_1e15a2bb9_Token> _93445_tokens) {
	jule::Int _93517_i = 0LL;
	_93445_tokens=_1e25dc95b_range(_93517_i,jule::Str("{", 1),jule::Str("}", 1),_93445_tokens);
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _93718_parts;
	jule::Slice<_1ec8e8025_Log> _93725_errs;
	std::tie(_93718_parts,_93725_errs) = _1e25dc95b_parts(_93445_tokens,8LLU,true);
	if (_93725_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_93725_errs);
		return nullptr;
	}
	jule::Slice<_1e15a2bb9_Token> _94317_selectors = jule::Slice<_1e15a2bb9_Token>::alloc(static_cast<jule::I64>(_93718_parts.len()));
	{
		auto expr = _93718_parts;
		auto it = expr.begin();
		_iter_begin_4336078064:;
		if (it != expr.end()) {
			jule::Int _1e25dc95b_j = it - expr.begin();
			jule::Slice<_1e15a2bb9_Token> _1e25dc95b_part = *it;
			{
				if (_1e25dc95b_part.len() > 1LL) {
					(*this)._method_push_err(_1e25dc95b_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_1e15a2bb9_Token _94821_tok = _1e25dc95b_part[0LL];
				if ((_94821_tok._field_id != 2LLU) && (_94821_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_94821_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					goto _iter_next_4336078064;
				}
				_94317_selectors[_1e25dc95b_j]=_94821_tok;
			}
			_iter_next_4336078064:;
			++it;
			_1e25dc95b_j++;
			goto _iter_begin_4336078064;
		}
		_iter_end_4336078064:;
	}
	return _94317_selectors;
}



void _1e25dc95b_Parser::_method_build_cpp_use_decl(jule::Ref<_1e16025cb_UseDecl>& _95942_decl,jule::Slice<_1e15a2bb9_Token>& _95959_tokens) {
	if (_95959_tokens.len() > 1LL) {
		(*this)._method_push_err(_95959_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_1e15a2bb9_Token _96313_token = _95959_tokens[0LL];
	if ((_96313_token._field_id != 6LLU) || ((_96313_token._field_kind[0LL] != '`') && (_96313_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_96313_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return;
	}
	_95942_decl->_field_cpp_linked=true;
	_95942_decl->_field_link_path=_96313_token._field_kind.slice(1LL,_96313_token._field_kind.len() - 1LL);
	if ((!(_1ec8e3273_is_std_header_path(_95942_decl->_field_link_path)))) {
		_95942_decl->_field_link_path=_1ec9a2585_join(jule::Slice<jule::Str>({_96313_token._field_file->_method_dir(),_95942_decl->_field_link_path}));
	}
}



void _1e25dc95b_Parser::_method_build_std_use_decl(jule::Ref<_1e16025cb_UseDecl>& _97542_decl,jule::Slice<_1e15a2bb9_Token> _97562_tokens) {
	_97542_decl->_field_std=true;
	_1e15a2bb9_Token _97817_token = _97562_tokens[0LL];
	if (_97562_tokens.len() < 3LL) {
		(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_97562_tokens=_97562_tokens.slice(2LL);
	_97817_token=_97562_tokens[_97562_tokens.len() - 1LL];
	{
		auto _match_expr{ _97817_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4336115296; }
		_case_begin_4336115296:;
		{
			(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4336115216;
		_case_end_4336115296:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4336115472; }
		_case_begin_4336115472:;
		{
			if (_97817_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_1e15a2bb9_Token> _99621_selectors = nullptr;
			std::tie(_97562_tokens,_99621_selectors) = _1e25dc95b_range_last(_97562_tokens);
			_97542_decl->_field_selected=(*this)._method_get_use_decl_selectors(_99621_selectors);
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97817_token=_97562_tokens[_97562_tokens.len() - 1LL];
			if (_97817_token._field_id != 23LLU) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97562_tokens=_97562_tokens.slice(0LL,_97562_tokens.len() - 1LL);
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4336115216;
		_case_end_4336115472:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4336115568; }
		_case_begin_4336115568:;
		{
			if (_97817_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97562_tokens=_97562_tokens.slice(0LL,_97562_tokens.len() - 1LL);
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97817_token=_97562_tokens[_97562_tokens.len() - 1LL];
			if (_97817_token._field_id != 23LLU) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97562_tokens=_97562_tokens.slice(0LL,_97562_tokens.len() - 1LL);
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97542_decl->_field_full=true;
		}
		goto _match_end_4336115216;
		_case_end_4336115568:;
		_match_end_4336115216:;
	}
	_97542_decl->_field_link_path=jule::Str("std::", 5) + _1e25dc95b_tokstoa(_97562_tokens);
}



void _1e25dc95b_Parser::_method_build_ident_use_decl(jule::Ref<_1e16025cb_UseDecl>& _103944_decl,jule::Slice<_1e15a2bb9_Token> _103964_tokens) {
	_103944_decl->_field_std=false;
	_1e15a2bb9_Token _104217_token = _103964_tokens[_103964_tokens.len() - 1LL];
	{
		auto _match_expr{ _104217_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4336144544; }
		_case_begin_4336144544:;
		{
			(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4336144336;
		_case_end_4336144544:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4336144640; }
		_case_begin_4336144640:;
		{
			if (_104217_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_1e15a2bb9_Token> _105421_selectors = nullptr;
			std::tie(_103964_tokens,_105421_selectors) = _1e25dc95b_range_last(_103964_tokens);
			_103944_decl->_field_selected=(*this)._method_get_use_decl_selectors(_105421_selectors);
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104217_token=_103964_tokens[_103964_tokens.len() - 1LL];
			if (_104217_token._field_id != 23LLU) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103964_tokens=_103964_tokens.slice(0LL,_103964_tokens.len() - 1LL);
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4336144336;
		_case_end_4336144640:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4336144736; }
		_case_begin_4336144736:;
		{
			if (_104217_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103964_tokens=_103964_tokens.slice(0LL,_103964_tokens.len() - 1LL);
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104217_token=_103964_tokens[_103964_tokens.len() - 1LL];
			if (_104217_token._field_id != 23LLU) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103964_tokens=_103964_tokens.slice(0LL,_103964_tokens.len() - 1LL);
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103944_decl->_field_full=true;
		}
		goto _match_end_4336144336;
		_case_end_4336144736:;
		_match_end_4336144336:;
	}
	_103944_decl->_field_link_path=_1e25dc95b_tokstoa(_103964_tokens);
}



void _1e25dc95b_Parser::_method_parse_use_decl(jule::Ref<_1e16025cb_UseDecl>& _110438_decl,jule::Slice<_1e15a2bb9_Token> _110458_tokens) {
	if (_110438_decl->_field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_110438_decl,_110458_tokens);
		return;
	}
	_1e15a2bb9_Token _111017_token = _110458_tokens[0LL];
	if (_111017_token._field_id != 2LLU) {
		(*this)._method_push_err(_111017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	if ((_110458_tokens.len() > 2LL) && (_110458_tokens[1LL]._field_id == 12LLU)) {
		_110438_decl->_field_alias=_111017_token._field_kind;
		if (_110458_tokens[2LL]._field_id != 2LLU) {
			(*this)._method_push_err(_111017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			return;
		}
		_110458_tokens=_110458_tokens.slice(2LL);
		_111017_token=_110458_tokens[0LL];
	}
	
	{
		if (!((_111017_token._field_kind == jule::Str("std", 3)))) { goto _case_end_4336184528; }
		_case_begin_4336184528:;
		{
			(*this)._method_build_std_use_decl(_110438_decl,_110458_tokens);
		}
		goto _match_end_4336183632;
		_case_end_4336184528:;
		_case_begin_4336183744:;
		{
			(*this)._method_build_ident_use_decl(_110438_decl,_110458_tokens);
		}
		goto _match_end_4336183632;
		_case_end_4336183744:;
		_match_end_4336183632:;
	}
}



jule::Ref<_1e16025cb_UseDecl> _1e25dc95b_Parser::_method_build_use_decl(jule::Slice<_1e15a2bb9_Token> _113937_tokens,jule::Bool _113954_cpp_linked) {
	jule::Ref<_1e16025cb_UseDecl> _114017_decl = jule::new_struct<_1e16025cb_UseDecl>(new( std::nothrow ) _1e16025cb_UseDecl(_113937_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_1e15a2bb9_Token>(),_113954_cpp_linked,jule::Bool()));
	if (_113937_tokens.len() < 2LL) {
		(*this)._method_push_err(_114017_decl->_field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_UseDecl>();
	}
	_113937_tokens=_113937_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_114017_decl,_113937_tokens);
	return _114017_decl;
}



jule::Ref<_1e16025cb_Expr> _1e25dc95b_Parser::_method_build_enum_item_expr(jule::Ref<jule::Int> _115344_i,jule::Slice<_1e15a2bb9_Token>& _115358_tokens) {
	jule::Int _115417_brace_n = 0LL;
	jule::Int _115513_expr_start = _115344_i;
	for (; _115344_i < _115358_tokens.len(); (_115344_i)++) {
		{
			_1e15a2bb9_Token _115717_t = _115358_tokens[static_cast<jule::Int>(_115344_i)];
			if (_115717_t._field_id == 3LLU) {
				{
					auto _match_expr{ _115717_t._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4336205024; }
					_case_begin_4336205024:;
					{
						(_115417_brace_n)++;
						goto _iter_next_4336199664;
					}
					goto _match_end_4336203664;
					_case_end_4336205024:;
					_case_begin_4336202976:;
					{
						(_115417_brace_n)--;
					}
					goto _match_end_4336203664;
					_case_end_4336202976:;
					_match_end_4336203664:;
				}
			}
			if (_115417_brace_n > 0LL) {
				goto _iter_next_4336199664;
			}
			if ((_115717_t._field_id == 8LLU) || ((_115344_i + 1LL) >= _115358_tokens.len())) {
				jule::Slice<_1e15a2bb9_Token> _117625_expr_tokens = nullptr;
				if (_115717_t._field_id == 8LLU) {
					_117625_expr_tokens=_115358_tokens.slice(_115513_expr_start,static_cast<jule::Int>(_115344_i));
				} else {
					_117625_expr_tokens=_115358_tokens.slice(_115513_expr_start);
				}
				return this->self->_method_build_expr(_117625_expr_tokens);
			}
		}
	_iter_next_4336199664:;
	}
	_iter_end_4336199664:;
	return jule::new_ref<_1e16025cb_Expr>();
}



jule::Slice<jule::Ref<_1e16025cb_EnumItemDecl>> _1e25dc95b_Parser::_method_build_enum_items(jule::Slice<_1e15a2bb9_Token>& _118841_tokens) {
	jule::Slice<jule::Ref<_1e16025cb_EnumItemDecl>> _118917_items = jule::Slice<jule::Ref<_1e16025cb_EnumItemDecl>>::alloc(0LL);
	jule::Ref<jule::Int> _119017_i = jule::new_ref<jule::Int>(0LL);
	for (; _119017_i < _118841_tokens.len(); (_119017_i)++) {
		{
			_1e15a2bb9_Token _119221_t = _118841_tokens[static_cast<jule::Int>(_119017_i)];
			if (_119221_t._field_id == 18LLU) {
				goto _iter_next_4336216080;
			}
			jule::Ref<_1e16025cb_EnumItemDecl> _119721_item = jule::new_struct<_1e16025cb_EnumItemDecl>(new( std::nothrow ) _1e16025cb_EnumItemDecl());
			_119721_item->_field_token=_119221_t;
			if (_119721_item->_field_token._field_id != 2LLU) {
				this->self->_method_push_err(_119721_item->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			}
			_119721_item->_field_ident=_119721_item->_field_token._field_kind;
			if (((_119017_i + 1LL) >= _118841_tokens.len()) || (_118841_tokens[_119017_i + 1LL]._field_id == 8LLU)) {
				if ((_119017_i + 1LL) < _118841_tokens.len()) {
					(_119017_i)++;
				}
				_118917_items=jule::append(_118917_items,jule::Slice<jule::Ref<_1e16025cb_EnumItemDecl>>({_119721_item}));
				goto _iter_next_4336216080;
			}
			(_119017_i)++;
			_119221_t=_118841_tokens[static_cast<jule::Int>(_119017_i)];
			(_119017_i)++;
			if ((_119221_t._field_id != 7LLU) || (_119221_t._field_kind != jule::Str("=", 1))) {
				this->self->_method_push_err(_119221_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				this->self->_method_push_suggestion(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>({}));
				goto _iter_next_4336216080;
			}
			if ((_119017_i >= _118841_tokens.len()) || (_118841_tokens[static_cast<jule::Int>(_119017_i)]._field_id == 8LLU)) {
				this->self->_method_push_err(_119221_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
				goto _iter_next_4336216080;
			}
			_119721_item->_field_expr=this->self->_method_build_enum_item_expr(_119017_i,_118841_tokens);
			_118917_items=jule::append(_118917_items,jule::Slice<jule::Ref<_1e16025cb_EnumItemDecl>>({_119721_item}));
		}
	_iter_next_4336216080:;
	}
	_iter_end_4336216080:;
	return _118917_items;
}



jule::Ref<_1e16025cb_EnumDecl> _1e25dc95b_Parser::_method_build_enum_decl(jule::Slice<_1e15a2bb9_Token>& _122940_tokens) {
	if ((_122940_tokens.len() < 2LL) || (_122940_tokens.len() < 3LL)) {
		this->self->_method_push_err(_122940_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_EnumDecl>();
	}
	jule::Ref<_1e16025cb_EnumDecl> _123417_e = jule::new_struct<_1e16025cb_EnumDecl>(new( std::nothrow ) _1e16025cb_EnumDecl(_122940_tokens[1LL],jule::Bool(),jule::Str(),jule::Ref<_1e16025cb_TypeDecl>(),jule::Slice<jule::Ref<_1e16025cb_EnumItemDecl>>(),jule::Ref<_1e16025cb_CommentGroup>()));
	if (_123417_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_123417_e->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_123417_e->_field_ident=_123417_e->_field_token._field_kind;
	jule::Int _124217_i = 2LL;
	if (_122940_tokens[_124217_i]._field_id == 11LLU) {
		(_124217_i)++;
		if (_124217_i >= _122940_tokens.len()) {
			this->self->_method_push_err(_122940_tokens[_124217_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return _123417_e;
		}
		std::tie(_123417_e->_field_kind,std::ignore) = this->self->_method_build_type(_122940_tokens,(&(_124217_i)),true);
		if (_124217_i >= _122940_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_123417_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
			return _123417_e;
		}
	} else {
		jule::drop(_123417_e->_field_kind);
	}
	jule::Slice<_1e15a2bb9_Token> _125917_item_tokens = _1e25dc95b_range(_124217_i,jule::Str("{", 1),jule::Str("}", 1),_122940_tokens);
	if (_125917_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_123417_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _123417_e;
	} else if (_124217_i < _122940_tokens.len()) {
		this->self->_method_push_err(_122940_tokens[_124217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_123417_e->_field_items=this->self->_method_build_enum_items(_125917_item_tokens);
	return _123417_e;
}



jule::Ref<_1e16025cb_FieldDecl> _1e25dc95b_Parser::_method_build_field(jule::Slice<_1e15a2bb9_Token> _127235_tokens) {
	jule::Ref<_1e16025cb_FieldDecl> _127317_f = jule::new_struct<_1e16025cb_FieldDecl>(new( std::nothrow ) _1e16025cb_FieldDecl());
	_127317_f->_field_public=_127235_tokens[0LL]._field_id == 21LLU;
	if (_127317_f->_field_public) {
		if (_127235_tokens.len() == 1LL) {
			this->self->_method_push_err(_127235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1e16025cb_FieldDecl>();
		}
		_127235_tokens=_127235_tokens.slice(1LL);
	}
	_127317_f->_field_mutable=_127235_tokens[0LL]._field_id == 36LLU;
	if (_127317_f->_field_mutable) {
		if (_127235_tokens.len() == 1LL) {
			this->self->_method_push_err(_127235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1e16025cb_FieldDecl>();
		}
		_127235_tokens=_127235_tokens.slice(1LL);
	}
	_127317_f->_field_token=_127235_tokens[0LL];
	if (_127317_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_127317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_FieldDecl>();
	}
	_127317_f->_field_ident=_127317_f->_field_token._field_kind;
	if (_127235_tokens.len() == 1LL) {
		this->self->_method_push_err(_127235_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_FieldDecl>();
	} else if (_127235_tokens[1LL]._field_id != 11LLU) {
		this->self->_method_push_err(_127235_tokens[1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_FieldDecl>();
	}
	_127235_tokens=_127235_tokens.slice(2LL);
	jule::Int _131017_i = 0LL;
	std::tie(_127317_f->_field_kind,std::ignore) = this->self->_method_build_type(_127235_tokens,(&(_131017_i)),true);
	if (_131017_i < _127235_tokens.len()) {
		this->self->_method_push_err(_127235_tokens[_131017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_FieldDecl>();
	}
	return _127317_f;
}



jule::Slice<jule::Ref<_1e16025cb_FieldDecl>> _1e25dc95b_Parser::_method_build_struct_decl_fields(jule::Slice<_1e15a2bb9_Token> _132048_tokens) {
	jule::Slice<jule::Ref<_1e16025cb_FieldDecl>> _132117_fields = nullptr;
	jule::Slice<jule::Ref<_1e184a280_Stmt>> _132217_stms = _1e184a280_split_stms(_132048_tokens);
	{
		auto expr = _132217_stms;
		auto it = expr.begin();
		_iter_begin_4336297584:;
		if (it != expr.end()) {
			jule::Ref<_1e184a280_Stmt> _1e25dc95b_st = *it;
			{
				_132048_tokens=_1e25dc95b_st->_field_tokens;
				if (_132048_tokens[0LL]._field_id == 18LLU) {
					goto _iter_next_4336297584;
				}
				jule::Ref<_1e16025cb_FieldDecl> _132821_f = this->self->_method_build_field(_132048_tokens);
				_132117_fields=jule::append(_132117_fields,jule::Slice<jule::Ref<_1e16025cb_FieldDecl>>({_132821_f}));
			}
			_iter_next_4336297584:;
			++it;
			goto _iter_begin_4336297584;
		}
		_iter_end_4336297584:;
	}
	return _132117_fields;
}



jule::Ref<_1e16025cb_StructDecl> _1e25dc95b_Parser::_method_build_struct_decl(jule::Slice<_1e15a2bb9_Token>& _133442_tokens) {
	if (_133442_tokens.len() < 3LL) {
		this->self->_method_push_err(_133442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_StructDecl>();
	}
	jule::Int _134017_i = 1LL;
	jule::Ref<_1e16025cb_StructDecl> _134117_s = jule::new_struct<_1e16025cb_StructDecl>(new( std::nothrow ) _1e16025cb_StructDecl(_133442_tokens[_134017_i],jule::Str(),jule::Slice<jule::Ref<_1e16025cb_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1e16025cb_Directive>>(),jule::Ref<_1e16025cb_CommentGroup>(),jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>()));
	if (_134117_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_134117_s->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_134017_i)++;
	if (_134017_i >= _133442_tokens.len()) {
		this->self->_method_push_err(_133442_tokens[_134017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _134117_s;
	}
	_134117_s->_field_ident=_134117_s->_field_token._field_kind;
	_1e15a2bb9_Token _135513_error_token = _133442_tokens[_134017_i];
	jule::Slice<_1e15a2bb9_Token> _135617_generics_tokens = _1e25dc95b_range(_134017_i,jule::Str("[", 1),jule::Str("]", 1),_133442_tokens);
	if (_135617_generics_tokens != nullptr) {
		_134117_s->_field_generics=this->self->_method_build_generics(_135617_generics_tokens,_135513_error_token);
	}
	if (_134017_i >= _133442_tokens.len()) {
		this->self->_method_push_err(_133442_tokens[_134017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _134117_s;
	}
	jule::Slice<_1e15a2bb9_Token> _136517_body_tokens = _1e25dc95b_range(_134017_i,jule::Str("{", 1),jule::Str("}", 1),_133442_tokens);
	if (_136517_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_134117_s->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _134117_s;
	}
	if (_134017_i < _133442_tokens.len()) {
		this->self->_method_push_err(_133442_tokens[_134017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_134117_s->_field_fields=this->self->_method_build_struct_decl_fields(_136517_body_tokens);
	return _134117_s;
}



void _1e25dc95b_Parser::_method_check_method_receiver(jule::Ref<_1e16025cb_FnDecl>& _137941_f) {
	if (_137941_f->_field_statically) {
		if ((_137941_f->_field_params.len() > 0LL) && _137941_f->_field_params[0LL]->_method_is_self()) {
			(*this)._method_push_err(_137941_f->_field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>({}));
		}
		return;
	}
	if (_137941_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_137941_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1e16025cb_ParamDecl> _139213_param = _137941_f->_field_params[0LL];
	if ((!(_139213_param->_method_is_self()))) {
		(*this)._method_push_err(_137941_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
}



jule::Slice<jule::Ref<_1e16025cb_FnDecl>> _1e25dc95b_Parser::_method_build_trait_methods(jule::Slice<_1e15a2bb9_Token> _139943_tokens) {
	jule::Slice<jule::Ref<_1e16025cb_FnDecl>> _140017_methods = nullptr;
	jule::Slice<jule::Ref<_1e184a280_Stmt>> _140117_stms = _1e184a280_split_stms(_139943_tokens);
	{
		auto expr = _140117_stms;
		auto it = expr.begin();
		_iter_begin_4336346864:;
		if (it != expr.end()) {
			jule::Ref<_1e184a280_Stmt> _1e25dc95b_st = *it;
			{
				_139943_tokens=_1e1776d27_eliminate_comments(_1e25dc95b_st->_field_tokens);
				if (_139943_tokens.len() == 0LL) {
					goto _iter_next_4336346864;
				}
				jule::Bool _140821_is_pub = false;
				if (_139943_tokens[0LL]._field_id == 21LLU) {
					_140821_is_pub=true;
					if (_139943_tokens.len() == 1LL) {
						this->self->_method_push_err(_139943_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4336346864;
					}
					_139943_tokens=_139943_tokens.slice(1LL);
				}
				jule::Ref<_1e16025cb_FnDecl> _141821_f = this->self->_method_build_fn(_139943_tokens,true,true);
				if (jule::real(_141821_f)) {
					if (_141821_f->_method_is_anon()) {
						this->self->_method_push_err(_141821_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_method_receiver(_141821_f);
					if (_141821_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_141821_f->_field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>({}));
					}
					_141821_f->_field_public=_140821_is_pub;
					_140017_methods=jule::append(_140017_methods,jule::Slice<jule::Ref<_1e16025cb_FnDecl>>({_141821_f}));
				}
			}
			_iter_next_4336346864:;
			++it;
			goto _iter_begin_4336346864;
		}
		_iter_end_4336346864:;
	}
	return _140017_methods;
}



jule::Ref<_1e16025cb_TraitDecl> _1e25dc95b_Parser::_method_build_trait_decl(jule::Slice<_1e15a2bb9_Token>& _143441_tokens) {
	if (_143441_tokens.len() < 3LL) {
		this->self->_method_push_err(_143441_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_TraitDecl>();
	}
	jule::Ref<_1e16025cb_TraitDecl> _143917_t = jule::new_struct<_1e16025cb_TraitDecl>(new( std::nothrow ) _1e16025cb_TraitDecl(_143441_tokens[1LL],jule::Str(),jule::Bool(),jule::Ref<_1e16025cb_CommentGroup>(),jule::Slice<jule::Ref<_1e16025cb_FnDecl>>()));
	if (_143917_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_143917_t->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_143917_t->_field_ident=_143917_t->_field_token._field_kind;
	jule::Int _144717_i = 2LL;
	jule::Slice<_1e15a2bb9_Token> _144817_body_tokens = _1e25dc95b_range(_144717_i,jule::Str("{", 1),jule::Str("}", 1),_143441_tokens);
	if (_144817_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_143917_t->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_TraitDecl>();
	}
	if (_144717_i < _143441_tokens.len()) {
		this->self->_method_push_err(_143441_tokens[_144717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_143917_t->_field_methods=this->self->_method_build_trait_methods(_144817_body_tokens);
	return _143917_t;
}



jule::Ref<_1e16025cb_FnDecl> _1e25dc95b_Parser::_method_build_cpp_link_fn(jule::Slice<_1e15a2bb9_Token> _146241_tokens) {
	_146241_tokens=_146241_tokens.slice(1LL);
	jule::Ref<_1e16025cb_FnDecl> _146417_f = this->self->_method_build_fn(_146241_tokens,false,true);
	if (jule::real(_146417_f)) {
		if (_146417_f->_method_is_anon()) {
			this->self->_method_push_err(_146417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		_146417_f->_field_cpp_linked=true;
	}
	return _146417_f;
}



jule::Ref<_1e16025cb_VarDecl> _1e25dc95b_Parser::_method_build_cpp_link_var(jule::Slice<_1e15a2bb9_Token> _147442_tokens) {
	_147442_tokens=_147442_tokens.slice(1LL);
	jule::Ref<_1e16025cb_VarDecl> _147617_v = this->self->_method_build_var(_147442_tokens);
	if (jule::real(_147617_v)) {
		_147617_v->_field_cpp_linked=true;
		if (jule::real(_147617_v->_field_expr)) {
			this->self->_method_push_err(_147617_v->_field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>({}));
		}
	}
	return _147617_v;
}



jule::Ref<_1e16025cb_StructDecl> _1e25dc95b_Parser::_method_build_cpp_link_struct(jule::Slice<_1e15a2bb9_Token> _148645_tokens) {
	_148645_tokens=_148645_tokens.slice(1LL);
	jule::Ref<_1e16025cb_StructDecl> _148817_s = this->self->_method_build_struct_decl(_148645_tokens);
	if (jule::real(_148817_s)) {
		_148817_s->_field_cpp_linked=true;
	}
	return _148817_s;
}



jule::Ref<_1e16025cb_TypeAliasDecl> _1e25dc95b_Parser::_method_build_cpp_link_type_alias(jule::Slice<_1e15a2bb9_Token> _149549_tokens) {
	_149549_tokens=_149549_tokens.slice(1LL);
	jule::Ref<_1e16025cb_TypeAliasDecl> _149717_t = this->self->_method_build_type_alias_decl(_149549_tokens);
	if (jule::real(_149717_t)) {
		_149717_t->_field_cpp_linked=true;
	}
	return _149717_t;
}



jule::Ref<_1e16025cb_UseDecl> _1e25dc95b_Parser::_method_build_cpp_link_use(jule::Slice<_1e15a2bb9_Token> _150442_tokens) {
	if (_150442_tokens.len() == 1LL) {
		this->self->_method_push_err(_150442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_UseDecl>();
	}
	_150442_tokens=_150442_tokens.slice(1LL);
	
	return this->self->_method_build_use_decl(_150442_tokens,true);
}



jule::Any _1e25dc95b_Parser::_method_build_cpp_link(jule::Slice<_1e15a2bb9_Token>& _151539_tokens) {
	_1e15a2bb9_Token _151617_token = _151539_tokens[0LL];
	if (_151539_tokens.len() == 1LL) {
		this->self->_method_push_err(_151617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	_151617_token=_151539_tokens[1LL];
	{
		auto _match_expr{ _151617_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4336419168; }
		_case_begin_4336419168:;
		{
			return jule::Any(this->self->_method_build_cpp_link_use(_151539_tokens));
		}
		goto _match_end_4336418720;
		_case_end_4336419168:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4336419264; }
		_case_begin_4336419264:;
		{
			return jule::Any(this->self->_method_build_cpp_link_fn(_151539_tokens));
		}
		goto _match_end_4336418720;
		_case_end_4336419264:;
		if (!((9LLU) == _match_expr || (34LLU) == _match_expr)) { goto _case_end_4336419360; }
		_case_begin_4336419360:;
		{
			return jule::Any(this->self->_method_build_cpp_link_var(_151539_tokens));
		}
		goto _match_end_4336418720;
		_case_end_4336419360:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4336419456; }
		_case_begin_4336419456:;
		{
			return jule::Any(this->self->_method_build_cpp_link_struct(_151539_tokens));
		}
		goto _match_end_4336418720;
		_case_end_4336419456:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4336420768; }
		_case_begin_4336420768:;
		{
			return jule::Any(this->self->_method_build_cpp_link_type_alias(_151539_tokens));
		}
		goto _match_end_4336418720;
		_case_end_4336420768:;
		_case_begin_4336417536:;
		{
			this->self->_method_push_err(_151617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4336418720;
		_case_end_4336417536:;
		_match_end_4336418720:;
	}
	return jule::Any(nullptr);
}



jule::Ref<_1e16025cb_FnDecl> _1e25dc95b_Parser::_method_get_method(jule::Slice<_1e15a2bb9_Token>& _154635_tokens) {
	jule::Int _154717_i = 0LL;
	_1e15a2bb9_Token _154817_token = _154635_tokens[_154717_i];
	if (_154817_token._field_id == 38LLU) {
		if ((_154717_i + 1LL) >= _154635_tokens.len()) {
			this->self->_method_push_err(_154817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1e16025cb_FnDecl>();
		}
		(_154717_i)++;
		_154817_token=_154635_tokens[_154717_i];
	}
	if (_154817_token._field_id == 35LLU) {
		if ((_154717_i + 1LL) >= _154635_tokens.len()) {
			this->self->_method_push_err(_154817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1e16025cb_FnDecl>();
		}
		(_154717_i)++;
		_154817_token=_154635_tokens[_154717_i];
	}
	if (_154817_token._field_id != 33LLU) {
		this->self->_method_push_err(_154817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_FnDecl>();
	}
	jule::Ref<_1e16025cb_FnDecl> _157217_f = this->self->_method_build_fn(_154635_tokens,true,false);
	if (jule::real(_157217_f) && _157217_f->_method_is_anon()) {
		this->self->_method_push_err(_157217_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _157217_f;
}



void _1e25dc95b_Parser::_method_parse_impl_body(jule::Ref<_1e16025cb_Impl>& _157940_ipl,jule::Slice<_1e15a2bb9_Token>& _157957_tokens) {
	jule::Slice<jule::Ref<_1e184a280_Stmt>> _158017_stms = _1e184a280_split_stms(_157957_tokens);
	{
		auto expr = _158017_stms;
		auto it = expr.begin();
		_iter_begin_4336446896:;
		if (it != expr.end()) {
			jule::Ref<_1e184a280_Stmt> _1e25dc95b_st = *it;
			{
				_157957_tokens=_1e25dc95b_st->_field_tokens;
				_1e15a2bb9_Token _158321_token = _157957_tokens[0LL];
				jule::Bool _158421_is_pub = false;
				{
					auto _match_expr{ _158321_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_4336451344; }
					_case_begin_4336451344:;
					{
						goto _iter_next_4336446896;
					}
					goto _match_end_4336451232;
					_case_end_4336451344:;
					if (!((21LLU) == _match_expr)) { goto _case_end_4336451440; }
					_case_begin_4336451440:;
					{
						_158421_is_pub=true;
						if (_157957_tokens.len() == 1LL) {
							this->self->_method_push_err(_157957_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_4336446896;
						}
						_157957_tokens=_157957_tokens.slice(1LL);
						if (_157957_tokens.len() > 0LL) {
							_158321_token=_157957_tokens[0LL];
						}
					}
					goto _match_end_4336451232;
					_case_end_4336451440:;
					_match_end_4336451232:;
				}
				{
					auto _match_expr{ _158321_token._field_id };
					if (!((9LLU) == _match_expr)) { goto _case_end_4336456560; }
					_case_begin_4336456560:;
					{
						jule::Ref<_1e16025cb_VarDecl> _160425_v = this->self->_method_build_var(_157957_tokens);
						if (jule::real(_160425_v)) {
							_160425_v->_field_public=_158421_is_pub;
							_157940_ipl->_field_statics=jule::append(_157940_ipl->_field_statics,jule::Slice<jule::Ref<_1e16025cb_VarDecl>>({_160425_v}));
						}
					}
					goto _match_end_4336451712;
					_case_end_4336456560:;
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4336452512; }
					_case_begin_4336452512:;
					{
						jule::Ref<_1e16025cb_FnDecl> _161325_f = this->self->_method_get_method(_157957_tokens);
						if (jule::real(_161325_f)) {
							_161325_f->_field_public=_158421_is_pub;
							this->self->_method_check_method_receiver(_161325_f);
							_157940_ipl->_field_methods=jule::append(_157940_ipl->_field_methods,jule::Slice<jule::Ref<_1e16025cb_FnDecl>>({_161325_f}));
						}
					}
					goto _match_end_4336451712;
					_case_end_4336452512:;
					_case_begin_4336452960:;
					{
						this->self->_method_push_err(_158321_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4336446896;
					}
					goto _match_end_4336451712;
					_case_end_4336452960:;
					_match_end_4336451712:;
				}
			}
			_iter_next_4336446896:;
			++it;
			goto _iter_begin_4336446896;
		}
		_iter_end_4336446896:;
	}
}



jule::Ref<_1e16025cb_Impl> _1e25dc95b_Parser::_method_build_impl(jule::Slice<_1e15a2bb9_Token> _162734_tokens) {
	_1e15a2bb9_Token _162817_token = _162734_tokens[0LL];
	if (_162734_tokens.len() < 2LL) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_Impl>();
	}
	_162817_token=_162734_tokens[1LL];
	if (_162817_token._field_id != 2LLU) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_Impl>();
	}
	if (_162734_tokens.len() < 3LL) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_Impl>();
	}
	jule::Ref<_1e16025cb_Impl> _164317_ipl = jule::new_struct<_1e16025cb_Impl>(new( std::nothrow ) _1e16025cb_Impl(_162817_token,_1e15a2bb9_Token(),jule::Slice<jule::Ref<_1e16025cb_FnDecl>>(),jule::Slice<jule::Ref<_1e16025cb_VarDecl>>()));
	_162817_token=_162734_tokens[2LL];
	if (_162817_token._field_id != 12LLU) {
		if ((_162817_token._field_id == 3LLU) && (_162817_token._field_kind == jule::Str("{", 1))) {
			std::tie(_164317_ipl->_field_base,_164317_ipl->_field_dest) = std::make_tuple(_164317_ipl->_field_dest,_164317_ipl->_field_base);
			_162734_tokens=_162734_tokens.slice(2LL);
			goto _julec_label_body;
		}
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_Impl>();
	}
	if (_162734_tokens.len() < 4LL) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_Impl>();
	}
	_162817_token=_162734_tokens[3LL];
	if (_162817_token._field_id != 2LLU) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_Impl>();
	}
	_164317_ipl->_field_dest=_162817_token;
	_162734_tokens=_162734_tokens.slice(4LL);
	_julec_label_body:;
	jule::Int _167317_i = 0LL;
	jule::Slice<_1e15a2bb9_Token> _167417_body_tokens = _1e25dc95b_range(_167317_i,jule::Str("{", 1),jule::Str("}", 1),_162734_tokens);
	if (_167417_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_164317_ipl->_field_base,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e16025cb_Impl>();
	}
	if (_167317_i < _162734_tokens.len()) {
		this->self->_method_push_err(_162734_tokens[_167317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	this->self->_method_parse_impl_body(_164317_ipl,_167417_body_tokens);
	return _164317_ipl;
}



jule::Any _1e25dc95b_Parser::_method_build_node_data(jule::Slice<_1e15a2bb9_Token>& _168840_tokens) {
	_1e15a2bb9_Token _168917_token = _168840_tokens[0LL];
	{
		auto _match_expr{ _168917_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4336508080; }
		_case_begin_4336508080:;
		{
			
			return jule::Any(this->self->_method_build_use_decl(_168840_tokens,false));
		}
		goto _match_end_4336505424;
		_case_end_4336508080:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4336505872; }
		_case_begin_4336505872:;
		{
			jule::Ref<_1e16025cb_FnDecl> _169721_f = this->self->_method_build_fn(_168840_tokens,false,false);
			if (jule::real(_169721_f)) {
				_169721_f->_field_global=true;
				if (_169721_f->_method_is_anon()) {
					this->self->_method_push_err(_169721_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
			}
			return jule::Any(_169721_f);
		}
		goto _match_end_4336505424;
		_case_end_4336505872:;
		if (!((34LLU) == _match_expr || (9LLU) == _match_expr || (36LLU) == _match_expr || (38LLU) == _match_expr)) { goto _case_end_4336505968; }
		_case_begin_4336505968:;
		{
			return jule::Any(this->self->_method_build_var(_168840_tokens));
		}
		goto _match_end_4336505424;
		_case_end_4336505968:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4336507408; }
		_case_begin_4336507408:;
		{
			return jule::Any(this->self->_method_build_type_alias_decl(_168840_tokens));
		}
		goto _match_end_4336505424;
		_case_end_4336507408:;
		if (!((24LLU) == _match_expr)) { goto _case_end_4336507504; }
		_case_begin_4336507504:;
		{
			return jule::Any(this->self->_method_build_enum_decl(_168840_tokens));
		}
		goto _match_end_4336505424;
		_case_end_4336507504:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4336507600; }
		_case_begin_4336507600:;
		{
			return jule::Any(this->self->_method_build_struct_decl(_168840_tokens));
		}
		goto _match_end_4336505424;
		_case_end_4336507600:;
		if (!((29LLU) == _match_expr)) { goto _case_end_4336507696; }
		_case_begin_4336507696:;
		{
			return jule::Any(this->self->_method_build_trait_decl(_168840_tokens));
		}
		goto _match_end_4336505424;
		_case_end_4336507696:;
		if (!((30LLU) == _match_expr)) { goto _case_end_4336508224; }
		_case_begin_4336508224:;
		{
			return jule::Any(this->self->_method_build_impl(_168840_tokens));
		}
		goto _match_end_4336505424;
		_case_end_4336508224:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4336508320; }
		_case_begin_4336508320:;
		{
			return this->self->_method_build_cpp_link(_168840_tokens);
		}
		goto _match_end_4336505424;
		_case_end_4336508320:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4336508416; }
		_case_begin_4336508416:;
		{
			jule::Ref<_1e16025cb_Comment> _173421_c = _1e25dc95b_build_comment(_168917_token);
			this->self->_method_process_comment(_173421_c);
			return jule::Any(_173421_c);
		}
		goto _match_end_4336505424;
		_case_end_4336508416:;
		_case_begin_4336503824:;
		{
			this->self->_method_push_err(_168917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4336505424;
		_case_end_4336503824:;
		_match_end_4336505424:;
	}
}



void _1e25dc95b_Parser::_method_check_comment_group(_1e16025cb_Node& _174439_node) {
	if ((!(jule::real((*this)._field_comment_group)))) {
		return;
	}
	{
		auto _match_expr{ _174439_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_Comment>>() || _match_expr.type_is<jule::Ref<_1e16025cb_Directive>>())) { goto _case_end_4336528288; }
		goto _match_end_4336526464;
		_case_end_4336528288:;
		_case_begin_4336526160:;
		{
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4336526464;
		_case_end_4336526160:;
		_match_end_4336526464:;
	}
}



void _1e25dc95b_Parser::_method_check_directive(_1e16025cb_Node& _175835_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto _match_expr{ _175835_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_Directive>>() || _match_expr.type_is<jule::Ref<_1e16025cb_Comment>>())) { goto _case_end_4336532320; }
		goto _match_end_4336530544;
		_case_end_4336532320:;
		_case_begin_4336530992:;
		{
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4336530544;
		_case_end_4336530992:;
		_match_end_4336530544:;
	}
}



void _1e25dc95b_Parser::_method_apply_meta(_1e16025cb_Node& _177334_node,jule::Bool _177350_is_pub) {
	{
		auto _match_expr{ _177334_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_VarDecl>>())) { goto _case_end_4336535488; }
		_case_begin_4336535488:;
		{
			jule::Ref<_1e16025cb_VarDecl> _177621_v = _177334_node._field_data.operator jule::Ref<_1e16025cb_VarDecl>();
			if ((!(jule::real(_177621_v)))) {
				return;
			}
			_177621_v->_field_public=_177350_is_pub;
			_177350_is_pub=false;
			_177621_v->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_177621_v->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4336535968;
		_case_end_4336535488:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_FnDecl>>())) { goto _case_end_4336536224; }
		_case_begin_4336536224:;
		{
			jule::Ref<_1e16025cb_FnDecl> _179021_f = _177334_node._field_data.operator jule::Ref<_1e16025cb_FnDecl>();
			if ((!(jule::real(_179021_f)))) {
				return;
			}
			_179021_f->_field_public=_177350_is_pub;
			_177350_is_pub=false;
			_179021_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_179021_f->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4336535968;
		_case_end_4336536224:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TypeAliasDecl>>())) { goto _case_end_4336536320; }
		_case_begin_4336536320:;
		{
			jule::Ref<_1e16025cb_TypeAliasDecl> _180321_tad = _177334_node._field_data.operator jule::Ref<_1e16025cb_TypeAliasDecl>();
			if ((!(jule::real(_180321_tad)))) {
				return;
			}
			_180321_tad->_field_public=_177350_is_pub;
			_177350_is_pub=false;
			_180321_tad->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4336535968;
		_case_end_4336536320:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_EnumDecl>>())) { goto _case_end_4336536416; }
		_case_begin_4336536416:;
		{
			jule::Ref<_1e16025cb_EnumDecl> _181321_ed = _177334_node._field_data.operator jule::Ref<_1e16025cb_EnumDecl>();
			if ((!(jule::real(_181321_ed)))) {
				return;
			}
			_181321_ed->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_181321_ed->_field_public=_177350_is_pub;
			_177350_is_pub=false;
		}
		goto _match_end_4336535968;
		_case_end_4336536416:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_StructDecl>>())) { goto _case_end_4336536512; }
		_case_begin_4336536512:;
		{
			jule::Ref<_1e16025cb_StructDecl> _182321_sd = _177334_node._field_data.operator jule::Ref<_1e16025cb_StructDecl>();
			if ((!(jule::real(_182321_sd)))) {
				return;
			}
			_182321_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_182321_sd->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_182321_sd->_field_public=_177350_is_pub;
			_177350_is_pub=false;
		}
		goto _match_end_4336535968;
		_case_end_4336536512:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TraitDecl>>())) { goto _case_end_4336536608; }
		_case_begin_4336536608:;
		{
			jule::Ref<_1e16025cb_TraitDecl> _183521_td = _177334_node._field_data.operator jule::Ref<_1e16025cb_TraitDecl>();
			if ((!(jule::real(_183521_td)))) {
				return;
			}
			_183521_td->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_183521_td->_field_public=_177350_is_pub;
			_177350_is_pub=false;
		}
		goto _match_end_4336535968;
		_case_end_4336536608:;
		_match_end_4336535968:;
	}
	if (_177350_is_pub) {
		(*this)._method_push_err(_177334_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>({}));
	}
}



void _1e25dc95b_Parser::_method_check_use_decl(_1e16025cb_Node& _184934_node) {
	{
		auto _match_expr{ _184934_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_UseDecl>>())) { goto _case_end_4336568000; }
		goto _match_end_4336567072;
		_case_end_4336568000:;
		_case_begin_4336566528:;
		{
			return;
		}
		goto _match_end_4336567072;
		_case_end_4336566528:;
		_match_end_4336567072:;
	}
	if ((*this)._field_ast->_field_decls.len() > 0LL) {
		(*this)._method_push_err(_184934_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>({}));
	}
}



std::tuple<jule::Bool,jule::Any> _1e25dc95b_Parser::_method_build_general_scope_node_data(jule::Slice<_1e15a2bb9_Token> _186453_st) {
	jule::Bool _186468_is_pub = jule::Bool();
	jule::Any _186482_data = jule::Any();
	if (_186453_st[0LL]._field_id == 21LLU) {
		_186468_is_pub=true;
		_186453_st=_186453_st.slice(1LL);
		if (_186453_st.len() == 0LL) {
			this->self->_method_push_err(_186453_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return std::make_tuple(_186468_is_pub,_186482_data);
		}
	}
	_186482_data=this->self->_method_build_node_data(_186453_st);
	_186468_is_pub = _186468_is_pub;
	_186482_data = _186482_data;
	return std::make_tuple(_186468_is_pub,_186482_data);
}



_1e16025cb_Node _1e25dc95b_Parser::_method_parse_node(jule::Slice<_1e15a2bb9_Token>& _187935_st) {
	_1e16025cb_Node _188017_node = _1e16025cb_Node(_187935_st[0LL],jule::Any());
	jule::Bool _188414_is_pub;
	jule::Any _188426_data;
	std::tie(_188414_is_pub,_188426_data) = this->self->_method_build_general_scope_node_data(_187935_st);
	if (_188426_data == nullptr) {
		return _188017_node;
	}
	_188017_node._field_data=_188426_data;
	this->self->_method_apply_meta(_188017_node,_188414_is_pub);
	this->self->_method_check_comment_group(_188017_node);
	this->self->_method_check_directive(_188017_node);
	this->self->_method_check_use_decl(_188017_node);
	return _188017_node;
}



void _1e25dc95b_Parser::_method_append_node(jule::Slice<_1e15a2bb9_Token>& _189836_st) {
	if (_189836_st.len() == 0LL) {
		return;
	}
	_1e16025cb_Node _190317_node = this->self->_method_parse_node(_189836_st);
	if ((_190317_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (!((_190317_node._method_is_use_decl()))) { goto _case_end_4336598528; }
		_case_begin_4336598528:;
		{
			this->self->_field_ast->_field_use_decls=jule::append(this->self->_field_ast->_field_use_decls,jule::Slice<jule::Ref<_1e16025cb_UseDecl>>({_190317_node._field_data.operator jule::Ref<_1e16025cb_UseDecl>()}));
		}
		goto _match_end_4336596096;
		_case_end_4336598528:;
		if (!((_190317_node._method_is_decl()))) { goto _case_end_4336597424; }
		_case_begin_4336597424:;
		{
			this->self->_field_ast->_field_decls=jule::append(this->self->_field_ast->_field_decls,jule::Slice<_1e16025cb_Node>({_190317_node}));
		}
		goto _match_end_4336596096;
		_case_end_4336597424:;
		if (!((_190317_node._method_is_comment()))) { goto _case_end_4336596928; }
		_case_begin_4336596928:;
		{
			jule::Ref<_1e16025cb_Comment> _191821_c = _190317_node._field_data.operator jule::Ref<_1e16025cb_Comment>();
			this->self->_field_ast->_field_comments=jule::append(this->self->_field_ast->_field_comments,jule::Slice<jule::Ref<_1e16025cb_Comment>>({_191821_c}));
		}
		goto _match_end_4336596096;
		_case_end_4336596928:;
		if (!((_190317_node._method_is_impl()))) { goto _case_end_4336597024; }
		_case_begin_4336597024:;
		{
			this->self->_field_ast->_field_impls=jule::append(this->self->_field_ast->_field_impls,jule::Slice<jule::Ref<_1e16025cb_Impl>>({_190317_node._field_data.operator jule::Ref<_1e16025cb_Impl>()}));
		}
		goto _match_end_4336596096;
		_case_end_4336597024:;
		_case_begin_4336596208:;
		{
			this->self->_method_push_err(_190317_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4336596096;
		_case_end_4336596208:;
		_match_end_4336596096:;
	}
}



void _1e25dc95b_Parser::_method_remove_range(jule::Int _192931_i,jule::Str _192939_kind,jule::Slice<_1e15a2bb9_Token>& _192951_tokens,jule::Slice<jule::Int>& _192973_ranges) {
	jule::Str _193013_close = _1e25dc95b_get_close_kind_of_brace(_192939_kind);
	for (; _192931_i >= 0LL; (_192931_i)--) {
		{
			_1e15a2bb9_Token _193217_tok = _192951_tokens[_192973_ranges[_192931_i]];
			if (_193217_tok._field_kind != _193013_close) {
				goto _iter_next_4336599440;
			}
			_192973_ranges=jule::append(_192973_ranges.slice(0LL,_192931_i),_192973_ranges.slice(_192931_i + 1LL));
			goto _iter_end_4336599440;
		}
	_iter_next_4336599440:;
	}
	_iter_end_4336599440:;
}



void _1e25dc95b_Parser::_method_push_wrong_order_close_err(_1e15a2bb9_Token& _194246_t,jule::Slice<_1e15a2bb9_Token>& _194257_tokens,jule::Slice<jule::Int>& _194275_ranges) {
	{
		auto _match_expr{ _194257_tokens[_194275_ranges[_194275_ranges.len() - 1LL]]._field_kind };
		if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4336625216; }
		_case_begin_4336625216:;
		{
			(*this)._method_push_err(_194246_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4336625056;
		_case_end_4336625216:;
		if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4336625312; }
		_case_begin_4336625312:;
		{
			(*this)._method_push_err(_194246_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4336625056;
		_case_end_4336625312:;
		if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4336625408; }
		_case_begin_4336625408:;
		{
			(*this)._method_push_err(_194246_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4336625056;
		_case_end_4336625408:;
		_match_end_4336625056:;
	}
}



void _1e25dc95b_Parser::_method_push_range_close(_1e15a2bb9_Token _195035_t,jule::Str _195045_left,jule::Slice<_1e15a2bb9_Token>& _195057_tokens,jule::Slice<jule::Int>& _195079_ranges) {
	jule::I64 _195113_n = _195079_ranges.len();
	if (_195113_n == 0LL) {
		{
			auto _match_expr{ _195035_t._field_kind };
			if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4336636304; }
			_case_begin_4336636304:;
			{
				(*this)._method_push_err(_195035_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4336636160;
			_case_end_4336636304:;
			if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4336636400; }
			_case_begin_4336636400:;
			{
				(*this)._method_push_err(_195035_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4336636160;
			_case_end_4336636400:;
			if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4336636496; }
			_case_begin_4336636496:;
			{
				(*this)._method_push_err(_195035_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4336636160;
			_case_end_4336636496:;
			_match_end_4336636160:;
		}
		return;
	} else if (_195057_tokens[_195079_ranges[_195113_n - 1LL]]._field_kind != _195045_left) {
		(*this)._method_push_wrong_order_close_err(_195035_t,_195057_tokens,_195079_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::I64>(_195113_n - 1LL),_195035_t._field_kind,_195057_tokens,_195079_ranges);
}



void _1e25dc95b_Parser::_method_check_ranges(jule::Slice<_1e15a2bb9_Token>& _196532_tokens) {
	jule::Slice<jule::Int> _196617_ranges = nullptr;
	{
		auto expr = _196532_tokens;
		auto it = expr.begin();
		_iter_begin_4336647136:;
		if (it != expr.end()) {
			jule::Int _1e25dc95b_i = it - expr.begin();
			_1e15a2bb9_Token _1e25dc95b_token = *it;
			{
				if (_1e25dc95b_token._field_id != 3LLU) {
					goto _iter_next_4336647136;
				}
				{
					auto _match_expr{ _1e25dc95b_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4336650256; }
					_case_begin_4336650256:;
					{
						_196617_ranges=jule::append(_196617_ranges,jule::Slice<jule::Int>({_1e25dc95b_i}));
					}
					goto _match_end_4336650176;
					_case_end_4336650256:;
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4336650672; }
					_case_begin_4336650672:;
					{
						(*this)._method_push_range_close(_1e25dc95b_token,jule::Str("(", 1),_196532_tokens,_196617_ranges);
					}
					goto _match_end_4336650176;
					_case_end_4336650672:;
					if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4336650768; }
					_case_begin_4336650768:;
					{
						(*this)._method_push_range_close(_1e25dc95b_token,jule::Str("{", 1),_196532_tokens,_196617_ranges);
					}
					goto _match_end_4336650176;
					_case_end_4336650768:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4336650864; }
					_case_begin_4336650864:;
					{
						(*this)._method_push_range_close(_1e25dc95b_token,jule::Str("[", 1),_196532_tokens,_196617_ranges);
					}
					goto _match_end_4336650176;
					_case_end_4336650864:;
					_match_end_4336650176:;
				}
			}
			_iter_next_4336647136:;
			++it;
			_1e25dc95b_i++;
			goto _iter_begin_4336647136;
		}
		_iter_end_4336647136:;
	}
	{
		auto expr = _196617_ranges;
		auto it = expr.begin();
		_iter_begin_4336655008:;
		if (it != expr.end()) {
			jule::Int _1e25dc95b_i = *it;
			{
				_1e15a2bb9_Token _199117_token = _196532_tokens[_1e25dc95b_i];
				{
					auto _match_expr{ _199117_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4336657488; }
					_case_begin_4336657488:;
					{
						(*this)._method_push_err(_199117_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4336658992;
					_case_end_4336657488:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4336659072; }
					_case_begin_4336659072:;
					{
						(*this)._method_push_err(_199117_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4336658992;
					_case_end_4336659072:;
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4336659184; }
					_case_begin_4336659184:;
					{
						(*this)._method_push_err(_199117_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4336658992;
					_case_end_4336659184:;
					_match_end_4336658992:;
				}
			}
			_iter_next_4336655008:;
			++it;
			goto _iter_begin_4336655008;
		}
		_iter_end_4336655008:;
	}
}



void _1e25dc95b_Parser::_method_parse(jule::Ref<_1e17bebd8_File>& _200030_f) {
	this->self->_field_ast=jule::new_struct<_1e15a53c5_Ast>(new( std::nothrow ) _1e15a53c5_Ast(_200030_f,jule::Slice<jule::Ref<_1e16025cb_Directive>>(),jule::Slice<jule::Ref<_1e16025cb_UseDecl>>(),jule::Slice<jule::Ref<_1e16025cb_Impl>>(),jule::Slice<jule::Ref<_1e16025cb_Comment>>(),jule::Slice<_1e16025cb_Node>()));
	jule::Slice<_1e15a2bb9_Token> _200517_tokens = _200030_f->_method_tokens();
	this->self->_method_check_ranges(_200517_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_1e184a280_Stmt>> _201117_stms = _1e184a280_split_stms(_200517_tokens);
	jule::Int _201417_i = 0LL;
	for (; _201417_i < _201117_stms.len(); (_201417_i)++) {
		{
			jule::Ref<_1e184a280_Stmt> _201621_st = _201117_stms[_201417_i];
			if (_201621_st->_field_tokens.len() == 0LL) {
				return;
			}
			jule::Any _202125_data;
			std::tie(std::ignore,_202125_data) = this->self->_method_build_general_scope_node_data(_201621_st->_field_tokens);
			if (_202125_data == nullptr) {
				goto _iter_end_4336664336;
			}
			if (this->self->_method_stopped()) {
				return;
			}
			_1e16025cb_Node _203021_node = _1e16025cb_Node(_1e15a2bb9_Token(),_202125_data);
			if (_203021_node._method_is_comment()) {
				jule::Ref<_1e16025cb_Directive> _203225_d = this->self->_method_get_directive(_203021_node._field_data.operator jule::Ref<_1e16025cb_Comment>());
				if (jule::real(_203225_d) && _1ec93b5b8_is_top_directive(_203225_d->_field_tag)) {
					this->self->_field_ast->_field_top_directives=jule::append(this->self->_field_ast->_field_top_directives,jule::Slice<jule::Ref<_1e16025cb_Directive>>({_203225_d}));
				}
			} else {
				goto _iter_end_4336664336;
			}
		}
	_iter_next_4336664336:;
	}
	_iter_end_4336664336:;
	this->self->_field_errors=nullptr;
	for (; _201417_i < _201117_stms.len(); (_201417_i)++) {
		{
			jule::Ref<_1e184a280_Stmt> _204521_st = _201117_stms[_201417_i];
			this->self->_method_append_node(_204521_st->_field_tokens);
			if (this->self->_method_stopped()) {
				goto _iter_end_4336680704;
			}
		}
	_iter_next_4336680704:;
	}
	_iter_end_4336680704:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e25dc95b_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



void _1e2613531_TypeBuilder::_method_push_err(_1e15a2bb9_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>({}));
	}
}



void _1e2613531_TypeBuilder::_method_push_suggestion(jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_suggestion(_8534_fmt,_8547_args);
	}
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_build_prim(void) {
	jule::Ref<_1e16025cb_TypeDecl> _9217_t = _1e2613531_build_prim_type((*this)._field_tokens[(*((*this)._field_i))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_build_namespace(void) {
	jule::Ref<_1e16025cb_TypeDecl> _9817_t = jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl((*this)._field_tokens[(*((*this)._field_i))],jule::Any()));
	jule::Ref<_1e16025cb_NamespaceTypeDecl> _10217_nst = jule::new_struct<_1e16025cb_NamespaceTypeDecl>(new( std::nothrow ) _1e16025cb_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_1e15a2bb9_Token _10521_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (jule::mod(_10317_n,2LL) == 0LL) {
				if (_10521_token._field_id != 2LLU) {
					(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
				}
				_10217_nst->_field_idents=jule::append(_10217_nst->_field_idents,jule::Slice<_1e15a2bb9_Token>({_10521_token}));
			} else if (_10521_token._field_id != 23LLU) {
				goto _iter_end_4336700640;
			}
			(_10317_n)++;
		}
	_iter_next_4336700640:;
	}
	_iter_end_4336700640:;
	_10217_nst->_field_idents=_10217_nst->_field_idents.slice(0LL,_10217_nst->_field_idents.len() - 1LL);
	((*((*this)._field_i)))--;
	_10217_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ref<_1e16025cb_IdentTypeDecl>();
	_9817_t->_field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> _1e2613531_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_1e15a2bb9_Token _13113_token = (*this)._field_tokens[(*((*this)._field_i))];
	if ((_13113_token._field_id != 3LLU) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ref<_1e16025cb_TypeDecl>> _14217_types = jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>::alloc(static_cast<jule::I64>(_13617_parts.len()));
	{
		auto expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_4336726176:;
		if (it != expr.end()) {
			jule::Int _1e2613531_i = it - expr.begin();
			jule::Slice<_1e15a2bb9_Token> _1e2613531_part = *it;
			{
				jule::Int _14421_j = 0LL;
				jule::Ref<_1e16025cb_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*this)._field_p->_method_build_type(_1e2613531_part,(&(_14421_j)),true);
				if (_14421_j < _1e2613531_part.len()) {
					(*this)._method_push_err(_1e2613531_part[_14421_j],jule::Str("invalid syntax", 14));
				}
				_14217_types[_1e2613531_i]=_14522_t;
			}
			_iter_next_4336726176:;
			++it;
			_1e2613531_i++;
			goto _iter_begin_4336726176;
		}
		_iter_end_4336726176:;
	}
	return _14217_types;
}



jule::Slice<jule::Slice<_1e15a2bb9_Token>> _1e2613531_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_1e15a2bb9_Token _15817_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (_15817_token._field_id == 3LLU) {
				{
					auto _match_expr{ _15817_token._field_kind };
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4336739696; }
					_case_begin_4336739696:;
					{
						(_15617_range_n)++;
					}
					goto _match_end_4336739616;
					_case_end_4336739696:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4336739792; }
					_case_begin_4336739792:;
					{
						(_15617_range_n)--;
					}
					goto _match_end_4336739616;
					_case_end_4336739792:;
					_match_end_4336739616:;
				}
			}
			if (_15617_range_n == 0LL) {
				((*((*this)._field_i)))++;
				goto _iter_end_4336731936;
			}
		}
	_iter_next_4336731936:;
	}
	_iter_end_4336731936:;
	jule::Slice<_1e15a2bb9_Token> _17017_tokens = (*this)._field_tokens.slice(_15513_first + 1LL,(*((*this)._field_i)) - 1LL);
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _17118_parts;
	jule::Slice<_1ec8e8025_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _1e25dc95b_parts(_17017_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_17125_errors);
	}
	return _17118_parts;
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_1e15a2bb9_Token _18217_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ref<_1e16025cb_IdentTypeDecl> _18317_it = jule::new_struct<_1e16025cb_IdentTypeDecl>(new( std::nothrow ) _1e16025cb_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_18317_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i))],jule::Str("invalid syntax", 14));
		return jule::new_ref<_1e16025cb_TypeDecl>();
	}
	(*((*this)._field_i))+=2LL;
	jule::Ref<_1e16025cb_TypeDecl> _20217_t = (*this)._method_build_ident();
	_20217_t->_field_kind.operator jule::Ref<_1e16025cb_IdentTypeDecl>()->_field_cpp_linked=true;
	return _20217_t;
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_build_fn(void) {
	_1e15a2bb9_Token _20817_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ref<_1e16025cb_FnDecl> _20917_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if ((!(jule::real(_20917_f)))) {
		return jule::new_ref<_1e16025cb_TypeDecl>();
	}
	if ((!(_20917_f->_method_is_anon()))) {
		(*this)._method_push_err(_20917_f->_field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_build_ptr(void) {
	_1e15a2bb9_Token _22317_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1e16025cb_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[(*((*this)._field_i))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1e16025cb_PtrTypeDecl>(new( std::nothrow ) _1e16025cb_PtrTypeDecl(jule::new_ref<_1e16025cb_TypeDecl>())))));
	}
	jule::Ref<_1e16025cb_TypeDecl> _24017_elem = (*this)._method_step();
	if ((!(jule::real(_24017_elem)))) {
		return jule::new_ref<_1e16025cb_TypeDecl>();
	}
	return jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1e16025cb_PtrTypeDecl>(new( std::nothrow ) _1e16025cb_PtrTypeDecl(_24017_elem)))));
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_build_ref(void) {
	_1e15a2bb9_Token _25417_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1e16025cb_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	jule::Ref<_1e16025cb_TypeDecl> _26117_elem = (*this)._method_step();
	if ((!(jule::real(_26117_elem)))) {
		return jule::new_ref<_1e16025cb_TypeDecl>();
	}
	return jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_25417_token,jule::Any(jule::new_struct<_1e16025cb_RefTypeDecl>(new( std::nothrow ) _1e16025cb_RefTypeDecl(_26117_elem)))));
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_build_op(void) {
	_1e15a2bb9_Token _27517_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto _match_expr{ _27517_token._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4336800176; }
		_case_begin_4336800176:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_4336797648;
		_case_end_4336800176:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4336800656; }
		_case_begin_4336800656:;
		{
			return (*this)._method_build_ref();
		}
		goto _match_end_4336797648;
		_case_end_4336800656:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4336798368; }
		_case_begin_4336798368:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("references cannot reference to another reference", 48));
			return (*this)._method_build_ref();
		}
		goto _match_end_4336797648;
		_case_end_4336798368:;
		_case_begin_4336795792:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1e16025cb_TypeDecl>();
		}
		goto _match_end_4336797648;
		_case_end_4336795792:;
		_match_end_4336797648:;
	}
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_build_slc(void) {
	_1e15a2bb9_Token _29417_token = (*this)._field_tokens[(*((*this)._field_i))];
	((*((*this)._field_i)))++;
	jule::Ref<_1e16025cb_TypeDecl> _29617_elem = (*this)._method_step();
	if ((!(jule::real(_29617_elem)))) {
		return jule::new_ref<_1e16025cb_TypeDecl>();
	}
	return jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_29417_token,jule::Any(jule::new_struct<_1e16025cb_SlcTypeDecl>(new( std::nothrow ) _1e16025cb_SlcTypeDecl(_29617_elem)))));
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i)) - 1LL],jule::Str("data-type missing", 17));
		return jule::new_ref<_1e16025cb_TypeDecl>();
	}
	jule::Int _31713_expr_delta = (*((*this)._field_i));
	jule::Ref<_1e16025cb_TypeDecl> _31917_elem = (*this)._method_step();
	if ((!(jule::real(_31917_elem)))) {
		return jule::new_ref<_1e16025cb_TypeDecl>();
	}
	jule::Ref<_1e16025cb_ArrTypeDecl> _32417_arrt = jule::new_struct<_1e16025cb_ArrTypeDecl>(new( std::nothrow ) _1e16025cb_ArrTypeDecl(_31917_elem,jule::Ref<_1e16025cb_Expr>()));
	jule::Slice<_1e15a2bb9_Token> _32817_expr_tokens = (*this)._field_tokens.slice(0LL,_31713_expr_delta);
	std::tie(std::ignore,_32817_expr_tokens) = _1e25dc95b_range_last(_32817_expr_tokens);
	_32817_expr_tokens=_32817_expr_tokens.slice(1LL,_32817_expr_tokens.len() - 1LL);
	_1e15a2bb9_Token _33117_token = _32817_expr_tokens[0LL];
	if (((_32817_expr_tokens.len() == 1LL) && (_33117_token._field_id == 7LLU)) && (_33117_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32417_arrt->_field_size=(*this)._field_p->_method_build_expr(_32817_expr_tokens);
	}
	return jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_33117_token,jule::Any(_32417_arrt)));
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_build_map(jule::Int _34428_colon,jule::Slice<_1e15a2bb9_Token>& _34445_tokens) {
	_1e15a2bb9_Token _34517_colon_token = (*this)._field_tokens[_34428_colon];
	if ((_34428_colon == 0LL) || ((_34428_colon + 1LL) >= _34445_tokens.len())) {
		(*this)._method_push_err(_34517_colon_token,jule::Str("data-type missing", 17));
		return jule::new_ref<_1e16025cb_TypeDecl>();
	}
	jule::Slice<_1e15a2bb9_Token> _35017_key_tokens = _34445_tokens.slice(0LL,_34428_colon);
	jule::Slice<_1e15a2bb9_Token> _35117_val_tokens = _34445_tokens.slice(_34428_colon + 1LL);
	jule::Ref<_1e16025cb_MapTypeDecl> _35217_mapt = jule::new_struct<_1e16025cb_MapTypeDecl>(new( std::nothrow ) _1e16025cb_MapTypeDecl());
	jule::Int _35417_j = 0LL;
	jule::Ref<_1e16025cb_TypeDecl> _35518_keyt;
	jule::Bool _35528_ok;
	std::tie(_35518_keyt,_35528_ok) = (*this)._field_p->_method_build_type(_35017_key_tokens,(&(_35417_j)),(*this)._field_err);
	if ((!(_35528_ok))) {
		return jule::new_ref<_1e16025cb_TypeDecl>();
	} else if (_35417_j < _35017_key_tokens.len()) {
		(*this)._method_push_err(_35017_key_tokens[_35417_j],jule::Str("invalid syntax", 14));
	}
	_35217_mapt->_field_key=_35518_keyt;
	_35417_j=0LL;
	jule::Ref<_1e16025cb_TypeDecl> _36418_valt;
	std::tie(_36418_valt,_35528_ok) = (*this)._field_p->_method_build_type(_35117_val_tokens,(&(_35417_j)),(*this)._field_err);
	if ((!(_35528_ok))) {
		return jule::new_ref<_1e16025cb_TypeDecl>();
	} else if (_35417_j < _35117_val_tokens.len()) {
		(*this)._method_push_err(_35117_val_tokens[_35417_j],jule::Str("invalid syntax", 14));
	}
	_35217_mapt->_field_val=_36418_valt;
	return jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_34517_colon_token,jule::Any(_35217_mapt)));
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_build_enumerable(void) {
	_1e15a2bb9_Token _37917_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_37917_token._field_id != 3LLU)) || (_37917_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_37917_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1e16025cb_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	_37917_token=(*this)._field_tokens[(*((*this)._field_i))];
	if ((_37917_token._field_id == 3LLU) && (_37917_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_1e15a2bb9_Token> _39318_map_tokens;
	jule::Int _39330_colon;
	std::tie(_39318_map_tokens,_39330_colon) = _1e2613531_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39330_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39330_colon,_39318_map_tokens);
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_TypeBuilder::_method_step(void) {
	_1e15a2bb9_Token _40213_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto _match_expr{ _40213_token._field_id };
		if (!((1LLU) == _match_expr)) { goto _case_end_4336862912; }
		_case_begin_4336862912:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_4336862192;
		_case_end_4336862912:;
		if (!((2LLU) == _match_expr)) { goto _case_end_4336865232; }
		_case_begin_4336865232:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_4336862192;
		_case_end_4336865232:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4336865328; }
		_case_begin_4336865328:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_4336862192;
		_case_end_4336865328:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4336862464; }
		_case_begin_4336862464:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_4336862192;
		_case_end_4336862464:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4336862560; }
		_case_begin_4336862560:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_4336862192;
		_case_end_4336862560:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4336862656; }
		_case_begin_4336862656:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_4336862192;
		_case_end_4336862656:;
		_case_begin_4336859888:;
		{
			((*((*this)._field_i)))++;
			(*this)._method_push_err(_40213_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1e16025cb_TypeDecl>();
		}
		goto _match_end_4336862192;
		_case_end_4336859888:;
		_match_end_4336862192:;
	}
}



std::tuple<jule::Ref<_1e16025cb_TypeDecl>,jule::Bool> _1e2613531_TypeBuilder::_method_build(void) {
	jule::Bool _43144_ok = jule::Bool();
	jule::Ref<_1e16025cb_TypeDecl> _43217_root = (*this)._method_step();
	if ((!(jule::real(_43217_root)))) {
		_43144_ok = false;
		return std::make_tuple(_1e2613531_build_void_type(),_43144_ok);
	}
	_43144_ok = true;
	return std::make_tuple(_43217_root,_43144_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2613531_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1a37ddd88_Const> _1a37ddd88_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_1a37ddd88_Const>(new( std::nothrow ) _1a37ddd88_Const(jule::Any(_1327_x)));
}



jule::Ref<_1a37ddd88_Const> _1a37ddd88_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_1a37ddd88_Const>(new( std::nothrow ) _1a37ddd88_Const(jule::Any(_1527_x)));
}



jule::Ref<_1a37ddd88_Const> _1a37ddd88_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_1a37ddd88_Const>(new( std::nothrow ) _1a37ddd88_Const(jule::Any(_1728_x)));
}



jule::Ref<_1a37ddd88_Const> _1a37ddd88_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_1a37ddd88_Const>(new( std::nothrow ) _1a37ddd88_Const(jule::Any(_1927_x)));
}



jule::Ref<_1a37ddd88_Const> _1a37ddd88_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_1a37ddd88_Const>(new( std::nothrow ) _1a37ddd88_Const(jule::Any(_2127_x)));
}



jule::Ref<_1a37ddd88_Const> _1a37ddd88_Const::_static_method_new_nil(void) {
	return jule::new_struct<_1a37ddd88_Const>(new( std::nothrow ) _1a37ddd88_Const(jule::Any(nullptr)));
}



jule::I64 _1a37ddd88_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



jule::U64 _1a37ddd88_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



jule::Bool _1a37ddd88_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



jule::Str _1a37ddd88_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str();
	}
	return (*this)._field_data.operator jule::Str();
}



jule::F64 _1a37ddd88_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



jule::I64 _1a37ddd88_Const::_method_as_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4345353168; }
		_case_begin_4345353168:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_4345351872;
		_case_end_4345353168:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4345353504; }
		_case_begin_4345353504:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4345351872;
		_case_end_4345353504:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4345353600; }
		_case_begin_4345353600:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4345351872;
		_case_end_4345353600:;
		_case_begin_4345351344:;
		{
			return 0LL;
		}
		goto _match_end_4345351872;
		_case_end_4345351344:;
		_match_end_4345351872:;
	}
}



jule::U64 _1a37ddd88_Const::_method_as_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4345358544; }
		_case_begin_4345358544:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_4345352416;
		_case_end_4345358544:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4345358880; }
		_case_begin_4345358880:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4345352416;
		_case_end_4345358880:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4345358976; }
		_case_begin_4345358976:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4345352416;
		_case_end_4345358976:;
		_case_begin_4345352800:;
		{
			return 0LL;
		}
		goto _match_end_4345352416;
		_case_end_4345352800:;
		_match_end_4345352416:;
	}
}



jule::F64 _1a37ddd88_Const::_method_as_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4345364960; }
		_case_begin_4345364960:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_4345363328;
		_case_end_4345364960:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4345365056; }
		_case_begin_4345365056:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4345363328;
		_case_end_4345365056:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4345363760; }
		_case_begin_4345363760:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4345363328;
		_case_end_4345363760:;
		_case_begin_4345361600:;
		{
			return 0LL;
		}
		goto _match_end_4345363328;
		_case_end_4345361600:;
		_match_end_4345363328:;
	}
}



void _1a37ddd88_Const::_method_set_i64(jule::I64 _13930_x) {
	(*this)._field_data=jule::Any(_13930_x);
}



void _1a37ddd88_Const::_method_set_u64(jule::U64 _14130_x) {
	(*this)._field_data=jule::Any(_14130_x);
}



void _1a37ddd88_Const::_method_set_bool(jule::Bool _14331_x) {
	(*this)._field_data=jule::Any(_14331_x);
}



void _1a37ddd88_Const::_method_set_str(jule::Str _14530_x) {
	(*this)._field_data=jule::Any(_14530_x);
}



void _1a37ddd88_Const::_method_set_f64(jule::F64 _14730_x) {
	(*this)._field_data=jule::Any(_14730_x);
}



void _1a37ddd88_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



jule::Bool _1a37ddd88_Const::_method_is_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4345384336; }
		_case_begin_4345384336:;
		{
			return true;
		}
		goto _match_end_4345382816;
		_case_end_4345384336:;
		_case_begin_4345382048:;
		{
			return false;
		}
		goto _match_end_4345382816;
		_case_end_4345382048:;
		_match_end_4345382816:;
	}
}



jule::Bool _1a37ddd88_Const::_method_is_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4345385488; }
		_case_begin_4345385488:;
		{
			return true;
		}
		goto _match_end_4345385088;
		_case_end_4345385488:;
		_case_begin_4345383408:;
		{
			return false;
		}
		goto _match_end_4345385088;
		_case_end_4345383408:;
		_match_end_4345385088:;
	}
}



jule::Bool _1a37ddd88_Const::_method_is_bool(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4345387744; }
		_case_begin_4345387744:;
		{
			return true;
		}
		goto _match_end_4345387344;
		_case_end_4345387744:;
		_case_begin_4345386768:;
		{
			return false;
		}
		goto _match_end_4345387344;
		_case_end_4345386768:;
		_match_end_4345387344:;
	}
}



jule::Bool _1a37ddd88_Const::_method_is_str(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4345390000; }
		_case_begin_4345390000:;
		{
			return true;
		}
		goto _match_end_4345389600;
		_case_end_4345390000:;
		_case_begin_4345389024:;
		{
			return false;
		}
		goto _match_end_4345389600;
		_case_end_4345389024:;
		_match_end_4345389600:;
	}
}



jule::Bool _1a37ddd88_Const::_method_is_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4345392256; }
		_case_begin_4345392256:;
		{
			return true;
		}
		goto _match_end_4345391856;
		_case_end_4345392256:;
		_case_begin_4345391280:;
		{
			return false;
		}
		goto _match_end_4345391856;
		_case_end_4345391280:;
		_match_end_4345391856:;
	}
}



jule::Bool _1a37ddd88_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



jule::Bool _1a37ddd88_Const::_method_are_same_types(_1a37ddd88_Const _19933_x) {
	{
		if (!(((*this)._method_is_i64() == _19933_x._method_is_i64()))) { goto _case_end_4345399008; }
		_case_begin_4345399008:;
		{
			return true;
		}
		goto _match_end_4345397168;
		_case_end_4345399008:;
		if (!(((*this)._method_is_u64() == _19933_x._method_is_u64()))) { goto _case_end_4345399104; }
		_case_begin_4345399104:;
		{
			return true;
		}
		goto _match_end_4345397168;
		_case_end_4345399104:;
		if (!(((*this)._method_is_f64() == _19933_x._method_is_f64()))) { goto _case_end_4345397616; }
		_case_begin_4345397616:;
		{
			return true;
		}
		goto _match_end_4345397168;
		_case_end_4345397616:;
		if (!(((*this)._method_is_bool() == _19933_x._method_is_bool()))) { goto _case_end_4345397712; }
		_case_begin_4345397712:;
		{
			return true;
		}
		goto _match_end_4345397168;
		_case_end_4345397712:;
		if (!(((*this)._method_is_str() == _19933_x._method_is_str()))) { goto _case_end_4345397808; }
		_case_begin_4345397808:;
		{
			return true;
		}
		goto _match_end_4345397168;
		_case_end_4345397808:;
		if (!(((*this)._method_is_nil() == _19933_x._method_is_nil()))) { goto _case_end_4345397904; }
		_case_begin_4345397904:;
		{
			return true;
		}
		goto _match_end_4345397168;
		_case_end_4345397904:;
		_case_begin_4345397328:;
		{
			return false;
		}
		goto _match_end_4345397168;
		_case_end_4345397328:;
		_match_end_4345397168:;
	}
}



jule::Bool _1a37ddd88_Const::_method_and(_1a37ddd88_Const _21722_x) {
	{
		if (!(((*this)._method_is_bool() && _21722_x._method_is_bool()))) { goto _case_end_4345409392; }
		_case_begin_4345409392:;
		{
			return (*this)._method_read_bool() && _21722_x._method_read_bool();
		}
		goto _match_end_4345407632;
		_case_end_4345409392:;
		_case_begin_4345407792:;
		{
			return false;
		}
		goto _match_end_4345407632;
		_case_end_4345407792:;
		_match_end_4345407632:;
	}
}



jule::Bool _1a37ddd88_Const::_method_or(_1a37ddd88_Const _22921_x) {
	{
		if (!(((*this)._method_is_bool() && _22921_x._method_is_bool()))) { goto _case_end_4345414448; }
		_case_begin_4345414448:;
		{
			return (*this)._method_read_bool() || _22921_x._method_read_bool();
		}
		goto _match_end_4345412688;
		_case_end_4345414448:;
		_case_begin_4345412848:;
		{
			return false;
		}
		goto _match_end_4345412688;
		_case_end_4345412848:;
		_match_end_4345412688:;
	}
}



jule::Bool _1a37ddd88_Const::_method_eqs(_1a37ddd88_Const _24122_x) {
	{
		if (!(((*this)._method_is_nil()))) { goto _case_end_4345419424; }
		_case_begin_4345419424:;
		{
			return _24122_x._method_is_nil();
		}
		goto _match_end_4345417584;
		_case_end_4345419424:;
		if (!(((*this)._method_is_bool()))) { goto _case_end_4345419520; }
		_case_begin_4345419520:;
		{
			return _24122_x._method_is_bool() && ((*this)._method_read_bool() == _24122_x._method_read_bool());
		}
		goto _match_end_4345417584;
		_case_end_4345419520:;
		if (!(((*this)._method_is_str()))) { goto _case_end_4345418032; }
		_case_begin_4345418032:;
		{
			return _24122_x._method_is_str() && ((*this)._method_read_str() == _24122_x._method_read_str());
		}
		goto _match_end_4345417584;
		_case_end_4345418032:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345418128; }
		_case_begin_4345418128:;
		{
			return (*this)._method_read_i64() == _24122_x._method_as_i64();
		}
		goto _match_end_4345417584;
		_case_end_4345418128:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345418224; }
		_case_begin_4345418224:;
		{
			return (*this)._method_read_u64() == _24122_x._method_as_u64();
		}
		goto _match_end_4345417584;
		_case_end_4345418224:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4345418320; }
		_case_begin_4345418320:;
		{
			return (*this)._method_read_f64() == _24122_x._method_as_f64();
		}
		goto _match_end_4345417584;
		_case_end_4345418320:;
		_case_begin_4345417744:;
		{
			return false;
		}
		goto _match_end_4345417584;
		_case_end_4345417744:;
		_match_end_4345417584:;
	}
}



jule::Bool _1a37ddd88_Const::_method_lt(_1a37ddd88_Const _27321_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345432784; }
		_case_begin_4345432784:;
		{
			return (*this)._method_read_i64() < _27321_x._method_as_i64();
		}
		goto _match_end_4345430992;
		_case_end_4345432784:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345432880; }
		_case_begin_4345432880:;
		{
			return (*this)._method_read_u64() < _27321_x._method_as_u64();
		}
		goto _match_end_4345430992;
		_case_end_4345432880:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4345432992; }
		_case_begin_4345432992:;
		{
			return (*this)._method_read_f64() < _27321_x._method_as_f64();
		}
		goto _match_end_4345430992;
		_case_end_4345432992:;
		_case_begin_4345431152:;
		{
			return false;
		}
		goto _match_end_4345430992;
		_case_end_4345431152:;
		_match_end_4345430992:;
	}
}



jule::Bool _1a37ddd88_Const::_method_gt(_1a37ddd88_Const _29621_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345440320; }
		_case_begin_4345440320:;
		{
			return (*this)._method_read_i64() > _29621_x._method_as_i64();
		}
		goto _match_end_4345438528;
		_case_end_4345440320:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345440416; }
		_case_begin_4345440416:;
		{
			return (*this)._method_read_u64() > _29621_x._method_as_u64();
		}
		goto _match_end_4345438528;
		_case_end_4345440416:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4345440528; }
		_case_begin_4345440528:;
		{
			return (*this)._method_read_f64() > _29621_x._method_as_f64();
		}
		goto _match_end_4345438528;
		_case_end_4345440528:;
		_case_begin_4345438688:;
		{
			return false;
		}
		goto _match_end_4345438528;
		_case_end_4345438688:;
		_match_end_4345438528:;
	}
}



jule::Bool _1a37ddd88_Const::_method_add(_1a37ddd88_Const _31826_x) {
	{
		if (!(((*this)._method_is_str()))) { goto _case_end_4345448192; }
		_case_begin_4345448192:;
		{
			if ((!(_31826_x._method_is_str()))) {
				return false;
			}
			(*this)._method_set_str((*this)._method_read_str() + _31826_x._method_read_str());
		}
		goto _match_end_4345446384;
		_case_end_4345448192:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4345448288; }
		_case_begin_4345448288:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() + _31826_x._method_as_f64()));
		}
		goto _match_end_4345446384;
		_case_end_4345448288:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345448400; }
		_case_begin_4345448400:;
		{
			if (_31826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() + _31826_x._method_as_i64()));
			}
		}
		goto _match_end_4345446384;
		_case_end_4345448400:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345446848; }
		_case_begin_4345446848:;
		{
			if (_31826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() + _31826_x._method_as_u64()));
			}
		}
		goto _match_end_4345446384;
		_case_end_4345446848:;
		_case_begin_4345446544:;
		{
			return false;
		}
		goto _match_end_4345446384;
		_case_end_4345446544:;
		_match_end_4345446384:;
	}
	return true;
}



jule::Bool _1a37ddd88_Const::_method_sub(_1a37ddd88_Const _35126_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4345465680; }
		_case_begin_4345465680:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() - _35126_x._method_as_f64()));
		}
		goto _match_end_4345463888;
		_case_end_4345465680:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345465776; }
		_case_begin_4345465776:;
		{
			if (_35126_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() - _35126_x._method_as_i64()));
			}
		}
		goto _match_end_4345463888;
		_case_end_4345465776:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345465888; }
		_case_begin_4345465888:;
		{
			if (_35126_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() - _35126_x._method_as_u64()));
			}
		}
		goto _match_end_4345463888;
		_case_end_4345465888:;
		_case_begin_4345464048:;
		{
			return false;
		}
		goto _match_end_4345463888;
		_case_end_4345464048:;
		_match_end_4345463888:;
	}
	return true;
}



jule::Bool _1a37ddd88_Const::_method_mul(_1a37ddd88_Const _37826_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4345480384; }
		_case_begin_4345480384:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() * _37826_x._method_as_f64()));
		}
		goto _match_end_4345478592;
		_case_end_4345480384:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345480480; }
		_case_begin_4345480480:;
		{
			if (_37826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() * _37826_x._method_as_i64()));
			}
		}
		goto _match_end_4345478592;
		_case_end_4345480480:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345480592; }
		_case_begin_4345480592:;
		{
			if (_37826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() * _37826_x._method_as_u64()));
			}
		}
		goto _match_end_4345478592;
		_case_end_4345480592:;
		_case_begin_4345478752:;
		{
			return false;
		}
		goto _match_end_4345478592;
		_case_end_4345478752:;
		_match_end_4345478592:;
	}
	return true;
}



jule::Bool _1a37ddd88_Const::_method_div(_1a37ddd88_Const _40926_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4345494704; }
		_case_begin_4345494704:;
		{
			jule::F64 _41217_l = _40926_x._method_as_f64();
			if (_41217_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_41217_l)));
		}
		goto _match_end_4345492912;
		_case_end_4345494704:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345494800; }
		_case_begin_4345494800:;
		{
			jule::F64 _41917_l = _40926_x._method_as_f64();
			if (_41917_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_41917_l)));
		}
		goto _match_end_4345492912;
		_case_end_4345494800:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345494912; }
		_case_begin_4345494912:;
		{
			jule::F64 _42617_l = _40926_x._method_as_f64();
			if (_42617_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_42617_l)));
		}
		goto _match_end_4345492912;
		_case_end_4345494912:;
		_case_begin_4345493072:;
		{
			return false;
		}
		goto _match_end_4345492912;
		_case_end_4345493072:;
		_match_end_4345492912:;
	}
	return true;
}



jule::Bool _1a37ddd88_Const::_method_mod(_1a37ddd88_Const _44126_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345508976; }
		_case_begin_4345508976:;
		{
			jule::I64 _44417_l = _44126_x._method_as_i64();
			if (_44417_l == 0LL) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>(jule::mod((*this)._method_read_i64(),_44417_l)));
		}
		goto _match_end_4345507200;
		_case_end_4345508976:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345509072; }
		_case_begin_4345509072:;
		{
			jule::U64 _45117_l = _44126_x._method_as_u64();
			if (_45117_l == 0LL) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>(jule::mod((*this)._method_read_u64(),_45117_l)));
		}
		goto _match_end_4345507200;
		_case_end_4345509072:;
		_case_begin_4345507360:;
		{
			return false;
		}
		goto _match_end_4345507200;
		_case_end_4345507360:;
		_match_end_4345507200:;
	}
	return true;
}



jule::Bool _1a37ddd88_Const::_method_bitwise_and(_1a37ddd88_Const _46534_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345519632; }
		_case_begin_4345519632:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _46534_x._method_as_i64()));
		}
		goto _match_end_4345517856;
		_case_end_4345519632:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345519728; }
		_case_begin_4345519728:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _46534_x._method_as_u64()));
		}
		goto _match_end_4345517856;
		_case_end_4345519728:;
		_case_begin_4345518016:;
		{
			return false;
		}
		goto _match_end_4345517856;
		_case_end_4345518016:;
		_match_end_4345517856:;
	}
	return true;
}



jule::Bool _1a37ddd88_Const::_method_bitwise_or(_1a37ddd88_Const _48133_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345527216; }
		_case_begin_4345527216:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _48133_x._method_as_i64()));
		}
		goto _match_end_4345525440;
		_case_end_4345527216:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345527312; }
		_case_begin_4345527312:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _48133_x._method_as_u64()));
		}
		goto _match_end_4345525440;
		_case_end_4345527312:;
		_case_begin_4345525600:;
		{
			return false;
		}
		goto _match_end_4345525440;
		_case_end_4345525600:;
		_match_end_4345525440:;
	}
	return true;
}



jule::Bool _1a37ddd88_Const::_method_xor(_1a37ddd88_Const _49726_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345534672; }
		_case_begin_4345534672:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _49726_x._method_as_i64()));
		}
		goto _match_end_4345532896;
		_case_end_4345534672:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345534768; }
		_case_begin_4345534768:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _49726_x._method_as_u64()));
		}
		goto _match_end_4345532896;
		_case_end_4345534768:;
		_case_begin_4345533056:;
		{
			return false;
		}
		goto _match_end_4345532896;
		_case_end_4345533056:;
		_match_end_4345532896:;
	}
	return true;
}



jule::Bool _1a37ddd88_Const::_method_lshift(_1a37ddd88_Const _51329_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345542256; }
		_case_begin_4345542256:;
		{
			jule::I64 _51617_l = (*this)._method_as_i64();
			if (_51617_l < 0LL) {
				jule::U64 _51821_r = _51329_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_51617_l << _51821_r));
			} else {
				_1a37ddd88_lshift_unsig((*this),_51329_x);
			}
		}
		goto _match_end_4345540480;
		_case_end_4345542256:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345542352; }
		_case_begin_4345542352:;
		{
			_1a37ddd88_lshift_unsig((*this),_51329_x);
		}
		goto _match_end_4345540480;
		_case_end_4345542352:;
		_case_begin_4345540640:;
		{
			return false;
		}
		goto _match_end_4345540480;
		_case_end_4345540640:;
		_match_end_4345540480:;
	}
	return true;
}



jule::Bool _1a37ddd88_Const::_method_rshift(_1a37ddd88_Const _53629_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4345551408; }
		_case_begin_4345551408:;
		{
			jule::I64 _53917_l = (*this)._method_as_i64();
			if (_53917_l < 0LL) {
				jule::U64 _54121_r = _53629_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_53917_l >> _54121_r));
			} else {
				_1a37ddd88_rshift_unsig((*this),_53629_x);
			}
		}
		goto _match_end_4345549632;
		_case_end_4345551408:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4345551504; }
		_case_begin_4345551504:;
		{
			_1a37ddd88_rshift_unsig((*this),_53629_x);
		}
		goto _match_end_4345549632;
		_case_end_4345551504:;
		_case_begin_4345549792:;
		{
			return false;
		}
		goto _match_end_4345549632;
		_case_end_4345549792:;
		_match_end_4345549632:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a37ddd88_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e177440c_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



jule::Str _1e177440c_StructIns::_method_to_str(void) {
	jule::Str _22117_kind = jule::Str();
	_22117_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_22117_kind+=jule::Str("[", 1);
		{
			auto expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_4347726720:;
			if (it != expr.end()) {
				jule::Ref<_1a2db8ce3_TypeKind> _1e177440c_g = *it;
				{
					_22117_kind+=_1e177440c_g->_method_to_str();
					_22117_kind+=jule::Str(",", 1);
				}
				_iter_next_4347726720:;
				++it;
				goto _iter_begin_4347726720;
			}
			_iter_end_4347726720:;
		}
		_22117_kind=_22117_kind.slice(0LL,_22117_kind.len() - 1LL);
		_22117_kind+=jule::Str("]", 1);
	}
	return _22117_kind;
}



jule::Bool _1e177440c_StructIns::_method_equals(jule::Ref<_1a2db8ce3_TypeKind> _23621_other) {
	jule::Ref<_1e177440c_StructIns> _23713_s = (_23621_other).alloc->_method_strct();
	if ((!(jule::real(_23713_s)))) {
		return false;
	}
	if (((*this)._field_decl).alloc != (_23713_s->_field_decl).alloc) {
		return false;
	}
	if ((*this)._field_generics.len() != _23713_s->_field_generics.len()) {
		return false;
	}
	jule::Int _25017_i = 0LL;
	for (; _25017_i < (*this)._field_generics.len(); (_25017_i)++) {
		{
			if ((!((*this)._field_generics[_25017_i]->_method_equals(_23713_s->_field_generics[_25017_i])))) {
				return false;
			}
		}
	_iter_next_4347736336:;
	}
	_iter_end_4347736336:;
	return true;
}



jule::Bool _1e177440c_StructIns::_method_same(jule::Ref<_1e177440c_StructIns> _26423_s) {
	if ((((*this)._field_decl).alloc != (_26423_s->_field_decl).alloc) || (_26423_s->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		auto expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_4347745552:;
		if (it != expr.end()) {
			jule::Int _1e177440c_i = it - expr.begin();
			jule::Ref<_1a2db8ce3_TypeKind> _1e177440c_g = *it;
			{
				if ((!(_1e177440c_g->_method_equals(_26423_s->_field_generics[_1e177440c_i])))) {
					return false;
				}
			}
			_iter_next_4347745552:;
			++it;
			_1e177440c_i++;
			goto _iter_begin_4347745552;
		}
		_iter_end_4347745552:;
	}
	return true;
}



jule::Ref<_1e1737e81_Fn> _1e177440c_StructIns::_method_find_method(jule::Str _27934_ident,jule::Bool _27946_statically) {
	{
		auto expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4347751968:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1e177440c_f = *it;
			{
				if ((_1e177440c_f->_field_statically == _27946_statically) && (_1e177440c_f->_field_ident == _27934_ident)) {
					return _1e177440c_f;
				}
			}
			_iter_next_4347751968:;
			++it;
			goto _iter_begin_4347751968;
		}
		_iter_end_4347751968:;
	}
	return jule::new_ref<_1e1737e81_Fn>();
}



jule::Ref<_1e177440c_FieldIns> _1e177440c_StructIns::_method_find_field(jule::Str _29033_ident) {
	{
		auto expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_4347756816:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_FieldIns> _1e177440c_f = *it;
			{
				if (_1e177440c_f->_field_decl->_field_ident == _29033_ident) {
					return _1e177440c_f;
				}
			}
			_iter_next_4347756816:;
			++it;
			goto _iter_begin_4347756816;
		}
		_iter_end_4347756816:;
	}
	return jule::new_ref<_1e177440c_FieldIns>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e177440c_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "references:" << _Src._field_references;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1737e81_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



jule::Str _1e1737e81_ParamIns::_method_to_str(void) {
	jule::Str _17917_s = jule::Str();
	if ((*this)._field_decl->_field_mutable) {
		_17917_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_17917_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_17917_s+=jule::Str("&", 1);
		}
		_17917_s+=jule::Str("self", 4);
		return _17917_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_17917_s+=jule::Str("...", 3);
	}
	if (jule::real((*this)._field_kind)) {
		_17917_s+=(*this)._field_kind->_method_to_str();
	}
	return _17917_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1737e81_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



jule::Str _1e1737e81_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



jule::Bool _1e1737e81_FnIns::_method_equals(jule::Ref<_1a2db8ce3_TypeKind> _23421_other) {
	jule::Ref<_1e1737e81_FnIns> _23513_f = (_23421_other).alloc->_method_fnc();
	if ((!(jule::real(_23513_f)))) {
		return false;
	}
	if ((*this)._field_decl->_field_statically != _23513_f->_field_decl->_field_statically) {
		return false;
	}
	if ((*this)._field_decl->_field_unsafety != _23513_f->_field_decl->_field_unsafety) {
		return false;
	}
	if ((*this)._field_generics.len() != _23513_f->_field_generics.len()) {
		return false;
	}
	if ((*this)._field_decl->_method_is_void() != _23513_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _25617_i = 0LL;
	for (; _25617_i < (*this)._field_generics.len(); (_25617_i)++) {
		{
			if ((!((*this)._field_generics[_25617_i]->_method_equals(_23513_f->_field_generics[_25617_i])))) {
				return false;
			}
		}
	_iter_next_4347837360:;
	}
	_iter_end_4347837360:;
	jule::Fn<jule::Bool(jule::Ref<_1e1737e81_ParamIns>,jule::Ref<_1e1737e81_ParamIns>)> _26313_check_params = jule::Fn<jule::Bool(jule::Ref<_1e1737e81_ParamIns>,jule::Ref<_1e1737e81_ParamIns>)>([=](jule::Ref<_1e1737e81_ParamIns> _26331_p1,jule::Ref<_1e1737e81_ParamIns> _26346_p2) mutable -> jule::Bool {
		if (_26331_p1->_field_decl->_field_mutable != _26346_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_26331_p1->_field_decl->_method_is_self()) {
			if ((!(_26346_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_26331_p1->_field_decl->_method_is_ref() != _26346_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_26331_p1->_field_decl->_field_reference != _26346_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_26331_p1->_field_decl->_field_variadic != _26346_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _26331_p1->_field_kind->_method_equals(_26346_p2->_field_kind);
	});
	_25617_i=0LL;
	for (; _25617_i < (*this)._field_params.len(); (_25617_i)++) {
		{
			if ((!(_26313_check_params((*this)._field_params[_25617_i],_23513_f->_field_params[_25617_i])))) {
				return false;
			}
		}
	_iter_next_4347854864:;
	}
	_iter_end_4347854864:;
	if ((!((*this)._field_decl->_method_is_void()))) {
		if ((!((*this)._field_result->_method_equals(_23513_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



jule::Bool _1e1737e81_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



jule::Bool _1e1737e81_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (jule::real((*this)._field_decl) && (*this)._field_decl->_method_is_anon());
}



jule::Bool _1e1737e81_FnIns::_method_same(jule::Ref<_1e1737e81_FnIns> _31723_f) {
	if ((((*this)._field_decl).alloc != (_31723_f->_field_decl).alloc) || (_31723_f->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		auto expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_4347868016:;
		if (it != expr.end()) {
			jule::Int _1e1737e81_i = it - expr.begin();
			jule::Ref<_1a2db8ce3_TypeKind> _1e1737e81_g = *it;
			{
				if ((!(_1e1737e81_g->_method_equals(_31723_f->_field_generics[_1e1737e81_i])))) {
					return false;
				}
			}
			_iter_next_4347868016:;
			++it;
			_1e1737e81_i++;
			goto _iter_begin_4347868016;
		}
		_iter_end_4347868016:;
	}
	return true;
}



jule::Str _1e1737e81_FnIns::_method_get_kind_str(jule::Bool _33331_ident) {
	jule::Str _33417_s = jule::Str();
	if ((*this)._field_decl->_field_statically) {
		_33417_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_33417_s+=jule::Str("unsafe ", 7);
	}
	_33417_s+=jule::Str("fn", 2);
	if (_33331_ident && jule::real((*this)._field_decl)) {
		_33417_s+=jule::Str(" ", 1) + (*this)._field_decl->_field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_33417_s+=jule::Str("[", 1);
		{
			auto expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_4347876432:;
			if (it != expr.end()) {
				jule::Int _1e1737e81_i = it - expr.begin();
				jule::Ref<_1a2db8ce3_TypeKind> _1e1737e81_t = *it;
				{
					_33417_s+=_1e1737e81_t->_method_to_str();
					if ((_1e1737e81_i + 1LL) < (*this)._field_generics.len()) {
						_33417_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4347876432:;
				++it;
				_1e1737e81_i++;
				goto _iter_begin_4347876432;
			}
			_iter_end_4347876432:;
		}
		_33417_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_33417_s+=jule::Str("[", 1);
		{
			auto expr = (*this)._field_decl->_field_generics;
			auto it = expr.begin();
			_iter_begin_4347883200:;
			if (it != expr.end()) {
				jule::Int _1e1737e81_i = it - expr.begin();
				jule::Ref<_1e16025cb_GenericDecl> _1e1737e81_g = *it;
				{
					_33417_s+=_1e1737e81_g->_field_ident;
					if ((_1e1737e81_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_33417_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4347883200:;
				++it;
				_1e1737e81_i++;
				goto _iter_begin_4347883200;
			}
			_iter_end_4347883200:;
		}
		_33417_s+=jule::Str("]", 1);
	}
	_33417_s+=jule::Str("(", 1);
	jule::I64 _37113_n = (*this)._field_params.len();
	if (_37113_n > 0LL) {
		{
			auto expr = (*this)._field_params;
			auto it = expr.begin();
			_iter_begin_4347889376:;
			if (it != expr.end()) {
				jule::Ref<_1e1737e81_ParamIns> _1e1737e81_p = *it;
				{
					_33417_s+=_1e1737e81_p->_method_to_str();
					_33417_s+=jule::Str(",", 1);
				}
				_iter_next_4347889376:;
				++it;
				goto _iter_begin_4347889376;
			}
			_iter_end_4347889376:;
		}
		_33417_s=_33417_s.slice(0LL,_33417_s.len() - 1LL);
	}
	_33417_s+=jule::Str(")", 1);
	if ((!((*this)._field_decl->_method_is_void()))) {
		_33417_s+=jule::Str(":", 1);
		_33417_s+=(*this)._field_result->_method_to_str();
	}
	return _33417_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1737e81_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1e28b6a59_ReferenceStack> _1e28b6a59_ReferenceStack::_static_method_new(void) {
	return jule::new_struct<_1e28b6a59_ReferenceStack>(new( std::nothrow ) _1e28b6a59_ReferenceStack());
}



jule::Int _1e28b6a59_ReferenceStack::_method_len(void) {
	return static_cast<jule::I64>((*this)._field_buffer.len());
}



jule::Any _1e28b6a59_ReferenceStack::_method_at(jule::Int _5825_i) {
	return (*this)._field_buffer[_5825_i];
}



void _1e28b6a59_ReferenceStack::_method_push(jule::Any _6331_ref) {
	(*this)._field_buffer=jule::append((*this)._field_buffer,jule::Slice<jule::Any>({_6331_ref}));
}



jule::Bool _1e28b6a59_ReferenceStack::_method_exist_0(jule::Ref<_1ba80e105_Var> _6827_t) {
	{
		auto expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4350902544:;
		if (it != expr.end()) {
			jule::Any _1e28b6a59_ref = *it;
			{
				{
					auto _match_expr{ _1e28b6a59_ref };
					if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4350903728; }
					_case_begin_4350903728:;
					{
						if ((_1e28b6a59_ref.operator jule::Ref<_1ba80e105_Var>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4350904208;
					_case_end_4350903728:;
					_match_end_4350904208:;
				}
			}
			_iter_next_4350902544:;
			++it;
			goto _iter_begin_4350902544;
		}
		_iter_end_4350902544:;
	}
	return false;
}

jule::Bool _1e28b6a59_ReferenceStack::_method_exist_1(jule::Ref<_1e1737e81_FnIns> _6827_t) {
	{
		auto expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4350912528:;
		if (it != expr.end()) {
			jule::Any _1e28b6a59_ref = *it;
			{
				{
					auto _match_expr{ _1e28b6a59_ref };
					if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4350913712; }
					_case_begin_4350913712:;
					{
						if ((_1e28b6a59_ref.operator jule::Ref<_1e1737e81_FnIns>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4350914192;
					_case_end_4350913712:;
					_match_end_4350914192:;
				}
			}
			_iter_next_4350912528:;
			++it;
			goto _iter_begin_4350912528;
		}
		_iter_end_4350912528:;
	}
	return false;
}

jule::Bool _1e28b6a59_ReferenceStack::_method_exist_2(jule::Ref<_1e177440c_StructIns> _6827_t) {
	{
		auto expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4350947760:;
		if (it != expr.end()) {
			jule::Any _1e28b6a59_ref = *it;
			{
				{
					auto _match_expr{ _1e28b6a59_ref };
					if (!(_match_expr.type_is<jule::Ref<_1e177440c_StructIns>>())) { goto _case_end_4350948944; }
					_case_begin_4350948944:;
					{
						if ((_1e28b6a59_ref.operator jule::Ref<_1e177440c_StructIns>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4350949424;
					_case_end_4350948944:;
					_match_end_4350949424:;
				}
			}
			_iter_next_4350947760:;
			++it;
			goto _iter_begin_4350947760;
		}
		_iter_end_4350947760:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e28b6a59_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1e28b6a59_SymbolBuilder> _1e28b6a59_SymbolBuilder::_method_get_root(void) {
	jule::Ref<_1e28b6a59_SymbolBuilder> _31417_root = this->self;
	while (jule::real(_31417_root->_field_owner)) {
		{
			_31417_root=_31417_root->_field_owner;
		}
	_iter_next_4347901984:;
	}
	_iter_end_4347901984:;
	return _31417_root;
}



void _1e28b6a59_SymbolBuilder::_method_push_err(_1e15a2bb9_Token& _32128_token,jule::Str _32142_fmt,jule::Slice<jule::Any> _32155_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1ec8e8025_Log>({_1e2a7c2a2_compiler_err(_32128_token,true,_32142_fmt,_32155_args)}));
}



void _1e28b6a59_SymbolBuilder::_method_push_err_text(_1e15a2bb9_Token& _32533_token,jule::Str _32547_fmt,jule::Slice<jule::Any> _32560_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1ec8e8025_Log>({_1e2a7c2a2_compiler_err(_32533_token,false,_32547_fmt,_32560_args)}));
}



void _1e28b6a59_SymbolBuilder::_method_push_suggestion(jule::Str _33034_fmt,jule::Slice<jule::Any> _33047_args) {
	{
		_1e2a7c2a2_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_33034_fmt,_33047_args);
	}
}



jule::Bool _1e28b6a59_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ref<_1e16025cb_UseDecl>& _33443_decl) {
	jule::Bool _33461_ok = jule::Bool();
	if (_1ec8e3273_is_std_header_path(_33443_decl->_field_link_path)) {
		_33461_ok = true;
		return _33461_ok;
	}
	jule::Str _33913_ext = _1ec9a2585_ext(_33443_decl->_field_link_path);
	if ((!(_1ec8e3273_is_valid_header_ext(_33913_ext))) && (!(_1ec8e3273_is_valid_cpp_ext(_33913_ext)))) {
		(*this)._method_push_err(_33443_decl->_field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_33913_ext)}));
		_33461_ok = false;
		return _33461_ok;
	}
	jule::Ref<_1e15771dd_Status> _34514_info;
	jule::Int _34520_err;
	std::tie(_34514_info,_34520_err) = _1e15771dd_Status::_static_method_of(_33443_decl->_field_link_path);
	if ((_34520_err != 0LLU) || _34514_info->_method_is_dir()) {
		(*this)._method_push_err(_33443_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_33443_decl->_field_link_path)}));
		_33461_ok = false;
		return _33461_ok;
	}
	_33461_ok = true;
	return _33461_ok;
}



jule::Ref<_1e2a7b966_ImportInfo> _1e28b6a59_SymbolBuilder::_method_build_cpp_header_import(jule::Ref<_1e16025cb_UseDecl>& _35547_decl) {
	jule::Str _35617_path = _35547_decl->_field_link_path;
	if ((!(_1ec8e3273_is_std_header_path(_35547_decl->_field_link_path)))) {
		jule::Bool _35921_ok = (*this)._method_check_cpp_use_decl_path(_35547_decl);
		if ((!(_35921_ok))) {
			return jule::new_ref<_1e2a7b966_ImportInfo>();
		}
		std::tie(_35617_path,_35921_ok) = _1ec9a2585_abs(_35547_decl->_field_link_path);
		if ((!(_35921_ok))) {
			(*this)._method_push_err(_35547_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35547_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_1e2a7b966_ImportInfo>(new( std::nothrow ) _1e2a7b966_ImportInfo(_35547_decl->_field_token,_35617_path,_35547_decl->_field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_1e15a2bb9_Token>(),jule::new_ref<_1e2a7b966_Package>()));
}



jule::Ref<_1e2a7b966_ImportInfo> _1e28b6a59_SymbolBuilder::_method_build_std_import(jule::Ref<_1e16025cb_UseDecl>& _38240_decl) {
	jule::Str _38317_path = _38240_decl->_field_link_path.slice(jule::Str("std::", 5).len());
	_38317_path=_38317_path.replace(jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_38317_path=_1ec9a2585_join(jule::Slice<jule::Str>({_1ec9710c0_PATH_STDLIB,_38317_path}));
	jule::Bool _38620_ok;
	std::tie(_38317_path,_38620_ok) = _1ec9a2585_abs(_38317_path);
	if ((!(_38620_ok))) {
		(*this)._method_push_err(_38240_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38240_decl->_field_link_path)}));
		return jule::new_ref<_1e2a7b966_ImportInfo>();
	}
	jule::Ref<_1e15771dd_Status> _39214_info;
	jule::Int _39220_err;
	std::tie(_39214_info,_39220_err) = _1e15771dd_Status::_static_method_of(_38317_path);
	if ((_39220_err != 0LLU) || (!(_39214_info->_method_is_dir()))) {
		(*this)._method_push_err(_38240_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38240_decl->_field_link_path)}));
		return jule::new_ref<_1e2a7b966_ImportInfo>();
	}
	jule::Str _40013_ident = _38240_decl->_field_link_path.slice(_38240_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL);
	return jule::new_struct<_1e2a7b966_ImportInfo>(new( std::nothrow ) _1e2a7b966_ImportInfo(_38240_decl->_field_token,_38317_path,_38240_decl->_field_link_path,_40013_ident,_38240_decl->_field_alias,jule::Bool(),false,true,_38240_decl->_field_full,jule::Slice<_1e15a2bb9_Token>(),jule::new_struct<_1e2a7b966_Package>(new( std::nothrow ) _1e2a7b966_Package(nullptr))));
}



jule::Ref<_1e2a7b966_ImportInfo> _1e28b6a59_SymbolBuilder::_method_build_ident_import(jule::Ref<_1e16025cb_UseDecl>& _41743_decl) {
	jule::Str _41817_path = _41743_decl->_field_link_path;
	_41817_path=_41817_path.replace(jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_41817_path=_1ec9a2585_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_41817_path}));
	jule::Bool _42220_ok;
	std::tie(_41817_path,_42220_ok) = _1ec9a2585_abs(_41817_path);
	if ((!(_42220_ok))) {
		this->self->_method_push_err(_41743_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41743_decl->_field_link_path)}));
		return jule::new_ref<_1e2a7b966_ImportInfo>();
	}
	jule::Ref<_1e15771dd_Status> _42814_info;
	jule::Int _42820_err;
	std::tie(_42814_info,_42820_err) = _1e15771dd_Status::_static_method_of(_41817_path);
	if ((_42820_err != 0LLU) || (!(_42814_info->_method_is_dir()))) {
		this->self->_method_push_err(_41743_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41743_decl->_field_link_path)}));
		return jule::new_ref<_1e2a7b966_ImportInfo>();
	}
	jule::Str _43613_ident = _41743_decl->_field_link_path.slice(_41743_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL);
	return jule::new_struct<_1e2a7b966_ImportInfo>(new( std::nothrow ) _1e2a7b966_ImportInfo(_41743_decl->_field_token,_41817_path,_41743_decl->_field_link_path,_43613_ident,_41743_decl->_field_alias,jule::Bool(),false,false,_41743_decl->_field_full,jule::Slice<_1e15a2bb9_Token>(),jule::new_struct<_1e2a7b966_Package>(new( std::nothrow ) _1e2a7b966_Package(nullptr))));
}



jule::Ref<_1e2a7b966_ImportInfo> _1e28b6a59_SymbolBuilder::_method_build_import(jule::Ref<_1e16025cb_UseDecl>& _45337_decl) {
	{
		if (!((_45337_decl->_field_cpp_linked))) { goto _case_end_4347986720; }
		_case_begin_4347986720:;
		{
			return this->self->_method_build_cpp_header_import(_45337_decl);
		}
		goto _match_end_4347985216;
		_case_end_4347986720:;
		if (!((_45337_decl->_field_std))) { goto _case_end_4347986352; }
		_case_begin_4347986352:;
		{
			return this->self->_method_build_std_import(_45337_decl);
		}
		goto _match_end_4347985216;
		_case_end_4347986352:;
		_case_begin_4347985376:;
		{
			return this->self->_method_build_ident_import(_45337_decl);
		}
		goto _match_end_4347985216;
		_case_end_4347985376:;
		_match_end_4347985216:;
	}
}



jule::Bool _1e28b6a59_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ref<_1e2a7b966_ImportInfo>& _46144_pkg) {
	jule::Bool _46164_ok = jule::Bool();
	jule::Ref<_1e2a7b966_ImportInfo> _46313_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)>([=](jule::Ref<_1e2a7b966_ImportInfo> _46349_spkg) mutable -> jule::Bool {
		return _46144_pkg->_field_path == _46349_spkg->_field_path;
	}));
	if ((!(jule::real(_46313_lpkg)))) {
		_46164_ok = true;
		return _46164_ok;
	}
	(*this)._method_push_err(_46144_pkg->_field_token,jule::Str("duplicate use declaration: @", 28),jule::Slice<jule::Any>({jule::Any(_46144_pkg->_field_link_path)}));
	(*this)._method_push_suggestion(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>({}));
	_46164_ok = false;
	return _46164_ok;
}



void _1e28b6a59_SymbolBuilder::_method_impl_import_selections(jule::Ref<_1e2a7b966_ImportInfo>& _47546_imp,jule::Ref<_1e16025cb_UseDecl>& _47569_decl) {
	{
		auto expr = _47569_decl->_field_selected;
		auto it = expr.begin();
		_iter_begin_4348005264:;
		if (it != expr.end()) {
			_1e15a2bb9_Token _1e28b6a59_ident = *it;
			{
				if (_47546_imp->_method_exist_ident(_1e28b6a59_ident._field_kind)) {
					(*this)._method_push_err(_1e28b6a59_ident,jule::Str("duplicated identifier selection: @", 34),jule::Slice<jule::Any>({jule::Any(_1e28b6a59_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>({}));
					goto _iter_next_4348005264;
				}
				_47546_imp->_field_selected=jule::append(_47546_imp->_field_selected,jule::Slice<_1e15a2bb9_Token>({_1e28b6a59_ident}));
			}
			_iter_next_4348005264:;
			++it;
			goto _iter_begin_4348005264;
		}
		_iter_end_4348005264:;
	}
}



jule::Str _1e28b6a59_SymbolBuilder::_method_get_as_link_path(jule::Str _48740_path) {
	if (_48740_path.has_prefix(_1ec9710c0_PATH_STDLIB)) {
		_48740_path=_48740_path.slice(_1ec9710c0_PATH_STDLIB.len());
		return jule::Str("std", 3) + _48740_path.replace(static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _49314_root;
	std::tie(_49314_root,std::ignore) = _1ec9a2585_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_48740_path=_48740_path.slice(_49314_root.len());
	if (_48740_path[0LL] == 92LL) {
		_48740_path=_48740_path.slice(1LL);
	}
	return _48740_path.replace(static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



void _1e28b6a59_SymbolBuilder::_method_push_cycle_error(jule::Ref<_1e28b6a59_SymbolBuilder>& _50137_sb,jule::Str _50157_path,jule::Str& _50173_message) {
	
	jule::Str _50413_refers_to = _1ec8e8025_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_50137_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_50157_path))}));
	_50173_message=((_1e28b6a59_str_repeat(jule::Str(" ", 1),4LL) + _50413_refers_to) + jule::Str("\n", 1)) + _50173_message;
}



void _1e28b6a59_SymbolBuilder::_method_push_cross_cycle_error(jule::Ref<_1e28b6a59_SymbolBuilder>& _51143_target,jule::Ref<_1e2a7b966_ImportInfo>& _51168_imp,_1e15a2bb9_Token& _51187_error_token) {
	jule::Str _51217_message = jule::Str();
	this->self->_method_push_cycle_error(this->self,_51168_imp->_field_path,_51217_message);
	jule::Ref<_1e28b6a59_SymbolBuilder> _51617_owner = this->self->_field_owner;
	jule::Ref<_1e28b6a59_SymbolBuilder> _51717_old = this->self;
	while (jule::real(_51617_owner->_field_owner)) {
		{
			this->self->_method_push_cycle_error(_51717_old->_field_owner,_51717_old->_field_table->_field_file->_method_dir(),_51217_message);
			if ((_51617_owner->_field_owner).alloc == (_51143_target).alloc) {
				this->self->_method_push_cycle_error(_51143_target,_51617_owner->_field_table->_field_file->_method_dir(),_51217_message);
				goto _iter_end_4348040800;
			}
			_51717_old=_51617_owner;
			_51617_owner=_51617_owner->_field_owner;
		}
	_iter_next_4348040800:;
	}
	_iter_end_4348040800:;
	this->self->_method_push_err(_51187_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_51217_message)}));
}



jule::Bool _1e28b6a59_SymbolBuilder::_method_check_import_cycles(jule::Ref<_1e2a7b966_ImportInfo> _53439_imp,jule::Ref<_1e16025cb_UseDecl>& _53458_decl) {
	if (_53439_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_53458_decl->_field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_53439_imp->_field_path))}));
		return false;
	}
	if ((!(jule::real(this->self->_field_owner)))) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _53439_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_53439_imp,_53458_decl->_field_token);
		return false;
	}
	jule::Ref<_1e28b6a59_SymbolBuilder> _54917_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_54917_owner->_field_table->_field_file->_method_dir() == _53439_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_54917_owner,_53439_imp,_53458_decl->_field_token);
		return false;
	}
	if (jule::real(_54917_owner->_field_owner)) {
		_54917_owner=_54917_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



jule::Bool _1e28b6a59_SymbolBuilder::_method_import_package(jule::Ref<_1e2a7b966_ImportInfo>& _56439_imp,jule::Ref<_1e16025cb_UseDecl>& _56462_decl) {
	jule::Bool _56480_ok = jule::Bool();
	if (_56439_imp->_field_cpp_linked) {
		_56480_ok = true;
		return _56480_ok;
	}
	jule::Ref<_1e2a7b966_ImportInfo> _56917_port = this->self->_field_importer.get()._method_get_import(_56439_imp->_field_path);
	if (jule::real(_56917_port)) {
		_56439_imp->_field_package=_56917_port->_field_package;
		_56439_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_56439_imp,_56462_decl)))) {
			_56480_ok = false;
			return _56480_ok;
		}
		jule::Slice<jule::Ref<_1e15a53c5_Ast>> _57822_asts;
		jule::Slice<_1ec8e8025_Log> _57828_errors;
		std::tie(_57822_asts,_57828_errors) = this->self->_field_importer.get()._method_import_package(_56439_imp->_field_path);
		if (_57828_errors.len() > 0LL) {
			this->self->_field_errors=jule::append(this->self->_field_errors,_57828_errors);
			_56480_ok = false;
			return _56480_ok;
		}
		{
			auto expr = _57822_asts;
			auto it = expr.begin();
			_iter_begin_4348082288:;
			if (it != expr.end()) {
				jule::Ref<_1e15a53c5_Ast> _1e28b6a59_ast = *it;
				{
					jule::Ref<_1a2d05801_SymbolTable> _58526_table;
					jule::Slice<_1ec8e8025_Log> _58533_errors;
					std::tie(_58526_table,_58533_errors) = _1a36c926d_build_symbols(_1e28b6a59_ast,this->self->_field_importer,this->self);
					if (_58533_errors.len() > 0LL) {
						this->self->_field_errors=jule::append(this->self->_field_errors,_58533_errors);
						this->self->_method_push_err_text(_56439_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56439_imp->_field_link_path)}));
						_56480_ok = false;
						return _56480_ok;
					}
					_56439_imp->_field_package->_field_files=jule::append(_56439_imp->_field_package->_field_files,jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>({_58526_table}));
				}
				_iter_next_4348082288:;
				++it;
				goto _iter_begin_4348082288;
			}
			_iter_end_4348082288:;
		}
	}
	this->self->_method_impl_import_selections(_56439_imp,_56462_decl);
	_56480_ok = true;
	return _56480_ok;
}



jule::Ref<_1e2a7b966_ImportInfo> _1e28b6a59_SymbolBuilder::_method_import_use_decl(jule::Ref<_1e16025cb_UseDecl>& _60340_decl) {
	jule::Ref<_1e2a7b966_ImportInfo> _60417_imp = this->self->_method_build_import(_60340_decl);
	if ((!(jule::real(_60417_imp)))) {
		return jule::new_ref<_1e2a7b966_ImportInfo>();
	}
	jule::Bool _61017_ok = this->self->_method_check_duplicate_use_decl(_60417_imp);
	if ((!(_61017_ok))) {
		return jule::new_ref<_1e2a7b966_ImportInfo>();
	}
	if ((_60417_imp->_field_alias.len() != 0LL) && (_60340_decl->_field_selected.len() > 0LL)) {
		this->self->_method_push_err(_60340_decl->_field_token,jule::Str("use aliases cannot useable for selected package defines", 55),jule::Slice<jule::Any>({}));
	}
	_61017_ok=this->self->_method_import_package(_60417_imp,_60340_decl);
	this->self->_field_table->_field_imports=jule::append(this->self->_field_table->_field_imports,jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>>({_60417_imp}));
	if (_61017_ok) {
		this->self->_field_importer.get()._method_imported(_60417_imp);
		return _60417_imp;
	}
	return jule::new_ref<_1e2a7b966_ImportInfo>();
}



void _1e28b6a59_SymbolBuilder::_method_import_use_decls(void) {
	{
		auto expr = this->self->_field_ast->_field_use_decls;
		auto it = expr.begin();
		_iter_begin_4348102544:;
		if (it != expr.end()) {
			jule::Ref<_1e16025cb_UseDecl> _1e28b6a59_decl = *it;
			{
				this->self->_method_import_use_decl(_1e28b6a59_decl);
				if (this->self->_field_errors.len() > 0LL) {
					goto _iter_end_4348102544;
				}
			}
			_iter_next_4348102544:;
			++it;
			goto _iter_begin_4348102544;
		}
		_iter_end_4348102544:;
	}
}



void _1e28b6a59_SymbolBuilder::_method_append_decl(_1e16025cb_Node& _63935_decl) {
	{
		auto _match_expr{ _63935_decl._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TypeAliasDecl>>())) { goto _case_end_4348109504; }
		_case_begin_4348109504:;
		{
			jule::Ref<_1a2db8ce3_TypeAlias> _64221_ta = _1e28b6a59_build_type_alias(_63935_decl._field_data.operator jule::Ref<_1e16025cb_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases=jule::append((*this)._field_table->_field_type_aliases,jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>({_64221_ta}));
		}
		goto _match_end_4348107312;
		_case_end_4348109504:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_StructDecl>>())) { goto _case_end_4348107760; }
		_case_begin_4348107760:;
		{
			jule::Ref<_1e177440c_Struct> _64621_srct = _1e28b6a59_build_struct(_63935_decl._field_data.operator jule::Ref<_1e16025cb_StructDecl>());
			(*this)._field_table->_field_structs=jule::append((*this)._field_table->_field_structs,jule::Slice<jule::Ref<_1e177440c_Struct>>({_64621_srct}));
		}
		goto _match_end_4348107312;
		_case_end_4348107760:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_FnDecl>>())) { goto _case_end_4348107856; }
		_case_begin_4348107856:;
		{
			jule::Ref<_1e1737e81_Fn> _65021_f = _1e28b6a59_build_fn(_63935_decl._field_data.operator jule::Ref<_1e16025cb_FnDecl>());
			(*this)._field_table->_field_funcs=jule::append((*this)._field_table->_field_funcs,jule::Slice<jule::Ref<_1e1737e81_Fn>>({_65021_f}));
		}
		goto _match_end_4348107312;
		_case_end_4348107856:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TraitDecl>>())) { goto _case_end_4348107952; }
		_case_begin_4348107952:;
		{
			jule::Ref<_1e2a1e563_Trait> _65421_t = _1e28b6a59_build_trait(_63935_decl._field_data.operator jule::Ref<_1e16025cb_TraitDecl>());
			(*this)._field_table->_field_traits=jule::append((*this)._field_table->_field_traits,jule::Slice<jule::Ref<_1e2a1e563_Trait>>({_65421_t}));
		}
		goto _match_end_4348107312;
		_case_end_4348107952:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_VarDecl>>())) { goto _case_end_4348108048; }
		_case_begin_4348108048:;
		{
			jule::Ref<_1ba80e105_Var> _65821_v = _1e28b6a59_build_var(_63935_decl._field_data.operator jule::Ref<_1e16025cb_VarDecl>());
			(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ref<_1ba80e105_Var>>({_65821_v}));
		}
		goto _match_end_4348107312;
		_case_end_4348108048:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_EnumDecl>>())) { goto _case_end_4348109600; }
		_case_begin_4348109600:;
		{
			jule::Ref<_1e2a21d4b_Enum> _66221_e = _1e28b6a59_build_enum(_63935_decl._field_data.operator jule::Ref<_1e16025cb_EnumDecl>());
			(*this)._field_table->_field_enums=jule::append((*this)._field_table->_field_enums,jule::Slice<jule::Ref<_1e2a21d4b_Enum>>({_66221_e}));
		}
		goto _match_end_4348107312;
		_case_end_4348109600:;
		_case_begin_4348106800:;
		{
			(*this)._method_push_err(_63935_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4348107312;
		_case_end_4348106800:;
		_match_end_4348107312:;
	}
}



void _1e28b6a59_SymbolBuilder::_method_append_decls(void) {
	{
		auto expr = (*this)._field_ast->_field_decls;
		auto it = expr.begin();
		_iter_begin_4348129152:;
		if (it != expr.end()) {
			_1e16025cb_Node _1e28b6a59_decl = *it;
			{
				(*this)._method_append_decl(_1e28b6a59_decl);
			}
			_iter_next_4348129152:;
			++it;
			goto _iter_begin_4348129152;
		}
		_iter_end_4348129152:;
	}
}



void _1e28b6a59_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=jule::Slice<jule::Ref<_1e2a276ae_Impl>>::alloc(0LL,static_cast<jule::I64>((*this)._field_ast->_field_impls.len()));
	{
		auto expr = (*this)._field_ast->_field_impls;
		auto it = expr.begin();
		_iter_begin_4348134656:;
		if (it != expr.end()) {
			jule::Ref<_1e16025cb_Impl> _1e28b6a59_decl = *it;
			{
				(*this)._field_table->_field_impls=jule::append((*this)._field_table->_field_impls,jule::Slice<jule::Ref<_1e2a276ae_Impl>>({_1e28b6a59_build_impl(_1e28b6a59_decl)}));
			}
			_iter_next_4348134656:;
			++it;
			goto _iter_begin_4348134656;
		}
		_iter_end_4348134656:;
	}
}



void _1e28b6a59_SymbolBuilder::_method_push_directive_pass(jule::Ref<_1e16025cb_Directive>& _68343_d) {
	_1e28b6a59_Pass _68417_pass = _1e28b6a59_Pass(_68343_d->_field_token,jule::Str());
	{
		auto expr = _68343_d->_field_args;
		auto it = expr.begin();
		_iter_begin_4348141904:;
		if (it != expr.end()) {
			jule::Str _1e28b6a59_arg = *it;
			{
				if (_1e28b6a59_arg != jule::Str()) {
					_68417_pass._field_text+=_1e28b6a59_arg + jule::Str(" ", 1);
				}
			}
			_iter_next_4348141904:;
			++it;
			goto _iter_begin_4348141904;
		}
		_iter_end_4348141904:;
	}
	_68417_pass._field_text=_68417_pass._field_text.trim(jule::Str(" \n\r\t\v", 5));
	(*this)._field_table->_field_passes=jule::append((*this)._field_table->_field_passes,jule::Slice<_1e28b6a59_Pass>({_68417_pass}));
}



void _1e28b6a59_SymbolBuilder::_method_append_top_directives(void) {
	{
		auto expr = (*this)._field_ast->_field_top_directives;
		auto it = expr.begin();
		_iter_begin_4348146752:;
		if (it != expr.end()) {
			jule::Ref<_1e16025cb_Directive> _1e28b6a59_d = *it;
			{
				{
					auto _match_expr{ _1e28b6a59_d->_field_tag };
					if (!((jule::Str("pass", 4)) == _match_expr)) { goto _case_end_4348150320; }
					_case_begin_4348150320:;
					{
						(*this)._method_push_directive_pass(_1e28b6a59_d);
					}
					goto _match_end_4348150240;
					_case_end_4348150320:;
					_match_end_4348150240:;
				}
			}
			_iter_next_4348146752:;
			++it;
			goto _iter_begin_4348146752;
		}
		_iter_end_4348146752:;
	}
}



void _1e28b6a59_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_1a2d05801_SymbolTable>(new( std::nothrow ) _1a2d05801_SymbolTable(this->self->_field_ast->_field_file,jule::Slice<_1e28b6a59_Pass>(),jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>>(),jule::Slice<jule::Ref<_1ba80e105_Var>>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>(),jule::Slice<jule::Ref<_1e177440c_Struct>>(),jule::Slice<jule::Ref<_1e1737e81_Fn>>(),jule::Slice<jule::Ref<_1e2a1e563_Trait>>(),jule::Slice<jule::Ref<_1e2a21d4b_Enum>>(),jule::Slice<jule::Ref<_1e2a276ae_Impl>>()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e28b6a59_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e2a2e210_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e2a2e210_Match::_method_is_generic_type_match(void) {
	return ((*this)._field_type_match && jule::real((*this)._field_expr)) && (*this)._field_expr->_field_kind->_field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e2a2e210_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_Recover &_Src) {
	_Stream << "Recover{";
	_Stream << "handler:" << _Src._field_handler << ", ";
	_Stream << "handler_expr:" << _Src._field_handler_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "scope_owner:" << _Src._field_scope_owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1e2a7b966_ImportInfo> _1e2a2e210_ScopeChecker::_method_find_package(jule::Str _42235_ident) {
	return (*this)._field_s->_method_find_package(_42235_ident);
}



jule::Ref<_1e2a7b966_ImportInfo> _1e2a2e210_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)> _43237_selector) {
	return (*this)._field_s->_method_select_package(_43237_selector);
}



jule::Ref<_1ba80e105_Var> _1e2a2e210_ScopeChecker::_method_find_var(jule::Str _44331_ident,jule::Bool _44343_cpp_linked) {
	
	jule::Ref<_1ba80e105_Var> _44617_v = (*this)._field_table->_method___find_var(_44331_ident,_44343_cpp_linked,true);
	if (jule::real(_44617_v)) {
		return _44617_v;
	}
	jule::Ref<_1e2a2e210_ScopeChecker> _45117_parent = (*this)._field_parent;
	while (jule::real(_45117_parent)) {
		{
			_44617_v=_45117_parent->_field_table->_method___find_var(_44331_ident,_44343_cpp_linked,true);
			if (jule::real(_44617_v)) {
				return _44617_v;
			}
			_45117_parent=_45117_parent->_field_parent;
		}
	_iter_next_4348211600:;
	}
	_iter_end_4348211600:;
	return (*this)._field_s->_method_find_var(_44331_ident,_44343_cpp_linked);
}



jule::Ref<_1a2db8ce3_TypeAlias> _1e2a2e210_ScopeChecker::_method_find_type_alias(jule::Str _47038_ident,jule::Bool _47050_cpp_linked) {
	
	jule::Ref<_1a2db8ce3_TypeAlias> _47317_ta = (*this)._field_table->_method___find_type_alias(_47038_ident,_47050_cpp_linked,true);
	if (jule::real(_47317_ta)) {
		return _47317_ta;
	}
	jule::Ref<_1e2a2e210_ScopeChecker> _47817_parent = (*this)._field_parent;
	while (jule::real(_47817_parent)) {
		{
			_47317_ta=_47817_parent->_field_table->_method___find_type_alias(_47038_ident,_47050_cpp_linked,true);
			if (jule::real(_47317_ta)) {
				return _47317_ta;
			}
			_47817_parent=_47817_parent->_field_parent;
		}
	_iter_next_4348224048:;
	}
	_iter_end_4348224048:;
	return (*this)._field_s->_method_find_type_alias(_47038_ident,_47050_cpp_linked);
}



jule::Ref<_1e177440c_Struct> _1e2a2e210_ScopeChecker::_method_find_struct(jule::Str _49534_ident,jule::Bool _49546_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_49534_ident,_49546_cpp_linked);
}



jule::Ref<_1e1737e81_Fn> _1e2a2e210_ScopeChecker::_method_find_fn(jule::Str _50430_ident,jule::Bool _50442_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_50430_ident,_50442_cpp_linked);
}



jule::Ref<_1e2a1e563_Trait> _1e2a2e210_ScopeChecker::_method_find_trait(jule::Str _51333_ident) {
	return (*this)._field_s->_method_find_trait(_51333_ident);
}



jule::Ref<_1e2a21d4b_Enum> _1e2a2e210_ScopeChecker::_method_find_enum(jule::Str _52232_ident) {
	return (*this)._field_s->_method_find_enum(_52232_ident);
}



jule::Bool _1e2a2e210_ScopeChecker::_method_is_unsafe(void) {
	jule::Ref<_1e2a2e210_ScopeChecker> _53017_scope = this->self;
	_julec_label_iter:;
	if (_53017_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (jule::real(_53017_scope->_field_parent)) {
		_53017_scope=_53017_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



jule::Bool _1e2a2e210_ScopeChecker::_method_is_root(void) {
	return (!(jule::real((*this)._field_parent))) || jule::real((*this)._field_owner);
}



jule::Ref<_1e2a2e210_ScopeChecker> _1e2a2e210_ScopeChecker::_method_get_root(void) {
	jule::Ref<_1e2a2e210_ScopeChecker> _55217_root = this->self;
	while (jule::real(_55217_root->_field_parent) && (!(jule::real(_55217_root->_field_owner)))) {
		{
			_55217_root=_55217_root->_field_parent;
		}
	_iter_next_4348257808:;
	}
	_iter_end_4348257808:;
	return _55217_root;
}



jule::Ref<_1e2a2e210_Label> _1e2a2e210_ScopeChecker::_method_find_label(jule::Str _56229_ident) {
	{
		auto expr = (*this)._field_scope->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4348262592:;
		if (it != expr.end()) {
			jule::Any _1e2a2e210_st = *it;
			{
				{
					auto _match_expr{ _1e2a2e210_st };
					if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Label>>())) { goto _case_end_4348263856; }
					_case_begin_4348263856:;
					{
						jule::Ref<_1e2a2e210_Label> _56625_label = _1e2a2e210_st.operator jule::Ref<_1e2a2e210_Label>();
						if (_56625_label->_field_ident == _56229_ident) {
							return _56625_label;
						}
					}
					goto _match_end_4348264272;
					_case_end_4348263856:;
					_match_end_4348264272:;
				}
			}
			_iter_next_4348262592:;
			++it;
			goto _iter_begin_4348262592;
		}
		_iter_end_4348262592:;
	}
	return jule::new_ref<_1e2a2e210_Label>();
}



jule::Ref<_1e2a2e210_ScopeLabel> _1e2a2e210_ScopeChecker::_method_find_label_scope(jule::Str _57836_ident) {
	jule::Ref<_1e2a2e210_ScopeLabel> _57917_label = this->self->_method_find_label_all(_57836_ident);
	if (jule::real(_57917_label) && ((_57917_label->_field_scope).alloc == (this->self).alloc)) {
		return _57917_label;
	}
	return jule::new_ref<_1e2a2e210_ScopeLabel>();
}



jule::Ref<_1e2a2e210_ScopeLabel> _1e2a2e210_ScopeChecker::_method_find_label_all(jule::Str _59033_ident) {
	{
		auto expr = (*this)._field_labels.get();
		auto it = expr.begin();
		_iter_begin_4348272704:;
		if (it != expr.end()) {
			jule::Ref<_1e2a2e210_ScopeLabel> _1e2a2e210_lbl = *it;
			{
				if (_1e2a2e210_lbl->_field_label->_field_ident == _59033_ident) {
					return _1e2a2e210_lbl;
				}
			}
			_iter_next_4348272704:;
			++it;
			goto _iter_begin_4348272704;
		}
		_iter_end_4348272704:;
	}
	return jule::new_ref<_1e2a2e210_ScopeLabel>();
}



jule::Bool _1e2a2e210_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _60238_itself,jule::Str _60255_ident) {
	jule::Ref<_1ba80e105_Var> _60313_v = (*this)._method_find_var(_60255_ident,false);
	if (jule::real(_60313_v) && (((jule::Uintptr)((_60313_v).alloc)) != _60238_itself)) {
		if ((!(jule::real(_60313_v->_field_scope)))) {
			return false;
		}
		return ((_60313_v->_field_scope).alloc == ((*this)._field_scope).alloc) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	jule::Ref<_1a2db8ce3_TypeAlias> _61113_ta = (*this)._method_find_type_alias(_60255_ident,false);
	if (jule::real(_61113_ta) && (((jule::Uintptr)((_61113_ta).alloc)) != _60238_itself)) {
		if ((!(jule::real(_61113_ta->_field_scope)))) {
			return false;
		}
		return ((_61113_ta->_field_scope).alloc == ((*this)._field_tree).alloc) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	return false;
}



void _1e2a2e210_ScopeChecker::_method_check_var_decl(jule::Ref<_1e16025cb_VarDecl> _62238_decl) {
	jule::Ref<_1ba80e105_Var> _62317_v = _1e28b6a59_build_var(_62238_decl);
	_62317_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars=jule::append(this->self->_field_table->_field_vars,jule::Slice<jule::Ref<_1ba80e105_Var>>({_62317_v}));
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_62317_v)}));
	});
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_62317_v).alloc)),_62317_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_62317_v->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_62317_v->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_var_decl(_62317_v,this->self);
	if ((!(_62317_v->_method_is_type_inferred())) && ((!(jule::real(_62317_v->_field_kind))) || (!(jule::real(_62317_v->_field_kind->_field_kind))))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_62317_v,this->self);
}



void _1e2a2e210_ScopeChecker::_method_check_type_alias_decl(jule::Ref<_1e16025cb_TypeAliasDecl> _64445_decl) {
	jule::Ref<_1a2db8ce3_TypeAlias> _64517_ta = _1e28b6a59_build_type_alias(_64445_decl);
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_64517_ta).alloc)),_64517_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_64517_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_64517_ta->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_type_alias_decl(_64517_ta,this->self);
	this->self->_field_table->_field_type_aliases=jule::append(this->self->_field_table->_field_type_aliases,jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>({_64517_ta}));
}



jule::Ref<_1e2a2e210_Scope> _1e2a2e210_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_1e2a2e210_Scope>(new( std::nothrow ) _1e2a2e210_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



void _1e2a2e210_ScopeChecker::_method_check_child_ssc(jule::Ref<_1e16025cb_ScopeTree> _66139_tree,jule::Ref<_1e2a2e210_Scope> _66161_s,jule::Ref<_1e2a2e210_ScopeChecker> _66176_ssc) {
	_66176_ssc->_field_parent=this->self;
	_66176_ssc->_method_check(_66139_tree,_66161_s);
}



jule::Ref<_1e2a2e210_Scope> _1e2a2e210_ScopeChecker::_method_check_child_sc(jule::Ref<_1e16025cb_ScopeTree> _66638_tree,jule::Ref<_1e2a2e210_ScopeChecker> _66660_ssc) {
	jule::Ref<_1e2a2e210_Scope> _66717_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_66638_tree,_66717_s,_66660_ssc);
	return _66717_s;
}



jule::Ref<_1e2a2e210_Scope> _1e2a2e210_ScopeChecker::_method_check_child(jule::Ref<_1e16025cb_ScopeTree> _67235_tree) {
	jule::Ref<_1e2a2e210_ScopeChecker> _67317_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_67235_tree,_67317_ssc);
}



void _1e2a2e210_ScopeChecker::_method_check_anon_scope(jule::Ref<_1e16025cb_ScopeTree> _67740_tree) {
	jule::Ref<_1e2a2e210_Scope> _67817_s = this->self->_method_check_child(_67740_tree);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_67817_s)}));
}



jule::Bool _1e2a2e210_ScopeChecker::_method_try_call_recover(jule::Ref<_1a2c74a6c_Data> _68240_d) {
	{
		auto _match_expr{ _68240_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Recover>>())) { goto _case_end_4348344112; }
		goto _match_end_4348343744;
		_case_end_4348344112:;
		_case_begin_4348343248:;
		{
			return false;
		}
		goto _match_end_4348343744;
		_case_end_4348343248:;
		_match_end_4348343744:;
	}
	jule::Ref<_1e2a2e210_Recover> _68817_rec = _68240_d->_field_model.operator jule::Ref<_1e2a2e210_Recover>();
	_68817_rec->_field_handler=_68240_d->_field_kind->_method_fnc();
	_68817_rec->_field_scope=jule::new_struct<_1e2a2e210_Scope>(new( std::nothrow ) _1e2a2e210_Scope());
	_68817_rec->_field_scope_owner=this->self->_method_get_root()->_field_owner;
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_68817_rec)}));
	this->self->_field_tree->_field_stmts=this->self->_field_tree->_field_stmts.slice(this->self->_field_i + 1LL);
	this->self->_field_scope=_68817_rec->_field_scope;
	this->self->_method_check_tree();
	return true;
}



void _1e2a2e210_ScopeChecker::_method_check_expr(jule::Ref<_1e16025cb_Expr> _70134_expr) {
	jule::Ref<_1a2c74a6c_Data> _70217_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_70134_expr);
	if ((!(jule::real(_70217_d)))) {
		return;
	}
	if (_70134_expr->_method_is_fn_call()) {
		jule::Bool _70817_ok = this->self->_method_try_call_recover(_70217_d);
		if (_70817_ok) {
			return;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_70217_d)}));
}



jule::Ref<_1e2a2e210_If> _1e2a2e210_ScopeChecker::_method_check_if(jule::Ref<_1e16025cb_If> _71732_i) {
	jule::Ref<_1e2a2e210_Scope> _71817_s = this->self->_method_check_child(_71732_i->_field_scope);
	jule::Ref<_1a2c74a6c_Data> _72017_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_71732_i->_field_expr);
	if ((!(jule::real(_72017_d)))) {
		return jule::new_ref<_1e2a2e210_If>();
	}
	jule::Ref<_1a2db8ce3_Prim> _72517_prim = _72017_d->_field_kind->_method_prim();
	if ((!(jule::real(_72517_prim)))) {
		jule::Ref<_1a2db8ce3_Ref> _72721_ref = _72017_d->_field_kind->_method_ref();
		if ((!(jule::real(_72721_ref)))) {
			this->self->_field_s->_method_push_err(_71732_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1e2a2e210_If>();
		}
		_72517_prim=_72721_ref->_field_elem->_method_prim();
		if ((!(jule::real(_72517_prim)))) {
			this->self->_field_s->_method_push_err(_71732_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1e2a2e210_If>();
		}
	}
	if ((!(_72517_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_71732_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e2a2e210_If>();
	}
	return jule::new_struct<_1e2a2e210_If>(new( std::nothrow ) _1e2a2e210_If(_72017_d->_field_model,_71817_s));
}



jule::Ref<_1e2a2e210_Else> _1e2a2e210_ScopeChecker::_method_check_else(jule::Ref<_1e16025cb_Else> _75134_e) {
	jule::Ref<_1e2a2e210_Scope> _75217_s = this->self->_method_check_child(_75134_e->_field_scope);
	return jule::new_struct<_1e2a2e210_Else>(new( std::nothrow ) _1e2a2e210_Else(_75217_s));
}



void _1e2a2e210_ScopeChecker::_method_check_conditional(jule::Ref<_1e16025cb_Conditional> _75841_conditional) {
	jule::Ref<_1e2a2e210_Conditional> _75917_c = jule::new_struct<_1e2a2e210_Conditional>(new( std::nothrow ) _1e2a2e210_Conditional());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_75917_c)}));
	_75917_c->_field_elifs=jule::Slice<jule::Ref<_1e2a2e210_If>>::alloc(static_cast<jule::I64>(_75841_conditional->_field_tail.len() + 1LL));
	_75917_c->_field_elifs[0LL]=this->self->_method_check_if(_75841_conditional->_field_head);
	{
		auto expr = _75841_conditional->_field_tail;
		auto it = expr.begin();
		_iter_begin_4348393616:;
		if (it != expr.end()) {
			jule::Int _1e2a2e210_i = it - expr.begin();
			jule::Ref<_1e16025cb_If> _1e2a2e210_elif = *it;
			{
				_75917_c->_field_elifs[_1e2a2e210_i + 1LL]=this->self->_method_check_if(_1e2a2e210_elif);
			}
			_iter_next_4348393616:;
			++it;
			_1e2a2e210_i++;
			goto _iter_begin_4348393616;
		}
		_iter_end_4348393616:;
	}
	if (jule::real(_75841_conditional->_field_default)) {
		_75917_c->_field_default=this->self->_method_check_else(_75841_conditional->_field_default);
	}
}



jule::Ref<_1e2a2e210_Scope> _1e2a2e210_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _77439_it,jule::Ref<_1e16025cb_ScopeTree> _77456_tree,jule::Ref<_1e2a2e210_ScopeChecker> _77478_ssc) {
	_77478_ssc->_field_it=_77439_it;
	return this->self->_method_check_child_sc(_77456_tree,_77478_ssc);
}



jule::Ref<_1e2a2e210_Scope> _1e2a2e210_ScopeChecker::_method_check_iter_scope(jule::Uintptr _77936_it,jule::Ref<_1e16025cb_ScopeTree> _77953_tree) {
	jule::Ref<_1e2a2e210_ScopeChecker> _78017_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_77936_it,_77953_tree,_78017_ssc);
}



void _1e2a2e210_ScopeChecker::_method_check_inf_iter(jule::Ref<_1e16025cb_Iter> _78438_it) {
	jule::Ref<_1e2a2e210_InfIter> _78517_kind = jule::new_struct<_1e2a2e210_InfIter>(new( std::nothrow ) _1e2a2e210_InfIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_78517_kind)}));
	_78517_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_78517_kind).alloc)),_78438_it->_field_scope);
}



void _1e2a2e210_ScopeChecker::_method_check_while_iter(jule::Ref<_1e16025cb_Iter> _79240_it) {
	jule::Ref<_1e16025cb_WhileKind> _79317_wh = _79240_it->_field_kind.operator jule::Ref<_1e16025cb_WhileKind>();
	if ((!(jule::real(_79317_wh->_field_expr))) && (_79317_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_79240_it);
		return;
	}
	jule::Ref<_1e2a2e210_WhileIter> _79917_kind = jule::new_struct<_1e2a2e210_WhileIter>(new( std::nothrow ) _1e2a2e210_WhileIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_79917_kind)}));
	_79917_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_79917_kind).alloc)),_79240_it->_field_scope);
	if (jule::real(_79317_wh->_field_expr)) {
		jule::Ref<_1a2c74a6c_Data> _80621_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_79317_wh->_field_expr);
		if ((!(jule::real(_80621_d)))) {
			return;
		}
		jule::Ref<_1a2db8ce3_Prim> _81117_prim = _80621_d->_field_kind->_method_prim();
		if ((!(jule::real(_81117_prim)))) {
			this->self->_field_s->_method_push_err(_79240_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		if ((!(_81117_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_79240_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		_79917_kind->_field_expr=_80621_d->_field_model;
	}
	if (_79317_wh->_method_is_while_next()) {
		if ((!(_1e2a2e210_is_valid_ast_st_for_next_st(_79317_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_79317_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			return;
		}
		jule::I64 _83117_n = this->self->_field_scope->_field_stmts.len();
		this->self->_method_check_node(_79317_wh->_field_next);
		if (_83117_n < this->self->_field_scope->_field_stmts.len()) {
			jule::Any _83425_st = this->self->_field_scope->_field_stmts[_83117_n];
			this->self->_field_scope->_field_stmts=this->self->_field_scope->_field_stmts.slice(0LL,_83117_n);
			if ((!(_1e2a2e210_is_valid_st_for_next_st(_83425_st)))) {
				this->self->_field_s->_method_push_err(_79317_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			}
			_79917_kind->_field_next=_83425_st;
		}
	}
}



void _1e2a2e210_ScopeChecker::_method_check_range_iter(jule::Ref<_1e16025cb_Iter> _84540_it) {
	jule::Ref<_1e16025cb_RangeKind> _84617_rang = _84540_it->_field_kind.operator jule::Ref<_1e16025cb_RangeKind>();
	jule::Ref<_1a2c74a6c_Data> _84817_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_84617_rang->_field_expr);
	if ((!(jule::real(_84817_d)))) {
		return;
	}
	jule::Ref<_1e2a2e210_RangeIter> _85317_kind = jule::new_struct<_1e2a2e210_RangeIter>(new( std::nothrow ) _1e2a2e210_RangeIter(_84817_d,jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1ba80e105_Var>(),jule::Ref<_1ba80e105_Var>()));
	_1a2c73c9c_RangeChecker _85717_rc = _1a2c73c9c_RangeChecker(this->self,_84617_rang,_85317_kind,_84817_d);
	jule::Bool _86313_ok = _85717_rc._method_check();
	if ((!(_86313_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_85317_kind)}));
	jule::Ref<_1e2a2e210_ScopeChecker> _87017_ssc = this->self->_method_new_child_checker();
	if (jule::real(_85317_kind->_field_key_a)) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_85317_kind->_field_key_a->_field_ident)) {
			this->self->_field_s->_method_push_err(_85317_kind->_field_key_a->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_85317_kind->_field_key_a->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
		}
		_87017_ssc->_field_table->_field_vars=jule::append(_87017_ssc->_field_table->_field_vars,jule::Slice<jule::Ref<_1ba80e105_Var>>({_85317_kind->_field_key_a}));
	}
	if (jule::real(_85317_kind->_field_key_b)) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_85317_kind->_field_key_b->_field_ident)) {
			this->self->_field_s->_method_push_err(_85317_kind->_field_key_b->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_85317_kind->_field_key_b->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
		}
		_87017_ssc->_field_table->_field_vars=jule::append(_87017_ssc->_field_table->_field_vars,jule::Slice<jule::Ref<_1ba80e105_Var>>({_85317_kind->_field_key_b}));
	}
	_85317_kind->_field_scope=this->self->_method_check_iter_scope_sc(((jule::Uintptr)((_85317_kind).alloc)),_84540_it->_field_scope,_87017_ssc);
}



void _1e2a2e210_ScopeChecker::_method_check_iter(jule::Ref<_1e16025cb_Iter> _89134_it) {
	if (_89134_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_89134_it);
		return;
	}
	{
		auto _match_expr{ _89134_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_WhileKind>>())) { goto _case_end_4348502688; }
		_case_begin_4348502688:;
		{
			this->self->_method_check_while_iter(_89134_it);
		}
		goto _match_end_4348499776;
		_case_end_4348502688:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_RangeKind>>())) { goto _case_end_4348502176; }
		_case_begin_4348502176:;
		{
			this->self->_method_check_range_iter(_89134_it);
		}
		goto _match_end_4348499776;
		_case_end_4348502176:;
		_case_begin_4348500016:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_4348499776;
		_case_end_4348500016:;
		_match_end_4348499776:;
	}
}



jule::Bool _1e2a2e210_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _90442_it) {
	jule::Ref<_1e2a2e210_ScopeChecker> _90517_scope = this->self;
	_julec_label_iter:;
	if (_90517_scope->_field_it == _90442_it) {
		return true;
	}
	if (jule::real(_90517_scope->_field_parent)) {
		_90517_scope=_90517_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



jule::Bool _1e2a2e210_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _92043_ptr) {
	jule::Ref<_1e2a2e210_ScopeChecker> _92117_scope = this->self;
	_julec_label_iter:;
	if (_92117_scope->_field_it == _92043_ptr) {
		return true;
	}
	if (_92117_scope->_field_cse != 0LL) {
		jule::Uintptr _92917_mtch = ((jule::Uintptr)((((_1e2a2e210_Case*)(_92117_scope->_field_cse))->_field_owner).alloc));
		if (_92917_mtch == _92043_ptr) {
			return true;
		}
	}
	if (jule::real(_92117_scope->_field_parent)) {
		_92117_scope=_92117_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



jule::Ref<_1e2a2e210_ContSt> _1e2a2e210_ScopeChecker::_method_check_cont_valid_scope(jule::Ref<_1e16025cb_ContSt> _94341_c) {
	if (_94341_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_1e2a2e210_ContSt>(new( std::nothrow ) _1e2a2e210_ContSt());
	}
	_1e2a2e210_ScopeChecker _94817_scope = (*this);
	_julec_label_iter:;
	{
		if (!((((_94817_scope._field_it == 0LL) && jule::real(_94817_scope._field_parent)) && (!(jule::real(_94817_scope._field_owner)))))) { goto _case_end_4348526720; }
		_case_begin_4348526720:;
		{
			_94817_scope=_94817_scope._field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4348526560;
		_case_end_4348526720:;
		if (!((_94817_scope._field_it != 0LL))) { goto _case_end_4348526832; }
		_case_begin_4348526832:;
		{
			return jule::new_struct<_1e2a2e210_ContSt>(new( std::nothrow ) _1e2a2e210_ContSt(_94817_scope._field_it));
		}
		goto _match_end_4348526560;
		_case_end_4348526832:;
		_match_end_4348526560:;
	}
	(*this)._field_s->_method_push_err(_94341_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>({}));
	return jule::new_ref<_1e2a2e210_ContSt>();
}



void _1e2a2e210_ScopeChecker::_method_check_cont(jule::Ref<_1e16025cb_ContSt> _96330_c) {
	jule::Ref<_1e2a2e210_ContSt> _96417_cont = this->self->_method_check_cont_valid_scope(_96330_c);
	if ((!(jule::real(_96417_cont)))) {
		return;
	}
	if (_96330_c->_field_label._field_id != 0LLU) {
		jule::Ref<_1e2a2e210_ScopeLabel> _97021_label = _1e2a2e210_find_label_parent(_96330_c->_field_label._field_kind,this->self->_field_parent);
		if ((!(jule::real(_97021_label)))) {
			this->self->_field_s->_method_push_err(_96330_c->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_96330_c->_field_label._field_kind)}));
			return;
		}
		_97021_label->_field_used=true;
		if ((_97021_label->_field_pos + 1LL) >= _97021_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_96330_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _98317_i = _97021_label->_field_pos + 1LL;
		if (_98317_i >= _97021_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_96330_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		} else {
			jule::Any _98725_st = _97021_label->_field_scope->_field_scope->_field_stmts[_98317_i];
			{
				auto _match_expr{ _98725_st };
				if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_InfIter>>())) { goto _case_end_4348554640; }
				_case_begin_4348554640:;
				{
					_96417_cont->_field_it=((jule::Uintptr)((_98725_st.operator jule::Ref<_1e2a2e210_InfIter>()).alloc));
				}
				goto _match_end_4348552272;
				_case_end_4348554640:;
				if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_RangeIter>>())) { goto _case_end_4348552656; }
				_case_begin_4348552656:;
				{
					_96417_cont->_field_it=((jule::Uintptr)((_98725_st.operator jule::Ref<_1e2a2e210_RangeIter>()).alloc));
				}
				goto _match_end_4348552272;
				_case_end_4348552656:;
				if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_WhileIter>>())) { goto _case_end_4348552752; }
				_case_begin_4348552752:;
				{
					_96417_cont->_field_it=((jule::Uintptr)((_98725_st.operator jule::Ref<_1e2a2e210_WhileIter>()).alloc));
				}
				goto _match_end_4348552272;
				_case_end_4348552752:;
				_case_begin_4348549136:;
				{
					this->self->_field_s->_method_push_err(_96330_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4348552272;
				_case_end_4348549136:;
				_match_end_4348552272:;
			}
		}
	}
	if (_96417_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_96417_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_96330_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_96417_cont)}));
}



void _1e2a2e210_ScopeChecker::_method_check_label(jule::Ref<_1e16025cb_LabelSt> _100635_l) {
	if (jule::real(this->self->_method_find_label(_100635_l->_field_ident))) {
		this->self->_field_s->_method_push_err(_100635_l->_field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_100635_l->_field_ident)}));
		return;
	}
	jule::Ref<_1e2a2e210_Label> _101217_label = jule::new_struct<_1e2a2e210_Label>(new( std::nothrow ) _1e2a2e210_Label(_100635_l->_field_ident));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_101217_label)}));
	this->self->_field_labels=jule::append(this->self->_field_labels.get(),jule::Slice<jule::Ref<_1e2a2e210_ScopeLabel>>({jule::new_struct<_1e2a2e210_ScopeLabel>(new( std::nothrow ) _1e2a2e210_ScopeLabel(_100635_l->_field_token,_101217_label,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL),this->self,jule::Bool()))}));
}



void _1e2a2e210_ScopeChecker::_method_push_goto(jule::Ref<_1e16025cb_GotoSt> _102533_gt) {
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1e2a2e210_GotoSt>(new( std::nothrow ) _1e2a2e210_GotoSt(_102533_gt->_field_label._field_kind)))}));
	this->self->_field_gotos=jule::append(this->self->_field_gotos.get(),jule::Slice<jule::Ref<_1e2a2e210_ScopeGoto>>({jule::new_struct<_1e2a2e210_ScopeGoto>(new( std::nothrow ) _1e2a2e210_ScopeGoto(_102533_gt,this->self,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL)))}));
}



void _1e2a2e210_ScopeChecker::_method_check_postfix(jule::Ref<_1e16025cb_AssignSt> _103737_a) {
	if (_103737_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_103737_a->_field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1e16025cb_Expr> _104317_expr = _103737_a->_field_left[0LL]->_field_expr;
	jule::Ref<_1a2c74a6c_Data> _104417_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_104317_expr);
	if ((!(jule::real(_104417_d)))) {
		return;
	}
	_1e2a2e210_check_assign(this->self->_field_s,_104417_d,jule::new_ref<_1a2c74a6c_Data>(),_103737_a->_field_setter);
	if (jule::real(_104417_d->_field_kind->_method_ptr())) {
		jule::Ref<_1a2db8ce3_Ptr> _105221_ptr = _104417_d->_field_kind->_method_ptr();
		if (_105221_ptr->_method_is_unsafe()) {
			this->self->_field_s->_method_push_err(_103737_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_103737_a->_field_setter._field_kind),jule::Any(_104417_d->_field_kind->_method_to_str())}));
			return;
		}
	} else {
		jule::Ref<_1a2db8ce3_TypeKind> _105821_check_t = _104417_d->_field_kind;
		if (jule::real(_104417_d->_field_kind->_method_ref())) {
			_105821_check_t=_104417_d->_field_kind->_method_ref()->_field_elem;
		}
		if ((!(jule::real(_105821_check_t->_method_prim()))) || (!(_1a44da204_is_num(_105821_check_t->_method_prim()->_field_kind)))) {
			this->self->_field_s->_method_push_err(_103737_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_103737_a->_field_setter._field_kind),jule::Any(_104417_d->_field_kind->_method_to_str())}));
			return;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1e2a2e210_Postfix>(new( std::nothrow ) _1e2a2e210_Postfix(_104417_d->_field_model,_103737_a->_field_setter._field_kind)))}));
}



jule::Bool _1e2a2e210_ScopeChecker::_method_is_new_assign_ident(jule::Str _107538_ident) {
	if (_1e15a2bb9_is_ignore_ident(_107538_ident) || (_107538_ident == jule::Str())) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_107538_ident,false) == nullptr;
}



void _1e2a2e210_ScopeChecker::_method_check_single_assign(jule::Ref<_1e16025cb_AssignSt> _108343_a) {
	jule::Ref<_1a2c74a6c_Data> _108417_l = jule::new_ref<_1a2c74a6c_Data>();
	if ((!(_1e15a2bb9_is_ignore_ident(_108343_a->_field_left[0LL]->_field_ident)))) {
		jule::Ref<_1e16025cb_Expr> _108721_expr = _108343_a->_field_left[0LL]->_field_expr;
		_108417_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_108721_expr);
		if ((!(jule::real(_108417_l)))) {
			return;
		}
	}
	jule::Ref<_1a2c74a6c_Eval> _109417_eval = ((jule::real(_108417_l)) ? (this->self->_field_s->_method_evalp(this->self,_108417_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
	jule::Ref<_1a2c74a6c_Data> _109917_r = _109417_eval->_method_eval_expr(_108343_a->_field_right);
	if ((!(jule::real(_109917_r)))) {
		return;
	}
	if ((!(jule::real(_108417_l)))) {
		if (_109917_r->_field_kind->_method_void()) {
			this->self->_field_s->_method_push_err(_108343_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_109917_r)}));
		return;
	}
	if ((!(_1e2a2e210_check_assign(this->self->_field_s,_108417_l,_109917_r,_108343_a->_field_setter)))) {
		return;
	}
	if (jule::real(_109917_r->_field_kind->_method_tup())) {
		this->self->_field_s->_method_push_err(_108343_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1e2a2e210_Assign>(new( std::nothrow ) _1e2a2e210_Assign(_108417_l->_field_model,_109917_r->_field_model,_108343_a->_field_setter._field_kind)))}));
	if (_108343_a->_field_setter._field_kind != jule::Str("=", 1)) {
		_108343_a->_field_setter._field_kind=_108343_a->_field_setter._field_kind.slice(0LL,_108343_a->_field_setter._field_kind.len() - 1LL);
		_1a2c74a6c_BinopSolver _113121_solver = _1a2c74a6c_BinopSolver(jule::new_struct_ref<_1a2c74a6c_Eval>(new( std::nothrow ) _1a2c74a6c_Eval(this->self->_field_s,this->self,jule::Ref<_1a2db8ce3_TypeKind>(),this->self->_method_is_unsafe(),jule::Bool(),jule::Ref<_1ba80e105_Var>())),jule::Ref<_1a2c74a6c_Data>(),jule::Ref<_1a2c74a6c_Data>(),_108343_a->_field_setter);
		_109917_r=_113121_solver._method_solve_explicit(_108417_l,_109917_r);
		if ((!(jule::real(_109917_r)))) {
			return;
		}
		_108343_a->_field_setter._field_kind+=jule::Str("=", 1);
		return;
	}
	_1a2c73c9c_AssignTypeChecker _114817_checker = _1a2c73c9c_AssignTypeChecker(this->self->_field_s,_108417_l->_field_kind,_109917_r,_108343_a->_field_setter,true);
	_114817_checker._method_check();
}



void _1e2a2e210_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ref<_1e2a2e210_MultiAssign> _115857_st,jule::Ref<_1e16025cb_AssignSt> _115913_a,jule::Ref<_1e16025cb_AssignLeft> _115931_lexpr,jule::Ref<_1a2c74a6c_Data> _115955_l,jule::Ref<_1a2c74a6c_Data> _115969_r) {
	if (_1e15a2bb9_is_ignore_ident(_115931_lexpr->_field_ident)) {
		if (_115969_r->_field_kind->_method_void()) {
			(*this)._field_s->_method_push_err(_115913_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		_115857_st->_field_l=jule::append(_115857_st->_field_l,jule::Slice<jule::Any>({jule::Any(nullptr)}));
		return;
	}
	if (_115913_a->_field_declarative && (*this)._method_is_new_assign_ident(_115931_lexpr->_field_ident)) {
		jule::Ref<_1ba80e105_Var> _117121_v = jule::new_struct<_1ba80e105_Var>(new( std::nothrow ) _1ba80e105_Var((*this)._field_scope,_115931_lexpr->_field_token,_115931_lexpr->_field_ident,jule::Bool(),jule::Bool(),_115931_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_115931_lexpr->_field_reference,jule::Str(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::new_struct<_1a2c74a6c_Value>(new( std::nothrow ) _1a2c74a6c_Value(_115913_a->_field_right,_115969_r)),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Slice<jule::Ref<_1e16025cb_Directive>>(),jule::Ref<_1ba80e105_IterRelation>(),jule::Slice<jule::Ref<_1ba80e105_Var>>()));
		(*this)._field_s->_method_check_var(_117121_v);
		_115857_st->_field_l=jule::append(_115857_st->_field_l,jule::Slice<jule::Any>({jule::Any(_117121_v)}));
		(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ref<_1ba80e105_Var>>({_117121_v}));
		(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_117121_v)}));
		return;
	}
	if (_115931_lexpr->_field_mutable || _115931_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_115931_lexpr->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_115931_lexpr->_field_ident)}));
		(*this)._field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if ((!(_1e2a2e210_check_assign((*this)._field_s,_115955_l,_115969_r,_115913_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_115955_l->_field_mutable,false,_115955_l->_field_kind,_115969_r,_115913_a->_field_setter);
	_1a2c73c9c_AssignTypeChecker _120617_checker = _1a2c73c9c_AssignTypeChecker((*this)._field_s,_115955_l->_field_kind,_115969_r,_115913_a->_field_setter,true);
	_120617_checker._method_check();
	_115857_st->_field_l=jule::append(_115857_st->_field_l,jule::Slice<jule::Any>({_115955_l->_field_model}));
}



void _1e2a2e210_ScopeChecker::_method_check_ret_multi_assign(jule::Ref<_1e16025cb_AssignSt> _121846_a) {
	jule::Ref<_1a2c74a6c_Data> _121917_rd = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_121846_a->_field_right);
	if ((!(jule::real(_121917_rd)))) {
		return;
	}
	jule::Slice<jule::Ref<_1a2c74a6c_Data>> _122417_r = _1e2a2e210_get_datas_from_tuple_data(_121917_rd);
	{
		if (!((_121846_a->_field_left.len() > _122417_r.len()))) { goto _case_end_4348701520; }
		_case_begin_4348701520:;
		{
			this->self->_field_s->_method_push_err(_121846_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4348701360;
		_case_end_4348701520:;
		if (!((_121846_a->_field_left.len() < _122417_r.len()))) { goto _case_end_4348701632; }
		_case_begin_4348701632:;
		{
			this->self->_field_s->_method_push_err(_121846_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4348701360;
		_case_end_4348701632:;
		_match_end_4348701360:;
	}
	jule::Ref<_1e2a2e210_MultiAssign> _123617_st = jule::new_struct<_1e2a2e210_MultiAssign>(new( std::nothrow ) _1e2a2e210_MultiAssign(jule::Slice<jule::Any>(),_121917_rd->_field_model));
	if ((!(jule::real(_121917_rd->_field_kind->_method_tup())))) {
		_123617_st->_field_r=jule::Any(jule::new_struct<_1e2a30c17_TupleExprModel>(new( std::nothrow ) _1e2a30c17_TupleExprModel(_122417_r)));
	}
	{
		auto expr = _121846_a->_field_left;
		auto it = expr.begin();
		_iter_begin_4348710624:;
		if (it != expr.end()) {
			jule::Int _1e2a2e210_i = it - expr.begin();
			{
				jule::Ref<_1e16025cb_AssignLeft> _124521_lexpr = _121846_a->_field_left[_1e2a2e210_i];
				jule::Ref<_1a2c74a6c_Data> _124621_l = jule::new_ref<_1a2c74a6c_Data>();
				if ((!(_1e15a2bb9_is_ignore_ident(_124521_lexpr->_field_ident))) && ((!(_121846_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_124521_lexpr->_field_ident))))) {
					_124621_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_124521_lexpr->_field_expr);
					if ((!(jule::real(_124621_l)))) {
						goto _iter_next_4348710624;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_123617_st,_121846_a,_124521_lexpr,_124621_l,_122417_r[_1e2a2e210_i]);
			}
			_iter_next_4348710624:;
			++it;
			_1e2a2e210_i++;
			goto _iter_begin_4348710624;
		}
		_iter_end_4348710624:;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_123617_st)}));
}



void _1e2a2e210_ScopeChecker::_method_check_multi_assign(jule::Ref<_1e16025cb_AssignSt> _126242_a) {
	{
		auto _match_expr{ _126242_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_FnCallExpr>>())) { goto _case_end_4348724288; }
		_case_begin_4348724288:;
		{
			this->self->_method_check_ret_multi_assign(_126242_a);
			return;
		}
		goto _match_end_4348724992;
		_case_end_4348724288:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_UnsafeExpr>>())) { goto _case_end_4348725120; }
		_case_begin_4348725120:;
		{
			{
				auto _match_expr{ _126242_a->_field_right->_field_kind.operator jule::Ref<_1e16025cb_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ref<_1e16025cb_FnCallExpr>>())) { goto _case_end_4348725264; }
				_case_begin_4348725264:;
				{
					this->self->_method_check_ret_multi_assign(_126242_a);
					return;
				}
				goto _match_end_4348728800;
				_case_end_4348725264:;
				_match_end_4348728800:;
			}
		}
		goto _match_end_4348724992;
		_case_end_4348725120:;
		_match_end_4348724992:;
	}
	jule::Slice<jule::Any> _127617_right = _1e2a2e210_get_expr_models(_126242_a->_field_right->_field_kind);
	{
		if (!((_126242_a->_field_left.len() > _127617_right.len()))) { goto _case_end_4348731488; }
		_case_begin_4348731488:;
		{
			this->self->_field_s->_method_push_err(_126242_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4348731280;
		_case_end_4348731488:;
		if (!((_126242_a->_field_left.len() < _127617_right.len()))) { goto _case_end_4348731584; }
		_case_begin_4348731584:;
		{
			this->self->_field_s->_method_push_err(_126242_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4348731280;
		_case_end_4348731584:;
		_match_end_4348731280:;
	}
	jule::Ref<_1e2a30c17_TupleExprModel> _128817_right_tuple = jule::new_struct<_1e2a30c17_TupleExprModel>(new( std::nothrow ) _1e2a30c17_TupleExprModel());
	jule::Ref<_1e2a2e210_MultiAssign> _129017_st = jule::new_struct<_1e2a2e210_MultiAssign>(new( std::nothrow ) _1e2a2e210_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_128817_right_tuple)));
	{
		auto expr = _126242_a->_field_left;
		auto it = expr.begin();
		_iter_begin_4348739616:;
		if (it != expr.end()) {
			jule::Int _1e2a2e210_i = it - expr.begin();
			{
				jule::Ref<_1e16025cb_AssignLeft> _129521_lexpr = _126242_a->_field_left[_1e2a2e210_i];
				jule::Ref<_1a2c74a6c_Data> _129621_l = jule::new_ref<_1a2c74a6c_Data>();
				if ((!(_1e15a2bb9_is_ignore_ident(_129521_lexpr->_field_ident))) && ((!(_126242_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_129521_lexpr->_field_ident))))) {
					_129621_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_129521_lexpr->_field_expr);
					if ((!(jule::real(_129621_l)))) {
						goto _iter_next_4348739616;
					}
				}
				jule::Ref<_1e16025cb_Expr> _130621_expr = jule::new_struct<_1e16025cb_Expr>(new( std::nothrow ) _1e16025cb_Expr(_126242_a->_field_right->_field_token,_127617_right[_1e2a2e210_i]));
				jule::Ref<_1a2c74a6c_Eval> _130721_eval = ((jule::real(_129621_l)) ? (this->self->_field_s->_method_evalp(this->self,_129621_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
				jule::Ref<_1a2c74a6c_Data> _131221_r = _130721_eval->_method_eval_expr(_130621_expr);
				if ((!(jule::real(_131221_r)))) {
					goto _iter_next_4348739616;
				}
				_128817_right_tuple->_field_datas=jule::append(_128817_right_tuple->_field_datas,jule::Slice<jule::Ref<_1a2c74a6c_Data>>({_131221_r}));
				this->self->_method___process_end_part_of_multi_assign(_129017_st,_126242_a,_129521_lexpr,_129621_l,_131221_r);
			}
			_iter_next_4348739616:;
			++it;
			_1e2a2e210_i++;
			goto _iter_begin_4348739616;
		}
		_iter_end_4348739616:;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_129017_st)}));
}



void _1e2a2e210_ScopeChecker::_method_check_assign_st(jule::Ref<_1e16025cb_AssignSt> _132539_a) {
	if (_1e15a2bb9_is_postfix_op(_132539_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_132539_a);
		return;
	}
	if ((_132539_a->_field_left.len() == 1LL) && (!(_132539_a->_field_declarative))) {
		this->self->_method_check_single_assign(_132539_a);
		return;
	}
	this->self->_method_check_multi_assign(_132539_a);
}



jule::Ref<_1e2a2e210_Scope> _1e2a2e210_ScopeChecker::_method_check_case_scope(jule::Ref<_1e2a2e210_Case> _133936_c,jule::Ref<_1e16025cb_ScopeTree> _133950_tree) {
	jule::Ref<_1e2a2e210_ScopeChecker> _134017_ssc = this->self->_method_new_child_checker();
	_134017_ssc->_field_cse=((jule::Uintptr)((_133936_c).alloc));
	return this->self->_method_check_child_sc(_133950_tree,_134017_ssc);
}



jule::Ref<_1e2a2e210_Case> _1e2a2e210_ScopeChecker::_method_check_case(jule::Ref<_1e2a2e210_Match> _134534_m,jule::Int _134545_i,jule::Ref<_1e16025cb_Case> _134557_c,jule::Ref<_1a2c74a6c_Data> _134587_expr) {
	jule::Ref<_1e2a2e210_Case> _134617__case = _134534_m->_field_cases[_134545_i];
	_134617__case->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::I64>(_134557_c->_field_exprs.len()));
	jule::Bool _134817_generic_matched = false;
	{
		auto expr = _134557_c->_field_exprs;
		auto it = expr.begin();
		_iter_begin_4348780016:;
		if (it != expr.end()) {
			jule::Int _1e2a2e210_j = it - expr.begin();
			jule::Ref<_1e16025cb_Expr> _1e2a2e210_e = *it;
			{
				if (_134534_m->_field_type_match) {
					jule::Ref<_1a2c74a6c_Eval> _135225_eval = jule::new_struct_ref<_1a2c74a6c_Eval>(new( std::nothrow ) _1a2c74a6c_Eval(this->self->_field_s,this->self,jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Ref<_1ba80e105_Var>()));
					jule::Ref<_1a2c74a6c_Data> _135725_d = _135225_eval->_method_eval(_1e2a2e210_e);
					if (jule::real(_135725_d)) {
						_134617__case->_field_exprs[_1e2a2e210_j]=jule::Any(_135725_d->_field_kind);
						if (_1e2a2e210_count_match_type(_134534_m,_135725_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_1e2a2e210_e->_field_token,jule::Str("type is already checked: @", 26),jule::Slice<jule::Any>({jule::Any(_135725_d->_field_kind->_method_to_str())}));
						}
					}
					if (_134587_expr->_field_kind->_field_generic) {
						_134817_generic_matched=_134817_generic_matched || _134587_expr->_field_kind->_method_equals(_135725_d->_field_kind);
					} else {
						jule::Ref<_1e2a1e563_Trait> _136825_trt = _134587_expr->_field_kind->_method_trt();
						if (jule::real(_136825_trt)) {
							this->self->_field_s->_method_check_type_compatibility(_134587_expr->_field_kind,_135725_d->_field_kind,_1e2a2e210_e->_field_token,false);
						}
					}
					goto _iter_next_4348780016;
				}
				jule::Ref<_1a2c74a6c_Data> _137721_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_1e2a2e210_e);
				if ((!(jule::real(_137721_d)))) {
					goto _iter_next_4348780016;
				}
				_134617__case->_field_exprs[_1e2a2e210_j]=_137721_d->_field_model;
				_1a2c73c9c_AssignTypeChecker _138421_checker = _1a2c73c9c_AssignTypeChecker(this->self->_field_s,_134587_expr->_field_kind,_137721_d,_1e2a2e210_e->_field_token,true);
				_138421_checker._method_check();
			}
			_iter_next_4348780016:;
			++it;
			_1e2a2e210_j++;
			goto _iter_begin_4348780016;
		}
		_iter_end_4348780016:;
	}
	if (((!(_134534_m->_field_type_match)) || (!(_134587_expr->_field_kind->_field_generic))) || _134817_generic_matched) {
		_134617__case->_field_scope=this->self->_method_check_case_scope(_134617__case,_134557_c->_field_scope);
	}
	return _134617__case;
}



void _1e2a2e210_ScopeChecker::_method_check_cases(jule::Ref<_1e16025cb_MatchCase>& _140036_m,jule::Ref<_1e2a2e210_Match> _140055_rm,jule::Ref<_1a2c74a6c_Data> _140071_expr) {
	_140055_rm->_field_cases=jule::Slice<jule::Ref<_1e2a2e210_Case>>::alloc(static_cast<jule::I64>(_140036_m->_field_cases.len()));
	{
		auto expr = _140036_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4348812928:;
		if (it != expr.end()) {
			jule::Int _1e2a2e210_i = it - expr.begin();
			{
				jule::Ref<_1e2a2e210_Case> _140321__case = jule::new_struct<_1e2a2e210_Case>(new( std::nothrow ) _1e2a2e210_Case(_140055_rm,jule::Ref<_1e2a2e210_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_1e2a2e210_Case>()));
				if (_1e2a2e210_i > 0LL) {
					_140055_rm->_field_cases[_1e2a2e210_i - 1LL]->_field_next=_140321__case;
				}
				_140055_rm->_field_cases[_1e2a2e210_i]=_140321__case;
			}
			_iter_next_4348812928:;
			++it;
			_1e2a2e210_i++;
			goto _iter_begin_4348812928;
		}
		_iter_end_4348812928:;
	}
	if (jule::real(_140055_rm->_field_default) && (_140036_m->_field_cases.len() > 0LL)) {
		_140055_rm->_field_cases[_140055_rm->_field_cases.len() - 1LL]->_field_next=_140055_rm->_field_default;
	}
	{
		auto expr = _140036_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4348820816:;
		if (it != expr.end()) {
			jule::Int _1e2a2e210_i = it - expr.begin();
			jule::Ref<_1e16025cb_Case> _1e2a2e210_c = *it;
			{
				this->self->_method_check_case(_140055_rm,_1e2a2e210_i,_1e2a2e210_c,_140071_expr);
			}
			_iter_next_4348820816:;
			++it;
			_1e2a2e210_i++;
			goto _iter_begin_4348820816;
		}
		_iter_end_4348820816:;
	}
}



jule::Ref<_1e2a2e210_Case> _1e2a2e210_ScopeChecker::_method_check_default(jule::Ref<_1e2a2e210_Match> _142337_m,jule::Ref<_1e16025cb_Else> _142352_d) {
	jule::Ref<_1e2a2e210_Case> _142417_def = jule::new_struct<_1e2a2e210_Case>(new( std::nothrow ) _1e2a2e210_Case(_142337_m,jule::Ref<_1e2a2e210_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_1e2a2e210_Case>()));
	_142417_def->_field_scope=this->self->_method_check_case_scope(_142417_def,_142352_d->_field_scope);
	return _142417_def;
}



void _1e2a2e210_ScopeChecker::_method_check_comptime_panic(jule::Ref<_1e2a2e210_Scope>& _143140_s,_1e15a2bb9_Token _143151_error_token) {
	if (_143140_s->_field_stmts.len() != 1LL) {
		return;
	}
	jule::Any _143613_stmt = _143140_s->_field_stmts[0LL];
	{
		auto _match_expr{ _143613_stmt };
		if (!(_match_expr.type_is<jule::Ref<_1a2c74a6c_Data>>())) { goto _case_end_4333427360; }
		_case_begin_4333427360:;
		{
			jule::Ref<_1a2c74a6c_Data> _143917_d = _143613_stmt.operator jule::Ref<_1a2c74a6c_Data>();
			{
				auto _match_expr{ _143917_d->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinPanicCallExprModel>>())) { goto _case_end_4333457552; }
				_case_begin_4333457552:;
				{
					jule::Ref<_1e2a30c17_BuiltinPanicCallExprModel> _144221_m = _143917_d->_field_model.operator jule::Ref<_1e2a30c17_BuiltinPanicCallExprModel>();
					{
						auto _match_expr{ _144221_m->_field_expr };
						if (!(_match_expr.type_is<jule::Ref<_1a37ddd88_Const>>())) { goto _case_end_4333475216; }
						_case_begin_4333475216:;
						{
							jule::Ref<_1a37ddd88_Const> _144525_c = _144221_m->_field_expr.operator jule::Ref<_1a37ddd88_Const>();
							if (_144525_c->_method_is_str()) {
								(*this)._field_s->_method_push_err(_143151_error_token,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any(_144525_c->_method_read_str())}));
							}
						}
						goto _match_end_4333478224;
						_case_end_4333475216:;
						_match_end_4333478224:;
					}
				}
				goto _match_end_4333475056;
				_case_end_4333457552:;
				_match_end_4333475056:;
			}
		}
		goto _match_end_4333457424;
		_case_end_4333427360:;
		_match_end_4333457424:;
	}
}



void _1e2a2e210_ScopeChecker::_method_push_type_match(jule::Ref<_1e2a2e210_Match> _145439_tm,jule::Ref<_1e16025cb_MatchCase>& _145452_m) {
	if (_145439_tm->_field_expr->_field_kind->_field_generic) {
		{
			auto expr = _145439_tm->_field_cases;
			auto it = expr.begin();
			_iter_begin_4333486832:;
			if (it != expr.end()) {
				jule::Int _1e2a2e210_i = it - expr.begin();
				jule::Ref<_1e2a2e210_Case> _1e2a2e210_c = *it;
				{
					if (jule::real(_1e2a2e210_c->_field_scope)) {
						_145439_tm->_field_cases=nullptr;
						_145439_tm->_field_default=_1e2a2e210_c;
						this->self->_method_check_comptime_panic(_1e2a2e210_c->_field_scope,_145452_m->_field_cases[_1e2a2e210_i]->_field_token);
						goto _julec_label_push;
					}
				}
				_iter_next_4333486832:;
				++it;
				_1e2a2e210_i++;
				goto _iter_begin_4333486832;
			}
			_iter_end_4333486832:;
		}
		if (jule::real(_145439_tm->_field_default)) {
			this->self->_method_check_comptime_panic(_145439_tm->_field_default->_field_scope,_145452_m->_field_default->_field_token);
		}
		_145439_tm->_field_cases=nullptr;
	}
	_julec_label_push:;
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_145439_tm)}));
}



void _1e2a2e210_ScopeChecker::_method_check_type_match(jule::Ref<_1e16025cb_MatchCase>& _147641_m) {
	jule::Ref<_1a2c74a6c_Data> _147717_d = this->self->_field_s->_method_eval(this->self)->_method_eval(_147641_m->_field_expr);
	if ((!(jule::real(_147717_d)))) {
		return;
	}
	if ((!(_147717_d->_field_kind->_field_generic)) && (!((jule::real(_147717_d->_field_kind->_method_prim()) && _147717_d->_field_kind->_method_prim()->_method_is_any()) || jule::real(_147717_d->_field_kind->_method_trt())))) {
		this->self->_field_s->_method_push_err(_147641_m->_field_expr->_field_token,jule::Str("type-case must be have <any>, <trait> or <generic> typed expression", 67),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1e2a2e210_Match> _148817_tm = jule::new_struct<_1e2a2e210_Match>(new( std::nothrow ) _1e2a2e210_Match(_147717_d,true,jule::Slice<jule::Ref<_1e2a2e210_Case>>(),jule::Ref<_1e2a2e210_Case>()));
	if (jule::real(_147641_m->_field_default)) {
		_148817_tm->_field_default=this->self->_method_check_default(_148817_tm,_147641_m->_field_default);
	}
	this->self->_method_check_cases(_147641_m,_148817_tm,_147717_d);
	this->self->_method_push_type_match(_148817_tm,_147641_m);
}



void _1e2a2e210_ScopeChecker::_method_check_common_match(jule::Ref<_1e16025cb_MatchCase>& _150143_m) {
	jule::Ref<_1a2c74a6c_Data> _150217_d = jule::new_ref<_1a2c74a6c_Data>();
	if ((!(jule::real(_150143_m->_field_expr)))) {
		_150217_d=jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a37ddd88_Const::_static_method_new_bool(true)));
		_150217_d->_field_model=jule::Any(_150217_d->_field_constant);
	} else {
		_150217_d=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_150143_m->_field_expr);
		if ((!(jule::real(_150217_d)))) {
			return;
		}
	}
	jule::Ref<_1e2a2e210_Match> _151617_mc = jule::new_struct<_1e2a2e210_Match>(new( std::nothrow ) _1e2a2e210_Match(_150217_d,jule::Bool(),jule::Slice<jule::Ref<_1e2a2e210_Case>>(),jule::Ref<_1e2a2e210_Case>()));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_151617_mc)}));
	if (jule::real(_150143_m->_field_default)) {
		_151617_mc->_field_default=this->self->_method_check_default(_151617_mc,_150143_m->_field_default);
	}
	this->self->_method_check_cases(_150143_m,_151617_mc,_150217_d);
}



void _1e2a2e210_ScopeChecker::_method_check_match(jule::Ref<_1e16025cb_MatchCase> _152835_m) {
	if (_152835_m->_field_type_match) {
		this->self->_method_check_type_match(_152835_m);
		return;
	}
	this->self->_method_check_common_match(_152835_m);
}



void _1e2a2e210_ScopeChecker::_method_check_fall(jule::Ref<_1e16025cb_FallSt> _153629_f) {
	if (((*this)._field_cse == 0LL) || (((*this)._field_scope->_field_stmts.len() + 1LL) < (*this)._field_scope->_field_stmts.len())) {
		(*this)._field_s->_method_push_err(_153629_f->_field_token,jule::Str("fallthrough keyword can only useable at end of the case scopes", 62),jule::Slice<jule::Any>({}));
		return;
	}
	_1e2a2e210_Case* _154217__case = ((_1e2a2e210_Case*)((*this)._field_cse));
	if ((!(jule::real(_154217__case->_field_next)))) {
		(*this)._field_s->_method_push_err(_153629_f->_field_token,jule::Str("fallthrough cannot useable at final case", 40),jule::Slice<jule::Any>({}));
		(*this)._field_s->_method_push_suggestion(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>({}));
		return;
	}
	(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1e2a2e210_FallSt>(new( std::nothrow ) _1e2a2e210_FallSt(static_cast<jule::Uintptr>(((jule::Uintptr)((_154217__case->_field_next).alloc))))))}));
}



jule::Ref<_1e2a2e210_BreakSt> _1e2a2e210_ScopeChecker::_method_check_break_with_label(jule::Ref<_1e16025cb_BreakSt> _155442_b) {
	jule::Ref<_1e2a2e210_BreakSt> _155517_brk = this->self->_method_check_plain_break(_155442_b);
	if ((!(jule::real(_155517_brk)))) {
		return jule::new_ref<_1e2a2e210_BreakSt>();
	}
	_155517_brk->_field_it=0LL;
	_155517_brk->_field_mtch=0LL;
	jule::Ref<_1e2a2e210_ScopeLabel> _156517_label = _1e2a2e210_find_label_parent(_155442_b->_field_label._field_kind,this->self->_field_parent);
	if ((!(jule::real(_156517_label)))) {
		this->self->_field_s->_method_push_err(_155442_b->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_155442_b->_field_label._field_kind)}));
		return jule::new_ref<_1e2a2e210_BreakSt>();
	}
	_156517_label->_field_used=true;
	if ((_156517_label->_field_pos + 1LL) >= _156517_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_155442_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e2a2e210_BreakSt>();
	}
	jule::Int _157813_i = _156517_label->_field_pos + 1LL;
	if (_157813_i >= _156517_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_155442_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
	} else {
		jule::Any _158221_st = _156517_label->_field_scope->_field_scope->_field_stmts[_157813_i];
		{
			auto _match_expr{ _158221_st };
			if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_InfIter>>())) { goto _case_end_4333567648; }
			_case_begin_4333567648:;
			{
				_155517_brk->_field_it=((jule::Uintptr)((_158221_st.operator jule::Ref<_1e2a2e210_InfIter>()).alloc));
			}
			goto _match_end_4333565280;
			_case_end_4333567648:;
			if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_RangeIter>>())) { goto _case_end_4333565664; }
			_case_begin_4333565664:;
			{
				_155517_brk->_field_it=((jule::Uintptr)((_158221_st.operator jule::Ref<_1e2a2e210_RangeIter>()).alloc));
			}
			goto _match_end_4333565280;
			_case_end_4333565664:;
			if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_WhileIter>>())) { goto _case_end_4333565760; }
			_case_begin_4333565760:;
			{
				_155517_brk->_field_it=((jule::Uintptr)((_158221_st.operator jule::Ref<_1e2a2e210_WhileIter>()).alloc));
			}
			goto _match_end_4333565280;
			_case_end_4333565760:;
			if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Match>>())) { goto _case_end_4333565856; }
			_case_begin_4333565856:;
			{
				_155517_brk->_field_mtch=((jule::Uintptr)((_158221_st.operator jule::Ref<_1e2a2e210_Match>()).alloc));
			}
			goto _match_end_4333565280;
			_case_end_4333565856:;
			_case_begin_4333562144:;
			{
				this->self->_field_s->_method_push_err(_155442_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4333565280;
			_case_end_4333562144:;
			_match_end_4333565280:;
		}
	}
	if (_155517_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_155517_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_155442_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	if (_155517_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_155517_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_155442_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	return _155517_brk;
}



jule::Ref<_1e2a2e210_BreakSt> _1e2a2e210_ScopeChecker::_method_check_plain_break(jule::Ref<_1e16025cb_BreakSt> _160737_b) {
	jule::Ref<_1e2a2e210_ScopeChecker> _160817_scope = this->self;
	_julec_label_iter:;
	{
		if (!(((((_160817_scope->_field_it == 0LL) && (_160817_scope->_field_cse == 0LL)) && jule::real(_160817_scope->_field_parent)) && (!(jule::real(_160817_scope->_field_owner)))))) { goto _case_end_4333582512; }
		_case_begin_4333582512:;
		{
			_160817_scope=_160817_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4333582272;
		_case_end_4333582512:;
		if (!((_160817_scope->_field_it != 0LL))) { goto _case_end_4333582624; }
		_case_begin_4333582624:;
		{
			return jule::new_struct<_1e2a2e210_BreakSt>(new( std::nothrow ) _1e2a2e210_BreakSt(_160817_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_4333582272;
		_case_end_4333582624:;
		if (!((_160817_scope->_field_cse != 0LL))) { goto _case_end_4333582736; }
		_case_begin_4333582736:;
		{
			return jule::new_struct<_1e2a2e210_BreakSt>(new( std::nothrow ) _1e2a2e210_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(((jule::Uintptr)((((_1e2a2e210_Case*)(_160817_scope->_field_cse))->_field_owner).alloc)))));
		}
		goto _match_end_4333582272;
		_case_end_4333582736:;
		_match_end_4333582272:;
	}
	this->self->_field_s->_method_push_err(_160737_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>({}));
	return jule::new_ref<_1e2a2e210_BreakSt>();
}



void _1e2a2e210_ScopeChecker::_method_check_break(jule::Ref<_1e16025cb_BreakSt> _162631_b) {
	if (_162631_b->_field_label._field_id != 0LLU) {
		jule::Ref<_1e2a2e210_BreakSt> _162821_brk = this->self->_method_check_break_with_label(_162631_b);
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_162821_brk)}));
		return;
	}
	jule::Ref<_1e2a2e210_BreakSt> _163317_brk = this->self->_method_check_plain_break(_162631_b);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_163317_brk)}));
}



void _1e2a2e210_ScopeChecker::_method_check_ret(jule::Ref<_1e16025cb_RetSt> _163733_r) {
	jule::Ref<_1e2a2e210_RetSt> _163817_rt = jule::new_struct<_1e2a2e210_RetSt>(new( std::nothrow ) _1e2a2e210_RetSt());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_163817_rt)}));
	jule::Ref<_1a2c73c9c_RetTypeChecker> _164117_rtc = jule::new_struct<_1a2c73c9c_RetTypeChecker>(new( std::nothrow ) _1a2c73c9c_RetTypeChecker(this->self,this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e16025cb_Expr>>(),jule::Slice<jule::Ref<_1ba80e105_Var>>(),_163733_r->_field_token,jule::Any()));
	jule::Bool _164613_ok = _164117_rtc->_method_check(_163733_r->_field_expr);
	if ((!(_164613_ok))) {
		return;
	}
	if ((!(jule::real(_163733_r->_field_expr))) && (_164117_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_163817_rt->_field_vars=_164117_rtc->_field_vars;
	if (jule::real(_163733_r->_field_expr)) {
		_163817_rt->_field_expr=_164117_rtc->_field_model;
	}
}



void _1e2a2e210_ScopeChecker::_method_check_node(jule::Any _166234_node) {
	{
		auto _match_expr{ _166234_node };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_Comment>>())) { goto _case_end_4333620512; }
		_case_begin_4333620512:;
		{
			goto _match_end_4333619568;
		}
		goto _match_end_4333619568;
		_case_end_4333620512:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_ScopeTree>>())) { goto _case_end_4333620288; }
		_case_begin_4333620288:;
		{
			this->self->_method_check_anon_scope(_166234_node.operator jule::Ref<_1e16025cb_ScopeTree>());
		}
		goto _match_end_4333619568;
		_case_end_4333620288:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_VarDecl>>())) { goto _case_end_4333620640; }
		_case_begin_4333620640:;
		{
			this->self->_method_check_var_decl(_166234_node.operator jule::Ref<_1e16025cb_VarDecl>());
		}
		goto _match_end_4333619568;
		_case_end_4333620640:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TypeAliasDecl>>())) { goto _case_end_4333621104; }
		_case_begin_4333621104:;
		{
			this->self->_method_check_type_alias_decl(_166234_node.operator jule::Ref<_1e16025cb_TypeAliasDecl>());
		}
		goto _match_end_4333619568;
		_case_end_4333621104:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_Expr>>())) { goto _case_end_4333621200; }
		_case_begin_4333621200:;
		{
			this->self->_method_check_expr(_166234_node.operator jule::Ref<_1e16025cb_Expr>());
		}
		goto _match_end_4333619568;
		_case_end_4333621200:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_Conditional>>())) { goto _case_end_4333621504; }
		_case_begin_4333621504:;
		{
			this->self->_method_check_conditional(_166234_node.operator jule::Ref<_1e16025cb_Conditional>());
		}
		goto _match_end_4333619568;
		_case_end_4333621504:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_Iter>>())) { goto _case_end_4333621600; }
		_case_begin_4333621600:;
		{
			this->self->_method_check_iter(_166234_node.operator jule::Ref<_1e16025cb_Iter>());
		}
		goto _match_end_4333619568;
		_case_end_4333621600:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_ContSt>>())) { goto _case_end_4333621696; }
		_case_begin_4333621696:;
		{
			this->self->_method_check_cont(_166234_node.operator jule::Ref<_1e16025cb_ContSt>());
		}
		goto _match_end_4333619568;
		_case_end_4333621696:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_LabelSt>>())) { goto _case_end_4333621792; }
		_case_begin_4333621792:;
		{
			this->self->_method_check_label(_166234_node.operator jule::Ref<_1e16025cb_LabelSt>());
		}
		goto _match_end_4333619568;
		_case_end_4333621792:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_GotoSt>>())) { goto _case_end_4333621888; }
		_case_begin_4333621888:;
		{
			this->self->_method_push_goto(_166234_node.operator jule::Ref<_1e16025cb_GotoSt>());
		}
		goto _match_end_4333619568;
		_case_end_4333621888:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_AssignSt>>())) { goto _case_end_4333621984; }
		_case_begin_4333621984:;
		{
			this->self->_method_check_assign_st(_166234_node.operator jule::Ref<_1e16025cb_AssignSt>());
		}
		goto _match_end_4333619568;
		_case_end_4333621984:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_MatchCase>>())) { goto _case_end_4333622080; }
		_case_begin_4333622080:;
		{
			this->self->_method_check_match(_166234_node.operator jule::Ref<_1e16025cb_MatchCase>());
		}
		goto _match_end_4333619568;
		_case_end_4333622080:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_FallSt>>())) { goto _case_end_4333622176; }
		_case_begin_4333622176:;
		{
			this->self->_method_check_fall(_166234_node.operator jule::Ref<_1e16025cb_FallSt>());
		}
		goto _match_end_4333619568;
		_case_end_4333622176:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_BreakSt>>())) { goto _case_end_4333622272; }
		_case_begin_4333622272:;
		{
			this->self->_method_check_break(_166234_node.operator jule::Ref<_1e16025cb_BreakSt>());
		}
		goto _match_end_4333619568;
		_case_end_4333622272:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_RetSt>>())) { goto _case_end_4333622368; }
		_case_begin_4333622368:;
		{
			this->self->_method_check_ret(_166234_node.operator jule::Ref<_1e16025cb_RetSt>());
		}
		goto _match_end_4333619568;
		_case_end_4333622368:;
		_case_begin_4333619408:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_4333619568;
		_case_end_4333619408:;
		_match_end_4333619568:;
	}
}



void _1e2a2e210_ScopeChecker::_method_check_tree(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_tree->_field_stmts.len(); (this->self->_field_i)++) {
		{
			this->self->_method_check_node(this->self->_field_tree->_field_stmts[this->self->_field_i]);
		}
	_iter_next_4333647072:;
	}
	_iter_end_4333647072:;
}



void _1e2a2e210_ScopeChecker::_method_check_goto(jule::Ref<_1e2a2e210_ScopeGoto>& _169034_gt,jule::Ref<_1e2a2e210_ScopeLabel> _169054_label) {
	jule::Ref<_1e2a2e210_ScopeChecker> _169117_gtsc = _169034_gt->_field_scope;
	while ((_169117_gtsc->_field_child_index - 1LL) > _169054_label->_field_scope->_field_child_index) {
		{
			_169117_gtsc=_169117_gtsc->_field_parent;
		}
	_iter_next_4333653952:;
	}
	_iter_end_4333653952:;
	jule::Int _169617_n = 0LL;
	if ((_169117_gtsc->_field_scope).alloc == (_169054_label->_field_scope->_field_scope).alloc) {
		if (_169034_gt->_field_pos > _169054_label->_field_pos) {
			return;
		}
		_169617_n=_169034_gt->_field_pos;
	}
	jule::Int _170917_i = _169054_label->_field_pos - 1LL;
	if (_169617_n == 0LL) {
		{
			auto expr = _169054_label->_field_scope->_field_scope->_field_stmts;
			auto it = expr.begin();
			_iter_begin_4333662048:;
			if (it != expr.end()) {
				jule::Int _1e2a2e210_j = it - expr.begin();
				jule::Any _1e2a2e210_stmt = *it;
				{
					if (_1e2a2e210_stmt_is_goto_scope(_1e2a2e210_stmt,_169117_gtsc->_field_scope)) {
						_169617_n=_1e2a2e210_j;
						goto _iter_end_4333662048;
					}
				}
				_iter_next_4333662048:;
				++it;
				_1e2a2e210_j++;
				goto _iter_begin_4333662048;
			}
			_iter_end_4333662048:;
		}
	}
	for (; _170917_i >= _169617_n; (_170917_i)--) {
		{
			jule::Any _172221_stmt = _169054_label->_field_scope->_field_scope->_field_stmts[_170917_i];
			if (_1e2a2e210_st_is_def(_172221_stmt)) {
				(*this)._field_s->_method_push_err(_169034_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_169034_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
		}
	_iter_next_4333663056:;
	}
	_iter_end_4333663056:;
}



void _1e2a2e210_ScopeChecker::_method_check_gotos(void) {
	{
		auto expr = (*this)._field_gotos.get();
		auto it = expr.begin();
		_iter_begin_4333671232:;
		if (it != expr.end()) {
			jule::Ref<_1e2a2e210_ScopeGoto> _1e2a2e210_gt = *it;
			{
				jule::Ref<_1e2a2e210_ScopeLabel> _173221_label = (*this)._method_find_label_all(_1e2a2e210_gt->_field_gt->_field_label._field_kind);
				if ((!(jule::real(_173221_label)))) {
					(*this)._field_s->_method_push_err(_1e2a2e210_gt->_field_gt->_field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_1e2a2e210_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_4333671232;
				}
				_173221_label->_field_used=true;
				(*this)._method_check_goto(_1e2a2e210_gt,_173221_label);
			}
			_iter_next_4333671232:;
			++it;
			goto _iter_begin_4333671232;
		}
		_iter_end_4333671232:;
	}
}



void _1e2a2e210_ScopeChecker::_method_check_labels(void) {
	{
		auto expr = (*this)._field_labels.get();
		auto it = expr.begin();
		_iter_begin_4333680800:;
		if (it != expr.end()) {
			jule::Ref<_1e2a2e210_ScopeLabel> _1e2a2e210_l = *it;
			{
				if ((!(_1e2a2e210_l->_field_used))) {
					(*this)._field_s->_method_push_err(_1e2a2e210_l->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1e2a2e210_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_4333680800:;
			++it;
			goto _iter_begin_4333680800;
		}
		_iter_end_4333680800:;
	}
}



void _1e2a2e210_ScopeChecker::_method_check_vars(void) {
	{
		auto expr = (*this)._field_table->_field_vars;
		auto it = expr.begin();
		_iter_begin_4333685872:;
		if (it != expr.end()) {
			jule::Ref<_1ba80e105_Var> _1e2a2e210_v = *it;
			{
				if ((((!(_1e2a2e210_v->_field_used)) && (!(_1e15a2bb9_is_ignore_ident(_1e2a2e210_v->_field_ident)))) && (!(_1e15a2bb9_is_anon_ident(_1e2a2e210_v->_field_ident)))) && (_1e2a2e210_v->_field_ident != jule::Str("self", 4))) {
					(*this)._field_s->_method_push_err(_1e2a2e210_v->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1e2a2e210_v->_field_ident)}));
				}
			}
			_iter_next_4333685872:;
			++it;
			goto _iter_begin_4333685872;
		}
		_iter_end_4333685872:;
	}
}



void _1e2a2e210_ScopeChecker::_method_check_aliases(void) {
	{
		auto expr = (*this)._field_table->_field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4333692560:;
		if (it != expr.end()) {
			jule::Ref<_1a2db8ce3_TypeAlias> _1e2a2e210_a = *it;
			{
				if (((!(_1e2a2e210_a->_field_used)) && (!(_1e15a2bb9_is_ignore_ident(_1e2a2e210_a->_field_ident)))) && (!(_1e15a2bb9_is_anon_ident(_1e2a2e210_a->_field_ident)))) {
					(*this)._field_s->_method_push_err(_1e2a2e210_a->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1e2a2e210_a->_field_ident)}));
				}
			}
			_iter_next_4333692560:;
			++it;
			goto _iter_begin_4333692560;
		}
		_iter_end_4333692560:;
	}
}



void _1e2a2e210_ScopeChecker::_method_check(jule::Ref<_1e16025cb_ScopeTree> _176829_tree,jule::Ref<_1e2a2e210_Scope> _176851_s) {
	_176851_s->_field_deferred=_176829_tree->_field_deferred;
	_176851_s->_field_unsafety=_176829_tree->_field_unsafety;
	jule::I64 _177213_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_176829_tree;
	this->self->_field_scope=_176851_s;
	this->self->_method_check_tree();
	if (_177213_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
	}
	if (this->self->_method_is_root()) {
		this->self->_method_check_gotos();
		this->self->_method_check_labels();
	}
}



jule::Ref<_1e2a2e210_ScopeChecker> _1e2a2e210_ScopeChecker::_method_new_child_checker(void) {
	jule::Ref<_1e2a2e210_ScopeChecker> _179217_base = _1e2a2e210_new_scope_checker_base(this->self->_field_s,jule::new_ref<_1e1737e81_FnIns>());
	_179217_base->_field_parent=this->self;
	_179217_base->_field_labels=this->self->_field_labels;
	_179217_base->_field_gotos=this->self->_field_gotos;
	_179217_base->_field_child_index=static_cast<jule::Int>(this->self->_field_child_index + 1LL);
	return _179217_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_GetRefPtrExprModel &_Src) {
	_Stream << "GetRefPtrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_BuiltinRealCallExprModel &_Src) {
	_Stream << "BuiltinRealCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_BuiltinDropCallExprModel &_Src) {
	_Stream << "BuiltinDropCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_BuiltinErrorTraitSubIdentExprModel &_Src) {
	_Stream << "BuiltinErrorTraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_ExplicitDerefExprModel &_Src) {
	_Stream << "ExplicitDerefExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_IntegratedToStrExprModel &_Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a30c17_TernaryExprModel &_Src) {
	_Stream << "TernaryExprModel{";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1e2a7b966_ImportInfo> _1e2a7b966_Package::_method_find_package(jule::Str ) {
	return jule::new_ref<_1e2a7b966_ImportInfo>();
}



jule::Ref<_1e2a7b966_ImportInfo> _1e2a7b966_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)> ) {
	return jule::new_ref<_1e2a7b966_ImportInfo>();
}



jule::Ref<_1ba80e105_Var> _1e2a7b966_Package::_method_find_var(jule::Str _26631_ident,jule::Bool _26643_cpp_linked) {
	return _1e2a7b966_find_var_in_package((*this)._field_files,_26631_ident,_26643_cpp_linked);
}



jule::Ref<_1a2db8ce3_TypeAlias> _1e2a7b966_Package::_method_find_type_alias(jule::Str _27238_ident,jule::Bool _27250_cpp_linked) {
	return _1e2a7b966_find_type_alias_in_package((*this)._field_files,_27238_ident,_27250_cpp_linked);
}



jule::Ref<_1e177440c_Struct> _1e2a7b966_Package::_method_find_struct(jule::Str _27834_ident,jule::Bool _27846_cpp_linked) {
	return _1e2a7b966_find_struct_in_package((*this)._field_files,_27834_ident,_27846_cpp_linked);
}



jule::Ref<_1e1737e81_Fn> _1e2a7b966_Package::_method_find_fn(jule::Str _28430_ident,jule::Bool _28442_cpp_linked) {
	return _1e2a7b966_find_fn_in_package((*this)._field_files,_28430_ident,_28442_cpp_linked);
}



jule::Ref<_1e2a1e563_Trait> _1e2a7b966_Package::_method_find_trait(jule::Str _29033_ident) {
	return _1e2a7b966_find_trait_in_package((*this)._field_files,_29033_ident);
}



jule::Ref<_1e2a21d4b_Enum> _1e2a7b966_Package::_method_find_enum(jule::Str _29632_ident) {
	return _1e2a7b966_find_enum_in_package((*this)._field_files,_29632_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a7b966_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1e2a7b966_ImportInfo> _1e2a7c2a2_Sema::_method_find_package(jule::Str _33435_ident) {
	return (*this)._field_file->_method_find_package(_33435_ident);
}



jule::Ref<_1e2a7b966_ImportInfo> _1e2a7c2a2_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)> _34437_selector) {
	return (*this)._field_file->_method_select_package(_34437_selector);
}



jule::Ref<_1ba80e105_Var> _1e2a7c2a2_Sema::_method_find_var(jule::Str _35431_ident,jule::Bool _35443_cpp_linked) {
	jule::Ref<_1ba80e105_Var> _35617_v = _1e2a7b966_find_var_in_package((*this)._field_files,_35431_ident,_35443_cpp_linked);
	if (jule::real(_35617_v)) {
		return _35617_v;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4349538448:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e2a7c2a2_imp = *it;
			{
				if ((!(_1e2a7c2a2_imp_is_lookupable(_1e2a7c2a2_imp,_35431_ident)))) {
					goto _iter_next_4349538448;
				}
				_35617_v=_1e2a7c2a2_imp->_method_find_var(_35431_ident,_35443_cpp_linked);
				if (jule::real(_35617_v) && (*this)._method_is_accessible_define(_35617_v->_field_public,_35617_v->_field_token)) {
					return _35617_v;
				}
			}
			_iter_next_4349538448:;
			++it;
			goto _iter_begin_4349538448;
		}
		_iter_end_4349538448:;
	}
	return jule::new_ref<_1ba80e105_Var>();
}



jule::Ref<_1a2db8ce3_TypeAlias> _1e2a7c2a2_Sema::_method_find_type_alias(jule::Str _38138_ident,jule::Bool _38150_cpp_linked) {
	jule::Ref<_1a2db8ce3_TypeAlias> _38317_ta = _1e2a7b966_find_type_alias_in_package((*this)._field_files,_38138_ident,_38150_cpp_linked);
	if (jule::real(_38317_ta)) {
		return _38317_ta;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4349549328:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e2a7c2a2_imp = *it;
			{
				if ((!(_1e2a7c2a2_imp_is_lookupable(_1e2a7c2a2_imp,_38138_ident)))) {
					goto _iter_next_4349549328;
				}
				_38317_ta=_1e2a7c2a2_imp->_method_find_type_alias(_38138_ident,_38150_cpp_linked);
				if (jule::real(_38317_ta) && (*this)._method_is_accessible_define(_38317_ta->_field_public,_38317_ta->_field_token)) {
					return _38317_ta;
				}
			}
			_iter_next_4349549328:;
			++it;
			goto _iter_begin_4349549328;
		}
		_iter_end_4349549328:;
	}
	return jule::new_ref<_1a2db8ce3_TypeAlias>();
}



jule::Ref<_1e177440c_Struct> _1e2a7c2a2_Sema::_method_find_struct(jule::Str _40834_ident,jule::Bool _40846_cpp_linked) {
	jule::Ref<_1e177440c_Struct> _41017_s = _1e2a7b966_find_struct_in_package((*this)._field_files,_40834_ident,_40846_cpp_linked);
	if (jule::real(_41017_s)) {
		return _41017_s;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4349558928:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e2a7c2a2_imp = *it;
			{
				if ((!(_1e2a7c2a2_imp_is_lookupable(_1e2a7c2a2_imp,_40834_ident)))) {
					goto _iter_next_4349558928;
				}
				_41017_s=_1e2a7c2a2_imp->_method_find_struct(_40834_ident,_40846_cpp_linked);
				if (jule::real(_41017_s) && (*this)._method_is_accessible_define(_41017_s->_field_public,_41017_s->_field_token)) {
					return _41017_s;
				}
			}
			_iter_next_4349558928:;
			++it;
			goto _iter_begin_4349558928;
		}
		_iter_end_4349558928:;
	}
	return jule::new_ref<_1e177440c_Struct>();
}



jule::Ref<_1e1737e81_Fn> _1e2a7c2a2_Sema::_method_find_fn(jule::Str _43530_ident,jule::Bool _43542_cpp_linked) {
	jule::Ref<_1e1737e81_Fn> _43717_f = _1e2a7b966_find_fn_in_package((*this)._field_files,_43530_ident,_43542_cpp_linked);
	if (jule::real(_43717_f)) {
		return _43717_f;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4349568656:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e2a7c2a2_imp = *it;
			{
				if ((!(_1e2a7c2a2_imp_is_lookupable(_1e2a7c2a2_imp,_43530_ident)))) {
					goto _iter_next_4349568656;
				}
				_43717_f=_1e2a7c2a2_imp->_method_find_fn(_43530_ident,_43542_cpp_linked);
				if (jule::real(_43717_f) && (*this)._method_is_accessible_define(_43717_f->_field_public,_43717_f->_field_token)) {
					return _43717_f;
				}
			}
			_iter_next_4349568656:;
			++it;
			goto _iter_begin_4349568656;
		}
		_iter_end_4349568656:;
	}
	return jule::new_ref<_1e1737e81_Fn>();
}



jule::Ref<_1e2a1e563_Trait> _1e2a7c2a2_Sema::_method_find_trait(jule::Str _46233_ident) {
	jule::Ref<_1e2a1e563_Trait> _46417_t = _1e2a7b966_find_trait_in_package((*this)._field_files,_46233_ident);
	if (jule::real(_46417_t)) {
		return _46417_t;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4349578640:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e2a7c2a2_imp = *it;
			{
				if ((!(_1e2a7c2a2_imp_is_lookupable(_1e2a7c2a2_imp,_46233_ident)))) {
					goto _iter_next_4349578640;
				}
				_46417_t=_1e2a7c2a2_imp->_method_find_trait(_46233_ident);
				if (jule::real(_46417_t) && (*this)._method_is_accessible_define(_46417_t->_field_public,_46417_t->_field_token)) {
					return _46417_t;
				}
			}
			_iter_next_4349578640:;
			++it;
			goto _iter_begin_4349578640;
		}
		_iter_end_4349578640:;
	}
	return jule::new_ref<_1e2a1e563_Trait>();
}



jule::Ref<_1e2a21d4b_Enum> _1e2a7c2a2_Sema::_method_find_enum(jule::Str _48932_ident) {
	jule::Ref<_1e2a21d4b_Enum> _49117_e = _1e2a7b966_find_enum_in_package((*this)._field_files,_48932_ident);
	if (jule::real(_49117_e)) {
		return _49117_e;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4349587520:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e2a7c2a2_imp = *it;
			{
				if ((!(_1e2a7c2a2_imp_is_lookupable(_1e2a7c2a2_imp,_48932_ident)))) {
					goto _iter_next_4349587520;
				}
				_49117_e=_1e2a7c2a2_imp->_method_find_enum(_48932_ident);
				if (jule::real(_49117_e) && (*this)._method_is_accessible_define(_49117_e->_field_public,_49117_e->_field_token)) {
					return _49117_e;
				}
			}
			_iter_next_4349587520:;
			++it;
			goto _iter_begin_4349587520;
		}
		_iter_end_4349587520:;
	}
	return jule::new_ref<_1e2a21d4b_Enum>();
}



jule::Bool _1e2a7c2a2_Sema::_method_is_flag(jule::Int _51322_flags) {
	return ((*this)._field_flags & _51322_flags) == _51322_flags;
}



void _1e2a7c2a2_Sema::_method_set_current_file(jule::Ref<_1a2d05801_SymbolTable> _51539_f) {
	(*this)._field_file=_51539_f;
}



void _1e2a7c2a2_Sema::_method_push_err(_1e15a2bb9_Token _51727_token,jule::Str _51741_fmt,jule::Slice<jule::Any> _51754_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1ec8e8025_Log>({_1e2a7c2a2_compiler_err(_51727_token,true,_51741_fmt,_51754_args)}));
}



void _1e2a7c2a2_Sema::_method_push_suggestion(jule::Str _52234_fmt,jule::Slice<jule::Any> _52247_args) {
	{
		_1e2a7c2a2_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_52234_fmt,_52247_args);
	}
}



jule::Bool _1e2a7c2a2_Sema::_method_is_accessible_define(jule::Bool _52735_public,_1e15a2bb9_Token _52749_token) {
	return (_52735_public || (!(jule::real(_52749_token._field_file)))) || ((*this)._field_file->_field_file->_method_dir() == _52749_token._field_file->_method_dir());
}



jule::Bool _1e2a7c2a2_Sema::_method_is_duplicated_ident(jule::Uintptr _53434_itself,jule::Str _53451_ident,jule::Bool _53463_cpp_linked) {
	{
		auto expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4349612912:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				if (_1e2a7c2a2_f->_method_is_duplicated_ident(_53434_itself,_53451_ident,_53463_cpp_linked)) {
					return true;
				}
				{
					auto expr = _1e2a7c2a2_f->_field_imports;
					auto it = expr.begin();
					_iter_begin_4349617488:;
					if (it != expr.end()) {
						jule::Ref<_1e2a7b966_ImportInfo> _1e2a7c2a2_imp = *it;
						{
							{
								auto expr = _1e2a7c2a2_imp->_field_selected;
								auto it = expr.begin();
								_iter_begin_4349619280:;
								if (it != expr.end()) {
									_1e15a2bb9_Token _1e2a7c2a2_selected = *it;
									{
										if (_1e2a7c2a2_selected._field_kind == _53451_ident) {
											return true;
										}
									}
									_iter_next_4349619280:;
									++it;
									goto _iter_begin_4349619280;
								}
								_iter_end_4349619280:;
							}
						}
						_iter_next_4349617488:;
						++it;
						goto _iter_begin_4349617488;
					}
					_iter_end_4349617488:;
				}
			}
			_iter_next_4349612912:;
			++it;
			goto _iter_begin_4349612912;
		}
		_iter_end_4349612912:;
	}
	return false;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_generic_quantity(jule::Int _55141_required,jule::Int _55156_given,_1e15a2bb9_Token _55168_error_token) {
	jule::Bool _55190_ok = jule::Bool();
	{
		if (!(((_55141_required == 0LL) && (_55156_given > 0LL)))) { goto _case_end_4349625664; }
		_case_begin_4349625664:;
		{
			(*this)._method_push_err(_55168_error_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
			_55190_ok = false;
			return _55190_ok;
		}
		goto _match_end_4349624032;
		_case_end_4349625664:;
		if (!(((_55141_required > 0LL) && (_55156_given == 0LL)))) { goto _case_end_4349625184; }
		_case_begin_4349625184:;
		{
			(*this)._method_push_err(_55168_error_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			_55190_ok = false;
			return _55190_ok;
		}
		goto _match_end_4349624032;
		_case_end_4349625184:;
		if (!((_55141_required < _55156_given))) { goto _case_end_4349625296; }
		_case_begin_4349625296:;
		{
			(*this)._method_push_err(_55168_error_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>({}));
			_55190_ok = false;
			return _55190_ok;
		}
		goto _match_end_4349624032;
		_case_end_4349625296:;
		if (!((_55141_required > _55156_given))) { goto _case_end_4349625408; }
		_case_begin_4349625408:;
		{
			(*this)._method_push_err(_55168_error_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>({}));
			_55190_ok = false;
			return _55190_ok;
		}
		goto _match_end_4349624032;
		_case_end_4349625408:;
		_case_begin_4349624208:;
		{
			_55190_ok = true;
			return _55190_ok;
		}
		goto _match_end_4349624032;
		_case_end_4349624208:;
		_match_end_4349624032:;
	}
}



jule::Bool _1e2a7c2a2_Sema::_method_is_duplicated_import_selection(jule::Uintptr _57445_itself,jule::Str _57462_ident) {
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4349635104:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e2a7c2a2_imp = *it;
			{
				if (((jule::Uintptr)((_1e2a7c2a2_imp).alloc)) == _57445_itself) {
					goto _iter_end_4349635104;
				}
				if (_1e2a7c2a2_imp->_method_exist_ident(_57462_ident)) {
					return true;
				}
			}
			_iter_next_4349635104:;
			++it;
			goto _iter_begin_4349635104;
		}
		_iter_end_4349635104:;
	}
	return false;
}



jule::Any _1e2a7c2a2_Sema::_method_get_import_def(jule::Str _58929_ident,jule::Ref<_1e2a7b966_ImportInfo>& _58946_imp) {
	if (_1a36e0bad_find_package_builtin_def(_58946_imp->_field_link_path,_58929_ident) != nullptr) {
		return jule::Any(true);
	}
	{
		auto expr = _58946_imp->_field_package->_field_files;
		auto it = expr.begin();
		_iter_begin_4349641344:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				
				jule::Any _59621_def = _1e2a7c2a2_f->_method_def_by_ident(_58929_ident,false);
				if (_59621_def != nullptr) {
					return _59621_def;
				}
			}
			_iter_next_4349641344:;
			++it;
			goto _iter_begin_4349641344;
		}
		_iter_end_4349641344:;
	}
	return jule::Any(nullptr);
}



void _1e2a7c2a2_Sema::_method_check_import_selections(jule::Ref<_1e2a7b966_ImportInfo>& _60547_imp) {
	{
		auto expr = _60547_imp->_field_selected;
		auto it = expr.begin();
		_iter_begin_4349648688:;
		if (it != expr.end()) {
			_1e15a2bb9_Token _1e2a7c2a2_ident = *it;
			{
				if (_1e2a7c2a2_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_4349648688;
				}
				if ((*this)._method_is_duplicated_import_selection(((jule::Uintptr)((_60547_imp).alloc)),_1e2a7c2a2_ident._field_kind)) {
					(*this)._method_push_err(_1e2a7c2a2_ident,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
					goto _iter_next_4349648688;
				}
				jule::Any _61721_def = (*this)._method_get_import_def(_1e2a7c2a2_ident._field_kind,_60547_imp);
				{
					auto _match_expr{ _61721_def };
					if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4349657664; }
					_case_begin_4349657664:;
					{
						goto _iter_next_4349648688;
					}
					goto _match_end_4349656896;
					_case_end_4349657664:;
					if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4349657296; }
					_case_begin_4349657296:;
					{
						jule::Ref<_1ba80e105_Var> _62425_v = _61721_def.operator jule::Ref<_1ba80e105_Var>();
						if ((*this)._method_is_accessible_define(_62425_v->_field_public,_62425_v->_field_token)) {
							goto _iter_next_4349648688;
						}
					}
					goto _match_end_4349656896;
					_case_end_4349657296:;
					if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_TypeAlias>>())) { goto _case_end_4349657392; }
					_case_begin_4349657392:;
					{
						jule::Ref<_1a2db8ce3_TypeAlias> _63025_ta = _61721_def.operator jule::Ref<_1a2db8ce3_TypeAlias>();
						if ((*this)._method_is_accessible_define(_63025_ta->_field_public,_63025_ta->_field_token)) {
							goto _iter_next_4349648688;
						}
					}
					goto _match_end_4349656896;
					_case_end_4349657392:;
					if (!(_match_expr.type_is<jule::Ref<_1e177440c_Struct>>())) { goto _case_end_4349657488; }
					_case_begin_4349657488:;
					{
						jule::Ref<_1e177440c_Struct> _63625_strct = _61721_def.operator jule::Ref<_1e177440c_Struct>();
						if ((*this)._method_is_accessible_define(_63625_strct->_field_public,_63625_strct->_field_token)) {
							goto _iter_next_4349648688;
						}
					}
					goto _match_end_4349656896;
					_case_end_4349657488:;
					if (!(_match_expr.type_is<jule::Ref<_1e2a1e563_Trait>>())) { goto _case_end_4349659392; }
					_case_begin_4349659392:;
					{
						jule::Ref<_1e2a1e563_Trait> _64225_t = _61721_def.operator jule::Ref<_1e2a1e563_Trait>();
						if ((*this)._method_is_accessible_define(_64225_t->_field_public,_64225_t->_field_token)) {
							goto _iter_next_4349648688;
						}
					}
					goto _match_end_4349656896;
					_case_end_4349659392:;
					if (!(_match_expr.type_is<jule::Ref<_1e2a21d4b_Enum>>())) { goto _case_end_4349659488; }
					_case_begin_4349659488:;
					{
						jule::Ref<_1e2a21d4b_Enum> _64825_e = _61721_def.operator jule::Ref<_1e2a21d4b_Enum>();
						if ((*this)._method_is_accessible_define(_64825_e->_field_public,_64825_e->_field_token)) {
							goto _iter_next_4349648688;
						}
					}
					goto _match_end_4349656896;
					_case_end_4349659488:;
					if (!(_match_expr.type_is<jule::Ref<_1e1737e81_Fn>>())) { goto _case_end_4349659584; }
					_case_begin_4349659584:;
					{
						jule::Ref<_1e1737e81_Fn> _65425_f = _61721_def.operator jule::Ref<_1e1737e81_Fn>();
						if ((*this)._method_is_accessible_define(_65425_f->_field_public,_65425_f->_field_token)) {
							goto _iter_next_4349648688;
						}
					}
					goto _match_end_4349656896;
					_case_end_4349659584:;
					_case_begin_4349650224:;
					{
						(*this)._method_push_err(_1e2a7c2a2_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_ident._field_kind)}));
						goto _iter_next_4349648688;
					}
					goto _match_end_4349656896;
					_case_end_4349650224:;
					_match_end_4349656896:;
				}
				(*this)._method_push_err(_1e2a7c2a2_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
			}
			_iter_next_4349648688:;
			++it;
			goto _iter_begin_4349648688;
		}
		_iter_end_4349648688:;
	}
}



jule::Bool _1e2a7c2a2_Sema::_method_is_use_alias_duplication(jule::Ref<_1e2a7b966_ImportInfo>& _66944_imp) {
	if (_66944_imp->_field_alias.len() == 0LL) {
		return false;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4349682832:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e2a7c2a2_imp2 = *it;
			{
				if ((_1e2a7c2a2_imp2).alloc == (_66944_imp).alloc) {
					goto _iter_end_4349682832;
				}
				if (_1e2a7c2a2_imp2->_field_alias == _66944_imp->_field_alias) {
					return true;
				}
			}
			_iter_next_4349682832:;
			++it;
			goto _iter_begin_4349682832;
		}
		_iter_end_4349682832:;
	}
	return false;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_import(jule::Ref<_1e2a7b966_ImportInfo>& _68536_imp) {
	if (_68536_imp->_field_cpp_linked || (_68536_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	if ((*this)._method_is_use_alias_duplication(_68536_imp)) {
		(*this)._method_push_err(_68536_imp->_field_token,jule::Str("identifier \"@\" is already used for another use declaration", 58),jule::Slice<jule::Any>({jule::Any(_68536_imp->_field_alias)}));
		(*this)._method_push_suggestion(jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>({}));
	}
	if (_68536_imp->_field_duplicate) {
		return true;
	}
	jule::Ref<_1e2a7c2a2_Sema> _69917_sema = jule::new_struct_ref<_1e2a7c2a2_Sema>(new( std::nothrow ) _1e2a7c2a2_Sema(jule::Slice<_1ec8e8025_Log>(),jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>(),jule::Ref<_1a2d05801_SymbolTable>(),(*this)._field_flags));
	_69917_sema->_method_check(_68536_imp->_field_package->_field_files);
	if (_69917_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_69917_sema->_field_errors);
		return false;
	}
	(*this)._method_check_import_selections(_68536_imp);
	return true;
}



void _1e2a7c2a2_Sema::_method_check_imports(void) {
	{
		auto expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4349700624:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_file = *it;
			{
				(*this)._method_set_current_file(_1e2a7c2a2_file);
				{
					auto expr = _1e2a7c2a2_file->_field_imports;
					auto it = expr.begin();
					_iter_begin_4349703504:;
					if (it != expr.end()) {
						jule::Ref<_1e2a7b966_ImportInfo> _1e2a7c2a2_imp = *it;
						{
							jule::Bool _71721_ok = (*this)._method_check_import(_1e2a7c2a2_imp);
							if ((!(_71721_ok))) {
								(*this)._method_push_err(_1e2a7c2a2_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_imp->_field_link_path)}));
								return;
							}
						}
						_iter_next_4349703504:;
						++it;
						goto _iter_begin_4349703504;
					}
					_iter_end_4349703504:;
				}
			}
			_iter_next_4349700624:;
			++it;
			goto _iter_begin_4349700624;
		}
		_iter_end_4349700624:;
	}
}



void _1e2a7c2a2_Sema::_method_impl_file_impls(void) {
	{
		auto expr = this->self->_field_file->_field_impls;
		auto it = expr.begin();
		_iter_begin_4349704432:;
		if (it != expr.end()) {
			jule::Ref<_1e2a276ae_Impl> _1e2a7c2a2_imp = *it;
			{
				this->self->_method_impl_impl(_1e2a7c2a2_imp);
			}
			_iter_next_4349704432:;
			++it;
			goto _iter_begin_4349704432;
		}
		_iter_end_4349704432:;
	}
}



void _1e2a7c2a2_Sema::_method_impl_impls(void) {
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4349712912:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_file = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_4349712912:;
			++it;
			goto _iter_begin_4349712912;
		}
		_iter_end_4349712912:;
	}
}



void _1e2a7c2a2_Sema::_method_check_enums(void) {
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4349716768:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_file = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_4349716768:;
			++it;
			goto _iter_begin_4349716768;
		}
		_iter_end_4349716768:;
	}
}



jule::Bool _1e2a7c2a2_Sema::_method_check_type_with_refers(jule::Ref<_1a2db8ce3_TypeSymbol>& _75047_t,jule::Trait<_1a35968cc_Lookup> _75113_l,jule::Ref<_1a2db8ce3_Referencer> _75128_referencer) {
	jule::Bool _75155_ok = jule::Bool();
	if (_75047_t->_method_checked()) {
		_75155_ok = true;
		return _75155_ok;
	}
	_1a2db8ce3_TypeChecker _75517_tc = _1a2db8ce3_TypeChecker(this->self,_75113_l,_75128_referencer,_1e15a2bb9_Token(),jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>(),jule::Bool());
	_75517_tc._method_check(_75047_t);
	_75155_ok = _75047_t->_method_checked();
	return _75155_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_type(jule::Ref<_1a2db8ce3_TypeSymbol>& _76635_t,jule::Trait<_1a35968cc_Lookup> _76655_l) {
	jule::Bool _76668_ok = jule::Bool();
	_76668_ok = this->self->_method_check_type_with_refers(_76635_t,_76655_l,jule::new_ref<_1a2db8ce3_Referencer>());
	return _76668_ok;
}



jule::Ref<_1a2db8ce3_TypeKind> _1e2a7c2a2_Sema::_method_build_type_with_generics(jule::Ref<_1e16025cb_TypeDecl>& _77249_t,jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>> _77313_generics) {
	jule::Ref<_1a2db8ce3_TypeChecker> _77417_tc = jule::new_struct<_1a2db8ce3_TypeChecker>(new( std::nothrow ) _1a2db8ce3_TypeChecker(this->self,this->self,jule::Ref<_1a2db8ce3_Referencer>(),_1e15a2bb9_Token(),jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>(),_77313_generics,jule::Bool()));
	return _77417_tc->_method_check_decl(_77249_t);
}



jule::Ref<_1a2db8ce3_TypeKind> _1e2a7c2a2_Sema::_method_build_type(jule::Ref<_1e16025cb_TypeDecl>& _78335_t) {
	return this->self->_method_build_type_with_generics(_78335_t,nullptr);
}



jule::Ref<_1a2c74a6c_Eval> _1e2a7c2a2_Sema::_method_evalpd(jule::Trait<_1a35968cc_Lookup> _78930_l,jule::Ref<_1a2db8ce3_TypeKind> _78945_p,jule::Ref<_1ba80e105_Var> _78963_owner) {
	jule::Ref<_1a2c74a6c_Eval> _79017_e = jule::new_struct_ref<_1a2c74a6c_Eval>(new( std::nothrow ) _1a2c74a6c_Eval(this->self,_78930_l,jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),_78963_owner));
	{
		auto _match_expr{ _78930_l };
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_ScopeChecker>>())) { goto _case_end_4349761488; }
		_case_begin_4349761488:;
		{
			_79017_e->_field_unsafety=_78930_l.operator jule::Ref<_1e2a2e210_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_4349762944;
		_case_end_4349761488:;
		_match_end_4349762944:;
	}
	_79017_e->_field_prefix=_78945_p;
	return _79017_e;
}



jule::Ref<_1a2c74a6c_Eval> _1e2a7c2a2_Sema::_method_evalp(jule::Trait<_1a35968cc_Lookup> _80729_l,jule::Ref<_1a2db8ce3_TypeKind> _80744_p) {
	return this->self->_method_evalpd(_80729_l,_80744_p,jule::new_ref<_1ba80e105_Var>());
}



jule::Ref<_1a2c74a6c_Eval> _1e2a7c2a2_Sema::_method_eval(jule::Trait<_1a35968cc_Lookup> _81228_l) {
	return this->self->_method_evalp(_81228_l,jule::new_ref<_1a2db8ce3_TypeKind>());
}



void _1e2a7c2a2_Sema::_method_check_assign_type(jule::Bool _81637_dest_is_ref,jule::Ref<_1a2db8ce3_TypeKind>& _81661_dest,jule::Ref<_1a2c74a6c_Data>& _81714_d,_1e15a2bb9_Token _81728_error_token,jule::Bool _81748_deref) {
	if (_81637_dest_is_ref) {
		if ((!(_81661_dest->_method_equals(_81714_d->_field_kind)))) {
			this->self->_method_push_err(_81728_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_81661_dest->_method_to_str()),jule::Any(_81714_d->_field_kind->_method_to_str())}));
		}
	} else {
		jule::Ref<_1a2c73c9c_AssignTypeChecker> _82321_atc = jule::new_struct<_1a2c73c9c_AssignTypeChecker>(new( std::nothrow ) _1a2c73c9c_AssignTypeChecker(this->self,_81661_dest,_81714_d,_81728_error_token,_81748_deref));
		jule::Bool _83017_ok = _82321_atc->_method_check();
		if ((!(_83017_ok))) {
			return;
		}
	}
	if ((!(_81714_d->_method_is_const())) || (!(jule::real(_81661_dest->_method_prim())))) {
		return;
	}
	jule::Str _84017_kind = _81661_dest->_method_prim()->_field_kind;
	{
		if (!((_1a44da204_is_sig_int(_84017_kind)))) { goto _case_end_4349785984; }
		_case_begin_4349785984:;
		{
			_81714_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_81714_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4349785840;
		_case_end_4349785984:;
		if (!((_1a44da204_is_unsig_int(_84017_kind)))) { goto _case_end_4349786080; }
		_case_begin_4349786080:;
		{
			_81714_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_81714_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4349785840;
		_case_end_4349786080:;
		if (!((_1a44da204_is_float(_84017_kind)))) { goto _case_end_4349786176; }
		_case_begin_4349786176:;
		{
			_81714_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_81714_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4349785840;
		_case_end_4349786176:;
		_match_end_4349785840:;
	}
}



jule::Bool _1e2a7c2a2_Sema::_method_check_type_compatibility(jule::Ref<_1a2db8ce3_TypeKind>& _84949_dest,jule::Ref<_1a2db8ce3_TypeKind>& _85014_src,_1e15a2bb9_Token& _85035_error_token,jule::Bool _85055_deref) {
	if (jule::real(_85014_src->_method_tup())) {
		this->self->_method_push_err(_85035_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_84949_dest->_method_to_str()),jule::Any(_85014_src->_method_to_str())}));
		return false;
	}
	jule::Ref<_1a2c73c9c_TypeCompatibilityChecker> _85817_tcc = jule::new_struct<_1a2c73c9c_TypeCompatibilityChecker>(new( std::nothrow ) _1a2c73c9c_TypeCompatibilityChecker(this->self,_84949_dest,_85014_src,_85035_error_token,jule::Bool(),_85055_deref,jule::Bool()));
	jule::Bool _86513_ok = _85817_tcc->_method_check();
	if ((!(_86513_ok))) {
		this->self->_method_push_err(_85035_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_84949_dest->_method_to_str()),jule::Any(_85014_src->_method_to_str())}));
	}
	return _86513_ok;
}



jule::Ref<_1a2db8ce3_TypeKind> _1e2a7c2a2_Sema::_method_build_non_generic_type_kind(jule::Ref<_1e16025cb_TypeDecl>& _87952_ast,jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>& _88014_generics) {
	jule::Ref<_1a2db8ce3_TypeChecker> _88117_tc = jule::new_struct<_1a2db8ce3_TypeChecker>(new( std::nothrow ) _1a2db8ce3_TypeChecker(this->self,this->self,jule::Ref<_1a2db8ce3_Referencer>(),_1e15a2bb9_Token(),_88014_generics,jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>(),jule::Bool()));
	return _88117_tc->_method_check_decl(_87952_ast);
}



void _1e2a7c2a2_Sema::_method_build_fn_non_generic_type_kinds(jule::Ref<_1e1737e81_FnIns>& _88956_f) {
	jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> _89017_generics = nullptr;
	if (_88956_f->_field_decl->_method_is_method()) {
		_89017_generics=jule::append(_88956_f->_field_decl->_field_generics,_88956_f->_field_decl->_field_owner->_field_generics);
	} else {
		_89017_generics=_88956_f->_field_decl->_field_generics;
	}
	{
		auto expr = _88956_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4349813312:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_ParamIns> _1e2a7c2a2_p = *it;
			{
				if ((!(_1e2a7c2a2_p->_field_decl->_method_is_self()))) {
					_1e2a7c2a2_p->_field_kind=this->self->_method_build_non_generic_type_kind(_1e2a7c2a2_p->_field_decl->_field_kind->_field_decl,_89017_generics);
				}
			}
			_iter_next_4349813312:;
			++it;
			goto _iter_begin_4349813312;
		}
		_iter_end_4349813312:;
	}
	if ((!(_88956_f->_field_decl->_method_is_void()))) {
		_88956_f->_field_result=this->self->_method_build_non_generic_type_kind(_88956_f->_field_decl->_field_result->_field_kind->_field_decl,_89017_generics);
	}
}



jule::Ref<_1e1737e81_FnIns> _1e2a7c2a2_Sema::_method_get_trait_check_fn_kind(jule::Ref<_1e1737e81_Fn>& _90748_f) {
	jule::Ref<_1e1737e81_FnIns> _90817_ins = _90748_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_90817_ins);
	return _90817_ins;
}



jule::Bool _1e2a7c2a2_Sema::_method_reload_fn_ins_types(jule::Ref<_1e1737e81_FnIns>& _91344_f) {
	jule::Bool _91357_ok = jule::Bool();
	if (_91344_f->_method_is_builtin() || _91344_f->_method_is_anon()) {
		_91357_ok = true;
		return _91357_ok;
	}
	jule::Ref<_1e2a7c2a2_Sema> _91817_sema = _91344_f->_field_decl->_field_sema;
	jule::Ref<_1a2d05801_SymbolTable> _92017_old = _91344_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_91344_f->_field_decl->_field_sema->_method_set_current_file(_92017_old);
	});
	jule::Ref<_1a2d05801_SymbolTable> _92217_file = _1e2a7c2a2_find_file(_91344_f->_field_decl->_field_sema->_field_files,_91344_f->_field_decl->_field_token._field_file);
	if (jule::real(_92217_file)) {
		_91344_f->_field_decl->_field_sema->_method_set_current_file(_92217_file);
	}
	jule::I64 _92717_size = _91344_f->_field_generics.len();
	if (jule::real(_91344_f->_field_decl) && jule::real(_91344_f->_field_decl->_field_owner)) {
		_92717_size+=static_cast<jule::I64>(_91344_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>> _93217_generics = jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>::alloc(0LL,_92717_size);
	{
		auto expr = _91344_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4349843536:;
		if (it != expr.end()) {
			jule::Int _1e2a7c2a2_i = it - expr.begin();
			jule::Ref<_1a2db8ce3_TypeKind> _1e2a7c2a2_g = *it;
			{
				_93217_generics=jule::append(_93217_generics,jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>({jule::new_struct<_1a2db8ce3_TypeAlias>(new( std::nothrow ) _1a2db8ce3_TypeAlias(jule::Ref<_1e16025cb_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1e15a2bb9_Token(),_91344_f->_field_decl->_field_generics[_1e2a7c2a2_i]->_field_ident,jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),_1e2a7c2a2_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
			_iter_next_4349843536:;
			++it;
			_1e2a7c2a2_i++;
			goto _iter_begin_4349843536;
		}
		_iter_end_4349843536:;
	}
	if (jule::real(_91344_f->_field_decl) && jule::real(_91344_f->_field_decl->_field_owner)) {
		jule::Ref<_1e177440c_StructIns> _94421_owner = _91344_f->_field_owner;
		{
			auto expr = _94421_owner->_field_generics;
			auto it = expr.begin();
			_iter_begin_4349846320:;
			if (it != expr.end()) {
				jule::Int _1e2a7c2a2_i = it - expr.begin();
				jule::Ref<_1a2db8ce3_TypeKind> _1e2a7c2a2_g = *it;
				{
					_93217_generics=jule::append(_93217_generics,jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>({jule::new_struct<_1a2db8ce3_TypeAlias>(new( std::nothrow ) _1a2db8ce3_TypeAlias(jule::Ref<_1e16025cb_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1e15a2bb9_Token(),_94421_owner->_field_decl->_field_generics[_1e2a7c2a2_i]->_field_ident,jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),_1e2a7c2a2_g)),jule::Str(),jule::Slice<jule::Any>()))}));
				}
				_iter_next_4349846320:;
				++it;
				_1e2a7c2a2_i++;
				goto _iter_begin_4349846320;
			}
			_iter_end_4349846320:;
		}
	}
	_91357_ok=true;
	{
		auto expr = _91344_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4349844720:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_ParamIns> _1e2a7c2a2_p = *it;
			{
				if ((!(_1e2a7c2a2_p->_field_decl->_method_is_self()))) {
					_1e2a7c2a2_p->_field_kind=_91817_sema->_method_build_type_with_generics(_1e2a7c2a2_p->_field_decl->_field_kind->_field_decl,_93217_generics);
					if (jule::real(_1e2a7c2a2_p->_field_kind)) {
						if (_1e2a7c2a2_p->_field_decl->_field_reference && (!(_1a2db8ce3_is_valid_for_ref(_1e2a7c2a2_p->_field_kind)))) {
							this->self->_method_push_err(_1e2a7c2a2_p->_field_decl->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_p->_field_kind->_method_to_str())}));
						}
					} else {
						_91357_ok=false;
					}
				}
			}
			_iter_next_4349844720:;
			++it;
			goto _iter_begin_4349844720;
		}
		_iter_end_4349844720:;
	}
	if ((!(_91344_f->_field_decl->_method_is_void()))) {
		_91344_f->_field_result=_91817_sema->_method_build_type_with_generics(_91344_f->_field_decl->_field_result->_field_kind->_field_decl,_93217_generics);
		_91357_ok=jule::real(_91344_f->_field_result) && _91357_ok;
	}
	if ((_91817_sema).alloc != (this->self).alloc) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_91817_sema->_field_errors);
		_91817_sema->_field_errors=nullptr;
	}
	_91357_ok = _91357_ok;
	return _91357_ok;
}



void _1e2a7c2a2_Sema::_method_check_ref_validity_for_init_expr(jule::Bool _98252_left_mut,jule::Ref<_1a2c74a6c_Data>& _98269_d,_1e15a2bb9_Token& _98284_error_token) {
	{
		auto _match_expr{ _98269_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4349871200; }
		goto _match_end_4349870448;
		_case_end_4349871200:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_TraitSubIdentExprModel>>())) { goto _case_end_4349870800; }
		_case_begin_4349870800:;
		{
			jule::Ref<_1e2a30c17_TraitSubIdentExprModel> _98817_model = _98269_d->_field_model.operator jule::Ref<_1e2a30c17_TraitSubIdentExprModel>();
			if ((!(_1e2a7c2a2_is_valid_model_for_ref(_98817_model->_field_expr)))) {
				this->self->_method_push_err(_98284_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_98817_model->_field_ident)}));
			}
		}
		goto _match_end_4349870448;
		_case_end_4349870800:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_StructSubIdentExprModel>>())) { goto _case_end_4349870896; }
		_case_begin_4349870896:;
		{
			jule::Ref<_1e2a30c17_StructSubIdentExprModel> _99417_model = _98269_d->_field_model.operator jule::Ref<_1e2a30c17_StructSubIdentExprModel>();
			if ((!(_1e2a7c2a2_is_valid_model_for_ref(_99417_model->_field_expr)))) {
				this->self->_method_push_err(_98284_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_99417_model->_field_field->_field_decl->_field_ident)}));
			}
		}
		goto _match_end_4349870448;
		_case_end_4349870896:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ref<_1e2a30c17_CommonSubIdentExprModel>>())) { goto _case_end_4349870992; }
		_case_begin_4349870992:;
		{
			this->self->_method_push_err(_98284_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4349870448;
		_case_end_4349870992:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_UnaryExprModel>>())) { goto _case_end_4349871088; }
		_case_begin_4349871088:;
		{
			jule::Ref<_1e2a30c17_UnaryExprModel> _100417_unary = _98269_d->_field_model.operator jule::Ref<_1e2a30c17_UnaryExprModel>();
			if (_100417_unary->_field_op == jule::Str("*", 1)) {
				goto _match_end_4349870448;
			}
			goto _case_begin_4349869984;
		}
		goto _match_end_4349870448;
		_case_end_4349871088:;
		_case_begin_4349869984:;
		{
			this->self->_method_push_err(_98284_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4349870448;
		_case_end_4349869984:;
		_match_end_4349870448:;
	}
	if (_98252_left_mut && (!(_98269_d->_field_mutable))) {
		this->self->_method_push_err(_98284_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>({}));
	}
}



void _1e2a7c2a2_Sema::_method_check_validity_for_init_expr(jule::Bool _102048_left_mut,jule::Bool _102064_left_ref,jule::Ref<_1a2db8ce3_TypeKind>& _102110_left_kind,jule::Ref<_1a2c74a6c_Data>& _102137_d,_1e15a2bb9_Token& _102152_error_token) {
	if ((_102048_left_mut && (!(_102137_d->_field_mutable))) && _102137_d->_field_kind->_method_mutable()) {
		this->self->_method_push_err(_102152_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
	}
	if (_102064_left_ref) {
		this->self->_method_check_ref_validity_for_init_expr(_102048_left_mut,_102137_d,_102152_error_token);
	}
	jule::Ref<_1a2c73c9c_AssignTypeChecker> _102917_atc = jule::new_struct<_1a2c73c9c_AssignTypeChecker>(new( std::nothrow ) _1a2c73c9c_AssignTypeChecker(this->self,jule::Ref<_1a2db8ce3_TypeKind>(),_102137_d,_102152_error_token,jule::Bool()));
	_102917_atc->_method_check_validity();
}



jule::Bool _1e2a7c2a2_Sema::_method_check_type_alias_decl_kind(jule::Ref<_1a2db8ce3_TypeAlias>& _103751_ta,jule::Trait<_1a35968cc_Lookup> _103771_l) {
	jule::Bool _103784_ok = jule::Bool();
	jule::Ref<_1a2d05801_SymbolTable> _103817_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_103817_old);
	});
	jule::Ref<_1a2d05801_SymbolTable> _104017_file = _1e2a7c2a2_find_file(this->self->_field_files,_103751_ta->_field_token._field_file);
	if (jule::real(_104017_file)) {
		this->self->_method_set_current_file(_104017_file);
	}
	_103784_ok=this->self->_method_check_type_with_refers(_103751_ta->_field_kind,_103771_l,jule::new_struct<_1a2db8ce3_Referencer>(new( std::nothrow ) _1a2db8ce3_Referencer(_103751_ta->_field_ident,jule::Any(_103751_ta),(&(_103751_ta->_field_refers)))));
	if ((_103784_ok && jule::real(_103751_ta->_field_kind->_field_kind->_method_arr())) && _103751_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_103751_ta->_field_kind->_field_decl->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
		_103784_ok=false;
	}
	return _103784_ok;
}



void _1e2a7c2a2_Sema::_method_check_type_alias_decl(jule::Ref<_1a2db8ce3_TypeAlias>& _105746_ta,jule::Trait<_1a35968cc_Lookup> _105766_l) {
	if (_1e15a2bb9_is_ignore_ident(_105746_ta->_field_ident)) {
		this->self->_method_push_err(_105746_ta->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_105746_ta,_105766_l);
}



void _1e2a7c2a2_Sema::_method_check_type_alias_decl_dup(jule::Ref<_1a2db8ce3_TypeAlias>& _106550_ta) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_106550_ta).alloc)),_106550_ta->_field_ident,_106550_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_106550_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_106550_ta->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_106550_ta,this->self);
}



jule::Bool _1e2a7c2a2_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _107444_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4349925200:;
		if (it != expr.end()) {
			jule::Ref<_1a2db8ce3_TypeAlias> _1e2a7c2a2_ta = *it;
			{
				this->self->_method_check_type_alias_decl_dup(_1e2a7c2a2_ta);
				if (this->self->_field_errors.len() > 0LL) {
					_107444_ok = false;
					return _107444_ok;
				}
			}
			_iter_next_4349925200:;
			++it;
			goto _iter_begin_4349925200;
		}
		_iter_end_4349925200:;
	}
	_107444_ok = true;
	return _107444_ok;
}



void _1e2a7c2a2_Sema::_method_check_enum_items_dup(jule::Ref<_1e2a21d4b_Enum> _108639_e) {
	{
		auto expr = _108639_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4349930592:;
		if (it != expr.end()) {
			jule::Ref<_1e2a21d4b_EnumItem> _1e2a7c2a2_item = *it;
			{
				if (_1e15a2bb9_is_ignore_ident(_1e2a7c2a2_item->_field_ident)) {
					(*this)._method_push_err(_1e2a7c2a2_item->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
				} else {
					{
						auto expr = _108639_e->_field_items;
						auto it = expr.begin();
						_iter_begin_4349935056:;
						if (it != expr.end()) {
							jule::Ref<_1e2a21d4b_EnumItem> _1e2a7c2a2_citem = *it;
							{
								if (_1e2a7c2a2_item == _1e2a7c2a2_citem) {
									goto _iter_end_4349935056;
								} else if (_1e2a7c2a2_item->_field_ident == _1e2a7c2a2_citem->_field_ident) {
									(*this)._method_push_err(_1e2a7c2a2_item->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_item->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4349935056;
								}
							}
							_iter_next_4349935056:;
							++it;
							goto _iter_begin_4349935056;
						}
						_iter_end_4349935056:;
					}
				}
			}
			_iter_next_4349930592:;
			++it;
			goto _iter_begin_4349930592;
		}
		_iter_end_4349930592:;
	}
}



void _1e2a7c2a2_Sema::_method_check_enum_items_str(jule::Ref<_1e2a21d4b_Enum>& _110445_e) {
	{
		auto expr = _110445_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4349931520:;
		if (it != expr.end()) {
			jule::Ref<_1e2a21d4b_EnumItem> _1e2a7c2a2_item = *it;
			{
				if (_1e2a7c2a2_item->_method_auto_expr()) {
					_1e2a7c2a2_item->_field_value=jule::new_struct<_1a2c74a6c_Value>(new( std::nothrow ) _1a2c74a6c_Value(jule::Ref<_1e16025cb_Expr>(),jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::Ref<_1a2db8ce3_TypeKind>(),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a37ddd88_Const::_static_method_new_str(_1e2a7c2a2_item->_field_ident)))));
					_1e2a7c2a2_item->_field_value->_field_data->_field_model=jule::Any(_1e2a7c2a2_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_1a2c74a6c_Data> _111425_d = this->self->_method_eval(this->self)->_method_eval_expr(_1e2a7c2a2_item->_field_value->_field_expr);
					if ((!(jule::real(_111425_d)))) {
						goto _iter_next_4349931520;
					}
					if ((!(_111425_d->_method_is_const()))) {
						this->self->_method_push_err(_1e2a7c2a2_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(false,_110445_e->_field_kind->_field_kind,_111425_d,_1e2a7c2a2_item->_field_token,false);
					_1e2a7c2a2_item->_field_value->_field_data=_111425_d;
				}
			}
			_iter_next_4349931520:;
			++it;
			goto _iter_begin_4349931520;
		}
		_iter_end_4349931520:;
	}
}



void _1e2a7c2a2_Sema::_method_check_enum_items_int(jule::Ref<_1e2a21d4b_Enum>& _112945_e) {
	jule::U64 _113017_max = static_cast<jule::U64>(_1a4449817_max(_112945_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto expr = _112945_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4349958864:;
		if (it != expr.end()) {
			jule::Int _1e2a7c2a2_i = it - expr.begin();
			jule::Ref<_1e2a21d4b_EnumItem> _1e2a7c2a2_item = *it;
			{
				if (_113017_max == 0LL) {
					this->self->_method_push_err(_1e2a7c2a2_item->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				} else {
					(_113017_max)--;
				}
				if (_1e2a7c2a2_item->_method_auto_expr()) {
					_1e2a7c2a2_item->_field_value=jule::new_struct<_1a2c74a6c_Value>(new( std::nothrow ) _1a2c74a6c_Value(jule::Ref<_1e16025cb_Expr>(),jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::Ref<_1a2db8ce3_TypeKind>(),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a37ddd88_Const::_static_method_new_u64(static_cast<jule::U64>(_113017_max - (_113017_max - static_cast<jule::U64>(_1e2a7c2a2_i))))))));
					_1e2a7c2a2_item->_field_value->_field_data->_field_model=jule::Any(_1e2a7c2a2_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_1a2c74a6c_Data> _114625_d = this->self->_method_eval(this->self)->_method_eval_expr(_1e2a7c2a2_item->_field_value->_field_expr);
					if ((!(jule::real(_114625_d)))) {
						goto _iter_next_4349958864;
					}
					if ((!(_114625_d->_method_is_const()))) {
						this->self->_method_push_err(_1e2a7c2a2_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(false,_112945_e->_field_kind->_field_kind,_114625_d,_1e2a7c2a2_item->_field_token,false);
					_1e2a7c2a2_item->_field_value->_field_data=_114625_d;
				}
			}
			_iter_next_4349958864:;
			++it;
			_1e2a7c2a2_i++;
			goto _iter_begin_4349958864;
		}
		_iter_end_4349958864:;
	}
}



void _1e2a7c2a2_Sema::_method_check_enum_decl(jule::Ref<_1e2a21d4b_Enum>& _116140_e) {
	if (_1e15a2bb9_is_ignore_ident(_116140_e->_field_ident)) {
		this->self->_method_push_err(_116140_e->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_116140_e).alloc)),_116140_e->_field_ident,false)) {
		this->self->_method_push_err(_116140_e->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_116140_e->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_116140_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_116140_e->_field_token,jule::Str("there is no member for enum: @", 30),jule::Slice<jule::Any>({jule::Any(_116140_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_116140_e);
	if (jule::real(_116140_e->_field_kind)) {
		if ((!(this->self->_method_check_type(_116140_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_116140_e->_field_kind=jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ref<_1a2db8ce3_Prim> _118817_t = _116140_e->_field_kind->_field_kind->_method_prim();
	if ((!(jule::real(_118817_t)))) {
		this->self->_method_push_err(_116140_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!((_118817_t->_method_is_str()))) { goto _case_end_4349995456; }
		_case_begin_4349995456:;
		{
			this->self->_method_check_enum_items_str(_116140_e);
		}
		goto _match_end_4349991696;
		_case_end_4349995456:;
		if (!((_1a44da204_is_int(_118817_t->_method_to_str())))) { goto _case_end_4349994128; }
		_case_begin_4349994128:;
		{
			this->self->_method_check_enum_items_int(_116140_e);
		}
		goto _match_end_4349991696;
		_case_end_4349994128:;
		_case_begin_4349986432:;
		{
			this->self->_method_push_err(_116140_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4349991696;
		_case_end_4349986432:;
		_match_end_4349991696:;
	}
}



jule::Bool _1e2a7c2a2_Sema::_method_check_enum_decls(void) {
	jule::Bool _120838_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_enums;
		auto it = expr.begin();
		_iter_begin_4350000880:;
		if (it != expr.end()) {
			jule::Ref<_1e2a21d4b_Enum> _1e2a7c2a2_e = *it;
			{
				this->self->_method_check_enum_decl(_1e2a7c2a2_e);
				if (this->self->_field_errors.len() > 0LL) {
					_120838_ok = false;
					return _120838_ok;
				}
			}
			_iter_next_4350000880:;
			++it;
			goto _iter_begin_4350000880;
		}
		_iter_end_4350000880:;
	}
	_120838_ok = true;
	return _120838_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_decl_generics(jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>& _122039_generics) {
	jule::Bool _122067_ok = jule::Bool();
	_122067_ok=true;
	{
		auto expr = _122039_generics;
		auto it = expr.begin();
		_iter_begin_4350007440:;
		if (it != expr.end()) {
			jule::Int _1e2a7c2a2_i = it - expr.begin();
			jule::Ref<_1e16025cb_GenericDecl> _1e2a7c2a2_g = *it;
			{
				if (_1e15a2bb9_is_ignore_ident(_1e2a7c2a2_g->_field_ident)) {
					(*this)._method_push_err(_1e2a7c2a2_g->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
					_122067_ok=false;
					goto _iter_next_4350007440;
				}
				_julec_label_duplication_lookup:;
				{
					auto expr = _122039_generics;
					auto it = expr.begin();
					_iter_begin_4350009328:;
					if (it != expr.end()) {
						jule::Int _1e2a7c2a2_j = it - expr.begin();
						jule::Ref<_1e16025cb_GenericDecl> _1e2a7c2a2_ct = *it;
						{
							{
								if (!((_1e2a7c2a2_j >= _1e2a7c2a2_i))) { goto _case_end_4350014176; }
								_case_begin_4350014176:;
								{
									goto _iter_end_4350009328;
								}
								goto _match_end_4350013952;
								_case_end_4350014176:;
								if (!((_1e2a7c2a2_g->_field_ident == _1e2a7c2a2_ct->_field_ident))) { goto _case_end_4350014288; }
								_case_begin_4350014288:;
								{
									(*this)._method_push_err(_1e2a7c2a2_g->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_g->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									_122067_ok=false;
									goto _iter_end_4350009328;
								}
								goto _match_end_4350013952;
								_case_end_4350014288:;
								_match_end_4350013952:;
							}
						}
						_iter_next_4350009328:;
						++it;
						_1e2a7c2a2_j++;
						goto _iter_begin_4350009328;
					}
					_iter_end_4350009328:;
				}
			}
			_iter_next_4350007440:;
			++it;
			_1e2a7c2a2_i++;
			goto _iter_begin_4350007440;
		}
		_iter_end_4350007440:;
	}
	return _122067_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_fn_decl_params_dup(jule::Ref<_1e1737e81_Fn>& _124844_f) {
	jule::Bool _124854_ok = jule::Bool();
	_124854_ok=true;
	_julec_label_check:;
	{
		auto expr = _124844_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4350022032:;
		if (it != expr.end()) {
			jule::Int _1e2a7c2a2_i = it - expr.begin();
			jule::Ref<_1e1737e81_Param> _1e2a7c2a2_p = *it;
			{
				{
					auto expr = _124844_f->_field_generics;
					auto it = expr.begin();
					_iter_begin_4350024864:;
					if (it != expr.end()) {
						jule::Ref<_1e16025cb_GenericDecl> _1e2a7c2a2_g = *it;
						{
							if (_1e2a7c2a2_p->_field_ident == _1e2a7c2a2_g->_field_ident) {
								_124854_ok=false;
								(*this)._method_push_err(_1e2a7c2a2_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_p->_field_ident)}));
								(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								goto _iter_next_4350022032;
							}
						}
						_iter_next_4350024864:;
						++it;
						goto _iter_begin_4350024864;
					}
					_iter_end_4350024864:;
				}
				_julec_label_params_lookup:;
				{
					auto expr = _124844_f->_field_params;
					auto it = expr.begin();
					_iter_begin_4350025312:;
					if (it != expr.end()) {
						jule::Int _1e2a7c2a2_j = it - expr.begin();
						jule::Ref<_1e1737e81_Param> _1e2a7c2a2_jp = *it;
						{
							{
								if (!((_1e2a7c2a2_j >= _1e2a7c2a2_i))) { goto _case_end_4350032288; }
								_case_begin_4350032288:;
								{
									goto _iter_end_4350025312;
								}
								goto _match_end_4350032048;
								_case_end_4350032288:;
								if (!((_1e15a2bb9_is_anon_ident(_1e2a7c2a2_p->_field_ident) || _1e15a2bb9_is_anon_ident(_1e2a7c2a2_jp->_field_ident)))) { goto _case_end_4350032400; }
								_case_begin_4350032400:;
								{
									goto _iter_end_4350025312;
								}
								goto _match_end_4350032048;
								_case_end_4350032400:;
								if (!((_1e2a7c2a2_p->_field_ident == _1e2a7c2a2_jp->_field_ident))) { goto _case_end_4350032512; }
								_case_begin_4350032512:;
								{
									_124854_ok=false;
									(*this)._method_push_err(_1e2a7c2a2_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_p->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_next_4350022032;
								}
								goto _match_end_4350032048;
								_case_end_4350032512:;
								_match_end_4350032048:;
							}
						}
						_iter_next_4350025312:;
						++it;
						_1e2a7c2a2_j++;
						goto _iter_begin_4350025312;
					}
					_iter_end_4350025312:;
				}
			}
			_iter_next_4350022032:;
			++it;
			_1e2a7c2a2_i++;
			goto _iter_begin_4350022032;
		}
		_iter_end_4350022032:;
	}
	return _124854_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_fn_decl_result_dup(jule::Ref<_1e1737e81_Fn>& _128444_f) {
	jule::Bool _128454_ok = jule::Bool();
	_128454_ok=true;
	if (_128444_f->_method_is_void()) {
		return _128454_ok;
	}
	{
		auto expr = _128444_f->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4350042640:;
		if (it != expr.end()) {
			jule::Int _1e2a7c2a2_i = it - expr.begin();
			_1e15a2bb9_Token _1e2a7c2a2_v = *it;
			{
				if (_1e15a2bb9_is_ignore_ident(_1e2a7c2a2_v._field_kind)) {
					goto _iter_next_4350042640;
				}
				{
					auto expr = _128444_f->_field_generics;
					auto it = expr.begin();
					_iter_begin_4350045872:;
					if (it != expr.end()) {
						jule::Ref<_1e16025cb_GenericDecl> _1e2a7c2a2_g = *it;
						{
							if (_1e2a7c2a2_v._field_kind == _1e2a7c2a2_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4350045872:;
						++it;
						goto _iter_begin_4350045872;
					}
					_iter_end_4350045872:;
				}
				{
					auto expr = _128444_f->_field_params;
					auto it = expr.begin();
					_iter_begin_4350049120:;
					if (it != expr.end()) {
						jule::Ref<_1e1737e81_Param> _1e2a7c2a2_p = *it;
						{
							if (_1e2a7c2a2_v._field_kind == _1e2a7c2a2_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4350049120:;
						++it;
						goto _iter_begin_4350049120;
					}
					_iter_end_4350049120:;
				}
				_julec_label_itself_lookup:;
				{
					auto expr = _128444_f->_field_result->_field_idents;
					auto it = expr.begin();
					_iter_begin_4350053216:;
					if (it != expr.end()) {
						jule::Int _1e2a7c2a2_j = it - expr.begin();
						_1e15a2bb9_Token _1e2a7c2a2_jv = *it;
						{
							{
								if (!((_1e2a7c2a2_j >= _1e2a7c2a2_i))) { goto _case_end_4350055472; }
								_case_begin_4350055472:;
								{
									goto _iter_end_4350053216;
								}
								goto _match_end_4350055248;
								_case_end_4350055472:;
								if (!((_1e2a7c2a2_jv._field_kind == _1e2a7c2a2_v._field_kind))) { goto _case_end_4350055584; }
								_case_begin_4350055584:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_4350055248;
								_case_end_4350055584:;
								_match_end_4350055248:;
							}
						}
						_iter_next_4350053216:;
						++it;
						_1e2a7c2a2_j++;
						goto _iter_begin_4350053216;
					}
					_iter_end_4350053216:;
				}
				goto _iter_next_4350042640;
				_julec_label_exist:;
				(*this)._method_push_err(_1e2a7c2a2_v,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_v._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
				_128454_ok=false;
			}
			_iter_next_4350042640:;
			++it;
			_1e2a7c2a2_i++;
			goto _iter_begin_4350042640;
		}
		_iter_end_4350042640:;
	}
	return _128454_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_fn_decl_types(jule::Ref<_1e1737e81_Fn>& _133344_f) {
	jule::Bool _133354_ok = jule::Bool();
	_133354_ok=true;
	jule::Slice<jule::Ref<_1e16025cb_GenericDecl>> _133617_generics = _133344_f->_field_generics;
	if (jule::real(_133344_f->_field_owner)) {
		_133617_generics=jule::append(_133617_generics,_133344_f->_field_owner->_field_generics);
	}
	{
		auto expr = _133344_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4350069424:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Param> _1e2a7c2a2_p = *it;
			{
				if ((!(_1e2a7c2a2_p->_method_is_self()))) {
					jule::Ref<_1a2db8ce3_TypeKind> _134325_kind = this->self->_method_build_non_generic_type_kind(_1e2a7c2a2_p->_field_kind->_field_decl,_133617_generics);
					_133354_ok=jule::real(_134325_kind) && _133354_ok;
					_1e2a7c2a2_p->_field_kind->_field_kind=_134325_kind;
				}
			}
			_iter_next_4350069424:;
			++it;
			goto _iter_begin_4350069424;
		}
		_iter_end_4350069424:;
	}
	if ((!(_133344_f->_method_is_void()))) {
		jule::Ref<_1a2db8ce3_TypeKind> _135021_kind = this->self->_method_build_non_generic_type_kind(_133344_f->_field_result->_field_kind->_field_decl,_133617_generics);
		_133354_ok=jule::real(_135021_kind) && _133354_ok;
		_133344_f->_field_result->_field_kind->_field_kind=_135021_kind;
	}
	_133354_ok = _133354_ok;
	return _133354_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_fn_decl_prototype(jule::Ref<_1e1737e81_Fn>& _136048_f) {
	jule::Bool _136058_ok = jule::Bool();
	{
		if (!(((!(this->self->_method_check_decl_generics(_136048_f->_field_generics)))))) { goto _case_end_4350079568; }
		_case_begin_4350079568:;
		{
			_136058_ok = false;
			return _136058_ok;
		}
		goto _match_end_4350077952;
		_case_end_4350079568:;
		if (!(((!(this->self->_method_check_fn_decl_params_dup(_136048_f)))))) { goto _case_end_4350079088; }
		_case_begin_4350079088:;
		{
			_136058_ok = false;
			return _136058_ok;
		}
		goto _match_end_4350077952;
		_case_end_4350079088:;
		if (!(((!(this->self->_method_check_fn_decl_result_dup(_136048_f)))))) { goto _case_end_4350079200; }
		_case_begin_4350079200:;
		{
			_136058_ok = false;
			return _136058_ok;
		}
		goto _match_end_4350077952;
		_case_end_4350079200:;
		if (!(((!(this->self->_method_check_fn_decl_types(_136048_f)))))) { goto _case_end_4350079312; }
		_case_begin_4350079312:;
		{
			_136058_ok = false;
			return _136058_ok;
		}
		goto _match_end_4350077952;
		_case_end_4350079312:;
		_case_begin_4350078112:;
		{
			_136058_ok = true;
			return _136058_ok;
		}
		goto _match_end_4350077952;
		_case_end_4350078112:;
		_match_end_4350077952:;
	}
}



void _1e2a7c2a2_Sema::_method_check_trait_decl_method(jule::Ref<_1e1737e81_Fn>& _137048_f) {
	if (_1e15a2bb9_is_ignore_ident(_137048_f->_field_ident)) {
		this->self->_method_push_err(_137048_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_fn_decl_prototype(_137048_f);
	_137048_f->_field_sema=this->self;
}



void _1e2a7c2a2_Sema::_method_check_trait_decl_methods(jule::Ref<_1e2a1e563_Trait>& _137949_t) {
	{
		auto expr = _137949_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4350091776:;
		if (it != expr.end()) {
			jule::Int _1e2a7c2a2_i = it - expr.begin();
			jule::Ref<_1e1737e81_Fn> _1e2a7c2a2_f = *it;
			{
				this->self->_method_check_trait_decl_method(_1e2a7c2a2_f);
				_137949_t->_field_mutable=_137949_t->_field_mutable || _1e2a7c2a2_f->_field_params[0LL]->_field_mutable;
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto expr = _137949_t->_field_methods;
					auto it = expr.begin();
					_iter_begin_4350097536:;
					if (it != expr.end()) {
						jule::Int _1e2a7c2a2_j = it - expr.begin();
						jule::Ref<_1e1737e81_Fn> _1e2a7c2a2_jf = *it;
						{
							{
								if (!((_1e2a7c2a2_j >= _1e2a7c2a2_i))) { goto _case_end_4350100064; }
								_case_begin_4350100064:;
								{
									goto _iter_end_4350097536;
								}
								goto _match_end_4350099840;
								_case_end_4350100064:;
								if (!((_1e2a7c2a2_f->_field_ident == _1e2a7c2a2_jf->_field_ident))) { goto _case_end_4350100176; }
								_case_begin_4350100176:;
								{
									this->self->_method_push_err(_1e2a7c2a2_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_f->_field_ident)}));
									this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4350097536;
								}
								goto _match_end_4350099840;
								_case_end_4350100176:;
								_match_end_4350099840:;
							}
						}
						_iter_next_4350097536:;
						++it;
						_1e2a7c2a2_j++;
						goto _iter_begin_4350097536;
					}
					_iter_end_4350097536:;
				}
			}
			_iter_next_4350091776:;
			++it;
			_1e2a7c2a2_i++;
			goto _iter_begin_4350091776;
		}
		_iter_end_4350091776:;
	}
}



void _1e2a7c2a2_Sema::_method_check_trait_decl(jule::Ref<_1e2a1e563_Trait>& _141141_t) {
	if (_1e15a2bb9_is_ignore_ident(_141141_t->_field_ident)) {
		this->self->_method_push_err(_141141_t->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_141141_t).alloc)),_141141_t->_field_ident,false)) {
		this->self->_method_push_err(_141141_t->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_141141_t->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_trait_decl_methods(_141141_t);
}



jule::Bool _1e2a7c2a2_Sema::_method_check_trait_decls(void) {
	jule::Bool _142339_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_traits;
		auto it = expr.begin();
		_iter_begin_4350116240:;
		if (it != expr.end()) {
			jule::Ref<_1e2a1e563_Trait> _1e2a7c2a2_t = *it;
			{
				this->self->_method_check_trait_decl(_1e2a7c2a2_t);
				if (this->self->_field_errors.len() > 0LL) {
					_142339_ok = false;
					return _142339_ok;
				}
			}
			_iter_next_4350116240:;
			++it;
			goto _iter_begin_4350116240;
		}
		_iter_end_4350116240:;
	}
	_142339_ok = true;
	return _142339_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_trait_impl_methods(jule::Ref<_1e2a1e563_Trait>& _143548_base,jule::Ref<_1e2a276ae_Impl>& _143563_ipl) {
	jule::Bool _143577_ok = jule::Bool();
	_143577_ok=true;
	{
		auto expr = _143563_ipl->_field_methods;
		auto it = expr.begin();
		_iter_begin_4350123184:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1e2a7c2a2_f = *it;
			{
				if ((!(jule::real(_143548_base->_method_find_method(_1e2a7c2a2_f->_field_ident))))) {
					(*this)._method_push_err(_1e2a7c2a2_f->_field_token,jule::Str("trait @ have not any define in this identifier: @", 49),jule::Slice<jule::Any>({jule::Any(_143548_base->_field_ident),jule::Any(_1e2a7c2a2_f->_field_ident)}));
					_143577_ok=false;
				}
			}
			_iter_next_4350123184:;
			++it;
			goto _iter_begin_4350123184;
		}
		_iter_end_4350123184:;
	}
	return _143577_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_impl_to_struct(jule::Ref<_1e177440c_Struct>& _144639_dest,jule::Ref<_1e2a276ae_Impl>& _144659_ipl) {
	jule::Bool _144673_ok = jule::Bool();
	_144673_ok=true;
	{
		auto expr = _144659_ipl->_field_methods;
		auto it = expr.begin();
		_iter_begin_4350131760:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1e2a7c2a2_f = *it;
			{
				if (jule::real(_144639_dest->_method_find_method(_1e2a7c2a2_f->_field_ident,_1e2a7c2a2_f->_field_statically)) || jule::real(_144639_dest->_method_find_field(_1e2a7c2a2_f->_field_ident))) {
					this->self->_method_push_err(_1e2a7c2a2_f->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_144639_dest->_field_ident),jule::Any(_1e2a7c2a2_f->_field_ident)}));
					_144673_ok=false;
					goto _iter_next_4350131760;
				}
				if ((_144639_dest->_field_generics.len() > 0LL) && (_1e2a7c2a2_f->_field_generics.len() > 0LL)) {
					{
						auto expr = _1e2a7c2a2_f->_field_generics;
						auto it = expr.begin();
						_iter_begin_4350139168:;
						if (it != expr.end()) {
							jule::Ref<_1e16025cb_GenericDecl> _1e2a7c2a2_fg = *it;
							{
								{
									auto expr = _144639_dest->_field_generics;
									auto it = expr.begin();
									_iter_begin_4350140912:;
									if (it != expr.end()) {
										jule::Ref<_1e16025cb_GenericDecl> _1e2a7c2a2_dg = *it;
										{
											if (_1e2a7c2a2_fg->_field_ident == _1e2a7c2a2_dg->_field_ident) {
												this->self->_method_push_err(_1e2a7c2a2_fg->_field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>({}));
												_144673_ok=false;
											}
										}
										_iter_next_4350140912:;
										++it;
										goto _iter_begin_4350140912;
									}
									_iter_end_4350140912:;
								}
							}
							_iter_next_4350139168:;
							++it;
							goto _iter_begin_4350139168;
						}
						_iter_end_4350139168:;
					}
				}
				_1e2a7c2a2_f->_field_sema=this->self;
				_1e2a7c2a2_f->_field_owner=_144639_dest;
				_144639_dest->_field_methods=jule::append(_144639_dest->_field_methods,jule::Slice<jule::Ref<_1e1737e81_Fn>>({_1e2a7c2a2_f}));
			}
			_iter_next_4350131760:;
			++it;
			goto _iter_begin_4350131760;
		}
		_iter_end_4350131760:;
	}
	{
		auto expr = _144659_ipl->_field_statics;
		auto it = expr.begin();
		_iter_begin_4350141744:;
		if (it != expr.end()) {
			jule::Ref<_1ba80e105_Var> _1e2a7c2a2_v = *it;
			{
				
				if (jule::real(_144639_dest->_method_find_method(_1e2a7c2a2_v->_field_ident,true)) || jule::real(_144639_dest->_method_find_static(_1e2a7c2a2_v->_field_ident))) {
					this->self->_method_push_err(_1e2a7c2a2_v->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_144639_dest->_field_ident),jule::Any(_1e2a7c2a2_v->_field_ident)}));
					_144673_ok=false;
					goto _iter_next_4350141744;
				}
				this->self->_method_check_var_decl(_1e2a7c2a2_v,this->self);
				this->self->_method_check_type_var(_1e2a7c2a2_v,this->self);
				_144639_dest->_field_statics=jule::append(_144639_dest->_field_statics,jule::Slice<jule::Ref<_1ba80e105_Var>>({_1e2a7c2a2_v}));
			}
			_iter_next_4350141744:;
			++it;
			goto _iter_begin_4350141744;
		}
		_iter_end_4350141744:;
	}
	return _144673_ok;
}



void _1e2a7c2a2_Sema::_method_impl_trait(jule::Ref<_1e2a276ae_Impl>& _148935_decl) {
	jule::Ref<_1e2a1e563_Trait> _149017_base = this->self->_method_find_trait(_148935_decl->_field_base._field_kind);
	if ((!(jule::real(_149017_base)))) {
		_149017_base=_1a36e0bad_find_builtin_trait(_148935_decl->_field_base._field_kind);
	}
	if ((!(jule::real(_149017_base)))) {
		this->self->_method_push_err(_148935_decl->_field_base,jule::Str("any valid base definition is not exist in this identifier: @", 60),jule::Slice<jule::Any>({jule::Any(_148935_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ref<_1e177440c_Struct> _150317_dest = this->self->_method_find_struct(_148935_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_150317_dest)))) {
		this->self->_method_push_err(_148935_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_148935_decl->_field_dest._field_kind)}));
		return;
	}
	if (_150317_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_148935_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	_149017_base->_field_implemented=jule::append(_149017_base->_field_implemented,jule::Slice<jule::Ref<_1e177440c_Struct>>({_150317_dest}));
	_150317_dest->_field_implements=jule::append(_150317_dest->_field_implements,jule::Slice<jule::Ref<_1e2a1e563_Trait>>({_149017_base}));
	if (_148935_decl->_field_statics.len() > 0LL) {
		this->self->_method_push_err(_148935_decl->_field_statics[0LL]->_field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>({}));
	}
	{
		if (!(((!(this->self->_method_check_trait_impl_methods(_149017_base,_148935_decl)))))) { goto _case_end_4350175952; }
		_case_begin_4350175952:;
		{
			return;
		}
		goto _match_end_4350171776;
		_case_end_4350175952:;
		if (!(((!(this->self->_method_impl_to_struct(_150317_dest,_148935_decl)))))) { goto _case_end_4350176048; }
		_case_begin_4350176048:;
		{
			return;
		}
		goto _match_end_4350171776;
		_case_end_4350176048:;
		_match_end_4350171776:;
	}
}



void _1e2a7c2a2_Sema::_method_impl_struct(jule::Ref<_1e2a276ae_Impl>& _152736_decl) {
	
	jule::Ref<_1e177440c_Struct> _153217_dest = this->self->_method_find_struct(_152736_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_153217_dest)))) {
		this->self->_method_push_err(_152736_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_152736_decl->_field_dest._field_kind)}));
		return;
	}
	if (_153217_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_152736_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!(((!(this->self->_method_impl_to_struct(_153217_dest,_152736_decl)))))) { goto _case_end_4350188592; }
		_case_begin_4350188592:;
		{
			return;
		}
		goto _match_end_4350187088;
		_case_end_4350188592:;
		_match_end_4350187088:;
	}
}



void _1e2a7c2a2_Sema::_method_impl_impl(jule::Ref<_1e2a276ae_Impl>& _155034_decl) {
	{
		if (!((_155034_decl->_method_is_trait_impl()))) { goto _case_end_4350191536; }
		_case_begin_4350191536:;
		{
			this->self->_method_impl_trait(_155034_decl);
		}
		goto _match_end_4350191328;
		_case_end_4350191536:;
		if (!((_155034_decl->_method_is_struct_impl()))) { goto _case_end_4350191648; }
		_case_begin_4350191648:;
		{
			this->self->_method_impl_struct(_155034_decl);
		}
		goto _match_end_4350191328;
		_case_end_4350191648:;
		_match_end_4350191328:;
	}
}



void _1e2a7c2a2_Sema::_method_check_var_decl(jule::Ref<_1ba80e105_Var>& _155939_decl,jule::Trait<_1a35968cc_Lookup> _155955_l) {
	if (_1e15a2bb9_is_ignore_ident(_155939_decl->_field_ident)) {
		this->self->_method_push_err(_155939_decl->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	if (_155939_decl->_method_is_type_inferred()) {
		if (_155939_decl->_field_statically) {
			this->self->_method_push_err(_155939_decl->_field_token,jule::Str("static variables must be have type annotation", 45),jule::Slice<jule::Any>({}));
		}
		if ((!(_155939_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_155939_decl->_field_token,jule::Str("type inference declarations should have a initializer", 53),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_check_type(_155939_decl->_field_kind,_155955_l);
	}
	if (_155939_decl->_field_constant && _155939_decl->_field_reference) {
		this->self->_method_push_err(_155939_decl->_field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>({}));
	}
	if ((!(_155939_decl->_method_is_initialized()))) {
		if (_155939_decl->_field_constant) {
			this->self->_method_push_err(_155939_decl->_field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>({}));
		}
		if (_155939_decl->_field_statically) {
			this->self->_method_push_err(_155939_decl->_field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>({}));
		}
		if (_155939_decl->_field_reference) {
			this->self->_method_push_err(_155939_decl->_field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>({}));
		}
	}
}



void _1e2a7c2a2_Sema::_method_check_global_var_decl(jule::Ref<_1ba80e105_Var>& _159646_decl) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_159646_decl).alloc)),_159646_decl->_field_ident,_159646_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_159646_decl->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_159646_decl->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_159646_decl->_field_cpp_linked && _159646_decl->_field_constant) {
		this->self->_method_push_err(_159646_decl->_field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>({}));
	}
	if (((!(_159646_decl->_field_cpp_linked)) && (!(_159646_decl->_field_constant))) && (!(_159646_decl->_field_statically))) {
		this->self->_method_push_err(_159646_decl->_field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_var_decl(_159646_decl,this->self);
}



jule::Bool _1e2a7c2a2_Sema::_method_check_global_decls(void) {
	jule::Bool _161340_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_vars;
		auto it = expr.begin();
		_iter_begin_4350227840:;
		if (it != expr.end()) {
			jule::Ref<_1ba80e105_Var> _1e2a7c2a2_decl = *it;
			{
				this->self->_method_check_global_var_decl(_1e2a7c2a2_decl);
				if (this->self->_field_errors.len() > 0LL) {
					_161340_ok = false;
					return _161340_ok;
				}
			}
			_iter_next_4350227840:;
			++it;
			goto _iter_begin_4350227840;
		}
		_iter_end_4350227840:;
	}
	_161340_ok = true;
	return _161340_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_struct_trait_impl(jule::Ref<_1e177440c_Struct>& _162548_strct,jule::Ref<_1e2a1e563_Trait>& _162569_trt) {
	jule::Bool _162584_ok = jule::Bool();
	{
		auto expr = _162569_trt->_field_methods;
		auto it = expr.begin();
		_iter_begin_4350234992:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1e2a7c2a2_tf = *it;
			{
				jule::Bool _162721_exist = false;
				jule::Ref<_1e1737e81_Fn> _162821_sf = _162548_strct->_method_find_method(_1e2a7c2a2_tf->_field_ident,_1e2a7c2a2_tf->_field_statically);
				jule::Ref<_1e1737e81_FnIns> _162917_tf_k = this->self->_method_get_trait_check_fn_kind(_1e2a7c2a2_tf);
				if (jule::real(_162821_sf)) {
					jule::Ref<_1e1737e81_FnIns> _163125_sf_k = this->self->_method_get_trait_check_fn_kind(_162821_sf);
					_162721_exist=((_162917_tf_k->_field_decl->_field_public == _163125_sf_k->_field_decl->_field_public) && (_162917_tf_k->_field_decl->_field_ident == _163125_sf_k->_field_decl->_field_ident)) && _162917_tf_k->_method_equals(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_163125_sf_k)));
				}
				if ((!(_162721_exist))) {
					
					jule::Str _164025_s = _162917_tf_k->_method_get_kind_str(true);
					if (_1e2a7c2a2_tf->_field_public) {
						_164025_s=jule::Str("pub ", 4) + _164025_s;
					}
					this->self->_method_push_err(_162548_strct->_field_token,jule::Str("trait @ derived but not implemented trait's \"@\" define", 54),jule::Slice<jule::Any>({jule::Any(_162569_trt->_field_ident),jule::Any(_164025_s)}));
					_162584_ok=false;
				}
			}
			_iter_next_4350234992:;
			++it;
			goto _iter_begin_4350234992;
		}
		_iter_end_4350234992:;
	}
	return _162584_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_struct_impls(jule::Ref<_1e177440c_Struct>& _165143_s) {
	jule::Bool _165157_ok = jule::Bool();
	_165157_ok=true;
	{
		auto expr = _165143_s->_field_implements;
		auto it = expr.begin();
		_iter_begin_4350252272:;
		if (it != expr.end()) {
			jule::Ref<_1e2a1e563_Trait> _1e2a7c2a2_trt = *it;
			{
				_165157_ok=this->self->_method_check_struct_trait_impl(_165143_s,_1e2a7c2a2_trt) && _165157_ok;
			}
			_iter_next_4350252272:;
			++it;
			goto _iter_begin_4350252272;
		}
		_iter_end_4350252272:;
	}
	_165157_ok = _165157_ok;
	return _165157_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_struct_fields(jule::Ref<_1e177440c_Struct>& _165944_st) {
	jule::Bool _165959_ok = jule::Bool();
	_165959_ok=true;
	jule::Ref<_1a2db8ce3_TypeChecker> _166217_tc = jule::new_struct<_1a2db8ce3_TypeChecker>(new( std::nothrow ) _1a2db8ce3_TypeChecker(this->self,this->self,jule::new_struct<_1a2db8ce3_Referencer>(new( std::nothrow ) _1a2db8ce3_Referencer(_165944_st->_field_ident,jule::Any(_165944_st),nullptr)),_1e15a2bb9_Token(),_165944_st->_field_generics,jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>(),jule::Bool()));
	jule::I64 _167213_n = _165944_st->_field_instances.len();
	{
		auto expr = _165944_st->_field_fields;
		auto it = expr.begin();
		_iter_begin_4350261152:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Field> _1e2a7c2a2_f = *it;
			{
				_1e2a7c2a2_f->_field_owner=_165944_st;
				_1e2a7c2a2_f->_field_kind->_field_kind=_166217_tc->_method_check_decl(_1e2a7c2a2_f->_field_kind->_field_decl);
				_165959_ok=jule::real(_1e2a7c2a2_f->_field_kind->_field_kind) && _165959_ok;
				{
					auto expr = _165944_st->_field_fields;
					auto it = expr.begin();
					_iter_begin_4350265536:;
					if (it != expr.end()) {
						jule::Ref<_1e177440c_Field> _1e2a7c2a2_cf = *it;
						{
							if (_1e2a7c2a2_f == _1e2a7c2a2_cf) {
								goto _iter_end_4350265536;
							} else if (_1e2a7c2a2_f->_field_ident == _1e2a7c2a2_cf->_field_ident) {
								this->self->_method_push_err(_1e2a7c2a2_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_f->_field_ident)}));
								this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								_165959_ok=false;
							}
						}
						_iter_next_4350265536:;
						++it;
						goto _iter_begin_4350265536;
					}
					_iter_end_4350265536:;
				}
			}
			_iter_next_4350261152:;
			++it;
			goto _iter_begin_4350261152;
		}
		_iter_end_4350261152:;
	}
	if (_165959_ok && (_167213_n != _165944_st->_field_instances.len())) {
		jule::drop(_166217_tc->_field_referencer);
		_165944_st->_field_instances=_165944_st->_field_instances.slice(0LL,_167213_n);
		{
			auto expr = _165944_st->_field_fields;
			auto it = expr.begin();
			_iter_begin_4350268400:;
			if (it != expr.end()) {
				jule::Ref<_1e177440c_Field> _1e2a7c2a2_f = *it;
				{
					_1e2a7c2a2_f->_field_kind->_field_kind=_166217_tc->_method_check_decl(_1e2a7c2a2_f->_field_kind->_field_decl);
				}
				_iter_next_4350268400:;
				++it;
				goto _iter_begin_4350268400;
			}
			_iter_end_4350268400:;
		}
	}
	_165959_ok = _165959_ok;
	return _165959_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_struct_decl_methods(jule::Ref<_1e177440c_Struct>& _170150_s) {
	jule::Bool _170164_ok = jule::Bool();
	{
		auto expr = _170150_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4350277664:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1e2a7c2a2_m = *it;
			{
				if ((!(this->self->_method_check_fn_decl_types(_1e2a7c2a2_m)))) {
					_170164_ok = false;
					return _170164_ok;
				}
			}
			_iter_next_4350277664:;
			++it;
			goto _iter_begin_4350277664;
		}
		_iter_end_4350277664:;
	}
	_170164_ok = true;
	return _170164_ok;
}



void _1e2a7c2a2_Sema::_method_check_struct_decl(jule::Ref<_1e177440c_Struct>& _171042_s) {
	if (_1e15a2bb9_is_ignore_ident(_171042_s->_field_ident)) {
		this->self->_method_push_err(_171042_s->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_171042_s).alloc)),_171042_s->_field_ident,_171042_s->_field_cpp_linked)) {
		this->self->_method_push_err(_171042_s->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_171042_s->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_171042_s->_field_sema=this->self;
	{
		if (!(((!(this->self->_method_check_decl_generics(_171042_s->_field_generics)))))) { goto _case_end_4350288688; }
		_case_begin_4350288688:;
		{
			return;
		}
		goto _match_end_4350283664;
		_case_end_4350288688:;
		if (!(((!(this->self->_method_check_struct_fields(_171042_s)))))) { goto _case_end_4350288800; }
		_case_begin_4350288800:;
		{
			return;
		}
		goto _match_end_4350283664;
		_case_end_4350288800:;
		if (!(((!(this->self->_method_check_struct_decl_methods(_171042_s)))))) { goto _case_end_4350288896; }
		_case_begin_4350288896:;
		{
			return;
		}
		goto _match_end_4350283664;
		_case_end_4350288896:;
		if (!(((!(this->self->_method_check_struct_impls(_171042_s)))))) { goto _case_end_4350288992; }
		_case_begin_4350288992:;
		{
			return;
		}
		goto _match_end_4350283664;
		_case_end_4350288992:;
		_match_end_4350283664:;
	}
}



jule::Bool _1e2a7c2a2_Sema::_method_check_struct_decls(void) {
	jule::Bool _172840_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4350295376:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1e2a7c2a2_s = *it;
			{
				this->self->_method_check_struct_decl(_1e2a7c2a2_s);
				if (this->self->_field_errors.len() > 0LL) {
					_172840_ok = false;
					return _172840_ok;
				}
			}
			_iter_next_4350295376:;
			++it;
			goto _iter_begin_4350295376;
		}
		_iter_end_4350295376:;
	}
	_172840_ok = true;
	return _172840_ok;
}



void _1e2a7c2a2_Sema::_method_check_fn_decl(jule::Ref<_1e1737e81_Fn>& _174138_f) {
	if (_1e15a2bb9_is_ignore_ident(_174138_f->_field_ident)) {
		this->self->_method_push_err(_174138_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_174138_f).alloc)),_174138_f->_field_ident,_174138_f->_field_cpp_linked)) {
		this->self->_method_push_err(_174138_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_174138_f->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_174138_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_174138_f);
}



jule::Bool _1e2a7c2a2_Sema::_method_check_fn_decls(void) {
	jule::Bool _175436_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4350310000:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1e2a7c2a2_f = *it;
			{
				this->self->_method_check_fn_decl(_1e2a7c2a2_f);
				if (this->self->_field_errors.len() > 0LL) {
					_175436_ok = false;
					return _175436_ok;
				}
			}
			_iter_next_4350310000:;
			++it;
			goto _iter_begin_4350310000;
		}
		_iter_end_4350310000:;
	}
	_175436_ok = true;
	return _175436_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_directive_pass(_1e28b6a59_Pass& _176640_pass) {
	jule::Bool _176654_ok = jule::Bool();
	if (_176640_pass._field_text == jule::Str()) {
		_176654_ok = true;
		return _176654_ok;
	}
	if (_176640_pass._field_text[0LL] != '-') {
		(*this)._method_push_err(_176640_pass._field_token,jule::Str("the pass directive must be start with dash", 42),jule::Slice<jule::Any>({}));
		_176654_ok = false;
		return _176654_ok;
	}
	_176654_ok = true;
	return _176654_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_passes(void) {
	jule::Bool _177933_ok = jule::Bool();
	_177933_ok=true;
	{
		auto expr = (*this)._field_file->_field_passes;
		auto it = expr.begin();
		_iter_begin_4350322048:;
		if (it != expr.end()) {
			_1e28b6a59_Pass _1e2a7c2a2_pass = *it;
			{
				_177933_ok=(*this)._method_check_directive_pass(_1e2a7c2a2_pass) && _177933_ok;
			}
			_iter_next_4350322048:;
			++it;
			goto _iter_begin_4350322048;
		}
		_iter_end_4350322048:;
	}
	return _177933_ok;
}



void _1e2a7c2a2_Sema::_method_push_cycle_error(jule::Ref<_1e177440c_Struct>& _178732_st1,jule::Ref<_1e177440c_Struct>& _178747_st2,jule::Str& _178766_message) {
	
	jule::Str _179013_refers_to = _1ec8e8025_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_178732_st1->_field_ident),jule::Any(_178747_st2->_field_ident)}));
	_178766_message=((_1e28b6a59_str_repeat(jule::Str(" ", 1),4LL) + _179013_refers_to) + jule::Str("\n", 1)) + _178766_message;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_cross_cycle(jule::Ref<_1e177440c_Struct>& _179433_st1,jule::Ref<_1e177440c_Struct>& _179448_st2,jule::Str& _179467_message) {
	{
		auto expr = _179448_st2->_field_uses;
		auto it = expr.begin();
		_iter_begin_4350334960:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1e2a7c2a2_u = *it;
			{
				if ((_1e2a7c2a2_u).alloc == (_179433_st1).alloc) {
					(*this)._method_push_cycle_error(_179448_st2,_1e2a7c2a2_u,_179467_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_179433_st1,_1e2a7c2a2_u,_179467_message)))) {
					(*this)._method_push_cycle_error(_179448_st2,_1e2a7c2a2_u,_179467_message);
					return false;
				}
			}
			_iter_next_4350334960:;
			++it;
			goto _iter_begin_4350334960;
		}
		_iter_end_4350334960:;
	}
	return true;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _181053_derive,jule::Ref<_1e177440c_Struct>& _181067_st1,jule::Ref<_1a2db8ce3_TypeKind>& _181086_k) {
	jule::Bool _1810102_ok = jule::Bool();
	jule::Ref<_1e177440c_Struct> _181117_st2 = _1a2db8ce3_get_struct_from_kind(_181086_k);
	if ((!(jule::real(_181117_st2)))) {
		_1810102_ok = true;
		return _1810102_ok;
	}
	if ((_181067_st1).alloc == (_181117_st2).alloc) {
		(*this)._method_push_err(_181067_st1->_field_token,jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57),jule::Slice<jule::Any>({jule::Any(_181053_derive),jule::Any(_181067_st1->_field_ident)}));
		_1810102_ok = false;
		return _1810102_ok;
	}
	jule::Str _182317_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_181067_st1,_181117_st2,_182317_message)))) {
		jule::Str _182621_err_msg = _182317_message;
		_182317_message=jule::Str();
		(*this)._method_push_cycle_error(_181067_st1,_181117_st2,_182317_message);
		_182621_err_msg=_182621_err_msg + _182317_message;
		(*this)._method_push_err(_181067_st1->_field_token,jule::Str("illegal cross cycle for \"@\" derive;\n@", 37),jule::Slice<jule::Any>({jule::Any(_181053_derive),jule::Any(_182621_err_msg)}));
		_1810102_ok = false;
		return _1810102_ok;
	}
	_1810102_ok = true;
	return _1810102_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_struct_ins_derive_clone(jule::Ref<_1e177440c_StructIns> _183752_st) {
	jule::Bool _183770_ok = jule::Bool();
	if ((!(_183752_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_183770_ok = true;
		return _183770_ok;
	}
	{
		auto expr = _183752_st->_field_fields;
		auto it = expr.begin();
		_iter_begin_4350357088:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_FieldIns> _1e2a7c2a2_f = *it;
			{
				if ((!(jule::real(_1e2a7c2a2_f->_field_kind))) || (!(_1e2a7c2a2_f->_field_kind->_method_mutable()))) {
					goto _iter_next_4350357088;
				}
				if ((!(_1e2a7c2a2_f->_field_kind->_method_supports_cloning()))) {
					(*this)._method_push_err(_183752_st->_field_decl->_field_token,jule::Str("type \"@\" is not compatible to derive \"@\"", 40),jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_183770_ok = false;
					return _183770_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_183752_st->_field_decl,_1e2a7c2a2_f->_field_kind)))) {
					_183770_ok = false;
					return _183770_ok;
				}
			}
			_iter_next_4350357088:;
			++it;
			goto _iter_begin_4350357088;
		}
		_iter_end_4350357088:;
	}
	_183770_ok = true;
	return _183770_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_struct_derive_clone(jule::Ref<_1e177440c_Struct>& _186049_st) {
	jule::Bool _186064_ok = jule::Bool();
	_186064_ok = (*this)._method_check_struct_ins_derive_clone(_186049_st->_method_instance());
	return _186064_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_file_derives(void) {
	jule::Bool _186439_ok = jule::Bool();
	{
		auto expr = (*this)._field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4350374048:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1e2a7c2a2_st = *it;
			{
				_186439_ok=(*this)._method_check_struct_derive_clone(_1e2a7c2a2_st);
				if ((!(_186439_ok))) {
					goto _iter_end_4350374048;
				}
			}
			_iter_next_4350374048:;
			++it;
			goto _iter_begin_4350374048;
		}
		_iter_end_4350374048:;
	}
	_186439_ok = _186439_ok;
	return _186439_ok;
}



void _1e2a7c2a2_Sema::_method_check_package_derives(void) {
	{
		auto expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4350377664:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				(*this)._method_set_current_file(_1e2a7c2a2_f);
				jule::Bool _187917_ok = (*this)._method_check_file_derives();
				if ((!(_187917_ok))) {
					return;
				}
			}
			_iter_next_4350377664:;
			++it;
			goto _iter_begin_4350377664;
		}
		_iter_end_4350377664:;
	}
}



void _1e2a7c2a2_Sema::_method_check_package_decls(void) {
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4350382512:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_f);
				if ((!(this->self->_method_check_passes()))) {
					return;
				}
			}
			_iter_next_4350382512:;
			++it;
			goto _iter_begin_4350382512;
		}
		_iter_end_4350382512:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4350383088:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_4350383088:;
			++it;
			goto _iter_begin_4350383088;
		}
		_iter_end_4350383088:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4350386032:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_4350386032:;
			++it;
			goto _iter_begin_4350386032;
		}
		_iter_end_4350386032:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4350388880:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_4350388880:;
			++it;
			goto _iter_begin_4350388880;
		}
		_iter_end_4350388880:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4350391568:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_4350391568:;
			++it;
			goto _iter_begin_4350391568;
		}
		_iter_end_4350391568:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4350394304:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_4350394304:;
			++it;
			goto _iter_begin_4350394304;
		}
		_iter_end_4350394304:;
	}
	this->self->_method_check_package_derives();
}



void _1e2a7c2a2_Sema::_method_check_data_for_type_inference(jule::Ref<_1a2c74a6c_Data>& _193449_d,_1e15a2bb9_Token& _193460_err_token) {
	{
		if (!((_193449_d->_method_is_nil()))) { goto _case_end_4350402880; }
		_case_begin_4350402880:;
		{
			(*this)._method_push_err(_193460_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4350402672;
		_case_end_4350402880:;
		if (!((_193449_d->_method_is_void()))) { goto _case_end_4350402992; }
		_case_begin_4350402992:;
		{
			(*this)._method_push_err(_193460_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4350402672;
		_case_end_4350402992:;
		if (!((_193449_d->_field_kind->_field_variadic))) { goto _case_end_4350403104; }
		_case_begin_4350403104:;
		{
			(*this)._method_push_err(_193460_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4350402672;
		_case_end_4350403104:;
		_match_end_4350402672:;
	}
}



void _1e2a7c2a2_Sema::_method_check_var(jule::Ref<_1ba80e105_Var>& _194734_v) {
	if (_194734_v->_field_cpp_linked) {
		return;
	}
	if (_194734_v->_method_is_type_inferred()) {
		_194734_v->_field_kind=jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),_194734_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_194734_v->_field_value->_field_data,_194734_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ref<_1a2db8ce3_Arr> _195921_arr = _194734_v->_field_kind->_field_kind->_method_arr();
		if (jule::real(_195921_arr)) {
			if (_195921_arr->_field_auto) {
				jule::Ref<_1a2db8ce3_Arr> _196225_data_arr = _194734_v->_field_value->_field_data->_field_kind->_method_arr();
				if (jule::real(_196225_data_arr)) {
					_195921_arr->_field_n=_196225_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_194734_v->_field_reference,_194734_v->_field_kind->_field_kind,_194734_v->_field_value->_field_data,_194734_v->_field_value->_field_expr->_field_token,false);
	}
	if (_194734_v->_field_reference && (!(_1a2db8ce3_is_valid_for_ref(_194734_v->_field_kind->_field_kind)))) {
		this->self->_method_push_err(_194734_v->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_194734_v->_field_kind->_field_kind->_method_to_str())}));
	}
	this->self->_method_check_validity_for_init_expr(_194734_v->_field_mutable,_194734_v->_field_reference,_194734_v->_field_kind->_field_kind,_194734_v->_field_value->_field_data,_194734_v->_field_value->_field_expr->_field_token);
	if (_194734_v->_field_constant) {
		if ((!(_194734_v->_field_value->_field_data->_method_is_const()))) {
			this->self->_method_push_err(_194734_v->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
		}
	} else {
		jule::drop(_194734_v->_field_value->_field_data->_field_constant);
	}
	if (jule::real(_194734_v->_field_kind->_field_kind->_method_tup())) {
		jule::drop(_194734_v->_field_kind->_field_kind);
	}
}



void _1e2a7c2a2_Sema::_method_check_type_var(jule::Ref<_1ba80e105_Var>& _199739_decl,jule::Trait<_1a35968cc_Lookup> _199755_l) {
	if (_199739_decl->_field_cpp_linked || (!(_199739_decl->_method_is_initialized()))) {
		return;
	}
	jule::Ref<_1a2c74a6c_Eval> _200217_eval = ((jule::real(_199739_decl->_field_kind)) ? (this->self->_method_evalpd(_199755_l,_199739_decl->_field_kind->_field_kind,_199739_decl)) : (this->self->_method_evalpd(_199755_l,jule::new_ref<_1a2db8ce3_TypeKind>(),_199739_decl)));
	_200217_eval->_field_immutable=(!(_199739_decl->_field_mutable));
	_199739_decl->_field_value->_field_data=_200217_eval->_method_eval_expr(_199739_decl->_field_value->_field_expr);
	if ((!(jule::real(_199739_decl->_field_value->_field_data)))) {
		return;
	}
	this->self->_method_check_var(_199739_decl);
}



void _1e2a7c2a2_Sema::_method_check_global_types(void) {
	{
		auto expr = this->self->_field_file->_field_vars;
		auto it = expr.begin();
		_iter_begin_4348850784:;
		if (it != expr.end()) {
			jule::Ref<_1ba80e105_Var> _1e2a7c2a2_decl = *it;
			{
				this->self->_method_check_type_var(_1e2a7c2a2_decl,this->self);
			}
			_iter_next_4348850784:;
			++it;
			goto _iter_begin_4348850784;
		}
		_iter_end_4348850784:;
	}
}



void _1e2a7c2a2_Sema::_method_check_type_method(jule::Ref<_1e177440c_StructIns>& _202342_strct,jule::Ref<_1e1737e81_Fn>& _202366_f) {
	if (_202366_f->_field_cpp_linked) {
		return;
	}
	if (_202366_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_202366_f->_field_instances.len() == 0LL) {
		jule::Ref<_1e1737e81_FnIns> _203421_ins = _202366_f->_method_instance();
		_203421_ins->_field_owner=_202342_strct;
		_202366_f->_method_append_instance(_203421_ins);
		this->self->_method_reload_fn_ins_types(_203421_ins);
		_203421_ins->_field_reloaded=true;
	}
	{
		auto expr = _202366_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4348858048:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_FnIns> _1e2a7c2a2_ins = *it;
			{
				if (_1e2a7c2a2_ins->_field_scope->_field_stmts.len() > 0LL) {
					goto _iter_next_4348858048;
				}
				this->self->_method_check_fn_ins(_1e2a7c2a2_ins);
			}
			_iter_next_4348858048:;
			++it;
			goto _iter_begin_4348858048;
		}
		_iter_end_4348858048:;
	}
}



void _1e2a7c2a2_Sema::_method_check_type_struct(jule::Ref<_1e177440c_Struct>& _205042_strct) {
	if (_205042_strct->_field_cpp_linked) {
		return;
	}
	if (_205042_strct->_field_generics.len() > 0LL) {
		return;
	}
	if (_205042_strct->_field_instances.len() == 0LL) {
		jule::Ref<_1e177440c_StructIns> _206121_ins = _205042_strct->_method_instance();
		_206121_ins->_field_checked=true;
		_205042_strct->_method_append_instance(_206121_ins);
	}
	{
		auto expr = _205042_strct->_field_instances;
		auto it = expr.begin();
		_iter_begin_4348871568:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_StructIns> _1e2a7c2a2_ins = *it;
			{
				{
					auto expr = _1e2a7c2a2_ins->_field_methods;
					auto it = expr.begin();
					_iter_begin_4348875792:;
					if (it != expr.end()) {
						jule::Ref<_1e1737e81_Fn> _1e2a7c2a2_f = *it;
						{
							this->self->_method_check_type_method(_1e2a7c2a2_ins,_1e2a7c2a2_f);
						}
						_iter_next_4348875792:;
						++it;
						goto _iter_begin_4348875792;
					}
					_iter_end_4348875792:;
				}
			}
			_iter_next_4348871568:;
			++it;
			goto _iter_begin_4348871568;
		}
		_iter_end_4348871568:;
	}
}



void _1e2a7c2a2_Sema::_method_check_struct_types(void) {
	{
		auto expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4348878480:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1e2a7c2a2_s = *it;
			{
				this->self->_method_check_type_struct(_1e2a7c2a2_s);
			}
			_iter_next_4348878480:;
			++it;
			goto _iter_begin_4348878480;
		}
		_iter_end_4348878480:;
	}
}



void _1e2a7c2a2_Sema::_method_check_rets(jule::Ref<_1e1737e81_FnIns>& _207934_f) {
	if (_207934_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _208413_ok = _1e2a7c2a2_has_ret(_207934_f->_field_scope);
	if ((!(_208413_ok))) {
		(*this)._method_push_err(_207934_f->_field_decl->_field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>({}));
	}
}



void _1e2a7c2a2_Sema::_method_check_fn_ins_sc(jule::Ref<_1e1737e81_FnIns>& _209039_f,jule::Ref<_1e2a2e210_ScopeChecker>& _209055_sc) {
	if (_209039_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ref<_1ba80e105_Var>> _209517_vars = _1e2a7c2a2_build_ret_vars(_209039_f);
	_209055_sc->_field_table->_field_vars=jule::append(_209055_sc->_field_table->_field_vars,_209517_vars);
	_209055_sc->_field_table->_field_vars=jule::append(_209055_sc->_field_table->_field_vars,_1e2a7c2a2_build_param_vars(_209039_f));
	_209055_sc->_field_table->_field_type_aliases=jule::append(_209055_sc->_field_table->_field_type_aliases,_1e2a7c2a2_build_generic_type_aliases(_209039_f));
	_209055_sc->_method_check(_209039_f->_field_decl->_field_scope,_209039_f->_field_scope);
	if (_209517_vars.len() > 0LL) {
		jule::Slice<jule::Any> _210521_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_209039_f->_field_scope->_field_stmts.len() + _209517_vars.len()));
		{
			auto expr = _209517_vars;
			auto it = expr.begin();
			_iter_begin_4348899392:;
			if (it != expr.end()) {
				jule::Ref<_1ba80e105_Var> _1e2a7c2a2_v = *it;
				{
					_210521_stmts=jule::append(_210521_stmts,jule::Slice<jule::Any>({jule::Any(_1e2a7c2a2_v)}));
				}
				_iter_next_4348899392:;
				++it;
				goto _iter_begin_4348899392;
			}
			_iter_end_4348899392:;
		}
		_210521_stmts=jule::append(_210521_stmts,_209039_f->_field_scope->_field_stmts);
		_209039_f->_field_scope->_field_stmts=_210521_stmts;
	}
	(*this)._method_check_rets(_209039_f);
}



void _1e2a7c2a2_Sema::_method_check_fn_ins(jule::Ref<_1e1737e81_FnIns>& _211736_f) {
	if (_211736_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ref<_1a2d05801_SymbolTable> _212217_old = _211736_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_211736_f->_field_decl->_field_sema->_method_set_current_file(_212217_old);
	});
	jule::Ref<_1a2d05801_SymbolTable> _212417_file = _1e2a7c2a2_find_file(_211736_f->_field_decl->_field_sema->_field_files,_211736_f->_field_decl->_field_token._field_file);
	if (jule::real(_212417_file)) {
		_211736_f->_field_decl->_field_sema->_method_set_current_file(_212417_file);
	}
	jule::Ref<_1e2a2e210_ScopeChecker> _212917_sc = _1e2a2e210_new_scope_checker(_211736_f->_field_decl->_field_sema,_211736_f);
	(*this)._method_check_fn_ins_sc(_211736_f,_212917_sc);
	if ((_211736_f->_field_decl->_field_sema).alloc != (&((*this)))) {
		(*this)._field_errors=jule::append((*this)._field_errors,_211736_f->_field_decl->_field_sema->_field_errors);
		_211736_f->_field_decl->_field_sema->_field_errors=nullptr;
	}
}



void _1e2a7c2a2_Sema::_method_check_type_fn(jule::Ref<_1e1737e81_Fn>& _213838_f) {
	if (_213838_f->_field_cpp_linked) {
		return;
	}
	if (_213838_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto expr = _213838_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4348920144:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_FnIns> _1e2a7c2a2_ins = *it;
			{
				this->self->_method_check_fn_ins(_1e2a7c2a2_ins);
			}
			_iter_next_4348920144:;
			++it;
			goto _iter_begin_4348920144;
		}
		_iter_end_4348920144:;
	}
}



void _1e2a7c2a2_Sema::_method_precheck_type_fn(jule::Ref<_1e1737e81_Fn>& _215341_f) {
	if (_215341_f->_field_cpp_linked) {
		return;
	}
	if (_215341_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_215341_f->_field_instances.len() == 0LL) {
		jule::Ref<_1e1737e81_FnIns> _216421_ins = _215341_f->_method_instance();
		_215341_f->_field_instances=jule::append(_215341_f->_field_instances,jule::Slice<jule::Ref<_1e1737e81_FnIns>>({_216421_ins}));
		this->self->_method_reload_fn_ins_types(_216421_ins);
		_216421_ins->_field_reloaded=true;
	}
}



jule::Bool _1e2a7c2a2_Sema::_method_precheck_fn_types(void) {
	jule::Bool _217239_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4348931984:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1e2a7c2a2_decl = *it;
			{
				this->self->_method_precheck_type_fn(_1e2a7c2a2_decl);
			}
			_iter_next_4348931984:;
			++it;
			goto _iter_begin_4348931984;
		}
		_iter_end_4348931984:;
	}
	_217239_ok = true;
	return _217239_ok;
}



jule::Bool _1e2a7c2a2_Sema::_method_check_fn_types(void) {
	jule::Bool _218036_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4348936320:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1e2a7c2a2_decl = *it;
			{
				this->self->_method_check_type_fn(_1e2a7c2a2_decl);
			}
			_iter_next_4348936320:;
			++it;
			goto _iter_begin_4348936320;
		}
		_iter_end_4348936320:;
	}
	_218036_ok = true;
	return _218036_ok;
}



void _1e2a7c2a2_Sema::_method_check_package_types(void) {
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4348939792:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_f);
				this->self->_method_check_global_types();
			}
			_iter_next_4348939792:;
			++it;
			goto _iter_begin_4348939792;
		}
		_iter_end_4348939792:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4348940224:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_4348940224:;
			++it;
			goto _iter_begin_4348940224;
		}
		_iter_end_4348940224:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4348942976:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_4348942976:;
			++it;
			goto _iter_begin_4348942976;
		}
		_iter_end_4348942976:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4348945376:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_f = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_4348945376:;
			++it;
			goto _iter_begin_4348945376;
		}
		_iter_end_4348945376:;
	}
}



void _1e2a7c2a2_Sema::_method_set_file_sema_fields(void) {
	{
		auto expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4348951024:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1e2a7c2a2_f = *it;
			{
				_1e2a7c2a2_f->_field_sema=this->self;
			}
			_iter_next_4348951024:;
			++it;
			goto _iter_begin_4348951024;
		}
		_iter_end_4348951024:;
	}
	{
		auto expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4348951696:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1e2a7c2a2_st = *it;
			{
				_1e2a7c2a2_st->_field_sema=this->self;
			}
			_iter_next_4348951696:;
			++it;
			goto _iter_begin_4348951696;
		}
		_iter_end_4348951696:;
	}
}



void _1e2a7c2a2_Sema::_method_set_sema_fields(void) {
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4348955520:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_file = *it;
			{
				this->self->_method_set_current_file(_1e2a7c2a2_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_4348955520:;
			++it;
			goto _iter_begin_4348955520;
		}
		_iter_end_4348955520:;
	}
}



void _1e2a7c2a2_Sema::_method_check(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>& _222830_files) {
	this->self->_field_files=_222830_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a7c2a2_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ba80e105_IterRelation &_Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1ba80e105_Var> _1a2c73c9c_RangeChecker::_method_build_var(jule::Ref<_1e16025cb_VarDecl>& _105729_decl) {
	jule::Ref<_1ba80e105_Var> _105817_v = _1e28b6a59_build_var(_105729_decl);
	return _105817_v;
}



void _1a2c73c9c_RangeChecker::_method_set_size_key(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _1e15a2bb9_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("int", 3))))));
	{
		auto _match_expr{ (*this)._field_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4349472656; }
		_case_begin_4349472656:;
		{
			(*this)._field_kind->_field_key_a->_field_iter_relation=jule::new_struct<_1ba80e105_IterRelation>(new( std::nothrow ) _1ba80e105_IterRelation((*this)._field_d->_field_model.operator jule::Ref<_1ba80e105_Var>()));
		}
		goto _match_end_4349477360;
		_case_end_4349472656:;
		_match_end_4349477360:;
	}
}



void _1a2c73c9c_RangeChecker::_method_check_range_expr_validity(jule::Ref<_1a2c74a6c_Data>& _108849_d,jule::Ref<_1ba80e105_Var>& _108860_key,jule::Ref<_1a2db8ce3_TypeKind>& _108876_k) {
	jule::Bool _108917__mut = _108860_key->_field_mutable;
	if (_108917__mut && (!(_108876_k->_method_mutable()))) {
		_108917__mut=false;
	}
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr(_108917__mut,_108860_key->_field_reference,_108860_key->_field_kind->_field_kind,_108849_d,(*this)._field_rang->_field_in_token);
}



void _1a2c73c9c_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1e15a2bb9_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1a2db8ce3_Slc> _110717_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),_110717_slc->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_110717_slc->_field_elem);
}



void _1a2c73c9c_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1e15a2bb9_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1a2db8ce3_Arr> _112017_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),_112017_arr->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_112017_arr->_field_elem);
}



void _1a2c73c9c_RangeChecker::_method_check_map_key_a(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _1e15a2bb9_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ref<_1a2db8ce3_Map> _113217_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),_113217_m->_field_key));
	jule::Ref<_1a2c74a6c_Data> _113617_d = jule::new_ref<_1a2c74a6c_Data>((*this)._field_d.get());
	_113617_d->_field_kind=_113217_m->_field_key;
	(*this)._method_check_range_expr_validity(_113617_d,(*this)._field_kind->_field_key_a,_113217_m->_field_key);
}



void _1a2c73c9c_RangeChecker::_method_check_map_key_b(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1e15a2bb9_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1a2db8ce3_Map> _114717_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),_114717_m->_field_val));
	jule::Ref<_1a2c74a6c_Data> _115117_d = jule::new_ref<_1a2c74a6c_Data>((*this)._field_d.get());
	_115117_d->_field_kind=_114717_m->_field_val;
	(*this)._method_check_range_expr_validity(_115117_d,(*this)._field_kind->_field_key_b,_114717_m->_field_val);
}



void _1a2c73c9c_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



void _1a2c73c9c_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1e15a2bb9_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("u8", 2))))));
}



jule::Bool _1a2c73c9c_RangeChecker::_method_check(void) {
	if (jule::real((*this)._field_d->_field_kind->_method_ref())) {
		(*this)._field_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_ExplicitDerefExprModel>(new( std::nothrow ) _1e2a30c17_ExplicitDerefExprModel((*this)._field_d->_field_model)));
		(*this)._field_d->_field_kind=(*this)._field_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_slc())))) { goto _case_end_4350606656; }
		_case_begin_4350606656:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_4350603120;
		_case_end_4350606656:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_arr())))) { goto _case_end_4350606752; }
		_case_begin_4350606752:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_4350603120;
		_case_end_4350606752:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_map())))) { goto _case_end_4350606848; }
		_case_begin_4350606848:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_4350603120;
		_case_end_4350606848:;
		_match_end_4350603120:;
	}
	jule::Ref<_1a2db8ce3_Prim> _119813_prim = (*this)._field_d->_field_kind->_method_prim();
	if (jule::real(_119813_prim) && _119813_prim->_method_is_str()) {
		(*this)._method_check_str();
		return true;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>({}));
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2c73c9c_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1e2a7b966_ImportInfo> _1a2d05801_SymbolTable::_method_find_package(jule::Str _2535_ident) {
	{
		auto expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_4350681008:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1a2d05801_pkg = *it;
			{
				if (_1a2d05801_pkg->_field_ident == _2535_ident) {
					return _1a2d05801_pkg;
				}
			}
			_iter_next_4350681008:;
			++it;
			goto _iter_begin_4350681008;
		}
		_iter_end_4350681008:;
	}
	return jule::new_ref<_1e2a7b966_ImportInfo>();
}



jule::Ref<_1e2a7b966_ImportInfo> _1a2d05801_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)> _3737_selector) {
	if (_3737_selector == nullptr) {
		return jule::new_ref<_1e2a7b966_ImportInfo>();
	}
	{
		auto expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_4350686208:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1a2d05801_pkg = *it;
			{
				if (_3737_selector(_1a2d05801_pkg)) {
					return _1a2d05801_pkg;
				}
			}
			_iter_next_4350686208:;
			++it;
			goto _iter_begin_4350686208;
		}
		_iter_end_4350686208:;
	}
	return jule::new_ref<_1e2a7b966_ImportInfo>();
}



jule::Ref<_1ba80e105_Var> _1a2d05801_SymbolTable::_method_find_var(jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return (*this)._method___find_var(_5231_ident,_5243_cpp_linked,false);
}



jule::Ref<_1a2db8ce3_TypeAlias> _1a2d05801_SymbolTable::_method_find_type_alias(jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return (*this)._method___find_type_alias(_5838_ident,_5850_cpp_linked,false);
}



jule::Ref<_1e177440c_Struct> _1a2d05801_SymbolTable::_method_find_struct(jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4350694192:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1a2d05801_s = *it;
			{
				if ((_1a2d05801_s->_field_ident == _6434_ident) && (_1a2d05801_s->_field_cpp_linked == _6446_cpp_linked)) {
					return _1a2d05801_s;
				}
			}
			_iter_next_4350694192:;
			++it;
			goto _iter_begin_4350694192;
		}
		_iter_end_4350694192:;
	}
	return jule::new_ref<_1e177440c_Struct>();
}



jule::Ref<_1e1737e81_Fn> _1a2d05801_SymbolTable::_method_find_fn(jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4350698608:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1a2d05801_f = *it;
			{
				if ((_1a2d05801_f->_field_ident == _7530_ident) && (_1a2d05801_f->_field_cpp_linked == _7542_cpp_linked)) {
					return _1a2d05801_f;
				}
			}
			_iter_next_4350698608:;
			++it;
			goto _iter_begin_4350698608;
		}
		_iter_end_4350698608:;
	}
	return jule::new_ref<_1e1737e81_Fn>();
}



jule::Ref<_1e2a1e563_Trait> _1a2d05801_SymbolTable::_method_find_trait(jule::Str _8633_ident) {
	{
		auto expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4350702416:;
		if (it != expr.end()) {
			jule::Ref<_1e2a1e563_Trait> _1a2d05801_t = *it;
			{
				if (_1a2d05801_t->_field_ident == _8633_ident) {
					return _1a2d05801_t;
				}
			}
			_iter_next_4350702416:;
			++it;
			goto _iter_begin_4350702416;
		}
		_iter_end_4350702416:;
	}
	return jule::new_ref<_1e2a1e563_Trait>();
}



jule::Ref<_1e2a21d4b_Enum> _1a2d05801_SymbolTable::_method_find_enum(jule::Str _9732_ident) {
	{
		auto expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4350705536:;
		if (it != expr.end()) {
			jule::Ref<_1e2a21d4b_Enum> _1a2d05801_e = *it;
			{
				if (_1a2d05801_e->_field_ident == _9732_ident) {
					return _1a2d05801_e;
				}
			}
			_iter_next_4350705536:;
			++it;
			goto _iter_begin_4350705536;
		}
		_iter_end_4350705536:;
	}
	return jule::new_ref<_1e2a21d4b_Enum>();
}



jule::Ref<_1ba80e105_Var> _1a2d05801_SymbolTable::_method___find_var(jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = (*this)._field_vars.len() - 1LL;
		for (; _11021_i >= 0LL; (_11021_i)--) {
			{
				jule::Ref<_1ba80e105_Var> _11225_v = (*this)._field_vars[_11021_i];
				if ((_11225_v->_field_ident == _10829_ident) && (_11225_v->_field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_4350711248:;
		}
		_iter_end_4350711248:;
	} else {
		{
			auto expr = (*this)._field_vars;
			auto it = expr.begin();
			_iter_begin_4350712528:;
			if (it != expr.end()) {
				jule::Ref<_1ba80e105_Var> _1a2d05801_v = *it;
				{
					if ((_1a2d05801_v->_field_ident == _10829_ident) && (_1a2d05801_v->_field_cpp_linked == _10841_cpp_linked)) {
						return _1a2d05801_v;
					}
				}
				_iter_next_4350712528:;
				++it;
				goto _iter_begin_4350712528;
			}
			_iter_end_4350712528:;
		}
	}
	return jule::new_ref<_1ba80e105_Var>();
}



jule::Ref<_1a2db8ce3_TypeAlias> _1a2d05801_SymbolTable::_method___find_type_alias(jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = (*this)._field_type_aliases.len() - 1LL;
		for (; _12921_i >= 0LL; (_12921_i)--) {
			{
				jule::Ref<_1a2db8ce3_TypeAlias> _13125_ta = (*this)._field_type_aliases[_12921_i];
				if ((_13125_ta->_field_ident == _12736_ident) && (_13125_ta->_field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_4350721328:;
		}
		_iter_end_4350721328:;
	} else {
		{
			auto expr = (*this)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_4350722608:;
			if (it != expr.end()) {
				jule::Ref<_1a2db8ce3_TypeAlias> _1a2d05801_ta = *it;
				{
					if ((_1a2d05801_ta->_field_ident == _12736_ident) && (_1a2d05801_ta->_field_cpp_linked == _12748_cpp_linked)) {
						return _1a2d05801_ta;
					}
				}
				_iter_next_4350722608:;
				++it;
				goto _iter_begin_4350722608;
			}
			_iter_end_4350722608:;
		}
	}
	return jule::new_ref<_1a2db8ce3_TypeAlias>();
}



jule::Any _1a2d05801_SymbolTable::_method_def_by_ident(jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_4350730000:;
		if (it != expr.end()) {
			jule::Ref<_1ba80e105_Var> _1a2d05801_v = *it;
			{
				if ((_1a2d05801_v->_field_ident == _14831_ident) && (_1a2d05801_v->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1a2d05801_v);
				}
			}
			_iter_next_4350730000:;
			++it;
			goto _iter_begin_4350730000;
		}
		_iter_end_4350730000:;
	}
	{
		auto expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4350733216:;
		if (it != expr.end()) {
			jule::Ref<_1a2db8ce3_TypeAlias> _1a2d05801_ta = *it;
			{
				if ((_1a2d05801_ta->_field_ident == _14831_ident) && (_1a2d05801_ta->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1a2d05801_ta);
				}
			}
			_iter_next_4350733216:;
			++it;
			goto _iter_begin_4350733216;
		}
		_iter_end_4350733216:;
	}
	{
		auto expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4350735024:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1a2d05801_s = *it;
			{
				if ((_1a2d05801_s->_field_ident == _14831_ident) && (_1a2d05801_s->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1a2d05801_s);
				}
			}
			_iter_next_4350735024:;
			++it;
			goto _iter_begin_4350735024;
		}
		_iter_end_4350735024:;
	}
	{
		auto expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4350734000:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1a2d05801_f = *it;
			{
				if ((_1a2d05801_f->_field_ident == _14831_ident) && (_1a2d05801_f->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1a2d05801_f);
				}
			}
			_iter_next_4350734000:;
			++it;
			goto _iter_begin_4350734000;
		}
		_iter_end_4350734000:;
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4350740768:;
		if (it != expr.end()) {
			jule::Ref<_1e2a1e563_Trait> _1a2d05801_t = *it;
			{
				if (_1a2d05801_t->_field_ident == _14831_ident) {
					return jule::Any(_1a2d05801_t);
				}
			}
			_iter_next_4350740768:;
			++it;
			goto _iter_begin_4350740768;
		}
		_iter_end_4350740768:;
	}
	{
		auto expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4350736208:;
		if (it != expr.end()) {
			jule::Ref<_1e2a21d4b_Enum> _1a2d05801_e = *it;
			{
				if (_1a2d05801_e->_field_ident == _14831_ident) {
					return jule::Any(_1a2d05801_e);
				}
			}
			_iter_next_4350736208:;
			++it;
			goto _iter_begin_4350736208;
		}
		_iter_end_4350736208:;
	}
	return jule::Any(nullptr);
}



jule::Bool _1a2d05801_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_4350747792:;
		if (it != expr.end()) {
			jule::Ref<_1ba80e105_Var> _1a2d05801_v = *it;
			{
				if (((((jule::Uintptr)((_1a2d05801_v).alloc)) != _19534_itself) && (_1a2d05801_v->_field_ident == _19551_ident)) && (_1a2d05801_v->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4350747792:;
			++it;
			goto _iter_begin_4350747792;
		}
		_iter_end_4350747792:;
	}
	{
		auto expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4350748240:;
		if (it != expr.end()) {
			jule::Ref<_1a2db8ce3_TypeAlias> _1a2d05801_ta = *it;
			{
				if (((((jule::Uintptr)((_1a2d05801_ta).alloc)) != _19534_itself) && (_1a2d05801_ta->_field_ident == _19551_ident)) && (_1a2d05801_ta->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4350748240:;
			++it;
			goto _iter_begin_4350748240;
		}
		_iter_end_4350748240:;
	}
	{
		auto expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4350750672:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1a2d05801_s = *it;
			{
				if (((((jule::Uintptr)((_1a2d05801_s).alloc)) != _19534_itself) && (_1a2d05801_s->_field_ident == _19551_ident)) && (_1a2d05801_s->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4350750672:;
			++it;
			goto _iter_begin_4350750672;
		}
		_iter_end_4350750672:;
	}
	{
		auto expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4350755712:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1a2d05801_f = *it;
			{
				if (((((jule::Uintptr)((_1a2d05801_f).alloc)) != _19534_itself) && (_1a2d05801_f->_field_ident == _19551_ident)) && (_1a2d05801_f->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4350755712:;
			++it;
			goto _iter_begin_4350755712;
		}
		_iter_end_4350755712:;
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4350755296:;
		if (it != expr.end()) {
			jule::Ref<_1e2a1e563_Trait> _1a2d05801_t = *it;
			{
				if ((((jule::Uintptr)((_1a2d05801_t).alloc)) != _19534_itself) && (_1a2d05801_t->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4350755296:;
			++it;
			goto _iter_begin_4350755296;
		}
		_iter_end_4350755296:;
	}
	{
		auto expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4350759632:;
		if (it != expr.end()) {
			jule::Ref<_1e2a21d4b_Enum> _1a2d05801_e = *it;
			{
				if ((((jule::Uintptr)((_1a2d05801_e).alloc)) != _19534_itself) && (_1a2d05801_e->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4350759632:;
			++it;
			goto _iter_begin_4350759632;
		}
		_iter_end_4350759632:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2d05801_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1a2c74a6c_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



jule::Bool _1a2c74a6c_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_void();
}



jule::Bool _1a2c74a6c_Data::_method_is_const(void) {
	return jule::real((*this)._field_constant);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2c74a6c_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2c74a6c_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



void _1a2c74a6c_Eval::_method_push_err(_1e15a2bb9_Token _27527_token,jule::Str _27541_fmt,jule::Slice<jule::Any> _27554_args) {
	(*this)._field_s->_method_push_err(_27527_token,_27541_fmt,_27554_args);
}



void _1a2c74a6c_Eval::_method_push_suggestion(jule::Str _28034_fmt,jule::Slice<jule::Any> _28047_args) {
	(*this)._field_s->_method_push_suggestion(_28034_fmt,_28047_args);
}



jule::Bool _1a2c74a6c_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



jule::Bool _1a2c74a6c_Eval::_method_is_global(void) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1e2a7c2a2_Sema>>())) { goto _case_end_4350781104; }
		_case_begin_4350781104:;
		{
			return true;
		}
		goto _match_end_4350779584;
		_case_end_4350781104:;
		_case_begin_4350779056:;
		{
			return false;
		}
		goto _match_end_4350779584;
		_case_end_4350779056:;
		_match_end_4350779584:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_lit_nil(void) {
	jule::Ref<_1a37ddd88_Const> _29917_constant = _1a37ddd88_Const::_static_method_new_nil();
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_29917_constant),false,_29917_constant));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_lit_str(jule::Ref<_1e16025cb_LitExpr> _31022_lt) {
	jule::Str _31117_s = _31022_lt->_field_value.slice(1LL,_31022_lt->_field_value.len() - 1LL);
	if (_1e15a2bb9_is_raw_str(_31022_lt->_field_value)) {
		_31117_s=_1a4552e1a_to_raw_str(static_cast<jule::Slice<jule::U8>>(_31117_s));
	} else {
		_31117_s=_1a4552e1a_to_str(static_cast<jule::Slice<jule::U8>>(_31117_s));
	}
	jule::Ref<_1a37ddd88_Const> _31717_constant = _1a37ddd88_Const::_static_method_new_str(_31117_s);
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("str", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_31717_constant),false,_31717_constant));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_lit_bool(jule::Ref<_1e16025cb_LitExpr> _33123_lit) {
	jule::Ref<_1a37ddd88_Const> _33217_constant = _1a37ddd88_Const::_static_method_new_bool(_33123_lit->_field_value == jule::Str("true", 4));
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_33217_constant),false,_33217_constant));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_lit_rune(jule::Ref<_1e16025cb_LitExpr> _34523_l) {
	
	
	jule::Str _34913_lt = _34523_l->_field_value.slice(1LL,_34523_l->_field_value.len() - 1LL);
	jule::I32 _35013_r = _1a4552e1a_to_rune(static_cast<jule::Slice<jule::U8>>(_34913_lt));
	jule::Ref<_1a2c74a6c_Data> _35117_data = jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::Ref<_1a2db8ce3_TypeKind>(),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_1a37ddd88_Const::_static_method_new_i64(static_cast<jule::I64>(_35013_r))));
	jule::Bool _35813_is_ascii = _1a4552e1a_is_ascii(_35013_r);
	if (_35813_is_ascii) {
		_35117_data->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("u8", 2))));
	} else {
		_35117_data->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i32", 3))));
	}
	_35117_data->_field_model=jule::Any(jule::new_struct<_1e2a30c17_RuneExprModel>(new( std::nothrow ) _1e2a30c17_RuneExprModel(_35013_r)));
	_35117_data->_field_is_rune=true;
	return _35117_data;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_lit_float(jule::Ref<_1e16025cb_LitExpr> _37424_l) {
	
	jule::F64 _37714_f;
	std::tie(_37714_f,std::ignore) = _1d419b9e0_parse_float(_37424_l->_field_value,64LL);
	jule::Ref<_1a37ddd88_Const> _37817_constant = _1a37ddd88_Const::_static_method_new_f64(_37714_f);
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_37817_constant),false,_37817_constant));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_lit_int(jule::Ref<_1e16025cb_LitExpr> _39226_l) {
	
	jule::Str _39517_lit = _39226_l->_field_value;
	jule::Int _39617_base = 0LL;
	{
		if (!((_39517_lit.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4350824688; }
		_case_begin_4350824688:;
		{
			_39517_lit=_39517_lit.slice(2LL);
			_39617_base=16LL;
		}
		goto _match_end_4350823184;
		_case_end_4350824688:;
		if (!((_39517_lit.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4350824416; }
		_case_begin_4350824416:;
		{
			_39517_lit=_39517_lit.slice(2LL);
			_39617_base=2LL;
		}
		goto _match_end_4350823184;
		_case_end_4350824416:;
		if (!((_39517_lit.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4350824512; }
		_case_begin_4350824512:;
		{
			_39517_lit=_39517_lit.slice(2LL);
			_39617_base=8LL;
		}
		goto _match_end_4350823184;
		_case_end_4350824512:;
		if (!(((_39517_lit[0LL] == '0') && (_39517_lit.len() > 1LL)))) { goto _case_end_4350823584; }
		_case_begin_4350823584:;
		{
			_39517_lit=_39517_lit.slice(1LL);
			_39617_base=8LL;
		}
		goto _match_end_4350823184;
		_case_end_4350823584:;
		_case_begin_4350823296:;
		{
			_39617_base=10LL;
		}
		goto _match_end_4350823184;
		_case_end_4350823296:;
		_match_end_4350823184:;
	}
	jule::Ref<_1a2c74a6c_Data> _41917_d = jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::Ref<_1a2db8ce3_TypeKind>(),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1a37ddd88_Const>()));
	jule::Any _42517_value = jule::Any(nullptr);
	jule::I64 _42614_sig;
	jule::Int _42619_err;
	std::tie(_42614_sig,_42619_err) = _1ec95de8c_parse_int(_39517_lit,_39617_base,64LL);
	if (_42619_err == 0LLU) {
		_42517_value=jule::Any(_42614_sig);
		_41917_d->_field_constant=_1a37ddd88_Const::_static_method_new_i64(_42614_sig);
	} else {
		jule::U64 _43118_unsig;
		jule::Int _43125_err;
		std::tie(_43118_unsig,_43125_err) = _1ec95de8c_parse_uint(_39517_lit,_39617_base,64LL);
		if (_43125_err != 0LLU) {
			(*this)._method_push_err(_39226_l->_field_token,jule::Str("arithmetic value overflow", 25),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>({}));
		}
		_41917_d->_field_constant=_1a37ddd88_Const::_static_method_new_u64(_43118_unsig);
		_42517_value=jule::Any(_43118_unsig);
	}
	_41917_d->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(_1a2c74a6c_kind_by_bitsize(_42517_value))));
	_1a2c74a6c_normalize_bitsize(_41917_d);
	_41917_d->_field_model=jule::Any(_41917_d->_field_constant);
	return _41917_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_lit_num(jule::Ref<_1e16025cb_LitExpr> _45026_l) {
	{
		if (!((_1e15a2bb9_is_float(_45026_l->_field_value)))) { goto _case_end_4350850320; }
		_case_begin_4350850320:;
		{
			return (*this)._method_lit_float(_45026_l);
		}
		goto _match_end_4350848816;
		_case_end_4350850320:;
		_case_begin_4350848976:;
		{
			return (*this)._method_lit_int(_45026_l);
		}
		goto _match_end_4350848816;
		_case_end_4350848976:;
		_match_end_4350848816:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_lit(jule::Ref<_1e16025cb_LitExpr> _45727_lit) {
	{
		if (!((_45727_lit->_method_is_nil()))) { goto _case_end_4350856288; }
		_case_begin_4350856288:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_4350853920;
		_case_end_4350856288:;
		if (!((_1e15a2bb9_is_str(_45727_lit->_field_value)))) { goto _case_end_4350855632; }
		_case_begin_4350855632:;
		{
			return (*this)._method_lit_str(_45727_lit);
		}
		goto _match_end_4350853920;
		_case_end_4350855632:;
		if (!((_1e15a2bb9_is_bool(_45727_lit->_field_value)))) { goto _case_end_4350855424; }
		_case_begin_4350855424:;
		{
			return (*this)._method_lit_bool(_45727_lit);
		}
		goto _match_end_4350853920;
		_case_end_4350855424:;
		if (!((_1e15a2bb9_is_rune(_45727_lit->_field_value)))) { goto _case_end_4350855520; }
		_case_begin_4350855520:;
		{
			return (*this)._method_lit_rune(_45727_lit);
		}
		goto _match_end_4350853920;
		_case_end_4350855520:;
		if (!((_1e15a2bb9_is_num(_45727_lit->_field_value)))) { goto _case_end_4350856016; }
		_case_begin_4350856016:;
		{
			return (*this)._method_lit_num(_45727_lit);
		}
		goto _match_end_4350853920;
		_case_end_4350856016:;
		_case_begin_4350854080:;
		{
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4350853920;
		_case_end_4350854080:;
		_match_end_4350853920:;
	}
}



jule::Any _1a2c74a6c_Eval::_method_find_builtins(jule::Str _46832_ident) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1e2a7b966_ImportInfo>>())) { goto _case_end_4350863408; }
		_case_begin_4350863408:;
		{
			jule::Any _47121_def = _1a2c74a6c_find_builtins_import(_46832_ident,(*this)._field_lookup.operator jule::Ref<_1e2a7b966_ImportInfo>());
			if (_47121_def != nullptr) {
				return _47121_def;
			}
		}
		goto _match_end_4350863936;
		_case_end_4350863408:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a7c2a2_Sema>>())) { goto _case_end_4350864080; }
		_case_begin_4350864080:;
		{
			jule::Any _47721_def = _1a2c74a6c_find_builtins_sema(_46832_ident,(*this)._field_lookup.operator jule::Ref<_1e2a7c2a2_Sema>());
			if (_47721_def != nullptr) {
				return _47721_def;
			}
		}
		goto _match_end_4350863936;
		_case_end_4350864080:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_ScopeChecker>>())) { goto _case_end_4350864176; }
		_case_begin_4350864176:;
		{
			jule::Any _48321_def = _1a2c74a6c_find_builtins_sema(_46832_ident,(*this)._field_lookup.operator jule::Ref<_1e2a2e210_ScopeChecker>()->_field_s);
			if (_48321_def != nullptr) {
				return _48321_def;
			}
		}
		goto _match_end_4350863936;
		_case_end_4350864176:;
		_match_end_4350863936:;
	}
	return _1a36e0bad_find_builtin_def(_46832_ident);
}



jule::Any _1a2c74a6c_Eval::_method_get_def(jule::Str _49226_ident,jule::Bool _49238_cpp_linked) {
	if ((!(_49238_cpp_linked))) {
		jule::Ref<_1e2a21d4b_Enum> _49421_enm = (*this)._field_lookup.get()._method_find_enum(_49226_ident);
		if (jule::real(_49421_enm)) {
			return jule::Any(_49421_enm);
		}
	}
	jule::Ref<_1ba80e105_Var> _50017_v = (*this)._field_lookup.get()._method_find_var(_49226_ident,_49238_cpp_linked);
	if (jule::real(_50017_v)) {
		return jule::Any(_50017_v);
	}
	jule::Ref<_1e1737e81_Fn> _50517_f = (*this)._field_lookup.get()._method_find_fn(_49226_ident,_49238_cpp_linked);
	if (jule::real(_50517_f)) {
		return jule::Any(_50517_f);
	}
	jule::Ref<_1e177440c_Struct> _51017_s = (*this)._field_lookup.get()._method_find_struct(_49226_ident,_49238_cpp_linked);
	if (jule::real(_51017_s)) {
		return jule::Any(_51017_s);
	}
	jule::Ref<_1a2db8ce3_TypeAlias> _51517_ta = (*this)._field_lookup.get()._method_find_type_alias(_49226_ident,_49238_cpp_linked);
	if (jule::real(_51517_ta)) {
		return jule::Any(_51517_ta);
	}
	return (*this)._method_find_builtins(_49226_ident);
}



void _1a2c74a6c_Eval::_method_push_reference(jule::Ref<_1e28b6a59_ReferenceStack> _52337_references) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_ScopeChecker>>())) { goto _case_end_4350896176; }
		_case_begin_4350896176:;
		{
			jule::Ref<_1e2a2e210_ScopeChecker> _52621_sc = (*this)._field_lookup.operator jule::Ref<_1e2a2e210_ScopeChecker>()->_method_get_root();
			if ((!(_52337_references->_method_exist_1(_52621_sc->_field_owner)))) {
				_52337_references->_method_push(jule::Any(_52621_sc->_field_owner));
			}
		}
		goto _match_end_4350894960;
		_case_end_4350896176:;
		_case_begin_4350894432:;
		{
			if (jule::real((*this)._field_owner) && (!(_52337_references->_method_exist_0((*this)._field_owner)))) {
				_52337_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_4350894960;
		_case_end_4350894432:;
		_match_end_4350894960:;
	}
}



void _1a2c74a6c_Eval::_method_push_reference_to_fn(jule::Ref<_1e1737e81_FnIns> _53843_f) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_ScopeChecker>>())) { goto _case_end_4350895040; }
		_case_begin_4350895040:;
		{
			jule::Ref<_1e2a2e210_ScopeChecker> _54121_sc = (*this)._field_lookup.operator jule::Ref<_1e2a2e210_ScopeChecker>()->_method_get_root();
			if (_54121_sc->_field_owner->_field_decl->_method_is_init() && (!(_54121_sc->_field_owner->_field_references->_method_exist_1(_53843_f)))) {
				_54121_sc->_field_owner->_field_refers->_method_push(jule::Any(_53843_f));
			}
		}
		goto _match_end_4350916512;
		_case_end_4350895040:;
		_match_end_4350916512:;
	}
	(*this)._method_push_reference(_53843_f->_field_references);
}



void _1a2c74a6c_Eval::_method_push_reference_to_var(jule::Ref<_1ba80e105_Var> _54944_v) {
	if ((!(jule::real(_54944_v->_field_references)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_ScopeChecker>>())) { goto _case_end_4350926752; }
		_case_begin_4350926752:;
		{
			jule::Ref<_1e2a2e210_ScopeChecker> _55621_sc = (*this)._field_lookup.operator jule::Ref<_1e2a2e210_ScopeChecker>()->_method_get_root();
			if (_55621_sc->_field_owner->_field_decl->_method_is_init() && (!(_55621_sc->_field_owner->_field_references->_method_exist_0(_54944_v)))) {
				_55621_sc->_field_owner->_field_refers->_method_push(jule::Any(_54944_v));
			}
		}
		goto _match_end_4350927184;
		_case_end_4350926752:;
		_match_end_4350927184:;
	}
	(*this)._method_push_reference(_54944_v->_field_references);
}



void _1a2c74a6c_Eval::_method_push_reference_to_struct(jule::Ref<_1e177440c_StructIns> _56547_s) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_ScopeChecker>>())) { goto _case_end_4350936704; }
		_case_begin_4350936704:;
		{
			jule::Ref<_1e2a2e210_ScopeChecker> _56821_sc = (*this)._field_lookup.operator jule::Ref<_1e2a2e210_ScopeChecker>()->_method_get_root();
			if (_56821_sc->_field_owner->_field_decl->_method_is_init() && (!(_56821_sc->_field_owner->_field_references->_method_exist_2(_56547_s)))) {
				_56821_sc->_field_owner->_field_refers->_method_push(jule::Any(_56547_s));
			}
		}
		goto _match_end_4350937232;
		_case_end_4350936704:;
		_match_end_4350937232:;
	}
	(*this)._method_push_reference(_56547_s->_field_references);
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method___eval_enum(jule::Ref<_1e2a21d4b_Enum> _57630_enm) {
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_57630_enm)),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,jule::new_ref<_1a37ddd88_Const>()));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_enum(jule::Ref<_1e2a21d4b_Enum> _58832_enm,_1e15a2bb9_Token _58844_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_58832_enm->_field_public,_58832_enm->_field_token)))) {
		(*this)._method_push_err(_58844_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_58832_enm->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	return (*this)._method___eval_enum(_58832_enm);
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method___eval_struct(jule::Ref<_1e177440c_StructIns> _59832_s) {
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_59832_s)),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_59832_s),true,jule::new_ref<_1a37ddd88_Const>()));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_struct(jule::Ref<_1e177440c_StructIns> _61134_s,_1e15a2bb9_Token _61149_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_61134_s->_field_decl->_field_public,_61134_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_61149_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_61134_s->_field_decl->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	return (*this)._method___eval_struct(_61134_s);
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_fn_ins(jule::Ref<_1e1737e81_FnIns> _62130_f) {
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_62130_f)),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_62130_f),false,jule::new_ref<_1a37ddd88_Const>()));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_fn(jule::Ref<_1e1737e81_Fn> _63430_f,_1e15a2bb9_Token _63438_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_63430_f->_field_public,_63430_f->_field_token)))) {
		(*this)._method_push_err(_63438_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_63430_f->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1e1737e81_FnIns> _64117_ins = _63430_f->_method_instance();
	(*this)._method_push_reference_to_fn(_64117_ins);
	return (*this)._method_eval_fn_ins(_64117_ins);
}



void _1a2c74a6c_Eval::_method_push_illegal_cycle_error(jule::Ref<_1ba80e105_Var> _64643_v1,jule::Ref<_1ba80e105_Var> _64653_v2,jule::Str& _64668_message) {
	
	jule::Str _64913_refers_to = _1ec8e8025_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_64643_v1->_field_ident),jule::Any(_64653_v2->_field_ident)}));
	_64668_message=((_1e28b6a59_str_repeat(jule::Str(" ", 1),4LL) + _64913_refers_to) + jule::Str("\n", 1)) + _64668_message;
}



jule::Bool _1a2c74a6c_Eval::_method_check_cross_cycle(jule::Ref<_1ba80e105_Var> _65336_v,jule::Str& _65350_message) {
	{
		auto expr = _65336_v->_field_depends;
		auto it = expr.begin();
		_iter_begin_4350995440:;
		if (it != expr.end()) {
			jule::Ref<_1ba80e105_Var> _1a2c74a6c_d = *it;
			{
				if ((_1a2c74a6c_d).alloc == ((*this)._field_owner).alloc) {
					(*this)._method_push_illegal_cycle_error(_65336_v,_1a2c74a6c_d,_65350_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_1a2c74a6c_d,_65350_message)))) {
					(*this)._method_push_illegal_cycle_error(_65336_v,_1a2c74a6c_d,_65350_message);
					return false;
				}
			}
			_iter_next_4350995440:;
			++it;
			goto _iter_begin_4350995440;
		}
		_iter_end_4350995440:;
	}
	return true;
}



jule::Bool _1a2c74a6c_Eval::_method_check_illegal_cycles(jule::Ref<_1ba80e105_Var> _67243_v,_1e15a2bb9_Token _67252_decl_token) {
	jule::Bool _67273_ok = jule::Bool();
	if ((!(jule::real((*this)._field_owner)))) {
		_67273_ok = true;
		return _67273_ok;
	}
	if (((*this)._field_owner).alloc == (_67243_v).alloc) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_67273_ok = false;
		return _67273_ok;
	}
	jule::Str _68417_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_67243_v,_68417_message)))) {
		jule::Str _68721_err_msg = _68417_message;
		_68417_message=jule::Str();
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_67243_v,_68417_message);
		_68721_err_msg=_68721_err_msg + _68417_message;
		(*this)._method_push_err(_67252_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_68721_err_msg)}));
		_67273_ok = false;
		return _67273_ok;
	}
	(*this)._field_owner->_field_depends=jule::append((*this)._field_owner->_field_depends,jule::Slice<jule::Ref<_1ba80e105_Var>>({_67243_v}));
	_67273_ok = true;
	return _67273_ok;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_var(jule::Ref<_1ba80e105_Var> _69931_v,_1e15a2bb9_Token _69940_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_69931_v->_field_public,_69931_v->_field_token)))) {
		(*this)._method_push_err(_69940_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_69931_v->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_69931_v->_field_used=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1e2a7c2a2_Sema>>())) { goto _case_end_4351017744; }
		_case_begin_4351017744:;
		{
			jule::Bool _71117_ok = (*this)._method_check_illegal_cycles(_69931_v,_69940_error_token);
			if ((!(_71117_ok))) {
				return jule::new_ref<_1a2c74a6c_Data>();
			}
		}
		goto _match_end_4351022032;
		_case_end_4351017744:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_ScopeChecker>>())) { goto _case_end_4351022304; }
		_case_begin_4351022304:;
		{
			if ((!(_69931_v->_field_reference)) || (*this)._method_is_unsafe()) {
				goto _match_end_4351022032;
			}
			jule::Ref<_1e2a2e210_ScopeChecker> _72121_s = (*this)._field_lookup.operator jule::Ref<_1e2a2e210_ScopeChecker>();
			while ((!(jule::real(_72121_s->_field_owner))) && jule::real(_72121_s->_field_parent)) {
				{
					_72121_s=_72121_s->_field_parent;
				}
			_iter_next_4351025744:;
			}
			_iter_end_4351025744:;
			if ((jule::real(_72121_s->_field_owner) && _72121_s->_field_owner->_field_anon) && ((_69931_v->_field_scope).alloc != (_72121_s->_field_owner->_field_scope).alloc)) {
				(*this)._method_push_err(_69940_error_token,jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77),jule::Slice<jule::Any>({jule::Any(_69931_v->_field_ident)}));
			}
		}
		goto _match_end_4351022032;
		_case_end_4351022304:;
		_match_end_4351022032:;
	}
	(*this)._method_push_reference_to_var(_69931_v);
	if ((!(_69931_v->_field_cpp_linked)) && ((!(jule::real(_69931_v->_field_value))) || (!(jule::real(_69931_v->_field_value->_field_data))))) {
		if (_69931_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_69931_v,(*this)._field_s);
			if ((!(jule::real(_69931_v->_field_value->_field_data)))) {
				return jule::new_ref<_1a2c74a6c_Data>();
			}
		}
	}
	if ((!(jule::real(_69931_v->_field_kind))) || (!(jule::real(_69931_v->_field_kind->_field_kind)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1a2c74a6c_Data> _74717_d = jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(_69931_v->_field_kind->_field_kind->_method_clone(),jule::Ref<_1a2db8ce3_TypeKind>(),_69931_v->_field_mutable,_69931_v->_field_reference,(!(_69931_v->_field_constant)),jule::Bool(),jule::Bool(),jule::Any(_69931_v),false,jule::Ref<_1a37ddd88_Const>()));
	if (((!(_69931_v->_field_cpp_linked)) && _69931_v->_method_is_initialized()) && jule::real(_69931_v->_field_value->_field_data)) {
		_74717_d->_field_is_rune=_69931_v->_field_value->_field_data->_field_is_rune;
	}
	if (_69931_v->_field_constant && jule::real(_69931_v->_field_value->_field_data->_field_constant)) {
		_74717_d->_field_constant=jule::new_ref<_1a37ddd88_Const>(_69931_v->_field_value->_field_data->_field_constant.get());
		_74717_d->_field_model=jule::Any(_74717_d->_field_constant);
	}
	if (jule::real(_74717_d->_field_kind->_method_fnc())) {
		jule::Ref<_1e1737e81_FnIns> _76621_f = _74717_d->_field_kind->_method_fnc();
		if (jule::real(_76621_f->_field_decl)) {
			_76621_f->_field_decl->_field_ident=_69931_v->_field_ident;
		}
	}
	return _74717_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_type_alias(jule::Ref<_1a2db8ce3_TypeAlias> _77738_ta,_1e15a2bb9_Token _77754_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_77738_ta->_field_public,_77738_ta->_field_token)))) {
		(*this)._method_push_err(_77754_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_77738_ta->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_77738_ta->_field_used=true;
	jule::Trait<_1a2db8ce3_Kind> _78617_kind = _77738_ta->_field_kind->_field_kind->_field_kind;
	{
		auto _match_expr{ _78617_kind };
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_StructIns>>())) { goto _case_end_4351066288; }
		_case_begin_4351066288:;
		{
			return (*this)._method___eval_struct(_78617_kind.operator jule::Ref<_1e177440c_StructIns>());
		}
		goto _match_end_4351061072;
		_case_end_4351066288:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a21d4b_Enum>>())) { goto _case_end_4351061472; }
		_case_begin_4351061472:;
		{
			return (*this)._method___eval_enum(_78617_kind.operator jule::Ref<_1e2a21d4b_Enum>());
		}
		goto _match_end_4351061072;
		_case_end_4351061472:;
		_case_begin_4351055376:;
		{
			jule::Ref<_1a2c74a6c_Data> _79521_d = jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(_77738_ta->_field_kind->_field_kind->_method_clone(),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ref<_1a37ddd88_Const>()));
			_79521_d->_field_kind->_field_generic=_77738_ta->_field_generic;
			if (_77738_ta->_field_cpp_linked) {
				_79521_d->_field_kind->_field_cpp_ident=_77738_ta->_field_ident;
			}
			_79521_d->_field_model=jule::Any(_79521_d->_field_kind);
			return _79521_d;
		}
		goto _match_end_4351061072;
		_case_end_4351055376:;
		_match_end_4351061072:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_def(jule::Any _81231_def,_1e15a2bb9_Token _81241_ident) {
	{
		auto _match_expr{ _81231_def };
		if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4351076224; }
		_case_begin_4351076224:;
		{
			return (*this)._method_eval_var(_81231_def.operator jule::Ref<_1ba80e105_Var>(),_81241_ident);
		}
		goto _match_end_4351072448;
		_case_end_4351076224:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a21d4b_Enum>>())) { goto _case_end_4351075568; }
		_case_begin_4351075568:;
		{
			return (*this)._method_eval_enum(_81231_def.operator jule::Ref<_1e2a21d4b_Enum>(),_81241_ident);
		}
		goto _match_end_4351072448;
		_case_end_4351075568:;
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_Struct>>())) { goto _case_end_4351075952; }
		_case_begin_4351075952:;
		{
			return (*this)._method_eval_struct(_81231_def.operator jule::Ref<_1e177440c_Struct>()->_method_instance(),_81241_ident);
		}
		goto _match_end_4351072448;
		_case_end_4351075952:;
		if (!(_match_expr.type_is<jule::Ref<_1e1737e81_Fn>>())) { goto _case_end_4351076048; }
		_case_begin_4351076048:;
		{
			return (*this)._method_eval_fn(_81231_def.operator jule::Ref<_1e1737e81_Fn>(),_81241_ident);
		}
		goto _match_end_4351072448;
		_case_end_4351076048:;
		if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4351075184; }
		_case_begin_4351075184:;
		{
			return (*this)._method_eval_fn_ins(_81231_def.operator jule::Ref<_1e1737e81_FnIns>());
		}
		goto _match_end_4351072448;
		_case_end_4351075184:;
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_TypeAlias>>())) { goto _case_end_4351075280; }
		_case_begin_4351075280:;
		{
			return (*this)._method_eval_type_alias(_81231_def.operator jule::Ref<_1a2db8ce3_TypeAlias>(),_81241_ident);
		}
		goto _match_end_4351072448;
		_case_end_4351075280:;
		_case_begin_4351072352:;
		{
			(*this)._method_push_err(_81241_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_81241_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4351072448;
		_case_end_4351072352:;
		_match_end_4351072448:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_ident(jule::Ref<_1e16025cb_IdentExpr> _83829_ident) {
	jule::Any _83917_def = (*this)._method_get_def(_83829_ident->_field_ident,_83829_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_83917_def,_83829_ident->_field_token);
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_unary_minus(jule::Ref<_1a2c74a6c_Data> _84335_d) {
	if (jule::real(_84335_d->_field_kind->_method_ref())) {
		jule::Ref<_1a2db8ce3_Ref> _84521_ref = _84335_d->_field_kind->_method_ref();
		jule::Ref<_1a2db8ce3_Prim> _84617_prim = _84521_ref->_field_elem->_method_prim();
		if ((!(jule::real(_84617_prim))) || (!(_1a44da204_is_num(_84617_prim->_method_to_str())))) {
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		_84335_d->_field_kind=_84521_ref->_field_elem;
	} else {
		jule::Ref<_1a2db8ce3_Prim> _85217_t = _84335_d->_field_kind->_method_prim();
		if ((!(jule::real(_85217_t))) || (!(_1a44da204_is_num(_85217_t->_method_to_str())))) {
			return jule::new_ref<_1a2c74a6c_Data>();
		}
	}
	if (_84335_d->_method_is_const()) {
		{
			if (!((_84335_d->_field_constant->_method_is_f64()))) { goto _case_end_4351100192; }
			_case_begin_4351100192:;
			{
				_84335_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_84335_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4351099952;
			_case_end_4351100192:;
			if (!((_84335_d->_field_constant->_method_is_i64()))) { goto _case_end_4351101952; }
			_case_begin_4351101952:;
			{
				_84335_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_84335_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4351099952;
			_case_end_4351101952:;
			if (!((_84335_d->_field_constant->_method_is_u64()))) { goto _case_end_4351102048; }
			_case_begin_4351102048:;
			{
				_84335_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_84335_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4351099952;
			_case_end_4351102048:;
			_match_end_4351099952:;
		}
		_1a2c74a6c_normalize_type(_84335_d);
	}
	_84335_d->_field_lvalue=false;
	_84335_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_UnaryExprModel>(new( std::nothrow ) _1e2a30c17_UnaryExprModel(_84335_d->_field_model,jule::Str("-", 1))));
	return _84335_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_unary_plus(jule::Ref<_1a2c74a6c_Data> _87534_d) {
	if (jule::real(_87534_d->_field_kind->_method_ref())) {
		jule::Ref<_1a2db8ce3_Ref> _87721_ref = _87534_d->_field_kind->_method_ref();
		jule::Ref<_1a2db8ce3_Prim> _87817_prim = _87721_ref->_field_elem->_method_prim();
		if ((!(jule::real(_87817_prim))) || (!(_1a44da204_is_num(_87817_prim->_method_to_str())))) {
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		_87534_d->_field_kind=_87721_ref->_field_elem;
	} else {
		jule::Ref<_1a2db8ce3_Prim> _88417_t = _87534_d->_field_kind->_method_prim();
		if ((!(jule::real(_88417_t))) || (!(_1a44da204_is_num(_88417_t->_method_to_str())))) {
			return jule::new_ref<_1a2c74a6c_Data>();
		}
	}
	if (_87534_d->_method_is_const()) {
		{
			if (!((_87534_d->_field_constant->_method_is_f64()))) { goto _case_end_4351121152; }
			_case_begin_4351121152:;
			{
				_87534_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_87534_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4351120912;
			_case_end_4351121152:;
			if (!((_87534_d->_field_constant->_method_is_i64()))) { goto _case_end_4351122912; }
			_case_begin_4351122912:;
			{
				_87534_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_87534_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4351120912;
			_case_end_4351122912:;
			if (!((_87534_d->_field_constant->_method_is_u64()))) { goto _case_end_4351123008; }
			_case_begin_4351123008:;
			{
				_87534_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_87534_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4351120912;
			_case_end_4351123008:;
			_match_end_4351120912:;
		}
		_1a2c74a6c_normalize_type(_87534_d);
	}
	_87534_d->_field_lvalue=false;
	_87534_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_UnaryExprModel>(new( std::nothrow ) _1e2a30c17_UnaryExprModel(_87534_d->_field_model,jule::Str("+", 1))));
	return _87534_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_unary_caret(jule::Ref<_1a2c74a6c_Data> _90735_d) {
	if (jule::real(_90735_d->_field_kind->_method_ref())) {
		jule::Ref<_1a2db8ce3_Ref> _90921_ref = _90735_d->_field_kind->_method_ref();
		jule::Ref<_1a2db8ce3_Prim> _91017_prim = _90921_ref->_field_elem->_method_prim();
		if ((!(jule::real(_91017_prim))) || (!(_1a44da204_is_int(_91017_prim->_method_to_str())))) {
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		_90735_d->_field_kind=_90921_ref->_field_elem;
	} else {
		jule::Ref<_1a2db8ce3_Prim> _91617_t = _90735_d->_field_kind->_method_prim();
		if ((!(jule::real(_91617_t))) || (!(_1a44da204_is_int(_91617_t->_method_to_str())))) {
			return jule::new_ref<_1a2c74a6c_Data>();
		}
	}
	if (_90735_d->_method_is_const()) {
		{
			if (!((_90735_d->_field_constant->_method_is_i64()))) { goto _case_end_4351141664; }
			_case_begin_4351141664:;
			{
				_90735_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_90735_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_4351141440;
			_case_end_4351141664:;
			if (!((_90735_d->_field_constant->_method_is_u64()))) { goto _case_end_4351143440; }
			_case_begin_4351143440:;
			{
				_90735_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_90735_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_4351141440;
			_case_end_4351143440:;
			_match_end_4351141440:;
		}
	}
	_90735_d->_field_lvalue=false;
	_90735_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_UnaryExprModel>(new( std::nothrow ) _1e2a30c17_UnaryExprModel(_90735_d->_field_model,jule::Str("^", 1))));
	return _90735_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_unary_excl(jule::Ref<_1a2c74a6c_Data> _94034_d) {
	if (jule::real(_94034_d->_field_kind->_method_ref())) {
		jule::Ref<_1a2db8ce3_Ref> _94221_ref = _94034_d->_field_kind->_method_ref();
		jule::Ref<_1a2db8ce3_Prim> _94317_prim = _94221_ref->_field_elem->_method_prim();
		if ((!(jule::real(_94317_prim))) || (!(_94317_prim->_method_is_bool()))) {
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		_94034_d->_field_kind=_94221_ref->_field_elem;
	} else {
		jule::Ref<_1a2db8ce3_Prim> _94917_t = _94034_d->_field_kind->_method_prim();
		if ((!(jule::real(_94917_t))) || (!(_94917_t->_method_is_bool()))) {
			return jule::new_ref<_1a2c74a6c_Data>();
		}
	}
	if (_94034_d->_method_is_const()) {
		{
			if (!((_94034_d->_field_constant->_method_is_bool()))) { goto _case_end_4351159264; }
			_case_begin_4351159264:;
			{
				_94034_d->_field_constant->_method_set_bool((!(_94034_d->_field_constant->_method_read_bool())));
			}
			goto _match_end_4351159056;
			_case_end_4351159264:;
			_match_end_4351159056:;
		}
	}
	_94034_d->_field_lvalue=false;
	_94034_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_UnaryExprModel>(new( std::nothrow ) _1e2a30c17_UnaryExprModel(_94034_d->_field_model,jule::Str("!", 1))));
	return _94034_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_unary_star(jule::Ref<_1a2c74a6c_Data> _97038_d,_1e15a2bb9_Token _97048_op) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_97048_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2db8ce3_Ptr> _97517_t = _97038_d->_field_kind->_method_ptr();
	if ((!(jule::real(_97517_t))) || _97517_t->_method_is_unsafe()) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::drop(_97038_d->_field_constant);
	_97038_d->_field_lvalue=true;
	_97038_d->_field_kind=_97517_t->_field_elem;
	_97038_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_UnaryExprModel>(new( std::nothrow ) _1e2a30c17_UnaryExprModel(_97038_d->_field_model,jule::Str("*", 1))));
	return _97038_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_unary_amper(jule::Ref<_1a2c74a6c_Data> _98935_d) {
	{
		auto _match_expr{ _98935_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_StructLitExprModel>>())) { goto _case_end_4351181456; }
		_case_begin_4351181456:;
		{
			jule::Ref<_1e2a30c17_StructLitExprModel> _99221_lit = _98935_d->_field_model.operator jule::Ref<_1e2a30c17_StructLitExprModel>();
			_1a2c74a6c_make_struct_lit_alloc(_98935_d,_99221_lit);
		}
		goto _match_end_4351178096;
		_case_end_4351181456:;
		_case_begin_4351177552:;
		{
			{
				if (!((jule::real(_98935_d->_field_kind->_method_ref())))) { goto _case_end_4351180688; }
				_case_begin_4351180688:;
				{
					_98935_d->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1a2db8ce3_Ptr>(new( std::nothrow ) _1a2db8ce3_Ptr(_98935_d->_field_kind->_method_ref()->_field_elem->_method_clone()))));
					_98935_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_GetRefPtrExprModel>(new( std::nothrow ) _1e2a30c17_GetRefPtrExprModel(_98935_d->_field_model)));
				}
				goto _match_end_4351179136;
				_case_end_4351180688:;
				if (!((_1a2db8ce3_can_get_ptr(_98935_d)))) { goto _case_end_4351180272; }
				_case_begin_4351180272:;
				{
					_98935_d->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1a2db8ce3_Ptr>(new( std::nothrow ) _1a2db8ce3_Ptr(_98935_d->_field_kind->_method_clone()))));
					_98935_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_UnaryExprModel>(new( std::nothrow ) _1e2a30c17_UnaryExprModel(_98935_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_4351179136;
				_case_end_4351180272:;
				_case_begin_4351179312:;
				{
					jule::drop(_98935_d);
				}
				goto _match_end_4351179136;
				_case_end_4351179312:;
				_match_end_4351179136:;
			}
		}
		goto _match_end_4351178096;
		_case_end_4351177552:;
		_match_end_4351178096:;
	}
	if (jule::real(_98935_d)) {
		jule::drop(_98935_d->_field_constant);
		_98935_d->_field_lvalue=false;
		_98935_d->_field_mutable=true;
	}
	return _98935_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_unary_type_decl(jule::Ref<_1a2c74a6c_Data> _102843_d,jule::Ref<_1e16025cb_UnaryExpr> _102857_u) {
	_1a2db8ce3_TypeChecker _102917_tc = _1a2db8ce3_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1a2db8ce3_Referencer>(),_102857_u->_field_op,jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>(),jule::Bool());
	{
		auto _match_expr{ _102857_u->_field_op._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4351199600; }
		_case_begin_4351199600:;
		{
			_102843_d->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_102917_tc._method_build_ptr_from_type(_102843_d->_field_kind)));
		}
		goto _match_end_4351196096;
		_case_end_4351199600:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4351200080; }
		_case_begin_4351200080:;
		{
			_102843_d->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_102917_tc._method_build_ref_from_type(_102843_d->_field_kind)));
		}
		goto _match_end_4351196096;
		_case_end_4351200080:;
		_case_begin_4351194064:;
		{
			(*this)._method_push_err(_102857_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_102857_u->_field_op._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4351196096;
		_case_end_4351194064:;
		_match_end_4351196096:;
	}
	_102843_d->_field_decl=true;
	return _102843_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_unary(jule::Ref<_1e16025cb_UnaryExpr> _105134_u) {
	jule::Ref<_1a2db8ce3_TypeKind> _105217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_105217_prefix;
	});
	jule::Ref<_1a2c74a6c_Data> _105617_d = this->self->_method_eval_expr_kind(_105134_u->_field_expr);
	if ((!(jule::real(_105617_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_105617_d->_field_decl) {
		return this->self->_method_eval_unary_type_decl(_105617_d,_105134_u);
	}
	jule::Ref<_1a2db8ce3_TypeKind> _106517_cast_kind = _105617_d->_field_cast_kind;
	{
		auto _match_expr{ _105134_u->_field_op._field_kind };
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4351215392; }
		_case_begin_4351215392:;
		{
			_105617_d=this->self->_method_eval_unary_minus(_105617_d);
		}
		goto _match_end_4351214016;
		_case_end_4351215392:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4351214976; }
		_case_begin_4351214976:;
		{
			_105617_d=this->self->_method_eval_unary_plus(_105617_d);
		}
		goto _match_end_4351214016;
		_case_end_4351214976:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4351215072; }
		_case_begin_4351215072:;
		{
			_105617_d=this->self->_method_eval_unary_caret(_105617_d);
		}
		goto _match_end_4351214016;
		_case_end_4351215072:;
		if (!((jule::Str("!", 1)) == _match_expr)) { goto _case_end_4351214304; }
		_case_begin_4351214304:;
		{
			_105617_d=this->self->_method_eval_unary_excl(_105617_d);
		}
		goto _match_end_4351214016;
		_case_end_4351214304:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4351214400; }
		_case_begin_4351214400:;
		{
			_105617_d=this->self->_method_eval_unary_star(_105617_d,_105134_u->_field_op);
		}
		goto _match_end_4351214016;
		_case_end_4351214400:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4351214496; }
		_case_begin_4351214496:;
		{
			_105617_d=this->self->_method_eval_unary_amper(_105617_d);
		}
		goto _match_end_4351214016;
		_case_end_4351214496:;
		_case_begin_4351213696:;
		{
			jule::drop(_105617_d);
		}
		goto _match_end_4351214016;
		_case_end_4351213696:;
		_match_end_4351214016:;
	}
	if ((!(jule::real(_105617_d)))) {
		this->self->_method_push_err(_105134_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_105134_u->_field_op._field_kind)}));
	} else if (_105617_d->_method_is_const()) {
		_105617_d->_field_model=jule::Any(_105617_d->_field_constant);
	} else if (jule::real(_106517_cast_kind)) {
		_105617_d->_field_cast_kind=_106517_cast_kind;
		_1a2c74a6c_apply_cast_kind(_105617_d);
	}
	return _105617_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_variadic(jule::Ref<_1e16025cb_VariadicExpr> _108837_v) {
	jule::Ref<_1a2db8ce3_TypeKind> _108917_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_108917_prefix;
	});
	jule::Ref<_1a2c74a6c_Data> _109317_d = this->self->_method_eval_expr_kind(_108837_v->_field_expr);
	if ((!(jule::real(_109317_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (jule::real(_109317_d->_field_kind->_method_ref())) {
		_109317_d->_field_kind=_109317_d->_field_kind->_method_ref()->_field_elem;
		_109317_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_ExplicitDerefExprModel>(new( std::nothrow ) _1e2a30c17_ExplicitDerefExprModel(_109317_d->_field_model)));
	}
	if ((!(_109317_d->_field_kind->_method_variadicable()))) {
		this->self->_method_push_err(_108837_v->_field_token,jule::Str("@ data-type is not variadicable", 31),jule::Slice<jule::Any>({jule::Any(_109317_d->_field_kind->_method_to_str())}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_109317_d->_field_variadiced=true;
	_109317_d->_field_kind=_109317_d->_field_kind->_method_slc()->_field_elem;
	_109317_d->_field_kind->_field_variadic=true;
	return _109317_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_unsafe(jule::Ref<_1e16025cb_UnsafeExpr> _111635_u) {
	jule::Bool _111713_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ref<_1a2c74a6c_Data> _112017_d = this->self->_method_eval_expr_kind(_111635_u->_field_expr);
	this->self->_field_unsafety=_111713_unsafety;
	return _112017_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_arr(jule::Ref<_1e16025cb_SliceExpr> _112732_s) {
	jule::Ref<_1a2db8ce3_Arr> _112917_pt = this->self->_field_prefix->_method_arr();
	jule::Ref<_1a2db8ce3_Arr> _113117_arr = jule::new_struct<_1a2db8ce3_Arr>(new( std::nothrow ) _1a2db8ce3_Arr(false,0LL,_112917_pt->_field_elem));
	if (_112917_pt->_field_auto) {
		_113117_arr->_field_n=static_cast<jule::I64>(_112732_s->_field_elems.len());
	} else {
		_113117_arr->_field_n=static_cast<jule::I64>(_112732_s->_field_elems.len());
		if (_113117_arr->_field_n > _112917_pt->_field_n) {
			this->self->_method_push_err(_112732_s->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else if (_113117_arr->_field_n < _112917_pt->_field_n) {
			_113117_arr->_field_n=_112917_pt->_field_n;
		}
	}
	jule::Ref<_1e2a30c17_ArrayExprModel> _114817_model = jule::new_struct<_1e2a30c17_ArrayExprModel>(new( std::nothrow ) _1e2a30c17_ArrayExprModel(_113117_arr,jule::Slice<jule::Any>::alloc(static_cast<jule::I64>(_112732_s->_field_elems.len()))));
	jule::Ref<_1a2db8ce3_TypeKind> _115317_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_113117_arr->_field_elem;
	{
		auto expr = _112732_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4351262320:;
		if (it != expr.end()) {
			jule::Int _1a2c74a6c_i = it - expr.begin();
			jule::Any _1a2c74a6c_elem = *it;
			{
				jule::Ref<_1a2c74a6c_Data> _115621_d = this->self->_method_eval_expr_kind(_1a2c74a6c_elem);
				if ((!(jule::real(_115621_d)))) {
					goto _iter_next_4351262320;
				}
				this->self->_field_s->_method_check_assign_type(false,_113117_arr->_field_elem,_115621_d,_112732_s->_field_token,true);
				_114817_model->_field_elems[_1a2c74a6c_i]=_115621_d->_field_model;
			}
			_iter_next_4351262320:;
			++it;
			_1a2c74a6c_i++;
			goto _iter_begin_4351262320;
		}
		_iter_end_4351262320:;
	}
	this->self->_field_prefix=_115317_prefix;
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_113117_arr)),jule::Ref<_1a2db8ce3_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_114817_model),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_exp_slc(jule::Ref<_1e16025cb_SliceExpr> _117336_s,jule::Ref<_1a2db8ce3_TypeKind> _117355_elem_type) {
	jule::Ref<_1a2db8ce3_Slc> _117417_slc = jule::new_struct<_1a2db8ce3_Slc>(new( std::nothrow ) _1a2db8ce3_Slc(_117355_elem_type));
	jule::Ref<_1e2a30c17_SliceExprModel> _117817_model = jule::new_struct<_1e2a30c17_SliceExprModel>(new( std::nothrow ) _1e2a30c17_SliceExprModel(_117355_elem_type,jule::Slice<jule::Any>::alloc(static_cast<jule::I64>(_117336_s->_field_elems.len()))));
	jule::Ref<_1a2db8ce3_TypeKind> _118317_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_117417_slc->_field_elem;
	{
		auto expr = _117336_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4351279936:;
		if (it != expr.end()) {
			jule::Int _1a2c74a6c_i = it - expr.begin();
			jule::Any _1a2c74a6c_elem = *it;
			{
				jule::Ref<_1a2c74a6c_Data> _118621_d = this->self->_method_eval_expr_kind(_1a2c74a6c_elem);
				if ((!(jule::real(_118621_d)))) {
					goto _iter_next_4351279936;
				}
				this->self->_field_s->_method_check_assign_type(false,_117417_slc->_field_elem,_118621_d,_117336_s->_field_token,true);
				_117817_model->_field_elems[_1a2c74a6c_i]=_118621_d->_field_model;
			}
			_iter_next_4351279936:;
			++it;
			_1a2c74a6c_i++;
			goto _iter_begin_4351279936;
		}
		_iter_end_4351279936:;
	}
	this->self->_field_prefix=_118317_prefix;
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_117417_slc)),jule::Ref<_1a2db8ce3_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_117817_model),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_slice_expr(jule::Ref<_1e16025cb_SliceExpr> _120339_s) {
	if (jule::real(this->self->_field_prefix)) {
		{
			if (!((jule::real(this->self->_field_prefix->_method_arr())))) { goto _case_end_4351292608; }
			_case_begin_4351292608:;
			{
				return this->self->_method_eval_arr(_120339_s);
			}
			goto _match_end_4351292384;
			_case_end_4351292608:;
			if (!((jule::real(this->self->_field_prefix->_method_slc())))) { goto _case_end_4351292720; }
			_case_begin_4351292720:;
			{
				jule::Ref<_1a2db8ce3_Slc> _121025_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_120339_s,_121025_pt->_field_elem);
			}
			goto _match_end_4351292384;
			_case_end_4351292720:;
			_match_end_4351292384:;
		}
	}
	jule::Ref<_1a2db8ce3_TypeKind> _121517_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	if (_120339_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_120339_s->_field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1a2c74a6c_Data> _122317_first_elem = this->self->_method_eval_expr_kind(_120339_s->_field_elems[0LL]);
	if ((!(jule::real(_122317_first_elem)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1a2c74a6c_Data> _122817_d = this->self->_method_eval_exp_slc(_120339_s,_122317_first_elem->_field_kind);
	this->self->_field_prefix=_121517_prefix;
	return _122817_d;
}



void _1a2c74a6c_Eval::_method_check_integer_indexing_by_data(jule::Ref<_1a2c74a6c_Data> _123453_d,_1e15a2bb9_Token _123463_token) {
	jule::Str _123513_err_key = _1a2c74a6c_check_data_for_integer_indexing(_123453_d);
	if (_123513_err_key != jule::Str()) {
		(*this)._method_push_err(_123463_token,_123513_err_key,jule::Slice<jule::Any>({}));
	}
}



void _1a2c74a6c_Eval::_method_indexing_ptr(jule::Ref<_1a2c74a6c_Data> _124135_d,jule::Ref<_1a2c74a6c_Data> _124149_index,jule::Ref<_1e16025cb_IndexingExpr> _124163_i) {
	(*this)._method_check_integer_indexing_by_data(_124149_index,_124163_i->_field_token);
	jule::Ref<_1a2db8ce3_Ptr> _124417_ptr = _124135_d->_field_kind->_method_ptr();
	{
		if (!((_124417_ptr->_method_is_unsafe()))) { goto _case_end_4351316080; }
		_case_begin_4351316080:;
		{
			(*this)._method_push_err(_124163_i->_field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4351315840;
		_case_end_4351316080:;
		if (!(((!((*this)._method_is_unsafe()))))) { goto _case_end_4351316176; }
		_case_begin_4351316176:;
		{
			(*this)._method_push_err(_124163_i->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4351315840;
		_case_end_4351316176:;
		_match_end_4351315840:;
	}
	_124135_d->_field_kind=_124417_ptr->_field_elem->_method_clone();
}



void _1a2c74a6c_Eval::_method_indexing_arr(jule::Ref<_1a2c74a6c_Data> _125735_d,jule::Ref<_1a2c74a6c_Data> _125749_index,jule::Ref<_1e16025cb_IndexingExpr> _125763_i) {
	jule::Ref<_1a2db8ce3_Arr> _125817_arr = _125735_d->_field_kind->_method_arr();
	_125735_d->_field_kind=_125817_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_125749_index,_125763_i->_field_token);
	if (_125749_index->_method_is_const() && (_125749_index->_field_constant->_method_as_f64() >= static_cast<jule::F64>(_125817_arr->_field_n))) {
		(*this)._method_push_err(_125763_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
	}
}



void _1a2c74a6c_Eval::_method_indexing_slc(jule::Ref<_1a2c74a6c_Data> _126635_d,jule::Ref<_1a2c74a6c_Data> _126649_index,jule::Ref<_1e16025cb_IndexingExpr> _126663_i) {
	jule::Ref<_1a2db8ce3_Slc> _126717_slc = _126635_d->_field_kind->_method_slc();
	_126635_d->_field_kind=_126717_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_126649_index,_126663_i->_field_token);
	if ((!(_126649_index->_method_is_const()))) {
		return;
	}
	{
		auto _match_expr{ _126635_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_SliceExprModel>>())) { goto _case_end_4351338688; }
		_case_begin_4351338688:;
		{
			jule::Ref<_1e2a30c17_SliceExprModel> _127721_m = _126635_d->_field_model.operator jule::Ref<_1e2a30c17_SliceExprModel>();
			jule::F64 _127817_indx = _126649_index->_field_constant->_method_as_f64();
			if (_127817_indx >= static_cast<jule::F64>(_127721_m->_field_elems.len())) {
				(*this)._method_push_err(_126663_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
			} else {
				_126635_d->_field_model=_127721_m->_field_elems[static_cast<jule::Int>(static_cast<jule::U64>(_127817_indx))];
				_126635_d->_field_decl=true;
			}
		}
		goto _match_end_4351339168;
		_case_end_4351338688:;
		_match_end_4351339168:;
	}
}



void _1a2c74a6c_Eval::_method_indexing_map(jule::Ref<_1a2c74a6c_Data> _128835_d,jule::Ref<_1a2c74a6c_Data> _128849_index,jule::Ref<_1e16025cb_IndexingExpr> _128867_i) {
	if ((!(jule::real(_128849_index)))) {
		return;
	}
	jule::Ref<_1a2db8ce3_Map> _129317_m = _128835_d->_field_kind->_method_map();
	_1a2c73c9c_AssignTypeChecker _129417_atc = _1a2c73c9c_AssignTypeChecker((*this)._field_s,_129317_m->_field_key,_128849_index,_128867_i->_field_token,true);
	_129417_atc._method_check();
	_128835_d->_field_kind=_129317_m->_field_val->_method_clone();
}



void _1a2c74a6c_Eval::_method_indexing_str(jule::Ref<_1a2c74a6c_Data> _130635_d,jule::Ref<_1a2c74a6c_Data> _130649_index,jule::Ref<_1e16025cb_IndexingExpr> _130663_i) {
	
	_130635_d->_field_kind->_field_kind=_1a2db8ce3_build_prim_type(jule::Str("u8", 2));
	if ((!(jule::real(_130649_index)))) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_130649_index,_130663_i->_field_token);
	if ((!(_130649_index->_method_is_const()))) {
		jule::drop(_130635_d->_field_constant);
		return;
	}
	if (_130635_d->_method_is_const()) {
		_1e15a2bb9_Token _132217_error_token = _130663_i->_field_token;
		jule::I64 _132317_j = _130649_index->_field_constant->_method_as_i64();
		jule::Str _132417_s = _130635_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_132317_j) >= _132417_s.len()) {
			(*this)._method_push_err(_132217_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else {
			_130635_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_132417_s[_132317_j]));
		}
	}
}



void _1a2c74a6c_Eval::_method_to_indexing(jule::Ref<_1a2c74a6c_Data> _133334_d,jule::Ref<_1a2c74a6c_Data> _133348_index,jule::Ref<_1e16025cb_IndexingExpr> _133366_i) {
	{
		if (!((jule::real(_133334_d->_field_kind->_method_ptr())))) { goto _case_end_4351376576; }
		_case_begin_4351376576:;
		{
			(*this)._method_indexing_ptr(_133334_d,_133348_index,_133366_i);
			return;
		}
		goto _match_end_4351376304;
		_case_end_4351376576:;
		if (!((jule::real(_133334_d->_field_kind->_method_arr())))) { goto _case_end_4351376688; }
		_case_begin_4351376688:;
		{
			(*this)._method_indexing_arr(_133334_d,_133348_index,_133366_i);
			return;
		}
		goto _match_end_4351376304;
		_case_end_4351376688:;
		if (!((jule::real(_133334_d->_field_kind->_method_slc())))) { goto _case_end_4351376800; }
		_case_begin_4351376800:;
		{
			(*this)._method_indexing_slc(_133334_d,_133348_index,_133366_i);
			return;
		}
		goto _match_end_4351376304;
		_case_end_4351376800:;
		if (!((jule::real(_133334_d->_field_kind->_method_map())))) { goto _case_end_4351376912; }
		_case_begin_4351376912:;
		{
			(*this)._method_indexing_map(_133334_d,_133348_index,_133366_i);
			return;
		}
		goto _match_end_4351376304;
		_case_end_4351376912:;
		if (!((jule::real(_133334_d->_field_kind->_method_prim())))) { goto _case_end_4351377024; }
		_case_begin_4351377024:;
		{
			jule::Ref<_1a2db8ce3_Prim> _135217_prim = _133334_d->_field_kind->_method_prim();
			{
				if (!((_135217_prim->_method_is_str()))) { goto _case_end_4351387312; }
				_case_begin_4351387312:;
				{
					(*this)._method_indexing_str(_133334_d,_133348_index,_133366_i);
					return;
				}
				goto _match_end_4351387168;
				_case_end_4351387312:;
				_match_end_4351387168:;
			}
		}
		goto _match_end_4351376304;
		_case_end_4351377024:;
		_match_end_4351376304:;
	}
	(*this)._method_push_err(_133366_i->_field_token,jule::Str("@ data type is not support indexing", 35),jule::Slice<jule::Any>({jule::Any(_133334_d->_field_kind->_method_to_str())}));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_ident_decl_from_indexing(jule::Ref<_1e16025cb_IndexingExpr> _136353_i) {
	{
		auto _match_expr{ _136353_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_IdentExpr>>())) { goto _case_end_4351395984; }
		goto _match_end_4351393232;
		_case_end_4351395984:;
		_case_begin_4351392688:;
		{
			this->self->_method_push_err(_136353_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4351393232;
		_case_end_4351392688:;
		_match_end_4351393232:;
	}
	jule::Ref<_1e16025cb_IdentTypeDecl> _137117_decl = jule::new_struct<_1e16025cb_IdentTypeDecl>(new( std::nothrow ) _1e16025cb_IdentTypeDecl(_1e15a2bb9_Token(),_136353_i->_field_expr.operator jule::Ref<_1e16025cb_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>()));
	{
		auto _match_expr{ _136353_i->_field_index };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_UnaryExpr>>())) { goto _case_end_4351400976; }
		_case_begin_4351400976:;
		{
			jule::Ref<_1a2c74a6c_Data> _137921_d = this->self->_method_eval_unary(_136353_i->_field_index.operator jule::Ref<_1e16025cb_UnaryExpr>());
			if ((!(_137921_d->_field_decl))) {
				this->self->_method_push_err(_136353_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1a2c74a6c_Data>();
			}
			_137117_decl->_field_generics=jule::append(_137117_decl->_field_generics,jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>({jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_1e15a2bb9_Token(),jule::Any(_137921_d->_field_kind)))}));
		}
		goto _match_end_4351397712;
		_case_end_4351400976:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TypeDecl>>())) { goto _case_end_4351398464; }
		_case_begin_4351398464:;
		{
			_137117_decl->_field_generics=jule::append(_137117_decl->_field_generics,jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>({_136353_i->_field_index.operator jule::Ref<_1e16025cb_TypeDecl>()}));
		}
		goto _match_end_4351397712;
		_case_end_4351398464:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_IdentExpr>>())) { goto _case_end_4351400320; }
		_case_begin_4351400320:;
		{
			_137117_decl->_field_generics=jule::append(_137117_decl->_field_generics,jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>({jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_1e15a2bb9_Token(),jule::Any(jule::new_struct<_1e16025cb_IdentTypeDecl>(new( std::nothrow ) _1e16025cb_IdentTypeDecl(_1e15a2bb9_Token(),_136353_i->_field_index.operator jule::Ref<_1e16025cb_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>())))))}));
		}
		goto _match_end_4351397712;
		_case_end_4351400320:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TupleExpr>>())) { goto _case_end_4351400704; }
		_case_begin_4351400704:;
		{
			{
				auto expr = _136353_i->_field_index.operator jule::Ref<_1e16025cb_TupleExpr>()->_field_expr;
				auto it = expr.begin();
				_iter_begin_4351406272:;
				if (it != expr.end()) {
					jule::Ref<_1e16025cb_Expr> _1a2c74a6c_expr = *it;
					{
						{
							auto _match_expr{ _1a2c74a6c_expr->_field_kind };
							if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TypeDecl>>())) { goto _case_end_4351413696; }
							_case_begin_4351413696:;
							{
								_137117_decl->_field_generics=jule::append(_137117_decl->_field_generics,jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>({_1a2c74a6c_expr->_field_kind.operator jule::Ref<_1e16025cb_TypeDecl>()}));
							}
							goto _match_end_4351414304;
							_case_end_4351413696:;
							if (!(_match_expr.type_is<jule::Ref<_1e16025cb_IdentExpr>>())) { goto _case_end_4351414384; }
							_case_begin_4351414384:;
							{
								_137117_decl->_field_generics=jule::append(_137117_decl->_field_generics,jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>({jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_1e15a2bb9_Token(),jule::Any(jule::new_struct<_1e16025cb_IdentTypeDecl>(new( std::nothrow ) _1e16025cb_IdentTypeDecl(_1e15a2bb9_Token(),_1a2c74a6c_expr->_field_kind.operator jule::Ref<_1e16025cb_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1e16025cb_TypeDecl>>())))))}));
							}
							goto _match_end_4351414304;
							_case_end_4351414384:;
							_match_end_4351414304:;
						}
					}
					_iter_next_4351406272:;
					++it;
					goto _iter_begin_4351406272;
				}
				_iter_end_4351406272:;
			}
		}
		goto _match_end_4351397712;
		_case_end_4351400704:;
		_case_begin_4351396208:;
		{
			this->self->_method_push_err(_136353_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4351397712;
		_case_end_4351396208:;
		_match_end_4351397712:;
	}
	return this->self->_method_eval_type(jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_1e15a2bb9_Token(),jule::Any(_137117_decl))));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_indexing(jule::Ref<_1e16025cb_IndexingExpr> _141537_i) {
	jule::Ref<_1a2db8ce3_TypeKind> _141617_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_141617_prefix;
	});
	jule::Ref<_1a2c74a6c_Data> _142017_d = this->self->_method_eval_expr_kind(_141537_i->_field_expr);
	if ((!(jule::real(_142017_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_142017_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_141537_i);
	}
	_1a2c74a6c_Data _143017_old_d = _142017_d;
	jule::Ref<_1a2c74a6c_Data> _143217_index = this->self->_method_eval_expr_kind(_141537_i->_field_index);
	if ((!(jule::real(_143217_index)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_142017_d->_field_decl=false;
	this->self->_method_to_indexing(_142017_d,_143217_index,_141537_i);
	if (_142017_d->_method_is_const()) {
		_142017_d->_field_decl=false;
		_142017_d->_field_model=jule::Any(_142017_d->_field_constant);
	} else if (_142017_d->_field_decl) {
		_142017_d->_field_decl=false;
	} else {
		_142017_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_IndexigExprModel>(new( std::nothrow ) _1e2a30c17_IndexigExprModel(jule::new_ref<_1a2c74a6c_Data>(_143017_old_d),_143217_index)));
	}
	return _142017_d;
}



std::tuple<jule::Ref<_1a2c74a6c_Data>,jule::Ref<_1a2c74a6c_Data>> _1a2c74a6c_Eval::_method_eval_slicing_exprs(jule::Ref<_1e16025cb_SlicingExpr> _146242_s) {
	jule::Ref<_1a2db8ce3_TypeKind> _146317_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_146317_prefix;
	});
	jule::Ref<_1a2c74a6c_Data> _146717_l = jule::new_ref<_1a2c74a6c_Data>();
	jule::Ref<_1a2c74a6c_Data> _146817_r = jule::new_ref<_1a2c74a6c_Data>();
	if (_146242_s->_field_start != nullptr) {
		_146717_l=this->self->_method_eval_expr_kind(_146242_s->_field_start);
		if (jule::real(_146717_l)) {
			this->self->_method_check_integer_indexing_by_data(_146717_l,_146242_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_1a2c74a6c_Data>(),jule::new_ref<_1a2c74a6c_Data>());
		}
	} else {
		_146717_l=jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a37ddd88_Const::_static_method_new_i64(0LL)));
		_146717_l->_field_model=jule::Any(_146717_l->_field_constant);
	}
	if (_146242_s->_field_to != nullptr) {
		_146817_r=this->self->_method_eval_expr_kind(_146242_s->_field_to);
		if (jule::real(_146817_r)) {
			this->self->_method_check_integer_indexing_by_data(_146817_r,_146242_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_1a2c74a6c_Data>(),jule::new_ref<_1a2c74a6c_Data>());
		}
	}
	return std::make_tuple(_146717_l,_146817_r);
}



void _1a2c74a6c_Eval::_method_slicing_arr(jule::Ref<_1a2c74a6c_Data> _149730_d) {
	jule::Ref<_1a2db8ce3_TypeKind> _149817_elem_type = _149730_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_149730_d->_field_kind->_field_kind=jule::new_struct<_1a2db8ce3_Slc>(new( std::nothrow ) _1a2db8ce3_Slc(_149817_elem_type));
	_149730_d->_field_lvalue=false;
	_149730_d->_field_mutable=_149730_d->_field_mutable || (!(_149817_elem_type->_method_mutable()));
}



void _1a2c74a6c_Eval::_method_slicing_slc(jule::Ref<_1a2c74a6c_Data> _150830_d) {
	_150830_d->_field_lvalue=false;
}



void _1a2c74a6c_Eval::_method_slicing_str(jule::Ref<_1a2c74a6c_Data> _151230_d,jule::Ref<_1a2c74a6c_Data> _151240_l,jule::Ref<_1a2c74a6c_Data> _151250_r) {
	_151230_d->_field_lvalue=false;
	_151230_d->_field_mutable=true;
	if ((!(_151230_d->_method_is_const()))) {
		return;
	}
	if ((!(jule::real(_151240_l))) || (!(jule::real(_151250_r)))) {
		jule::drop(_151230_d->_field_constant);
		return;
	}
	if (_151240_l->_method_is_const() && _151250_r->_method_is_const()) {
		jule::I64 _152517_left = _151240_l->_field_constant->_method_as_i64();
		if (_152517_left < 0LL) {
			return;
		}
		jule::Str _153017_s = _151230_d->_field_constant->_method_read_str();
		jule::I64 _153121_right = 0LL;
		if ((!(jule::real(_151250_r)))) {
			_153121_right=static_cast<jule::I64>(_153017_s.len());
		} else {
			_153121_right=static_cast<jule::I64>(_151250_r->_field_constant->_method_as_i64());
		}
		if (_152517_left > _153121_right) {
			return;
		}
		_151230_d->_field_constant->_method_set_str(_153017_s.slice(_152517_left,_153121_right));
		_151230_d->_field_decl=true;
	} else {
		jule::drop(_151230_d->_field_constant);
	}
}



void _1a2c74a6c_Eval::_method_check_slicing(jule::Ref<_1a2c74a6c_Data> _154836_d,jule::Ref<_1a2c74a6c_Data> _154846_l,jule::Ref<_1a2c74a6c_Data> _154856_r,jule::Ref<_1e16025cb_SlicingExpr> _154866_s) {
	{
		if (!((jule::real(_154836_d->_field_kind->_method_arr())))) { goto _case_end_4351484000; }
		_case_begin_4351484000:;
		{
			(*this)._method_slicing_arr(_154836_d);
			return;
		}
		goto _match_end_4351483824;
		_case_end_4351484000:;
		if (!((jule::real(_154836_d->_field_kind->_method_slc())))) { goto _case_end_4351484112; }
		_case_begin_4351484112:;
		{
			(*this)._method_slicing_slc(_154836_d);
			return;
		}
		goto _match_end_4351483824;
		_case_end_4351484112:;
		if (!((jule::real(_154836_d->_field_kind->_method_prim())))) { goto _case_end_4351484224; }
		_case_begin_4351484224:;
		{
			jule::Ref<_1a2db8ce3_Prim> _155917_prim = _154836_d->_field_kind->_method_prim();
			{
				if (!((_155917_prim->_method_is_str()))) { goto _case_end_4351490864; }
				_case_begin_4351490864:;
				{
					(*this)._method_slicing_str(_154836_d,_154846_l,_154856_r);
					return;
				}
				goto _match_end_4351490720;
				_case_end_4351490864:;
				_match_end_4351490720:;
			}
		}
		goto _match_end_4351483824;
		_case_end_4351484224:;
		_match_end_4351483824:;
	}
	(*this)._method_push_err(_154866_s->_field_token,jule::Str("@ data type is not support slicing", 34),jule::Slice<jule::Any>({jule::Any(_154836_d->_field_kind->_method_to_str())}));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_slicing(jule::Ref<_1e16025cb_SlicingExpr> _157036_s) {
	jule::Ref<_1a2c74a6c_Data> _157117_d = this->self->_method_eval_expr_kind(_157036_s->_field_expr);
	if ((!(jule::real(_157117_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1a2c74a6c_Data> _157618_l;
	jule::Ref<_1a2c74a6c_Data> _157625_r;
	std::tie(_157618_l,_157625_r) = this->self->_method_eval_slicing_exprs(_157036_s);
	if ((!(jule::real(_157618_l)))) {
		return _157117_d;
	}
	_157117_d->_field_decl=false;
	this->self->_method_check_slicing(_157117_d,_157618_l,_157625_r,_157036_s);
	jule::drop(_157117_d->_field_cast_kind);
	if (_157117_d->_method_is_const()) {
		_157117_d->_field_decl=false;
		_157117_d->_field_model=jule::Any(_157117_d->_field_constant);
	} else if (_157117_d->_field_decl) {
		_157117_d->_field_decl=false;
	} else {
		jule::Ref<_1e2a30c17_SlicingExprModel> _159521_model = jule::new_struct<_1e2a30c17_SlicingExprModel>(new( std::nothrow ) _1e2a30c17_SlicingExprModel(_157117_d->_field_model,_157618_l->_field_model,jule::Any()));
		if (jule::real(_157625_r)) {
			_159521_model->_field_right=_157625_r->_field_model;
		}
		_157117_d->_field_model=jule::Any(_159521_model);
	}
	return _157117_d;
}



void _1a2c74a6c_Eval::_method_cast_ptr(jule::Ref<_1a2db8ce3_TypeKind> _161027_t,jule::Ref<_1a2c74a6c_Data> _161045_d,_1e15a2bb9_Token _161055_error_token) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_161055_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1a2db8ce3_Prim> _161613_prim = _161045_d->_field_kind->_method_prim();
	if ((!(jule::real(_161045_d->_field_kind->_method_ptr()))) && ((!(jule::real(_161613_prim))) || (!(_1a44da204_is_int(_161613_prim->_method_to_str()))))) {
		(*this)._method_push_err(_161055_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_161045_d->_field_kind->_method_to_str()),jule::Any(_161027_t->_method_to_str())}));
	}
	jule::drop(_161045_d->_field_constant);
}



void _1a2c74a6c_Eval::_method_cast_struct(jule::Ref<_1a2db8ce3_TypeKind> _162434_t,jule::Ref<_1a2c74a6c_Data> _162452_d,_1e15a2bb9_Token _162462_error_token) {
	jule::Ref<_1e2a1e563_Trait> _162517_tr = _162452_d->_field_kind->_method_trt();
	if ((!(jule::real(_162517_tr)))) {
		(*this)._method_push_err(_162462_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_162452_d->_field_kind->_method_to_str()),jule::Any(_162434_t->_method_to_str())}));
		return;
	}
	jule::Ref<_1e177440c_StructIns> _163117_s = jule::new_ref<_1e177440c_StructIns>();
	if (jule::real(_162434_t->_method_ref())) {
		_163117_s=_162434_t->_method_ref()->_field_elem->_method_strct();
	} else {
		_163117_s=_162434_t->_method_strct();
	}
	(*this)._method_push_reference_to_struct(_163117_s);
	if ((!(_163117_s->_field_decl->_method_is_implements(_162517_tr)))) {
		(*this)._method_push_err(_162462_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_162452_d->_field_kind->_method_to_str()),jule::Any(_162434_t->_method_to_str())}));
	}
}



void _1a2c74a6c_Eval::_method_cast_ref(jule::Ref<_1a2db8ce3_TypeKind> _164531_t,jule::Ref<_1a2c74a6c_Data> _164549_d,_1e15a2bb9_Token _164559_error_token) {
	jule::Ref<_1a2db8ce3_Ref> _164617_ref = _164531_t->_method_ref();
	if (jule::real(_164617_ref->_field_elem->_method_strct())) {
		(*this)._method_cast_struct(_164531_t,_164549_d,_164559_error_token);
		return;
	}
	(*this)._method_push_err(_164559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_164549_d->_field_kind->_method_to_str()),jule::Any(_164531_t->_method_to_str())}));
}



void _1a2c74a6c_Eval::_method_cast_slc(jule::Ref<_1a2db8ce3_TypeKind> _165531_t,jule::Ref<_1a2c74a6c_Data> _165549_d,_1e15a2bb9_Token _165559_error_token) {
	if (jule::real(_165549_d->_field_kind->_method_enm())) {
		if ((!(jule::real(_165549_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()))) || (!(_165549_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_165559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_165549_d->_field_kind->_method_to_str()),jule::Any(_165531_t->_method_to_str())}));
			return;
		}
	} else if ((!(jule::real(_165549_d->_field_kind->_method_prim()))) || (!(_165549_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_165559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_165549_d->_field_kind->_method_to_str()),jule::Any(_165531_t->_method_to_str())}));
		return;
	}
	_165531_t=_165531_t->_method_slc()->_field_elem;
	jule::Ref<_1a2db8ce3_Prim> _166713_prim = _165531_t->_method_prim();
	if ((!(jule::real(_166713_prim))) || ((!(_166713_prim->_method_is_u8())) && (!(_166713_prim->_method_is_i32())))) {
		(*this)._method_push_err(_165559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_165549_d->_field_kind->_method_to_str()),jule::Any(_165531_t->_method_to_str())}));
	}
}



void _1a2c74a6c_Eval::_method_cast_str(jule::Ref<_1a2c74a6c_Data> _167331_d,_1e15a2bb9_Token _167341_error_token) {
	if (jule::real(_167331_d->_field_kind->_method_enm())) {
		jule::Ref<_1e2a21d4b_Enum> _167521_e = _167331_d->_field_kind->_method_enm();
		if (jule::real(_167521_e->_field_kind->_field_kind->_method_prim()) && _167521_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (jule::real(_167331_d->_field_kind->_method_prim())) {
		jule::Ref<_1a2db8ce3_Prim> _168217_prim = _167331_d->_field_kind->_method_prim();
		if ((!(_168217_prim->_method_is_u8())) && (!(_168217_prim->_method_is_i32()))) {
			(*this)._method_push_err(_167341_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_167331_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if ((!(jule::real(_167331_d->_field_kind->_method_slc())))) {
		(*this)._method_push_err(_167341_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_167331_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ref<_1a2db8ce3_TypeKind> _169417_t = _167331_d->_field_kind->_method_slc()->_field_elem;
	jule::Ref<_1a2db8ce3_Prim> _169513_prim = _169417_t->_method_prim();
	if ((!(jule::real(_169513_prim))) || ((!(_169513_prim->_method_is_u8())) && (!(_169513_prim->_method_is_i32())))) {
		(*this)._method_push_err(_167341_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_167331_d->_field_kind->_method_to_str())}));
	}
}



void _1a2c74a6c_Eval::_method_cast_int(jule::Ref<_1a2db8ce3_TypeKind> _170131_t,jule::Ref<_1a2c74a6c_Data> _170149_d,_1e15a2bb9_Token _170159_error_token) {
	if (_170149_d->_method_is_const()) {
		jule::Ref<_1a2db8ce3_Prim> _170317_prim = _170131_t->_method_prim();
		{
			if (!((_1a44da204_is_sig_int(_170317_prim->_field_kind)))) { goto _case_end_4351608016; }
			_case_begin_4351608016:;
			{
				_170149_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_170149_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4351607856;
			_case_end_4351608016:;
			if (!((_1a44da204_is_unsig_int(_170317_prim->_field_kind)))) { goto _case_end_4351608128; }
			_case_begin_4351608128:;
			{
				_170149_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_170149_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4351607856;
			_case_end_4351608128:;
			_match_end_4351607856:;
		}
	}
	if (jule::real(_170149_d->_field_kind->_method_enm())) {
		jule::Ref<_1e2a21d4b_Enum> _171417_e = _170149_d->_field_kind->_method_enm();
		if (_1a44da204_is_num(_171417_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (jule::real(_170149_d->_field_kind->_method_ptr())) {
		jule::Ref<_1a2db8ce3_Prim> _172117_prim = _170131_t->_method_prim();
		if (_172117_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_170159_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		} else if (((((!(_172117_prim->_method_is_i32())) && (!(_172117_prim->_method_is_i64()))) && (!(_172117_prim->_method_is_u16()))) && (!(_172117_prim->_method_is_u32()))) && (!(_172117_prim->_method_is_u64()))) {
			(*this)._method_push_err(_170159_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_170149_d->_field_kind->_method_to_str()),jule::Any(_170131_t->_method_to_str())}));
		}
		return;
	}
	jule::Ref<_1a2db8ce3_Prim> _173213_prim = _170149_d->_field_kind->_method_prim();
	if (jule::real(_173213_prim) && _1a44da204_is_num(_173213_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_170159_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_170149_d->_field_kind->_method_to_str()),jule::Any(_170131_t->_method_to_str())}));
}



void _1a2c74a6c_Eval::_method_cast_num(jule::Ref<_1a2db8ce3_TypeKind> _174031_t,jule::Ref<_1a2c74a6c_Data> _174049_d,_1e15a2bb9_Token _174059_error_token) {
	if (_174049_d->_method_is_const()) {
		jule::Ref<_1a2db8ce3_Prim> _174217_prim = _174031_t->_method_prim();
		{
			if (!((_1a44da204_is_float(_174217_prim->_field_kind)))) { goto _case_end_4351639168; }
			_case_begin_4351639168:;
			{
				_174049_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_174049_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_4351638992;
			_case_end_4351639168:;
			if (!((_1a44da204_is_sig_int(_174217_prim->_field_kind)))) { goto _case_end_4351639280; }
			_case_begin_4351639280:;
			{
				_174049_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_174049_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4351638992;
			_case_end_4351639280:;
			if (!((_1a44da204_is_unsig_int(_174217_prim->_field_kind)))) { goto _case_end_4351639392; }
			_case_begin_4351639392:;
			{
				_174049_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_174049_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4351638992;
			_case_end_4351639392:;
			_match_end_4351638992:;
		}
	}
	if (jule::real(_174049_d->_field_kind->_method_enm())) {
		jule::Ref<_1e2a21d4b_Enum> _175617_e = _174049_d->_field_kind->_method_enm();
		if (_1a44da204_is_num(_175617_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ref<_1a2db8ce3_Prim> _176213_prim = _174049_d->_field_kind->_method_prim();
	if (jule::real(_176213_prim) && _1a44da204_is_num(_176213_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_174059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_174049_d->_field_kind->_method_to_str()),jule::Any(_174031_t->_method_to_str())}));
}



void _1a2c74a6c_Eval::_method_cast_prim(jule::Ref<_1a2db8ce3_TypeKind> _177032_t,jule::Ref<_1a2c74a6c_Data> _177050_d,_1e15a2bb9_Token _177060_error_token) {
	jule::Ref<_1a2db8ce3_Prim> _177113_prim = _177032_t->_method_prim();
	{
		if (!((_177113_prim->_method_is_any()))) { goto _case_end_4351659440; }
		goto _match_end_4351658544;
		_case_end_4351659440:;
		if (!((_177113_prim->_method_is_str()))) { goto _case_end_4351658944; }
		_case_begin_4351658944:;
		{
			(*this)._method_cast_str(_177050_d,_177060_error_token);
		}
		goto _match_end_4351658544;
		_case_end_4351658944:;
		if (!((_1a44da204_is_int(_177113_prim->_method_to_str())))) { goto _case_end_4351659040; }
		_case_begin_4351659040:;
		{
			(*this)._method_cast_int(_177032_t,_177050_d,_177060_error_token);
		}
		goto _match_end_4351658544;
		_case_end_4351659040:;
		if (!((_1a44da204_is_num(_177113_prim->_method_to_str())))) { goto _case_end_4351659136; }
		_case_begin_4351659136:;
		{
			(*this)._method_cast_num(_177032_t,_177050_d,_177060_error_token);
		}
		goto _match_end_4351658544;
		_case_end_4351659136:;
		_case_begin_4351658656:;
		{
			(*this)._method_push_err(_177060_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_177032_t->_method_to_str())}));
		}
		goto _match_end_4351658544;
		_case_end_4351658656:;
		_match_end_4351658544:;
	}
}



void _1a2c74a6c_Eval::_method_cast_constant(jule::Ref<_1a2db8ce3_TypeKind>& _179037_t,jule::Ref<_1a2c74a6c_Data>& _179056_d) {
	jule::Ref<_1a2db8ce3_Prim> _179113_prim = _179037_t->_method_prim();
	if ((!(jule::real(_179113_prim))) || (!(_179056_d->_method_is_const()))) {
		return;
	}
	{
		if (!((_1a44da204_is_sig_int(_179113_prim->_field_kind)))) { goto _case_end_4351672000; }
		_case_begin_4351672000:;
		{
			_179056_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_179056_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4351671728;
		_case_end_4351672000:;
		if (!((_1a44da204_is_unsig_int(_179113_prim->_field_kind)))) { goto _case_end_4351672096; }
		_case_begin_4351672096:;
		{
			_179056_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_179056_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4351671728;
		_case_end_4351672096:;
		if (!((_1a44da204_is_float(_179113_prim->_field_kind)))) { goto _case_end_4351672192; }
		_case_begin_4351672192:;
		{
			_179056_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_179056_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4351671728;
		_case_end_4351672192:;
		_match_end_4351671728:;
	}
	_179056_d->_field_model=jule::Any(_179056_d->_field_constant);
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_cast_by_type_n_data(jule::Ref<_1a2db8ce3_TypeKind> _181047_t,jule::Ref<_1a2c74a6c_Data> _181065_d,_1e15a2bb9_Token _181075_error_token) {
	{
		if (!((jule::real(_181065_d->_field_kind->_method_prim()) && _181065_d->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4351686144; }
		_case_begin_4351686144:;
		{
			if (jule::real(_181047_t->_method_enm())) {
				(*this)._method_push_err(_181075_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>({}));
				(*this)._method_push_suggestion(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4351683360;
		_case_end_4351686144:;
		if (!((jule::real(_181047_t->_method_ptr())))) { goto _case_end_4351686368; }
		_case_begin_4351686368:;
		{
			(*this)._method_cast_ptr(_181047_t,_181065_d,_181075_error_token);
		}
		goto _match_end_4351683360;
		_case_end_4351686368:;
		if (!((jule::real(_181047_t->_method_ref())))) { goto _case_end_4351683824; }
		_case_begin_4351683824:;
		{
			(*this)._method_cast_ref(_181047_t,_181065_d,_181075_error_token);
		}
		goto _match_end_4351683360;
		_case_end_4351683824:;
		if (!((jule::real(_181047_t->_method_slc())))) { goto _case_end_4351683920; }
		_case_begin_4351683920:;
		{
			(*this)._method_cast_slc(_181047_t,_181065_d,_181075_error_token);
		}
		goto _match_end_4351683360;
		_case_end_4351683920:;
		if (!((jule::real(_181047_t->_method_strct())))) { goto _case_end_4351684016; }
		_case_begin_4351684016:;
		{
			(*this)._method_cast_struct(_181047_t,_181065_d,_181075_error_token);
		}
		goto _match_end_4351683360;
		_case_end_4351684016:;
		if (!((jule::real(_181047_t->_method_prim())))) { goto _case_end_4351684112; }
		_case_begin_4351684112:;
		{
			(*this)._method_cast_prim(_181047_t,_181065_d,_181075_error_token);
		}
		goto _match_end_4351683360;
		_case_end_4351684112:;
		_case_begin_4351683536:;
		{
			(*this)._method_push_err(_181075_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_181047_t->_method_to_str())}));
			jule::drop(_181065_d);
		}
		goto _match_end_4351683360;
		_case_end_4351683536:;
		_match_end_4351683360:;
	}
	if ((!(jule::real(_181065_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_181065_d->_field_mutable=_181065_d->_field_mutable || ((!(_181065_d->_field_kind->_method_mutable())) && _181047_t->_method_mutable());
	_181065_d->_field_lvalue=_181047_t->_method_lvalue();
	_181065_d->_field_decl=false;
	(*this)._method_cast_constant(_181047_t,_181065_d);
	if ((!(jule::real(_181065_d->_field_kind->_method_enm()))) || (_181065_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _181047_t->_method_to_str())) {
		_181065_d->_field_cast_kind=_181047_t;
	} else {
		_181065_d->_field_kind=_181047_t;
	}
	return _181065_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_cast(jule::Ref<_1e16025cb_CastExpr> _186033_c) {
	jule::Ref<_1a2db8ce3_TypeSymbol> _186117_t = _1e28b6a59_build_type(_186033_c->_field_kind);
	jule::Bool _186213_ok = this->self->_field_s->_method_check_type(_186117_t,this->self->_field_lookup);
	if ((!(_186213_ok))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1a2db8ce3_TypeKind> _186717_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_186717_prefix;
	});
	jule::Ref<_1a2c74a6c_Data> _187117_d = this->self->_method_eval_expr_kind(_186033_c->_field_expr);
	if ((!(jule::real(_187117_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_187117_d=this->self->_method_eval_cast_by_type_n_data(_186117_t->_field_kind,_187117_d,_186033_c->_field_kind->_field_token);
	return _187117_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_ns_selection(jule::Ref<_1e16025cb_NsSelectionExpr> _188136_s) {
	jule::Str _188213_path = _1a2db8ce3_build_link_path_by_tokens(_188136_s->_field_ns);
	jule::Ref<_1e2a7b966_ImportInfo> _188317_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)>([=](jule::Ref<_1e2a7b966_ImportInfo> _188353_p) mutable -> jule::Bool {
		if ((_188136_s->_field_ns.len() == 1LL) && (_188353_p->_field_alias == _188213_path)) {
			return true;
		}
		return _188353_p->_field_link_path == _188213_path;
	}));
	if ((!(jule::real(_188317_imp))) || (!(_188317_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_188136_s->_field_ident,jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_188213_path)}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Trait<_1a35968cc_Lookup> _189517_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_188317_imp;
	
	jule::Any _189917_def = (*this)._method_get_def(_188136_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_189517_lookup;
	jule::Ref<_1a2c74a6c_Data> _190217_d = (*this)._method_eval_def(_189917_def,_188136_s->_field_ident);
	return _190217_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_struct_lit_explicit(jule::Ref<_1e177440c_StructIns> _190748_s,jule::Slice<jule::Any> _190813_exprs,_1e15a2bb9_Token _190836_error_token) {
	jule::Bool _190913_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_190748_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_190748_s->_field_generics.len()),_190836_error_token);
	if ((!(_190913_ok))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	this->self->_method_push_reference_to_struct(_190748_s);
	_1a2c73c9c_StructLitChecker _191717_slc = _1a2c73c9c_StructLitChecker(this->self,_190836_error_token,_190748_s,jule::Slice<jule::Ref<_1e2a30c17_StructArgExprModel>>());
	_191717_slc._method_check(_190813_exprs);
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_190748_s)),jule::Ref<_1a2db8ce3_TypeKind>(),(!(this->self->_field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_StructLitExprModel>(new( std::nothrow ) _1e2a30c17_StructLitExprModel(_190748_s,_191717_slc._field_args))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_struct_lit(jule::Ref<_1e16025cb_StructLit> _193439_lit) {
	jule::Ref<_1a2db8ce3_TypeSymbol> _193517_t = _1e28b6a59_build_type(_193439_lit->_field_kind);
	jule::Bool _193613_ok = this->self->_field_s->_method_check_type(_193517_t,this->self->_field_lookup);
	if ((!(_193613_ok))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1e177440c_StructIns> _194117_s = _193517_t->_field_kind->_method_strct();
	if ((!(jule::real(_194117_s)))) {
		if (jule::real(_193517_t->_field_kind->_method_ref())) {
			_194117_s=_193517_t->_field_kind->_method_ref()->_field_elem->_method_strct();
			if (jule::real(_194117_s)) {
				goto _julec_label_eval;
			}
		}
		this->self->_method_push_err(_193439_lit->_field_kind->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_julec_label_eval:;
	jule::Ref<_1a2c74a6c_Data> _195417_d = this->self->_method_eval_struct_lit_explicit(_194117_s,_193439_lit->_field_exprs,_193439_lit->_field_kind->_field_token);
	if (jule::real(_193517_t->_field_kind->_method_ref())) {
		jule::Ref<_1e2a30c17_StructLitExprModel> _195621_model = _195417_d->_field_model.operator jule::Ref<_1e2a30c17_StructLitExprModel>();
		_1a2c74a6c_make_struct_lit_alloc(_195417_d,_195621_model);
	}
	return _195417_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_type(jule::Ref<_1e16025cb_TypeDecl> _196232_t) {
	jule::Ref<_1a2db8ce3_TypeSymbol> _196317_tk = _1e28b6a59_build_type(_196232_t);
	jule::Bool _196413_ok = (*this)._field_s->_method_check_type(_196317_tk,(*this)._field_lookup);
	if ((!(_196413_ok))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(_196317_tk->_field_kind,jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_196317_tk->_field_kind),true,jule::Ref<_1a37ddd88_Const>()));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_call_type_fn(jule::Ref<_1e16025cb_FnCallExpr> _197636_fc,jule::Ref<_1a2c74a6c_Data> _197657_d) {
	if (_197636_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_197636_fc->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_197657_d->_field_kind->_method_to_str())}));
	} else if (_197636_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_197636_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_197636_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_197636_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	if (_197636_fc->_field_args.len() > 0LL) {
		jule::Ref<_1a2c74a6c_Data> _198621_arg = this->self->_method_eval_expr_kind(_197636_fc->_field_args[0LL]->_field_kind);
		if (jule::real(_198621_arg)) {
			_197657_d=this->self->_method_eval_cast_by_type_n_data(_197657_d->_field_kind,_198621_arg,_197636_fc->_field_args[0LL]->_field_token);
		}
	}
	_197657_d->_field_decl=false;
	return _197657_d;
}



std::tuple<jule::Bool,jule::Bool> _1a2c74a6c_Eval::_method_check_fn_call_generics(jule::Ref<_1e1737e81_FnIns> _199745_f,jule::Ref<_1e16025cb_FnCallExpr> _199813_fc) {
	jule::Bool _199832_ok = jule::Bool();
	jule::Bool _199842_dynamic_annotation = jule::Bool();
	{
		if (!((((_199745_f->_field_decl->_field_generics.len() > 0LL) && (_199813_fc->_field_generics.len() == 0LL)) && (_199745_f->_field_params.len() > 0LL)))) { goto _case_end_4351801616; }
		_case_begin_4351801616:;
		{
			_199842_dynamic_annotation=true;
			_199745_f->_field_generics=jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>::alloc(static_cast<jule::I64>(_199745_f->_field_decl->_field_generics.len()));
			_199832_ok = true;
			_199842_dynamic_annotation = true;
			return std::make_tuple(_199832_ok,_199842_dynamic_annotation);
		}
		goto _match_end_4351796912;
		_case_end_4351801616:;
		if (!(((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_199745_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_199813_fc->_field_generics.len()),_199813_fc->_field_token)))))) { goto _case_end_4351801184; }
		_case_begin_4351801184:;
		{
			_199832_ok = false;
			_199842_dynamic_annotation = false;
			return std::make_tuple(_199832_ok,_199842_dynamic_annotation);
		}
		goto _match_end_4351796912;
		_case_end_4351801184:;
		_case_begin_4351797056:;
		{
			_199745_f->_field_generics=jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>::alloc(static_cast<jule::I64>(_199745_f->_field_decl->_field_generics.len()));
			{
				auto expr = _199813_fc->_field_generics;
				auto it = expr.begin();
				_iter_begin_4351798592:;
				if (it != expr.end()) {
					jule::Int _1a2c74a6c_i = it - expr.begin();
					jule::Ref<_1e16025cb_TypeDecl> _1a2c74a6c_g = *it;
					{
						jule::Ref<_1a2db8ce3_TypeSymbol> _201325_k = _1e28b6a59_build_type(_1a2c74a6c_g);
						_199832_ok=(*this)._field_s->_method_check_type(_201325_k,(*this)._field_lookup);
						if ((!(_199832_ok))) {
							_199832_ok = false;
							_199842_dynamic_annotation = false;
							return std::make_tuple(_199832_ok,_199842_dynamic_annotation);
						}
						_199745_f->_field_generics[_1a2c74a6c_i]=_201325_k->_field_kind;
					}
					_iter_next_4351798592:;
					++it;
					_1a2c74a6c_i++;
					goto _iter_begin_4351798592;
				}
				_iter_end_4351798592:;
			}
			_199832_ok = true;
			_199842_dynamic_annotation = false;
			return std::make_tuple(_199832_ok,_199842_dynamic_annotation);
		}
		goto _match_end_4351796912;
		_case_end_4351797056:;
		_match_end_4351796912:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_call_builtin_fn(jule::Ref<_1e16025cb_FnCallExpr> _202539_fc,jule::Ref<_1a2c74a6c_Data> _202560_d) {
	jule::Ref<_1e1737e81_FnIns> _202617_f = _202560_d->_field_kind->_method_fnc();
	_202560_d=_202617_f->_field_caller(this->self,_202539_fc,_202560_d);
	if ((!(jule::real(_202560_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_202560_d->_field_mutable=true;
	return _202560_d;
}



void _1a2c74a6c_Eval::_method_check_fn_of_concurrent_call(jule::Ref<_1e1737e81_FnIns>& _203747_f,_1e15a2bb9_Token _203758_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto expr = _203747_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4351825504:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_ParamIns> _1a2c74a6c_p = *it;
			{
				if (_1a2c74a6c_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_203758_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>({}));
					return;
				}
			}
			_iter_next_4351825504:;
			++it;
			goto _iter_begin_4351825504;
		}
		_iter_end_4351825504:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_call_fn(jule::Ref<_1e16025cb_FnCallExpr> _205031_fc,jule::Ref<_1a2c74a6c_Data> _205052_d) {
	jule::Ref<_1e1737e81_FnIns> _205117_f = _205052_d->_field_kind->_method_fnc();
	if (_205117_f->_method_is_builtin()) {
		return this->self->_method_call_builtin_fn(_205031_fc,_205052_d);
	}
	if (_205031_fc->_field_concurrent) {
		this->self->_method_check_fn_of_concurrent_call(_205117_f,_205031_fc->_field_token);
	}
	if ((((!(_205052_d->_field_mutable)) && _205117_f->_field_decl->_method_is_method()) && (!(_205117_f->_field_decl->_field_statically))) && _205117_f->_field_decl->_field_params[0LL]->_field_mutable) {
		this->self->_method_push_err(_205031_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	} else if ((!(this->self->_method_is_unsafe())) && _205117_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_205031_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Bool _206618_ok;
	jule::Bool _206622_dynamic_annotation;
	std::tie(_206618_ok,_206622_dynamic_annotation) = this->self->_method_check_fn_call_generics(_205117_f,_205031_fc);
	if ((!(_206618_ok))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1e2a7c2a2_Sema> _207117_old = this->self->_field_s;
	if (jule::real(_205117_f->_field_decl->_field_owner)) {
		this->self->_field_s=_205117_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if ((_207117_old).alloc != (this->self->_field_s).alloc) {
			_207117_old->_field_errors=jule::append(_207117_old->_field_errors,this->self->_field_s->_field_errors);
			this->self->_field_s->_field_errors=nullptr;
		}
		this->self->_field_s=_207117_old;
	});
	if ((!(_206622_dynamic_annotation))) {
		if ((!(_205117_f->_field_reloaded))) {
			_206618_ok=this->self->_field_s->_method_reload_fn_ins_types(_205117_f);
			if ((!(_206618_ok))) {
				return jule::new_ref<_1a2c74a6c_Data>();
			}
			_205117_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_205117_f);
	}
	_1a2c73c9c_FnCallArgChecker _209617_fcac = _1a2c73c9c_FnCallArgChecker(this->self,_205031_fc->_field_args,_205031_fc->_field_token,_205117_f,_206622_dynamic_annotation,jule::Slice<jule::Any>());
	if (jule::real(_205117_f->_field_decl->_field_owner)) {
		std::tie(_207117_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_207117_old);
		_206618_ok=_209617_fcac._method_check();
		std::tie(_207117_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_207117_old);
	} else {
		_206618_ok=_209617_fcac._method_check();
	}
	if ((!(_206618_ok)) && _206622_dynamic_annotation) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Bool _211514_is_unique_ins;
	jule::Int _211529_pos;
	std::tie(_211514_is_unique_ins,_211529_pos) = _205117_f->_field_decl->_method_append_instance(_205117_f);
	if ((!(_211514_is_unique_ins))) {
		_205117_f=_205117_f->_field_decl->_field_instances[_211529_pos];
	}
	jule::Any _212017_call_model = _205052_d->_field_model;
	if (_205117_f->_field_decl->_method_is_void()) {
		_205052_d=_1a2c74a6c_build_void_data();
	} else {
		if (_206622_dynamic_annotation) {
			_206618_ok=this->self->_field_s->_method_reload_fn_ins_types(_205117_f);
			if ((!(_206618_ok))) {
				return jule::new_ref<_1a2c74a6c_Data>();
			}
			_205117_f->_field_reloaded=true;
		}
		_205052_d->_field_kind=_205117_f->_field_result;
		_205052_d->_field_lvalue=_205117_f->_field_result->_method_lvalue();
	}
	_205052_d->_field_mutable=true;
	_205052_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_FnCallExprModel>(new( std::nothrow ) _1e2a30c17_FnCallExprModel(_205117_f,_205031_fc->_field_concurrent,_212017_call_model,_209617_fcac._field_arg_models)));
	if ((_205117_f->_field_generics.len() > 0LL) && _211514_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_205117_f);
	}
	return _205052_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_fn_call(jule::Ref<_1e16025cb_FnCallExpr> _215336_fc) {
	jule::Ref<_1a2db8ce3_TypeKind> _215417_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_215417_prefix;
	});
	jule::Ref<_1a2c74a6c_Data> _215817_d = this->self->_method_eval_expr_kind(_215336_fc->_field_expr->_field_kind);
	if ((!(jule::real(_215817_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_215817_d->_field_decl) {
		return this->self->_method_call_type_fn(_215336_fc,_215817_d);
	}
	if ((!(jule::real(_215817_d->_field_kind->_method_fnc())))) {
		this->self->_method_push_err(_215336_fc->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	return this->self->_method_call_fn(_215336_fc,_215817_d);
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_enum_static(jule::Ref<_1e2a21d4b_Enum> _217539_enm,_1e15a2bb9_Token _217551_ident) {
	jule::Ref<_1a2c74a6c_Data> _217617_d = jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_217539_enm)),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1a37ddd88_Const>()));
	jule::Ref<_1e2a21d4b_EnumItem> _218317_item = _217539_enm->_method_find_item(_217551_ident._field_kind);
	if ((!(jule::real(_218317_item)))) {
		(*this)._method_push_err(_217551_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_217551_ident._field_kind)}));
	} else {
		_217617_d->_field_constant=jule::new_ref<_1a37ddd88_Const>(_218317_item->_field_value->_field_data->_field_constant.get());
		_217617_d->_field_model=jule::Any(_217617_d->_field_constant);
	}
	return _217617_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_struct_static(jule::Ref<_1e177440c_StructIns> _219441_s,_1e15a2bb9_Token _219456_ident) {
	jule::Ref<_1a2c74a6c_Data> _219517_d = jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::Ref<_1a2db8ce3_TypeKind>(),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1a37ddd88_Const>()));
	
	jule::Ref<_1e1737e81_Fn> _220317_method = _219441_s->_method_find_method(_219456_ident._field_kind,true);
	if (jule::real(_220317_method)) {
		if ((!((*this)._field_s->_method_is_accessible_define(_220317_method->_field_public,_220317_method->_field_token)))) {
			(*this)._method_push_err(_219456_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_219456_ident._field_kind)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		}
		jule::Ref<_1e1737e81_FnIns> _221021_ins = _220317_method->_method_instance();
		_221021_ins->_field_owner=_219441_s;
		(*this)._method_push_reference_to_fn(_221021_ins);
		_219517_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_StructStaticIdentExprModel>(new( std::nothrow ) _1e2a30c17_StructStaticIdentExprModel(_219441_s,_219517_d->_field_model,_221021_ins)));
		_219517_d->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_221021_ins));
		return _219517_d;
	}
	jule::Ref<_1ba80e105_Var> _222217_sttc = _219441_s->_field_decl->_method_find_static(_219456_ident._field_kind);
	if (jule::real(_222217_sttc)) {
		return (*this)._method_eval_var(_222217_sttc,_219456_ident);
	}
	(*this)._method_push_err(_219456_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_219456_ident._field_kind)}));
	return jule::new_ref<_1a2c74a6c_Data>();
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_trait_sub_ident(jule::Ref<_1a2c74a6c_Data> _223143_d,jule::Ref<_1e2a1e563_Trait> _223157_trt,_1e15a2bb9_Token _223170_ident) {
	jule::Ref<_1e1737e81_Fn> _223217_f = _223157_trt->_method_find_method(_223170_ident._field_kind);
	if ((!(jule::real(_223217_f)))) {
		(*this)._method_push_err(_223170_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_223170_ident._field_kind)}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Any _223817_model = jule::Any(nullptr);
	if ((_223157_trt).alloc == (_1a36e0bad_BUILTIN_TRAIT_ERROR).alloc) {
		_223817_model=jule::Any(jule::new_struct<_1e2a30c17_BuiltinErrorTraitSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_BuiltinErrorTraitSubIdentExprModel(_223143_d->_field_model,_223170_ident._field_kind)));
	} else {
		_223817_model=jule::Any(jule::new_struct<_1e2a30c17_TraitSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_TraitSubIdentExprModel(_223143_d->_field_model,_223170_ident._field_kind)));
	}
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_223217_f->_method_instance())),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_223817_model,false,jule::Ref<_1a37ddd88_Const>()));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_struct_sub_ident(jule::Ref<_1a2c74a6c_Data> _226044_d,jule::Ref<_1e177440c_StructIns> _226058_s,jule::Ref<_1e16025cb_SubIdentExpr> _226073_si,jule::Bool _226092_ref) {
	jule::Ref<_1e177440c_FieldIns> _226117_f = _226058_s->_method_find_field(_226073_si->_field_ident._field_kind);
	if (jule::real(_226117_f)) {
		if ((!((*this)._field_s->_method_is_accessible_define(_226117_f->_field_decl->_field_public,_226117_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_226073_si->_field_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_226117_f->_field_decl->_field_ident)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		}
		jule::Ref<_1e2a30c17_StructSubIdentExprModel> _226821_model = jule::new_struct<_1e2a30c17_StructSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_StructSubIdentExprModel(_226044_d->_field_model,_226044_d->_field_kind,jule::Ref<_1e1737e81_FnIns>(),_226117_f));
		_226044_d->_field_model=jule::Any(_226821_model);
		_226044_d->_field_kind=_226117_f->_field_kind->_method_clone();
		if (_226117_f->_field_decl->_field_mutable && (!(_226044_d->_field_mutable))) {
			{
				auto _match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_ScopeChecker>>())) { goto _case_end_4985606720; }
				_case_begin_4985606720:;
				{
					jule::Ref<_1e2a2e210_ScopeChecker> _228025_scope = (*this)._field_lookup.operator jule::Ref<_1e2a2e210_ScopeChecker>()->_method_get_root();
					_226044_d->_field_mutable=jule::real(_228025_scope->_field_owner) && ((_228025_scope->_field_owner->_field_owner).alloc == (_226058_s).alloc);
					if (_226044_d->_field_mutable) {
						jule::Ref<_1ba80e105_Var> _228333_field = _226821_model->_field_expr.operator jule::Ref<_1ba80e105_Var>();
						jule::Ref<_1ba80e105_Var> _228433_v = jule::new_struct<_1ba80e105_Var>(new( std::nothrow ) _1ba80e105_Var(_228333_field->_field_scope,_228333_field->_field_token,_228333_field->_field_ident,_228333_field->_field_cpp_linked,_228333_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_228333_field->_field_kind,_228333_field->_field_value,jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Slice<jule::Ref<_1e16025cb_Directive>>(),jule::Ref<_1ba80e105_IterRelation>(),jule::Slice<jule::Ref<_1ba80e105_Var>>()));
						_228433_v->_field_mutable=true;
						_226821_model->_field_expr=jule::Any(_228433_v);
					}
				}
				goto _match_end_4562165136;
				_case_end_4985606720:;
				_match_end_4562165136:;
			}
		}
		return _226044_d;
	}
	
	jule::Ref<_1e1737e81_Fn> _230317_m = _226058_s->_method_find_method(_226073_si->_field_ident._field_kind,false);
	if ((!(jule::real(_230317_m)))) {
		(*this)._method_push_err(_226073_si->_field_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_226073_si->_field_ident._field_kind)}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_230317_m->_field_params[0LL]->_method_is_ref() && (!(_226092_ref))) {
		(*this)._method_push_err(_226073_si->_field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1e1737e81_FnIns> _231417_ins = _230317_m->_method_instance();
	_231417_ins->_field_owner=_226058_s;
	(*this)._method_push_reference_to_fn(_231417_ins);
	_226044_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_StructSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_StructSubIdentExprModel(_226044_d->_field_model,_226044_d->_field_kind,_231417_ins,jule::Ref<_1e177440c_FieldIns>())));
	_226044_d->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_231417_ins));
	return _226044_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_slice_sub_ident(jule::Ref<_1a2c74a6c_Data> _232643_d,_1e15a2bb9_Token _232653_ident) {
	{
		auto _match_expr{ _232653_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4985609648; }
		_case_begin_4985609648:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_232643_d->_field_kind,_232643_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562089472;
		_case_end_4985609648:;
		if (!((jule::Str("cap", 3)) == _match_expr)) { goto _case_end_4985630320; }
		_case_begin_4985630320:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_232643_d->_field_kind,_232643_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562089472;
		_case_end_4985630320:;
		_case_begin_4562043264:;
		{
			(*this)._method_push_err(_232653_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_232653_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562089472;
		_case_end_4562043264:;
		_match_end_4562089472:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_array_sub_ident(jule::Ref<_1a2c74a6c_Data> _235643_d,_1e15a2bb9_Token _235653_ident) {
	{
		auto _match_expr{ _235653_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4985547728; }
		_case_begin_4985547728:;
		{
			jule::Ref<_1a37ddd88_Const> _235921_c = _1a37ddd88_Const::_static_method_new_i64(static_cast<jule::I64>(_235643_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_235921_c),jule::Bool(),_235921_c));
		}
		goto _match_end_4985093120;
		_case_end_4985547728:;
		_case_begin_4985110272:;
		{
			(*this)._method_push_err(_235653_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_235653_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4985093120;
		_case_end_4985110272:;
		_match_end_4985093120:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_map_sub_ident(jule::Ref<_1a2c74a6c_Data> _237341_d,_1e15a2bb9_Token _237351_ident) {
	jule::Ref<_1a2db8ce3_Map> _237417_map_kind = _237341_d->_field_kind->_method_map();
	if ((!(jule::real(_237417_map_kind)))) {
		_237417_map_kind=_237341_d->_field_kind->_method_ref()->_field_elem->_method_map();
	}
	{
		auto _match_expr{ _237351_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4985096560; }
		_case_begin_4985096560:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_237341_d->_field_kind,_237341_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562003456;
		_case_end_4985096560:;
		if (!((jule::Str("clear", 5)) == _match_expr)) { goto _case_end_4985372784; }
		_case_begin_4985372784:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>(),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),_237341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_237341_d->_field_kind,_237341_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562003456;
		_case_end_4985372784:;
		if (!((jule::Str("keys", 4)) == _match_expr)) { goto _case_end_4985372880; }
		_case_begin_4985372880:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>(),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1a2db8ce3_Slc>(new( std::nothrow ) _1a2db8ce3_Slc(_237417_map_kind->_field_key)))),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),_237341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_237341_d->_field_kind,_237341_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562003456;
		_case_end_4985372880:;
		if (!((jule::Str("values", 6)) == _match_expr)) { goto _case_end_4985317552; }
		_case_begin_4985317552:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>(),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1a2db8ce3_Slc>(new( std::nothrow ) _1a2db8ce3_Slc(_237417_map_kind->_field_val)))),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),_237341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_237341_d->_field_kind,_237341_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562003456;
		_case_end_4985317552:;
		if (!((jule::Str("has", 3)) == _match_expr)) { goto _case_end_4985317648; }
		_case_begin_4985317648:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("key", 3))),_237417_map_kind->_field_key))}),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),_237341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_237341_d->_field_kind,_237341_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562003456;
		_case_end_4985317648:;
		if (!((jule::Str("del", 3)) == _match_expr)) { goto _case_end_4985226528; }
		_case_begin_4985226528:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("key", 3))),_237417_map_kind->_field_key))}),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),_237341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_237341_d->_field_kind,_237341_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562003456;
		_case_end_4985226528:;
		_case_begin_4562183056:;
		{
			(*this)._method_push_err(_237351_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_237351_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562003456;
		_case_end_4562183056:;
		_match_end_4562003456:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_str_sub_ident(jule::Ref<_1a2c74a6c_Data> _249941_d,_1e15a2bb9_Token _249951_ident) {
	jule::Ref<_1a2db8ce3_TypeKind> _250017_str_kind = jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("str", 3))));
	{
		auto _match_expr{ _249951_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4562095296; }
		_case_begin_4562095296:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_249941_d->_field_kind,_249941_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562011168;
		_case_end_4562095296:;
		if (!((jule::Str("has_prefix", 10)) == _match_expr)) { goto _case_end_4562035152; }
		_case_begin_4562035152:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("sub", 3))),_250017_str_kind))}),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_249941_d->_field_kind,_249941_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562011168;
		_case_end_4562035152:;
		if (!((jule::Str("has_suffix", 10)) == _match_expr)) { goto _case_end_4562034976; }
		_case_begin_4562034976:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("sub", 3))),_250017_str_kind))}),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_249941_d->_field_kind,_249941_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562011168;
		_case_end_4562034976:;
		if (!((jule::Str("find", 4)) == _match_expr)) { goto _case_end_4985467984; }
		_case_begin_4985467984:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("sub", 3))),_250017_str_kind))}),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_249941_d->_field_kind,_249941_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562011168;
		_case_end_4985467984:;
		if (!((jule::Str("rfind", 5)) == _match_expr)) { goto _case_end_4985468080; }
		_case_begin_4985468080:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("sub", 3))),_250017_str_kind))}),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_249941_d->_field_kind,_249941_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562011168;
		_case_end_4985468080:;
		if (!((jule::Str("trim", 4)) == _match_expr)) { goto _case_end_4985468176; }
		_case_begin_4985468176:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("bytes", 5))),_250017_str_kind))}),_250017_str_kind,jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_249941_d->_field_kind,_249941_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562011168;
		_case_end_4985468176:;
		if (!((jule::Str("ltrim", 5)) == _match_expr)) { goto _case_end_4985129952; }
		_case_begin_4985129952:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("bytes", 5))),_250017_str_kind))}),_250017_str_kind,jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_249941_d->_field_kind,_249941_d->_field_model,jule::Str("ltrim", 5)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562011168;
		_case_end_4985129952:;
		if (!((jule::Str("rtrim", 5)) == _match_expr)) { goto _case_end_4985130048; }
		_case_begin_4985130048:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("bytes", 5))),_250017_str_kind))}),_250017_str_kind,jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_249941_d->_field_kind,_249941_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562011168;
		_case_end_4985130048:;
		if (!((jule::Str("split", 5)) == _match_expr)) { goto _case_end_4985130144; }
		_case_begin_4985130144:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("sub", 3))),_250017_str_kind)),jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1a2db8ce3_Slc>(new( std::nothrow ) _1a2db8ce3_Slc(_250017_str_kind)))),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_249941_d->_field_kind,_249941_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562011168;
		_case_end_4985130144:;
		if (!((jule::Str("replace", 7)) == _match_expr)) { goto _case_end_4985130240; }
		_case_begin_4985130240:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("sub", 3))),_250017_str_kind)),jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("new", 3))),_250017_str_kind)),jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("int", 3))))))}),_250017_str_kind,jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_CommonSubIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonSubIdentExprModel(_249941_d->_field_kind,_249941_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4562011168;
		_case_end_4985130240:;
		_case_begin_4985244192:;
		{
			(*this)._method_push_err(_249951_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_249951_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562011168;
		_case_end_4985244192:;
		_match_end_4562011168:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_int_type_static(_1e15a2bb9_Token _274839_ident) {
	
	{
		auto _match_expr{ _274839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4561998224; }
		_case_begin_4561998224:;
		{
			jule::Ref<_1a37ddd88_Const> _275321_c = _1a37ddd88_Const::_static_method_new_i64(static_cast<jule::I64>(_1a4449817_max(jule::Str("int", 3))));
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_275321_c),jule::Bool(),_275321_c));
		}
		goto _match_end_4561998144;
		_case_end_4561998224:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4985609072; }
		_case_begin_4985609072:;
		{
			jule::Ref<_1a37ddd88_Const> _276121_c = _1a37ddd88_Const::_static_method_new_i64(static_cast<jule::I64>(_1a4449817_min(jule::Str("int", 3))));
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276121_c),jule::Bool(),_276121_c));
		}
		goto _match_end_4561998144;
		_case_end_4985609072:;
		_case_begin_4985647200:;
		{
			(*this)._method_push_err(_274839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_274839_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4561998144;
		_case_end_4985647200:;
		_match_end_4561998144:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_uint_type_static(_1e15a2bb9_Token _277440_ident) {
	
	{
		auto _match_expr{ _277440_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4562022128; }
		_case_begin_4562022128:;
		{
			jule::Ref<_1a37ddd88_Const> _277921_c = _1a37ddd88_Const::_static_method_new_u64(static_cast<jule::U64>(_1a4449817_max(jule::Str("uint", 4))));
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_277921_c),jule::Bool(),_277921_c));
		}
		goto _match_end_4985596752;
		_case_end_4562022128:;
		_case_begin_4562032512:;
		{
			(*this)._method_push_err(_277440_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_277440_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4985596752;
		_case_end_4562032512:;
		_match_end_4985596752:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_i8_type_static(_1e15a2bb9_Token _279238_ident) {
	
	
	
	{
		auto _match_expr{ _279238_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4561979456; }
		_case_begin_4561979456:;
		{
			jule::Ref<_1a37ddd88_Const> _279921_c = _1a37ddd88_Const::_static_method_new_i64(127LL);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_279921_c),jule::Bool(),_279921_c));
		}
		goto _match_end_4985460240;
		_case_end_4561979456:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4561979280; }
		_case_begin_4561979280:;
		{
			jule::Ref<_1a37ddd88_Const> _280721_c = _1a37ddd88_Const::_static_method_new_i64(-128LL);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_280721_c),jule::Bool(),_280721_c));
		}
		goto _match_end_4985460240;
		_case_end_4561979280:;
		_case_begin_4985459856:;
		{
			(*this)._method_push_err(_279238_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_279238_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4985460240;
		_case_end_4985459856:;
		_match_end_4985460240:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_i16_type_static(_1e15a2bb9_Token _282039_ident) {
	
	
	
	{
		auto _match_expr{ _282039_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4562195056; }
		_case_begin_4562195056:;
		{
			jule::Ref<_1a37ddd88_Const> _282721_c = _1a37ddd88_Const::_static_method_new_i64(32767LL);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_282721_c),jule::Bool(),_282721_c));
		}
		goto _match_end_4562191584;
		_case_end_4562195056:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4562195536; }
		_case_begin_4562195536:;
		{
			jule::Ref<_1a37ddd88_Const> _283521_c = _1a37ddd88_Const::_static_method_new_i64(-32768LL);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_283521_c),jule::Bool(),_283521_c));
		}
		goto _match_end_4562191584;
		_case_end_4562195536:;
		_case_begin_4562190048:;
		{
			(*this)._method_push_err(_282039_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_282039_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562191584;
		_case_end_4562190048:;
		_match_end_4562191584:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_i32_type_static(_1e15a2bb9_Token _284839_ident) {
	
	
	
	{
		auto _match_expr{ _284839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4562208576; }
		_case_begin_4562208576:;
		{
			jule::Ref<_1a37ddd88_Const> _285521_c = _1a37ddd88_Const::_static_method_new_i64(2147483647LL);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_285521_c),jule::Bool(),_285521_c));
		}
		goto _match_end_4562205104;
		_case_end_4562208576:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4562209056; }
		_case_begin_4562209056:;
		{
			jule::Ref<_1a37ddd88_Const> _286321_c = _1a37ddd88_Const::_static_method_new_i64(-2147483648LL);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_286321_c),jule::Bool(),_286321_c));
		}
		goto _match_end_4562205104;
		_case_end_4562209056:;
		_case_begin_4562203568:;
		{
			(*this)._method_push_err(_284839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_284839_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562205104;
		_case_end_4562203568:;
		_match_end_4562205104:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_i64_type_static(_1e15a2bb9_Token _287639_ident) {
	
	
	
	{
		auto _match_expr{ _287639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4562221472; }
		_case_begin_4562221472:;
		{
			jule::Ref<_1a37ddd88_Const> _288321_c = _1a37ddd88_Const::_static_method_new_i64(jule::MAX_I64);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_288321_c),jule::Bool(),_288321_c));
		}
		goto _match_end_4562218000;
		_case_end_4562221472:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4562221952; }
		_case_begin_4562221952:;
		{
			jule::Ref<_1a37ddd88_Const> _289121_c = _1a37ddd88_Const::_static_method_new_i64(jule::MIN_I64);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_289121_c),jule::Bool(),_289121_c));
		}
		goto _match_end_4562218000;
		_case_end_4562221952:;
		_case_begin_4562216624:;
		{
			(*this)._method_push_err(_287639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_287639_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562218000;
		_case_end_4562216624:;
		_match_end_4562218000:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_u8_type_static(_1e15a2bb9_Token _290438_ident) {
	
	
	{
		auto _match_expr{ _290438_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4562233632; }
		_case_begin_4562233632:;
		{
			jule::Ref<_1a37ddd88_Const> _291021_c = _1a37ddd88_Const::_static_method_new_u64(255LLU);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("u8", 2)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_291021_c),jule::Bool(),_291021_c));
		}
		goto _match_end_4562230096;
		_case_end_4562233632:;
		_case_begin_4562228480:;
		{
			(*this)._method_push_err(_290438_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_290438_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562230096;
		_case_end_4562228480:;
		_match_end_4562230096:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_u16_type_static(_1e15a2bb9_Token _292339_ident) {
	
	
	{
		auto _match_expr{ _292339_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4562243216; }
		_case_begin_4562243216:;
		{
			jule::Ref<_1a37ddd88_Const> _292921_c = _1a37ddd88_Const::_static_method_new_u64(65535LLU);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("u16", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_292921_c),jule::Bool(),_292921_c));
		}
		goto _match_end_4562239680;
		_case_end_4562243216:;
		_case_begin_4562238064:;
		{
			(*this)._method_push_err(_292339_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_292339_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562239680;
		_case_end_4562238064:;
		_match_end_4562239680:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_u32_type_static(_1e15a2bb9_Token _294239_ident) {
	
	
	{
		auto _match_expr{ _294239_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4562252800; }
		_case_begin_4562252800:;
		{
			jule::Ref<_1a37ddd88_Const> _294821_c = _1a37ddd88_Const::_static_method_new_u64(4294967295LLU);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("u32", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_294821_c),jule::Bool(),_294821_c));
		}
		goto _match_end_4562249264;
		_case_end_4562252800:;
		_case_begin_4562247648:;
		{
			(*this)._method_push_err(_294239_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_294239_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562249264;
		_case_end_4562247648:;
		_match_end_4562249264:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_u64_type_static(_1e15a2bb9_Token _296139_ident) {
	
	
	{
		auto _match_expr{ _296139_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4562262224; }
		_case_begin_4562262224:;
		{
			jule::Ref<_1a37ddd88_Const> _296721_c = _1a37ddd88_Const::_static_method_new_u64(jule::MAX_U64);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("u64", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_296721_c),jule::Bool(),_296721_c));
		}
		goto _match_end_4562258688;
		_case_end_4562262224:;
		_case_begin_4562257232:;
		{
			(*this)._method_push_err(_296139_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_296139_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562258688;
		_case_end_4562257232:;
		_match_end_4562258688:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_f32_type_tatic(_1e15a2bb9_Token _298038_ident) {
	
	
	
	{
		auto _match_expr{ _298038_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4562272896; }
		_case_begin_4562272896:;
		{
			jule::Ref<_1a37ddd88_Const> _298721_c = _1a37ddd88_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_298721_c),jule::Bool(),_298721_c));
		}
		goto _match_end_4562269424;
		_case_end_4562272896:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4562273376; }
		_case_begin_4562273376:;
		{
			jule::Ref<_1a37ddd88_Const> _299521_c = _1a37ddd88_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_299521_c),jule::Bool(),_299521_c));
		}
		goto _match_end_4562269424;
		_case_end_4562273376:;
		_case_begin_4562267936:;
		{
			(*this)._method_push_err(_298038_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_298038_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562269424;
		_case_end_4562267936:;
		_match_end_4562269424:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_f64_type_static(_1e15a2bb9_Token _300839_ident) {
	
	
	
	{
		auto _match_expr{ _300839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4562285728; }
		_case_begin_4562285728:;
		{
			jule::Ref<_1a37ddd88_Const> _301521_c = _1a37ddd88_Const::_static_method_new_f64(jule::MAX_F64);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_301521_c),jule::Bool(),_301521_c));
		}
		goto _match_end_4562282256;
		_case_end_4562285728:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4562286208; }
		_case_begin_4562286208:;
		{
			jule::Ref<_1a37ddd88_Const> _302321_c = _1a37ddd88_Const::_static_method_new_f64(jule::MIN_F64);
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_302321_c),jule::Bool(),_302321_c));
		}
		goto _match_end_4562282256;
		_case_end_4562286208:;
		_case_begin_4562280928:;
		{
			(*this)._method_push_err(_300839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_300839_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562282256;
		_case_end_4562280928:;
		_match_end_4562282256:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_prim_static(jule::Str _303635_kind,_1e15a2bb9_Token _303646_ident) {
	{
		auto _match_expr{ _303635_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4562296704; }
		_case_begin_4562296704:;
		{
			return (*this)._method_eval_int_type_static(_303646_ident);
		}
		goto _match_end_4562293120;
		_case_end_4562296704:;
		if (!((jule::Str("uint", 4)) == _match_expr)) { goto _case_end_4562297184; }
		_case_begin_4562297184:;
		{
			return (*this)._method_eval_uint_type_static(_303646_ident);
		}
		goto _match_end_4562293120;
		_case_end_4562297184:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4562296528; }
		_case_begin_4562296528:;
		{
			return (*this)._method_eval_i8_type_static(_303646_ident);
		}
		goto _match_end_4562293120;
		_case_end_4562296528:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4562296144; }
		_case_begin_4562296144:;
		{
			return (*this)._method_eval_i16_type_static(_303646_ident);
		}
		goto _match_end_4562293120;
		_case_end_4562296144:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4562296240; }
		_case_begin_4562296240:;
		{
			return (*this)._method_eval_i32_type_static(_303646_ident);
		}
		goto _match_end_4562293120;
		_case_end_4562296240:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4562296336; }
		_case_begin_4562296336:;
		{
			return (*this)._method_eval_i64_type_static(_303646_ident);
		}
		goto _match_end_4562293120;
		_case_end_4562296336:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4562293824; }
		_case_begin_4562293824:;
		{
			return (*this)._method_eval_u8_type_static(_303646_ident);
		}
		goto _match_end_4562293120;
		_case_end_4562293824:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4562293920; }
		_case_begin_4562293920:;
		{
			return (*this)._method_eval_u16_type_static(_303646_ident);
		}
		goto _match_end_4562293120;
		_case_end_4562293920:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4562294016; }
		_case_begin_4562294016:;
		{
			return (*this)._method_eval_u32_type_static(_303646_ident);
		}
		goto _match_end_4562293120;
		_case_end_4562294016:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4562294112; }
		_case_begin_4562294112:;
		{
			return (*this)._method_eval_u64_type_static(_303646_ident);
		}
		goto _match_end_4562293120;
		_case_end_4562294112:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4562294208; }
		_case_begin_4562294208:;
		{
			return (*this)._method_eval_f32_type_tatic(_303646_ident);
		}
		goto _match_end_4562293120;
		_case_end_4562294208:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4562297312; }
		_case_begin_4562297312:;
		{
			return (*this)._method_eval_f64_type_static(_303646_ident);
		}
		goto _match_end_4562293120;
		_case_end_4562297312:;
		_case_begin_4562293024:;
		{
			(*this)._method_push_err(_303646_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_303635_kind),jule::Any(_303646_ident._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562293120;
		_case_end_4562293024:;
		_match_end_4562293120:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_type_static(jule::Ref<_1a2c74a6c_Data> _305639_d,jule::Ref<_1e16025cb_SubIdentExpr> _305653_si) {
	{
		if (!((jule::real(_305639_d->_field_kind->_method_prim())))) { goto _case_end_4562316368; }
		_case_begin_4562316368:;
		{
			return (*this)._method_eval_prim_static(_305639_d->_field_kind->_method_prim()->_method_to_str(),_305653_si->_field_ident);
		}
		goto _match_end_4562311136;
		_case_end_4562316368:;
		if (!((jule::real(_305639_d->_field_kind->_method_enm())))) { goto _case_end_4562316848; }
		_case_begin_4562316848:;
		{
			return (*this)._method_eval_enum_static(_305639_d->_field_kind->_method_enm(),_305653_si->_field_ident);
		}
		goto _match_end_4562311136;
		_case_end_4562316848:;
		if (!((jule::real(_305639_d->_field_kind->_method_strct())))) { goto _case_end_4562316192; }
		_case_begin_4562316192:;
		{
			return (*this)._method_eval_struct_static(_305639_d->_field_kind->_method_strct(),_305653_si->_field_ident);
		}
		goto _match_end_4562311136;
		_case_end_4562316192:;
		_case_begin_4562311280:;
		{
			(*this)._method_push_err(_305653_si->_field_ident,jule::Str("type @ is not supports sub fields", 33),jule::Slice<jule::Any>({jule::Any(_305639_d->_field_kind->_method_to_str())}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4562311136;
		_case_end_4562311280:;
		_match_end_4562311136:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_obj_sub_ident(jule::Ref<_1a2c74a6c_Data> _307341_d,jule::Ref<_1e16025cb_SubIdentExpr> _307355_si) {
	jule::Ref<_1a2db8ce3_TypeKind> _307417_kind = _307341_d->_field_kind;
	if (jule::real(_307341_d->_field_kind->_method_ptr())) {
		jule::Ref<_1a2db8ce3_Ptr> _307617_ptr = _307341_d->_field_kind->_method_ptr();
		if ((!(_307617_ptr->_method_is_unsafe()))) {
			if ((!(_307355_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_307355_si->_field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			}
			_307417_kind=_307341_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (jule::real(_307341_d->_field_kind->_method_ref())) {
		_307417_kind=_307341_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real(_307341_d->_field_kind->_method_trt())))) { goto _case_end_4562334528; }
		_case_begin_4562334528:;
		{
			return (*this)._method_eval_trait_sub_ident(_307341_d,_307341_d->_field_kind->_method_trt(),_307355_si->_field_ident);
		}
		goto _match_end_4562330144;
		_case_end_4562334528:;
		if (!((jule::real(_307417_kind->_method_strct())))) { goto _case_end_4562334624; }
		_case_begin_4562334624:;
		{
			jule::Ref<_1e177440c_StructIns> _309217_s = _307417_kind->_method_strct();
			if (_1a2c74a6c_is_instanced_struct(_309217_s)) {
				jule::Bool _309425_used_reference_elem = jule::real(_307341_d->_field_kind->_method_ref());
				return (*this)._method_eval_struct_sub_ident(_307341_d,_307417_kind->_method_strct(),_307355_si,_309425_used_reference_elem);
			}
		}
		goto _match_end_4562330144;
		_case_end_4562334624:;
		if (!((jule::real(_307417_kind->_method_slc())))) { goto _case_end_4562334720; }
		_case_begin_4562334720:;
		{
			return (*this)._method_eval_slice_sub_ident(_307341_d,_307355_si->_field_ident);
		}
		goto _match_end_4562330144;
		_case_end_4562334720:;
		if (!((jule::real(_307417_kind->_method_arr())))) { goto _case_end_4562334816; }
		_case_begin_4562334816:;
		{
			return (*this)._method_eval_array_sub_ident(_307341_d,_307355_si->_field_ident);
		}
		goto _match_end_4562330144;
		_case_end_4562334816:;
		if (!((jule::real(_307417_kind->_method_map())))) { goto _case_end_4562334912; }
		_case_begin_4562334912:;
		{
			return (*this)._method_eval_map_sub_ident(_307341_d,_307355_si->_field_ident);
		}
		goto _match_end_4562330144;
		_case_end_4562334912:;
		if (!((jule::real(_307417_kind->_method_prim())))) { goto _case_end_4562335008; }
		_case_begin_4562335008:;
		{
			jule::Ref<_1a2db8ce3_Prim> _310817_p = _307417_kind->_method_prim();
			{
				auto _match_expr{ _310817_p->_field_kind };
				if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4562345744; }
				_case_begin_4562345744:;
				{
					return (*this)._method_eval_str_sub_ident(_307341_d,_307355_si->_field_ident);
				}
				goto _match_end_4562349872;
				_case_end_4562345744:;
				_match_end_4562349872:;
			}
		}
		goto _match_end_4562330144;
		_case_end_4562335008:;
		_match_end_4562330144:;
	}
	(*this)._method_push_err(_307355_si->_field_ident,jule::Str("object @ is not supports sub fields", 35),jule::Slice<jule::Any>({jule::Any(_307341_d->_field_kind->_method_to_str())}));
	return jule::new_ref<_1a2c74a6c_Data>();
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_sub_ident(jule::Ref<_1e16025cb_SubIdentExpr> _311938_si) {
	jule::Ref<_1a2db8ce3_TypeKind> _312017_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_312017_prefix;
	});
	jule::Ref<_1a2c74a6c_Data> _312417_d = this->self->_method_eval_expr_kind(_311938_si->_field_expr);
	if ((!(jule::real(_312417_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_312417_d->_field_decl) {
		return this->self->_method_eval_type_static(_312417_d,_311938_si);
	}
	return this->self->_method_eval_obj_sub_ident(_312417_d,_311938_si);
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_tuple(jule::Ref<_1e16025cb_TupleExpr> _313634_tup) {
	jule::Ref<_1a2db8ce3_Tuple> _313717_tup_t = jule::new_struct<_1a2db8ce3_Tuple>(new( std::nothrow ) _1a2db8ce3_Tuple());
	_313717_tup_t->_field_types=jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>::alloc(static_cast<jule::I64>(_313634_tup->_field_expr.len()));
	jule::Ref<_1e2a30c17_TupleExprModel> _314017_model = jule::new_struct<_1e2a30c17_TupleExprModel>(new( std::nothrow ) _1e2a30c17_TupleExprModel(jule::Slice<jule::Ref<_1a2c74a6c_Data>>::alloc(static_cast<jule::I64>(_313634_tup->_field_expr.len()))));
	jule::Bool _314417_ok = true;
	{
		auto expr = _313634_tup->_field_expr;
		auto it = expr.begin();
		_iter_begin_4352670880:;
		if (it != expr.end()) {
			jule::Int _1a2c74a6c_i = it - expr.begin();
			jule::Ref<_1e16025cb_Expr> _1a2c74a6c_expr = *it;
			{
				jule::Ref<_1a2c74a6c_Data> _314621_d = this->self->_method_eval_expr_kind(_1a2c74a6c_expr->_field_kind);
				if ((!(jule::real(_314621_d)))) {
					_314417_ok=false;
					goto _iter_next_4352670880;
				}
				_313717_tup_t->_field_types[_1a2c74a6c_i]=_314621_d->_field_kind;
				_314017_model->_field_datas[_1a2c74a6c_i]=_314621_d;
			}
			_iter_next_4352670880:;
			++it;
			_1a2c74a6c_i++;
			goto _iter_begin_4352670880;
		}
		_iter_end_4352670880:;
	}
	if ((!(_314417_ok))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_313717_tup_t)),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_314017_model),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_map(jule::Ref<_1a2db8ce3_Map> _316532_m,jule::Ref<_1e16025cb_BraceLit> _316545_lit) {
	jule::Ref<_1e2a30c17_MapExprModel> _316617_model = jule::new_struct<_1e2a30c17_MapExprModel>(new( std::nothrow ) _1e2a30c17_MapExprModel(_316532_m->_field_key,_316532_m->_field_val,jule::Slice<jule::Ref<_1e2a30c17_KeyValPairExprModel>>()));
	{
		auto expr = _316545_lit->_field_exprs;
		auto it = expr.begin();
		_iter_begin_4352684960:;
		if (it != expr.end()) {
			jule::Any _1a2c74a6c_expr = *it;
			{
				{
					auto _match_expr{ _1a2c74a6c_expr };
					if (!(_match_expr.type_is<jule::Ref<_1e16025cb_KeyValPair>>())) { goto _case_end_4352688384; }
					goto _match_end_4352686576;
					_case_end_4352688384:;
					_case_begin_4352686128:;
					{
						this->self->_method_push_err(_316545_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						return jule::new_ref<_1a2c74a6c_Data>();
					}
					goto _match_end_4352686576;
					_case_end_4352686128:;
					_match_end_4352686576:;
				}
				jule::Ref<_1e16025cb_KeyValPair> _318121_pair = _1a2c74a6c_expr.operator jule::Ref<_1e16025cb_KeyValPair>();
				jule::Ref<_1a2c74a6c_Data> _318321_key = this->self->_method_eval_expr_kind(_318121_pair->_field_key);
				if ((!(jule::real(_318321_key)))) {
					return jule::new_ref<_1a2c74a6c_Data>();
				}
				jule::Ref<_1a2c74a6c_Data> _318821_val = this->self->_method_eval_expr_kind(_318121_pair->_field_val);
				if ((!(jule::real(_318821_val)))) {
					return jule::new_ref<_1a2c74a6c_Data>();
				}
				this->self->_field_s->_method_check_assign_type(false,_316532_m->_field_key,_318321_key,_318121_pair->_field_colon,true);
				this->self->_field_s->_method_check_assign_type(false,_316532_m->_field_val,_318821_val,_318121_pair->_field_colon,true);
				_316617_model->_field_entries=jule::append(_316617_model->_field_entries,jule::Slice<jule::Ref<_1e2a30c17_KeyValPairExprModel>>({jule::new_struct<_1e2a30c17_KeyValPairExprModel>(new( std::nothrow ) _1e2a30c17_KeyValPairExprModel(_318321_key->_field_model,_318821_val->_field_model))}));
			}
			_iter_next_4352684960:;
			++it;
			goto _iter_begin_4352684960;
		}
		_iter_end_4352684960:;
	}
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_316532_m)),jule::Ref<_1a2db8ce3_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),jule::Any(_316617_model),false,jule::Ref<_1a37ddd88_Const>()));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_brace_lit(jule::Ref<_1e16025cb_BraceLit> _321238_lit) {
	{
		if (!(((!(jule::real(this->self->_field_prefix)))))) { goto _case_end_4352705664; }
		_case_begin_4352705664:;
		{
			this->self->_method_push_err(_321238_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352702192;
		_case_end_4352705664:;
		if (!((jule::real(this->self->_field_prefix->_method_map())))) { goto _case_end_4352703136; }
		_case_begin_4352703136:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_321238_lit);
		}
		goto _match_end_4352702192;
		_case_end_4352703136:;
		if (!((jule::real(this->self->_field_prefix->_method_strct())))) { goto _case_end_4352705008; }
		_case_begin_4352705008:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_321238_lit->_field_exprs,_321238_lit->_field_token);
		}
		goto _match_end_4352702192;
		_case_end_4352705008:;
		_case_begin_4352702352:;
		{
			this->self->_method_push_err(_321238_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352702192;
		_case_end_4352702352:;
		_match_end_4352702192:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_anon_fn(jule::Ref<_1e16025cb_FnDecl> _323035_decl) {
	_1a2db8ce3_TypeChecker _323117_tc = _1a2db8ce3_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1a2db8ce3_Referencer>(),_1e15a2bb9_Token(),jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>(),jule::Bool());
	jule::Ref<_1e1737e81_FnIns> _323517_ins = _323117_tc._method_build_fn(_323035_decl);
	_323517_ins->_field_anon=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_ScopeChecker>>())) { goto _case_end_4352719552; }
		_case_begin_4352719552:;
		{
			jule::Ref<_1e2a2e210_ScopeChecker> _324021_sc = (*this)._field_lookup.operator jule::Ref<_1e2a2e210_ScopeChecker>();
			jule::Ref<_1e2a2e210_ScopeChecker> _324121_scc = _324021_sc->_method_new_child_checker();
			_324121_scc->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_1e2a2e210_ScopeLabel>>>(nullptr);
			_324121_scc->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_1e2a2e210_ScopeGoto>>>(nullptr);
			jule::drop(_324121_scc->_field_owner);
			_324121_scc->_field_child_index=0LL;
			_324121_scc->_field_it=0LL;
			_324121_scc->_field_cse=0LL;
			_324121_scc->_field_owner=_323517_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_323517_ins,_324121_scc);
		}
		goto _match_end_4352717232;
		_case_end_4352719552:;
		_case_begin_4352714352:;
		{
			(*this)._field_s->_method_check_fn_ins(_323517_ins);
		}
		goto _match_end_4352717232;
		_case_end_4352714352:;
		_match_end_4352717232:;
	}
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_323517_ins)),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_AnonFnExprModel>(new( std::nothrow ) _1e2a30c17_AnonFnExprModel(_323517_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_binop(jule::Ref<_1e16025cb_BinopExpr> _326434_op) {
	jule::Ref<_1a2db8ce3_TypeKind> _326517_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_326517_prefix;
	});
	_1a2c74a6c_BinopSolver _326917_bs = _1a2c74a6c_BinopSolver(this->self,jule::Ref<_1a2c74a6c_Data>(),jule::Ref<_1a2c74a6c_Data>(),_1e15a2bb9_Token());
	return _326917_bs._method_solve(_326434_op);
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_ternary(jule::Ref<_1e16025cb_TernaryExpr> _327536_ter) {
	jule::Ref<_1a2c74a6c_Data> _327617_d = this->self->_method_eval_expr_kind(_327536_ter->_field_condition);
	if ((!(jule::real(_327617_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1a2db8ce3_Prim> _328113_prim = _327617_d->_field_kind->_method_prim();
	if ((!(jule::real(_328113_prim))) || (!(_328113_prim->_method_is_bool()))) {
		this->self->_method_push_err(_327536_ter->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1a2c74a6c_Data> _328717_td = this->self->_method_eval_expr_kind(_327536_ter->_field_true_expr);
	if ((!(jule::real(_328717_td)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_328717_td->_field_kind->_method_void()) {
		this->self->_method_push_err(_327536_ter->_field_token,jule::Str("void type cannot used for ternary operator", 42),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1a2db8ce3_TypeKind> _329717_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_328717_td->_field_kind;
	jule::Ref<_1a2c74a6c_Data> _330017_fd = this->self->_method_eval_expr_kind(_327536_ter->_field_false_expr);
	this->self->_field_prefix=_329717_prefix;
	if ((!(jule::real(_330017_fd)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_1a2c73c9c_AssignTypeChecker _330717_ac = _1a2c73c9c_AssignTypeChecker(this->self->_field_s,jule::Ref<_1a2db8ce3_TypeKind>(),jule::Ref<_1a2c74a6c_Data>(),_327536_ter->_field_token,jule::Bool());
	if (_328717_td->_method_is_const() && (!(_330017_fd->_method_is_const()))) {
		_330717_ac._field_dest=_330017_fd->_field_kind;
		_330717_ac._field_d=_328717_td;
	} else {
		_330717_ac._field_dest=_328717_td->_field_kind;
		_330717_ac._field_d=_330017_fd;
	}
	if ((!(_330717_ac._method_check()))) {
		this->self->_method_push_suggestion(jule::Str("use same or compatible values for ternary expressions", 53),jule::Slice<jule::Any>({}));
	}
	if (_327617_d->_method_is_const()) {
		if (_327617_d->_field_constant->_method_read_bool()) {
			return _328717_td;
		}
		return _330017_fd;
	}
	jule::Ref<_1a2c74a6c_Data> _332917_r = jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data());
	_332917_r->_field_kind=_330717_ac._field_dest;
	_332917_r->_field_lvalue=_332917_r->_field_kind->_method_lvalue();
	_332917_r->_field_mutable=_332917_r->_field_kind->_method_mutable();
	_332917_r->_field_model=jule::Any(jule::new_struct<_1e2a30c17_TernaryExprModel>(new( std::nothrow ) _1e2a30c17_TernaryExprModel(_327617_d->_field_model,_328717_td->_field_model,_330017_fd->_field_model)));
	return _332917_r;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_expr_kind(jule::Any _334138_kind) {
	jule::Ref<_1a2c74a6c_Data> _334217_d = jule::new_ref<_1a2c74a6c_Data>();
	{
		auto _match_expr{ _334138_kind };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_LitExpr>>())) { goto _case_end_4352771424; }
		_case_begin_4352771424:;
		{
			_334217_d=this->self->_method_eval_lit(_334138_kind.operator jule::Ref<_1e16025cb_LitExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352771424:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_IdentExpr>>())) { goto _case_end_4352771920; }
		_case_begin_4352771920:;
		{
			_334217_d=this->self->_method_eval_ident(_334138_kind.operator jule::Ref<_1e16025cb_IdentExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352771920:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_UnaryExpr>>())) { goto _case_end_4352771536; }
		_case_begin_4352771536:;
		{
			_334217_d=this->self->_method_eval_unary(_334138_kind.operator jule::Ref<_1e16025cb_UnaryExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352771536:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_VariadicExpr>>())) { goto _case_end_4352771632; }
		_case_begin_4352771632:;
		{
			_334217_d=this->self->_method_eval_variadic(_334138_kind.operator jule::Ref<_1e16025cb_VariadicExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352771632:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_UnsafeExpr>>())) { goto _case_end_4352772336; }
		_case_begin_4352772336:;
		{
			_334217_d=this->self->_method_eval_unsafe(_334138_kind.operator jule::Ref<_1e16025cb_UnsafeExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352772336:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_SliceExpr>>())) { goto _case_end_4352772432; }
		_case_begin_4352772432:;
		{
			_334217_d=this->self->_method_eval_slice_expr(_334138_kind.operator jule::Ref<_1e16025cb_SliceExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352772432:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_IndexingExpr>>())) { goto _case_end_4352772528; }
		_case_begin_4352772528:;
		{
			_334217_d=this->self->_method_eval_indexing(_334138_kind.operator jule::Ref<_1e16025cb_IndexingExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352772528:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_SlicingExpr>>())) { goto _case_end_4352772624; }
		_case_begin_4352772624:;
		{
			_334217_d=this->self->_method_eval_slicing(_334138_kind.operator jule::Ref<_1e16025cb_SlicingExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352772624:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_CastExpr>>())) { goto _case_end_4352772720; }
		_case_begin_4352772720:;
		{
			_334217_d=this->self->_method_eval_cast(_334138_kind.operator jule::Ref<_1e16025cb_CastExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352772720:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_NsSelectionExpr>>())) { goto _case_end_4352772816; }
		_case_begin_4352772816:;
		{
			_334217_d=this->self->_method_eval_ns_selection(_334138_kind.operator jule::Ref<_1e16025cb_NsSelectionExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352772816:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_StructLit>>())) { goto _case_end_4352772912; }
		_case_begin_4352772912:;
		{
			_334217_d=this->self->_method_eval_struct_lit(_334138_kind.operator jule::Ref<_1e16025cb_StructLit>());
		}
		goto _match_end_4352770480;
		_case_end_4352772912:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TypeDecl>>())) { goto _case_end_4352773008; }
		_case_begin_4352773008:;
		{
			_334217_d=this->self->_method_eval_type(_334138_kind.operator jule::Ref<_1e16025cb_TypeDecl>());
		}
		goto _match_end_4352770480;
		_case_end_4352773008:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_FnCallExpr>>())) { goto _case_end_4352773104; }
		_case_begin_4352773104:;
		{
			_334217_d=this->self->_method_eval_fn_call(_334138_kind.operator jule::Ref<_1e16025cb_FnCallExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352773104:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_SubIdentExpr>>())) { goto _case_end_4352773200; }
		_case_begin_4352773200:;
		{
			_334217_d=this->self->_method_eval_sub_ident(_334138_kind.operator jule::Ref<_1e16025cb_SubIdentExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352773200:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TupleExpr>>())) { goto _case_end_4352773312; }
		_case_begin_4352773312:;
		{
			_334217_d=this->self->_method_eval_tuple(_334138_kind.operator jule::Ref<_1e16025cb_TupleExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352773312:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_BraceLit>>())) { goto _case_end_4352773424; }
		_case_begin_4352773424:;
		{
			_334217_d=this->self->_method_eval_brace_lit(_334138_kind.operator jule::Ref<_1e16025cb_BraceLit>());
		}
		goto _match_end_4352770480;
		_case_end_4352773424:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_FnDecl>>())) { goto _case_end_4352773536; }
		_case_begin_4352773536:;
		{
			_334217_d=this->self->_method_eval_anon_fn(_334138_kind.operator jule::Ref<_1e16025cb_FnDecl>());
		}
		goto _match_end_4352770480;
		_case_end_4352773536:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_BinopExpr>>())) { goto _case_end_4352773648; }
		_case_begin_4352773648:;
		{
			_334217_d=this->self->_method_eval_binop(_334138_kind.operator jule::Ref<_1e16025cb_BinopExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352773648:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TernaryExpr>>())) { goto _case_end_4352773760; }
		_case_begin_4352773760:;
		{
			_334217_d=this->self->_method_eval_ternary(_334138_kind.operator jule::Ref<_1e16025cb_TernaryExpr>());
		}
		goto _match_end_4352770480;
		_case_end_4352773760:;
		_case_begin_4352769632:;
		{
			jule::drop(_334217_d);
		}
		goto _match_end_4352770480;
		_case_end_4352769632:;
		_match_end_4352770480:;
	}
	if ((!(jule::real(_334217_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if ((!(jule::real(_334217_d->_field_kind)))) {
		return _334217_d;
	}
	if ((((!(jule::real(_334217_d->_field_cast_kind))) && _334217_d->_method_is_const()) && (!(_334217_d->_field_is_rune))) && jule::real(_334217_d->_field_kind->_method_prim())) {
		{
			if (!((_334217_d->_field_constant->_method_is_i64()))) { goto _case_end_4352805232; }
			_case_begin_4352805232:;
			{
				if (_1a2c73c9c_int_assignable(jule::Str("int", 3),_334217_d)) {
					_334217_d->_field_kind->_field_kind=_1a2db8ce3_build_prim_type(jule::Str("int", 3));
					_334217_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_334217_d->_field_constant->_method_as_i64()));
				}
			}
			goto _match_end_4352774704;
			_case_end_4352805232:;
			if (!((_334217_d->_field_constant->_method_is_u64()))) { goto _case_end_4352805344; }
			_case_begin_4352805344:;
			{
				if (_1a2c73c9c_int_assignable(jule::Str("uint", 4),_334217_d)) {
					_334217_d->_field_kind->_field_kind=_1a2db8ce3_build_prim_type(jule::Str("uint", 4));
					_334217_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_334217_d->_field_constant->_method_as_u64()));
				}
			}
			goto _match_end_4352774704;
			_case_end_4352805344:;
			_match_end_4352774704:;
		}
	}
	if ((!(_334217_d->_field_decl))) {
		if ((((((((!(_334217_d->_field_kind->_method_cpp_linked())) && jule::real(this->self->_field_prefix)) && (!(jule::real(_334217_d->_field_cast_kind)))) && (!(_334217_d->_field_variadiced))) && (!(_334217_d->_field_lvalue))) && (!(_334217_d->_method_is_const()))) && jule::real(_334217_d->_field_kind->_method_prim())) && _1a44da204_is_num(_334217_d->_field_kind->_method_prim()->_field_kind)) {
			_334217_d->_field_cast_kind=_334217_d->_field_kind;
		}
		_1a2c74a6c_apply_cast_kind(_334217_d);
		if ((!(jule::real(_334217_d->_field_kind->_method_prim()))) || (!(_334217_d->_field_kind->_method_prim()->_method_is_any()))) {
			if ((jule::real(this->self->_field_prefix) && jule::real(this->self->_field_prefix->_method_prim())) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_334217_d->_field_cast_kind=this->self->_field_prefix;
				_1a2c74a6c_apply_cast_kind_model(_334217_d);
				jule::drop(_334217_d->_field_cast_kind);
			}
		}
	}
	return _334217_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval(jule::Ref<_1e16025cb_Expr> _341928_expr) {
	jule::Ref<_1a2c74a6c_Data> _342017_d = this->self->_method_eval_expr_kind(_341928_expr->_field_kind);
	if ((!(jule::real(_342017_d))) || (!(jule::real(_342017_d->_field_kind)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		if (!((jule::real(_342017_d->_field_kind->_method_fnc())))) { goto _case_end_4352830176; }
		_case_begin_4352830176:;
		{
			jule::Ref<_1e1737e81_FnIns> _342721_f = _342017_d->_field_kind->_method_fnc();
			if (_342721_f->_method_is_builtin()) {
				goto _match_end_4352830784;
			}
			if (_342721_f->_field_generics.len() != _342721_f->_field_decl->_field_generics.len()) {
				this->self->_field_s->_method_push_err(_341928_expr->_field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			}
			if (_342721_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_341928_expr->_field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4352830784;
		_case_end_4352830176:;
		_match_end_4352830784:;
	}
	return _342017_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_Eval::_method_eval_expr(jule::Ref<_1e16025cb_Expr> _344733_expr) {
	jule::Ref<_1a2c74a6c_Data> _344817_d = this->self->_method_eval(_344733_expr);
	{
		if (!(((!(jule::real(_344817_d)))))) { goto _case_end_4352843072; }
		_case_begin_4352843072:;
		{
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352841616;
		_case_end_4352843072:;
		if (!((_344817_d->_field_decl))) { goto _case_end_4352843168; }
		_case_begin_4352843168:;
		{
			this->self->_method_push_err(_344733_expr->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352841616;
		_case_end_4352843168:;
		_case_begin_4352841728:;
		{
			return _344817_d;
		}
		goto _match_end_4352841616;
		_case_end_4352841728:;
		_match_end_4352841616:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2c74a6c_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



jule::Str _1a2db8ce3_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _6517_kind = jule::Str();
	if ((*this)._field_variadic) {
		_6517_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_cpp_linked()) {
		_6517_kind+=jule::Str("cpp.", 4) + (*this)._field_cpp_ident;
	} else {
		_6517_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _6517_kind;
}



jule::Bool _1a2db8ce3_TypeKind::_method_equals(jule::Ref<_1a2db8ce3_TypeKind> _8021_other) {
	if ((*this)._method_is_nil()) {
		return _8021_other->_method_is_nil();
	}
	if ((*this)._method_cpp_linked()) {
		if ((!(_8021_other->_method_cpp_linked()))) {
			return false;
		}
		return (*this)._field_cpp_ident == _8021_other->_field_cpp_ident;
	}
	return (*this)._field_kind.get()._method_equals(_8021_other);
}



jule::Ref<_1a2db8ce3_TypeKind> _1a2db8ce3_TypeKind::_method_clone(void) {
	if ((!(jule::real(this->self)))) {
		return jule::new_ref<_1a2db8ce3_TypeKind>();
	}
	jule::Ref<_1a2db8ce3_TypeKind> _10317_kind = jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(this->self->_field_cpp_ident,jule::Bool(),jule::Bool(),this->self->_field_kind));
	return _10317_kind;
}



jule::Bool _1a2db8ce3_TypeKind::_method_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



jule::Bool _1a2db8ce3_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



jule::Bool _1a2db8ce3_TypeKind::_method_void(void) {
	jule::Ref<_1a2db8ce3_Prim> _11813_prim = (*((&((*this)))))._method_prim();
	return jule::real(_11813_prim) && (_11813_prim->_method_to_str() == jule::Str("void", 4));
}



jule::Bool _1a2db8ce3_TypeKind::_method_lvalue(void) {
	{
		_1a2db8ce3_TypeKind* _12521__self = (&((*this)));
		return ((jule::real(_12521__self->_method_ref()) || jule::real(_12521__self->_method_ptr())) || jule::real(_12521__self->_method_slc())) || jule::real(_12521__self->_method_map());
	}
}



jule::Bool _1a2db8ce3_TypeKind::_method_mutable(void) {
	{
		_1a2db8ce3_TypeKind* _13721__self = (&((*this)));
		if (jule::real(_13721__self->_method_strct())) {
			return _13721__self->_method_strct()->_field_mutable;
		}
		if (jule::real(_13721__self->_method_trt())) {
			return _13721__self->_method_trt()->_field_mutable;
		}
		if (jule::real(_13721__self->_method_prim())) {
			jule::Ref<_1a2db8ce3_Prim> _14621_p = _13721__self->_method_prim();
			return _14621_p->_method_is_any();
		}
		if (jule::real(_13721__self->_method_arr())) {
			return _13721__self->_method_arr()->_field_elem->_method_mutable();
		}
		return (jule::real(_13721__self->_method_slc()) || jule::real(_13721__self->_method_ptr())) || jule::real(_13721__self->_method_ref());
	}
}



jule::Bool _1a2db8ce3_TypeKind::_method_nil_compatible(void) {
	{
		_1a2db8ce3_TypeKind* _16121__self = (&((*this)));
		jule::Ref<_1a2db8ce3_Prim> _16317_prim = _16121__self->_method_prim();
		if (jule::real(_16317_prim) && _16317_prim->_method_is_any()) {
			return true;
		}
		return ((((_16121__self->_method_is_nil() || jule::real(_16121__self->_method_fnc())) || jule::real(_16121__self->_method_ptr())) || jule::real(_16121__self->_method_trt())) || jule::real(_16121__self->_method_slc())) || jule::real(_16121__self->_method_map());
	}
}



jule::Bool _1a2db8ce3_TypeKind::_method_supports_cloning(void) {
	{
		_1a2db8ce3_TypeKind* _18021__self = (&((*this)));
		{
			if (!((jule::real(_18021__self->_method_prim())))) { goto _case_end_4984373728; }
			_case_begin_4984373728:;
			{
				return (!(_18021__self->_method_prim()->_method_is_any()));
			}
			goto _match_end_4984371888;
			_case_end_4984373728:;
			if (!((jule::real(_18021__self->_method_enm())))) { goto _case_end_4984373824; }
			_case_begin_4984373824:;
			{
				return true;
			}
			goto _match_end_4984371888;
			_case_end_4984373824:;
			if (!((jule::real(_18021__self->_method_fnc())))) { goto _case_end_4984372288; }
			_case_begin_4984372288:;
			{
				return true;
			}
			goto _match_end_4984371888;
			_case_end_4984372288:;
			if (!((jule::real(_18021__self->_method_ptr())))) { goto _case_end_4984372384; }
			_case_begin_4984372384:;
			{
				return true;
			}
			goto _match_end_4984371888;
			_case_end_4984372384:;
			if (!((jule::real(_18021__self->_method_slc())))) { goto _case_end_4984372496; }
			_case_begin_4984372496:;
			{
				return _18021__self->_method_slc()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4984371888;
			_case_end_4984372496:;
			if (!((jule::real(_18021__self->_method_map())))) { goto _case_end_4984372608; }
			_case_begin_4984372608:;
			{
				jule::Ref<_1a2db8ce3_Map> _19421_m = _18021__self->_method_map();
				return _19421_m->_field_key->_method_supports_cloning() && _19421_m->_field_val->_method_supports_cloning();
			}
			goto _match_end_4984371888;
			_case_end_4984372608:;
			if (!((jule::real(_18021__self->_method_arr())))) { goto _case_end_4984372992; }
			_case_begin_4984372992:;
			{
				return _18021__self->_method_arr()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4984371888;
			_case_end_4984372992:;
			if (!((jule::real(_18021__self->_method_ref())))) { goto _case_end_4984373104; }
			_case_begin_4984373104:;
			{
				return _18021__self->_method_ref()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4984371888;
			_case_end_4984373104:;
			if (!((jule::real(_18021__self->_method_strct())))) { goto _case_end_4984373216; }
			_case_begin_4984373216:;
			{
				jule::Ref<_1e177440c_StructIns> _20425_s = _18021__self->_method_strct();
				if ((!(_20425_s->_field_mutable))) {
					return true;
				}
				if (((!(jule::real(_20425_s->_field_decl))) || _20425_s->_field_decl->_field_cpp_linked) || (!(_20425_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					return false;
				}
				return true;
			}
			goto _match_end_4984371888;
			_case_end_4984373216:;
			_case_begin_4984372000:;
			{
				return false;
			}
			goto _match_end_4984371888;
			_case_end_4984372000:;
			_match_end_4984371888:;
		}
	}
}



jule::Bool _1a2db8ce3_TypeKind::_method_variadicable(void) {
	{
		_1a2db8ce3_TypeKind* _22221__self = (&((*this)));
		return jule::real(_22221__self->_method_slc());
	}
}



jule::Ref<_1a2db8ce3_Prim> _1a2db8ce3_TypeKind::_method_prim(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_Prim>>())) { goto _case_end_4984394400; }
		_case_begin_4984394400:;
		{
			return (*this)._field_kind.operator jule::Ref<_1a2db8ce3_Prim>();
		}
		goto _match_end_4984385136;
		_case_end_4984394400:;
		_case_begin_4984392272:;
		{
			return jule::new_ref<_1a2db8ce3_Prim>();
		}
		goto _match_end_4984385136;
		_case_end_4984392272:;
		_match_end_4984385136:;
	}
}



jule::Ref<_1a2db8ce3_Ref> _1a2db8ce3_TypeKind::_method_ref(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_Ref>>())) { goto _case_end_4984397456; }
		_case_begin_4984397456:;
		{
			return (*this)._field_kind.operator jule::Ref<_1a2db8ce3_Ref>();
		}
		goto _match_end_4984393616;
		_case_end_4984397456:;
		_case_begin_4984370896:;
		{
			return jule::new_ref<_1a2db8ce3_Ref>();
		}
		goto _match_end_4984393616;
		_case_end_4984370896:;
		_match_end_4984393616:;
	}
}



jule::Ref<_1a2db8ce3_Ptr> _1a2db8ce3_TypeKind::_method_ptr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_Ptr>>())) { goto _case_end_4984400512; }
		_case_begin_4984400512:;
		{
			return (*this)._field_kind.operator jule::Ref<_1a2db8ce3_Ptr>();
		}
		goto _match_end_4984396672;
		_case_end_4984400512:;
		_case_begin_4984397680:;
		{
			return jule::new_ref<_1a2db8ce3_Ptr>();
		}
		goto _match_end_4984396672;
		_case_end_4984397680:;
		_match_end_4984396672:;
	}
}



jule::Ref<_1e2a21d4b_Enum> _1a2db8ce3_TypeKind::_method_enm(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1e2a21d4b_Enum>>())) { goto _case_end_4984403568; }
		_case_begin_4984403568:;
		{
			return (*this)._field_kind.operator jule::Ref<_1e2a21d4b_Enum>();
		}
		goto _match_end_4984399728;
		_case_end_4984403568:;
		_case_begin_4984400736:;
		{
			return jule::new_ref<_1e2a21d4b_Enum>();
		}
		goto _match_end_4984399728;
		_case_end_4984400736:;
		_match_end_4984399728:;
	}
}



jule::Ref<_1a2db8ce3_Arr> _1a2db8ce3_TypeKind::_method_arr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_Arr>>())) { goto _case_end_4984406784; }
		_case_begin_4984406784:;
		{
			return (*this)._field_kind.operator jule::Ref<_1a2db8ce3_Arr>();
		}
		goto _match_end_4984402784;
		_case_end_4984406784:;
		_case_begin_4984405200:;
		{
			return jule::new_ref<_1a2db8ce3_Arr>();
		}
		goto _match_end_4984402784;
		_case_end_4984405200:;
		_match_end_4984402784:;
	}
}



jule::Ref<_1a2db8ce3_Slc> _1a2db8ce3_TypeKind::_method_slc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_Slc>>())) { goto _case_end_4984409840; }
		_case_begin_4984409840:;
		{
			return (*this)._field_kind.operator jule::Ref<_1a2db8ce3_Slc>();
		}
		goto _match_end_4984406000;
		_case_end_4984409840:;
		_case_begin_4984407008:;
		{
			return jule::new_ref<_1a2db8ce3_Slc>();
		}
		goto _match_end_4984406000;
		_case_end_4984407008:;
		_match_end_4984406000:;
	}
}



jule::Ref<_1e1737e81_FnIns> _1a2db8ce3_TypeKind::_method_fnc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4984413248; }
		_case_begin_4984413248:;
		{
			return (*this)._field_kind.operator jule::Ref<_1e1737e81_FnIns>();
		}
		goto _match_end_4984409056;
		_case_end_4984413248:;
		_case_begin_4984410016:;
		{
			return jule::new_ref<_1e1737e81_FnIns>();
		}
		goto _match_end_4984409056;
		_case_end_4984410016:;
		_match_end_4984409056:;
	}
}



jule::Ref<_1e177440c_StructIns> _1a2db8ce3_TypeKind::_method_strct(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_StructIns>>())) { goto _case_end_4984416304; }
		_case_begin_4984416304:;
		{
			return (*this)._field_kind.operator jule::Ref<_1e177440c_StructIns>();
		}
		goto _match_end_4984412464;
		_case_end_4984416304:;
		_case_begin_4984413472:;
		{
			return jule::new_ref<_1e177440c_StructIns>();
		}
		goto _match_end_4984412464;
		_case_end_4984413472:;
		_match_end_4984412464:;
	}
}



jule::Ref<_1e2a1e563_Trait> _1a2db8ce3_TypeKind::_method_trt(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1e2a1e563_Trait>>())) { goto _case_end_4984419520; }
		_case_begin_4984419520:;
		{
			return (*this)._field_kind.operator jule::Ref<_1e2a1e563_Trait>();
		}
		goto _match_end_4984415520;
		_case_end_4984419520:;
		_case_begin_4984417936:;
		{
			return jule::new_ref<_1e2a1e563_Trait>();
		}
		goto _match_end_4984415520;
		_case_end_4984417936:;
		_match_end_4984415520:;
	}
}



jule::Ref<_1a2db8ce3_Map> _1a2db8ce3_TypeKind::_method_map(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_Map>>())) { goto _case_end_4984422576; }
		_case_begin_4984422576:;
		{
			return (*this)._field_kind.operator jule::Ref<_1a2db8ce3_Map>();
		}
		goto _match_end_4984418736;
		_case_end_4984422576:;
		_case_begin_4984419744:;
		{
			return jule::new_ref<_1a2db8ce3_Map>();
		}
		goto _match_end_4984418736;
		_case_end_4984419744:;
		_match_end_4984418736:;
	}
}



jule::Ref<_1a2db8ce3_Tuple> _1a2db8ce3_TypeKind::_method_tup(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_Tuple>>())) { goto _case_end_4984425696; }
		_case_begin_4984425696:;
		{
			return (*this)._field_kind.operator jule::Ref<_1a2db8ce3_Tuple>();
		}
		goto _match_end_4984421792;
		_case_end_4984425696:;
		_case_begin_4984424112:;
		{
			return jule::new_ref<_1a2db8ce3_Tuple>();
		}
		goto _match_end_4984421792;
		_case_end_4984424112:;
		_match_end_4984421792:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2db8ce3_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1a2db8ce3_TypeSymbol::_method_checked(void) {
	return jule::real((*this)._field_kind);
}



void _1a2db8ce3_TypeSymbol::_method_remove_kind(void) {
	jule::drop((*this)._field_kind);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2db8ce3_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



jule::Str _1a2db8ce3_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



jule::Bool _1a2db8ce3_Prim::_method_equals(jule::Ref<_1a2db8ce3_TypeKind> _34121_other) {
	jule::Ref<_1a2db8ce3_Prim> _34213_prim = (_34121_other).alloc->_method_prim();
	if ((!(jule::real(_34213_prim)))) {
		return false;
	}
	return _1a4422ea5_real_kind_of((*this)._field_kind) == _1a4422ea5_real_kind_of(_34213_prim->_field_kind);
}



jule::Bool _1a2db8ce3_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



jule::Bool _1a2db8ce3_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



jule::Bool _1a2db8ce3_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



jule::Bool _1a2db8ce3_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



jule::Bool _1a2db8ce3_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



jule::Bool _1a2db8ce3_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



jule::Bool _1a2db8ce3_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



jule::Bool _1a2db8ce3_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



jule::Bool _1a2db8ce3_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



jule::Bool _1a2db8ce3_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



jule::Bool _1a2db8ce3_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



jule::Bool _1a2db8ce3_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



jule::Bool _1a2db8ce3_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



jule::Bool _1a2db8ce3_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



jule::Bool _1a2db8ce3_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



jule::Bool _1a2db8ce3_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2db8ce3_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



jule::Str _1a2db8ce3_Ref::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



jule::Bool _1a2db8ce3_Ref::_method_equals(jule::Ref<_1a2db8ce3_TypeKind> _41021_other) {
	jule::Ref<_1a2db8ce3_Ref> _41113_ref = (_41021_other).alloc->_method_ref();
	if ((!(jule::real(_41113_ref)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_41113_ref->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2db8ce3_Ref &_Src) {
	_Stream << "Ref{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



jule::Str _1a2db8ce3_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



jule::Bool _1a2db8ce3_Slc::_method_equals(jule::Ref<_1a2db8ce3_TypeKind> _42921_other) {
	jule::Ref<_1a2db8ce3_Slc> _43013_slc = (_42921_other).alloc->_method_slc();
	if ((!(jule::real(_43013_slc)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_43013_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2db8ce3_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



jule::Str _1a2db8ce3_Tuple::_method_to_str(void) {
	jule::Str _44617_s = jule::Str("(", 1);
	_44617_s+=(*this)._field_types[0LL]->_method_to_str();
	{
		auto expr = (*this)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4984475632:;
		if (it != expr.end()) {
			jule::Ref<_1a2db8ce3_TypeKind> _1a2db8ce3_t = *it;
			{
				_44617_s+=jule::Str(",", 1);
				_44617_s+=_1a2db8ce3_t->_method_to_str();
			}
			_iter_next_4984475632:;
			++it;
			goto _iter_begin_4984475632;
		}
		_iter_end_4984475632:;
	}
	_44617_s+=jule::Str(")", 1);
	return _44617_s;
}



jule::Bool _1a2db8ce3_Tuple::_method_equals(jule::Ref<_1a2db8ce3_TypeKind> _45721_other) {
	jule::Ref<_1a2db8ce3_Tuple> _45813_tup = (_45721_other).alloc->_method_tup();
	if ((!(jule::real(_45813_tup)))) {
		return false;
	}
	if ((*this)._field_types.len() != _45813_tup->_field_types.len()) {
		return false;
	}
	jule::Int _46717_i = 0LL;
	for (; _46717_i < (*this)._field_types.len(); (_46717_i)++) {
		{
			if ((!((*this)._field_types[_46717_i]->_method_equals(_45813_tup->_field_types[_46717_i])))) {
				return false;
			}
		}
	_iter_next_4984483424:;
	}
	_iter_end_4984483424:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2db8ce3_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



jule::Str _1a2db8ce3_Map::_method_to_str(void) {
	jule::Str _48717_s = jule::Str("[", 1);
	_48717_s+=(*this)._field_key->_method_to_str();
	_48717_s+=jule::Str(":", 1);
	_48717_s+=(*this)._field_val->_method_to_str();
	_48717_s+=jule::Str("]", 1);
	return _48717_s;
}



jule::Bool _1a2db8ce3_Map::_method_equals(jule::Ref<_1a2db8ce3_TypeKind> _49621_other) {
	jule::Ref<_1a2db8ce3_Map> _49713_map = (_49621_other).alloc->_method_map();
	if ((!(jule::real(_49713_map)))) {
		return false;
	}
	return (*this)._field_key->_method_equals(_49713_map->_field_key) && (*this)._field_val->_method_equals(_49713_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2db8ce3_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



jule::Str _1a2db8ce3_Arr::_method_to_str(void) {
	jule::Str _51517_s = jule::Str("[", 1);
	_51517_s+=_1e103784c_itoa((*this)._field_n);
	_51517_s+=jule::Str("]", 1);
	_51517_s+=(*this)._field_elem->_method_to_str();
	return _51517_s;
}



jule::Bool _1a2db8ce3_Arr::_method_equals(jule::Ref<_1a2db8ce3_TypeKind> _52321_other) {
	jule::Ref<_1a2db8ce3_Arr> _52413_arr = (_52321_other).alloc->_method_arr();
	if ((!(jule::real(_52413_arr)))) {
		return false;
	}
	return ((*this)._field_n == _52413_arr->_field_n) && (*this)._field_elem->_method_equals(_52413_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2db8ce3_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



jule::Str _1a2db8ce3_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



jule::Bool _1a2db8ce3_Ptr::_method_equals(jule::Ref<_1a2db8ce3_TypeKind> _54721_other) {
	jule::Ref<_1a2db8ce3_Ptr> _54813_ptr = (_54721_other).alloc->_method_ptr();
	if ((!(jule::real(_54813_ptr)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_54813_ptr->_field_elem);
}



jule::Bool _1a2db8ce3_Ptr::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2db8ce3_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2db8ce3_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1e2a7b966_ImportInfo> _1e12e1430_PlainImporter::_method_get_import(jule::Str _10033_path) {
	{
		auto expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_4353825648:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e12e1430_p = *it;
			{
				if (_1e12e1430_p->_field_path == _10033_path) {
					return _1e12e1430_p;
				}
			}
			_iter_next_4353825648:;
			++it;
			goto _iter_begin_4353825648;
		}
		_iter_end_4353825648:;
	}
	return jule::new_ref<_1e2a7b966_ImportInfo>();
}



std::tuple<jule::Slice<jule::Ref<_1e15a53c5_Ast>>,jule::Slice<_1ec8e8025_Log>> _1e12e1430_PlainImporter::_method_import_package(jule::Str _11037_path) {
	jule::Slice<jule::Ref<_1e15268c9_DirEntry>> _11114_dirents;
	jule::Str _11123_err_msg;
	std::tie(_11114_dirents,_11123_err_msg) = _1e12e1430_read_package_dirents(_11037_path);
	if (_11123_err_msg != jule::Str()) {
		jule::Slice<_1ec8e8025_Log> _11321_errors = jule::Slice<_1ec8e8025_Log>({_1e12e1430_flat_compiler_err(_11123_err_msg)});
		return std::make_tuple(nullptr,_11321_errors);
	}
	jule::Slice<jule::Ref<_1e15a53c5_Ast>> _11717_asts = jule::Slice<jule::Ref<_1e15a53c5_Ast>>::alloc(0LL,static_cast<jule::I64>(_11114_dirents.len()));
	{
		auto expr = _11114_dirents;
		auto it = expr.begin();
		_iter_begin_4353834400:;
		if (it != expr.end()) {
			jule::Ref<_1e15268c9_DirEntry> _1e12e1430_dirent = *it;
			{
				jule::Str _11917__path = _1ec9a2585_join(jule::Slice<jule::Str>({_11037_path,_1e12e1430_dirent->_field_name}));
				jule::Ref<_1e17bebd8_File> _12021_file = _1e17bebd8_new_file_set(_11917__path);
				_12021_file->_method_fill(_1e12e1430_read_buff(_12021_file->_method_path()));
				jule::Slice<_1ec8e8025_Log> _12221_errors = _1e17c9de1_lex(_12021_file);
				if (_12221_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12221_errors);
				}
				jule::Ref<_1e1630153_FileInfo> _12721_finfo = _1e1630153_parse_file(_12021_file);
				if (_12721_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12721_finfo->_field_errors);
				}
				if ((!(_1e1184c1e_is_pass_file_annotation(_1e12e1430_dirent->_field_name)))) {
					goto _iter_next_4353834400;
				}
				if ((!(_1e12e1430_is_pass_build_directives(_12721_finfo->_field_ast)))) {
					goto _iter_next_4353834400;
				}
				_11717_asts=jule::append(_11717_asts,jule::Slice<jule::Ref<_1e15a53c5_Ast>>({_12721_finfo->_field_ast}));
			}
			_iter_next_4353834400:;
			++it;
			goto _iter_begin_4353834400;
		}
		_iter_end_4353834400:;
	}
	return std::make_tuple(_11717_asts,nullptr);
}



void _1e12e1430_PlainImporter::_method_imported(jule::Ref<_1e2a7b966_ImportInfo> _14835_imp) {
	{
		auto expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_4353853440:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e12e1430_p = *it;
			{
				if ((_1e12e1430_p->_field_cpp_linked == _14835_imp->_field_cpp_linked) && (_1e12e1430_p->_field_link_path == _14835_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_4353853440:;
			++it;
			goto _iter_begin_4353853440;
		}
		_iter_end_4353853440:;
	}
	(*this)._field_all_packages=jule::append((*this)._field_all_packages,jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>>({_14835_imp}));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e12e1430_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1183e1b_OrderedDefines &_Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e1183e1b_DefineOrderer::_static_method_is_common_ordered_0(jule::Slice<jule::Ref<_1ba80e105_Var>>& _1837_s,jule::Ref<_1ba80e105_Var> _1846_t) {
	jule::Int _1917_j = 0LL;
	{
		auto expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_4353964848:;
		if (it != expr.end()) {
			jule::Ref<_1ba80e105_Var> _1e1183e1b_tt = *it;
			{
				if ((_1e1183e1b_tt).alloc == (_1846_t).alloc) {
					goto _iter_end_4353964848;
				}
				if ((_1e1183e1b_tt).alloc == (_1846_t->_field_depends[_1917_j]).alloc) {
					(_1917_j)++;
					if (_1917_j >= _1846_t->_field_depends.len()) {
						return true;
					}
				}
			}
			_iter_next_4353964848:;
			++it;
			goto _iter_begin_4353964848;
		}
		_iter_end_4353964848:;
	}
	return false;
}

jule::Bool _1e1183e1b_DefineOrderer::_static_method_is_common_ordered_1(jule::Slice<jule::Ref<_1e177440c_Struct>>& _1837_s,jule::Ref<_1e177440c_Struct> _1846_t) {
	jule::Int _1917_j = 0LL;
	{
		auto expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_4353989344:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1e1183e1b_tt = *it;
			{
				if ((_1e1183e1b_tt).alloc == (_1846_t).alloc) {
					goto _iter_end_4353989344;
				}
				if ((_1e1183e1b_tt).alloc == (_1846_t->_field_depends[_1917_j]).alloc) {
					(_1917_j)++;
					if (_1917_j >= _1846_t->_field_depends.len()) {
						return true;
					}
				}
			}
			_iter_next_4353989344:;
			++it;
			goto _iter_begin_4353989344;
		}
		_iter_end_4353989344:;
	}
	return false;
}



void _1e1183e1b_DefineOrderer::_static_method_order_common_0(jule::Slice<jule::Ref<_1ba80e105_Var>>& _3640_s) {
	jule::Int _3717_i = 0LL;
	{
		auto expr = _3640_s;
		auto it = expr.begin();
		_iter_begin_4353947632:;
		if (it != expr.end()) {
			jule::Int _1e1183e1b_j = it - expr.begin();
			jule::Ref<_1ba80e105_Var> _1e1183e1b_t = *it;
			{
				if (_1e1183e1b_t->_field_depends.len() == 0LL) {
					std::tie(_3640_s[_3717_i],_3640_s[_1e1183e1b_j]) = std::make_tuple(_1e1183e1b_t,_3640_s[_3717_i]);
					(_3717_i)++;
				}
			}
			_iter_next_4353947632:;
			++it;
			_1e1183e1b_j++;
			goto _iter_begin_4353947632;
		}
		_iter_end_4353947632:;
	}
	jule::Int _4517_j = _3717_i;
	for (; _4517_j < _3640_s.len(); (_4517_j)++) {
		{
			jule::Int _4721_k = _3717_i;
			for (; _4721_k < (_3640_s.len() - 1LL); (_4721_k)++) {
				{
					if ((!(_1e1183e1b_DefineOrderer::_static_method_is_common_ordered_0(_3640_s,_3640_s[_4721_k])))) {
						std::tie(_3640_s[_4721_k],_3640_s[_4721_k + 1LL]) = std::make_tuple(_3640_s[_4721_k + 1LL],_3640_s[_4721_k]);
					}
				}
			_iter_next_4353949312:;
			}
			_iter_end_4353949312:;
		}
	_iter_next_4353947440:;
	}
	_iter_end_4353947440:;
}

void _1e1183e1b_DefineOrderer::_static_method_order_common_1(jule::Slice<jule::Ref<_1e177440c_Struct>>& _3640_s) {
	jule::Int _3717_i = 0LL;
	{
		auto expr = _3640_s;
		auto it = expr.begin();
		_iter_begin_4353972192:;
		if (it != expr.end()) {
			jule::Int _1e1183e1b_j = it - expr.begin();
			jule::Ref<_1e177440c_Struct> _1e1183e1b_t = *it;
			{
				if (_1e1183e1b_t->_field_depends.len() == 0LL) {
					std::tie(_3640_s[_3717_i],_3640_s[_1e1183e1b_j]) = std::make_tuple(_1e1183e1b_t,_3640_s[_3717_i]);
					(_3717_i)++;
				}
			}
			_iter_next_4353972192:;
			++it;
			_1e1183e1b_j++;
			goto _iter_begin_4353972192;
		}
		_iter_end_4353972192:;
	}
	jule::Int _4517_j = _3717_i;
	for (; _4517_j < _3640_s.len(); (_4517_j)++) {
		{
			jule::Int _4721_k = _3717_i;
			for (; _4721_k < (_3640_s.len() - 1LL); (_4721_k)++) {
				{
					if ((!(_1e1183e1b_DefineOrderer::_static_method_is_common_ordered_1(_3640_s,_3640_s[_4721_k])))) {
						std::tie(_3640_s[_4721_k],_3640_s[_4721_k + 1LL]) = std::make_tuple(_3640_s[_4721_k + 1LL],_3640_s[_4721_k]);
					}
				}
			_iter_next_4353973872:;
			}
			_iter_end_4353973872:;
		}
	_iter_next_4353972000:;
	}
	_iter_end_4353972000:;
}



void _1e1183e1b_DefineOrderer::_static_method_order_variables(jule::Slice<jule::Ref<_1ba80e105_Var>>& _5840_vars) {
	_1e1183e1b_DefineOrderer::_static_method_order_common_0(_5840_vars);
}



void _1e1183e1b_DefineOrderer::_static_method_order_structures(jule::Slice<jule::Ref<_1e177440c_Struct>>& _6441_structs) {
	_1e1183e1b_DefineOrderer::_static_method_order_common_1(_6441_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1183e1b_DefineOrderer &_Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



void _1e1037b7c_ScopeDeadCode::_method_optimize_child(jule::Ref<_1e2a2e210_Scope>& _2239_s) {
	jule::Ref<_1e1037b7c_ScopeDeadCode> _2317_sdc = jule::new_struct_ref<_1e1037b7c_ScopeDeadCode>(new( std::nothrow ) _1e1037b7c_ScopeDeadCode(this->self,_2239_s,(&(_2239_s->_field_stmts)),jule::Int()));
	{
		_2317_sdc->_method_optimize_stmts();
	}
}



void _1e1037b7c_ScopeDeadCode::_method_eliminate_followed(void) {
	(*((*this)._field_stmts))=(*((*this)._field_stmts)).slice(0LL,(*this)._field_i + 1LL);
	jule::Ref<_1e1037b7c_ScopeDeadCode> _3317_parent = (*this)._field_parent;
	while (jule::real(_3317_parent)) {
		{
			(*(_3317_parent->_field_stmts))=(*(_3317_parent->_field_stmts)).slice(0LL,_3317_parent->_field_i + 1LL);
			_3317_parent=_3317_parent->_field_parent;
		}
	_iter_next_4354225328:;
	}
	_iter_end_4354225328:;
}



void _1e1037b7c_ScopeDeadCode::_method_optimize_stmt(jule::Any _4044_st) {
	{
		auto _match_expr{ _4044_st };
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Scope>>())) { goto _case_end_4354230736; }
		_case_begin_4354230736:;
		{
			jule::Ref<_1e2a2e210_Scope> _4321_scope = _4044_st.operator jule::Ref<_1e2a2e210_Scope>();
			if (_4321_scope->_field_deferred) {
				_1e1037b7c_eliminate_dead_code_of_scope(_4321_scope);
			} else {
				this->self->_method_optimize_child(_4321_scope);
			}
		}
		goto _match_end_4354230976;
		_case_end_4354230736:;
		if (!(_match_expr.type_is<jule::Ref<_1a2c74a6c_Data>>())) { goto _case_end_4354231056; }
		_case_begin_4354231056:;
		{
			{
				auto _match_expr{ _4044_st.operator jule::Ref<_1a2c74a6c_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinPanicCallExprModel>>())) { goto _case_end_4354234656; }
				_case_begin_4354234656:;
				{
					this->self->_method_eliminate_followed();
				}
				goto _match_end_4354236832;
				_case_end_4354234656:;
				_match_end_4354236832:;
			}
		}
		goto _match_end_4354230976;
		_case_end_4354231056:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_RetSt>>())) { goto _case_end_4354231168; }
		_case_begin_4354231168:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_4354230976;
		_case_end_4354231168:;
		_match_end_4354230976:;
	}
}



void _1e1037b7c_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_stmts->len(); (this->self->_field_i)++) {
		{
			this->self->_method_optimize_stmt((*(this->self->_field_stmts))[this->self->_field_i]);
		}
	_iter_next_4354232080:;
	}
	_iter_end_4354232080:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1037b7c_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



jule::U64 _1a48b1542_AbsTime::_method_unix(void) {
	jule::Bool _5417_leap = false;
	jule::Uint _5517_y = (*this)._field_year - 1900LL;
	jule::Uint _5617_m = (*this)._field_month - 1LL;
	if ((_5617_m >= 12LL) || (_5617_m < 0LL)) {
		jule::Uint _5821_adj = jule::div(_5617_m,12LL);
		_5617_m = jule::mod(_5617_m,12LL);
		if (_5617_m < 0LL) {
			(_5821_adj)--;
			_5617_m+=12LL;
		}
		_5517_y+=_5821_adj;
	}
	jule::U64 _6617_t = _1a48b1542_unix_year_to_seconds(_5517_y,_5417_leap);
	_6617_t+=static_cast<jule::U64>(_1a48b1542_unix_month_to_seconds(_5617_m,_5417_leap));
	_6617_t+=static_cast<jule::Uint>(86400LL * ((*this)._field_day - 1LL));
	_6617_t+=static_cast<jule::Uint>(3600LL * (*this)._field_hour);
	_6617_t+=static_cast<jule::Uint>(60LL * (*this)._field_minute);
	_6617_t+=(*this)._field_second;
	return _6617_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a48b1542_AbsTime &_Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



_1a48b1542_Time _1a48b1542_Time::_static_method_unix(jule::U64 _8924_sec) {
	return _1a48b1542_Time(_8924_sec);
}



_1a48b1542_Time _1a48b1542_Time::_static_method_now(void) {
	return _1a48b1542_Time::_static_method_unix(static_cast<jule::U64>(_1a48b1542_unix()));
}



jule::U64 _1a48b1542_Time::_method_unix(void) {
	return (*this)._field_sec;
}



jule::Uint _1a48b1542_Time::_method_day(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_day);
}



jule::Uint _1a48b1542_Time::_method_month(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_month);
}



jule::Uint _1a48b1542_Time::_method_year(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_year);
}



jule::Uint _1a48b1542_Time::_method_second(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_second);
}



jule::Uint _1a48b1542_Time::_method_minute(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_minute);
}



jule::Uint _1a48b1542_Time::_method_hour(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_hour);
}



_1a48b1542_AbsTime _1a48b1542_Time::_method_abs(void) {
	jule::U64 _12513_secs = (*this)._field_sec - 951868800LL;
	jule::U64 _12617_days = jule::div(_12513_secs,86400LL);
	jule::U64 _12717_rem_secs = jule::mod(_12513_secs,86400LL);
	if (_12717_rem_secs < 0LL) {
		_12717_rem_secs+=86400LL;
		(_12617_days)--;
	}
	jule::U64 _13317_qc_cycles = jule::div(_12617_days,146097LL);
	jule::U64 _13417_rem_days = jule::mod(_12617_days,146097LL);
	if (_13417_rem_days < 0LL) {
		_13417_rem_days+=146097LL;
		(_13317_qc_cycles)--;
	}
	jule::U64 _14017_c_cycles = jule::div(_13417_rem_days,36524LL);
	if (_14017_c_cycles == 4LL) {
		(_14017_c_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14017_c_cycles * 36524LL);
	jule::U64 _14617_q_cycles = jule::div(_13417_rem_days,1461LL);
	if (_14617_q_cycles == 25LL) {
		(_14617_q_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14617_q_cycles * 1461LL);
	jule::U64 _15217_rem_years = jule::div(_13417_rem_days,365LL);
	if (_15217_rem_years == 4LL) {
		(_15217_rem_years)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_15217_rem_years * 365LL);
	jule::Int _15813_leap = ((((_15217_rem_years == 0LL) && ((_14617_q_cycles > 0LL) || (_14017_c_cycles == 0LL)))) ? (1LL) : (0LL));
	jule::U64 _15917_y_day = ((_13417_rem_days + 31LL) + 28LL) + _15813_leap;
	if (_15917_y_day >= (365LL + _15813_leap)) {
		_15917_y_day-=static_cast<jule::Int>(365LL + _15813_leap);
	}
	jule::Int _16417_months = 0LL;
	for (; _1a48b1542_MDAYS[_16417_months] <= _13417_rem_days; (_16417_months)++) {
		{
			_13417_rem_days-=_1a48b1542_MDAYS[_16417_months];
		}
	_iter_next_4354346672:;
	}
	_iter_end_4354346672:;
	_1a48b1542_AbsTime _16917_t = _1a48b1542_AbsTime();
	_16917_t._field_year=static_cast<jule::U64>((((_15217_rem_years + (4LL * _14617_q_cycles)) + (100LL * _14017_c_cycles)) + (400LL * _13317_qc_cycles)) + 100LL);
	_16917_t._field_month=static_cast<jule::Uint>(_16417_months + 2LL);
	if (_16917_t._field_month >= 12LL) {
		_16917_t._field_month-=12LL;
		(_16917_t._field_year)++;
	}
	_16917_t._field_month+=1LL;
	_16917_t._field_year+=1900LL;
	_16917_t._field_day=static_cast<jule::U64>(_13417_rem_days + 1LL);
	_16917_t._field_week_day=static_cast<jule::U64>(jule::mod(3LL + _12617_days,7LL));
	if (_16917_t._field_week_day < 0LL) {
		_16917_t._field_week_day+=7LL;
	}
	_16917_t._field_year_day=_15917_y_day;
	_16917_t._field_hour=static_cast<jule::U64>(jule::div(_12717_rem_secs,3600LL));
	_16917_t._field_minute=static_cast<jule::U64>(jule::mod(jule::div(_12717_rem_secs,60LL),60LL));
	_16917_t._field_second=static_cast<jule::U64>(jule::mod(_12717_rem_secs,60LL));
	return _16917_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a48b1542_Time &_Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



jule::I64 _1a48b1542_Duration::_static_method_nanoseconds(jule::I64 _22231_d) {
	return static_cast<jule::I64>(_22231_d * 1LL);
}



jule::I64 _1a48b1542_Duration::_static_method_microseconds(jule::I64 _22732_d) {
	return static_cast<jule::I64>(_22732_d * 1000LL);
}



jule::I64 _1a48b1542_Duration::_static_method_milliseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>(_23232_d * 1000000LL);
}



jule::I64 _1a48b1542_Duration::_static_method_seconds(jule::I64 _23727_d) {
	return static_cast<jule::I64>(_23727_d * 1000000000LL);
}



jule::I64 _1a48b1542_Duration::_static_method_minutes(jule::I64 _24227_d) {
	return static_cast<jule::I64>(_24227_d * 60000000000LL);
}



jule::I64 _1a48b1542_Duration::_static_method_hours(jule::I64 _24725_d) {
	return static_cast<jule::I64>(_24725_d * 3600000000000LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a48b1542_Duration &_Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



jule::Str _1ba8540c3_Flag_0::_method_name(void) {
	return (*this)._field__name;
}



jule::Str _1ba8540c3_Flag_0::_method_what(void) {
	return (*this)._field__what;
}



void _1ba8540c3_Flag_0::_method_reset(void) {
	(*this)._field__data=(*this)._field__default;
}



jule::I32 _1ba8540c3_Flag_0::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ba8540c3_Flag_0 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

jule::Str _1ba8540c3_Flag_1::_method_name(void) {
	return (*this)._field__name;
}



jule::Str _1ba8540c3_Flag_1::_method_what(void) {
	return (*this)._field__what;
}



void _1ba8540c3_Flag_1::_method_reset(void) {
	(*this)._field__data=(*this)._field__default;
}



jule::I32 _1ba8540c3_Flag_1::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ba8540c3_Flag_1 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

jule::Str _1ba8540c3_Flag_2::_method_name(void) {
	return (*this)._field__name;
}



jule::Str _1ba8540c3_Flag_2::_method_what(void) {
	return (*this)._field__what;
}



void _1ba8540c3_Flag_2::_method_reset(void) {
	(*this)._field__data=(*this)._field__default;
}



jule::I32 _1ba8540c3_Flag_2::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ba8540c3_Flag_2 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

jule::Str _1ba8540c3_Flag_3::_method_name(void) {
	return (*this)._field__name;
}



jule::Str _1ba8540c3_Flag_3::_method_what(void) {
	return (*this)._field__what;
}



void _1ba8540c3_Flag_3::_method_reset(void) {
	(*this)._field__data=(*this)._field__default;
}



jule::I32 _1ba8540c3_Flag_3::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ba8540c3_Flag_3 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

jule::Str _1ba8540c3_Flag_4::_method_name(void) {
	return (*this)._field__name;
}



jule::Str _1ba8540c3_Flag_4::_method_what(void) {
	return (*this)._field__what;
}



void _1ba8540c3_Flag_4::_method_reset(void) {
	(*this)._field__data=(*this)._field__default;
}



jule::I32 _1ba8540c3_Flag_4::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ba8540c3_Flag_4 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1ba8540c3_FlagSet> _1ba8540c3_FlagSet::_static_method_new(void) {
	return jule::new_struct<_1ba8540c3_FlagSet>(new( std::nothrow ) _1ba8540c3_FlagSet(jule::Slice<jule::Trait<_1ba8540c3_CommonFlag>>::alloc(0LL,20LL),jule::Slice<jule::Str>()));
}



jule::Trait<_1ba8540c3_CommonFlag> _1ba8540c3_FlagSet::_method_find_flag(jule::Str _6732_name) {
	{
		auto expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4355899280:;
		if (it != expr.end()) {
			jule::Trait<_1ba8540c3_CommonFlag> _1ba8540c3_flag = *it;
			{
				if (_1ba8540c3_flag.get()._method_name() == _6732_name) {
					return _1ba8540c3_flag;
				}
			}
			_iter_next_4355899280:;
			++it;
			goto _iter_begin_4355899280;
		}
		_iter_end_4355899280:;
	}
	return nullptr;
}



jule::Trait<_1ba8540c3_CommonFlag> _1ba8540c3_FlagSet::_method_find_flag_short(jule::I32 _7738_name) {
	{
		auto expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4355904128:;
		if (it != expr.end()) {
			jule::Trait<_1ba8540c3_CommonFlag> _1ba8540c3_flag = *it;
			{
				if (_1ba8540c3_flag.get()._method_short() == _7738_name) {
					return _1ba8540c3_flag;
				}
			}
			_iter_next_4355904128:;
			++it;
			goto _iter_begin_4355904128;
		}
		_iter_end_4355904128:;
	}
	return nullptr;
}



jule::Slice<jule::Trait<_1ba8540c3_CommonFlag>> _1ba8540c3_FlagSet::_method_flags(void) {
	return (*this)._field__flags;
}



std::tuple<jule::Slice<jule::Str>,jule::Str> _1ba8540c3_FlagSet::_method_parse(jule::Slice<jule::Str> _11128_args) {
	jule::Slice<jule::Str> _11143_content = jule::Slice<jule::Str>();
	jule::Str _11159_error = jule::Str();
	_1ba8540c3_ArgParser _11217_ap = _1ba8540c3_ArgParser((*this),(*((&(_11128_args)))),jule::Str(),jule::Slice<jule::Str>(),jule::Int());
	_11217_ap._method_parse();
	_11143_content = _11217_ap._field_content;
	_11159_error = _11217_ap._field_error;
	return std::make_tuple(_11143_content,_11159_error);
}



void _1ba8540c3_FlagSet::_method_reset(void) {
	{
		auto expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4355921808:;
		if (it != expr.end()) {
			jule::Trait<_1ba8540c3_CommonFlag> _1ba8540c3_f = *it;
			{
				_1ba8540c3_f.get()._method_reset();
			}
			_iter_next_4355921808:;
			++it;
			goto _iter_begin_4355921808;
		}
		_iter_end_4355921808:;
	}
}



jule::Ref<_1ba8540c3_Flag_3> _1ba8540c3_FlagSet::_method_add_flag_common_0(jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	
	if ((*this)._method_find_flag(_12741_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name);
	}
	if ((_12752_short != 0LL) && ((*this)._method_find_flag_short(_12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short));
	}
	jule::Ref<_1ba8540c3_Flag_3> _14417_flag = jule::new_struct<_1ba8540c3_Flag_3>(new( std::nothrow ) _1ba8540c3_Flag_3(_12741_name,_12752_short,jule::Bool(),_12765_what,jule::Ref<jule::Bool>()));
	(*this)._field__flags=jule::append((*this)._field__flags,jule::Slice<jule::Trait<_1ba8540c3_CommonFlag>>({_14417_flag}));
	return _14417_flag;
}

jule::Ref<_1ba8540c3_Flag_4> _1ba8540c3_FlagSet::_method_add_flag_common_1(jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	
	if ((*this)._method_find_flag(_12741_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name);
	}
	if ((_12752_short != 0LL) && ((*this)._method_find_flag_short(_12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short));
	}
	jule::Ref<_1ba8540c3_Flag_4> _14417_flag = jule::new_struct<_1ba8540c3_Flag_4>(new( std::nothrow ) _1ba8540c3_Flag_4(_12741_name,_12752_short,jule::Str(),_12765_what,jule::Ref<jule::Str>()));
	(*this)._field__flags=jule::append((*this)._field__flags,jule::Slice<jule::Trait<_1ba8540c3_CommonFlag>>({_14417_flag}));
	return _14417_flag;
}





void _1ba8540c3_FlagSet::_method_add_var_0(jule::Ref<jule::Bool>& _17138_var,jule::Str _17147_name,jule::I32 _17158_short,jule::Str _17171_what) {
	jule::Ref<_1ba8540c3_Flag_3> _17217_flag = (*this)._method_add_flag_common_0(_17147_name,_17158_short,_17171_what);
	_17217_flag->_field__default=_17138_var;
	_17217_flag->_field__data=_17138_var;
}

void _1ba8540c3_FlagSet::_method_add_var_1(jule::Ref<jule::Str>& _17138_var,jule::Str _17147_name,jule::I32 _17158_short,jule::Str _17171_what) {
	jule::Ref<_1ba8540c3_Flag_4> _17217_flag = (*this)._method_add_flag_common_1(_17147_name,_17158_short,_17171_what);
	_17217_flag->_field__default=_17138_var;
	_17217_flag->_field__data=_17138_var;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ba8540c3_FlagSet &_Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags << ", ";
	_Stream << "_errors:" << _Src._field__errors;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}



void _1a2c73c9c_DynamicTypeAnnotation::_method_push_generic(jule::Ref<_1a2db8ce3_TypeKind>& _50436_k,jule::Int _50450_i) {
	(*this)._field_f->_field_generics[_50450_i]=_50436_k;
}



jule::Bool _1a2c73c9c_DynamicTypeAnnotation::_method_annotate_prim(jule::Ref<_1a2db8ce3_TypeKind>& _50844_k) {
	jule::Bool _50860_ok = jule::Bool();
	jule::Str _50913_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto expr = (*this)._field_f->_field_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4349154128:;
		if (it != expr.end()) {
			jule::Int _1a2c73c9c_i = it - expr.begin();
			jule::Ref<_1e16025cb_GenericDecl> _1a2c73c9c_g = *it;
			{
				if (_50913_kind != _1a2c73c9c_g->_field_ident) {
					goto _iter_next_4349154128;
				}
				jule::Ref<_1a2db8ce3_TypeKind> _51517_t = (*this)._field_f->_field_generics[_1a2c73c9c_i];
				{
					if (!(((!(jule::real(_51517_t)))))) { goto _case_end_4349158960; }
					_case_begin_4349158960:;
					{
						(*this)._method_push_generic(_50844_k,_1a2c73c9c_i);
					}
					goto _match_end_4349158720;
					_case_end_4349158960:;
					if (!(((!(_51517_t->_method_equals(_50844_k)))))) { goto _case_end_4349159056; }
					_case_begin_4349159056:;
					{
						_50860_ok = false;
						return _50860_ok;
					}
					goto _match_end_4349158720;
					_case_end_4349159056:;
					_match_end_4349158720:;
				}
				(*((*this)._field_k))->_field_kind=_50844_k->_field_kind;
				_50860_ok = true;
				return _50860_ok;
			}
			_iter_next_4349154128:;
			++it;
			_1a2c73c9c_i++;
			goto _iter_begin_4349154128;
		}
		_iter_end_4349154128:;
	}
	_50860_ok = false;
	return _50860_ok;
}



jule::Bool _1a2c73c9c_DynamicTypeAnnotation::_method_annotate_slc(jule::Ref<_1a2db8ce3_TypeKind>& _53243_k) {
	jule::Bool _53259_ok = jule::Bool();
	jule::Ref<_1a2db8ce3_Slc> _53317_pslc = (*((*this)._field_k))->_method_slc();
	if ((!(jule::real(_53317_pslc)))) {
		_53259_ok = false;
		return _53259_ok;
	}
	jule::Ref<_1a2db8ce3_Slc> _53817_slc = _53243_k->_method_slc();
	_1a2db8ce3_TypeKind* _53917_kk = (_53317_pslc->_field_elem).alloc;
	(*this)._field_k=(&(_53917_kk));
	_53259_ok = (*this)._method_annotate_kind(_53817_slc->_field_elem);
	return _53259_ok;
}



jule::Bool _1a2c73c9c_DynamicTypeAnnotation::_method_check_map_key(_1a2db8ce3_TypeKind** _54443_k,jule::Ref<_1a2db8ce3_TypeKind>& _54463_ck) {
	jule::Bool _54480_ok = jule::Bool();
	_1a2db8ce3_TypeKind** _54517_old = (*this)._field_k;
	(*this)._field_k=_54443_k;
	_54480_ok=(*this)._method_annotate_kind(_54463_ck);
	(*this)._field_k=_54517_old;
	_54480_ok = _54480_ok;
	return _54480_ok;
}



jule::Bool _1a2c73c9c_DynamicTypeAnnotation::_method_annotate_map(jule::Ref<_1a2db8ce3_TypeKind>& _55243_k) {
	jule::Bool _55259_ok = jule::Bool();
	jule::Ref<_1a2db8ce3_Map> _55317_pmap = (*((*this)._field_k))->_method_map();
	if ((!(jule::real(_55317_pmap)))) {
		_55259_ok = false;
		return _55259_ok;
	}
	jule::Ref<_1a2db8ce3_Map> _55817_m = _55243_k->_method_map();
	_1a2db8ce3_TypeKind* _56017_key = (_55317_pmap->_field_key).alloc;
	_1a2db8ce3_TypeKind* _56117_val = (_55317_pmap->_field_val).alloc;
	_55259_ok = (*this)._method_check_map_key((&(_56017_key)),_55817_m->_field_key) && (*this)._method_check_map_key((&(_56117_val)),_55817_m->_field_val);
	return _55259_ok;
}



jule::Bool _1a2c73c9c_DynamicTypeAnnotation::_method_annotate_fn(jule::Ref<_1a2db8ce3_TypeKind>& _56542_k) {
	jule::Bool _56558_ok = jule::Bool();
	jule::Ref<_1e1737e81_FnIns> _56617_pf = (*((*this)._field_k))->_method_fnc();
	if ((!(jule::real(_56617_pf)))) {
		_56558_ok = false;
		return _56558_ok;
	}
	jule::Ref<_1e1737e81_FnIns> _57017_f = _56542_k->_method_fnc();
	{
		if (!((_56617_pf->_field_params.len() != _57017_f->_field_params.len()))) { goto _case_end_4349194304; }
		_case_begin_4349194304:;
		{
			_56558_ok = false;
			return _56558_ok;
		}
		goto _match_end_4349194144;
		_case_end_4349194304:;
		if (!((_56617_pf->_field_decl->_method_is_void() != _57017_f->_field_decl->_method_is_void()))) { goto _case_end_4349194416; }
		_case_begin_4349194416:;
		{
			_56558_ok = false;
			return _56558_ok;
		}
		goto _match_end_4349194144;
		_case_end_4349194416:;
		_match_end_4349194144:;
	}
	_56558_ok=true;
	_1a2db8ce3_TypeKind** _58017_old = (*this)._field_k;
	{
		auto expr = _57017_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4349199072:;
		if (it != expr.end()) {
			jule::Int _1a2c73c9c_i = it - expr.begin();
			jule::Ref<_1e1737e81_ParamIns> _1a2c73c9c_fp = *it;
			{
				_1a2db8ce3_TypeKind* _58221_pfp = (_56617_pf->_field_params[_1a2c73c9c_i]->_field_kind).alloc;
				(*this)._field_k=(&(_58221_pfp));
				_56558_ok=(*this)._method_annotate_kind(_1a2c73c9c_fp->_field_kind) && _56558_ok;
			}
			_iter_next_4349199072:;
			++it;
			_1a2c73c9c_i++;
			goto _iter_begin_4349199072;
		}
		_iter_end_4349199072:;
	}
	if ((!(_56617_pf->_field_decl->_method_is_void()))) {
		_1a2db8ce3_TypeKind* _58821_result = (_56617_pf->_field_result).alloc;
		(*this)._field_k=(&(_58821_result));
		_56558_ok=(*this)._method_annotate_kind(_57017_f->_field_result) && _56558_ok;
	}
	(*this)._field_k=_58017_old;
	_56558_ok = _56558_ok;
	return _56558_ok;
}



jule::Bool _1a2c73c9c_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ref<_1a2db8ce3_TypeKind>& _59743_k) {
	jule::Bool _59759_ok = jule::Bool();
	jule::Ref<_1a2db8ce3_Ptr> _59817_pptr = (*((*this)._field_k))->_method_ptr();
	if ((!(jule::real(_59817_pptr)))) {
		_59759_ok = false;
		return _59759_ok;
	}
	jule::Ref<_1a2db8ce3_Ptr> _60317_ptr = _59743_k->_method_ptr();
	_1a2db8ce3_TypeKind* _60417_cpptr = (_59817_pptr->_field_elem).alloc;
	(*this)._field_k=(&(_60417_cpptr));
	_59759_ok = (*this)._method_annotate_kind(_60317_ptr->_field_elem);
	return _59759_ok;
}



jule::Bool _1a2c73c9c_DynamicTypeAnnotation::_method_annotate_ref(jule::Ref<_1a2db8ce3_TypeKind>& _60943_k) {
	jule::Bool _60959_ok = jule::Bool();
	jule::Ref<_1a2db8ce3_Ref> _61017_rref = (*((*this)._field_k))->_method_ref();
	if ((!(jule::real(_61017_rref)))) {
		_60959_ok = false;
		return _60959_ok;
	}
	jule::Ref<_1a2db8ce3_Ref> _61517_ref = _60943_k->_method_ref();
	_1a2db8ce3_TypeKind* _61617_crref = (_61017_rref->_field_elem).alloc;
	(*this)._field_k=(&(_61617_crref));
	_60959_ok = (*this)._method_annotate_kind(_61517_ref->_field_elem);
	return _60959_ok;
}



jule::Bool _1a2c73c9c_DynamicTypeAnnotation::_method_annotate_any(jule::Ref<_1a2db8ce3_TypeKind>& _62143_k) {
	jule::Bool _62159_ok = jule::Bool();
	jule::Str _62213_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto expr = (*this)._field_f->_field_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4349228480:;
		if (it != expr.end()) {
			jule::Int _1a2c73c9c_i = it - expr.begin();
			jule::Ref<_1e16025cb_GenericDecl> _1a2c73c9c_g = *it;
			{
				if (_62213_kind != _1a2c73c9c_g->_field_ident) {
					goto _iter_next_4349228480;
				}
				jule::Ref<_1a2db8ce3_TypeKind> _62817_t = (*this)._field_f->_field_generics[_1a2c73c9c_i];
				{
					if (!(((!(jule::real(_62817_t)))))) { goto _case_end_4349233312; }
					_case_begin_4349233312:;
					{
						(*this)._method_push_generic(_62143_k,_1a2c73c9c_i);
					}
					goto _match_end_4349233072;
					_case_end_4349233312:;
					if (!(((!(_62817_t->_method_equals(_62143_k)))))) { goto _case_end_4349233408; }
					_case_begin_4349233408:;
					{
						_62159_ok = false;
						return _62159_ok;
					}
					goto _match_end_4349233072;
					_case_end_4349233408:;
					_match_end_4349233072:;
				}
				(*((*this)._field_k))->_field_kind=_62143_k->_field_kind;
				_62159_ok = true;
				return _62159_ok;
			}
			_iter_next_4349228480:;
			++it;
			_1a2c73c9c_i++;
			goto _iter_begin_4349228480;
		}
		_iter_end_4349228480:;
	}
	_62159_ok = false;
	return _62159_ok;
}



jule::Bool _1a2c73c9c_DynamicTypeAnnotation::_method_annotate_kind(jule::Ref<_1a2db8ce3_TypeKind>& _64544_k) {
	jule::Bool _64560_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _64560_ok;
	}
	{
		if (!(((*this)._method_annotate_any(_64544_k)))) { goto _case_end_4349242032; }
		_case_begin_4349242032:;
		{
			_64560_ok = true;
			return _64560_ok;
		}
		goto _match_end_4349239904;
		_case_end_4349242032:;
		if (!((jule::real(_64544_k->_method_prim())))) { goto _case_end_4349242128; }
		_case_begin_4349242128:;
		{
			_64560_ok = (*this)._method_annotate_prim(_64544_k);
			return _64560_ok;
		}
		goto _match_end_4349239904;
		_case_end_4349242128:;
		if (!((jule::real(_64544_k->_method_slc())))) { goto _case_end_4349242224; }
		_case_begin_4349242224:;
		{
			_64560_ok = (*this)._method_annotate_slc(_64544_k);
			return _64560_ok;
		}
		goto _match_end_4349239904;
		_case_end_4349242224:;
		if (!((jule::real(_64544_k->_method_map())))) { goto _case_end_4349241472; }
		_case_begin_4349241472:;
		{
			_64560_ok = (*this)._method_annotate_map(_64544_k);
			return _64560_ok;
		}
		goto _match_end_4349239904;
		_case_end_4349241472:;
		if (!((jule::real(_64544_k->_method_fnc())))) { goto _case_end_4349241568; }
		_case_begin_4349241568:;
		{
			_64560_ok = (*this)._method_annotate_fn(_64544_k);
			return _64560_ok;
		}
		goto _match_end_4349239904;
		_case_end_4349241568:;
		if (!((jule::real(_64544_k->_method_ptr())))) { goto _case_end_4349241664; }
		_case_begin_4349241664:;
		{
			_64560_ok = (*this)._method_annotate_ptr(_64544_k);
			return _64560_ok;
		}
		goto _match_end_4349239904;
		_case_end_4349241664:;
		if (!((jule::real(_64544_k->_method_ref())))) { goto _case_end_4349241760; }
		_case_begin_4349241760:;
		{
			_64560_ok = (*this)._method_annotate_ref(_64544_k);
			return _64560_ok;
		}
		goto _match_end_4349239904;
		_case_end_4349241760:;
		_case_begin_4349240880:;
		{
			_64560_ok = false;
			return _64560_ok;
		}
		goto _match_end_4349239904;
		_case_end_4349240880:;
		_match_end_4349239904:;
	}
}



jule::Bool _1a2c73c9c_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _66236_ok = jule::Bool();
	_1a2db8ce3_TypeKind* _66317_pk = ((*this)._field_p->_field_kind).alloc;
	(*this)._field_k=(&(_66317_pk));
	_66236_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _66236_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2c73c9c_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



void _1a2c73c9c_StructLitChecker::_method_push_err(_1e15a2bb9_Token _89727_token,jule::Str _89741_fmt,jule::Slice<jule::Any> _89754_args) {
	(*this)._field_e->_method_push_err(_89727_token,_89741_fmt,_89754_args);
}



void _1a2c73c9c_StructLitChecker::_method_push_suggestion(jule::Str _90234_fmt,jule::Slice<jule::Any> _90247_args) {
	(*this)._field_e->_method_push_suggestion(_90234_fmt,_90247_args);
}



void _1a2c73c9c_StructLitChecker::_method_push_match(jule::Ref<_1e177440c_FieldIns>& _90634_f,jule::Ref<_1a2c74a6c_Data>& _90653_d,_1e15a2bb9_Token& _90668_error_token) {
	(*this)._field_args=jule::append((*this)._field_args,jule::Slice<jule::Ref<_1e2a30c17_StructArgExprModel>>({jule::new_struct<_1e2a30c17_StructArgExprModel>(new( std::nothrow ) _1e2a30c17_StructArgExprModel(_90634_f,_90653_d->_field_model))}));
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr((!((*this)._field_e->_field_immutable)),false,_90634_f->_field_kind,_90653_d,_90668_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(false,_90634_f->_field_kind,_90653_d,_90668_error_token,false);
}



void _1a2c73c9c_StructLitChecker::_method_check_pair(jule::Ref<_1e16025cb_FieldExprPair>& _91734_pair,jule::Slice<jule::Any>& _91761_exprs) {
	jule::Ref<_1e177440c_FieldIns> _91917_f = (*this)._field_s->_method_find_field(_91734_pair->_field_field._field_kind);
	if ((!(jule::real(_91917_f)))) {
		(*this)._method_push_err(_91734_pair->_field_field,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_91734_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_91917_f->_field_decl->_field_public,_91917_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_91734_pair->_field_field,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_91734_pair->_field_field._field_kind)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
	}
	_julec_label_dup_lookup:;
	{
		auto expr = _91761_exprs;
		auto it = expr.begin();
		_iter_begin_4349406592:;
		if (it != expr.end()) {
			jule::Any _1a2c73c9c_expr = *it;
			{
				{
					auto _match_expr{ _1a2c73c9c_expr };
					if (!(_match_expr.type_is<jule::Ref<_1e16025cb_FieldExprPair>>())) { goto _case_end_4349407936; }
					_case_begin_4349407936:;
					{
						jule::Ref<_1e16025cb_FieldExprPair> _93525_dpair = _1a2c73c9c_expr.operator jule::Ref<_1e16025cb_FieldExprPair>();
						{
							if (!((_91734_pair == _93525_dpair))) { goto _case_end_4349411024; }
							_case_begin_4349411024:;
							{
								goto _iter_end_4349406592;
							}
							goto _match_end_4349410864;
							_case_end_4349411024:;
							if (!((_91734_pair->_field_field._field_kind == _93525_dpair->_field_field._field_kind))) { goto _case_end_4349411136; }
							_case_begin_4349411136:;
							{
								(*this)._method_push_err(_91734_pair->_field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_91734_pair->_field_field._field_kind)}));
								goto _iter_end_4349406592;
							}
							goto _match_end_4349410864;
							_case_end_4349411136:;
							_match_end_4349410864:;
						}
					}
					goto _match_end_4349408336;
					_case_end_4349407936:;
					_match_end_4349408336:;
				}
			}
			_iter_next_4349406592:;
			++it;
			goto _iter_begin_4349406592;
		}
		_iter_end_4349406592:;
	}
	jule::Ref<_1a2db8ce3_TypeKind> _94717_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_94717_prefix;
	});
	(*this)._field_e->_field_prefix=_91917_f->_field_kind;
	jule::Ref<_1a2c74a6c_Data> _95117_d = (*this)._field_e->_method_eval_expr_kind(_91734_pair->_field_expr);
	if ((!(jule::real(_95117_d)))) {
		return;
	}
	(*this)._method_push_match(_91917_f,_95117_d,_91734_pair->_field_field);
}



jule::Bool _1a2c73c9c_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any>& _95835_exprs) {
	jule::Bool _95917_ok = true;
	{
		auto expr = _95835_exprs;
		auto it = expr.begin();
		_iter_begin_4349423168:;
		if (it != expr.end()) {
			jule::Int _1a2c73c9c_i = it - expr.begin();
			jule::Any _1a2c73c9c_expr = *it;
			{
				{
					auto _match_expr{ _1a2c73c9c_expr };
					if (!(_match_expr.type_is<jule::Ref<_1e16025cb_KeyValPair>>())) { goto _case_end_4349425040; }
					_case_begin_4349425040:;
					{
						jule::Ref<_1e16025cb_KeyValPair> _96325_pair = _1a2c73c9c_expr.operator jule::Ref<_1e16025cb_KeyValPair>();
						{
							auto _match_expr{ _96325_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ref<_1e16025cb_IdentExpr>>())) { goto _case_end_4349430176; }
							goto _match_end_4349428320;
							_case_end_4349430176:;
							_case_begin_4349425680:;
							{
								(*this)._method_push_err(_96325_pair->_field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
								_95917_ok=false;
								goto _iter_next_4349423168;
							}
							goto _match_end_4349428320;
							_case_end_4349425680:;
							_match_end_4349428320:;
						}
						_95835_exprs[_1a2c73c9c_i]=jule::Any(jule::new_struct<_1e16025cb_FieldExprPair>(new( std::nothrow ) _1e16025cb_FieldExprPair(_96325_pair->_field_key.operator jule::Ref<_1e16025cb_IdentExpr>()->_field_token,_96325_pair->_field_val)));
					}
					goto _match_end_4349425488;
					_case_end_4349425040:;
					_match_end_4349425488:;
				}
			}
			_iter_next_4349423168:;
			++it;
			_1a2c73c9c_i++;
			goto _iter_begin_4349423168;
		}
		_iter_end_4349423168:;
	}
	return _95917_ok;
}



void _1a2c73c9c_StructLitChecker::_method_check(jule::Slice<jule::Any>& _98429_exprs) {
	if (_98429_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_98429_exprs)))) {
		return;
	}
	jule::Bool _99317_paired = false;
	{
		auto expr = _98429_exprs;
		auto it = expr.begin();
		_iter_begin_4349438320:;
		if (it != expr.end()) {
			jule::Int _1a2c73c9c_i = it - expr.begin();
			jule::Any _1a2c73c9c_expr = *it;
			{
				{
					auto _match_expr{ _1a2c73c9c_expr };
					if (!(_match_expr.type_is<jule::Ref<_1e16025cb_FieldExprPair>>())) { goto _case_end_4349440208; }
					_case_begin_4349440208:;
					{
						jule::Ref<_1e16025cb_FieldExprPair> _99725_pair = _1a2c73c9c_expr.operator jule::Ref<_1e16025cb_FieldExprPair>();
						if ((_1a2c73c9c_i > 0LL) && (!(_99317_paired))) {
							(*this)._method_push_err(_99725_pair->_field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						}
						_99317_paired=true;
						(*this)._method_check_pair(_99725_pair,_98429_exprs);
					}
					goto _match_end_4349440656;
					_case_end_4349440208:;
					if (!(_match_expr.type_is<jule::Ref<_1e16025cb_Expr>>())) { goto _case_end_4349440848; }
					_case_begin_4349440848:;
					{
						jule::Ref<_1e16025cb_Expr> _100525_e = _1a2c73c9c_expr.operator jule::Ref<_1e16025cb_Expr>();
						if (_99317_paired) {
							(*this)._method_push_err(_100525_e->_field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>({}));
						}
						if (_1a2c73c9c_i >= (*this)._field_s->_field_fields.len()) {
							(*this)._method_push_err(_100525_e->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4349438320;
						}
						jule::Ref<_1e177440c_FieldIns> _101425_field = (*this)._field_s->_field_fields[_1a2c73c9c_i];
						jule::Ref<_1a2db8ce3_TypeKind> _101625_prefix = (*this)._field_e->_field_prefix;
						__JULE_DEFER({
							(*this)._field_e->_field_prefix=_101625_prefix;
						});
						(*this)._field_e->_field_prefix=_101425_field->_field_kind;
						jule::Ref<_1a2c74a6c_Data> _102025_d = (*this)._field_e->_method_eval_expr_kind(_100525_e->_field_kind);
						if ((!(jule::real(_102025_d)))) {
							goto _iter_next_4349438320;
						}
						(*this)._method_push_match(_101425_field,_102025_d,_100525_e->_field_token);
					}
					goto _match_end_4349440656;
					_case_end_4349440848:;
					_match_end_4349440656:;
				}
			}
			_iter_next_4349438320:;
			++it;
			_1a2c73c9c_i++;
			goto _iter_begin_4349438320;
		}
		_iter_end_4349438320:;
	}
	if ((!(_99317_paired))) {
		jule::I64 _103117_n = (*this)._field_s->_field_fields.len();
		jule::I64 _103221_diff = _103117_n - _98429_exprs.len();
		{
			if (!((_103221_diff <= 0LL))) { goto _case_end_4349461952; }
			_case_begin_4349461952:;
			{
				return;
			}
			goto _match_end_4349461712;
			_case_end_4349461952:;
			_match_end_4349461712:;
		}
		jule::Str _103821_idents = jule::Str();
		for (; _103221_diff > 0LL; (_103221_diff)--) {
			{
				_103821_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[_103117_n - _103221_diff]->_field_decl->_field_ident;
			}
		_iter_next_4349459584:;
		}
		_iter_end_4349459584:;
		_103821_idents=_103821_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_103821_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2c73c9c_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_TernaryExpr &_Src) {
	_Stream << "TernaryExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



void _1a2c73c9c_AssignTypeChecker::_method_push_err(jule::Str _41027_fmt,jule::Slice<jule::Any> _41040_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_41027_fmt,_41040_args);
}



jule::Bool _1a2c73c9c_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _41517_valid = true;
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_fnc())))) { goto _case_end_4349108560; }
		_case_begin_4349108560:;
		{
			jule::Ref<_1e1737e81_FnIns> _41917_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				if (!((_41917_f->_method_is_builtin()))) { goto _case_end_4349112224; }
				_case_begin_4349112224:;
				{
					(*this)._method_push_err(jule::Str("built-in define cannot use as anonymous function", 48),jule::Slice<jule::Any>({}));
					_41517_valid=false;
				}
				goto _match_end_4349112032;
				_case_end_4349112224:;
				if (!((_41917_f->_field_decl->_field_cpp_linked))) { goto _case_end_4349112336; }
				_case_begin_4349112336:;
				{
					(*this)._method_push_err(jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>({}));
					_41517_valid=false;
				}
				goto _match_end_4349112032;
				_case_end_4349112336:;
				if (!((_41917_f->_field_decl->_method_is_method()))) { goto _case_end_4349112448; }
				_case_begin_4349112448:;
				{
					(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>({}));
					_41517_valid=false;
				}
				goto _match_end_4349112032;
				_case_end_4349112448:;
				if (!((_41917_f->_field_decl->_field_generics.len() > 0LL))) { goto _case_end_4349112560; }
				_case_begin_4349112560:;
				{
					(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
					_41517_valid=false;
				}
				goto _match_end_4349112032;
				_case_end_4349112560:;
				_match_end_4349112032:;
			}
		}
		goto _match_end_4349108400;
		_case_end_4349108560:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_tup())))) { goto _case_end_4349108672; }
		_case_begin_4349108672:;
		{
			(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>({}));
			_41517_valid=false;
		}
		goto _match_end_4349108400;
		_case_end_4349108672:;
		_match_end_4349108400:;
	}
	return _41517_valid;
}



jule::Bool _1a2c73c9c_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || (!(jule::real((*this)._field_dest->_method_prim())))) || (!(jule::real((*this)._field_d->_field_kind->_method_prim())))) || (!(_1a44da204_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _45413_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (!((_1a44da204_is_float(_45413_kind)))) { goto _case_end_4349129040; }
		_case_begin_4349129040:;
		{
			if ((!(_1a2c73c9c_float_assignable(_45413_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4349128432;
		_case_end_4349129040:;
		if (!((_1a44da204_is_int(_45413_kind)))) { goto _case_end_4349129136; }
		_case_begin_4349129136:;
		{
			if ((!(_1a2c73c9c_int_assignable(_45413_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4349128432;
		_case_end_4349129136:;
		_case_begin_4349128704:;
		{
			return false;
		}
		goto _match_end_4349128432;
		_case_end_4349128704:;
		_match_end_4349128432:;
	}
	return true;
}



jule::Bool _1a2c73c9c_AssignTypeChecker::_method_check(void) {
	{
		if (!(((!(jule::real((*this)._field_d)))))) { goto _case_end_4349136784; }
		_case_begin_4349136784:;
		{
			return false;
		}
		goto _match_end_4349133616;
		_case_end_4349136784:;
		if (!(((!((*this)._method_check_validity()))))) { goto _case_end_4349136416; }
		_case_begin_4349136416:;
		{
			return false;
		}
		goto _match_end_4349133616;
		_case_end_4349136416:;
		if (!(((*this)._method_check_const()))) { goto _case_end_4349136512; }
		_case_begin_4349136512:;
		{
			return true;
		}
		goto _match_end_4349133616;
		_case_end_4349136512:;
		_case_begin_4349130656:;
		{
			return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token,(*this)._field_deref);
		}
		goto _match_end_4349133616;
		_case_end_4349130656:;
		_match_end_4349133616:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2c73c9c_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref;
	_Stream << "}";
	return _Stream;
}



void _1a2c73c9c_FnCallArgChecker::_method_push_err_token(_1e15a2bb9_Token _68033_token,jule::Str _68047_fmt,jule::Slice<jule::Any> _68060_args) {
	(*this)._field_e->_field_s->_method_push_err(_68033_token,_68047_fmt,_68060_args);
}



void _1a2c73c9c_FnCallArgChecker::_method_push_err(jule::Str _68427_fmt,jule::Slice<jule::Any> _68440_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_68427_fmt,_68440_args);
}



jule::Slice<jule::Ref<_1e1737e81_ParamIns>> _1a2c73c9c_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && jule::real((*this)._field_f->_field_params[0LL]->_field_decl)) && (*this)._field_f->_field_params[0LL]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(1LL);
	}
	return (*this)._field_f->_field_params;
}



jule::Bool _1a2c73c9c_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ref<_1e1737e81_ParamIns>>& _69532_params) {
	jule::Bool _69555_ok = jule::Bool();
	jule::I64 _69617_n = _69532_params.len();
	if ((_69617_n > 0LL) && _69532_params[0LL]->_field_decl->_method_is_self()) {
		(_69617_n)--;
	}
	jule::I64 _70117_diff = _69617_n - (*this)._field_args.len();
	{
		if (!((_70117_diff == 0LL))) { goto _case_end_4349278464; }
		_case_begin_4349278464:;
		{
			_69555_ok = true;
			return _69555_ok;
		}
		goto _match_end_4349278320;
		_case_end_4349278464:;
		if (!(((_69617_n > 0LL) && _69532_params[_69617_n - 1LL]->_field_decl->_field_variadic))) { goto _case_end_4349278576; }
		_case_begin_4349278576:;
		{
			_69555_ok = true;
			return _69555_ok;
		}
		goto _match_end_4349278320;
		_case_end_4349278576:;
		if (!(((_70117_diff < 0LL) || (_70117_diff > _69532_params.len())))) { goto _case_end_4349278688; }
		_case_begin_4349278688:;
		{
			(*this)._method_push_err(jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
			_69555_ok = false;
			return _69555_ok;
		}
		goto _match_end_4349278320;
		_case_end_4349278688:;
		_match_end_4349278320:;
	}
	jule::Str _71417_idents = jule::Str();
	for (; _70117_diff > 0LL; (_70117_diff)--) {
		{
			_71417_idents+=jule::Str(", ", 2) + _69532_params[_69617_n - _70117_diff]->_field_decl->_field_ident;
		}
	_iter_next_4349284560:;
	}
	_iter_end_4349284560:;
	_71417_idents=_71417_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_71417_idents)}));
	_69555_ok = false;
	return _69555_ok;
}



jule::Bool _1a2c73c9c_FnCallArgChecker::_method_check_arg(jule::Ref<_1e1737e81_ParamIns>& _72433_p,jule::Ref<_1a2c74a6c_Data>& _72452_arg,_1e15a2bb9_Token& _72469_error_token) {
	jule::Bool _72491_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation && _1e1737e81_parameter_uses_generics(_72433_p->_field_decl,(*this)._field_f->_field_decl->_field_generics)) {
		_1a2c73c9c_DynamicTypeAnnotation _72621_dta = _1a2c73c9c_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_72433_p,_72452_arg,_72469_error_token,nullptr);
		_72491_ok=_72621_dta._method_annotate();
		if ((!(_72491_ok))) {
			(*this)._method_push_err_token(_72469_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
			_72491_ok = false;
			return _72491_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_72433_p->_field_decl->_field_mutable,_72433_p->_field_decl->_field_reference,_72433_p->_field_kind,_72452_arg,_72469_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_72433_p->_field_decl->_field_reference,_72433_p->_field_kind,_72452_arg,_72469_error_token,false);
	_72491_ok = true;
	return _72491_ok;
}



jule::Bool _1a2c73c9c_FnCallArgChecker::_method_push(jule::Ref<_1e1737e81_ParamIns>& _74628_p,jule::Ref<_1e16025cb_Expr> _74646_arg) {
	jule::Bool _74660_ok = jule::Bool();
	jule::Ref<_1a2db8ce3_TypeKind> _74717_old = (*this)._field_e->_field_prefix;
	jule::Bool _74813_old_immut = (*this)._field_e->_field_immutable;
	jule::Ref<_1a2c74a6c_Data> _74917_d = jule::new_ref<_1a2c74a6c_Data>();
	(*this)._field_e->_field_immutable=(!(_74628_p->_field_decl->_field_mutable));
	if ((!((*this)._field_dynamic_annotation)) && (!(_74628_p->_field_decl->_field_variadic))) {
		(*this)._field_e->_field_prefix=_74628_p->_field_kind;
	} else {
		jule::drop((*this)._field_e->_field_prefix);
	}
	_74917_d=(*this)._field_e->_method_eval_expr_kind(_74646_arg->_field_kind);
	(*this)._field_e->_field_prefix=_74717_old;
	(*this)._field_e->_field_immutable=_74813_old_immut;
	if ((!(jule::real(_74917_d)))) {
		_74660_ok = false;
		return _74660_ok;
	}
	(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_74917_d->_field_model}));
	_74660_ok = (*this)._method_check_arg(_74628_p,_74917_d,_74646_arg->_field_token);
	return _74660_ok;
}



jule::Bool _1a2c73c9c_FnCallArgChecker::_method_push_variadic(jule::Ref<_1e1737e81_ParamIns>& _77037_p,jule::Int _77055_i) {
	jule::Bool _77065_ok = jule::Bool();
	_77065_ok=true;
	jule::Bool _77217_variadiced = false;
	jule::Bool _77313_more = (_77055_i + 1LL) < (*this)._field_args.len();
	jule::Ref<_1e2a30c17_SliceExprModel> _77417_model = jule::new_struct<_1e2a30c17_SliceExprModel>(new( std::nothrow ) _1e2a30c17_SliceExprModel(_77037_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ref<_1a2db8ce3_TypeKind> _77817_old = (*this)._field_e->_field_prefix;
	for (; _77055_i < (*this)._field_args.len(); (_77055_i)++) {
		{
			jule::Ref<_1e16025cb_Expr> _78021_arg = (*this)._field_args[_77055_i];
			{
				auto _match_expr{ _78021_arg->_field_kind };
				if (!(_match_expr.type_is<jule::Ref<_1e16025cb_VariadicExpr>>())) { goto _case_end_4349329840; }
				_case_begin_4349329840:;
				{
					(*this)._field_e->_field_prefix=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1a2db8ce3_Slc>(new( std::nothrow ) _1a2db8ce3_Slc(_77037_p->_field_kind))));
				}
				goto _match_end_4349328768;
				_case_end_4349329840:;
				_case_begin_4349327088:;
				{
					(*this)._field_e->_field_prefix=_77037_p->_field_kind;
				}
				goto _match_end_4349328768;
				_case_end_4349327088:;
				_match_end_4349328768:;
			}
			jule::Ref<_1a2c74a6c_Data> _79021_d = (*this)._field_e->_method_eval_expr_kind(_78021_arg->_field_kind);
			if ((!(jule::real(_79021_d)))) {
				_77065_ok=false;
				goto _iter_next_4349324960;
			}
			if (_79021_d->_field_variadiced) {
				_77217_variadiced=true;
				_79021_d->_field_variadiced=false;
				_77037_p->_field_kind->_field_variadic=true;
				_79021_d->_field_kind->_field_variadic=true;
				__JULE_DEFER({
					_79021_d->_field_kind->_field_variadic=false;
					_77037_p->_field_kind->_field_variadic=false;
				});
				{
					auto _match_expr{ _79021_d->_field_model };
					if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_SliceExprModel>>())) { goto _case_end_4349339104; }
					_case_begin_4349339104:;
					{
						_77417_model=_79021_d->_field_model.operator jule::Ref<_1e2a30c17_SliceExprModel>();
						_77417_model->_field_elem_kind=_77037_p->_field_kind;
					}
					goto _match_end_4349338736;
					_case_end_4349339104:;
					_case_begin_4349333824:;
					{
						jule::drop(_77417_model);
						(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_79021_d->_field_model}));
					}
					goto _match_end_4349338736;
					_case_end_4349333824:;
					_match_end_4349338736:;
				}
				_77065_ok=(*this)._method_check_arg(_77037_p,_79021_d,_78021_arg->_field_token) && _77065_ok;
				goto _iter_next_4349324960;
			}
			_77417_model->_field_elems=jule::append(_77417_model->_field_elems,jule::Slice<jule::Any>({_79021_d->_field_model}));
			_77065_ok=(*this)._method_check_arg(_77037_p,_79021_d,_78021_arg->_field_token) && _77065_ok;
		}
	_iter_next_4349324960:;
	}
	_iter_end_4349324960:;
	(*this)._field_e->_field_prefix=_77817_old;
	if (_77217_variadiced && _77313_more) {
		(*this)._method_push_err(jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>({}));
	}
	if (jule::real(_77417_model)) {
		(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({jule::Any(_77417_model)}));
	}
	_77065_ok = _77065_ok;
	return _77065_ok;
}



jule::Bool _1a2c73c9c_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ref<_1e1737e81_ParamIns>>& _83634_params) {
	jule::Bool _83657_ok = jule::Bool();
	_83657_ok=true;
	jule::Int _83817_i = 0LL;
	_julec_label_iter:;
	while (_83817_i < _83634_params.len()) {
		{
			jule::Ref<_1e1737e81_ParamIns> _84121_p = _83634_params[_83817_i];
			{
				if (!((_84121_p->_field_decl->_method_is_self()))) { goto _case_end_4349357312; }
				goto _match_end_4349356416;
				_case_end_4349357312:;
				if (!((_84121_p->_field_decl->_field_variadic))) { goto _case_end_4349357616; }
				_case_begin_4349357616:;
				{
					_83657_ok=(*this)._method_push_variadic(_84121_p,_83817_i) && _83657_ok;
					goto _iter_end_4349353184;
				}
				goto _match_end_4349356416;
				_case_end_4349357616:;
				if (!(((*this)._field_args.len() <= _83817_i))) { goto _case_end_4349357712; }
				_case_begin_4349357712:;
				{
					_83657_ok=false;
					goto _iter_end_4349353184;
				}
				goto _match_end_4349356416;
				_case_end_4349357712:;
				_case_begin_4349356528:;
				{
					_83657_ok=(*this)._method_push(_84121_p,(*this)._field_args[_83817_i]) && _83657_ok;
				}
				goto _match_end_4349356416;
				_case_end_4349356528:;
				_match_end_4349356416:;
			}
			(_83817_i)++;
		}
	_iter_next_4349353184:;
	}
	_iter_end_4349353184:;
	_83657_ok = _83657_ok;
	return _83657_ok;
}



jule::Bool _1a2c73c9c_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _86350_ok = jule::Bool();
	{
		auto expr = (*this)._field_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4349364928:;
		if (it != expr.end()) {
			jule::Ref<_1a2db8ce3_TypeKind> _1a2c73c9c_g = *it;
			{
				if ((!(jule::real(_1a2c73c9c_g)))) {
					(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
					_86350_ok = false;
					return _86350_ok;
				}
			}
			_iter_next_4349364928:;
			++it;
			goto _iter_begin_4349364928;
		}
		_iter_end_4349364928:;
	}
	_86350_ok = true;
	return _86350_ok;
}



jule::Bool _1a2c73c9c_FnCallArgChecker::_method_check(void) {
	jule::Bool _87326_ok = jule::Bool();
	jule::Slice<jule::Ref<_1e1737e81_ParamIns>> _87417_params = (*this)._method_get_params();
	_87326_ok=(*this)._method_check_counts(_87417_params);
	if ((!(_87326_ok))) {
		_87326_ok = false;
		return _87326_ok;
	}
	_87326_ok=(*this)._method_check_args(_87417_params);
	if (_87326_ok && (*this)._field_dynamic_annotation) {
		_87326_ok=(*this)._method_check_dynamic_type_annotation();
	}
	_87326_ok = _87326_ok;
	return _87326_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2c73c9c_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



void _1a2c73c9c_RetTypeChecker::_method_prepare_types(void) {
	(*this)._field_types=_1a2c73c9c_get_fn_result_types((*this)._field_f);
}



void _1a2c73c9c_RetTypeChecker::_method_prepare_exprs(jule::Ref<_1e16025cb_Expr>& _122537_e) {
	if ((!(jule::real(_122537_e)))) {
		return;
	}
	{
		auto _match_expr{ _122537_e->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TupleExpr>>())) { goto _case_end_4350626176; }
		_case_begin_4350626176:;
		{
			(*this)._field_exprs=_122537_e->_field_kind.operator jule::Ref<_1e16025cb_TupleExpr>()->_field_expr;
		}
		goto _match_end_4350622048;
		_case_end_4350626176:;
		_case_begin_4350622688:;
		{
			(*this)._field_exprs=jule::append((*this)._field_exprs,jule::Slice<jule::Ref<_1e16025cb_Expr>>({_122537_e}));
		}
		goto _match_end_4350622048;
		_case_end_4350622688:;
		_match_end_4350622048:;
	}
}



void _1a2c73c9c_RetTypeChecker::_method_ret_vars(void) {
	if ((*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ref<_1ba80e105_Var>>::alloc(static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len()));
	jule::Ref<_1e2a2e210_ScopeChecker> _124517_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _124717_j = 0LL;
	{
		auto expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4350632880:;
		if (it != expr.end()) {
			jule::Int _1a2c73c9c_i = it - expr.begin();
			_1e15a2bb9_Token _1a2c73c9c_ident = *it;
			{
				if ((!(_1e15a2bb9_is_ignore_ident(_1a2c73c9c_ident._field_kind)))) {
					(*this)._field_vars[_1a2c73c9c_i]=_124517_root_scope->_field_table->_field_vars[_124717_j];
					(_124717_j)++;
				} else {
					(*this)._field_vars[_1a2c73c9c_i]=jule::new_struct<_1ba80e105_Var>(new( std::nothrow ) _1ba80e105_Var(jule::Ref<_1e2a2e210_Scope>(),_1e15a2bb9_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),(*this)._field_types[_1a2c73c9c_i])),jule::Ref<_1a2c74a6c_Value>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Slice<jule::Ref<_1e16025cb_Directive>>(),jule::Ref<_1ba80e105_IterRelation>(),jule::Slice<jule::Ref<_1ba80e105_Var>>()));
				}
			}
			_iter_next_4350632880:;
			++it;
			_1a2c73c9c_i++;
			goto _iter_begin_4350632880;
		}
		_iter_end_4350632880:;
	}
	if (_124717_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



void _1a2c73c9c_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_1a2c74a6c_Data>> _127117_datas = jule::Slice<jule::Ref<_1a2c74a6c_Data>>::alloc(0LL,static_cast<jule::I64>((*this)._field_exprs.len()));
	{
		auto expr = (*this)._field_exprs;
		auto it = expr.begin();
		_iter_begin_4350643312:;
		if (it != expr.end()) {
			jule::Int _1a2c73c9c_i = it - expr.begin();
			jule::Ref<_1e16025cb_Expr> _1a2c73c9c_expr = *it;
			{
				if (_1a2c73c9c_i >= (*this)._field_types.len()) {
					goto _iter_end_4350643312;
				}
				jule::Ref<_1a2db8ce3_TypeKind> _127821_t = (*this)._field_types[_1a2c73c9c_i];
				jule::Ref<_1a2c74a6c_Data> _128021_d = (*this)._field_sc->_field_s->_method_evalp((*this)._field_sc,_127821_t)->_method_eval_expr(_1a2c73c9c_expr);
				if ((!(jule::real(_128021_d)))) {
					goto _iter_next_4350643312;
				}
				_127117_datas=jule::append(_127117_datas,jule::Slice<jule::Ref<_1a2c74a6c_Data>>({_128021_d}));
				if ((!(_128021_d->_field_mutable)) && _128021_d->_field_kind->_method_mutable()) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>({}));
					return;
				}
				_1a2c73c9c_AssignTypeChecker _129221_ac = _1a2c73c9c_AssignTypeChecker((*this)._field_sc->_field_s,_127821_t,_128021_d,(*this)._field_error_token,jule::Bool());
				_129221_ac._method_check();
			}
			_iter_next_4350643312:;
			++it;
			_1a2c73c9c_i++;
			goto _iter_begin_4350643312;
		}
		_iter_end_4350643312:;
	}
	if (_127117_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_1e2a30c17_TupleExprModel>(new( std::nothrow ) _1e2a30c17_TupleExprModel(_127117_datas)));
	} else if (_127117_datas.len() == 1LL) {
		(*this)._field_model=_127117_datas[0LL]->_field_model;
	}
}



jule::Bool _1a2c73c9c_RetTypeChecker::_method_check(jule::Ref<_1e16025cb_Expr>& _131129_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_131129_e);
	(*this)._method_ret_vars();
	jule::I64 _131613_n = (*this)._field_exprs.len();
	if ((_131613_n == 0LL) && (!((*this)._field_f->_field_decl->_method_is_void()))) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>({}));
			return false;
		}
		return true;
	}
	if ((_131613_n > 0LL) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>({}));
		return false;
	}
	if (_131613_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>({}));
	} else if (_131613_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi return", 43),jule::Slice<jule::Any>({}));
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2c73c9c_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1a2c74a6c_BinopSolver::_method_check_type_compatibility(void) {
	_1a2c73c9c_TypeCompatibilityChecker _347217_tcc = _1a2c73c9c_TypeCompatibilityChecker((*this)._field_e->_field_s,(*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op,jule::Bool(),true,jule::Bool());
	return _347217_tcc._method_check();
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_nil(void) {
	if ((!((*this)._field_r->_field_kind->_method_nil_compatible()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4352858432; }
		_case_begin_4352858432:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4352851296;
		_case_end_4352858432:;
		_case_begin_4352855072:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352851296;
		_case_end_4352855072:;
		_match_end_4352851296:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_enum(void) {
	jule::Ref<_1e2a21d4b_Enum> _350417_enm = (*this)._field_l->_field_kind->_method_enm();
	if ((!(jule::real((*this)._field_r->_field_kind->_method_enm()))) || ((_350417_enm).alloc != ((*this)._field_r->_field_kind->_method_enm()).alloc)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_350417_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str(">", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4352872832; }
		_case_begin_4352872832:;
		{
			if ((!(_1a44da204_is_num(_350417_enm->_field_kind->_field_kind->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_350417_enm->_field_ident)}));
				return jule::new_ref<_1a2c74a6c_Data>();
			}
			goto _case_begin_4352872176;
		}
		goto _match_end_4352868016;
		_case_end_4352872832:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4352872176; }
		_case_begin_4352872176:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4352868016;
		_case_end_4352872176:;
		if (!((jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr)) { goto _case_end_4352872560; }
		_case_begin_4352872560:;
		{
			if ((!(jule::real(_350417_enm->_field_kind->_field_kind->_method_prim()))) || (!(_1a44da204_is_int(_350417_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_350417_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_4352868016;
		_case_end_4352872560:;
		_case_begin_4352867312:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_350417_enm->_field_ident)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352868016;
		_case_end_4352867312:;
		_match_end_4352868016:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_ptr(void) {
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4352889584; }
		_case_begin_4352889584:;
		{
			if ((!((*this)._method_check_type_compatibility()))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
				return jule::new_ref<_1a2c74a6c_Data>();
			}
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4352885008;
		_case_end_4352889584:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr)) { goto _case_end_4352890064; }
		_case_begin_4352890064:;
		{
			if ((!(jule::real((*this)._field_l->_field_kind->_method_ptr())))) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			if ((*this)._field_l->_field_kind->_method_ptr()->_method_is_unsafe()) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			}
			if ((!(_1a2c74a6c_is_ptr_arithmetic_compatible_int((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("type \"@\" is incompatible to use for pointer arithmetic", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
				return jule::new_ref<_1a2c74a6c_Data>();
			}
			return (*this)._field_l;
		}
		goto _match_end_4352885008;
		_case_end_4352890064:;
		_case_begin_4352884320:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352885008;
		_case_end_4352884320:;
		_match_end_4352885008:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4352916560; }
		_case_begin_4352916560:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4352907760;
		_case_end_4352916560:;
		_case_begin_4352912128:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352907760;
		_case_end_4352912128:;
		_match_end_4352907760:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4352927472; }
		_case_begin_4352927472:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4352922624;
		_case_end_4352927472:;
		_case_begin_4352922976:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352922624;
		_case_end_4352922976:;
		_match_end_4352922624:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4352929696; }
		_case_begin_4352929696:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4352933424;
		_case_end_4352929696:;
		_case_begin_4352933888:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352933424;
		_case_end_4352933888:;
		_match_end_4352933424:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4352940544; }
		_case_begin_4352940544:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4352944272;
		_case_end_4352940544:;
		_case_begin_4352944736:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352944272;
		_case_end_4352944736:;
		_match_end_4352944272:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4352951392; }
		_case_begin_4352951392:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4352955120;
		_case_end_4352951392:;
		_case_begin_4352955584:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352955120;
		_case_end_4352955584:;
		_match_end_4352955120:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_any(void) {
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4352965536; }
		_case_begin_4352965536:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4352962336;
		_case_end_4352965536:;
		_case_begin_4352956192:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352962336;
		_case_end_4352956192:;
		_match_end_4352962336:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("&&", 2)) == _match_expr || (jule::Str("||", 2)) == _match_expr)) { goto _case_end_4352968688; }
		_case_begin_4352968688:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4352972480;
		_case_end_4352968688:;
		_case_begin_4352972816:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352972480;
		_case_end_4352972816:;
		_match_end_4352972480:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_str(void) {
	jule::Str _372117_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_372117_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_372117_rk)}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4352987120; }
		_case_begin_4352987120:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4352984384;
		_case_end_4352987120:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4352988432; }
		_case_begin_4352988432:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4352984384;
		_case_end_4352988432:;
		_case_begin_4352983792:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4352984384;
		_case_end_4352983792:;
		_match_end_4352984384:;
	}
}



void _1a2c74a6c_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _374717_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _374817_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_1a4415c12_is_greater(_374817_rk,_374717_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



void _1a2c74a6c_BinopSolver::_method_check_mod_data(jule::Ref<_1a2c74a6c_Data> _376337_d) {
	if ((!(_376337_d->_method_is_const()))) {
		if ((!(jule::real(_376337_d->_field_kind->_method_prim()))) || (!(_1a44da204_is_int(_376337_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		return;
	}
	{
		if (!((_1a2c73c9c_sig_assignable(jule::Str("i64", 3),_376337_d)))) { goto _case_end_4353009424; }
		_case_begin_4353009424:;
		{
			_376337_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_376337_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4353002672;
		_case_end_4353009424:;
		if (!((_1a2c73c9c_unsig_assignable(jule::Str("u64", 3),_376337_d)))) { goto _case_end_4353007712; }
		_case_begin_4353007712:;
		{
			_376337_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_376337_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4353002672;
		_case_end_4353007712:;
		_case_begin_4353002784:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4353002672;
		_case_end_4353002784:;
		_match_end_4353002672:;
	}
}



void _1a2c74a6c_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



jule::Bool _1a2c74a6c_BinopSolver::_method_numbers_are_compatibile(jule::Str& _378839_lk,jule::Str& _378849_rk) {
	if ((*this)._field_l->_method_is_const()) {
		return true;
	}
	if (_378839_lk == jule::Str("f32", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _378849_rk == jule::Str("f32", 3);
	}
	if (_378839_lk == jule::Str("f64", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _378849_rk == jule::Str("f64", 3);
	}
	if ((*this)._field_r->_method_is_const()) {
		if ((!((*this)._field_r->_field_constant->_method_is_f64()))) {
			return true;
		}
		{
			auto _match_expr{ (*this)._field_r->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1a37ddd88_Const>>())) { goto _case_end_4353026928; }
			_case_begin_4353026928:;
			{
				return _1a2c73c9c_int_assignable(jule::Str("int", 3),(*this)._field_r) || _1a2c73c9c_int_assignable(jule::Str("uint", 4),(*this)._field_r);
			}
			goto _match_end_4353026496;
			_case_end_4353026928:;
			_case_begin_4353026032:;
			{
				return false;
			}
			goto _match_end_4353026496;
			_case_end_4353026032:;
			_match_end_4353026496:;
		}
	}
	return (!(_1a44da204_is_float(_378849_rk)));
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_float(void) {
	jule::Str _382713_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _382813_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_382713_lk,_382813_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_382713_lk),jule::Any(_382813_rk)}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4353033936; }
		_case_begin_4353033936:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4353033856;
		_case_end_4353033936:;
		_match_end_4353033856:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr)) { goto _case_end_4353043584; }
		_case_begin_4353043584:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4353040656;
		_case_end_4353043584:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4353044064; }
		_case_begin_4353044064:;
		{
			if ((!(_1a44da204_is_int(_382813_rk)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_382713_lk),jule::Any(_382813_rk)}));
				return jule::new_ref<_1a2c74a6c_Data>();
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_4353040656;
		_case_end_4353044064:;
		_case_begin_4353034144:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4353040656;
		_case_end_4353034144:;
		_match_end_4353040656:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _387313_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _387413_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_387313_lk,_387413_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_387313_lk),jule::Any(_387413_rk)}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4353056016; }
		_case_begin_4353056016:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4353052608;
		_case_end_4353056016:;
		_match_end_4353052608:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4353062288; }
		_case_begin_4353062288:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4353059296;
		_case_end_4353062288:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4353062768; }
		_case_begin_4353062768:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4353059296;
		_case_end_4353062768:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4353062112; }
		_case_begin_4353062112:;
		{
			if ((!(_1a2c74a6c_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1a2c74a6c_Data>();
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_4353059296;
		_case_end_4353062112:;
		_case_begin_4353056688:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for unsigned integer type(s)", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4353059296;
		_case_end_4353056688:;
		_match_end_4353059296:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _393213_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _393313_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_393213_lk,_393313_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_393213_lk),jule::Any(_393313_rk)}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4353075968; }
		_case_begin_4353075968:;
		{
			return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
		}
		goto _match_end_4353075872;
		_case_end_4353075968:;
		_match_end_4353075872:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4353084592; }
		_case_begin_4353084592:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4353080944;
		_case_end_4353084592:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4353085072; }
		_case_begin_4353085072:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4353080944;
		_case_end_4353085072:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4353084416; }
		_case_begin_4353084416:;
		{
			if ((!(_1a2c74a6c_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1a2c74a6c_Data>();
			}
			return (*this)._field_l;
		}
		goto _match_end_4353080944;
		_case_end_4353084416:;
		_case_begin_4353079888:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4353080944;
		_case_end_4353079888:;
		_match_end_4353080944:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval_prim(void) {
	jule::Ref<_1a2db8ce3_Prim> _398713_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (!((_398713_prim->_method_is_any()))) { goto _case_end_4353093728; }
		_case_begin_4353093728:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_4353093552;
		_case_end_4353093728:;
		if (!((_398713_prim->_method_is_bool()))) { goto _case_end_4353093840; }
		_case_begin_4353093840:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_4353093552;
		_case_end_4353093840:;
		if (!((_398713_prim->_method_is_str()))) { goto _case_end_4353093952; }
		_case_begin_4353093952:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_4353093552;
		_case_end_4353093952:;
		_match_end_4353093552:;
	}
	jule::Ref<_1a2db8ce3_Prim> _399413_rprim = (*this)._field_r->_field_kind->_method_prim();
	if ((!(jule::real(_399413_rprim)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_398713_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Str _400013_lk = _398713_prim->_method_to_str();
	{
		if (!((_1a44da204_is_float(_400013_lk)))) { goto _case_end_4353106432; }
		_case_begin_4353106432:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_4353099248;
		_case_end_4353106432:;
		if (!((_1a44da204_is_unsig_int(_400013_lk)))) { goto _case_end_4353105776; }
		_case_begin_4353105776:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_4353099248;
		_case_end_4353105776:;
		if (!((_1a44da204_is_sig_int(_400013_lk)))) { goto _case_end_4353105568; }
		_case_begin_4353105568:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_4353099248;
		_case_end_4353105568:;
		_case_begin_4353099360:;
		{
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4353099248;
		_case_end_4353099360:;
		_match_end_4353099248:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_eval(void) {
	{
		if (!(((*this)._field_l->_field_kind->_method_void()))) { goto _case_end_4353112016; }
		_case_begin_4353112016:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4353110112;
		_case_end_4353112016:;
		if (!(((*this)._field_l->_field_kind->_method_is_nil()))) { goto _case_end_4353112496; }
		_case_begin_4353112496:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_4353110112;
		_case_end_4353112496:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_enm())))) { goto _case_end_4353111840; }
		_case_begin_4353111840:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_4353110112;
		_case_end_4353111840:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_ptr()) || jule::real((*this)._field_r->_field_kind->_method_ptr())))) { goto _case_end_4353112224; }
		_case_begin_4353112224:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_4353110112;
		_case_end_4353112224:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_arr())))) { goto _case_end_4353112320; }
		_case_begin_4353112320:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_4353110112;
		_case_end_4353112320:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_slc())))) { goto _case_end_4353111264; }
		_case_begin_4353111264:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_4353110112;
		_case_end_4353111264:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_fnc())))) { goto _case_end_4353111360; }
		_case_begin_4353111360:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_4353110112;
		_case_end_4353111360:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_trt()) || jule::real((*this)._field_r->_field_kind->_method_trt())))) { goto _case_end_4353111456; }
		_case_begin_4353111456:;
		{
			if (jule::real((*this)._field_r->_field_kind->_method_trt())) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			return (*this)._method_eval_trait();
		}
		goto _match_end_4353110112;
		_case_end_4353111456:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_strct())))) { goto _case_end_4353110576; }
		_case_begin_4353110576:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_4353110112;
		_case_end_4353110576:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_prim())))) { goto _case_end_4353110672; }
		_case_begin_4353110672:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_4353110112;
		_case_end_4353110672:;
		_case_begin_4353110288:;
		{
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		goto _match_end_4353110112;
		_case_end_4353110288:;
		_match_end_4353110112:;
	}
}



void _1a2c74a6c_BinopSolver::_method_solve_const(jule::Ref<_1a2c74a6c_Data> _405034_d) {
	{
		if (!(((!(jule::real(_405034_d)))))) { goto _case_end_4353135856; }
		_case_begin_4353135856:;
		{
			return;
		}
		goto _match_end_4353135648;
		_case_end_4353135856:;
		if (!(((!((*this)._field_l->_method_is_const()))) || ((!((*this)._field_r->_method_is_const()))))) { goto _case_end_4353135968; }
		_case_begin_4353135968:;
		{
			jule::drop(_405034_d->_field_constant);
			return;
		}
		goto _match_end_4353135648;
		_case_end_4353135968:;
		_match_end_4353135648:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr)) { goto _case_end_4353138016; }
		_case_begin_4353138016:;
		{
			_405034_d->_field_constant=_1a37ddd88_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4353138336;
		_case_end_4353138016:;
		if (!((jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4353138752; }
		_case_begin_4353138752:;
		{
			_405034_d->_field_constant=_1a37ddd88_Const::_static_method_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant))));
		}
		goto _match_end_4353138336;
		_case_end_4353138752:;
		if (!((jule::Str("::", 2)) == _match_expr)) { goto _case_end_4353139792; }
		_case_begin_4353139792:;
		{
			_405034_d->_field_constant=_1a37ddd88_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_or((*this)._field_r->_field_constant));
		}
		goto _match_end_4353138336;
		_case_end_4353139792:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4353139888; }
		_case_begin_4353139888:;
		{
			_405034_d->_field_constant=_1a37ddd88_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_and((*this)._field_r->_field_constant));
		}
		goto _match_end_4353138336;
		_case_end_4353139888:;
		if (!((jule::Str(">", 1)) == _match_expr)) { goto _case_end_4353140000; }
		_case_begin_4353140000:;
		{
			_405034_d->_field_constant=_1a37ddd88_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant));
		}
		goto _match_end_4353138336;
		_case_end_4353140000:;
		if (!((jule::Str("<", 1)) == _match_expr)) { goto _case_end_4353140112; }
		_case_begin_4353140112:;
		{
			_405034_d->_field_constant=_1a37ddd88_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant));
		}
		goto _match_end_4353138336;
		_case_end_4353140112:;
		if (!((jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4353140224; }
		_case_begin_4353140224:;
		{
			_405034_d->_field_constant=_1a37ddd88_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4353138336;
		_case_end_4353140224:;
		if (!((jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4353140336; }
		_case_begin_4353140336:;
		{
			_405034_d->_field_constant=_1a37ddd88_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4353138336;
		_case_end_4353140336:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4353140448; }
		_case_begin_4353140448:;
		{
			(*this)._field_l->_field_constant->_method_add((*this)._field_r->_field_constant);
			_405034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4353138336;
		_case_end_4353140448:;
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4353140560; }
		_case_begin_4353140560:;
		{
			(*this)._field_l->_field_constant->_method_sub((*this)._field_r->_field_constant);
			_405034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4353138336;
		_case_end_4353140560:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4353140672; }
		_case_begin_4353140672:;
		{
			(*this)._field_l->_field_constant->_method_mul((*this)._field_r->_field_constant);
			_405034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4353138336;
		_case_end_4353140672:;
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4353140784; }
		_case_begin_4353140784:;
		{
			jule::Bool _409917_ok = (*this)._field_l->_field_constant->_method_div((*this)._field_r->_field_constant);
			if ((!(_409917_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_405034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4353138336;
		_case_end_4353140784:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4353140896; }
		_case_begin_4353140896:;
		{
			jule::Bool _410617_ok = (*this)._field_l->_field_constant->_method_mod((*this)._field_r->_field_constant);
			if ((!(_410617_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_405034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4353138336;
		_case_end_4353140896:;
		if (!((jule::Str("|", 1)) == _match_expr)) { goto _case_end_4353141008; }
		_case_begin_4353141008:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*this)._field_r->_field_constant);
			_405034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4353138336;
		_case_end_4353141008:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4353141120; }
		_case_begin_4353141120:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*this)._field_r->_field_constant);
			_405034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4353138336;
		_case_end_4353141120:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4353141232; }
		_case_begin_4353141232:;
		{
			(*this)._field_l->_field_constant->_method_xor((*this)._field_r->_field_constant);
			_405034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4353138336;
		_case_end_4353141232:;
		if (!((jule::Str("<<", 2)) == _match_expr)) { goto _case_end_4353141344; }
		_case_begin_4353141344:;
		{
			(*this)._field_l->_field_constant->_method_lshift((*this)._field_r->_field_constant);
			_405034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4353138336;
		_case_end_4353141344:;
		if (!((jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4353141456; }
		_case_begin_4353141456:;
		{
			(*this)._field_l->_field_constant->_method_rshift((*this)._field_r->_field_constant);
			_405034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4353138336;
		_case_end_4353141456:;
		_match_end_4353138336:;
	}
	_405034_d->_field_model=jule::Any(_405034_d->_field_constant);
}



void _1a2c74a6c_BinopSolver::_method_post_const(jule::Ref<_1a2c74a6c_Data> _413629_d) {
	if ((!(jule::real(_413629_d)))) {
		return;
	}
	_1a2c74a6c_normalize_bitsize(_413629_d);
}



void _1a2c74a6c_BinopSolver::_method_prepare_data(jule::Ref<_1a2c74a6c_Data> _414431_d) {
	if (jule::real(_414431_d) && jule::real(_414431_d->_field_kind->_method_ref())) {
		_414431_d->_field_kind=_414431_d->_field_kind->_method_ref()->_field_elem;
	}
}



void _1a2c74a6c_BinopSolver::_method_prepare_eval(void) {
	(*this)._method_prepare_data((*this)._field_r);
	(*this)._method_prepare_data((*this)._field_l);
}



void _1a2c74a6c_BinopSolver::_method_check_data(jule::Ref<_1a2c74a6c_Data> _415533_d) {
	jule::Ref<_1e1737e81_FnIns> _415613_f = _415533_d->_field_kind->_method_fnc();
	if ((jule::real(_415613_f) && jule::real(_415613_f->_field_decl)) && _415613_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>({}));
	}
}



void _1a2c74a6c_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_solve_explicit(jule::Ref<_1a2c74a6c_Data> _416737_l,jule::Ref<_1a2c74a6c_Data> _416751_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_416737_l,_416751_r);
	(*this)._method_prepare_eval();
	(*this)._method_check_datas();
	jule::Ref<_1a2c74a6c_Data> _417317_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_416737_l,_416751_r);
	(*this)._method_solve_const(_417317_d);
	(*this)._method_post_const(_417317_d);
	if (jule::real(_417317_d)) {
		_417317_d->_field_lvalue=_417317_d->_field_kind->_method_lvalue();
		if ((!(_417317_d->_method_is_const()))) {
			_417317_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_BinopExprModel>(new( std::nothrow ) _1e2a30c17_BinopExprModel(_416737_l->_field_model,_416751_r->_field_model,(*this)._field_op._field_kind)));
		}
	}
	return _417317_d;
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_BinopSolver::_method_solve(jule::Ref<_1e16025cb_BinopExpr> _419328_op) {
	jule::Ref<_1a2c74a6c_Data> _419417_l = (*this)._field_e->_method_eval_expr_kind(_419328_op->_field_left);
	if ((!(jule::real(_419417_l))) || (!(jule::real(_419417_l->_field_kind)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1a2c74a6c_Data> _419917_r = (*this)._field_e->_method_eval_expr_kind(_419328_op->_field_right);
	if ((!(jule::real(_419917_r))) || (!(jule::real(_419917_r->_field_kind)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	(*this)._field_op=_419328_op->_field_op;
	jule::Ref<_1a2c74a6c_Data> _420617_d = (*this)._method_solve_explicit(_419417_l,_419917_r);
	if ((jule::real(_420617_d) && _419417_l->_field_is_rune) && _419917_r->_field_is_rune) {
		_420617_d->_field_is_rune=true;
	}
	return _420617_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2c74a6c_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2db8ce3_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_Comment::_method_is_directive(void) {
	return (*this)._field_text.has_prefix(jule::Str("jule:", 5));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



jule::Bool _1e16025cb_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



void _1a2db8ce3_TypeChecker::_method_push_err(_1e15a2bb9_Token _69127_token,jule::Str _69141_fmt,jule::Slice<jule::Any> _69154_args) {
	(*this)._field_s->_method_push_err(_69127_token,_69141_fmt,_69154_args);
}



jule::Ref<_1a2db8ce3_Prim> _1a2db8ce3_TypeChecker::_method_build_prim(jule::Ref<_1e16025cb_IdentTypeDecl>& _69530_decl) {
	if ((!(_1a2db8ce3_is_prim(_69530_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2db8ce3_Prim>();
	}
	if (_69530_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_69530_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_69530_decl->_field_ident)}));
		return jule::new_ref<_1a2db8ce3_Prim>();
	}
	return _1a2db8ce3_build_prim_type(_69530_decl->_field_ident);
}



void _1a2db8ce3_TypeChecker::_method_push_cycle_error(jule::Any _70931_def1,jule::Any _70942_def2,jule::Str& _70958_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _71213_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _71229_def) mutable -> jule::Str {
		{
			auto _match_expr{ _71229_def };
			if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_TypeAlias>>())) { goto _case_end_4984539264; }
			_case_begin_4984539264:;
			{
				return _71229_def.operator jule::Ref<_1a2db8ce3_TypeAlias>()->_field_ident;
			}
			goto _match_end_4984537760;
			_case_end_4984539264:;
			if (!(_match_expr.type_is<jule::Ref<_1e177440c_Struct>>())) { goto _case_end_4984538832; }
			_case_begin_4984538832:;
			{
				return _71229_def.operator jule::Ref<_1e177440c_Struct>()->_field_ident;
			}
			goto _match_end_4984537760;
			_case_end_4984538832:;
			if (!(_match_expr.type_is<jule::Ref<_1e2a21d4b_Enum>>())) { goto _case_end_4984538928; }
			_case_begin_4984538928:;
			{
				return _71229_def.operator jule::Ref<_1e2a21d4b_Enum>()->_field_ident;
			}
			goto _match_end_4984537760;
			_case_end_4984538928:;
			_case_begin_4984537568:;
			{
				return jule::Str();
			}
			goto _match_end_4984537760;
			_case_end_4984537568:;
			_match_end_4984537760:;
		}
	});
	jule::Str _72113_def1_ident = _71213_get_ident(_70931_def1);
	jule::Str _72213_def2_ident = _71213_get_ident(_70942_def2);
	jule::Str _72313_refers_to = _1ec8e8025_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_72113_def1_ident),jule::Any(_72213_def2_ident)}));
	_70958_message=((_1e28b6a59_str_repeat(jule::Str(" ", 1),4LL) + _72313_refers_to) + jule::Str("\n", 1)) + _70958_message;
}



jule::Bool _1a2db8ce3_TypeChecker::_method_are_equals_cross_cycle_data_0(jule::Any _72745_a,jule::Any _72753_b) {
	{
		auto _match_expr{ _72745_a };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_TypeAlias>>())) { goto _case_end_4984563040; }
		_case_begin_4984563040:;
		{
			{
				auto _match_expr{ _72753_b };
				if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_TypeAlias>>())) { goto _case_end_4984563712; }
				_case_begin_4984563712:;
				{
					return (_72745_a.operator jule::Ref<_1a2db8ce3_TypeAlias>()).alloc == (_72753_b.operator jule::Ref<_1a2db8ce3_TypeAlias>()).alloc;
				}
				goto _match_end_4984562032;
				_case_end_4984563712:;
				_case_begin_4984563184:;
				{
					return false;
				}
				goto _match_end_4984562032;
				_case_end_4984563184:;
				_match_end_4984562032:;
			}
		}
		goto _match_end_4984561344;
		_case_end_4984563040:;
		_case_begin_4984561216:;
		{
			return false;
		}
		goto _match_end_4984561344;
		_case_end_4984561216:;
		_match_end_4984561344:;
	}
}

jule::Bool _1a2db8ce3_TypeChecker::_method_are_equals_cross_cycle_data_1(jule::Any _72745_a,jule::Any _72753_b) {
	{
		auto _match_expr{ _72745_a };
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_Struct>>())) { goto _case_end_4984576144; }
		_case_begin_4984576144:;
		{
			{
				auto _match_expr{ _72753_b };
				if (!(_match_expr.type_is<jule::Ref<_1e177440c_Struct>>())) { goto _case_end_4984576816; }
				_case_begin_4984576816:;
				{
					return (_72745_a.operator jule::Ref<_1e177440c_Struct>()).alloc == (_72753_b.operator jule::Ref<_1e177440c_Struct>()).alloc;
				}
				goto _match_end_4984575136;
				_case_end_4984576816:;
				_case_begin_4984576288:;
				{
					return false;
				}
				goto _match_end_4984575136;
				_case_end_4984576288:;
				_match_end_4984575136:;
			}
		}
		goto _match_end_4984574448;
		_case_end_4984576144:;
		_case_begin_4984574320:;
		{
			return false;
		}
		goto _match_end_4984574448;
		_case_end_4984574320:;
		_match_end_4984574448:;
	}
}



jule::Bool _1a2db8ce3_TypeChecker::_method_check_cross_cycle(jule::Any _74032_decl,jule::Str& _74048_message) {
	{
		auto _match_expr{ _74032_decl };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_TypeAlias>>())) { goto _case_end_4984548224; }
		_case_begin_4984548224:;
		{
			jule::Ref<_1a2db8ce3_TypeAlias> _74317_ta = _74032_decl.operator jule::Ref<_1a2db8ce3_TypeAlias>();
			{
				auto expr = _74317_ta->_field_refers;
				auto it = expr.begin();
				_iter_begin_4984551520:;
				if (it != expr.end()) {
					jule::Any _1a2db8ce3_d = *it;
					{
						{
							auto _match_expr{ _1a2db8ce3_d };
							if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_TypeAlias>>())) { goto _case_end_4984552688; }
							_case_begin_4984552688:;
							{
								if ((*this)._method_are_equals_cross_cycle_data_0(_1a2db8ce3_d,(*this)._field_referencer->_field_owner)) {
									(*this)._method_push_cycle_error(jule::Any(_74317_ta),_1a2db8ce3_d,_74048_message);
									return false;
								}
							}
							goto _match_end_4984553136;
							_case_end_4984552688:;
							_match_end_4984553136:;
						}
						if ((!((*this)._method_check_cross_cycle(_1a2db8ce3_d,_74048_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_74317_ta),_1a2db8ce3_d,_74048_message);
							return false;
						}
					}
					_iter_next_4984551520:;
					++it;
					goto _iter_begin_4984551520;
				}
				_iter_end_4984551520:;
			}
		}
		goto _match_end_4984548320;
		_case_end_4984548224:;
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_Struct>>())) { goto _case_end_4984548640; }
		_case_begin_4984548640:;
		{
			jule::Ref<_1e177440c_Struct> _76017_s = _74032_decl.operator jule::Ref<_1e177440c_Struct>();
			{
				auto expr = _76017_s->_field_depends;
				auto it = expr.begin();
				_iter_begin_4984552496:;
				if (it != expr.end()) {
					jule::Ref<_1e177440c_Struct> _1a2db8ce3_d = *it;
					{
						if ((*this)._method_are_equals_cross_cycle_data_1(jule::Any(_1a2db8ce3_d),(*this)._field_referencer->_field_owner)) {
							(*this)._method_push_cycle_error(jule::Any(_76017_s),jule::Any(_1a2db8ce3_d),_74048_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(jule::Any(_1a2db8ce3_d),_74048_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_76017_s),jule::Any(_1a2db8ce3_d),_74048_message);
							return false;
						}
					}
					_iter_next_4984552496:;
					++it;
					goto _iter_begin_4984552496;
				}
				_iter_end_4984552496:;
			}
		}
		goto _match_end_4984548320;
		_case_end_4984548640:;
		_match_end_4984548320:;
	}
	return true;
}



jule::Bool _1a2db8ce3_TypeChecker::_method_check_illegal_cycles(jule::Ref<_1e16025cb_IdentTypeDecl>& _78240_ident,jule::Any _78267_decl) {
	jule::Bool _78280_ok = jule::Bool();
	if ((!(jule::real((*this)._field_referencer)))) {
		_78280_ok = true;
		return _78280_ok;
	}
	{
		auto _match_expr{ _78267_decl };
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_Struct>>())) { goto _case_end_4984582352; }
		_case_begin_4984582352:;
		{
			if ((*this)._field_not_plain) {
				_78280_ok = true;
				return _78280_ok;
			}
		}
		goto _match_end_4984582000;
		_case_end_4984582352:;
		_match_end_4984582000:;
	}
	if ((*this)._field_referencer->_field_owner == _78267_decl) {
		(*this)._method_push_err(_78240_ident->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_78280_ok = false;
		return _78280_ok;
	}
	jule::Str _80117_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_78267_decl,_80117_message)))) {
		jule::Str _80421_err_msg = _80117_message;
		_80117_message=jule::Str();
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_78267_decl,_80117_message);
		_80421_err_msg=_80421_err_msg + _80117_message;
		(*this)._method_push_err(_78240_ident->_field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_80421_err_msg)}));
		_78280_ok = false;
		return _78280_ok;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_TypeAlias>>())) { goto _case_end_4984592672; }
		_case_begin_4984592672:;
		{
			{
				(*((*this)._field_referencer->_field_refs))=jule::append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_78267_decl}));
			}
		}
		goto _match_end_4984592976;
		_case_end_4984592672:;
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_Struct>>())) { goto _case_end_4984593056; }
		_case_begin_4984593056:;
		{
			{
				auto _match_expr{ _78267_decl };
				if (!(_match_expr.type_is<jule::Ref<_1e177440c_Struct>>())) { goto _case_end_4984593184; }
				_case_begin_4984593184:;
				{
					jule::Ref<_1e177440c_Struct> _81925_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_1e177440c_Struct>();
					_81925_s->_field_depends=jule::append(_81925_s->_field_depends,jule::Slice<jule::Ref<_1e177440c_Struct>>({_78267_decl.operator jule::Ref<_1e177440c_Struct>()}));
				}
				goto _match_end_4984594112;
				_case_end_4984593184:;
				_match_end_4984594112:;
			}
		}
		goto _match_end_4984592976;
		_case_end_4984593056:;
		_match_end_4984592976:;
	}
	_78280_ok = true;
	return _78280_ok;
}



jule::Trait<_1a2db8ce3_Kind> _1a2db8ce3_TypeChecker::_method_from_type_alias(jule::Ref<_1e16025cb_IdentTypeDecl>& _82735_decl,jule::Ref<_1a2db8ce3_TypeAlias>& _82762_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_82762_ta->_field_public,_82762_ta->_field_token)))) {
		(*this)._method_push_err(_82735_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_82735_decl->_field_ident)}));
		return nullptr;
	}
	_82762_ta->_field_used=true;
	if (_82735_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_82735_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_82735_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _84017_ok = (*this)._method_check_illegal_cycles(_82735_decl,jule::Any(_82762_ta));
	if ((!(_84017_ok))) {
		return nullptr;
	}
	_84017_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_82762_ta,(*this)._field_lookup);
	if ((!(_84017_ok))) {
		return nullptr;
	}
	jule::Ref<_1a2db8ce3_TypeKind> _85117_kind = _82762_ta->_field_kind->_field_kind->_method_clone();
	_85117_kind->_field_generic=_82762_ta->_field_generic;
	if (_82762_ta->_field_cpp_linked) {
		_85117_kind->_field_cpp_ident=_82762_ta->_field_ident;
	}
	return _85117_kind;
}



jule::Ref<_1e2a21d4b_Enum> _1a2db8ce3_TypeChecker::_method_from_enum(jule::Ref<_1e16025cb_IdentTypeDecl>& _86129_decl,jule::Ref<_1e2a21d4b_Enum>& _86156_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_86156_e->_field_public,_86156_e->_field_token)))) {
		(*this)._method_push_err(_86129_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_86129_decl->_field_ident)}));
		return jule::new_ref<_1e2a21d4b_Enum>();
	}
	if (_86129_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_86129_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_86129_decl->_field_ident)}));
		return jule::new_ref<_1e2a21d4b_Enum>();
	}
	return _86156_e;
}



jule::Bool _1a2db8ce3_TypeChecker::_method_check_struct_ins(jule::Ref<_1e177440c_StructIns>& _87540_ins,_1e15a2bb9_Token& _87558_error_token) {
	jule::Bool _87580_ok = jule::Bool();
	if (_87540_ins->_field_checked) {
		_87580_ok = true;
		return _87580_ok;
	}
	_87540_ins->_field_checked=true;
	if (jule::real((*this)._field_referencer) && ((*this)._field_referencer->_field_owner == _87540_ins->_field_decl)) {
		_87580_ok = true;
		return _87580_ok;
	}
	jule::Ref<_1a2d05801_SymbolTable> _88917_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_88917_old_file);
	});
	jule::Ref<_1a2d05801_SymbolTable> _89217_file = _1e2a7c2a2_find_file((*this)._field_s->_field_files,_87540_ins->_field_decl->_field_token._field_file);
	if (jule::real(_89217_file)) {
		(*this)._field_s->_method_set_current_file(_89217_file);
	}
	jule::Ref<_1a2db8ce3_Referencer> _89717_referencer = jule::new_struct<_1a2db8ce3_Referencer>(new( std::nothrow ) _1a2db8ce3_Referencer(_87540_ins->_field_decl->_field_ident,jule::Any(_87540_ins->_field_decl),nullptr));
	jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>> _90217_generics = jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>::alloc(static_cast<jule::I64>(_87540_ins->_field_generics.len()));
	{
		auto expr = _87540_ins->_field_generics;
		auto it = expr.begin();
		_iter_begin_4984642016:;
		if (it != expr.end()) {
			jule::Int _1a2db8ce3_i = it - expr.begin();
			jule::Ref<_1a2db8ce3_TypeKind> _1a2db8ce3_g = *it;
			{
				_90217_generics[_1a2db8ce3_i]=jule::new_struct<_1a2db8ce3_TypeAlias>(new( std::nothrow ) _1a2db8ce3_TypeAlias(jule::Ref<_1e16025cb_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1e15a2bb9_Token(),_87540_ins->_field_decl->_field_generics[_1a2db8ce3_i]->_field_ident,jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),_1a2db8ce3_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4984642016:;
			++it;
			_1a2db8ce3_i++;
			goto _iter_begin_4984642016;
		}
		_iter_end_4984642016:;
	}
	jule::Ref<_1a2d05801_SymbolTable> _91217_old_sema_file = _87540_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_87540_ins->_field_decl->_field_sema->_method_set_current_file(_91217_old_sema_file);
	});
	_1a2db8ce3_TypeChecker _91517_tc = _1a2db8ce3_TypeChecker(_87540_ins->_field_decl->_field_sema,_87540_ins->_field_decl->_field_sema,_89717_referencer,_1e15a2bb9_Token(),jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>(),_90217_generics,jule::Bool());
	{
		auto expr = _87540_ins->_field_fields;
		auto it = expr.begin();
		_iter_begin_4984651280:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_FieldIns> _1a2db8ce3_field = *it;
			{
				jule::Ref<_1a2db8ce3_TypeKind> _92421_kind = _91517_tc._method_check_decl(_1a2db8ce3_field->_field_decl->_field_kind->_field_decl);
				_87580_ok=jule::real(_92421_kind);
				if ((jule::real(_87540_ins->_field_decl->_field_sema) && ((*this)._field_s != _87540_ins->_field_decl->_field_sema)) && (_87540_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=jule::append((*this)._field_s->_field_errors,_87540_ins->_field_decl->_field_sema->_field_errors);
				}
				if ((!(_87580_ok))) {
					_87580_ok = false;
					return _87580_ok;
				}
				_1a2db8ce3_field->_field_kind=_92421_kind;
				if (_1a2db8ce3_field->_field_kind->_method_mutable()) {
					_87540_ins->_field_mutable=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_87540_ins);
				}
			}
			_iter_next_4984651280:;
			++it;
			goto _iter_begin_4984651280;
		}
		_iter_end_4984651280:;
	}
	if (_87540_ins->_field_generics.len() > 0LL) {
		{
			auto expr = _87540_ins->_field_methods;
			auto it = expr.begin();
			_iter_begin_4984662608:;
			if (it != expr.end()) {
				jule::Ref<_1e1737e81_Fn> _1a2db8ce3_m = *it;
				{
					(*this)._field_s->_method_check_type_method(_87540_ins,_1a2db8ce3_m);
				}
				_iter_next_4984662608:;
				++it;
				goto _iter_begin_4984662608;
			}
			_iter_end_4984662608:;
		}
	}
	_87580_ok = true;
	return _87580_ok;
}



void _1a2db8ce3_TypeChecker::_method_append_used_struct_reference(jule::Ref<_1e177440c_Struct>& _95152_s) {
	if ((!(jule::real((*this)._field_referencer)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_Struct>>())) { goto _case_end_4984666416; }
		_case_begin_4984666416:;
		{
			jule::Ref<_1e177440c_Struct> _95821_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_1e177440c_Struct>();
			if ((!(_95821_ref_s->_method_is_uses(_95152_s)))) {
				_95821_ref_s->_field_uses=jule::append(_95821_ref_s->_field_uses,jule::Slice<jule::Ref<_1e177440c_Struct>>({_95152_s}));
			}
		}
		goto _match_end_4984666928;
		_case_end_4984666416:;
		_match_end_4984666928:;
	}
}



jule::Ref<_1e177440c_StructIns> _1a2db8ce3_TypeChecker::_method_from_struct(jule::Ref<_1e16025cb_IdentTypeDecl>& _96535_decl,jule::Ref<_1e177440c_Struct>& _96562_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_96562_s->_field_public,_96562_s->_field_token)))) {
		(*this)._method_push_err(_96535_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_96535_decl->_field_ident)}));
		return jule::new_ref<_1e177440c_StructIns>();
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return jule::new_ref<_1e177440c_StructIns>();
	}
	jule::Bool _97617_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_96535_decl,jule::Any(_96562_s));
	if ((!(_97617_ok))) {
		return jule::new_ref<_1e177440c_StructIns>();
	}
	(*this)._method_append_used_struct_reference(_96562_s);
	jule::Ref<_1e177440c_StructIns> _98217_ins = _96562_s->_method_instance();
	_98217_ins->_field_generics=jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>::alloc(static_cast<jule::I64>(_96535_decl->_field_generics.len()));
	jule::Ref<_1a2db8ce3_Referencer> _98417_referencer = (*this)._field_referencer;
	jule::drop((*this)._field_referencer);
	{
		auto expr = _96535_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4984686112:;
		if (it != expr.end()) {
			jule::Int _1a2db8ce3_i = it - expr.begin();
			jule::Ref<_1e16025cb_TypeDecl> _1a2db8ce3_g = *it;
			{
				jule::Ref<_1a2db8ce3_TypeKind> _98721_kind = (*this)._method_build(_1a2db8ce3_g->_field_kind);
				if ((!(jule::real(_98721_kind)))) {
					_97617_ok=false;
					goto _iter_next_4984686112;
				}
				_98217_ins->_field_generics[_1a2db8ce3_i]=_98721_kind;
			}
			_iter_next_4984686112:;
			++it;
			_1a2db8ce3_i++;
			goto _iter_begin_4984686112;
		}
		_iter_end_4984686112:;
	}
	(*this)._field_referencer=_98417_referencer;
	if ((!(_97617_ok))) {
		return jule::new_ref<_1e177440c_StructIns>();
	}
	_97617_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_98217_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_98217_ins->_field_generics.len()),_96535_decl->_field_token);
	if ((!(_97617_ok))) {
		return jule::new_ref<_1e177440c_StructIns>();
	}
	jule::Ref<_1e177440c_StructIns> _100617_exist_instance = _96562_s->_method_append_instance(_98217_ins);
	if (jule::real(_100617_exist_instance)) {
		return _100617_exist_instance;
	}
	_97617_ok=(*this)._method_check_struct_ins(_98217_ins,_96535_decl->_field_token);
	if ((!(_97617_ok))) {
		return jule::new_ref<_1e177440c_StructIns>();
	}
	return _98217_ins;
}



jule::Trait<_1a2db8ce3_Kind> _1a2db8ce3_TypeChecker::_method_get_def(jule::Ref<_1e16025cb_IdentTypeDecl>& _102131_decl) {
	{
		auto expr = (*this)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_4984703504:;
		if (it != expr.end()) {
			jule::Ref<_1e16025cb_GenericDecl> _1a2db8ce3_g = *it;
			{
				if (_1a2db8ce3_g->_field_ident == _102131_decl->_field_ident) {
					return _1a2db8ce3_build_prim_type(_1a2db8ce3_g->_field_ident);
				}
			}
			_iter_next_4984703504:;
			++it;
			goto _iter_begin_4984703504;
		}
		_iter_end_4984703504:;
	}
	{
		auto expr = (*this)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_4984706960:;
		if (it != expr.end()) {
			jule::Ref<_1a2db8ce3_TypeAlias> _1a2db8ce3_g = *it;
			{
				if (_1a2db8ce3_g->_field_ident == _102131_decl->_field_ident) {
					jule::Ref<_1e177440c_StructIns> _103025_st = _1a2db8ce3_g->_field_kind->_field_kind->_method_strct();
					if (jule::real(_103025_st)) {
						jule::Bool _103225_ok = (*this)._method_check_illegal_cycles(_102131_decl,jule::Any(_103025_st->_field_decl));
						if ((!(_103225_ok))) {
							return nullptr;
						}
					}
					return _1a2db8ce3_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_4984706960:;
			++it;
			goto _iter_begin_4984706960;
		}
		_iter_end_4984706960:;
	}
	if ((!(_102131_decl->_field_cpp_linked))) {
		jule::Ref<_1e2a21d4b_Enum> _104221_e = (*this)._field_lookup.get()._method_find_enum(_102131_decl->_field_ident);
		if (jule::real(_104221_e)) {
			return (*this)._method_from_enum(_102131_decl,_104221_e);
		}
		jule::Ref<_1e2a1e563_Trait> _104721_t = (*this)._field_lookup.get()._method_find_trait(_102131_decl->_field_ident);
		if ((!(jule::real(_104721_t)))) {
			_104721_t=_1a36e0bad_find_builtin_trait(_102131_decl->_field_ident);
		}
		if (jule::real(_104721_t)) {
			if ((!((*this)._field_s->_method_is_accessible_define(_104721_t->_field_public,_104721_t->_field_token)))) {
				(*this)._method_push_err(_102131_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_102131_decl->_field_ident)}));
				return nullptr;
			}
			if (_102131_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_102131_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_102131_decl->_field_ident)}));
				return nullptr;
			}
			return _104721_t;
		}
	}
	jule::Ref<_1e177440c_Struct> _106517_s = (*this)._field_lookup.get()._method_find_struct(_102131_decl->_field_ident,_102131_decl->_field_cpp_linked);
	if (jule::real(_106517_s)) {
		return (*this)._method_from_struct(_102131_decl,_106517_s);
	}
	jule::Ref<_1a2db8ce3_TypeAlias> _107017_ta = (*this)._field_lookup.get()._method_find_type_alias(_102131_decl->_field_ident,_102131_decl->_field_cpp_linked);
	if ((!(jule::real(_107017_ta)))) {
		_107017_ta=_1a36e0bad_find_builtin_type_alias(_102131_decl->_field_ident);
	}
	if (jule::real(_107017_ta)) {
		return (*this)._method_from_type_alias(_102131_decl,_107017_ta);
	}
	(*this)._method_push_err(_102131_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_102131_decl->_field_ident)}));
	return nullptr;
}



jule::Trait<_1a2db8ce3_Kind> _1a2db8ce3_TypeChecker::_method_build_ident(jule::Ref<_1e16025cb_IdentTypeDecl> _108234_decl) {
	{
		if (!((_1a2db8ce3_is_prim(_108234_decl->_field_ident)))) { goto _case_end_4984737232; }
		_case_begin_4984737232:;
		{
			return (*this)._method_build_prim(_108234_decl);
		}
		goto _match_end_4984735728;
		_case_end_4984737232:;
		_case_begin_4984735888:;
		{
			return (*this)._method_get_def(_108234_decl);
		}
		goto _match_end_4984735728;
		_case_end_4984735888:;
		_match_end_4984735728:;
	}
}



jule::Ref<_1a2db8ce3_Ref> _1a2db8ce3_TypeChecker::_method_build_ref_from_type(jule::Ref<_1a2db8ce3_TypeKind>& _108943_elem) {
	{
		if (!(((!(jule::real(_108943_elem)))))) { goto _case_end_4984739968; }
		_case_begin_4984739968:;
		{
			return jule::new_ref<_1a2db8ce3_Ref>();
		}
		goto _match_end_4984736336;
		_case_end_4984739968:;
		if (!((jule::real(_108943_elem->_method_strct())))) { goto _case_end_4984740064; }
		_case_begin_4984740064:;
		{
			jule::Ref<_1e177440c_StructIns> _109617_s = _108943_elem->_method_strct();
			if (jule::real(_109617_s->_field_decl) && _109617_s->_field_decl->_field_cpp_linked) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1a2db8ce3_Ref>();
			}
		}
		goto _match_end_4984736336;
		_case_end_4984740064:;
		if (!((jule::real(_108943_elem->_method_ref())))) { goto _case_end_4984740160; }
		_case_begin_4984740160:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to another reference", 48),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_Ref>();
		}
		goto _match_end_4984736336;
		_case_end_4984740160:;
		if (!((jule::real(_108943_elem->_method_ptr())))) { goto _case_end_4984740256; }
		_case_begin_4984740256:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to pointer", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_Ref>();
		}
		goto _match_end_4984736336;
		_case_end_4984740256:;
		if (!((jule::real(_108943_elem->_method_enm())))) { goto _case_end_4984740352; }
		_case_begin_4984740352:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to enum", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_Ref>();
		}
		goto _match_end_4984736336;
		_case_end_4984740352:;
		if (!((jule::real(_108943_elem->_method_arr())))) { goto _case_end_4984740464; }
		_case_begin_4984740464:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to array", 36),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_Ref>();
		}
		goto _match_end_4984736336;
		_case_end_4984740464:;
		_match_end_4984736336:;
	}
	return jule::new_struct<_1a2db8ce3_Ref>(new( std::nothrow ) _1a2db8ce3_Ref(_108943_elem));
}



jule::Ref<_1a2db8ce3_Ref> _1a2db8ce3_TypeChecker::_method_build_ref(jule::Ref<_1e16025cb_RefTypeDecl> _112432_decl) {
	jule::Bool _112513_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_112513_not_plain;
	});
	jule::Ref<_1a2db8ce3_TypeKind> _112917_elem = (*this)._method_check_decl(_112432_decl->_field_elem);
	return (*this)._method_build_ref_from_type(_112917_elem);
}



jule::Ref<_1a2db8ce3_Ptr> _1a2db8ce3_TypeChecker::_method_build_ptr_from_type(jule::Ref<_1a2db8ce3_TypeKind>& _113343_elem) {
	{
		if (!(((!(jule::real(_113343_elem)))))) { goto _case_end_4984761440; }
		_case_begin_4984761440:;
		{
			return jule::new_ref<_1a2db8ce3_Ptr>();
		}
		goto _match_end_4984759632;
		_case_end_4984761440:;
		if (!((jule::real(_113343_elem->_method_ref())))) { goto _case_end_4984761552; }
		_case_begin_4984761552:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to reference", 34),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_Ptr>();
		}
		goto _match_end_4984759632;
		_case_end_4984761552:;
		if (!((jule::real(_113343_elem->_method_enm())))) { goto _case_end_4984761664; }
		_case_begin_4984761664:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to enum", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_Ptr>();
		}
		goto _match_end_4984759632;
		_case_end_4984761664:;
		if (!((jule::real(_113343_elem->_method_arr()) && _113343_elem->_method_arr()->_field_auto))) { goto _case_end_4984761776; }
		_case_begin_4984761776:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_Ptr>();
		}
		goto _match_end_4984759632;
		_case_end_4984761776:;
		_match_end_4984759632:;
	}
	return jule::new_struct<_1a2db8ce3_Ptr>(new( std::nothrow ) _1a2db8ce3_Ptr(_113343_elem));
}



jule::Ref<_1a2db8ce3_Ptr> _1a2db8ce3_TypeChecker::_method_build_ptr(jule::Ref<_1e16025cb_PtrTypeDecl> _115732_decl) {
	jule::Bool _115813_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_115813_not_plain;
	});
	jule::Ref<_1a2db8ce3_TypeKind> _116217_elem = jule::new_ref<_1a2db8ce3_TypeKind>();
	if ((!(_115732_decl->_method_is_unsafe()))) {
		_116217_elem=(*this)._method_check_decl(_115732_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_116217_elem);
	}
	return jule::new_struct<_1a2db8ce3_Ptr>(new( std::nothrow ) _1a2db8ce3_Ptr(_116217_elem));
}



jule::Ref<_1a2db8ce3_Slc> _1a2db8ce3_TypeChecker::_method_build_slc(jule::Ref<_1e16025cb_SlcTypeDecl> _117432_decl) {
	jule::Bool _117513_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_117513_not_plain;
	});
	jule::Ref<_1a2db8ce3_TypeKind> _117917_elem = (*this)._method_check_decl(_117432_decl->_field_elem);
	{
		if (!(((!(jule::real(_117917_elem)))))) { goto _case_end_4984783456; }
		_case_begin_4984783456:;
		{
			return jule::new_ref<_1a2db8ce3_Slc>();
		}
		goto _match_end_4984783280;
		_case_end_4984783456:;
		if (!((jule::real(_117917_elem->_method_arr()) && _117917_elem->_method_arr()->_field_auto))) { goto _case_end_4984783552; }
		_case_begin_4984783552:;
		{
			(*this)._method_push_err(_117432_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_Slc>();
		}
		goto _match_end_4984783280;
		_case_end_4984783552:;
		_match_end_4984783280:;
	}
	return jule::new_struct<_1a2db8ce3_Slc>(new( std::nothrow ) _1a2db8ce3_Slc(_117917_elem));
}



jule::Ref<_1a2db8ce3_Arr> _1a2db8ce3_TypeChecker::_method_build_arr(jule::Ref<_1e16025cb_ArrTypeDecl> _119632_decl) {
	jule::Bool _119713_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_119713_not_plain;
	});
	jule::Int _120117_n = 0LL;
	if ((!(_119632_decl->_method_auto_sized()))) {
		jule::Ref<_1a2c74a6c_Data> _120421_size = (*this)._field_s->_method_eval((*this)._field_lookup)->_method_eval_expr(_119632_decl->_field_size);
		if ((!(jule::real(_120421_size)))) {
			return jule::new_ref<_1a2db8ce3_Arr>();
		}
		if ((!(_120421_size->_method_is_const()))) {
			(*this)._method_push_err(_119632_decl->_field_size->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_Arr>();
		} else if ((!(jule::real(_120421_size->_field_kind->_method_prim()))) || (!(_1a44da204_is_int(_120421_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_119632_decl->_field_size->_field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_Arr>();
		}
		_120117_n=static_cast<jule::Int>(_120421_size->_field_constant->_method_as_i64());
		if (_120117_n < 0LL) {
			(*this)._method_push_err(_119632_decl->_field_elem->_field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_Arr>();
		}
	}
	jule::Ref<_1a2db8ce3_TypeKind> _122417_elem = (*this)._method_check_decl(_119632_decl->_field_elem);
	{
		if (!(((!(jule::real(_122417_elem)))))) { goto _case_end_4984807024; }
		_case_begin_4984807024:;
		{
			return jule::new_ref<_1a2db8ce3_Arr>();
		}
		goto _match_end_4984804064;
		_case_end_4984807024:;
		if (!((jule::real(_122417_elem->_method_arr()) && _122417_elem->_method_arr()->_field_auto))) { goto _case_end_4984807120; }
		_case_begin_4984807120:;
		{
			(*this)._method_push_err(_119632_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_Arr>();
		}
		goto _match_end_4984804064;
		_case_end_4984807120:;
		_match_end_4984804064:;
	}
	return jule::new_struct<_1a2db8ce3_Arr>(new( std::nothrow ) _1a2db8ce3_Arr(_119632_decl->_method_auto_sized(),_120117_n,_122417_elem));
}



jule::Ref<_1a2db8ce3_Map> _1a2db8ce3_TypeChecker::_method_build_map(jule::Ref<_1e16025cb_MapTypeDecl> _124332_decl) {
	jule::Bool _124413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_124413_not_plain;
	});
	jule::Ref<_1a2db8ce3_TypeKind> _124817_key = (*this)._method_check_decl(_124332_decl->_field_key);
	if ((!(jule::real(_124817_key)))) {
		return jule::new_ref<_1a2db8ce3_Map>();
	}
	jule::Ref<_1a2db8ce3_TypeKind> _125317_val = (*this)._method_check_decl(_124332_decl->_field_val);
	if ((!(jule::real(_125317_val)))) {
		return jule::new_ref<_1a2db8ce3_Map>();
	}
	if (jule::real(_125317_val->_method_enm())) {
		(*this)._method_push_err(_124332_decl->_field_val->_field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>({}));
	}
	return jule::new_struct<_1a2db8ce3_Map>(new( std::nothrow ) _1a2db8ce3_Map(_124817_key,_125317_val));
}



jule::Ref<_1a2db8ce3_Tuple> _1a2db8ce3_TypeChecker::_method_build_tuple(jule::Ref<_1e16025cb_TupleTypeDecl> _126734_decl) {
	jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>> _126817_types = jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>::alloc(static_cast<jule::I64>(_126734_decl->_field_types.len()));
	{
		auto expr = _126734_decl->_field_types;
		auto it = expr.begin();
		_iter_begin_4984826816:;
		if (it != expr.end()) {
			jule::Int _1a2db8ce3_i = it - expr.begin();
			jule::Ref<_1e16025cb_TypeDecl> _1a2db8ce3_t = *it;
			{
				jule::Ref<_1a2db8ce3_TypeKind> _127021_kind = (*this)._method_check_decl(_1a2db8ce3_t);
				if ((!(jule::real(_127021_kind)))) {
					return jule::new_ref<_1a2db8ce3_Tuple>();
				}
				_126817_types[_1a2db8ce3_i]=_127021_kind;
			}
			_iter_next_4984826816:;
			++it;
			_1a2db8ce3_i++;
			goto _iter_begin_4984826816;
		}
		_iter_end_4984826816:;
	}
	return jule::new_struct<_1a2db8ce3_Tuple>(new( std::nothrow ) _1a2db8ce3_Tuple(_126817_types));
}



jule::Bool _1a2db8ce3_TypeChecker::_method_check_fn_types(jule::Ref<_1e1737e81_FnIns>& _128038_f) {
	jule::Bool _128051_ok = jule::Bool();
	{
		auto expr = _128038_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4984834544:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_ParamIns> _1a2db8ce3_p = *it;
			{
				_1a2db8ce3_p->_field_kind=(*this)._method_build(_1a2db8ce3_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_128051_ok=jule::real(_1a2db8ce3_p->_field_kind);
				if ((!(_128051_ok))) {
					_128051_ok = false;
					return _128051_ok;
				}
			}
			_iter_next_4984834544:;
			++it;
			goto _iter_begin_4984834544;
		}
		_iter_end_4984834544:;
	}
	if ((!(_128038_f->_field_decl->_method_is_void()))) {
		_128038_f->_field_result=(*this)._method_build(_128038_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_128051_ok = jule::real(_128038_f->_field_result);
		return _128051_ok;
	}
	_128051_ok = true;
	return _128051_ok;
}



jule::Ref<_1e1737e81_FnIns> _1a2db8ce3_TypeChecker::_method_build_fn(jule::Ref<_1e16025cb_FnDecl> _129731_decl) {
	if (_129731_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_129731_decl->_field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1e1737e81_FnIns>();
	}
	jule::Ref<_1e1737e81_Fn> _130317_f = _1e28b6a59_build_fn(_129731_decl);
	jule::Ref<_1e1737e81_FnIns> _130417_ins = _130317_f->_method_instance_force();
	_130417_ins->_field_anon=true;
	jule::Bool _130713_ok = (*this)._method_check_fn_types(_130417_ins);
	if ((!(_130713_ok))) {
		return jule::new_ref<_1e1737e81_FnIns>();
	}
	return _130417_ins;
}



jule::Trait<_1a2db8ce3_Kind> _1a2db8ce3_TypeChecker::_method_build_by_namespace(jule::Ref<_1e16025cb_NamespaceTypeDecl> _131541_decl) {
	jule::Str _131613_path = _1a2db8ce3_build_link_path_by_tokens(_131541_decl->_field_idents);
	jule::Ref<_1e2a7b966_ImportInfo> _131717_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)>([=](jule::Ref<_1e2a7b966_ImportInfo> _131753_imp) mutable -> jule::Bool {
		if ((_131541_decl->_field_idents.len() == 1LL) && (_131753_imp->_field_alias == _131613_path)) {
			return true;
		}
		return _131753_imp->_field_link_path == _131613_path;
	}));
	if ((!(jule::real(_131717_imp))) || (!(_131717_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_131541_decl->_field_idents[0LL],jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_131613_path)}));
		return nullptr;
	}
	jule::Trait<_1a35968cc_Lookup> _132917_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_131717_imp;
	jule::Trait<_1a2db8ce3_Kind> _133217_kind = (*this)._method_build_ident(_131541_decl->_field_kind);
	(*this)._field_lookup=_132917_lookup;
	return _133217_kind;
}



jule::Ref<_1a2db8ce3_TypeKind> _1a2db8ce3_TypeChecker::_method_build(jule::Any& _133929_decl_kind) {
	jule::Trait<_1a2db8ce3_Kind> _134017_kind = nullptr;
	{
		auto _match_expr{ _133929_decl_kind };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_TypeKind>>())) { goto _case_end_4984870512; }
		_case_begin_4984870512:;
		{
			_134017_kind=_133929_decl_kind.operator jule::Ref<_1a2db8ce3_TypeKind>();
		}
		goto _match_end_4984867792;
		_case_end_4984870512:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_IdentTypeDecl>>())) { goto _case_end_4984870976; }
		_case_begin_4984870976:;
		{
			jule::Trait<_1a2db8ce3_Kind> _134721_t = (*this)._method_build_ident(_133929_decl_kind.operator jule::Ref<_1e16025cb_IdentTypeDecl>());
			if (_134721_t != nullptr) {
				_134017_kind=_134721_t;
			}
		}
		goto _match_end_4984867792;
		_case_end_4984870976:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_RefTypeDecl>>())) { goto _case_end_4984868240; }
		_case_begin_4984868240:;
		{
			jule::Ref<_1a2db8ce3_Ref> _135321_t = (*this)._method_build_ref(_133929_decl_kind.operator jule::Ref<_1e16025cb_RefTypeDecl>());
			if (jule::real(_135321_t)) {
				_134017_kind=_135321_t;
			}
		}
		goto _match_end_4984867792;
		_case_end_4984868240:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_PtrTypeDecl>>())) { goto _case_end_4984868336; }
		_case_begin_4984868336:;
		{
			jule::Ref<_1a2db8ce3_Ptr> _135921_t = (*this)._method_build_ptr(_133929_decl_kind.operator jule::Ref<_1e16025cb_PtrTypeDecl>());
			if (jule::real(_135921_t)) {
				_134017_kind=_135921_t;
			}
		}
		goto _match_end_4984867792;
		_case_end_4984868336:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_SlcTypeDecl>>())) { goto _case_end_4984868432; }
		_case_begin_4984868432:;
		{
			jule::Ref<_1a2db8ce3_Slc> _136521_t = (*this)._method_build_slc(_133929_decl_kind.operator jule::Ref<_1e16025cb_SlcTypeDecl>());
			if (jule::real(_136521_t)) {
				_134017_kind=_136521_t;
			}
		}
		goto _match_end_4984867792;
		_case_end_4984868432:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_ArrTypeDecl>>())) { goto _case_end_4984868528; }
		_case_begin_4984868528:;
		{
			jule::Ref<_1a2db8ce3_Arr> _137121_t = (*this)._method_build_arr(_133929_decl_kind.operator jule::Ref<_1e16025cb_ArrTypeDecl>());
			if (jule::real(_137121_t)) {
				_134017_kind=_137121_t;
			}
		}
		goto _match_end_4984867792;
		_case_end_4984868528:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_MapTypeDecl>>())) { goto _case_end_4984869936; }
		_case_begin_4984869936:;
		{
			jule::Ref<_1a2db8ce3_Map> _137721_t = (*this)._method_build_map(_133929_decl_kind.operator jule::Ref<_1e16025cb_MapTypeDecl>());
			if (jule::real(_137721_t)) {
				_134017_kind=_137721_t;
			}
		}
		goto _match_end_4984867792;
		_case_end_4984869936:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TupleTypeDecl>>())) { goto _case_end_4984870032; }
		_case_begin_4984870032:;
		{
			jule::Ref<_1a2db8ce3_Tuple> _138321_t = (*this)._method_build_tuple(_133929_decl_kind.operator jule::Ref<_1e16025cb_TupleTypeDecl>());
			if (jule::real(_138321_t)) {
				_134017_kind=_138321_t;
			}
		}
		goto _match_end_4984867792;
		_case_end_4984870032:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_FnDecl>>())) { goto _case_end_4984870128; }
		_case_begin_4984870128:;
		{
			jule::Ref<_1e1737e81_FnIns> _138921_t = (*this)._method_build_fn(_133929_decl_kind.operator jule::Ref<_1e16025cb_FnDecl>());
			if (jule::real(_138921_t)) {
				_134017_kind=_138921_t;
			}
		}
		goto _match_end_4984867792;
		_case_end_4984870128:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_NamespaceTypeDecl>>())) { goto _case_end_4984870224; }
		_case_begin_4984870224:;
		{
			jule::Trait<_1a2db8ce3_Kind> _139521_t = (*this)._method_build_by_namespace(_133929_decl_kind.operator jule::Ref<_1e16025cb_NamespaceTypeDecl>());
			if (_139521_t != nullptr) {
				_134017_kind=_139521_t;
			}
		}
		goto _match_end_4984867792;
		_case_end_4984870224:;
		_case_begin_4984867200:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1a2db8ce3_TypeKind>();
		}
		goto _match_end_4984867792;
		_case_end_4984867200:;
		_match_end_4984867792:;
	}
	if (_134017_kind == nullptr) {
		return jule::new_ref<_1a2db8ce3_TypeKind>();
	}
	{
		auto _match_expr{ _134017_kind };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_TypeKind>>())) { goto _case_end_4984897760; }
		_case_begin_4984897760:;
		{
			return _134017_kind.operator jule::Ref<_1a2db8ce3_TypeKind>();
		}
		goto _match_end_4984896624;
		_case_end_4984897760:;
		_case_begin_4984896960:;
		{
			return jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_134017_kind));
		}
		goto _match_end_4984896624;
		_case_end_4984896960:;
		_match_end_4984896624:;
	}
}



jule::Ref<_1a2db8ce3_TypeKind> _1a2db8ce3_TypeChecker::_method_check_decl(jule::Ref<_1e16025cb_TypeDecl>& _142034_decl) {
	_1e15a2bb9_Token _142217_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_142034_decl->_field_token;
	jule::Ref<_1a2db8ce3_TypeKind> _142517_kind = (*this)._method_build(_142034_decl->_field_kind);
	(*this)._field_error_token=_142217_error_token;
	return _142517_kind;
}



void _1a2db8ce3_TypeChecker::_method_check(jule::Ref<_1a2db8ce3_TypeSymbol>& _143129_t) {
	if ((!(jule::real(_143129_t->_field_decl)))) {
		return;
	}
	jule::Ref<_1a2db8ce3_TypeKind> _143617_kind = (*this)._method_check_decl(_143129_t->_field_decl);
	if ((!(jule::real(_143617_kind)))) {
		_143129_t->_method_remove_kind();
		return;
	}
	_143129_t->_field_kind=_143617_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2db8ce3_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}



std::tuple<jule::Ref<_1e10d0a8d_IR>,jule::Slice<_1ec8e8025_Log>> _1e10d0a8d_IR::_static_method_build(jule::Str _2525_path,jule::Int _2536_flags) {
	jule::Ref<_1e12e1430_PlainImporter> _2617_importer = jule::new_struct<_1e12e1430_PlainImporter>(new( std::nothrow ) _1e12e1430_PlainImporter());
	jule::Slice<jule::Ref<_1e15a53c5_Ast>> _2718_files;
	jule::Slice<_1ec8e8025_Log> _2729_logs;
	std::tie(_2718_files,_2729_logs) = _2617_importer->_method_import_package(_2525_path);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1e10d0a8d_IR>(),_2729_logs);
	}
	if (_2718_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_1e10d0a8d_IR>(),nullptr);
	}
	jule::Ref<_1e2a7b966_Package> _3618_pkg;
	std::tie(_3618_pkg,_2729_logs) = _1a36c926d_analyze_package(_2718_files,_2617_importer,_2536_flags);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1e10d0a8d_IR>(),_2729_logs);
	}
	jule::Ref<_1e10d0a8d_IR> _4117_ir = jule::new_struct<_1e10d0a8d_IR>(new( std::nothrow ) _1e10d0a8d_IR(jule::Slice<jule::Str>(),_3618_pkg,_2617_importer->_field_all_packages,_1e1183e1b_OrderedDefines()));
	_4117_ir->_field_passes=_1e10d0a8d_get_all_unique_passes(_4117_ir->_field_main,_4117_ir->_field_used);
	return std::make_tuple(_4117_ir,nullptr);
}



void _1e10d0a8d_IR::_method_append_structs(jule::Ref<_1e2a7b966_Package>& _5234_p,jule::Slice<jule::Ref<_1e177440c_Struct>>& _5258_buffer) {
	{
		auto expr = _5234_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4353906688:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e10d0a8d_f = *it;
			{
				{
					auto expr = _1e10d0a8d_f->_field_structs;
					auto it = expr.begin();
					_iter_begin_4353908576:;
					if (it != expr.end()) {
						jule::Ref<_1e177440c_Struct> _1e10d0a8d_s = *it;
						{
							if ((!(_1e10d0a8d_s->_field_cpp_linked))) {
								_5258_buffer=jule::append(_5258_buffer,jule::Slice<jule::Ref<_1e177440c_Struct>>({_1e10d0a8d_s}));
							}
						}
						_iter_next_4353908576:;
						++it;
						goto _iter_begin_4353908576;
					}
					_iter_end_4353908576:;
				}
			}
			_iter_next_4353906688:;
			++it;
			goto _iter_begin_4353906688;
		}
		_iter_end_4353906688:;
	}
}



jule::Slice<jule::Ref<_1e177440c_Struct>> _1e10d0a8d_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ref<_1e177440c_Struct>> _6517_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_6517_buffer);
	{
		auto expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_4353911888:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e10d0a8d_u = *it;
			{
				if ((!(_1e10d0a8d_u->_field_cpp_linked))) {
					(*this)._method_append_structs(_1e10d0a8d_u->_field_package,_6517_buffer);
				}
			}
			_iter_next_4353911888:;
			++it;
			goto _iter_begin_4353911888;
		}
		_iter_end_4353911888:;
	}
	return _6517_buffer;
}



void _1e10d0a8d_IR::_method_append_vars(jule::Ref<_1e2a7b966_Package>& _7831_p,jule::Slice<jule::Ref<_1ba80e105_Var>>& _7855_buffer) {
	{
		auto expr = _7831_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4353919168:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e10d0a8d_f = *it;
			{
				{
					auto expr = _1e10d0a8d_f->_field_vars;
					auto it = expr.begin();
					_iter_begin_4353921056:;
					if (it != expr.end()) {
						jule::Ref<_1ba80e105_Var> _1e10d0a8d_v = *it;
						{
							if ((!(_1e10d0a8d_v->_field_cpp_linked)) && (!(_1e10d0a8d_v->_field_constant))) {
								_7855_buffer=jule::append(_7855_buffer,jule::Slice<jule::Ref<_1ba80e105_Var>>({_1e10d0a8d_v}));
							}
						}
						_iter_next_4353921056:;
						++it;
						goto _iter_begin_4353921056;
					}
					_iter_end_4353921056:;
				}
			}
			_iter_next_4353919168:;
			++it;
			goto _iter_begin_4353919168;
		}
		_iter_end_4353919168:;
	}
}



jule::Slice<jule::Ref<_1ba80e105_Var>> _1e10d0a8d_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ref<_1ba80e105_Var>> _9117_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_9117_buffer);
	{
		auto expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_4353926096:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e10d0a8d_u = *it;
			{
				if ((!(_1e10d0a8d_u->_field_cpp_linked))) {
					(*this)._method_append_vars(_1e10d0a8d_u->_field_package,_9117_buffer);
				}
			}
			_iter_next_4353926096:;
			++it;
			goto _iter_begin_4353926096;
		}
		_iter_end_4353926096:;
	}
	return _9117_buffer;
}



void _1e10d0a8d_IR::_method_order(void) {
	(*this)._field_ordered._field_structs=(*this)._method_get_all_structures();
	(*this)._field_ordered._field_globals=(*this)._method_get_all_variables();
	_1e1183e1b_DefineOrderer::_static_method_order_variables((*this)._field_ordered._field_globals);
	_1e1183e1b_DefineOrderer::_static_method_order_structures((*this)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e10d0a8d_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a2e210_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



std::tuple<jule::Int,jule::Bool> _1ba8540c3_ArgParser::_method_parse_integer_0(jule::Str& _18732_s,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)> _18740_parser) {
	jule::Int _18784_x = jule::Int();
	jule::Bool _18790_ok = jule::Bool();
	{
		if (!((_18732_s == jule::Str()))) { goto _case_end_4355954864; }
		_case_begin_4355954864:;
		{
			_18784_x = 0LL;
			_18790_ok = false;
			return std::make_tuple(_18784_x,_18790_ok);
		}
		goto _match_end_4355953376;
		_case_end_4355954864:;
		if (!((_18732_s.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4355955104; }
		_case_begin_4355955104:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),16LL);
		}
		goto _match_end_4355953376;
		_case_end_4355955104:;
		if (!((_18732_s.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4355953840; }
		_case_begin_4355953840:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),2LL);
		}
		goto _match_end_4355953376;
		_case_end_4355953840:;
		if (!((_18732_s.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4355953936; }
		_case_begin_4355953936:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),8LL);
		}
		goto _match_end_4355953376;
		_case_end_4355953936:;
		if (!((_18732_s[0LL] == '0'))) { goto _case_end_4355954032; }
		_case_begin_4355954032:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(1LL),8LL);
		}
		goto _match_end_4355953376;
		_case_end_4355954032:;
		_case_begin_4355953552:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s,10LL);
		}
		goto _match_end_4355953376;
		_case_end_4355953552:;
		_match_end_4355953376:;
	}
	return std::make_tuple(_18784_x,_18790_ok);
}

std::tuple<jule::Uint,jule::Bool> _1ba8540c3_ArgParser::_method_parse_integer_1(jule::Str& _18732_s,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)> _18740_parser) {
	jule::Uint _18784_x = jule::Uint();
	jule::Bool _18790_ok = jule::Bool();
	{
		if (!((_18732_s == jule::Str()))) { goto _case_end_4355982336; }
		_case_begin_4355982336:;
		{
			_18784_x = 0LL;
			_18790_ok = false;
			return std::make_tuple(_18784_x,_18790_ok);
		}
		goto _match_end_4355980848;
		_case_end_4355982336:;
		if (!((_18732_s.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4355982576; }
		_case_begin_4355982576:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),16LL);
		}
		goto _match_end_4355980848;
		_case_end_4355982576:;
		if (!((_18732_s.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4355981312; }
		_case_begin_4355981312:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),2LL);
		}
		goto _match_end_4355980848;
		_case_end_4355981312:;
		if (!((_18732_s.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4355981408; }
		_case_begin_4355981408:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),8LL);
		}
		goto _match_end_4355980848;
		_case_end_4355981408:;
		if (!((_18732_s[0LL] == '0'))) { goto _case_end_4355981504; }
		_case_begin_4355981504:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(1LL),8LL);
		}
		goto _match_end_4355980848;
		_case_end_4355981504:;
		_case_begin_4355981024:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s,10LL);
		}
		goto _match_end_4355980848;
		_case_end_4355981024:;
		_match_end_4355980848:;
	}
	return std::make_tuple(_18784_x,_18790_ok);
}



jule::Str _1ba8540c3_ArgParser::_method_get_data(void) {
	if (((*this)._field_i + 1LL) >= (*this)._field_args.len()) {
		return jule::Str();
	}
	((*this)._field_i)++;
	return (*this)._field_args[(*this)._field_i];
}



void _1ba8540c3_ArgParser::_method_process_flag(jule::Trait<_1ba8540c3_CommonFlag>& _21836_flag) {
	{
		auto _match_expr{ _21836_flag };
		if (!(_match_expr.type_is<jule::Ref<_1ba8540c3_Flag_3>>())) { goto _case_end_4355929968; }
		_case_begin_4355929968:;
		{
			jule::Ref<_1ba8540c3_Flag_3> _22121_bf = _21836_flag.operator jule::Ref<_1ba8540c3_Flag_3>();
			_22121_bf->_field__data=(!(_22121_bf->_field__default));
			return;
		}
		goto _match_end_4355930352;
		_case_end_4355929968:;
		_match_end_4355930352:;
	}
	jule::Str _22613_data = (*this)._method_get_data();
	if (_22613_data == jule::Str()) {
		(*this)._field_error=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression missing", 20);
		return;
	}
	{
		auto _match_expr{ _21836_flag };
		if (!(_match_expr.type_is<jule::Ref<_1ba8540c3_Flag_0>>())) { goto _case_end_4355936368; }
		_case_begin_4355936368:;
		{
			jule::Ref<_1ba8540c3_Flag_0> _23421_intf = _21836_flag.operator jule::Ref<_1ba8540c3_Flag_0>();
			jule::Bool _23532_ok;
			std::tie(_23421_intf->_field__data,_23532_ok) = (*this)._method_parse_integer_0(_22613_data,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _23571_s,jule::Int _23579_base) mutable -> std::tuple<jule::Int,jule::Bool> {
				jule::I64 _23622_x;
				jule::Int _23625_err;
				std::tie(_23622_x,_23625_err) = _1ec95de8c_parse_int(_23571_s,_23579_base,64LL);
				return std::make_tuple(_23622_x,_23625_err == 0LLU);
			}));
			if ((!(_23532_ok))) {
				(*this)._field_error=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression must be valid signed integer", 41);
			}
		}
		goto _match_end_4355934832;
		_case_end_4355936368:;
		if (!(_match_expr.type_is<jule::Ref<_1ba8540c3_Flag_1>>())) { goto _case_end_4355935248; }
		_case_begin_4355935248:;
		{
			jule::Ref<_1ba8540c3_Flag_1> _24421_uintf = _21836_flag.operator jule::Ref<_1ba8540c3_Flag_1>();
			jule::Bool _24533_ok;
			std::tie(_24421_uintf->_field__data,_24533_ok) = (*this)._method_parse_integer_1(_22613_data,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _24573_s,jule::Int _24581_base) mutable -> std::tuple<jule::Uint,jule::Bool> {
				jule::U64 _24622_x;
				jule::Int _24625_err;
				std::tie(_24622_x,_24625_err) = _1ec95de8c_parse_uint(_24573_s,_24581_base,64LL);
				return std::make_tuple(_24622_x,_24625_err == 0LLU);
			}));
			if ((!(_24533_ok))) {
				(*this)._field_error=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression must be valid unsigned integer", 43);
			}
		}
		goto _match_end_4355934832;
		_case_end_4355935248:;
		if (!(_match_expr.type_is<jule::Ref<_1ba8540c3_Flag_2>>())) { goto _case_end_4355931232; }
		_case_begin_4355931232:;
		{
			jule::Ref<_1ba8540c3_Flag_2> _25421_ff = _21836_flag.operator jule::Ref<_1ba8540c3_Flag_2>();
			jule::Int _25530_err;
			std::tie(_25421_ff->_field__data,_25530_err) = _1d419b9e0_parse_float(_22613_data,64LL);
			if (_25530_err != 0LLU) {
				(*this)._field_error=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression must be valid floating-point", 41);
			}
		}
		goto _match_end_4355934832;
		_case_end_4355931232:;
		if (!(_match_expr.type_is<jule::Ref<_1ba8540c3_Flag_4>>())) { goto _case_end_4355931328; }
		_case_begin_4355931328:;
		{
			_21836_flag.operator jule::Ref<_1ba8540c3_Flag_4>()->_field__data=_22613_data;
		}
		goto _match_end_4355934832;
		_case_end_4355931328:;
		_match_end_4355934832:;
	}
}



void _1ba8540c3_ArgParser::_method_single_dash(jule::Str& _26531_arg) {
	jule::Slice<jule::I32> _26613_rarg = static_cast<jule::Slice<jule::I32>>(_26531_arg).slice(1LL);
	{
		auto expr = _26613_rarg;
		auto it = expr.begin();
		_iter_begin_4356000064:;
		if (it != expr.end()) {
			jule::I32 _1ba8540c3_r = *it;
			{
				jule::Trait<_1ba8540c3_CommonFlag> _26821_flag = (*this)._field_set._method_find_flag_short(_1ba8540c3_r);
				if (_26821_flag == nullptr) {
					(*this)._field_error=(_26531_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_1ba8540c3_r);
					return;
				}
				(*this)._method_process_flag(_26821_flag);
			}
			_iter_next_4356000064:;
			++it;
			goto _iter_begin_4356000064;
		}
		_iter_end_4356000064:;
	}
}



void _1ba8540c3_ArgParser::_method_double_dash(jule::Str& _27831_arg) {
	jule::Trait<_1ba8540c3_CommonFlag> _27917_flag = (*this)._field_set._method_find_flag(_27831_arg.slice(2LL));
	if (_27917_flag == nullptr) {
		(*this)._field_error=_27831_arg + jule::Str(": flag is not exist", 19);
		return;
	}
	(*this)._method_process_flag(_27917_flag);
}



void _1ba8540c3_ArgParser::_method_try_arg(void) {
	jule::Str _28913_arg = (*this)._field_args[(*this)._field_i];
	if ((*this)._field_args.len() == 0LL) {
		return;
	}
	if (_28913_arg[0LL] == '-') {
		if (((*this)._field_args.len() > 1LL) && (_28913_arg[1LL] == '-')) {
			(*this)._method_double_dash(_28913_arg);
			return;
		}
		(*this)._method_single_dash(_28913_arg);
		return;
	}
	(*this)._field_content=jule::append((*this)._field_content,jule::Slice<jule::Str>({_28913_arg}));
}



void _1ba8540c3_ArgParser::_method_parse(void) {
	for (; (*this)._field_i < (*this)._field_args.len(); ((*this)._field_i)++) {
		{
			(*this)._method_try_arg();
			if ((*this)._field_error.len() != 0LL) {
				goto _iter_end_4356021280;
			}
		}
	_iter_next_4356021280:;
	}
	_iter_end_4356021280:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ba8540c3_ArgParser &_Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error:" << _Src._field_error << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_EnumItemDecl::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_expr)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_EnumDecl::_method_default_typed(void) {
	return (!(jule::real((*this)._field_kind)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



jule::Bool _1e16025cb_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_Expr::_method_is_fn_call(void) {
	if ((*this)._field_kind == nullptr) {
		return false;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_FnCallExpr>>())) { goto _case_end_4334072064; }
		_case_begin_4334072064:;
		{
			return true;
		}
		goto _match_end_4334069744;
		_case_end_4334072064:;
		_case_begin_4334070752:;
		{
			return false;
		}
		goto _match_end_4334069744;
		_case_end_4334070752:;
		_match_end_4334069744:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e24d74b0_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1e177440c_FieldIns> _1e177440c_Field::_method_instance(void) {
	return jule::new_struct<_1e177440c_FieldIns>(new( std::nothrow ) _1e177440c_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e177440c_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1e177440c_StructIns> _1e177440c_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	jule::Ref<_1e177440c_StructIns> _6717_ins = jule::new_struct<_1e177440c_StructIns>(new( std::nothrow ) _1e177440c_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e177440c_FieldIns>>::alloc(static_cast<jule::I64>(this->self->_field_fields.len())),jule::Slice<jule::Ref<_1e1737e81_Fn>>::alloc(static_cast<jule::I64>(this->self->_field_methods.len())),jule::Bool(),_1e28b6a59_ReferenceStack::_static_method_new()));
	{
		auto expr = this->self->_field_fields;
		auto it = expr.begin();
		_iter_begin_4347668768:;
		if (it != expr.end()) {
			jule::Int _1e177440c_i = it - expr.begin();
			jule::Ref<_1e177440c_Field> _1e177440c_f = *it;
			{
				_6717_ins->_field_fields[_1e177440c_i]=_1e177440c_f->_method_instance();
				if (jule::real(_1e177440c_f->_field_kind->_field_kind) && _1e177440c_f->_field_kind->_field_kind->_method_mutable()) {
					_6717_ins->_field_mutable=true;
				}
			}
			_iter_next_4347668768:;
			++it;
			_1e177440c_i++;
			goto _iter_begin_4347668768;
		}
		_iter_end_4347668768:;
	}
	{
		auto expr = this->self->_field_methods;
		auto it = expr.begin();
		_iter_begin_4347670336:;
		if (it != expr.end()) {
			jule::Int _1e177440c_i = it - expr.begin();
			jule::Ref<_1e1737e81_Fn> _1e177440c_f = *it;
			{
				jule::Ref<_1e1737e81_Fn> _8221_fins = jule::new_struct_ref<_1e1737e81_Fn>(new( std::nothrow ) _1e1737e81_Fn(_1e177440c_f->_field_sema,_1e177440c_f->_field_token,_1e177440c_f->_field_global,_1e177440c_f->_field_unsafety,_1e177440c_f->_field_public,_1e177440c_f->_field_cpp_linked,_1e177440c_f->_field_statically,_1e177440c_f->_field_ident,_1e177440c_f->_field_directives,_1e177440c_f->_field_doc,_1e177440c_f->_field_scope,_1e177440c_f->_field_generics,_1e177440c_f->_field_result,_1e177440c_f->_field_params,_1e177440c_f->_field_owner,nullptr));
				_6717_ins->_field_methods[_1e177440c_i]=_8221_fins;
			}
			_iter_next_4347670336:;
			++it;
			_1e177440c_i++;
			goto _iter_begin_4347670336;
		}
		_iter_end_4347670336:;
	}
	return _6717_ins;
}



jule::Ref<_1e177440c_StructIns> _1e177440c_Struct::_method_append_instance(jule::Ref<_1e177440c_StructIns>& _10839_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	{
		auto expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_4347686784:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_StructIns> _1e177440c_ains = *it;
			{
				if (_1e177440c_ains->_method_same(_10839_ins)) {
					return _1e177440c_ains;
				}
			}
			_iter_next_4347686784:;
			++it;
			goto _iter_begin_4347686784;
		}
		_iter_end_4347686784:;
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1e177440c_StructIns>>({_10839_ins}));
	return jule::new_ref<_1e177440c_StructIns>();
}



jule::Ref<_1e1737e81_Fn> _1e177440c_Struct::_method_find_method(jule::Str _12634_ident,jule::Bool _12646_statically) {
	{
		auto expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4347694112:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1e177440c_f = *it;
			{
				if ((_1e177440c_f->_field_statically == _12646_statically) && (_1e177440c_f->_field_ident == _12634_ident)) {
					return _1e177440c_f;
				}
			}
			_iter_next_4347694112:;
			++it;
			goto _iter_begin_4347694112;
		}
		_iter_end_4347694112:;
	}
	return jule::new_ref<_1e1737e81_Fn>();
}



jule::Ref<_1ba80e105_Var> _1e177440c_Struct::_method_find_static(jule::Str _13734_ident) {
	{
		auto expr = (*this)._field_statics;
		auto it = expr.begin();
		_iter_begin_4347698960:;
		if (it != expr.end()) {
			jule::Ref<_1ba80e105_Var> _1e177440c_v = *it;
			{
				if (_1e177440c_v->_field_ident == _13734_ident) {
					return _1e177440c_v;
				}
			}
			_iter_next_4347698960:;
			++it;
			goto _iter_begin_4347698960;
		}
		_iter_end_4347698960:;
	}
	return jule::new_ref<_1ba80e105_Var>();
}



jule::Ref<_1e177440c_Field> _1e177440c_Struct::_method_find_field(jule::Str _14833_ident) {
	{
		auto expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_4347703376:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Field> _1e177440c_f = *it;
			{
				if (_1e177440c_f->_field_ident == _14833_ident) {
					return _1e177440c_f;
				}
			}
			_iter_next_4347703376:;
			++it;
			goto _iter_begin_4347703376;
		}
		_iter_end_4347703376:;
	}
	return jule::new_ref<_1e177440c_Field>();
}



jule::Bool _1e177440c_Struct::_method_is_implements(jule::Ref<_1e2a1e563_Trait> _15832_t) {
	{
		auto expr = (*this)._field_implements;
		auto it = expr.begin();
		_iter_begin_4347706464:;
		if (it != expr.end()) {
			jule::Ref<_1e2a1e563_Trait> _1e177440c_it = *it;
			{
				if ((_15832_t).alloc == (_1e177440c_it).alloc) {
					return true;
				}
			}
			_iter_next_4347706464:;
			++it;
			goto _iter_begin_4347706464;
		}
		_iter_end_4347706464:;
	}
	return false;
}



jule::Bool _1e177440c_Struct::_method_is_derives(jule::Str _16829_ident) {
	{
		auto expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_4347707712:;
		if (it != expr.end()) {
			jule::Ref<_1e16025cb_Directive> _1e177440c_d = *it;
			{
				if (_1e177440c_d->_field_tag == jule::Str("derive", 6)) {
					if ((_1e177440c_d->_field_args.len() == 1LL) && (_1e177440c_d->_field_args[0LL] == _16829_ident)) {
						return true;
					}
				}
			}
			_iter_next_4347707712:;
			++it;
			goto _iter_begin_4347707712;
		}
		_iter_end_4347707712:;
	}
	return false;
}



jule::Bool _1e177440c_Struct::_method_is_uses(jule::Ref<_1e177440c_Struct> _18026_s) {
	{
		auto expr = (*this)._field_uses;
		auto it = expr.begin();
		_iter_begin_4347716352:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1e177440c_u = *it;
			{
				while ((_18026_s).alloc == (_1e177440c_u).alloc) {
					{
						return true;
					}
				_iter_next_4347717504:;
				}
				_iter_end_4347717504:;
			}
			_iter_next_4347716352:;
			++it;
			goto _iter_begin_4347716352;
		}
		_iter_end_4347716352:;
	}
	return false;
}



jule::Bool _1e177440c_Struct::_method_has_ref_accessible(void) {
	{
		auto expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4347719584:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1e177440c_m = *it;
			{
				if ((_1e177440c_m->_field_params.len() > 0LL) && _1e177440c_m->_field_params[0LL]->_method_is_ref()) {
					return true;
				}
			}
			_iter_next_4347719584:;
			++it;
			goto _iter_begin_4347719584;
		}
		_iter_end_4347719584:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e177440c_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "concurrent:" << _Src._field_concurrent;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1e1737e81_ParamIns> _1e1737e81_Param::_method_instance(void) {
	return jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(this->self,jule::Ref<_1a2db8ce3_TypeKind>()));
}



jule::Bool _1e1737e81_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



jule::Bool _1e1737e81_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1737e81_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e1737e81_Fn::_method_is_void(void) {
	return (!(jule::real((*this)._field_result)));
}



jule::Bool _1e1737e81_Fn::_method_is_method(void) {
	return jule::real((*this)._field_owner);
}



jule::Bool _1e1737e81_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



jule::Bool _1e1737e81_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



jule::Bool _1e1737e81_Fn::_method_is_anon(void) {
	return _1e15a2bb9_is_anon_ident((*this)._field_ident);
}



jule::Bool _1e1737e81_Fn::_method_any_var(void) {
	return jule::real((*this)._field_result) && ((*this)._field_result->_field_idents.len() > 0LL);
}



jule::Bool _1e1737e81_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto expr = (*this)._field_params;
		auto it = expr.begin();
		_iter_begin_4347778848:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Param> _1e1737e81_p = *it;
			{
				if (_1e1737e81_parameter_uses_generics(_1e1737e81_p,(*this)._field_generics)) {
					return true;
				}
			}
			_iter_next_4347778848:;
			++it;
			goto _iter_begin_4347778848;
		}
		_iter_end_4347778848:;
	}
	return false;
}



jule::Bool _1e1737e81_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if ((!(jule::real((*this)._field_result->_field_kind))) || (!(jule::real((*this)._field_result->_field_kind->_field_kind)))) {
		return false;
	}
	return _1e1737e81_kind_uses_generics((*this)._field_result->_field_kind->_field_kind,(*this)._field_generics);
}



jule::Ref<_1e1737e81_FnIns> _1e1737e81_Fn::_method_instance_force(void) {
	jule::Ref<_1e1737e81_FnIns> _11017_ins = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),this->self,jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>(),jule::Ref<_1a2db8ce3_TypeKind>(),jule::new_struct<_1e2a2e210_Scope>(new( std::nothrow ) _1e2a2e210_Scope()),_1e28b6a59_ReferenceStack::_static_method_new(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(),jule::Bool(),jule::Bool()));
	if (this->self->_method_is_init()) {
		_11017_ins->_field_refers=_1e28b6a59_ReferenceStack::_static_method_new();
	}
	_11017_ins->_field_params=jule::Slice<jule::Ref<_1e1737e81_ParamIns>>::alloc(static_cast<jule::I64>(this->self->_field_params.len()));
	{
		auto expr = this->self->_field_params;
		auto it = expr.begin();
		_iter_begin_4347792192:;
		if (it != expr.end()) {
			jule::Int _1e1737e81_i = it - expr.begin();
			jule::Ref<_1e1737e81_Param> _1e1737e81_p = *it;
			{
				_11017_ins->_field_params[_1e1737e81_i]=_1e1737e81_p->_method_instance();
			}
			_iter_next_4347792192:;
			++it;
			_1e1737e81_i++;
			goto _iter_begin_4347792192;
		}
		_iter_end_4347792192:;
	}
	if (jule::real(_11017_ins->_field_decl->_field_result)) {
		_11017_ins->_field_result=_11017_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _11017_ins;
}



jule::Ref<_1e1737e81_FnIns> _1e1737e81_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	return this->self->_method_instance_force();
}



std::tuple<jule::Bool,jule::Int> _1e1737e81_Fn::_method_append_instance(jule::Ref<_1e1737e81_FnIns>& _14139_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1e1737e81_FnIns>>({_14139_ins}));
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1e1737e81_FnIns>>({_14139_ins}));
		return std::make_tuple(true,-1LL);
	}
	{
		auto expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_4347805520:;
		if (it != expr.end()) {
			jule::Int _1e1737e81_j = it - expr.begin();
			jule::Ref<_1e1737e81_FnIns> _1e1737e81_ains = *it;
			{
				if (_1e1737e81_ains->_method_same(_14139_ins)) {
					return std::make_tuple(false,_1e1737e81_j);
				}
			}
			_iter_next_4347805520:;
			++it;
			_1e1737e81_j++;
			goto _iter_begin_4347805520;
		}
		_iter_end_4347805520:;
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1e1737e81_FnIns>>({_14139_ins}));
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1e1737e81_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e16025cb_Node::_method_is_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_EnumDecl>>() || _match_expr.type_is<jule::Ref<_1e16025cb_FnDecl>>() || _match_expr.type_is<jule::Ref<_1e16025cb_StructDecl>>() || _match_expr.type_is<jule::Ref<_1e16025cb_TraitDecl>>() || _match_expr.type_is<jule::Ref<_1e16025cb_TypeAliasDecl>>() || _match_expr.type_is<jule::Ref<_1e16025cb_FieldDecl>>() || _match_expr.type_is<jule::Ref<_1e16025cb_UseDecl>>() || _match_expr.type_is<jule::Ref<_1e16025cb_VarDecl>>() || _match_expr.type_is<jule::Ref<_1e16025cb_TypeDecl>>())) { goto _case_end_4334033536; }
		_case_begin_4334033536:;
		{
			return true;
		}
		goto _match_end_4334033088;
		_case_end_4334033536:;
		_case_begin_4334032576:;
		{
			return false;
		}
		goto _match_end_4334033088;
		_case_end_4334032576:;
		_match_end_4334033088:;
	}
}



jule::Bool _1e16025cb_Node::_method_is_comment(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_Comment>>() || _match_expr.type_is<jule::Ref<_1e16025cb_CommentGroup>>())) { goto _case_end_4334047920; }
		_case_begin_4334047920:;
		{
			return true;
		}
		goto _match_end_4334047472;
		_case_end_4334047920:;
		_case_begin_4334045968:;
		{
			return false;
		}
		goto _match_end_4334047472;
		_case_end_4334045968:;
		_match_end_4334047472:;
	}
}



jule::Bool _1e16025cb_Node::_method_is_impl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_Impl>>())) { goto _case_end_4334051248; }
		_case_begin_4334051248:;
		{
			return true;
		}
		goto _match_end_4334050800;
		_case_end_4334051248:;
		_case_begin_4334049872:;
		{
			return false;
		}
		goto _match_end_4334050800;
		_case_end_4334049872:;
		_match_end_4334050800:;
	}
}



jule::Bool _1e16025cb_Node::_method_is_use_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_UseDecl>>())) { goto _case_end_4334054304; }
		_case_begin_4334054304:;
		{
			return true;
		}
		goto _match_end_4334053856;
		_case_end_4334054304:;
		_case_begin_4334051808:;
		{
			return false;
		}
		goto _match_end_4334053856;
		_case_end_4334051808:;
		_match_end_4334053856:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1e16025cb_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e28b6a59_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



jule::Str _1e2a1e563_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



jule::Bool _1e2a1e563_Trait::_method_equals(jule::Ref<_1a2db8ce3_TypeKind> _2521_other) {
	jule::Ref<_1e2a1e563_Trait> _2613_trt = (_2521_other).alloc->_method_trt();
	if ((!(jule::real(_2613_trt)))) {
		return false;
	}
	return (&((*this))) == (_2613_trt).alloc;
}



jule::Bool _1e2a1e563_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



jule::Ref<_1e1737e81_Fn> _1e2a1e563_Trait::_method_find_method(jule::Str _4034_ident) {
	{
		auto expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4348168240:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1e2a1e563_f = *it;
			{
				if (_1e2a1e563_f->_field_ident == _4034_ident) {
					return _1e2a1e563_f;
				}
			}
			_iter_next_4348168240:;
			++it;
			goto _iter_begin_4348168240;
		}
		_iter_end_4348168240:;
	}
	return jule::new_ref<_1e1737e81_Fn>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a1e563_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e2a21d4b_EnumItem::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_value)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a21d4b_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



jule::Str _1e2a21d4b_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



jule::Bool _1e2a21d4b_Enum::_method_equals(jule::Ref<_1a2db8ce3_TypeKind> _3521_other) {
	jule::Ref<_1e2a21d4b_Enum> _3613_enm = (_3521_other).alloc->_method_enm();
	if ((!(jule::real(_3613_enm)))) {
		return false;
	}
	return (&((*this))) == (_3613_enm).alloc;
}



jule::Ref<_1e2a21d4b_EnumItem> _1e2a21d4b_Enum::_method_find_item(jule::Str _4732_ident) {
	{
		auto expr = (*this)._field_items;
		auto it = expr.begin();
		_iter_begin_4348180656:;
		if (it != expr.end()) {
			jule::Ref<_1e2a21d4b_EnumItem> _1e2a21d4b_item = *it;
			{
				if (_1e2a21d4b_item->_field_ident == _4732_ident) {
					return _1e2a21d4b_item;
				}
			}
			_iter_next_4348180656:;
			++it;
			goto _iter_begin_4348180656;
		}
		_iter_end_4348180656:;
	}
	return jule::new_ref<_1e2a21d4b_EnumItem>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a21d4b_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



jule::Ref<_1e2a7b966_ImportInfo> _1e2a7b966_ImportInfo::_method_find_package(jule::Str ) {
	return jule::new_ref<_1e2a7b966_ImportInfo>();
}



jule::Ref<_1e2a7b966_ImportInfo> _1e2a7b966_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1e2a7b966_ImportInfo>)> ) {
	return jule::new_ref<_1e2a7b966_ImportInfo>();
}



jule::Ref<_1ba80e105_Var> _1e2a7b966_ImportInfo::_method_find_var(jule::Str _14731_ident,jule::Bool _14743_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14731_ident)))) {
		return jule::new_ref<_1ba80e105_Var>();
	}
	return _1e2a7b966_find_var_in_package((*this)._field_package->_field_files,_14731_ident,false);
}



jule::Ref<_1a2db8ce3_TypeAlias> _1e2a7b966_ImportInfo::_method_find_type_alias(jule::Str _16038_ident,jule::Bool _16050_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_16038_ident)))) {
		return jule::new_ref<_1a2db8ce3_TypeAlias>();
	}
	return _1e2a7b966_find_type_alias_in_package((*this)._field_package->_field_files,_16038_ident,false);
}



jule::Ref<_1e177440c_Struct> _1e2a7b966_ImportInfo::_method_find_struct(jule::Str _17334_ident,jule::Bool _17346_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17334_ident)))) {
		return jule::new_ref<_1e177440c_Struct>();
	}
	return _1e2a7b966_find_struct_in_package((*this)._field_package->_field_files,_17334_ident,false);
}



jule::Ref<_1e1737e81_Fn> _1e2a7b966_ImportInfo::_method_find_fn(jule::Str _18630_ident,jule::Bool _18642_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18630_ident)))) {
		return jule::new_ref<_1e1737e81_Fn>();
	}
	return _1e2a7b966_find_fn_in_package((*this)._field_package->_field_files,_18630_ident,false);
}



jule::Ref<_1e2a1e563_Trait> _1e2a7b966_ImportInfo::_method_find_trait(jule::Str _19833_ident) {
	if ((!((*this)._method_is_lookupable(_19833_ident)))) {
		return jule::new_ref<_1e2a1e563_Trait>();
	}
	return _1e2a7b966_find_trait_in_package((*this)._field_package->_field_files,_19833_ident);
}



jule::Ref<_1e2a21d4b_Enum> _1e2a7b966_ImportInfo::_method_find_enum(jule::Str _21032_ident) {
	if ((!((*this)._method_is_lookupable(_21032_ident)))) {
		return jule::new_ref<_1e2a21d4b_Enum>();
	}
	return _1e2a7b966_find_enum_in_package((*this)._field_package->_field_files,_21032_ident);
}



jule::Bool _1e2a7b966_ImportInfo::_method_is_lookupable(jule::Str _22028_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_22028_ident)))) {
				return false;
			}
		}
	}
	return true;
}



jule::Bool _1e2a7b966_ImportInfo::_method_exist_ident(jule::Str _24026_ident) {
	{
		auto expr = (*this)._field_selected;
		auto it = expr.begin();
		_iter_begin_4333758544:;
		if (it != expr.end()) {
			_1e15a2bb9_Token _1e2a7b966_sident = *it;
			{
				if (_1e2a7b966_sident._field_kind == _24026_ident) {
					return true;
				}
			}
			_iter_next_4333758544:;
			++it;
			goto _iter_begin_4333758544;
		}
		_iter_end_4333758544:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a7b966_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1e2a276ae_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



jule::Bool _1e2a276ae_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1e2a276ae_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1ba80e105_Var::_method_is_initialized(void) {
	return jule::real((*this)._field_value);
}



jule::Bool _1ba80e105_Var::_method_is_type_inferred(void) {
	return (!(jule::real((*this)._field_kind))) || (!(jule::real((*this)._field_kind->_field_decl)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ba80e105_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



void _1a2c73c9c_TypeCompatibilityChecker::_method_push_err(jule::Str _14327_fmt,jule::Slice<jule::Any> _14340_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_14327_fmt,_14340_args);
}



jule::Bool _1a2c73c9c_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _14732_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_14732_ok = true;
		return _14732_ok;
	}
	jule::Ref<_1e2a1e563_Trait> _15213_trt = (*this)._field_dest->_method_trt();
	jule::Bool _15317_ref = false;
	{
		if (!((jule::real((*this)._field_src->_method_ref())))) { goto _case_end_4348982016; }
		_case_begin_4348982016:;
		{
			_15317_ref=true;
			(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
			if (jule::real((*this)._field_src->_method_strct())) {
				_14732_ok = false;
				return _14732_ok;
			}
			goto _case_begin_4348981552;
		}
		goto _match_end_4348980464;
		_case_end_4348982016:;
		if (!((jule::real((*this)._field_src->_method_strct())))) { goto _case_end_4348981552; }
		_case_begin_4348981552:;
		{
			jule::Ref<_1e177440c_StructIns> _16417_s = (*this)._field_src->_method_strct();
			if ((!(_16417_s->_field_decl->_method_is_implements(_15213_trt)))) {
				_14732_ok = false;
				return _14732_ok;
			}
			if (_1a2c73c9c_trait_has_reference_receiver(_15213_trt) && (!(_15317_ref))) {
				(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>({}));
				_14732_ok = false;
				return _14732_ok;
			}
			_14732_ok = true;
			return _14732_ok;
		}
		goto _match_end_4348980464;
		_case_end_4348981552:;
		if (!((jule::real((*this)._field_src->_method_trt())))) { goto _case_end_4348981648; }
		_case_begin_4348981648:;
		{
			_14732_ok = _15213_trt == (*this)._field_src->_method_trt();
			return _14732_ok;
		}
		goto _match_end_4348980464;
		_case_end_4348981648:;
		_case_begin_4348980576:;
		{
			_14732_ok = false;
			return _14732_ok;
		}
		goto _match_end_4348980464;
		_case_end_4348980576:;
		_match_end_4348980464:;
	}
}



jule::Bool _1a2c73c9c_TypeCompatibilityChecker::_method_check_ref(void) {
	jule::Bool _18430_ok = jule::Bool();
	if ((*this)._field_dest->_method_to_str() == (*this)._field_src->_method_to_str()) {
		_18430_ok = true;
		return _18430_ok;
	} else if ((!((*this)._field_deref))) {
		_18430_ok = false;
		return _18430_ok;
	} else if ((!(jule::real((*this)._field_src->_method_ref())))) {
		(*this)._field_dest=(*this)._field_dest->_method_ref()->_field_elem;
		_18430_ok = (*this)._method_check();
		return _18430_ok;
	}
	(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	_18430_ok = (*this)._method_check();
	return _18430_ok;
}



jule::Bool _1a2c73c9c_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _19830_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_19830_ok = true;
		return _19830_ok;
	}
	jule::Ref<_1a2db8ce3_Ptr> _20317_src = (*this)._field_src->_method_ptr();
	if ((!(jule::real(_20317_src)))) {
		_19830_ok = false;
		return _19830_ok;
	}
	jule::Ref<_1a2db8ce3_Ptr> _20817_dest = (*this)._field_dest->_method_ptr();
	if (_20817_dest->_method_is_unsafe()) {
		_19830_ok = true;
		return _19830_ok;
	}
	_1a2c73c9c_TypeCompatibilityChecker _21417_sub = _1a2c73c9c_TypeCompatibilityChecker((*this)._field_s,_20817_dest->_field_elem,_20317_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_19830_ok = _21417_sub._method_check();
	return _19830_ok;
}



jule::Bool _1a2c73c9c_TypeCompatibilityChecker::_method_check_slc(void) {
	jule::Bool _22530_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_22530_ok = true;
		return _22530_ok;
	}
	jule::Ref<_1a2db8ce3_Slc> _23017_src = (*this)._field_src->_method_slc();
	if ((!(jule::real(_23017_src)))) {
		_22530_ok = false;
		return _22530_ok;
	}
	jule::Ref<_1a2db8ce3_Slc> _23417_dest = (*this)._field_dest->_method_slc();
	_1a2c73c9c_TypeCompatibilityChecker _23617_sub = _1a2c73c9c_TypeCompatibilityChecker((*this)._field_s,_23417_dest->_field_elem,_23017_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_22530_ok = _23617_sub._method_check();
	return _22530_ok;
}



jule::Bool _1a2c73c9c_TypeCompatibilityChecker::_method_check_arr(void) {
	jule::Bool _24730_ok = jule::Bool();
	jule::Ref<_1a2db8ce3_Arr> _24817_src = (*this)._field_src->_method_arr();
	if ((!(jule::real(_24817_src)))) {
		_24730_ok = false;
		return _24730_ok;
	}
	jule::Ref<_1a2db8ce3_Arr> _25217_dest = (*this)._field_dest->_method_arr();
	if (_25217_dest->_field_n != _24817_src->_field_n) {
		_24730_ok = false;
		return _24730_ok;
	}
	_1a2c73c9c_TypeCompatibilityChecker _25717_sub = _1a2c73c9c_TypeCompatibilityChecker((*this)._field_s,_25217_dest->_field_elem,_24817_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_24730_ok = _25717_sub._method_check();
	return _24730_ok;
}



jule::Bool _1a2c73c9c_TypeCompatibilityChecker::_method_check_map(void) {
	jule::Bool _26830_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_26830_ok = true;
		return _26830_ok;
	}
	jule::Ref<_1a2db8ce3_Map> _27317_src = (*this)._field_src->_method_map();
	if ((!(jule::real(_27317_src)))) {
		_26830_ok = false;
		return _26830_ok;
	}
	jule::Ref<_1a2db8ce3_Map> _27817_dest = (*this)._field_dest->_method_map();
	_1a2c73c9c_TypeCompatibilityChecker _28017_sub = _1a2c73c9c_TypeCompatibilityChecker((*this)._field_s,_27817_dest->_field_key,_27317_src->_field_key,(*this)._field_error_token,jule::Bool(),jule::Bool(),true);
	if ((!(_28017_sub._method_check()))) {
		_26830_ok = false;
		return _26830_ok;
	}
	_28017_sub._field_src=_27317_src->_field_val;
	_28017_sub._field_dest=_27817_dest->_field_val;
	_26830_ok = _28017_sub._method_check();
	return _26830_ok;
}



jule::Bool _1a2c73c9c_TypeCompatibilityChecker::_method_check_struct(void) {
	jule::Bool _29633_ok = jule::Bool();
	jule::Ref<_1e177440c_StructIns> _29717_src = (*this)._field_src->_method_strct();
	if ((!(jule::real(_29717_src)))) {
		_29633_ok = false;
		return _29633_ok;
	}
	jule::Ref<_1e177440c_StructIns> _30117_dest = (*this)._field_dest->_method_strct();
	{
		if (!(((_30117_dest->_field_decl).alloc != (_29717_src->_field_decl).alloc))) { goto _case_end_4349043808; }
		_case_begin_4349043808:;
		{
			_29633_ok = false;
			return _29633_ok;
		}
		goto _match_end_4349043664;
		_case_end_4349043808:;
		if (!((_30117_dest->_field_generics.len() == 0LL))) { goto _case_end_4349043920; }
		_case_begin_4349043920:;
		{
			_29633_ok = true;
			return _29633_ok;
		}
		goto _match_end_4349043664;
		_case_end_4349043920:;
		_match_end_4349043664:;
	}
	{
		auto expr = _30117_dest->_field_generics;
		auto it = expr.begin();
		_iter_begin_4349046192:;
		if (it != expr.end()) {
			jule::Int _1a2c73c9c_i = it - expr.begin();
			jule::Ref<_1a2db8ce3_TypeKind> _1a2c73c9c_dg = *it;
			{
				jule::Ref<_1a2db8ce3_TypeKind> _31121_sg = _29717_src->_field_generics[_1a2c73c9c_i];
				_1a2c73c9c_TypeCompatibilityChecker _31221_sub = _1a2c73c9c_TypeCompatibilityChecker((*this)._field_s,_1a2c73c9c_dg,_31121_sg,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_31221_sub._method_check()))) {
					_29633_ok = false;
					return _29633_ok;
				}
			}
			_iter_next_4349046192:;
			++it;
			_1a2c73c9c_i++;
			goto _iter_begin_4349046192;
		}
		_iter_end_4349046192:;
	}
	_29633_ok = true;
	return _29633_ok;
}



jule::Bool _1a2c73c9c_TypeCompatibilityChecker::_method_check_fn(void) {
	jule::Bool _32529_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_32529_ok = true;
		return _32529_ok;
	}
	jule::Ref<_1e1737e81_FnIns> _33017_src = (*this)._field_src->_method_fnc();
	if ((!(jule::real(_33017_src)))) {
		_32529_ok = false;
		return _32529_ok;
	}
	jule::Ref<_1e1737e81_FnIns> _33517_dest = (*this)._field_dest->_method_fnc();
	_32529_ok = _33517_dest->_method_equals(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_33017_src)));
	return _32529_ok;
}



jule::Bool _1a2c73c9c_TypeCompatibilityChecker::_method_check_enum(void) {
	jule::Bool _33931_ok = jule::Bool();
	jule::Ref<_1e2a21d4b_Enum> _34013_r = (*this)._field_src->_method_enm();
	if ((!(jule::real(_34013_r)))) {
		_33931_ok = false;
		return _33931_ok;
	}
	_33931_ok = ((*this)._field_dest->_method_enm()).alloc == (_34013_r).alloc;
	return _33931_ok;
}



jule::Bool _1a2c73c9c_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _34731_ok = jule::Bool();
	jule::Ref<_1a2db8ce3_Prim> _34813_dest = (*this)._field_dest->_method_prim();
	jule::Ref<_1a2db8ce3_Prim> _34917_src = (*this)._field_src->_method_prim();
	if ((!(jule::real(_34917_src)))) {
		_34731_ok = _34813_dest->_method_is_any();
		return _34731_ok;
	}
	if (_34813_dest->_method_is_any()) {
		_34731_ok = (!((*this)._field_ignore_any)) || _34917_src->_method_is_any();
		return _34731_ok;
	}
	_34731_ok = _1a4415c12_types_are_compatible(_34813_dest->_method_to_str(),_34917_src->_method_to_str());
	return _34731_ok;
}



jule::Bool _1a2c73c9c_TypeCompatibilityChecker::_method_check_cpp_linked(void) {
	jule::Bool _35937_ok = jule::Bool();
	_35937_ok = (*this)._field_src->_method_cpp_linked() && ((*this)._field_dest->_field_cpp_ident == (*this)._field_src->_field_cpp_ident);
	return _35937_ok;
}



jule::Bool _1a2c73c9c_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _36426_ok = jule::Bool();
	if ((!(jule::real((*this)._field_src)))) {
		_36426_ok = false;
		return _36426_ok;
	}
	if ((*this)._field_dest->_field_variadic != (*this)._field_src->_field_variadic) {
		_36426_ok = false;
		return _36426_ok;
	} else if ((*this)._field_dest->_field_variadic) {
		(*this)._field_ignore_any=true;
	}
	if (jule::real((*this)._field_dest->_method_ref())) {
		_36426_ok = (*this)._method_check_ref();
		return _36426_ok;
	}
	if ((!((*this)._field_sub_check)) && jule::real((*this)._field_src->_method_ref())) {
		(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	}
	{
		if (!(((*this)._field_dest->_method_cpp_linked()))) { goto _case_end_4349086176; }
		_case_begin_4349086176:;
		{
			_36426_ok = (*this)._method_check_cpp_linked();
			return _36426_ok;
		}
		goto _match_end_4349082096;
		_case_end_4349086176:;
		if (!((jule::real((*this)._field_dest->_method_prim())))) { goto _case_end_4349085776; }
		_case_begin_4349085776:;
		{
			_36426_ok = (*this)._method_check_prim();
			return _36426_ok;
		}
		goto _match_end_4349082096;
		_case_end_4349085776:;
		if (!((jule::real((*this)._field_dest->_method_trt())))) { goto _case_end_4349085872; }
		_case_begin_4349085872:;
		{
			_36426_ok = (*this)._method_check_trait();
			return _36426_ok;
		}
		goto _match_end_4349082096;
		_case_end_4349085872:;
		if (!((jule::real((*this)._field_dest->_method_ptr())))) { goto _case_end_4349085968; }
		_case_begin_4349085968:;
		{
			_36426_ok = (*this)._method_check_ptr();
			return _36426_ok;
		}
		goto _match_end_4349082096;
		_case_end_4349085968:;
		if (!((jule::real((*this)._field_dest->_method_slc())))) { goto _case_end_4349085280; }
		_case_begin_4349085280:;
		{
			_36426_ok = (*this)._method_check_slc();
			return _36426_ok;
		}
		goto _match_end_4349082096;
		_case_end_4349085280:;
		if (!((jule::real((*this)._field_dest->_method_arr())))) { goto _case_end_4349085376; }
		_case_begin_4349085376:;
		{
			_36426_ok = (*this)._method_check_arr();
			return _36426_ok;
		}
		goto _match_end_4349082096;
		_case_end_4349085376:;
		if (!((jule::real((*this)._field_dest->_method_map())))) { goto _case_end_4349085472; }
		_case_begin_4349085472:;
		{
			_36426_ok = (*this)._method_check_map();
			return _36426_ok;
		}
		goto _match_end_4349082096;
		_case_end_4349085472:;
		if (!((jule::real((*this)._field_dest->_method_enm())))) { goto _case_end_4349085568; }
		_case_begin_4349085568:;
		{
			_36426_ok = (*this)._method_check_enum();
			return _36426_ok;
		}
		goto _match_end_4349082096;
		_case_end_4349085568:;
		if (!((jule::real((*this)._field_dest->_method_strct())))) { goto _case_end_4349086416; }
		_case_begin_4349086416:;
		{
			_36426_ok = (*this)._method_check_struct();
			return _36426_ok;
		}
		goto _match_end_4349082096;
		_case_end_4349086416:;
		if (!((jule::real((*this)._field_dest->_method_fnc())))) { goto _case_end_4349086512; }
		_case_begin_4349086512:;
		{
			_36426_ok = (*this)._method_check_fn();
			return _36426_ok;
		}
		goto _match_end_4349082096;
		_case_end_4349086512:;
		if (!(((*this)._field_dest->_method_nil_compatible()))) { goto _case_end_4349086608; }
		_case_begin_4349086608:;
		{
			_36426_ok = (*this)._field_src->_method_is_nil();
			return _36426_ok;
		}
		goto _match_end_4349082096;
		_case_end_4349086608:;
		_case_begin_4349084592:;
		{
			_36426_ok = false;
			return _36426_ok;
		}
		goto _match_end_4349082096;
		_case_end_4349084592:;
		_match_end_4349082096:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a2c73c9c_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_any:" << _Src._field_ignore_any << ", ";
	_Stream << "deref:" << _Src._field_deref << ", ";
	_Stream << "sub_check:" << _Src._field_sub_check;
	_Stream << "}";
	return _Stream;
}



jule::Bool _1d406e253_is_surrogate(jule::I32 _6021_r) {
	return (55296LL <= _6021_r) && (_6021_r < 57344LL);
}



jule::I32 _1d406e253_decode_rune(jule::I32 _6720_r1,jule::I32 _6730_r2) {
	if ((((55296LL <= _6720_r1) && (_6720_r1 < 56320LL)) && (56320LL <= _6730_r2)) && (_6730_r2 < 57344LL)) {
		return static_cast<jule::I32>((((_6720_r1 - 55296LL) << 10LL) | (_6730_r2 - 56320LL)) + 65536LL);
	}
	return 65533LL;
}



std::tuple<jule::I32,jule::I32> _1d406e253_encode_rune(jule::I32 _7724_r) {
	jule::I32 _7735_r1 = jule::I32();
	jule::I32 _7745_r2 = jule::I32();
	if ((_7724_r < 65536LL) || (_7724_r > 1114111LL)) {
		_7735_r1 = 65533LL;
		_7745_r2 = 65533LL;
		return std::make_tuple(_7735_r1,_7745_r2);
	}
	_7724_r-=65536LL;
	_7735_r1 = static_cast<jule::I32>(55296LL + ((_7724_r >> 10LL) & 1023LL));
	_7745_r2 = static_cast<jule::I32>(56320LL + (_7724_r & 1023LL));
	return std::make_tuple(_7735_r1,_7745_r2);
}



jule::Slice<jule::U16> _1d406e253_encode(jule::Slice<jule::I32> _8615_s) {
	jule::I64 _8713_n = _8615_s.len();
	{
		auto expr = _8615_s;
		auto it = expr.begin();
		_iter_begin_4323992432:;
		if (it != expr.end()) {
			jule::I32 _1d406e253_v = *it;
			{
				if (_1d406e253_v >= 65536LL) {
					(_8713_n)++;
				}
			}
			_iter_next_4323992432:;
			++it;
			goto _iter_begin_4323992432;
		}
		_iter_end_4323992432:;
	}
	jule::Slice<jule::U16> _9413_a = jule::Slice<jule::U16>::alloc(_8713_n);
	_8713_n=0LL;
	{
		auto expr = _8615_s;
		auto it = expr.begin();
		_iter_begin_4323995376:;
		if (it != expr.end()) {
			jule::I32 _1d406e253_v = *it;
			{
				{
					if (!(((0LL <= _1d406e253_v) && (_1d406e253_v < 55296LL)) || ((57344LL <= _1d406e253_v) && (_1d406e253_v < 65536LL)))) { goto _case_end_4323997792; }
					_case_begin_4323997792:;
					{
						_9413_a[_8713_n]=static_cast<jule::U16>(_1d406e253_v);
						(_8713_n)++;
					}
					goto _match_end_4323996832;
					_case_end_4323997792:;
					if (!(((65536LL <= _1d406e253_v) && (_1d406e253_v <= 1114111LL)))) { goto _case_end_4323999472; }
					_case_begin_4323999472:;
					{
						jule::I32 _10418_r1;
						jule::I32 _10422_r2;
						std::tie(_10418_r1,_10422_r2) = _1d406e253_encode_rune(_1d406e253_v);
						_9413_a[_8713_n]=static_cast<jule::U16>(_10418_r1);
						_9413_a[_8713_n + 1LL]=static_cast<jule::U16>(_10422_r2);
						_8713_n+=2LL;
					}
					goto _match_end_4323996832;
					_case_end_4323999472:;
					_case_begin_4323997008:;
					{
						_9413_a[_8713_n]=static_cast<jule::U16>(65533LLU);
						(_8713_n)++;
					}
					goto _match_end_4323996832;
					_case_end_4323997008:;
					_match_end_4323996832:;
				}
			}
			_iter_next_4323995376:;
			++it;
			goto _iter_begin_4323995376;
		}
		_iter_end_4323995376:;
	}
	return _9413_a.slice(0LL,_8713_n);
}



jule::Slice<jule::I32> _1d406e253_decode(jule::Slice<jule::U16> _11815_s) {
	jule::Slice<jule::I32> _11913_a = jule::Slice<jule::I32>::alloc(static_cast<jule::I64>(_11815_s.len()));
	jule::Int _12013_n = 0LL;
	jule::Int _12113_i = 0LL;
	for (; _12113_i < _11815_s.len(); (_12113_i)++) {
		{
			jule::U16 _12313_r = _11815_s[_12113_i];
			{
				if (!((_12313_r < 55296LL) || (57344LL <= _12313_r))) { goto _case_end_4324012016; }
				_case_begin_4324012016:;
				{
					_11913_a[_12013_n]=static_cast<jule::I32>(_12313_r);
				}
				goto _match_end_4324011120;
				_case_end_4324012016:;
				if (!((((((55296LL <= _12313_r) && (_12313_r < 56320LL)) && ((_12113_i + 1LL) < _11815_s.len())) && (56320LL <= _11815_s[_12113_i + 1LL])) && (_11815_s[_12113_i + 1LL] < 57344LL)))) { goto _case_end_4324013056; }
				_case_begin_4324013056:;
				{
					_11913_a[_12013_n]=static_cast<jule::I32>(_1d406e253_decode_rune(static_cast<jule::I32>(_12313_r),static_cast<jule::I32>(_11815_s[_12113_i + 1LL])));
					(_12113_i)++;
				}
				goto _match_end_4324011120;
				_case_end_4324013056:;
				_case_begin_4324011232:;
				{
					_11913_a[_12013_n]=65533LL;
				}
				goto _match_end_4324011120;
				_case_end_4324011232:;
				_match_end_4324011120:;
			}
			(_12013_n)++;
		}
	_iter_next_4324006880:;
	}
	_iter_end_4324006880:;
	return _11913_a.slice(0LL,_12013_n);
}



jule::Slice<jule::U16> _1d406e253_append_rune(jule::Slice<jule::U16> _14524_a,jule::I32 _14534_r) {
	{
		if (!(((0LL <= _14534_r) && (_14534_r < 55296LL)) || ((57344LL <= _14534_r) && (_14534_r < 65536LL)))) { goto _case_end_4324020816; }
		_case_begin_4324020816:;
		{
			return jule::append(_14524_a,jule::Slice<jule::U16>({static_cast<jule::U16>(_14534_r)}));
		}
		goto _match_end_4324008848;
		_case_end_4324020816:;
		if (!(((65536LL <= _14534_r) && (_14534_r <= 1114111LL)))) { goto _case_end_4324020912; }
		_case_begin_4324020912:;
		{
			jule::I32 _15214_r1;
			jule::I32 _15218_r2;
			std::tie(_15214_r1,_15218_r2) = _1d406e253_encode_rune(_14534_r);
			return jule::append(_14524_a,jule::Slice<jule::U16>({static_cast<jule::U16>(_15214_r1),static_cast<jule::U16>(_15218_r2)}));
		}
		goto _match_end_4324008848;
		_case_end_4324020912:;
		_match_end_4324008848:;
	}
	return jule::append(_14524_a,jule::Slice<jule::U16>({65533LLU}));
}



void* _1d40351d6_malloc(jule::Uint _2215_size) {
	return malloc(_2215_size);
}



void* _1d40351d6_calloc(jule::Uint _2915_size,jule::Uint _2927_n) {
	return calloc(_2915_size,_2927_n);
}



void* _1d40351d6_realloc(void* _3727_ptr,jule::Uint _3741_size) {
	return realloc(_3727_ptr,_3741_size);
}



void _1d40351d6_free(void* _4524_ptr) {
	free(_4524_ptr);
}























jule::Str _1ec9a2057_type_id(jule::Any _11316_a) {
	if (_11316_a == nullptr) {
		return jule::Str();
	}
	return __jule_type_id_of_any(_11316_a);
}



jule::Slice<jule::U16> _1d4048606_utf16_from_str(jule::Str _1523_s) {
	
	jule::Slice<jule::I32> _219_runes = static_cast<jule::Slice<jule::I32>>(_1523_s);
	jule::Slice<jule::U16> _2213_buff = jule::Slice<jule::U16>::alloc(0LL,static_cast<jule::I64>(_219_runes.len()));
	{
		auto expr = _219_runes;
		auto it = expr.begin();
		_iter_begin_4324067600:;
		if (it != expr.end()) {
			jule::I32 _1d4048606_r = *it;
			{
				if (_1d4048606_r == 0LL) {
					goto _iter_end_4324067600;
				}
				_2213_buff=_1d406e253_append_rune(_2213_buff,_1d4048606_r);
			}
			_iter_next_4324067600:;
			++it;
			goto _iter_begin_4324067600;
		}
		_iter_end_4324067600:;
	}
	return _1d406e253_append_rune(_2213_buff,0LL);
}



jule::Str _1d4048606_utf16_to_str(jule::Slice<jule::U16> _3521_s) {
	if (_3521_s == nullptr) {
		return jule::Str();
	}
	jule::Slice<jule::U16> _3913_code_page = (*((&(_3521_s))));
	{
		auto expr = _3521_s;
		auto it = expr.begin();
		_iter_begin_4324075296:;
		if (it != expr.end()) {
			jule::Int _1d4048606_i = it - expr.begin();
			jule::U16 _1d4048606_v = *it;
			{
				if (_1d4048606_v == 0LL) {
					_3913_code_page=_3913_code_page.slice(0LL,_1d4048606_i);
					goto _iter_end_4324075296;
				}
			}
			_iter_next_4324075296:;
			++it;
			_1d4048606_i++;
			goto _iter_begin_4324075296;
		}
		_iter_end_4324075296:;
	}
	return static_cast<jule::Str>(_1d406e253_decode(_3913_code_page));
}



jule::Str _1d4048606_u16_ptr_to_str(jule::U16* _5130_s) {
	if (_5130_s == nullptr) {
		return jule::Str();
	}
	jule::Slice<jule::U16> _5613_code_page = nullptr;
	jule::Int _5713_i = 0LL;
	for (; ; (_5713_i)++) {
		{
			jule::U16 _5913_r = _5130_s[_5713_i];
			if (_5913_r == 0LL) {
				return static_cast<jule::Str>(_1d406e253_decode(_5613_code_page));
			}
			_5613_code_page=jule::append(_5613_code_page,jule::Slice<jule::U16>({_5913_r}));
		}
	_iter_next_4324077872:;
	}
	_iter_end_4324077872:;
	return jule::Str();
}



jule::Str _1d4048606_byte_ptr_to_str(jule::U8* _7031_s) {
	if (_7031_s == nullptr) {
		return jule::Str();
	}
	return __jule_str_from_byte_ptr(_7031_s);
}



jule::Int _1d40342a1_puts(jule::Str _913_s) {
	return puts(((char*)((&(_913_s[0LL])))));
}



jule::Int _1d403842b_get_last_errno(void) {
	return errno;
}



jule::Uintptr _1d40585a0_get_std_handle(jule::Uintptr _5523_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_5523_stdh)));
}



jule::Bool _1d40585a0_close_handle(jule::Uintptr _5628_stdh) {
	return CloseHandle(((void*)(_5628_stdh)));
}



jule::Int _1d40585a0_wstat(jule::U16* _5921_path,struct stat* _5937_stat) {
	return static_cast<jule::Int>(wstat(((wchar_t*)(_5921_path)),_5937_stat));
}



jule::Int _1d40585a0__wopen(jule::U16* _6422_path,jule::Int _6434_flag,jule::Int _6445_mode) {
	return static_cast<jule::Int>(_wopen(((wchar_t*)((&(_6422_path[0LL])))),_6434_flag,_6445_mode));
}



jule::U32 _1d40585a0_get_last_error(void) {
	return static_cast<jule::U32>(GetLastError());
}



jule::U32 _1d40585a0_get_current_directory(jule::U32 _7337_bufflen,jule::U16* _7355_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7337_bufflen,((wchar_t*)(_7355_buff))));
}



jule::Bool _1d40585a0_set_current_directory(jule::U16* _7937_path) {
	return SetCurrentDirectoryW(((wchar_t*)(_7937_path)));
}



jule::Bool _1d40585a0_delete_file(jule::U16* _8427_path) {
	return DeleteFileW(((wchar_t*)(_8427_path)));
}



jule::Bool _1d40585a0_create_directory(jule::U16* _8932_path) {
	return CreateDirectoryW(((wchar_t*)(_8932_path)),nullptr);
}



jule::Bool _1d40585a0_remove_directory(jule::U16* _9432_path) {
	return RemoveDirectoryW(((wchar_t*)(_9432_path)));
}



_WDIR* _1d40585a0__wopendir(jule::U16* _9925_path) {
	return _wopendir(((wchar_t*)(_9925_path)));
}



struct _wdirent* _1d40585a0__wreaddir(_WDIR* _10229_dir) {
	return _wreaddir(_10229_dir);
}



jule::Int _1d40585a0__wclosedir(_WDIR* _10530_dir) {
	return static_cast<jule::Int>(_wclosedir(_10530_dir));
}



jule::U32 _1d40585a0_get_full_path_name(jule::U16* _10834_path,jule::U32 _10846_bufflen,jule::U16* _1095_buff,jule::U16** _10917_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10834_path)),_10846_bufflen,((wchar_t*)(_1095_buff)),((wchar_t**)(_10917_fname))));
}



jule::Bool _1d40585a0_get_console_mode(jule::Uintptr _11425_handle,jule::Int& _11446_mode) {
	return GetConsoleMode(((HANDLE)(_11425_handle)),((DWORD*)((&(_11446_mode)))));
}



jule::Bool _1d40585a0_set_console_mode(jule::Uintptr _11925_handle,jule::Int _11941_mode) {
	return SetConsoleMode(((HANDLE)(_11925_handle)),static_cast<DWORD>(_11941_mode));
}



jule::Bool _1d40585a0_write_console(jule::Uintptr _12429_handle,jule::U16* _12445_buffer,jule::Int _12459_to_write,jule::Int& _12510_written,void* _12524_reserved) {
	return WriteConsoleW(((HANDLE)(_12429_handle)),((void*)(_12445_buffer)),static_cast<DWORD>(_12459_to_write),((DWORD*)(_12510_written)),_12524_reserved);
}



jule::Bool _1d40585a0_read_console(jule::Uintptr _13128_handle,jule::U16* _13148_buffer,jule::Int _13162_to_read,jule::Int& _13210_readed,void* _13223_input_control) {
	return ReadConsoleW(((HANDLE)(_13128_handle)),((void*)(_13148_buffer)),static_cast<DWORD>(_13162_to_read),((DWORD*)((&(_13210_readed)))),_13223_input_control);
}



jule::I64 _1d4097a1d_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



jule::Int _1d4097a1d_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



jule::Int _1d4097a1d_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



jule::Int _1d4097a1d_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



void _1d4097a1d_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



jule::Bool _1ec9a1c7c_is_path_sep(jule::U8 _4820_c) {
	return (_4820_c == 92LL) || (_4820_c == '/');
}



jule::Bool _1ec9a1c7c_is_slash(jule::U8 _5213_c) {
	return (_5213_c == '\\') || (_5213_c == '/');
}



jule::U8 _1ec9a1c7c_to_upper(jule::U8 _5413_c) {
	if (('a' <= _5413_c) && (_5413_c <= 'z')) {
		return static_cast<jule::U8>(_5413_c - 32LL);
	}
	return _5413_c;
}



jule::Bool _1ec9a1c7c_is_abs(jule::Str _6219_path) {
	jule::Int _639_l = _1ec9a1c7c_volume_name_len(_6219_path);
	if (_639_l == 0LL) {
		return false;
	}
	if (_1ec9a1c7c_is_slash(_6219_path[0LL]) && _1ec9a1c7c_is_slash(_6219_path[1LL])) {
		return true;
	}
	_6219_path=_6219_path.slice(_639_l);
	if (_6219_path == jule::Str()) {
		return false;
	}
	return _1ec9a1c7c_is_slash(_6219_path[0LL]);
}



jule::Int _1ec9a1c7c_volume_name_len(jule::Str _8220_path) {
	if (_8220_path.len() < 2LL) {
		return 0LL;
	}
	jule::U8 _879_c = _8220_path[0LL];
	if ((_8220_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z')))) {
		return 2LL;
	}
	if ((!(_1ec9a1c7c_is_slash(_8220_path[0LL]))) || (!(_1ec9a1c7c_is_slash(_8220_path[1LL])))) {
		return 0LL;
	}
	jule::Str _9510_p1;
	jule::Str _9518_rest;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _1ec9a1c7c_cut_path(_8220_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();
	jule::Bool _9713_ok = false;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _1ec9a1c7c_cut_path(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8220_path.len());
	}
	if ((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1))) {
		return static_cast<jule::I64>((_8220_path.len() - _9518_rest.len()) - 1LL);
	}
	if ((((_9613_p2.len() == 3LL) && (_1ec9a1c7c_to_upper(_9613_p2[0LL]) == 'U')) && (_1ec9a1c7c_to_upper(_9613_p2[1LL]) == 'N')) && (_1ec9a1c7c_to_upper(_9613_p2[2LL]) == 'C')) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _1ec9a1c7c_cut_path(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _1ec9a1c7c_cut_path(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8220_path.len());
		}
	}
	return static_cast<jule::I64>((_8220_path.len() - _9518_rest.len()) - 1LL);
}



std::tuple<jule::Str,jule::Str,jule::Bool> _1ec9a1c7c_cut_path(jule::Str _11913_path) {
	jule::Str _11926_before = jule::Str();
	jule::Str _11939_after = jule::Str();
	jule::Bool _11951_found = jule::Bool();
	{
		auto expr = _11913_path;
		auto it = expr.begin();
		_iter_begin_4324362464:;
		if (it != expr.end()) {
			jule::Int _1ec9a1c7c_i = it - expr.begin();
			{
				if (_1ec9a1c7c_is_slash(_11913_path[_1ec9a1c7c_i])) {
					_11926_before = _11913_path.slice(0LL,_1ec9a1c7c_i);
					_11939_after = _11913_path.slice(_1ec9a1c7c_i + 1LL);
					_11951_found = true;
					return std::make_tuple(_11926_before,_11939_after,_11951_found);
				}
			}
			_iter_next_4324362464:;
			++it;
			_1ec9a1c7c_i++;
			goto _iter_begin_4324362464;
		}
		_iter_end_4324362464:;
	}
	_11926_before = _11913_path;
	_11939_after = jule::Str();
	_11951_found = false;
	return std::make_tuple(_11926_before,_11939_after,_11951_found);
}



std::tuple<jule::Str,jule::Bool> _1ec9a1c7c_full_path(jule::Str _12814_name) {
	jule::Str _12827_path = jule::Str();
	jule::Bool _12838_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16_name = _1d4048606_utf16_from_str(_12814_name);
	jule::U16* _1309_p = (&(_1299_utf16_name[0LL]));
	jule::U32 _13113_n = 100LLU;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::Int>(_13113_n));
			_13113_n=static_cast<jule::U32>(static_cast<jule::U32>(_1d40585a0_get_full_path_name(_1309_p,static_cast<jule::U32>(_13317_buff.len()),(&(_13317_buff[0LL])),nullptr)));
			if (_13113_n == 0LL) {
				_12827_path = jule::Str();
				_12838_ok = false;
				return std::make_tuple(_12827_path,_12838_ok);
			}
			if (_13113_n <= static_cast<jule::U32>(_13317_buff.len())) {
				_12827_path = _1d4048606_utf16_to_str(_13317_buff.slice(0LL,static_cast<jule::Int>(_13113_n)));
				_12838_ok = true;
				return std::make_tuple(_12827_path,_12838_ok);
			}
		}
	_iter_next_4324369232:;
	}
	_iter_end_4324369232:;
	_12827_path = jule::Str();
	_12838_ok = false;
	return std::make_tuple(_12827_path,_12838_ok);
}



std::tuple<jule::Str,jule::Bool> _1ec9a1c7c___abs(jule::Str _14514_path) {
	jule::Bool _14532_ok = jule::Bool();
	if (_14514_path == jule::Str()) {
		_14514_path=jule::Str(".", 1);
	}
	std::tie(_14514_path,_14532_ok) = _1ec9a1c7c_full_path(_14514_path);
	if ((!(_14532_ok))) {
		_14532_ok = false;
		return std::make_tuple(jule::Str(),_14532_ok);
	}
	_14532_ok = true;
	return std::make_tuple(_1ec9a2585_clean(_14514_path),_14532_ok);
}



jule::Str _1ec9a1c7c___join(jule::Slice<jule::Str> _15915_elem) {
	jule::Str _16013_s = jule::Str();
	jule::U8 _16113_last_char = 0LLU;
	{
		auto expr = _15915_elem;
		auto it = expr.begin();
		_iter_begin_4324389296:;
		if (it != expr.end()) {
			jule::Str _1ec9a1c7c_e = *it;
			{
				{
					if (!((_16013_s.len() == 0LL))) { goto _case_end_4324391840; }
					goto _match_end_4324390736;
					_case_end_4324391840:;
					if (!((_1ec9a1c7c_is_slash(_16113_last_char)))) { goto _case_end_4324391696; }
					_case_begin_4324391696:;
					{
						while ((_1ec9a1c7c_e.len() > 0LL) && _1ec9a1c7c_is_slash(_1ec9a1c7c_e[0LL])) {
							{
								_1ec9a1c7c_e=_1ec9a1c7c_e.slice(1LL);
							}
						_iter_next_4324393072:;
						}
						_iter_end_4324393072:;
					}
					goto _match_end_4324390736;
					_case_end_4324391696:;
					if (!((_16113_last_char == ':'))) { goto _case_end_4324392080; }
					goto _match_end_4324390736;
					_case_end_4324392080:;
					_case_begin_4324390912:;
					{
						_16013_s+=jule::Str("\\", 1);
						_16113_last_char='\\';
					}
					goto _match_end_4324390736;
					_case_end_4324390912:;
					_match_end_4324390736:;
				}
				if (_1ec9a1c7c_e.len() > 0LL) {
					_16013_s+=_1ec9a1c7c_e;
					_16113_last_char=_1ec9a1c7c_e[_1ec9a1c7c_e.len() - 1LL];
				}
			}
			_iter_next_4324389296:;
			++it;
			goto _iter_begin_4324389296;
		}
		_iter_end_4324389296:;
	}
	if (_16013_s.len() == 0LL) {
		return jule::Str();
	}
	return _1ec9a2585_clean(_16013_s);
}



jule::Str _1ec9a2585_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _1ec9a1c7c_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(_1099_vol_len);
	if (_10718_path == jule::Str()) {
		if (((_1099_vol_len > 1LL) && _1ec9a1c7c_is_path_sep(_1089_original_path[0LL])) && _1ec9a1c7c_is_path_sep(_1089_original_path[1LL])) {
			return _1ec9a2585_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _1ec9a1c7c_is_path_sep(_10718_path[0LL]);
	jule::I64 _1259_n = _10718_path.len();
	_1ec9a2585_LazyBuff _12613_out = _1ec9a2585_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(92LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13114_r < _1259_n) {
		{
			{
				if (!((_1ec9a1c7c_is_path_sep(_10718_path[_13114_r])))) { goto _case_end_4324426224; }
				_case_begin_4324426224:;
				{
					(_13114_r)++;
				}
				goto _match_end_4324416176;
				_case_end_4324426224:;
				if (!(((_10718_path[_13114_r] == '.') && (((_13114_r + 1LL) == _1259_n) || _1ec9a1c7c_is_path_sep(_10718_path[_13114_r + 1LL]))))) { goto _case_end_4324427008; }
				_case_begin_4324427008:;
				{
					(_13114_r)++;
				}
				goto _match_end_4324416176;
				_case_end_4324427008:;
				if (!((((_10718_path[_13114_r] == '.') && (_10718_path[_13114_r + 1LL] == '.')) && (((_13114_r + 2LL) == _1259_n) || _1ec9a1c7c_is_path_sep(_10718_path[_13114_r + 2LL]))))) { goto _case_end_4324428848; }
				_case_begin_4324428848:;
				{
					_13114_r+=2LL;
					{
						if (!((_12613_out._field_w > _13121_dotdot))) { goto _case_end_4324435248; }
						_case_begin_4324435248:;
						{
							(_12613_out._field_w)--;
							while ((_12613_out._field_w > _13121_dotdot) && (!(_1ec9a1c7c_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w)))))) {
								{
									(_12613_out._field_w)--;
								}
							_iter_next_4324436336:;
							}
							_iter_end_4324436336:;
						}
						goto _match_end_4324432848;
						_case_end_4324435248:;
						if (!(((!(_1189_rooted))))) { goto _case_end_4324435360; }
						_case_begin_4324435360:;
						{
							if (_12613_out._field_w > 0LL) {
								_12613_out._method_append(92LLU);
							}
							_12613_out._method_append('.');
							_12613_out._method_append('.');
							_13121_dotdot=_12613_out._field_w;
						}
						goto _match_end_4324432848;
						_case_end_4324435360:;
						_match_end_4324432848:;
					}
				}
				goto _match_end_4324416176;
				_case_end_4324428848:;
				_case_begin_4324416352:;
				{
					if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
						_12613_out._method_append(92LLU);
					}
					if (((true && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
						jule::Int _17425_i = _13114_r;
						for (; (_17425_i < _1259_n) && (!(_1ec9a1c7c_is_path_sep(_10718_path[_17425_i]))); (_17425_i)++) {
							{
								if (_10718_path[_17425_i] == ':') {
									_12613_out._method_append('.');
									_12613_out._method_append(92LLU);
									goto _iter_end_4324419136;
								}
							}
						_iter_next_4324419136:;
						}
						_iter_end_4324419136:;
					}
					for (; (_13114_r < _1259_n) && (!(_1ec9a1c7c_is_path_sep(_10718_path[_13114_r]))); (_13114_r)++) {
						{
							_12613_out._method_append(_10718_path[_13114_r]);
						}
					_iter_next_4324421248:;
					}
					_iter_end_4324421248:;
				}
				goto _match_end_4324416176;
				_case_end_4324416352:;
				_match_end_4324416176:;
			}
		}
	_iter_next_4324415728:;
	}
	_iter_end_4324415728:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _1ec9a2585_from_slash(_12613_out._method_string());
}



jule::Str _1ec9a2585_to_slash(jule::Str _20017_path) {
	if (false) {
		return _20017_path;
	}
	return _20017_path.replace(static_cast<jule::Str>(92LL),jule::Str("/", 1),-1LL);
}



jule::Str _1ec9a2585_from_slash(jule::Str _21019_path) {
	if (false) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



jule::Str _1ec9a2585_join(jule::Slice<jule::Str> _22413_elem) {
	return _1ec9a1c7c___join(_22413_elem);
}



jule::Str _1ec9a2585_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	for (; (_23013_i >= 0LL) && (!(_1ec9a1c7c_is_path_sep(_22912_path[_23013_i]))); (_23013_i)--) {
		{
			if (_22912_path[_23013_i] == '.') {
				return _22912_path.slice(_23013_i);
			}
		}
	_iter_next_4324453424:;
	}
	_iter_end_4324453424:;
	return jule::Str();
}



std::tuple<jule::Str,jule::Bool> _1ec9a2585_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _1ec9a1c7c___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



jule::Str _1ec9a2585_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str()) {
		return jule::Str(".", 1);
	}
	while ((_25317_path.len() > 0LL) && _1ec9a1c7c_is_path_sep(_25317_path[_25317_path.len() - 1LL])) {
		{
			_25317_path=_25317_path.slice(0LL,_25317_path.len() - 1LL);
		}
	_iter_next_4324462672:;
	}
	_iter_end_4324462672:;
	_25317_path=_25317_path.slice(_1ec9a2585_volume_name(_25317_path).len());
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	while ((_26413_i >= 0LL) && (!(_1ec9a1c7c_is_path_sep(_25317_path[_26413_i])))) {
		{
			(_26413_i)--;
		}
	_iter_next_4324465056:;
	}
	_iter_end_4324465056:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(_26413_i + 1LL);
	}
	if (_25317_path == jule::Str()) {
		return static_cast<jule::Str>(92LL);
	}
	return _25317_path;
}



jule::Str _1ec9a2585_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _1ec9a2585_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	while ((_28613_i >= _2859_vol.len()) && (!(_1ec9a1c7c_is_path_sep(_28412_path[_28613_i])))) {
		{
			(_28613_i)--;
		}
	_iter_next_4324314736:;
	}
	_iter_end_4324314736:;
	jule::Str _2909_dir = _1ec9a2585_clean(_28412_path.slice(_2859_vol.len(),_28613_i + 1LL));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



jule::Str _1ec9a2585_volume_name(jule::Str _30220_path) {
	return _1ec9a2585_from_slash(_30220_path.slice(0LL,_1ec9a1c7c_volume_name_len(_30220_path)));
}



jule::Int _1ec9a54ab_get_last_os_error(void) {
	jule::Int _319_err = _1d403842b_get_last_errno();
	{
		auto _match_expr{ _319_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4324508896; }
		_case_begin_4324508896:;
		{
			return 1LLU;
		}
		goto _match_end_4324507824;
		_case_end_4324508896:;
		if (!((5LL) == _match_expr)) { goto _case_end_4324508992; }
		_case_begin_4324508992:;
		{
			return 2LLU;
		}
		goto _match_end_4324507824;
		_case_end_4324508992:;
		if (!((114LL) == _match_expr)) { goto _case_end_4324509088; }
		_case_begin_4324509088:;
		{
			return 3LLU;
		}
		goto _match_end_4324507824;
		_case_end_4324509088:;
		if (!((38LL) == _match_expr)) { goto _case_end_4324509472; }
		_case_begin_4324509472:;
		{
			return 4LLU;
		}
		goto _match_end_4324507824;
		_case_end_4324509472:;
		if (!((2LL) == _match_expr)) { goto _case_end_4324509568; }
		_case_begin_4324509568:;
		{
			return 5LLU;
		}
		goto _match_end_4324507824;
		_case_end_4324509568:;
		if (!((20LL) == _match_expr)) { goto _case_end_4324509664; }
		_case_begin_4324509664:;
		{
			return 6LLU;
		}
		goto _match_end_4324507824;
		_case_end_4324509664:;
		if (!((12LL) == _match_expr)) { goto _case_end_4324508288; }
		_case_begin_4324508288:;
		{
			return 7LLU;
		}
		goto _match_end_4324507824;
		_case_end_4324508288:;
		_case_begin_4324506976:;
		{
			return 0LLU;
		}
		goto _match_end_4324507824;
		_case_end_4324506976:;
		_match_end_4324507824:;
	}
}



jule::Int _1d40b320e_get_last_os_error_windows(void) {
	jule::U32 _169_err = _1d40585a0_get_last_error();
	{
		auto _match_expr{ _169_err };
		if (!((5LL) == _match_expr)) { goto _case_end_4324515440; }
		_case_begin_4324515440:;
		{
			return 1LLU;
		}
		goto _match_end_4324506320;
		_case_end_4324515440:;
		if (!((3LL) == _match_expr)) { goto _case_end_4324514992; }
		_case_begin_4324514992:;
		{
			return 5LLU;
		}
		goto _match_end_4324506320;
		_case_end_4324514992:;
		if (!((21LL) == _match_expr)) { goto _case_end_4324515088; }
		_case_begin_4324515088:;
		{
			return 8LLU;
		}
		goto _match_end_4324506320;
		_case_end_4324515088:;
		if (!((123LL) == _match_expr)) { goto _case_end_4324515184; }
		_case_begin_4324515184:;
		{
			return 5LLU;
		}
		goto _match_end_4324506320;
		_case_end_4324515184:;
		_case_begin_4324513488:;
		{
			return 0LLU;
		}
		goto _match_end_4324506320;
		_case_end_4324513488:;
		_match_end_4324506320:;
	}
}



jule::Slice<jule::Str> _1d40b9c93_args(void) {
	return jule::args();
}



jule::Slice<jule::Str> _1d40b9c93_env(void) {
	return jule::args();
}



std::tuple<jule::Str,jule::Int> _1d40b9c93_working_dir(void) {
	jule::Str _3010_p;
	jule::Int _3013_err;
	std::tie(_3010_p,_3013_err) = _1d40a5d8e___getwd();
	return std::make_tuple(_3010_p,_3013_err);
}



jule::Int _1d40b9c93_set_working_dir(jule::Str _3924_path) {
	if (_3924_path == jule::Str()) {
		return 6LLU;
	}
	return _1d40a5d8e___chdir(_3924_path);
}



std::tuple<jule::Str,jule::Int> _1d40a5d8e___getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>({});
	jule::U32 _169_n = _1d40585a0_get_current_directory(261LLU,(&(_1513_buff[0LL])));
	if (_169_n == 0LL) {
		return std::make_tuple(jule::Str(),_1d40b320e_get_last_os_error_windows());
	}
	return std::make_tuple(_1d4048606_u16_ptr_to_str((&(_1513_buff[0LL]))),0LLU);
}



jule::Int _1d40a5d8e___chdir(jule::Str _2512_path) {
	jule::Slice<jule::U16> _269_utf16_path = _1d4048606_utf16_from_str(_2512_path);
	if (_1d40585a0_set_current_directory((&(_269_utf16_path[0LL])))) {
		return 0LLU;
	}
	return _1d40b320e_get_last_os_error_windows();
}



void _1ec9bbc86_exit(jule::Int _1213_code) {
	_1d4097a1d_exit(_1213_code);
}



jule::Str _1ec9bbc86_executable(void) {
	return jule::executable();
}



jule::Bool _1ec8e3273_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[_2627_p.len() - 1LL] == '>');
}



jule::Bool _1ec8e3273_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto expr = _1ec8e3273_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_4324666880:;
		if (it != expr.end()) {
			jule::Str _1ec8e3273_valid_ext = *it;
			{
				if (_3128_ext == _1ec8e3273_valid_ext) {
					return true;
				}
			}
			_iter_next_4324666880:;
			++it;
			goto _iter_begin_4324666880;
		}
		_iter_end_4324666880:;
	}
	return false;
}



jule::Bool _1ec8e3273_is_valid_cpp_ext(jule::Str _4225_ext) {
	{
		auto expr = _1ec8e3273_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_4324668864:;
		if (it != expr.end()) {
			jule::Str _1ec8e3273_e = *it;
			{
				if (_4225_ext == _1ec8e3273_e) {
					return true;
				}
			}
			_iter_next_4324668864:;
			++it;
			goto _iter_begin_4324668864;
		}
		_iter_end_4324668864:;
	}
	{
		auto expr = _1ec8e3273_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_4324668080:;
		if (it != expr.end()) {
			jule::Str _1ec8e3273_e = *it;
			{
				if (_4225_ext == _1ec8e3273_e) {
					return true;
				}
			}
			_iter_next_4324668080:;
			++it;
			goto _iter_begin_4324668080;
		}
		_iter_end_4324668080:;
	}
	return false;
}



jule::Str _1ec8e8025_logf(jule::Str _26113_fmt,jule::Slice<jule::Any> _26126_args) {
	return _1ec8e8025_apply_fmt(_26113_fmt,_26126_args);
}



jule::Str _1ec8e8025_arg_to_str(jule::Any _26515_arg) {
	{
		auto _match_expr{ _26515_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4324676784; }
		_case_begin_4324676784:;
		{
			return _26515_arg.operator jule::Str();
		}
		goto _match_end_4324674560;
		_case_end_4324676784:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_4324676352; }
		_case_begin_4324676352:;
		{
			return static_cast<jule::Str>(_26515_arg.operator jule::U8());
		}
		goto _match_end_4324674560;
		_case_end_4324676352:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_4324676448; }
		_case_begin_4324676448:;
		{
			return static_cast<jule::Str>(_26515_arg.operator jule::I32());
		}
		goto _match_end_4324674560;
		_case_end_4324676448:;
		_case_begin_4324674400:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_4324674560;
		_case_end_4324674400:;
		_match_end_4324674560:;
	}
}



jule::Int _1ec8e8025_find_next_fmt(jule::Str _27418_fmt) {
	{
		auto expr = _27418_fmt;
		auto it = expr.begin();
		_iter_begin_4324679312:;
		if (it != expr.end()) {
			jule::Int _1ec8e8025_i = it - expr.begin();
			jule::U8 _1ec8e8025_b = *it;
			{
				if (_1ec8e8025_b == '@') {
					return _1ec8e8025_i;
				}
			}
			_iter_next_4324679312:;
			++it;
			_1ec8e8025_i++;
			goto _iter_begin_4324679312;
		}
		_iter_end_4324679312:;
	}
	return -1LL;
}



jule::Str _1ec8e8025_apply_fmt(jule::Str _28318_fmt,jule::Slice<jule::Any> _28328_args) {
	jule::Str _28413_s = jule::Str();
	{
		auto expr = _28328_args;
		auto it = expr.begin();
		_iter_begin_4324684544:;
		if (it != expr.end()) {
			jule::Any _1ec8e8025_arg = *it;
			{
				jule::Int _28713_i = _1ec8e8025_find_next_fmt(_28318_fmt);
				if (_28713_i == -1LL) {
					goto _iter_end_4324684544;
				}
				_28413_s+=_28318_fmt.slice(0LL,_28713_i);
				_28413_s+=_1ec8e8025_arg_to_str(_1ec8e8025_arg);
				_28318_fmt=_28318_fmt.slice(_28713_i + 1LL);
			}
			_iter_next_4324684544:;
			++it;
			goto _iter_begin_4324684544;
		}
		_iter_end_4324684544:;
	}
	_28413_s+=_28318_fmt;
	return _28413_s;
}



jule::Bool _1ec93b5b8_is_top_directive(jule::Str _3625_directive) {
	return (_3625_directive == jule::Str("pass", 4)) || (_3625_directive == jule::Str("build", 5));
}



jule::Bool _1ec970a4d_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



jule::Bool _1ec970a4d_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



jule::Bool _1ec970a4d_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



jule::Bool _1ec970a4d_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



jule::Bool _1ec970a4d_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



jule::Bool _1ec970a4d_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



jule::Bool _1ec970a4d_is_unix(jule::Str _6316_os) {
	return _1ec970a4d_is_darwin(_6316_os) || _1ec970a4d_is_linux(_6316_os);
}



jule::Bool _1ec970a4d_is_32bit(jule::Str _6517_arch) {
	return _1ec970a4d_is_i386(_6517_arch);
}



jule::Bool _1ec970a4d_is_64bit(jule::Str _6717_arch) {
	return _1ec970a4d_is_amd64(_6717_arch) || _1ec970a4d_is_arm64(_6717_arch);
}



void _1ec9710c0_exit_err(jule::Str _1613_msg) {
	
	jule::outln(_1613_msg);
	_1ec9bbc86_exit(1LL);
}



void _1ec9710c0_init(void) {
	jule::Str _2413_path = _1ec9bbc86_executable();
	if (_2413_path == jule::Str()) {
		_1ec9710c0_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _2910_pwd;
	jule::Int _2915_err;
	std::tie(_2910_pwd,_2915_err) = _1d40b9c93_working_dir();
	if (_2915_err != 0LLU) {
		_1ec9710c0_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
	}
	jule::Str _349_path_exec = _1ec9a2585_dir(_2413_path);
	_2413_path=_1ec9a2585_join(jule::Slice<jule::Str>({_349_path_exec,jule::Str("..", 2)}));
	{
		(*((&(_1ec9710c0_PATH_WD))))=_2910_pwd;
		(*((&(_1ec9710c0_PATH_EXEC))))=_349_path_exec;
		(*((&(_1ec9710c0_PATH_STDLIB))))=_1ec9a2585_join(jule::Slice<jule::Str>({_2413_path,jule::Str("std", 3)}));
		(*((&(_1ec9710c0_PATH_API))))=_1ec9a2585_join(jule::Slice<jule::Str>({_1ec9710c0_PATH_EXEC,jule::Str("..", 2)}));
		(*((&(_1ec9710c0_PATH_API))))=_1ec9a2585_join(jule::Slice<jule::Str>({_1ec9710c0_PATH_API,jule::Str("api", 3)}));
		(*((&(_1ec9710c0_PATH_API))))=_1ec9a2585_join(jule::Slice<jule::Str>({_1ec9710c0_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



jule::Bool _1ec984699_is_jule(jule::Str _2316_path) {
	return _1ec9a2585_ext(_2316_path) == jule::Str(".jule", 5);
}



jule::Int _1e165619b_leading_zeros(jule::Uint _4922_x) {
	return static_cast<jule::Int>(64LLU - _1e165619b_len(_4922_x));
}



jule::Int _1e165619b_leading_zeros8(jule::U8 _5223_x) {
	return static_cast<jule::Int>(8LL - _1e165619b_len8(_5223_x));
}



jule::Int _1e165619b_leading_zeros16(jule::U16 _5524_x) {
	return static_cast<jule::Int>(16LL - _1e165619b_len16(_5524_x));
}



jule::Int _1e165619b_leading_zeros32(jule::U32 _5824_x) {
	return static_cast<jule::Int>(32LL - _1e165619b_len32(_5824_x));
}



jule::Int _1e165619b_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _1e165619b_len64(_6124_x));
}



jule::Int _1e165619b_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_1e165619b_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_1e165619b_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



jule::Int _1e165619b_trailing_zeros8(jule::U8 _9124_x) {
	return static_cast<jule::Int>(jule::Str("\b\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\a\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00", 256)[static_cast<jule::Int>(_9124_x)]);
}



jule::Int _1e165619b_trailing_zeros16(jule::U16 _9625_x) {
	if (_9625_x == 0LL) {
		return 16LL;
	}
	return static_cast<jule::Int>(_1e165619b_DE_BRUIJN32_TAB[static_cast<jule::Int>((static_cast<jule::U32>(_9625_x & (-(_9625_x))) * 125613361LL) >> 27LL)]);
}



jule::Int _1e165619b_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_1e165619b_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



jule::Int _1e165619b_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_1e165619b_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



jule::Int _1e165619b_ones_count(jule::Uint _14119_x) {
	if (false) {
		return static_cast<jule::Int>(_1e165619b_ones_count32(static_cast<jule::U32>(_14119_x)));
	}
	return static_cast<jule::Int>(_1e165619b_ones_count64(static_cast<jule::U64>(_14119_x)));
}



jule::Int _1e165619b_ones_count8(jule::U8 _14920_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_14920_x)]);
}



jule::Int _1e165619b_ones_count16(jule::U16 _15421_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x >> 8LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x & 255LL)]);
}



jule::Int _1e165619b_ones_count32(jule::U32 _15921_x) {
	return static_cast<jule::Int>(((jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x >> 24LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 16LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 8LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x & 255LL)]);
}



jule::Int _1e165619b_ones_count64(jule::U64 _16425_x) {
	
	_16425_x=static_cast<jule::U64>(((_16425_x >> 1LL) & 6148914691236517205LL) + (_16425_x & 6148914691236517205LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 2LL) & 3689348814741910323LL) + (_16425_x & 3689348814741910323LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 4LL) + _16425_x) & 1085102592571150095LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 8LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 16LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 32LL);
	return static_cast<jule::Int>(static_cast<jule::Int>(_16425_x) & 127LLU);
}



jule::Uint _1e165619b_rotate_left(jule::Uint _20020_x,jule::Int _20029_k) {
	if (false) {
		return static_cast<jule::Uint>(_1e165619b_rotate_left32(static_cast<jule::U32>(_20020_x),_20029_k));
	}
	return static_cast<jule::Uint>(_1e165619b_rotate_left64(static_cast<jule::U64>(_20020_x),_20029_k));
}



jule::U8 _1e165619b_rotate_left8(jule::U8 _21121_x,jule::Int _21128_k) {
	
	jule::Uint _2139_s = static_cast<jule::Uint>(_21128_k) & 7LL;
	return static_cast<jule::U8>((_21121_x << _2139_s) | (_21121_x >> (8LL - _2139_s)));
}



jule::U16 _1e165619b_rotate_left16(jule::U16 _22122_x,jule::Int _22130_k) {
	
	jule::Uint _2239_s = static_cast<jule::Uint>(_22130_k) & 15LL;
	return static_cast<jule::U16>((_22122_x << _2239_s) | (_22122_x >> (16LL - _2239_s)));
}



jule::U32 _1e165619b_rotate_left32(jule::U32 _23122_x,jule::Int _23130_k) {
	
	jule::Uint _2339_s = static_cast<jule::Uint>(_23130_k) & 31LL;
	return static_cast<jule::U32>((_23122_x << _2339_s) | (_23122_x >> (32LL - _2339_s)));
}



jule::U64 _1e165619b_rotate_left64(jule::U64 _24122_x,jule::Int _24130_k) {
	
	jule::Uint _2439_s = static_cast<jule::Uint>(_24130_k) & 63LL;
	return static_cast<jule::U64>((_24122_x << _2439_s) | (_24122_x >> (64LL - _2439_s)));
}



jule::Uint _1e165619b_reverse(jule::Uint _25016_x) {
	if (false) {
		return static_cast<jule::Uint>(_1e165619b_reverse32(static_cast<jule::U32>(_25016_x)));
	}
	return static_cast<jule::Uint>(_1e165619b_reverse64(static_cast<jule::U64>(_25016_x)));
}



jule::U8 _1e165619b_reverse8(jule::U8 _25817_x) {
	return static_cast<jule::U8>(jule::Str("\x00\200@\300 \240`\340\020\220P\3200\260p\360\b\210H\310(\250h\350\030\230X\3308\270x\370\4\204D\304$\244d\344\024\224T\3244\264t\364\f\214L\314,\254l\354\034\234\\\334<\274|\374\2\202B\302\"\242b\342\022\222R\3222\262r\362\n\212J\312*\252j\352\032\232Z\332:\272z\372\6\206F\306&\246f\346\026\226V\3266\266v\366\016\216N\316.\256n\356\036\236^\336>\276~\376\1\201A\301!\241a\341\021\221Q\3211\261q\361\t\211I\311)\251i\351\031\231Y\3319\271y\371\5\205E\305%\245e\345\025\225U\3255\265u\365\r\215M\315-\255m\355\035\235]\335=\275}\375\3\203C\303#\243c\343\023\223S\3233\263s\363\v\213K\313+\253k\353\033\233[\333;\273{\373\a\207G\307'\247g\347\027\227W\3277\267w\367\017\217O\317/\257o\357\037\237_\337?\277\177\377", 256)[static_cast<jule::Int>(_25817_x)]);
}



jule::U16 _1e165619b_reverse16(jule::U16 _26318_x) {
	return static_cast<jule::U16>(static_cast<jule::U16>(jule::Str("\x00\200@\300 \240`\340\020\220P\3200\260p\360\b\210H\310(\250h\350\030\230X\3308\270x\370\4\204D\304$\244d\344\024\224T\3244\264t\364\f\214L\314,\254l\354\034\234\\\334<\274|\374\2\202B\302\"\242b\342\022\222R\3222\262r\362\n\212J\312*\252j\352\032\232Z\332:\272z\372\6\206F\306&\246f\346\026\226V\3266\266v\366\016\216N\316.\256n\356\036\236^\336>\276~\376\1\201A\301!\241a\341\021\221Q\3211\261q\361\t\211I\311)\251i\351\031\231Y\3319\271y\371\5\205E\305%\245e\345\025\225U\3255\265u\365\r\215M\315-\255m\355\035\235]\335=\275}\375\3\203C\303#\243c\343\023\223S\3233\263s\363\v\213K\313+\253k\353\033\233[\333;\273{\373\a\207G\307'\247g\347\027\227W\3277\267w\367\017\217O\317/\257o\357\037\237_\337?\277\177\377", 256)[static_cast<jule::Int>(_26318_x >> 8LL)]) | (static_cast<jule::U16>(jule::Str("\x00\200@\300 \240`\340\020\220P\3200\260p\360\b\210H\310(\250h\350\030\230X\3308\270x\370\4\204D\304$\244d\344\024\224T\3244\264t\364\f\214L\314,\254l\354\034\234\\\334<\274|\374\2\202B\302\"\242b\342\022\222R\3222\262r\362\n\212J\312*\252j\352\032\232Z\332:\272z\372\6\206F\306&\246f\346\026\226V\3266\266v\366\016\216N\316.\256n\356\036\236^\336>\276~\376\1\201A\301!\241a\341\021\221Q\3211\261q\361\t\211I\311)\251i\351\031\231Y\3319\271y\371\5\205E\305%\245e\345\025\225U\3255\265u\365\r\215M\315-\255m\355\035\235]\335=\275}\375\3\203C\303#\243c\343\023\223S\3233\263s\363\v\213K\313+\253k\353\033\233[\333;\273{\373\a\207G\307'\247g\347\027\227W\3277\267w\367\017\217O\317/\257o\357\037\237_\337?\277\177\377", 256)[static_cast<jule::Int>(_26318_x & 255LL)]) << 8LL));
}



jule::U32 _1e165619b_reverse32(jule::U32 _26822_x) {
	
	_26822_x=static_cast<jule::U32>(((_26822_x >> 1LL) & 1431655765LL) | ((_26822_x & 1431655765LL) << 1LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 2LL) & 858993459LL) | ((_26822_x & 858993459LL) << 2LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 4LL) & 252645135LL) | ((_26822_x & 252645135LL) << 4LL));
	return static_cast<jule::U32>(_1e165619b_reverse_bytes32(_26822_x));
}



jule::U64 _1e165619b_reverse64(jule::U64 _27722_x) {
	
	_27722_x=static_cast<jule::U64>(((_27722_x >> 1LL) & 6148914691236517205LL) | ((_27722_x & 6148914691236517205LL) << 1LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 2LL) & 3689348814741910323LL) | ((_27722_x & 3689348814741910323LL) << 2LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 4LL) & 1085102592571150095LL) | ((_27722_x & 1085102592571150095LL) << 4LL));
	return static_cast<jule::U64>(_1e165619b_reverse_bytes64(_27722_x));
}



jule::Uint _1e165619b_reverse_bytes(jule::Uint _29022_x) {
	if (false) {
		return static_cast<jule::Uint>(_1e165619b_reverse_bytes32(static_cast<jule::U32>(_29022_x)));
	}
	return static_cast<jule::Uint>(_1e165619b_reverse_bytes64(static_cast<jule::U64>(_29022_x)));
}



jule::U16 _1e165619b_reverse_bytes16(jule::U16 _30024_x) {
	return static_cast<jule::U16>((_30024_x >> 8LL) | (_30024_x << 8LL));
}



jule::U32 _1e165619b_reverse_bytes32(jule::U32 _30728_x) {
	
	_30728_x=static_cast<jule::U32>(((_30728_x >> 8LL) & 16711935LL) | ((_30728_x & 16711935LL) << 8LL));
	return static_cast<jule::U32>((_30728_x >> 16LL) | (_30728_x << 16LL));
}



jule::U64 _1e165619b_reverse_bytes64(jule::U64 _31628_x) {
	
	_31628_x=static_cast<jule::U64>(((_31628_x >> 8LL) & 71777214294589695LL) | ((_31628_x & 71777214294589695LL) << 8LL));
	_31628_x=static_cast<jule::U64>(((_31628_x >> 16LL) & 281470681808895LL) | ((_31628_x & 281470681808895LL) << 16LL));
	return static_cast<jule::U64>((_31628_x >> 32LL) | (_31628_x << 32LL));
}



jule::Int _1e165619b_len(jule::Uint _32712_x) {
	if (false) {
		return static_cast<jule::Int>(_1e165619b_len32(static_cast<jule::U32>(_32712_x)));
	}
	return static_cast<jule::Int>(_1e165619b_len64(static_cast<jule::U64>(_32712_x)));
}



jule::Int _1e165619b_len8(jule::U8 _33613_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_33613_x)]);
}



jule::Int _1e165619b_len16(jule::U16 _34218_x) {
	jule::Int _34228_n = jule::Int();
	if (_34218_x >= 256LLU) {
		_34218_x>>=8LL;
		_34228_n=8LL;
	}
	_34228_n = static_cast<jule::Int>(_34228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_34218_x)]));
	return _34228_n;
}



jule::Int _1e165619b_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LLU) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LLU) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]));
	return _35228_n;
}



jule::Int _1e165619b_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LLU) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LLU) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LLU) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]));
	return _36628_n;
}



std::tuple<jule::Uint,jule::Uint> _1e165619b_add(jule::Uint _38912_x,jule::Uint _38921_y,jule::Uint _38930_carry) {
	jule::Uint _38945_sum = jule::Uint();
	jule::Uint _38956_carry_out = jule::Uint();
	if (false) {
		jule::U32 _39114_s32;
		jule::U32 _39119_c32;
		std::tie(_39114_s32,_39119_c32) = _1e165619b_add32(static_cast<jule::U32>(_38912_x),static_cast<jule::U32>(_38921_y),static_cast<jule::U32>(_38930_carry));
		_38945_sum = static_cast<jule::Uint>(_39114_s32);
		_38956_carry_out = static_cast<jule::Uint>(_39119_c32);
		return std::make_tuple(_38945_sum,_38956_carry_out);
	}
	jule::U64 _39410_s64;
	jule::U64 _39415_c64;
	std::tie(_39410_s64,_39415_c64) = _1e165619b_add64(static_cast<jule::U64>(_38912_x),static_cast<jule::U64>(_38921_y),static_cast<jule::U64>(_38930_carry));
	_38945_sum = static_cast<jule::Uint>(_39410_s64);
	_38956_carry_out = static_cast<jule::Uint>(_39415_c64);
	return std::make_tuple(_38945_sum,_38956_carry_out);
}



std::tuple<jule::U32,jule::U32> _1e165619b_add32(jule::U32 _40314_x,jule::U32 _40322_y,jule::U32 _40330_carry) {
	jule::U32 _40344_sum = jule::U32();
	jule::U32 _40354_carryout = jule::U32();
	jule::U64 _4049_sum64 = (static_cast<jule::U64>(_40314_x) + static_cast<jule::U64>(_40322_y)) + static_cast<jule::U64>(_40330_carry);
	_40344_sum=static_cast<jule::U32>(_4049_sum64);
	_40354_carryout=static_cast<jule::U32>(_4049_sum64 >> 32LL);
	return std::make_tuple(_40344_sum,_40354_carryout);
}



std::tuple<jule::U64,jule::U64> _1e165619b_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



std::tuple<jule::Uint,jule::Uint> _1e165619b_sub(jule::Uint _43112_x,jule::Uint _43121_y,jule::Uint _43130_borrow) {
	jule::Uint _43146_diff = jule::Uint();
	jule::Uint _43158_borrow_out = jule::Uint();
	if (false) {
		jule::U32 _43314_d32;
		jule::U32 _43319_b32;
		std::tie(_43314_d32,_43319_b32) = _1e165619b_sub32(static_cast<jule::U32>(_43112_x),static_cast<jule::U32>(_43121_y),static_cast<jule::U32>(_43130_borrow));
		_43146_diff = static_cast<jule::Uint>(_43314_d32);
		_43158_borrow_out = static_cast<jule::Uint>(_43319_b32);
		return std::make_tuple(_43146_diff,_43158_borrow_out);
	}
	jule::U64 _43610_d64;
	jule::U64 _43615_b64;
	std::tie(_43610_d64,_43615_b64) = _1e165619b_sub64(static_cast<jule::U64>(_43112_x),static_cast<jule::U64>(_43121_y),static_cast<jule::U64>(_43130_borrow));
	_43146_diff = static_cast<jule::Uint>(_43610_d64);
	_43158_borrow_out = static_cast<jule::Uint>(_43615_b64);
	return std::make_tuple(_43146_diff,_43158_borrow_out);
}



std::tuple<jule::U32,jule::U32> _1e165619b_sub32(jule::U32 _44514_x,jule::U32 _44522_y,jule::U32 _44530_borrow) {
	jule::U32 _44545_diff = jule::U32();
	jule::U32 _44556_borrowout = jule::U32();
	_44545_diff=static_cast<jule::U32>((_44514_x - _44522_y) - _44530_borrow);
	_44556_borrowout=static_cast<jule::U32>((((~(_44514_x)) & _44522_y) | ((~(_44514_x ^ _44522_y)) & _44545_diff)) >> 31LL);
	return std::make_tuple(_44545_diff,_44556_borrowout);
}



std::tuple<jule::U64,jule::U64> _1e165619b_sub64(jule::U64 _46014_x,jule::U64 _46022_y,jule::U64 _46030_borrow) {
	jule::U64 _46045_diff = jule::U64();
	jule::U64 _46056_borrowout = jule::U64();
	_46045_diff=static_cast<jule::U64>((_46014_x - _46022_y) - _46030_borrow);
	_46056_borrowout=static_cast<jule::U64>((((~(_46014_x)) & _46022_y) | ((~(_46014_x ^ _46022_y)) & _46045_diff)) >> 63LL);
	return std::make_tuple(_46045_diff,_46056_borrowout);
}



std::tuple<jule::Uint,jule::Uint> _1e165619b_mul(jule::Uint _47412_x,jule::Uint _47421_y) {
	jule::Uint _47432_hi = jule::Uint();
	jule::Uint _47442_lo = jule::Uint();
	if (false) {
		jule::U32 _47614_h;
		jule::U32 _47617_l;
		std::tie(_47614_h,_47617_l) = _1e165619b_mul32(static_cast<jule::U32>(_47412_x),static_cast<jule::U32>(_47421_y));
		_47432_hi = static_cast<jule::Uint>(_47614_h);
		_47442_lo = static_cast<jule::Uint>(_47617_l);
		return std::make_tuple(_47432_hi,_47442_lo);
	}
	jule::U64 _47910_h;
	jule::U64 _47913_l;
	std::tie(_47910_h,_47913_l) = _1e165619b_mul64(static_cast<jule::U64>(_47412_x),static_cast<jule::U64>(_47421_y));
	_47432_hi = static_cast<jule::Uint>(_47910_h);
	_47442_lo = static_cast<jule::Uint>(_47913_l);
	return std::make_tuple(_47432_hi,_47442_lo);
}



std::tuple<jule::U32,jule::U32> _1e165619b_mul32(jule::U32 _48814_x,jule::U32 _48822_y) {
	jule::U32 _48832_hi = jule::U32();
	jule::U32 _48841_lo = jule::U32();
	jule::U64 _4899_tmp = static_cast<jule::U64>(_48814_x) * static_cast<jule::U64>(_48822_y);
	std::tie(_48832_hi,_48841_lo) = std::make_tuple(static_cast<jule::U32>(_4899_tmp >> 32LL),static_cast<jule::U32>(_4899_tmp));
	return std::make_tuple(_48832_hi,_48841_lo);
}



std::tuple<jule::U64,jule::U64> _1e165619b_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LLU;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LLU;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LLU;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



std::tuple<jule::Uint,jule::Uint> _1e165619b_div(jule::Uint _52112_hi,jule::Uint _52122_lo,jule::Uint _52132_y) {
	jule::Uint _52143_quo = jule::Uint();
	jule::Uint _52154_rem = jule::Uint();
	if (false) {
		jule::U32 _52314_q;
		jule::U32 _52317_r;
		std::tie(_52314_q,_52317_r) = _1e165619b_div32(static_cast<jule::U32>(_52112_hi),static_cast<jule::U32>(_52122_lo),static_cast<jule::U32>(_52132_y));
		_52143_quo = static_cast<jule::Uint>(_52314_q);
		_52154_rem = static_cast<jule::Uint>(_52317_r);
		return std::make_tuple(_52143_quo,_52154_rem);
	}
	jule::U64 _52610_q;
	jule::U64 _52613_r;
	std::tie(_52610_q,_52613_r) = _1e165619b_div64(static_cast<jule::U64>(_52112_hi),static_cast<jule::U64>(_52122_lo),static_cast<jule::U64>(_52132_y));
	_52143_quo = static_cast<jule::Uint>(_52610_q);
	_52154_rem = static_cast<jule::Uint>(_52613_r);
	return std::make_tuple(_52143_quo,_52154_rem);
}



std::tuple<jule::U32,jule::U32> _1e165619b_div32(jule::U32 _53414_hi,jule::U32 _53423_lo,jule::U32 _53432_y) {
	jule::U32 _53442_quo = jule::U32();
	jule::U32 _53452_rem = jule::U32();
	if (_53432_y == 0LL) {
		jule::panic(_1e16eece4_DIVIDE_ERROR);
	}
	if ((_53432_y != 0LL) && (_53432_y <= _53414_hi)) {
		jule::panic(_1e16eece4_OVERFLOW_ERROR);
	}
	jule::U64 _5419_z = (static_cast<jule::U64>(_53414_hi) << 32LL) | static_cast<jule::U64>(_53423_lo);
	std::tie(_53442_quo,_53452_rem) = std::make_tuple(static_cast<jule::U32>(jule::div(_5419_z,static_cast<jule::U64>(_53432_y))),static_cast<jule::U32>(jule::mod(_5419_z,static_cast<jule::U64>(_53432_y))));
	return std::make_tuple(_53442_quo,_53452_rem);
}



std::tuple<jule::U64,jule::U64> _1e165619b_div64(jule::U64 _55014_hi,jule::U64 _55023_lo,jule::U64 _55036_y) {
	jule::U64 _55046_quo = jule::U64();
	jule::U64 _55056_rem = jule::U64();
	
	
	if (_55036_y == 0LL) {
		jule::panic(_1e16eece4_DIVIDE_ERROR);
	}
	if (_55036_y <= _55014_hi) {
		jule::panic(_1e16eece4_OVERFLOW_ERROR);
	}
	jule::Uint _5609_s = static_cast<jule::Uint>(_1e165619b_leading_zeros64(_55036_y));
	_55036_y<<=_5609_s;
	jule::U64 _5639_yn1 = _55036_y >> 32LL;
	jule::U64 _5649_yn0 = _55036_y & 4294967295LLU;
	jule::U64 _5659_un32 = (_55014_hi << _5609_s) | (_55023_lo >> (64LL - _5609_s));
	jule::U64 _5669_un10 = _55023_lo << _5609_s;
	jule::U64 _5679_un1 = _5669_un10 >> 32LL;
	jule::U64 _5689_un0 = _5669_un10 & 4294967295LLU;
	jule::U64 _56913_q1 = jule::div(_5659_un32,_5639_yn1);
	jule::U64 _57013_rhat = _5659_un32 - (_56913_q1 * _5639_yn1);
	while ((_56913_q1 >= 4294967296LLU) || ((_56913_q1 * _5649_yn0) > ((4294967296LLU * _57013_rhat) + _5679_un1))) {
		{
			(_56913_q1)--;
			_57013_rhat+=_5639_yn1;
			if (_57013_rhat >= 4294967296LLU) {
				goto _iter_end_4325025840;
			}
		}
	_iter_next_4325025840:;
	}
	_iter_end_4325025840:;
	jule::U64 _5809_un21 = ((_5659_un32 * 4294967296LLU) + _5679_un1) - (_56913_q1 * _55036_y);
	jule::U64 _58113_q0 = jule::div(_5809_un21,_5639_yn1);
	_57013_rhat=static_cast<jule::U64>(_5809_un21 - (_58113_q0 * _5639_yn1));
	while ((_58113_q0 >= 4294967296LLU) || ((_58113_q0 * _5649_yn0) > ((4294967296LLU * _57013_rhat) + _5689_un0))) {
		{
			(_58113_q0)--;
			_57013_rhat+=_5639_yn1;
			if (_57013_rhat >= 4294967296LLU) {
				goto _iter_end_4325031744;
			}
		}
	_iter_next_4325031744:;
	}
	_iter_end_4325031744:;
	_55046_quo = static_cast<jule::U64>((_56913_q1 * 4294967296LLU) + _58113_q0);
	_55056_rem = static_cast<jule::U64>((((_5809_un21 * 4294967296LLU) + _5689_un0) - (_58113_q0 * _55036_y)) >> _5609_s);
	return std::make_tuple(_55046_quo,_55056_rem);
}



jule::Uint _1e165619b_rem(jule::Uint _59812_hi,jule::Uint _59822_lo,jule::Uint _59832_y) {
	if (false) {
		return static_cast<jule::Uint>(_1e165619b_rem32(static_cast<jule::U32>(_59812_hi),static_cast<jule::U32>(_59822_lo),static_cast<jule::U32>(_59832_y)));
	}
	return static_cast<jule::Uint>(_1e165619b_rem64(static_cast<jule::U64>(_59812_hi),static_cast<jule::U64>(_59822_lo),static_cast<jule::U64>(_59832_y)));
}



jule::U32 _1e165619b_rem32(jule::U32 _60814_hi,jule::U32 _60823_lo,jule::U32 _60832_y) {
	return static_cast<jule::U32>(jule::mod((static_cast<jule::U64>(_60814_hi) << 32LL) | static_cast<jule::U64>(_60823_lo),static_cast<jule::U64>(_60832_y)));
}



jule::U64 _1e165619b_rem64(jule::U64 _61514_hi,jule::U64 _61523_lo,jule::U64 _61532_y) {
	jule::U64 _62213_rem;
	std::tie(std::ignore,_62213_rem) = _1e165619b_div64(static_cast<jule::U64>(jule::mod(_61514_hi,_61532_y)),_61523_lo,_61532_y);
	return _62213_rem;
}



jule::F64 _1e10a6657_atanh(jule::F64 _7818_x) {
	
	{
		if (!((_7818_x < -1LL) || (_7818_x > 1LL) || (_1e119a00e_is_nan(_7818_x)))) { goto _case_end_4325277648; }
		_case_begin_4325277648:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4325277472;
		_case_end_4325277648:;
		if (!((_7818_x == 1LL))) { goto _case_end_4325277760; }
		_case_begin_4325277760:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(1LL));
		}
		goto _match_end_4325277472;
		_case_end_4325277760:;
		if (!((_7818_x == -1LL))) { goto _case_end_4325277872; }
		_case_begin_4325277872:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(-1LL));
		}
		goto _match_end_4325277472;
		_case_end_4325277872:;
		_match_end_4325277472:;
	}
	jule::Bool _8913_sign = false;
	if (_7818_x < 0LL) {
		_7818_x=static_cast<jule::F64>((-(_7818_x)));
		_8913_sign=true;
	}
	jule::F64 _9413_temp = 0LL;
	{
		if (!((_7818_x < 0.000000003725290298461914))) { goto _case_end_4325285216; }
		_case_begin_4325285216:;
		{
			_9413_temp=_7818_x;
		}
		goto _match_end_4325284352;
		_case_end_4325285216:;
		if (!((_7818_x < 0.5))) { goto _case_end_4325285376; }
		_case_begin_4325285376:;
		{
			_9413_temp=static_cast<jule::F64>(_7818_x + _7818_x);
			_9413_temp=static_cast<jule::F64>(0.5 * _1e148444c_log1p(static_cast<jule::F64>(_9413_temp + jule::div(_9413_temp * _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4325284352;
		_case_end_4325285376:;
		_case_begin_4325284432:;
		{
			_9413_temp=static_cast<jule::F64>(0.5 * _1e148444c_log1p(static_cast<jule::F64>(jule::div(_7818_x + _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4325284352;
		_case_end_4325284432:;
		_match_end_4325284352:;
	}
	if (_8913_sign) {
		_9413_temp=static_cast<jule::F64>((-(_9413_temp)));
	}
	return _9413_temp;
}



jule::U32 _1e10c0d9c_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



jule::F32 _1e10c0d9c_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



jule::U64 _1e10c0d9c_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



jule::F64 _1e10c0d9c_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



jule::F64 _1e10c8a64_cos(jule::F64 _14816_x) {
	
	
	
	if (_1e119a00e_is_nan(_14816_x) || _1e119a00e_is_inf(_14816_x,0LL)) {
		return static_cast<jule::F64>(_1e119a00e_nan());
	}
	jule::Bool _15813_sign = false;
	_14816_x=static_cast<jule::F64>(_1e11e5279_abs(_14816_x));
	jule::U64 _16113_j = 0LLU;
	jule::F64 _16213_y = 0LL;
	jule::F64 _16313_z = 0LL;
	if (_14816_x >= 536870912LLU) {
		std::tie(_16113_j,_16313_z) = _1e111d8cd_trig_reduce(_14816_x);
	} else {
		_16113_j=static_cast<jule::U64>(_14816_x * 1.2732395447351628);
		_16213_y=static_cast<jule::F64>(_16113_j);
		if ((_16113_j & 1LL) == 1LL) {
			(_16113_j)++;
			(_16213_y)++;
		}
		_16113_j&=7LL;
		_16313_z=static_cast<jule::F64>(((_14816_x - (_16213_y * 0.7853981256484985)) - (_16213_y * 0.00000003774894707930798)) - (_16213_y * 0.0000000000000026951514290790595));
	}
	if (_16113_j > 3LL) {
		_16113_j-=4LL;
		_15813_sign=(!(_15813_sign));
	}
	if (_16113_j > 1LL) {
		_15813_sign=(!(_15813_sign));
	}
	jule::F64 _1879_zz = _16313_z * _16313_z;
	if ((_16113_j == 1LL) || (_16113_j == 2LL)) {
		_16213_y=static_cast<jule::F64>(_16313_z + ((_16313_z * _1879_zz) * ((((((((((_1e10c8a64__SIN[0LL] * _1879_zz) + _1e10c8a64__SIN[1LL]) * _1879_zz) + _1e10c8a64__SIN[2LL]) * _1879_zz) + _1e10c8a64__SIN[3LL]) * _1879_zz) + _1e10c8a64__SIN[4LL]) * _1879_zz) + _1e10c8a64__SIN[5LL])));
	} else {
		_16213_y=static_cast<jule::F64>((1LL - (0.5 * _1879_zz)) + ((_1879_zz * _1879_zz) * ((((((((((_1e10c8a64__COS[0LL] * _1879_zz) + _1e10c8a64__COS[1LL]) * _1879_zz) + _1e10c8a64__COS[2LL]) * _1879_zz) + _1e10c8a64__COS[3LL]) * _1879_zz) + _1e10c8a64__COS[4LL]) * _1879_zz) + _1e10c8a64__COS[5LL])));
	}
	if (_15813_sign) {
		_16213_y=static_cast<jule::F64>((-(_16213_y)));
	}
	return _16213_y;
}



jule::F64 _1e10c8a64_sin(jule::F64 _20516_x) {
	
	
	
	{
		if (!((_20516_x == 0LL) || (_1e119a00e_is_nan(_20516_x)))) { goto _case_end_4325328656; }
		_case_begin_4325328656:;
		{
			return _20516_x;
		}
		goto _match_end_4325328496;
		_case_end_4325328656:;
		if (!((_1e119a00e_is_inf(_20516_x,0LL)))) { goto _case_end_4325328768; }
		_case_begin_4325328768:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4325328496;
		_case_end_4325328768:;
		_match_end_4325328496:;
	}
	jule::Bool _21813_sign = false;
	if (_20516_x < 0LL) {
		_20516_x=static_cast<jule::F64>((-(_20516_x)));
		_21813_sign=true;
	}
	jule::U64 _22413_j = 0LLU;
	jule::F64 _22513_y = 0LL;
	jule::F64 _22613_z = 0LL;
	if (_20516_x >= 536870912LLU) {
		std::tie(_22413_j,_22613_z) = _1e111d8cd_trig_reduce(_20516_x);
	} else {
		_22413_j=static_cast<jule::U64>(_20516_x * 1.2732395447351628);
		_22513_y=static_cast<jule::F64>(_22413_j);
		if ((_22413_j & 1LL) == 1LL) {
			(_22413_j)++;
			(_22513_y)++;
		}
		_22413_j&=7LL;
		_22613_z=static_cast<jule::F64>(((_20516_x - (_22513_y * 0.7853981256484985)) - (_22513_y * 0.00000003774894707930798)) - (_22513_y * 0.0000000000000026951514290790595));
	}
	if (_22413_j > 3LL) {
		_21813_sign=(!(_21813_sign));
		_22413_j-=4LL;
	}
	jule::F64 _2469_zz = _22613_z * _22613_z;
	if ((_22413_j == 1LL) || (_22413_j == 2LL)) {
		_22513_y=static_cast<jule::F64>((1LL - (0.5 * _2469_zz)) + ((_2469_zz * _2469_zz) * ((((((((((_1e10c8a64__COS[0LL] * _2469_zz) + _1e10c8a64__COS[1LL]) * _2469_zz) + _1e10c8a64__COS[2LL]) * _2469_zz) + _1e10c8a64__COS[3LL]) * _2469_zz) + _1e10c8a64__COS[4LL]) * _2469_zz) + _1e10c8a64__COS[5LL])));
	} else {
		_22513_y=static_cast<jule::F64>(_22613_z + ((_22613_z * _2469_zz) * ((((((((((_1e10c8a64__SIN[0LL] * _2469_zz) + _1e10c8a64__SIN[1LL]) * _2469_zz) + _1e10c8a64__SIN[2LL]) * _2469_zz) + _1e10c8a64__SIN[3LL]) * _2469_zz) + _1e10c8a64__SIN[4LL]) * _2469_zz) + _1e10c8a64__SIN[5LL])));
	}
	if (_21813_sign) {
		_22513_y=static_cast<jule::F64>((-(_22513_y)));
	}
	return _22513_y;
}



jule::F64 _1e10ac95a_tan(jule::F64 _11316_x) {
	
	
	
	{
		if (!((_11316_x == 0LL) || (_1e119a00e_is_nan(_11316_x)))) { goto _case_end_4325358256; }
		_case_begin_4325358256:;
		{
			return _11316_x;
		}
		goto _match_end_4325358096;
		_case_end_4325358256:;
		if (!((_1e119a00e_is_inf(_11316_x,0LL)))) { goto _case_end_4325358368; }
		_case_begin_4325358368:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4325358096;
		_case_end_4325358368:;
		_match_end_4325358096:;
	}
	jule::Bool _12613_sign = false;
	if (_11316_x < 0LL) {
		_11316_x=static_cast<jule::F64>((-(_11316_x)));
		_12613_sign=true;
	}
	jule::U64 _13113_j = 0LLU;
	jule::F64 _13213_y = 0LL;
	jule::F64 _13313_z = 0LL;
	if (_11316_x >= 536870912LLU) {
		std::tie(_13113_j,_13313_z) = _1e111d8cd_trig_reduce(_11316_x);
	} else {
		_13113_j=static_cast<jule::U64>(_11316_x * 1.2732395447351628);
		_13213_y=static_cast<jule::F64>(_13113_j);
		if ((_13113_j & 1LL) == 1LL) {
			(_13113_j)++;
			(_13213_y)++;
		}
		_13313_z=static_cast<jule::F64>(((_11316_x - (_13213_y * 0.7853981256484985)) - (_13213_y * 0.00000003774894707930798)) - (_13213_y * 0.0000000000000026951514290790595));
	}
	jule::F64 _1489_zz = _13313_z * _13313_z;
	if (_1489_zz > 0.00000000000001) {
		_13213_y=static_cast<jule::F64>(_13313_z + (_13313_z * jule::div(_1489_zz * ((((_1e10ac95a__TAN_P[0LL] * _1489_zz) + _1e10ac95a__TAN_P[1LL]) * _1489_zz) + _1e10ac95a__TAN_P[2LL]),((((((_1489_zz + _1e10ac95a__TAN_Q[1LL]) * _1489_zz) + _1e10ac95a__TAN_Q[2LL]) * _1489_zz) + _1e10ac95a__TAN_Q[3LL]) * _1489_zz) + _1e10ac95a__TAN_Q[4LL])));
	} else {
		_13213_y=_13313_z;
	}
	if ((_13113_j & 2LL) == 2LL) {
		_13213_y=static_cast<jule::F64>(jule::div(-1LL,_13213_y));
	}
	if (_12613_sign) {
		_13213_y=static_cast<jule::F64>((-(_13213_y)));
	}
	return _13213_y;
}



jule::F64 _1e1119cc5_mod(jule::F64 _5212_x,jule::F64 _5224_y) {
	if ((((_5224_y == 0LL) || _1e119a00e_is_inf(_5212_x,0LL)) || _1e119a00e_is_nan(_5212_x)) || _1e119a00e_is_nan(_5224_y)) {
		return static_cast<jule::F64>(_1e119a00e_nan());
	}
	_5224_y=static_cast<jule::F64>(_1e11e5279_abs(_5224_y));
	jule::F64 _5810_yfr;
	jule::Int _5815_yexp;
	std::tie(_5810_yfr,_5815_yexp) = _1e111d614_frexp(_5224_y);
	jule::F64 _5913_r = _5212_x;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5212_x)));
	}
	while (_5913_r >= _5224_y) {
		{
			jule::F64 _6514_rfr;
			jule::Int _6523_rexp;
			std::tie(_6514_rfr,_6523_rexp) = _1e111d614_frexp(_5913_r);
			if (_6514_rfr < _5810_yfr) {
				_6523_rexp=static_cast<jule::Int>(_6523_rexp - 1LL);
			}
			_5913_r=static_cast<jule::F64>(_5913_r - _1e135e745_ldexp(_5224_y,static_cast<jule::Int>(_6523_rexp - _5815_yexp)));
		}
	_iter_next_4325404176:;
	}
	_iter_end_4325404176:;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5913_r)));
	}
	return _5913_r;
}



std::tuple<jule::F64,jule::Int> _1e111d614_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::Int _4739_exp = jule::Int();
	{
		if (!((_4718_f == 0LL))) { goto _case_end_4325410096; }
		_case_begin_4325410096:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4325409872;
		_case_end_4325410096:;
		if (!((_1e119a00e_is_inf(_4718_f,0LL)) || (_1e119a00e_is_nan(_4718_f)))) { goto _case_end_4325410208; }
		_case_begin_4325410208:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4325409872;
		_case_end_4325410208:;
		_match_end_4325409872:;
	}
	std::tie(_4718_f,_4739_exp) = _1e119a00e_normalize(_4718_f);
	jule::U64 _5613_x = _1e10c0d9c_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::Int>((static_cast<jule::Int>((_5613_x >> 52LL) & 2047LL) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>(_5613_x & 9227875636482146303LLU);
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



jule::F32 _1e10cb913_nextafter32(jule::F32 _4420_x,jule::F32 _4428_y) {
	jule::F32 _4438_r = jule::F32();
	{
		if (!((_1e119a00e_is_nan(static_cast<jule::F64>(_4420_x))) || (_1e119a00e_is_nan(static_cast<jule::F64>(_4428_y))))) { goto _case_end_4325420336; }
		_case_begin_4325420336:;
		{
			_4438_r=static_cast<jule::F32>(_1e119a00e_nan());
		}
		goto _match_end_4325419392;
		_case_end_4325420336:;
		if (!((_4420_x == _4428_y))) { goto _case_end_4325420832; }
		_case_begin_4325420832:;
		{
			_4438_r=_4420_x;
		}
		goto _match_end_4325419392;
		_case_end_4325420832:;
		if (!((_4420_x == 0LL))) { goto _case_end_4325420512; }
		_case_begin_4325420512:;
		{
			_4438_r=static_cast<jule::F32>(_1e1135d02_copysign(static_cast<jule::F64>(_1e10c0d9c_f32_from_bits(1LLU)),static_cast<jule::F64>(_4428_y)));
		}
		goto _match_end_4325419392;
		_case_end_4325420512:;
		if (!(((_4428_y > _4420_x) == (_4420_x > 0LL)))) { goto _case_end_4325421952; }
		_case_begin_4325421952:;
		{
			_4438_r=static_cast<jule::F32>(_1e10c0d9c_f32_from_bits(static_cast<jule::U32>(_1e10c0d9c_f32_bits(_4420_x) + 1LL)));
		}
		goto _match_end_4325419392;
		_case_end_4325421952:;
		_case_begin_4325419552:;
		{
			_4438_r=static_cast<jule::F32>(_1e10c0d9c_f32_from_bits(static_cast<jule::U32>(_1e10c0d9c_f32_bits(_4420_x) - 1LL)));
		}
		goto _match_end_4325419392;
		_case_end_4325419552:;
		_match_end_4325419392:;
	}
	return _4438_r;
}



jule::F64 _1e10cb913_nextafter(jule::F64 _6618_x,jule::F64 _6626_y) {
	jule::F64 _6636_r = jule::F64();
	{
		if (!((_1e119a00e_is_nan(_6618_x)) || (_1e119a00e_is_nan(_6626_y)))) { goto _case_end_4325430112; }
		_case_begin_4325430112:;
		{
			_6636_r=static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4325429168;
		_case_end_4325430112:;
		if (!((_6618_x == _6626_y))) { goto _case_end_4325430624; }
		_case_begin_4325430624:;
		{
			_6636_r=_6618_x;
		}
		goto _match_end_4325429168;
		_case_end_4325430624:;
		if (!((_6618_x == 0LL))) { goto _case_end_4325430288; }
		_case_begin_4325430288:;
		{
			_6636_r=static_cast<jule::F64>(_1e1135d02_copysign(static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(1LLU)),_6626_y));
		}
		goto _match_end_4325429168;
		_case_end_4325430288:;
		if (!(((_6626_y > _6618_x) == (_6618_x > 0LL)))) { goto _case_end_4325431536; }
		_case_begin_4325431536:;
		{
			_6636_r=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>(_1e10c0d9c_f64_bits(_6618_x) + 1LL)));
		}
		goto _match_end_4325429168;
		_case_end_4325431536:;
		_case_begin_4325429328:;
		{
			_6636_r=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>(_1e10c0d9c_f64_bits(_6618_x) - 1LL)));
		}
		goto _match_end_4325429168;
		_case_end_4325429328:;
		_match_end_4325429168:;
	}
	return _6636_r;
}



jule::F64 _1e1135d02_copysign(jule::F64 _3917_f,jule::F64 _3925_sign) {
	
	return static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>((_1e10c0d9c_f64_bits(_3917_f) & 9223372036854775807LLU) | (_1e10c0d9c_f64_bits(_3925_sign) & 9223372036854775808LLU))));
}



std::tuple<jule::U64,jule::F64> _1e111d8cd_trig_reduce(jule::F64 _6020_x) {
	jule::U64 _6030_j = jule::U64();
	jule::F64 _6038_z = jule::F64();
	
	if (_6020_x < 0.7853981633974483) {
		_6030_j = 0LL;
		_6038_z = _6020_x;
		return std::make_tuple(_6030_j,_6038_z);
	}
	jule::U64 _6713_ix = _1e10c0d9c_f64_bits(_6020_x);
	jule::Int _689_exp = (static_cast<jule::Int>((_6713_ix >> 52LL) & 2047LL) - 1023LL) - 52LL;
	_6713_ix=static_cast<jule::U64>(_6713_ix & 9227875636482146303LLU);
	_6713_ix|=4503599627370496LLU;
	jule::Uint _7410_digit = jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	jule::Uint _7417_bitshift = jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	std::tie(_7410_digit,_7417_bitshift) = std::make_tuple(jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL),jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL));
	jule::U64 _759_z0 = (_1e111d8cd_M_PI4[static_cast<jule::Int>(_7410_digit)] << _7417_bitshift) | (_1e111d8cd_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] >> (64LL - _7417_bitshift));
	jule::U64 _769_z1 = (_1e111d8cd_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] << _7417_bitshift) | (_1e111d8cd_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] >> (64LL - _7417_bitshift));
	jule::U64 _779_z2 = (_1e111d8cd_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] << _7417_bitshift) | (_1e111d8cd_M_PI4[static_cast<jule::Int>(_7410_digit + 3LL)] >> (64LL - _7417_bitshift));
	jule::U64 _7910_z2hi;
	std::tie(_7910_z2hi,std::ignore) = _1e165619b_mul64(_779_z2,_6713_ix);
	jule::U64 _8010_z1hi;
	jule::U64 _8016_z1lo;
	std::tie(_8010_z1hi,_8016_z1lo) = _1e165619b_mul64(_769_z1,_6713_ix);
	jule::U64 _819_z0lo = _759_z0 * _6713_ix;
	jule::U64 _8210_lo;
	jule::U64 _8214_c;
	std::tie(_8210_lo,_8214_c) = _1e165619b_add64(_8016_z1lo,_7910_z2hi,0LLU);
	jule::U64 _8314_hi;
	std::tie(_8314_hi,std::ignore) = _1e165619b_add64(_819_z0lo,_8010_z1hi,_8214_c);
	_6030_j=static_cast<jule::U64>(_8314_hi >> 61LL);
	_8314_hi=static_cast<jule::U64>((_8314_hi << 3LL) | (_8210_lo >> 61LL));
	jule::Uint _889_lz = static_cast<jule::Uint>(_1e165619b_leading_zeros64(_8314_hi));
	jule::U64 _899_e = static_cast<jule::U64>(1023LL - (_889_lz + 1LL));
	_8314_hi=static_cast<jule::U64>((_8314_hi << (_889_lz + 1LL)) | (_8210_lo >> (64LL - (_889_lz + 1LL))));
	_8314_hi>>=12LL;
	_8314_hi|=static_cast<jule::U64>(_899_e << 52LL);
	_6038_z=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(_8314_hi));
	if ((_6030_j & 1LL) == 1LL) {
		(_6030_j)++;
		_6030_j&=7LL;
		(_6038_z)--;
	}
	_6030_j = _6030_j;
	_6038_z = static_cast<jule::F64>(_6038_z * 0.7853981633974483);
	return std::make_tuple(_6030_j,_6038_z);
}



jule::F64 _1e1152bed_atan2(jule::F64 _6014_y,jule::F64 _6022_x) {
	{
		if (!((_1e119a00e_is_nan(_6014_y)) || (_1e119a00e_is_nan(_6022_x)))) { goto _case_end_4325471232; }
		_case_begin_4325471232:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4325470976;
		_case_end_4325471232:;
		if (!((_6014_y == 0LL))) { goto _case_end_4325471344; }
		_case_begin_4325471344:;
		{
			if ((_6022_x >= 0LL) && (!(_1e137aec0_signbit(_6022_x)))) {
				return static_cast<jule::F64>(_1e1135d02_copysign(0LL,_6014_y));
			}
			return static_cast<jule::F64>(_1e1135d02_copysign(3.141592653589793,_6014_y));
		}
		goto _match_end_4325470976;
		_case_end_4325471344:;
		if (!((_6022_x == 0LL))) { goto _case_end_4325473504; }
		_case_begin_4325473504:;
		{
			return static_cast<jule::F64>(_1e1135d02_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4325470976;
		_case_end_4325473504:;
		if (!((_1e119a00e_is_inf(_6022_x,0LL)))) { goto _case_end_4325473600; }
		_case_begin_4325473600:;
		{
			if (_1e119a00e_is_inf(_6022_x,1LL)) {
				{
					if (!((_1e119a00e_is_inf(_6014_y,0LL)))) { goto _case_end_4325481760; }
					_case_begin_4325481760:;
					{
						return static_cast<jule::F64>(_1e1135d02_copysign(0.7853981633974483,_6014_y));
					}
					goto _match_end_4325480240;
					_case_end_4325481760:;
					_case_begin_4325480416:;
					{
						return static_cast<jule::F64>(_1e1135d02_copysign(0LL,_6014_y));
					}
					goto _match_end_4325480240;
					_case_end_4325480416:;
					_match_end_4325480240:;
				}
			}
			{
				if (!((_1e119a00e_is_inf(_6014_y,0LL)))) { goto _case_end_4325484128; }
				_case_begin_4325484128:;
				{
					return static_cast<jule::F64>(_1e1135d02_copysign(2.356194490192345,_6014_y));
				}
				goto _match_end_4325480560;
				_case_end_4325484128:;
				_case_begin_4325480640:;
				{
					return static_cast<jule::F64>(_1e1135d02_copysign(3.141592653589793,_6014_y));
				}
				goto _match_end_4325480560;
				_case_end_4325480640:;
				_match_end_4325480560:;
			}
		}
		goto _match_end_4325470976;
		_case_end_4325473600:;
		if (!((_1e119a00e_is_inf(_6014_y,0LL)))) { goto _case_end_4325473712; }
		_case_begin_4325473712:;
		{
			return static_cast<jule::F64>(_1e1135d02_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4325470976;
		_case_end_4325473712:;
		_match_end_4325470976:;
	}
	jule::F64 _929_q = _1e1592538_atan(static_cast<jule::F64>(jule::div(_6014_y,_6022_x)));
	if (_6022_x < 0LL) {
		if (_929_q <= 0LL) {
			return static_cast<jule::F64>(_929_q + 3.141592653589793);
		}
		return static_cast<jule::F64>(_929_q - 3.141592653589793);
	}
	return _929_q;
}



jule::F64 _1e1154ae0_floor(jule::F64 _4414_x) {
	if (((_4414_x == 0LL) || _1e119a00e_is_nan(_4414_x)) || _1e119a00e_is_inf(_4414_x,0LL)) {
		return _4414_x;
	}
	if (_4414_x < 0LL) {
		jule::F64 _4918_d;
		jule::F64 _4921_fract;
		std::tie(_4918_d,_4921_fract) = _1e125431b_modf(static_cast<jule::F64>((-(_4414_x))));
		if (_4921_fract != 0LL) {
			_4918_d=static_cast<jule::F64>(_4918_d + 1LL);
		}
		return static_cast<jule::F64>((-(_4918_d)));
	}
	jule::F64 _5510_d;
	std::tie(_5510_d,std::ignore) = _1e125431b_modf(_4414_x);
	return _5510_d;
}



jule::F64 _1e1154ae0_ceil(jule::F64 _6513_x) {
	return static_cast<jule::F64>((-(_1e1154ae0_floor(static_cast<jule::F64>((-(_6513_x)))))));
}



jule::F64 _1e1154ae0_trunc(jule::F64 _7314_x) {
	if (((_7314_x == 0LL) || _1e119a00e_is_nan(_7314_x)) || _1e119a00e_is_inf(_7314_x,0LL)) {
		return _7314_x;
	}
	jule::F64 _7710_d;
	std::tie(_7710_d,std::ignore) = _1e125431b_modf(_7314_x);
	return _7710_d;
}



jule::F64 _1e1154ae0_round(jule::F64 _8714_x) {
	jule::U64 _9713_bits = _1e10c0d9c_f64_bits(_8714_x);
	jule::Uint _9813_e = static_cast<jule::Uint>(_9713_bits >> 52LL) & 2047LL;
	if (_9813_e < 1023LL) {
		_9713_bits&=9223372036854775808LLU;
		if (_9813_e == 1022LL) {
			_9713_bits|=4607182418800017408LL;
		}
	} else if (_9813_e < 1075LL) {
		
		_9813_e-=1023LL;
		_9713_bits+=static_cast<jule::Uint>(2251799813685248LLU >> _9813_e);
		_9713_bits&=static_cast<jule::Uint>((~(4503599627370495LLU >> _9813_e)));
	}
	return static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(_9713_bits));
}



jule::F64 _1e1154ae0_round_even(jule::F64 _12419_x) {
	jule::U64 _13613_bits = _1e10c0d9c_f64_bits(_12419_x);
	jule::Uint _13713_e = static_cast<jule::Uint>(_13613_bits >> 52LL) & 2047LL;
	if (_13713_e >= 1023LL) {
		
		_13713_e-=1023LL;
		_13613_bits+=static_cast<jule::U64>((2251799813685247LLU + ((_13613_bits >> (52LL - _13713_e)) & 1LL)) >> _13713_e);
		_13613_bits&=static_cast<jule::Uint>((~(4503599627370495LLU >> _13713_e)));
	} else if ((_13713_e == 1022LL) && ((_13613_bits & 4503599627370495LLU) != 0LL)) {
		_13613_bits=static_cast<jule::U64>((_13613_bits & 9223372036854775808LLU) | 4607182418800017408LL);
	} else {
		_13613_bits&=9223372036854775808LLU;
	}
	return static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(_13613_bits));
}



jule::F64 _1e119a00e_nan(void) {
	return static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(9221120237041090561LLU));
}



jule::Bool _1e119a00e_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



jule::F64 _1e119a00e_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(18442240474082181120LLU));
}



jule::Bool _1e119a00e_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



std::tuple<jule::F64,jule::Int> _1e119a00e_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::Int _8232_exp = jule::Int();
	
	if (_1e11e5279_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_8224_y = static_cast<jule::F64>(_8214_x * 4503599627370496LLU);
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



std::tuple<jule::F64,jule::F64> _1e11500d5_sincos(jule::F64 _4619_x) {
	jule::F64 _4629_sin = jule::F64();
	jule::F64 _4639_cos = jule::F64();
	
	
	
	{
		if (!((_4619_x == 0LL))) { goto _case_end_4325531232; }
		_case_begin_4325531232:;
		{
			_4629_sin = _4619_x;
			_4639_cos = 1LL;
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4325531072;
		_case_end_4325531232:;
		if (!((_1e119a00e_is_nan(_4619_x)) || (_1e119a00e_is_inf(_4619_x,0LL)))) { goto _case_end_4325531344; }
		_case_begin_4325531344:;
		{
			_4629_sin = static_cast<jule::F64>(_1e119a00e_nan());
			_4639_cos = static_cast<jule::F64>(_1e119a00e_nan());
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4325531072;
		_case_end_4325531344:;
		_match_end_4325531072:;
	}
	jule::Bool _5914_sin_sign = false;
	jule::Bool _5928_cos_sign = false;
	std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple(false,false);
	if (_4619_x < 0LL) {
		_4619_x=static_cast<jule::F64>((-(_4619_x)));
		_5914_sin_sign=true;
	}
	jule::U64 _6513_j = 0LLU;
	jule::F64 _6613_y = 0LL;
	jule::F64 _6713_z = 0LL;
	if (_4619_x >= 536870912LLU) {
		std::tie(_6513_j,_6713_z) = _1e111d8cd_trig_reduce(_4619_x);
	} else {
		_6513_j=static_cast<jule::U64>(_4619_x * 1.2732395447351628);
		_6613_y=static_cast<jule::F64>(_6513_j);
		if ((_6513_j & 1LL) == 1LL) {
			(_6513_j)++;
			(_6613_y)++;
		}
		_6513_j&=7LL;
		_6713_z=static_cast<jule::F64>(((_4619_x - (_6613_y * 0.7853981256484985)) - (_6613_y * 0.00000003774894707930798)) - (_6613_y * 0.0000000000000026951514290790595));
	}
	if (_6513_j > 3LL) {
		_6513_j-=4LL;
		std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple((!(_5914_sin_sign)),(!(_5928_cos_sign)));
	}
	if (_6513_j > 1LL) {
		_5928_cos_sign=(!(_5928_cos_sign));
	}
	jule::F64 _899_zz = _6713_z * _6713_z;
	_4639_cos=static_cast<jule::F64>((1LL - (0.5 * _899_zz)) + ((_899_zz * _899_zz) * ((((((((((_1e10c8a64__COS[0LL] * _899_zz) + _1e10c8a64__COS[1LL]) * _899_zz) + _1e10c8a64__COS[2LL]) * _899_zz) + _1e10c8a64__COS[3LL]) * _899_zz) + _1e10c8a64__COS[4LL]) * _899_zz) + _1e10c8a64__COS[5LL])));
	_4629_sin=static_cast<jule::F64>(_6713_z + ((_6713_z * _899_zz) * ((((((((((_1e10c8a64__SIN[0LL] * _899_zz) + _1e10c8a64__SIN[1LL]) * _899_zz) + _1e10c8a64__SIN[2LL]) * _899_zz) + _1e10c8a64__SIN[3LL]) * _899_zz) + _1e10c8a64__SIN[4LL]) * _899_zz) + _1e10c8a64__SIN[5LL])));
	if ((_6513_j == 1LL) || (_6513_j == 2LL)) {
		std::tie(_4629_sin,_4639_cos) = std::make_tuple(_4639_cos,_4629_sin);
	}
	if (_5928_cos_sign) {
		_4639_cos=static_cast<jule::F64>((-(_4639_cos)));
	}
	if (_5914_sin_sign) {
		_4629_sin=static_cast<jule::F64>((-(_4629_sin)));
	}
	return std::make_tuple(_4629_sin,_4639_cos);
}



jule::F64 _1e119b86d_dim(jule::F64 _4412_x,jule::F64 _4420_y) {
	jule::F64 _509_v = _4412_x - _4420_y;
	if (_509_v <= 0LL) {
		return 0LL;
	}
	return _509_v;
}



jule::F64 _1e119b86d_max(jule::F64 _6612_x,jule::F64 _6620_y) {
	{
		if (!((_1e119a00e_is_inf(_6612_x,1LL)) || (_1e119a00e_is_inf(_6620_y,1LL)))) { goto _case_end_4325566768; }
		_case_begin_4325566768:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(1LL));
		}
		goto _match_end_4325566544;
		_case_end_4325566768:;
		if (!((_1e119a00e_is_nan(_6612_x)) || (_1e119a00e_is_nan(_6620_y)))) { goto _case_end_4325566880; }
		_case_begin_4325566880:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4325566544;
		_case_end_4325566880:;
		if (!(((_6612_x == 0LL) && (_6612_x == _6620_y)))) { goto _case_end_4325566992; }
		_case_begin_4325566992:;
		{
			if (_1e137aec0_signbit(_6612_x)) {
				return _6620_y;
			}
			return _6612_x;
		}
		goto _match_end_4325566544;
		_case_end_4325566992:;
		_match_end_4325566544:;
	}
	if (_6612_x > _6620_y) {
		return _6612_x;
	}
	return _6620_y;
}



jule::F64 _1e119b86d_min(jule::F64 _9212_x,jule::F64 _9220_y) {
	{
		if (!((_1e119a00e_is_inf(_9212_x,-1LL)) || (_1e119a00e_is_inf(_9220_y,-1LL)))) { goto _case_end_4325573152; }
		_case_begin_4325573152:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(-1LL));
		}
		goto _match_end_4325572944;
		_case_end_4325573152:;
		if (!((_1e119a00e_is_nan(_9212_x)) || (_1e119a00e_is_nan(_9220_y)))) { goto _case_end_4325573264; }
		_case_begin_4325573264:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4325572944;
		_case_end_4325573264:;
		if (!(((_9212_x == 0LL) && (_9212_x == _9220_y)))) { goto _case_end_4325573376; }
		_case_begin_4325573376:;
		{
			if (_1e137aec0_signbit(_9212_x)) {
				return _9212_x;
			}
			return _9220_y;
		}
		goto _match_end_4325572944;
		_case_end_4325573376:;
		_match_end_4325572944:;
	}
	if (_9212_x < _9220_y) {
		return _9212_x;
	}
	return _9220_y;
}



jule::F64 _1e119b120_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		if (!((_1e119a00e_is_nan(_11112_x)) || (_1e119a00e_is_inf(_11112_x,1LL)))) { goto _case_end_4325586480; }
		_case_begin_4325586480:;
		{
			return _11112_x;
		}
		goto _match_end_4325586304;
		_case_end_4325586480:;
		if (!((_11112_x < 0LL))) { goto _case_end_4325586592; }
		_case_begin_4325586592:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4325586304;
		_case_end_4325586592:;
		if (!((_11112_x == 0LL))) { goto _case_end_4325586704; }
		_case_begin_4325586704:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(-1LL));
		}
		goto _match_end_4325586304;
		_case_end_4325586704:;
		_match_end_4325586304:;
	}
	jule::F64 _13314_f1;
	jule::Int _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _1e111d614_frexp(_11112_x);
	if (_13314_f1 < 0.7071067811865476) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = _13314_f1 - 1LL;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,2LL + _1389_f);
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586))))));
	jule::F64 _1469_t2 = _1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f));
}



jule::F64 _1e1206c5d_expm1(jule::F64 _15618_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1e119a00e_is_inf(_15618_x,1LL)) || (_1e119a00e_is_nan(_15618_x)))) { goto _case_end_4325615344; }
		_case_begin_4325615344:;
		{
			return _15618_x;
		}
		goto _match_end_4325615200;
		_case_end_4325615344:;
		if (!((_1e119a00e_is_inf(_15618_x,-1LL)))) { goto _case_end_4325615456; }
		_case_begin_4325615456:;
		{
			return -1LL;
		}
		goto _match_end_4325615200;
		_case_end_4325615456:;
		_match_end_4325615200:;
	}
	jule::F64 _18013_absx = _15618_x;
	jule::Bool _18113_sign = false;
	if (_15618_x < 0LL) {
		_18013_absx=static_cast<jule::F64>((-(_18013_absx)));
		_18113_sign=true;
	}
	if (_18013_absx >= 38.816242111356935) {
		if (_18113_sign) {
			return -1LL;
		}
		if (_18013_absx >= 709.782712893384) {
			return static_cast<jule::F64>(_1e119a00e_inf(1LL));
		}
	}
	jule::F64 _19813_c = 0LL;
	jule::Int _19913_k = 0LL;
	if (_18013_absx > 0.34657359027997264) {
		jule::F64 _20117_hi = 0LL;
		jule::F64 _20217_lo = 0LL;
		if (_18013_absx < 1.0397207708399179) {
			if ((!(_18113_sign))) {
				_20117_hi=static_cast<jule::F64>(_15618_x - 0.6931471803691238);
				_20217_lo=0.00000000019082149292705877;
				_19913_k=1LL;
			} else {
				_20117_hi=static_cast<jule::F64>(_15618_x + 0.6931471803691238);
				_20217_lo=-0.00000000019082149292705877;
				_19913_k=-1LL;
			}
		} else {
			if ((!(_18113_sign))) {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) + 0.5);
			} else {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) - 0.5);
			}
			jule::F64 _21917_t = static_cast<jule::F64>(_19913_k);
			_20117_hi=static_cast<jule::F64>(_15618_x - (_21917_t * 0.6931471803691238));
			_20217_lo=static_cast<jule::F64>(_21917_t * 0.00000000019082149292705877);
		}
		_15618_x=static_cast<jule::F64>(_20117_hi - _20217_lo);
		_19813_c=static_cast<jule::F64>((_20117_hi - _15618_x) - _20217_lo);
	} else if (_18013_absx < 0.00000000000000005551115123125783) {
		return _15618_x;
	} else {
		_19913_k=0LL;
	}
	jule::F64 _2329_hfx = 0.5 * _15618_x;
	jule::F64 _2339_hxs = _15618_x * _2329_hfx;
	jule::F64 _2349_r1 = 1LL + (_2339_hxs * (-0.03333333333333313 + (_2339_hxs * (0.0015873015872548146 + (_2339_hxs * (-0.0000793650757867488 + (_2339_hxs * (0.000004008217827329362 + (_2339_hxs * -0.00000020109921818362437)))))))));
	jule::F64 _23513_t = 3LL - (_2349_r1 * _2329_hfx);
	jule::F64 _23613_e = _2339_hxs * jule::div(_2349_r1 - _23513_t,6LL - (_15618_x * _23513_t));
	if (_19913_k == 0LL) {
		return static_cast<jule::F64>(_15618_x - ((_15618_x * _23613_e) - _2339_hxs));
	}
	_23613_e=static_cast<jule::F64>((_15618_x * (_23613_e - _19813_c)) - _19813_c);
	_23613_e-=_2339_hxs;
	{
		if (!((_19913_k == -1LL))) { goto _case_end_4325644912; }
		_case_begin_4325644912:;
		{
			return static_cast<jule::F64>((0.5 * (_15618_x - _23613_e)) - 0.5);
		}
		goto _match_end_4325645664;
		_case_end_4325644912:;
		if (!((_19913_k == 1LL))) { goto _case_end_4325644752; }
		_case_begin_4325644752:;
		{
			if (_15618_x < -0.25) {
				return static_cast<jule::F64>(-2LL * (_23613_e - (_15618_x + 0.5)));
			}
			return static_cast<jule::F64>(1LL + (2LL * (_15618_x - _23613_e)));
		}
		goto _match_end_4325645664;
		_case_end_4325644752:;
		if (!((_19913_k <= -2LL) || (_19913_k > 56LL))) { goto _case_end_4325646064; }
		_case_begin_4325646064:;
		{
			jule::F64 _25117_y = 1LL - (_23613_e - _15618_x);
			_25117_y=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>(_1e10c0d9c_f64_bits(_25117_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
			return static_cast<jule::F64>(_25117_y - 1LL);
		}
		goto _match_end_4325645664;
		_case_end_4325646064:;
		_match_end_4325645664:;
	}
	if (_19913_k < 20LL) {
		_23513_t=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>(4607182418800017408LL - (9007199254740992LL >> static_cast<jule::Uint>(_19913_k)))));
		jule::F64 _25717_y = _23513_t - (_23613_e - _15618_x);
		_25717_y=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>(_1e10c0d9c_f64_bits(_25717_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
		return _25717_y;
	}
	_23513_t=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>(static_cast<jule::U64>(1023LL - _19913_k) << 52LL)));
	jule::F64 _26213_y = _15618_x - (_23613_e + _23513_t);
	(_26213_y)++;
	_26213_y=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>(_1e10c0d9c_f64_bits(_26213_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
	return _26213_y;
}



jule::F64 _1e11e5279_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>(_1e10c0d9c_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



jule::F64 _1e124dd71_j1(jule::F64 _10515_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1e119a00e_is_nan(_10515_x)))) { goto _case_end_4325672688; }
		_case_begin_4325672688:;
		{
			return _10515_x;
		}
		goto _match_end_4325672528;
		_case_end_4325672688:;
		if (!((_1e119a00e_is_inf(_10515_x,0LL)) || (_10515_x == 0LL))) { goto _case_end_4325672800; }
		_case_begin_4325672800:;
		{
			return 0LL;
		}
		goto _match_end_4325672528;
		_case_end_4325672800:;
		_match_end_4325672528:;
	}
	jule::Bool _12613_sign = false;
	if (_10515_x < 0LL) {
		_10515_x=static_cast<jule::F64>((-(_10515_x)));
		_12613_sign=true;
	}
	if (_10515_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _1e11500d5_sincos(_10515_x);
		jule::F64 _13317_ss = (-(_13214_s)) - _13217_c;
		jule::F64 _13417_cc = _13214_s - _13217_c;
		if (_10515_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = _1e10c8a64_cos(static_cast<jule::F64>(_10515_x + _10515_x));
			if ((_13214_s * _13217_c) > 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10515_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_1e151c271_sqrt(_10515_x)));
		} else {
			jule::F64 _15317_u = _1e124dd71_pone(_10515_x);
			jule::F64 _15417_v = _1e124dd71_qone(_10515_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_1e151c271_sqrt(_10515_x)));
		}
		if (_12613_sign) {
			return static_cast<jule::F64>((-(_14917_z)));
		}
		return _14917_z;
	}
	if (_10515_x < 0.000000007450580596923828) {
		return static_cast<jule::F64>(0.5 * _10515_x);
	}
	jule::F64 _16613_z = _10515_x * _10515_x;
	jule::F64 _16713_r = _16613_z * (-0.0625 + (_16613_z * (0.001407056669551897 + (_16613_z * (-0.00001599556310840356 + (_16613_z * 0.000000049672799960958445))))));
	jule::F64 _1689_s = 1LL + (_16613_z * (0.019153759953836346 + (_16613_z * (0.00018594678558863092 + (_16613_z * (0.0000011771846404262368 + (_16613_z * (0.0000000050463625707621704 + (_16613_z * 0.000000000012354227442613791)))))))));
	_16713_r*=_10515_x;
	_16613_z=static_cast<jule::F64>((0.5 * _10515_x) + jule::div(_16713_r,_1689_s));
	if (_12613_sign) {
		return static_cast<jule::F64>((-(_16613_z)));
	}
	return _16613_z;
}



jule::F64 _1e124dd71_y1(jule::F64 _18411_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18411_x < 0LL) || (_1e119a00e_is_nan(_18411_x)))) { goto _case_end_4325709408; }
		_case_begin_4325709408:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4325709232;
		_case_end_4325709408:;
		if (!((_1e119a00e_is_inf(_18411_x,1LL)))) { goto _case_end_4325709520; }
		_case_begin_4325709520:;
		{
			return 0LL;
		}
		goto _match_end_4325709232;
		_case_end_4325709520:;
		if (!((_18411_x == 0LL))) { goto _case_end_4325709632; }
		_case_begin_4325709632:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(-1LL));
		}
		goto _match_end_4325709232;
		_case_end_4325709632:;
		_match_end_4325709232:;
	}
	if (_18411_x >= 2LL) {
		jule::F64 _20814_s;
		jule::F64 _20817_c;
		std::tie(_20814_s,_20817_c) = _1e11500d5_sincos(_18411_x);
		jule::F64 _20917_ss = (-(_20814_s)) - _20817_c;
		jule::F64 _21017_cc = _20814_s - _20817_c;
		if (_18411_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _21417_z = _1e10c8a64_cos(static_cast<jule::F64>(_18411_x + _18411_x));
			if ((_20814_s * _20817_c) > 0LL) {
				_21017_cc=static_cast<jule::F64>(jule::div(_21417_z,_20917_ss));
			} else {
				_20917_ss=static_cast<jule::F64>(jule::div(_21417_z,_21017_cc));
			}
		}
		jule::F64 _23217_z = 0LL;
		if (_18411_x > 5188146770730811392LL) {
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _20917_ss,_1e151c271_sqrt(_18411_x)));
		} else {
			jule::F64 _23617_u = _1e124dd71_pone(_18411_x);
			jule::F64 _23717_v = _1e124dd71_qone(_18411_x);
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23617_u * _20917_ss) + (_23717_v * _21017_cc)),_1e151c271_sqrt(_18411_x)));
		}
		return _23217_z;
	}
	if (_18411_x <= 0.00000000000000005551115123125783) {
		return static_cast<jule::F64>(jule::div(-0.6366197723675814,_18411_x));
	}
	jule::F64 _2459_z = _18411_x * _18411_x;
	jule::F64 _2469_u = -0.19605709064623894 + (_2459_z * (0.05044387166398113 + (_2459_z * (-0.0019125689587576355 + (_2459_z * (0.00002352526005616105 + (_2459_z * -0.00000009190991580398789)))))));
	jule::F64 _2479_v = 1LL + (_2459_z * (0.01991673182366499 + (_2459_z * (0.00020255258102513517 + (_2459_z * (0.0000013560880109751623 + (_2459_z * (0.000000006227414523646215 + (_2459_z * 0.000000000016655924620799208)))))))));
	return static_cast<jule::F64>((_18411_x * jule::div(_2469_u,_2479_v)) + (0.6366197723675814 * ((_1e124dd71_j1(_18411_x) * _1e119b120_log(_18411_x)) - jule::div(1LL,_18411_x))));
}



jule::F64 _1e124dd71_pone(jule::F64 _3289_x) {
	jule::Array<jule::F64,6>* _32913_p = nullptr;
	jule::Array<jule::F64,5>* _33013_q = nullptr;
	if (_3289_x >= 8LL) {
		_32913_p=(&(_1e124dd71_P_1R8));
		_33013_q=(&(_1e124dd71_P_1S8));
	} else if (_3289_x >= 4.5454) {
		_32913_p=(&(_1e124dd71_P_1R5));
		_33013_q=(&(_1e124dd71_P_1S5));
	} else if (_3289_x >= 2.8571) {
		_32913_p=(&(_1e124dd71_P_1R3));
		_33013_q=(&(_1e124dd71_P_1S3));
	} else if (_3289_x >= 2LL) {
		_32913_p=(&(_1e124dd71_P_1R2));
		_33013_q=(&(_1e124dd71_P_1S2));
	}
	{
		jule::F64 _34513_z = jule::div(1LL,_3289_x * _3289_x);
		jule::F64 _34613_r = (*(_32913_p))[0LL] + (_34513_z * ((*(_32913_p))[1LL] + (_34513_z * ((*(_32913_p))[2LL] + (_34513_z * ((*(_32913_p))[3LL] + (_34513_z * ((*(_32913_p))[4LL] + (_34513_z * (*(_32913_p))[5LL])))))))));
		jule::F64 _34713_s = 1LL + (_34513_z * ((*(_33013_q))[0LL] + (_34513_z * ((*(_33013_q))[1LL] + (_34513_z * ((*(_33013_q))[2LL] + (_34513_z * ((*(_33013_q))[3LL] + (_34513_z * (*(_33013_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34613_r,_34713_s));
	}
}



jule::F64 _1e124dd71_qone(jule::F64 _4339_x) {
	jule::Array<jule::F64,6>* _43413_p = nullptr;
	jule::Array<jule::F64,6>* _43513_q = nullptr;
	if (_4339_x >= 8LL) {
		_43413_p=(&(_1e124dd71_Q_1R8));
		_43513_q=(&(_1e124dd71_Q_1S8));
	} else if (_4339_x >= 4.5454) {
		_43413_p=(&(_1e124dd71_Q_1R5));
		_43513_q=(&(_1e124dd71_Q_1S5));
	} else if (_4339_x >= 2.8571) {
		_43413_p=(&(_1e124dd71_Q_1R3));
		_43513_q=(&(_1e124dd71_Q_1S3));
	} else if (_4339_x >= 2LL) {
		_43413_p=(&(_1e124dd71_Q_1R2));
		_43513_q=(&(_1e124dd71_Q_1S2));
	}
	{
		jule::F64 _45013_z = jule::div(1LL,_4339_x * _4339_x);
		jule::F64 _45113_r = (*(_43413_p))[0LL] + (_45013_z * ((*(_43413_p))[1LL] + (_45013_z * ((*(_43413_p))[2LL] + (_45013_z * ((*(_43413_p))[3LL] + (_45013_z * ((*(_43413_p))[4LL] + (_45013_z * (*(_43413_p))[5LL])))))))));
		jule::F64 _45213_s = 1LL + (_45013_z * ((*(_43513_q))[0LL] + (_45013_z * ((*(_43513_q))[1LL] + (_45013_z * ((*(_43513_q))[2LL] + (_45013_z * ((*(_43513_q))[3LL] + (_45013_z * ((*(_43513_q))[4LL] + (_45013_z * (*(_43513_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(0.375 + jule::div(_45113_r,_45213_s),_4339_x));
	}
}



jule::U64 _1e12a3c50_zero(jule::U64 _409_x) {
	if (_409_x == 0LL) {
		return 1LL;
	}
	return 0LL;
}



jule::U64 _1e12a3c50_nonzero(jule::U64 _4912_x) {
	if (_4912_x != 0LL) {
		return 1LL;
	}
	return 0LL;
}



std::tuple<jule::U64,jule::U64> _1e12a3c50_shl(jule::U64 _588_u1,jule::U64 _5817_u2,jule::Uint _5826_n) {
	jule::U64 _5837_r1 = jule::U64();
	jule::U64 _5846_r2 = jule::U64();
	_5837_r1=static_cast<jule::U64>(((_588_u1 << _5826_n) | (_5817_u2 >> (64LL - _5826_n))) | (_5817_u2 << (_5826_n - 64LL)));
	_5846_r2=static_cast<jule::U64>(_5817_u2 << _5826_n);
	return std::make_tuple(_5837_r1,_5846_r2);
}



std::tuple<jule::U64,jule::U64> _1e12a3c50_shr(jule::U64 _648_u1,jule::U64 _6417_u2,jule::Uint _6426_n) {
	jule::U64 _6437_r1 = jule::U64();
	jule::U64 _6446_r2 = jule::U64();
	jule::U64 _7113_shift = _648_u1;
	jule::Uint _7213_shift_n = _6426_n - 64LL;
	while ((_7113_shift > 0LL) && (_7213_shift_n > 0LL)) {
		{
			(_7213_shift_n)--;
			_7113_shift>>=1LL;
		}
	_iter_next_4325784640:;
	}
	_iter_end_4325784640:;
	_6446_r2=static_cast<jule::U64>(((_6417_u2 >> _6426_n) | (_648_u1 << (64LL - _6426_n))) | _7113_shift);
	_6437_r1=static_cast<jule::U64>(_648_u1 >> _6426_n);
	return std::make_tuple(_6437_r1,_6446_r2);
}



std::tuple<jule::U64,jule::U64> _1e12a3c50_shrcompress(jule::U64 _8716_u1,jule::U64 _8725_u2,jule::Uint _8734_n) {
	jule::U64 _8745_r1 = jule::U64();
	jule::U64 _8754_r2 = jule::U64();
	{
		if (!((_8734_n == 0LL))) { goto _case_end_4325790688; }
		_case_begin_4325790688:;
		{
			_8745_r1 = _8716_u1;
			_8754_r2 = _8725_u2;
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4325790448;
		_case_end_4325790688:;
		if (!((_8734_n == 64LL))) { goto _case_end_4325790800; }
		_case_begin_4325790800:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_8716_u1 | _1e12a3c50_nonzero(_8725_u2));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4325790448;
		_case_end_4325790800:;
		if (!((_8734_n >= 128LL))) { goto _case_end_4325790912; }
		_case_begin_4325790912:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_1e12a3c50_nonzero(static_cast<jule::U64>(_8716_u1 | _8725_u2)));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4325790448;
		_case_end_4325790912:;
		if (!((_8734_n < 64LL))) { goto _case_end_4325791024; }
		_case_begin_4325791024:;
		{
			std::tie(_8745_r1,_8754_r2) = _1e12a3c50_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_1e12a3c50_nonzero(static_cast<jule::U64>(_8725_u2 & ((1LL << _8734_n) - 1LL))));
		}
		goto _match_end_4325790448;
		_case_end_4325791024:;
		if (!((_8734_n < 128LL))) { goto _case_end_4325791136; }
		_case_begin_4325791136:;
		{
			std::tie(_8745_r1,_8754_r2) = _1e12a3c50_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_1e12a3c50_nonzero(static_cast<jule::U64>((_8716_u1 & ((1LL << (_8734_n - 64LL)) - 1LL)) | _8725_u2)));
		}
		goto _match_end_4325790448;
		_case_end_4325791136:;
		_match_end_4325790448:;
	}
	return std::make_tuple(_8745_r1,_8754_r2);
}



jule::I32 _1e12a3c50_lz(jule::U64 _1057_u1,jule::U64 _10516_u2) {
	jule::I32 _10527_l = jule::I32();
	_10527_l=static_cast<jule::I32>(_1e165619b_leading_zeros64(_1057_u1));
	if (_10527_l == 64LL) {
		_10527_l+=static_cast<jule::I32>(_1e165619b_leading_zeros64(_10516_u2));
	}
	_10527_l = _10527_l;
	return _10527_l;
}



std::tuple<jule::U32,jule::I32,jule::U64> _1e12a3c50_split(jule::U64 _11610_b) {
	jule::U32 _11620_sign = jule::U32();
	jule::I32 _11631_exp = jule::I32();
	jule::U64 _11641_mantissa = jule::U64();
	_11620_sign=static_cast<jule::U32>(_11610_b >> 63LL);
	_11631_exp=static_cast<jule::I32>(static_cast<jule::I32>(_11610_b >> 52LL) & 2047LL);
	_11641_mantissa=static_cast<jule::U64>(_11610_b & 4503599627370495LLU);
	if (_11631_exp == 0LL) {
		jule::Uint _12313_shift = static_cast<jule::Uint>(_1e165619b_leading_zeros64(_11641_mantissa) - 11LL);
		_11641_mantissa<<=_12313_shift;
		_11631_exp=static_cast<jule::I32>(1LL - static_cast<jule::I32>(_12313_shift));
	} else {
		_11641_mantissa|=4503599627370496LLU;
	}
	return std::make_tuple(_11620_sign,_11631_exp,_11641_mantissa);
}



jule::F64 _1e12a3c50_fma(jule::F64 _13512_x,jule::F64 _13520_y,jule::F64 _13528_z) {
	jule::U64 _13610_bx = _1e10c0d9c_f64_bits(_13512_x);
	jule::U64 _13614_by = _1e10c0d9c_f64_bits(_13520_y);
	jule::U64 _13618_bz = _1e10c0d9c_f64_bits(_13528_z);
	std::tie(_13610_bx,_13614_by,_13618_bz) = std::make_tuple(_1e10c0d9c_f64_bits(_13512_x),_1e10c0d9c_f64_bits(_13520_y),_1e10c0d9c_f64_bits(_13528_z));
	if (((((_13512_x == 0LL) || (_13520_y == 0LL)) || (_13528_z == 0LL)) || ((_13610_bx & 9218868437227405312LL) == 9218868437227405312LL)) || ((_13614_by & 9218868437227405312LL) == 9218868437227405312LL)) {
		return static_cast<jule::F64>((_13512_x * _13520_y) + _13528_z);
	}
	if ((_13618_bz & 9218868437227405312LL) == 9218868437227405312LL) {
		return _13528_z;
	}
	jule::U32 _15010_xs;
	jule::I32 _15014_xe;
	jule::U64 _15018_xm;
	std::tie(_15010_xs,_15014_xe,_15018_xm) = _1e12a3c50_split(_13610_bx);
	jule::U32 _15110_ys;
	jule::I32 _15114_ye;
	jule::U64 _15118_ym;
	std::tie(_15110_ys,_15114_ye,_15118_ym) = _1e12a3c50_split(_13614_by);
	jule::U32 _15214_zs;
	jule::I32 _15222_ze;
	jule::U64 _15226_zm;
	std::tie(_15214_zs,_15222_ze,_15226_zm) = _1e12a3c50_split(_13618_bz);
	jule::I32 _15613_pe = ((_15014_xe + _15114_ye) - 1023LL) + 1LL;
	jule::U64 _16114_pm1;
	jule::U64 _16123_pm2;
	std::tie(_16114_pm1,_16123_pm2) = _1e165619b_mul64(static_cast<jule::U64>(_15018_xm << 10LL),static_cast<jule::U64>(_15118_ym << 11LL));
	jule::U64 _16214_zm1 = _15226_zm << 10LL;
	jule::U64 _16223_zm2 = static_cast<jule::U64>(0LLU);
	std::tie(_16214_zm1,_16223_zm2) = std::make_tuple(_15226_zm << 10LL,static_cast<jule::U64>(0LLU));
	jule::U32 _16313_ps = _15010_xs ^ _15110_ys;
	jule::Uint _1669_is62zero = static_cast<jule::Uint>(((~(_16114_pm1)) >> 62LL) & 1LL);
	std::tie(_16114_pm1,_16123_pm2) = _1e12a3c50_shl(_16114_pm1,_16123_pm2,_1669_is62zero);
	_15613_pe-=static_cast<jule::I32>(_1669_is62zero);
	if ((_15613_pe < _15222_ze) || ((_15613_pe == _15222_ze) && (_16114_pm1 < _16214_zm1))) {
		std::tie(_16313_ps,_15613_pe,_16114_pm1,_16123_pm2,_15214_zs,_15222_ze,_16214_zm1,_16223_zm2) = std::make_tuple(_15214_zs,_15222_ze,_16214_zm1,_16223_zm2,_16313_ps,static_cast<jule::I32>(_15613_pe),_16114_pm1,_16123_pm2);
	}
	std::tie(_16214_zm1,_16223_zm2) = _1e12a3c50_shrcompress(_16214_zm1,_16223_zm2,static_cast<jule::Uint>(_15613_pe - _15222_ze));
	jule::U64 _17913_m = 0LLU;
	jule::U64 _18013_c = 0LLU;
	if (_16313_ps == _15214_zs) {
		std::tie(_16123_pm2,_18013_c) = _1e165619b_add64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _1e165619b_add64(_16114_pm1,_16214_zm1,_18013_c);
		_15613_pe-=static_cast<jule::I32>((~(_16114_pm1)) >> 63LL);
		std::tie(_16114_pm1,_17913_m) = _1e12a3c50_shrcompress(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(64LL + (_16114_pm1 >> 63LL)));
	} else {
		std::tie(_16123_pm2,_18013_c) = _1e165619b_sub64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _1e165619b_sub64(_16114_pm1,_16214_zm1,_18013_c);
		jule::I32 _19113_nz = _1e12a3c50_lz(_16114_pm1,_16123_pm2);
		_15613_pe-=_19113_nz;
		std::tie(_17913_m,_16123_pm2) = _1e12a3c50_shl(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(_19113_nz - 1LL));
		_17913_m|=static_cast<jule::U64>(_1e12a3c50_nonzero(_16123_pm2));
	}
	if ((_15613_pe > 2045LL) || ((_15613_pe == 2045LL) && (((_17913_m + 512LLU) >> 63LL) == 1LL))) {
		return static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(_16313_ps) << 63LL) | 9218868437227405312LL)));
	}
	if (_15613_pe < 0LL) {
		jule::Uint _20313_n = static_cast<jule::Uint>((-(_15613_pe)));
		_17913_m=static_cast<jule::U64>((_17913_m >> _20313_n) | _1e12a3c50_nonzero(static_cast<jule::U64>(_17913_m & ((1LL << _20313_n) - 1LL))));
		_15613_pe=0LL;
	}
	_17913_m=static_cast<jule::U64>(((_17913_m + 512LLU) >> 10LL) & (~(_1e12a3c50_zero(static_cast<jule::U64>((_17913_m & 1023LLU) ^ 512LLU)))));
	_15613_pe&=static_cast<jule::I32>((-(static_cast<jule::I32>(_1e12a3c50_nonzero(_17913_m)))));
	return static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>(((static_cast<jule::U64>(_16313_ps) << 63LL) + (static_cast<jule::U64>(_15613_pe) << 52LL)) + _17913_m)));
}



std::tuple<jule::F64,jule::F64> _1e125431b_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _1e11e5279_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_4325862576:;
		}
		_iter_end_4325862576:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



jule::F64 _1e11dc34d_log10(jule::F64 _4014_x) {
	return static_cast<jule::F64>(_1e119b120_log(_4014_x) * 0.43429448190325176);
}



jule::F64 _1e11dc34d_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::Int _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _1e111d614_frexp(_4413_x);
	if (_4510_frac == 0.5) {
		return static_cast<jule::F64>(_4516_exp - 1LL);
	}
	return static_cast<jule::F64>((_1e119b120_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp));
}



jule::F64 _1e12dc948_hypot(jule::F64 _5018_p,jule::F64 _5030_q) {
	{
		if (!((_1e119a00e_is_inf(_5018_p,0LL)) || (_1e119a00e_is_inf(_5030_q,0LL)))) { goto _case_end_4325873664; }
		_case_begin_4325873664:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(1LL));
		}
		goto _match_end_4325873472;
		_case_end_4325873664:;
		if (!((_1e119a00e_is_nan(_5018_p)) || (_1e119a00e_is_nan(_5030_q)))) { goto _case_end_4325873776; }
		_case_begin_4325873776:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4325873472;
		_case_end_4325873776:;
		_match_end_4325873472:;
	}
	std::tie(_5018_p,_5030_q) = std::make_tuple(static_cast<jule::F64>(_1e11e5279_abs(_5018_p)),static_cast<jule::F64>(_1e11e5279_abs(_5030_q)));
	if (_5018_p < _5030_q) {
		std::tie(_5018_p,_5030_q) = std::make_tuple(_5030_q,_5018_p);
	}
	if (_5018_p == 0LL) {
		return 0LL;
	}
	_5030_q=static_cast<jule::F64>(jule::div(_5030_q,_5018_p));
	return static_cast<jule::F64>(_5018_p * _1e151c271_sqrt(static_cast<jule::F64>(1LL + (_5030_q * _5030_q))));
}



jule::F64 _1e1300582_j0(jule::F64 _10715_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1e119a00e_is_nan(_10715_x)))) { goto _case_end_4325890832; }
		_case_begin_4325890832:;
		{
			return _10715_x;
		}
		goto _match_end_4325890656;
		_case_end_4325890832:;
		if (!((_1e119a00e_is_inf(_10715_x,0LL)))) { goto _case_end_4325890944; }
		_case_begin_4325890944:;
		{
			return 0LL;
		}
		goto _match_end_4325890656;
		_case_end_4325890944:;
		if (!((_10715_x == 0LL))) { goto _case_end_4325891056; }
		_case_begin_4325891056:;
		{
			return 1LL;
		}
		goto _match_end_4325890656;
		_case_end_4325891056:;
		_match_end_4325890656:;
	}
	_10715_x=static_cast<jule::F64>(_1e11e5279_abs(_10715_x));
	if (_10715_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _1e11500d5_sincos(_10715_x);
		jule::F64 _13317_ss = _13214_s - _13217_c;
		jule::F64 _13417_cc = _13214_s + _13217_c;
		if (_10715_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = (-(_1e10c8a64_cos(static_cast<jule::F64>(_10715_x + _10715_x))));
			if ((_13214_s * _13217_c) < 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10715_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_1e151c271_sqrt(_10715_x)));
		} else {
			jule::F64 _15317_u = _1e1300582_pzero(_10715_x);
			jule::F64 _15417_v = _1e1300582_qzero(_10715_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_1e151c271_sqrt(_10715_x)));
		}
		return _14917_z;
	}
	if (_10715_x < 0.0001220703125) {
		if (_10715_x < 0.000000007450580596923828) {
			return 1LL;
		}
		return static_cast<jule::F64>(1LL - ((0.25 * _10715_x) * _10715_x));
	}
	jule::F64 _1659_z = _10715_x * _10715_x;
	jule::F64 _1669_r = _1659_z * (0.015624999999999995 + (_1659_z * (-0.00018997929423885472 + (_1659_z * (0.0000018295404953270067 + (_1659_z * -0.000000004618326885321032))))));
	jule::F64 _1679_s = 1LL + (_1659_z * (0.015619102946489001 + (_1659_z * (0.00011692678466333745 + (_1659_z * (0.0000005135465502073181 + (_1659_z * 0.0000000011661400333379)))))));
	if (_10715_x < 1LL) {
		return static_cast<jule::F64>(1LL + (_1659_z * (-0.25 + jule::div(_1669_r,_1679_s))));
	}
	jule::F64 _1719_u = 0.5 * _10715_x;
	return static_cast<jule::F64>(((1LL + _1719_u) * (1LL - _1719_u)) + (_1659_z * jule::div(_1669_r,_1679_s)));
}



jule::F64 _1e1300582_y0(jule::F64 _18211_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18211_x < 0LL) || (_1e119a00e_is_nan(_18211_x)))) { goto _case_end_4325928736; }
		_case_begin_4325928736:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4325928560;
		_case_end_4325928736:;
		if (!((_1e119a00e_is_inf(_18211_x,1LL)))) { goto _case_end_4325928848; }
		_case_begin_4325928848:;
		{
			return 0LL;
		}
		goto _match_end_4325928560;
		_case_end_4325928848:;
		if (!((_18211_x == 0LL))) { goto _case_end_4325928960; }
		_case_begin_4325928960:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(-1LL));
		}
		goto _match_end_4325928560;
		_case_end_4325928960:;
		_match_end_4325928560:;
	}
	if (_18211_x >= 2LL) {
		jule::F64 _21814_s;
		jule::F64 _21817_c;
		std::tie(_21814_s,_21817_c) = _1e11500d5_sincos(_18211_x);
		jule::F64 _21917_ss = _21814_s - _21817_c;
		jule::F64 _22017_cc = _21814_s + _21817_c;
		if (_18211_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _22717_z = (-(_1e10c8a64_cos(static_cast<jule::F64>(_18211_x + _18211_x))));
			if ((_21814_s * _21817_c) < 0LL) {
				_22017_cc=static_cast<jule::F64>(jule::div(_22717_z,_21917_ss));
			} else {
				_21917_ss=static_cast<jule::F64>(jule::div(_22717_z,_22017_cc));
			}
		}
		jule::F64 _23417_z = 0LL;
		if (_18211_x > 5188146770730811392LL) {
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _21917_ss,_1e151c271_sqrt(_18211_x)));
		} else {
			jule::F64 _23817_u = _1e1300582_pzero(_18211_x);
			jule::F64 _23917_v = _1e1300582_qzero(_18211_x);
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23817_u * _21917_ss) + (_23917_v * _22017_cc)),_1e151c271_sqrt(_18211_x)));
		}
		return _23417_z;
	}
	if (_18211_x <= 0.000000007450580596923828) {
		return static_cast<jule::F64>(-0.07380429510868723 + (0.6366197723675814 * _1e119b120_log(_18211_x)));
	}
	jule::F64 _2479_z = _18211_x * _18211_x;
	jule::F64 _2489_u = -0.07380429510868723 + (_2479_z * (0.17666645250918112 + (_2479_z * (-0.01381856719455969 + (_2479_z * (0.00034745343209368365 + (_2479_z * (-0.0000038140705372436416 + (_2479_z * (0.000000019559013703502292 + (_2479_z * -0.00000000003982051941321034)))))))))));
	jule::F64 _2499_v = 1LL + (_2479_z * (0.01273048348341237 + (_2479_z * (0.00007600686273503533 + (_2479_z * (0.0000002591508518404578 + (_2479_z * 0.00000000044111031133267547)))))));
	return static_cast<jule::F64>(jule::div(_2489_u,_2499_v) + ((0.6366197723675814 * _1e1300582_j0(_18211_x)) * _1e119b120_log(_18211_x)));
}



jule::F64 _1e1300582_pzero(jule::F64 _33010_x) {
	jule::Array<jule::F64,6>* _33113_p = nullptr;
	jule::Array<jule::F64,5>* _33213_q = nullptr;
	if (_33010_x >= 8LL) {
		_33113_p=(&(_1e1300582_P_0R8));
		_33213_q=(&(_1e1300582_P_0S8));
	} else if (_33010_x >= 4.5454) {
		_33113_p=(&(_1e1300582_P_0R5));
		_33213_q=(&(_1e1300582_P_0S5));
	} else if (_33010_x >= 2.8571) {
		_33113_p=(&(_1e1300582_P_0R3));
		_33213_q=(&(_1e1300582_P_0S3));
	} else if (_33010_x >= 2LL) {
		_33113_p=(&(_1e1300582_P_0R2));
		_33213_q=(&(_1e1300582_P_0S2));
	}
	{
		jule::F64 _34713_z = jule::div(1LL,_33010_x * _33010_x);
		jule::F64 _34813_r = (*(_33113_p))[0LL] + (_34713_z * ((*(_33113_p))[1LL] + (_34713_z * ((*(_33113_p))[2LL] + (_34713_z * ((*(_33113_p))[3LL] + (_34713_z * ((*(_33113_p))[4LL] + (_34713_z * (*(_33113_p))[5LL])))))))));
		jule::F64 _34913_s = 1LL + (_34713_z * ((*(_33213_q))[0LL] + (_34713_z * ((*(_33213_q))[1LL] + (_34713_z * ((*(_33213_q))[2LL] + (_34713_z * ((*(_33213_q))[3LL] + (_34713_z * (*(_33213_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34813_r,_34913_s));
	}
}



jule::F64 _1e1300582_qzero(jule::F64 _43510_x) {
	jule::Array<jule::F64,6>* _43613_p = nullptr;
	jule::Array<jule::F64,6>* _43713_q = nullptr;
	if (_43510_x >= 8LL) {
		_43613_p=(&(_1e1300582_Q_0R8));
		_43713_q=(&(_1e1300582_Q_0S8));
	} else if (_43510_x >= 4.5454) {
		_43613_p=(&(_1e1300582_Q_0R5));
		_43713_q=(&(_1e1300582_Q_0S5));
	} else if (_43510_x >= 2.8571) {
		_43613_p=(&(_1e1300582_Q_0R3));
		_43713_q=(&(_1e1300582_Q_0S3));
	} else if (_43510_x >= 2LL) {
		_43613_p=(&(_1e1300582_Q_0R2));
		_43713_q=(&(_1e1300582_Q_0S2));
	}
	{
		jule::F64 _45213_z = jule::div(1LL,_43510_x * _43510_x);
		jule::F64 _45313_r = (*(_43613_p))[0LL] + (_45213_z * ((*(_43613_p))[1LL] + (_45213_z * ((*(_43613_p))[2LL] + (_45213_z * ((*(_43613_p))[3LL] + (_45213_z * ((*(_43613_p))[4LL] + (_45213_z * (*(_43613_p))[5LL])))))))));
		jule::F64 _45413_s = 1LL + (_45213_z * ((*(_43713_q))[0LL] + (_45213_z * ((*(_43713_q))[1LL] + (_45213_z * ((*(_43713_q))[2LL] + (_45213_z * ((*(_43713_q))[3LL] + (_45213_z * ((*(_43713_q))[4LL] + (_45213_z * (*(_43713_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(-0.125 + jule::div(_45313_r,_45413_s),_43510_x));
	}
}



jule::F64 _1e135e745_ldexp(jule::F64 _4518_frac,jule::Int _4533_exp) {
	{
		if (!((_4518_frac == 0LL))) { goto _case_end_4325993488; }
		_case_begin_4325993488:;
		{
			return _4518_frac;
		}
		goto _match_end_4325979488;
		_case_end_4325993488:;
		if (!((_1e119a00e_is_inf(_4518_frac,0LL)) || (_1e119a00e_is_nan(_4518_frac)))) { goto _case_end_4325993584; }
		_case_begin_4325993584:;
		{
			return _4518_frac;
		}
		goto _match_end_4325979488;
		_case_end_4325993584:;
		_match_end_4325979488:;
	}
	jule::Int _5313_e = 0LL;
	std::tie(_4518_frac,_5313_e) = _1e119a00e_normalize(_4518_frac);
	_4533_exp+=_5313_e;
	jule::U64 _5613_x = _1e10c0d9c_f64_bits(_4518_frac);
	_4533_exp+=static_cast<jule::Int>((static_cast<jule::Int>(_5613_x >> 52LL) & 2047LL) - 1023LL);
	if (_4533_exp < -1075LL) {
		return static_cast<jule::F64>(_1e1135d02_copysign(0LL,_4518_frac));
	}
	if (_4533_exp > 1023LL) {
		if (_4518_frac < 0LL) {
			return static_cast<jule::F64>(_1e119a00e_inf(-1LL));
		}
		return static_cast<jule::F64>(_1e119a00e_inf(1LL));
	}
	jule::F64 _6713_m = 1LL;
	if (_4533_exp < -1022LL) {
		_4533_exp+=53LL;
		_6713_m=0.00000000000000011102230246251565;
	}
	_5613_x=static_cast<jule::U64>(_5613_x & 9227875636482146303LLU);
	_5613_x|=static_cast<jule::U64>(static_cast<jule::U64>(_4533_exp + 1023LL) << 52LL);
	return static_cast<jule::F64>(_6713_m * _1e10c0d9c_f64_from_bits(_5613_x));
}



jule::Bool _1e137aec0_signbit(jule::F64 _3916_x) {
	return (_1e10c0d9c_f64_bits(_3916_x) & 9223372036854775808LLU) != 0LL;
}



jule::F64 _1e1368b39_sinh(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	jule::Bool _6613_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_6613_sign=true;
	}
	jule::F64 _7213_temp = 0LL;
	{
		if (!((_5617_x > 21LL))) { goto _case_end_4326017488; }
		_case_begin_4326017488:;
		{
			_7213_temp=static_cast<jule::F64>(_1e142d4e5_exp(_5617_x) * 0.5);
		}
		goto _match_end_4326016192;
		_case_end_4326017488:;
		if (!((_5617_x > 0.5))) { goto _case_end_4326018336; }
		_case_begin_4326018336:;
		{
			jule::F64 _7713_ex = _1e142d4e5_exp(_5617_x);
			_7213_temp=static_cast<jule::F64>((_7713_ex - jule::div(1LL,_7713_ex)) * 0.5);
		}
		goto _match_end_4326016192;
		_case_end_4326018336:;
		_case_begin_4326016272:;
		{
			jule::F64 _8013_sq = _5617_x * _5617_x;
			_7213_temp=static_cast<jule::F64>(((((((-26.30563213397497 * _8013_sq) + -2894.211355989564) * _8013_sq) + -89912.72022039509) * _8013_sq) + -630767.3640497717) * _5617_x);
			_7213_temp=static_cast<jule::F64>(jule::div(_7213_temp,((((_8013_sq + -173.6789535582337) * _8013_sq) + 15215.17378790019) * _8013_sq) + -630767.3640497717));
		}
		goto _match_end_4326016192;
		_case_end_4326016272:;
		_match_end_4326016192:;
	}
	if (_6613_sign) {
		_7213_temp=static_cast<jule::F64>((-(_7213_temp)));
	}
	return _7213_temp;
}



jule::F64 _1e1368b39_cosh(jule::F64 _9717_x) {
	_9717_x=static_cast<jule::F64>(_1e11e5279_abs(_9717_x));
	if (_9717_x > 21LL) {
		return static_cast<jule::F64>(_1e142d4e5_exp(_9717_x) * 0.5);
	}
	jule::F64 _1029_ex = _1e142d4e5_exp(_9717_x);
	return static_cast<jule::F64>((_1029_ex + jule::div(1LL,_1029_ex)) * 0.5);
}



std::tuple<jule::F64,jule::Int> _1e1395968_lgamma(jule::F64 _20519_x) {
	jule::F64 _20529_lgamma = jule::F64();
	jule::Int _20542_sign = jule::Int();
	
	
	
	
	
	
	
	_20542_sign=1LL;
	{
		if (!((_1e119a00e_is_nan(_20519_x)))) { goto _case_end_4326036400; }
		_case_begin_4326036400:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4326032704;
		_case_end_4326036400:;
		if (!((_1e119a00e_is_inf(_20519_x,0LL)))) { goto _case_end_4326036688; }
		_case_begin_4326036688:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4326032704;
		_case_end_4326036688:;
		if (!((_20519_x == 0LL))) { goto _case_end_4326036784; }
		_case_begin_4326036784:;
		{
			_20529_lgamma=static_cast<jule::F64>(_1e119a00e_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4326032704;
		_case_end_4326036784:;
		_match_end_4326032704:;
	}
	jule::Bool _22813_neg = false;
	if (_20519_x < 0LL) {
		_20519_x=static_cast<jule::F64>((-(_20519_x)));
		_22813_neg=true;
	}
	if (_20519_x < 0.000000000000000000000847033) {
		if (_22813_neg) {
			_20542_sign=-1LL;
		}
		_20529_lgamma=static_cast<jule::F64>((-(_1e119b120_log(_20519_x))));
		return std::make_tuple(_20529_lgamma,_20542_sign);
	}
	jule::F64 _24113_nadj = 0LL;
	if (_22813_neg) {
		if (_20519_x >= 4503599627370496LLU) {
			_20529_lgamma=static_cast<jule::F64>(_1e119a00e_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		jule::F64 _24713_t = _1e1395968_sin_pi(_20519_x);
		if (_24713_t == 0LL) {
			_20529_lgamma=static_cast<jule::F64>(_1e119a00e_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		_24113_nadj=static_cast<jule::F64>(_1e119b120_log(static_cast<jule::F64>(jule::div(3.141592653589793,_1e11e5279_abs(static_cast<jule::F64>(_24713_t * _20519_x))))));
		if (_24713_t < 0LL) {
			_20542_sign=-1LL;
		}
	}
	{
		if (!((_20519_x == 1LL) || (_20519_x == 2LL))) { goto _case_end_4326052688; }
		_case_begin_4326052688:;
		{
			_20529_lgamma=0LL;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4326047216;
		_case_end_4326052688:;
		if (!((_20519_x < 2LL))) { goto _case_end_4326051536; }
		_case_begin_4326051536:;
		{
			jule::F64 _26317_y = 0LL;
			jule::Int _26417_i = 0LL;
			if (_20519_x <= 0.9) {
				_20529_lgamma=static_cast<jule::F64>((-(_1e119b120_log(_20519_x))));
				{
					if (!((_20519_x >= 0.7316321449683623))) { goto _case_end_4326058672; }
					_case_begin_4326058672:;
					{
						_26317_y=static_cast<jule::F64>(1LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4326056912;
					_case_end_4326058672:;
					if (!((_20519_x >= 0.19163214496836223))) { goto _case_end_4326058768; }
					_case_begin_4326058768:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 0.46163214496836225);
						_26417_i=1LL;
					}
					goto _match_end_4326056912;
					_case_end_4326058768:;
					_case_begin_4326057776:;
					{
						_26317_y=_20519_x;
						_26417_i=2LL;
					}
					goto _match_end_4326056912;
					_case_end_4326057776:;
					_match_end_4326056912:;
				}
			} else {
				_20529_lgamma=0LL;
				{
					if (!((_20519_x >= 1.7316321449683623))) { goto _case_end_4326063216; }
					_case_begin_4326063216:;
					{
						_26317_y=static_cast<jule::F64>(2LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4326056560;
					_case_end_4326063216:;
					if (!((_20519_x >= 1.1916321449683622))) { goto _case_end_4326063680; }
					_case_begin_4326063680:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1.4616321449683622);
						_26417_i=1LL;
					}
					goto _match_end_4326056560;
					_case_end_4326063680:;
					_case_begin_4326061824:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1LL);
						_26417_i=2LL;
					}
					goto _match_end_4326056560;
					_case_end_4326061824:;
					_match_end_4326056560:;
				}
			}
			{
				auto _match_expr{ _26417_i };
				if (!((0LL) == _match_expr)) { goto _case_end_4326066016; }
				_case_begin_4326066016:;
				{
					jule::F64 _29417_z = _26317_y * _26317_y;
					jule::F64 _29517_p1 = _1e1395968__LGAM_A[0LL] + (_29417_z * (_1e1395968__LGAM_A[2LL] + (_29417_z * (_1e1395968__LGAM_A[4LL] + (_29417_z * (_1e1395968__LGAM_A[6LL] + (_29417_z * (_1e1395968__LGAM_A[8LL] + (_29417_z * _1e1395968__LGAM_A[10LL])))))))));
					jule::F64 _29617_p2 = _29417_z * (_1e1395968__LGAM_A[1LL] + (_29417_z * ((+(_1e1395968__LGAM_A[3LL])) + (_29417_z * (_1e1395968__LGAM_A[5LL] + (_29417_z * (_1e1395968__LGAM_A[7LL] + (_29417_z * (_1e1395968__LGAM_A[9LL] + (_29417_z * _1e1395968__LGAM_A[11LL]))))))))));
					jule::F64 _29717_p = (_26317_y * _29517_p1) + _29617_p2;
					_20529_lgamma+=static_cast<jule::F64>(_29717_p - (0.5 * _26317_y));
				}
				goto _match_end_4326064160;
				_case_end_4326066016:;
				if (!((1LL) == _match_expr)) { goto _case_end_4326057936; }
				_case_begin_4326057936:;
				{
					jule::F64 _30017_z = _26317_y * _26317_y;
					jule::F64 _30117_w = _30017_z * _26317_y;
					jule::F64 _30217_p1 = _1e1395968__LGAM_T[0LL] + (_30117_w * (_1e1395968__LGAM_T[3LL] + (_30117_w * (_1e1395968__LGAM_T[6LL] + (_30117_w * (_1e1395968__LGAM_T[9LL] + (_30117_w * _1e1395968__LGAM_T[12LL])))))));
					jule::F64 _30317_p2 = _1e1395968__LGAM_T[1LL] + (_30117_w * (_1e1395968__LGAM_T[4LL] + (_30117_w * (_1e1395968__LGAM_T[7LL] + (_30117_w * (_1e1395968__LGAM_T[10LL] + (_30117_w * _1e1395968__LGAM_T[13LL])))))));
					jule::F64 _30417_p3 = _1e1395968__LGAM_T[2LL] + (_30117_w * (_1e1395968__LGAM_T[5LL] + (_30117_w * (_1e1395968__LGAM_T[8LL] + (_30117_w * (_1e1395968__LGAM_T[11LL] + (_30117_w * _1e1395968__LGAM_T[14LL])))))));
					jule::F64 _30517_p = (_30017_z * _30217_p1) - (-0.000000000000000003638676997039505 - (_30117_w * (_30317_p2 + (_26317_y * _30417_p3))));
					_20529_lgamma+=static_cast<jule::F64>(-0.12148629053584961 + _30517_p);
				}
				goto _match_end_4326064160;
				_case_end_4326057936:;
				if (!((2LL) == _match_expr)) { goto _case_end_4326058032; }
				_case_begin_4326058032:;
				{
					jule::F64 _30817_p1 = _26317_y * (_1e1395968__LGAM_U[0LL] + (_26317_y * (_1e1395968__LGAM_U[1LL] + (_26317_y * (_1e1395968__LGAM_U[2LL] + (_26317_y * (_1e1395968__LGAM_U[3LL] + (_26317_y * (_1e1395968__LGAM_U[4LL] + (_26317_y * _1e1395968__LGAM_U[5LL]))))))))));
					jule::F64 _30917_p2 = 1LL + (_26317_y * (_1e1395968__LGAM_V[1LL] + (_26317_y * (_1e1395968__LGAM_V[2LL] + (_26317_y * (_1e1395968__LGAM_V[3LL] + (_26317_y * (_1e1395968__LGAM_V[4LL] + (_26317_y * _1e1395968__LGAM_V[5LL])))))))));
					_20529_lgamma+=static_cast<jule::F64>((-0.5 * _26317_y) + jule::div(_30817_p1,_30917_p2));
				}
				goto _match_end_4326064160;
				_case_end_4326058032:;
				_match_end_4326064160:;
			}
		}
		goto _match_end_4326047216;
		_case_end_4326051536:;
		if (!((_20519_x < 8LL))) { goto _case_end_4326051632; }
		_case_begin_4326051632:;
		{
			jule::Int _31313_i = static_cast<jule::Int>(_20519_x);
			jule::F64 _31413_y = _20519_x - static_cast<jule::F64>(_31313_i);
			jule::F64 _31513_p = _31413_y * (_1e1395968__LGAM_S[0LL] + (_31413_y * (_1e1395968__LGAM_S[1LL] + (_31413_y * (_1e1395968__LGAM_S[2LL] + (_31413_y * (_1e1395968__LGAM_S[3LL] + (_31413_y * (_1e1395968__LGAM_S[4LL] + (_31413_y * (_1e1395968__LGAM_S[5LL] + (_31413_y * _1e1395968__LGAM_S[6LL]))))))))))));
			jule::F64 _31613_q = 1LL + (_31413_y * (_1e1395968__LGAM_R[1LL] + (_31413_y * (_1e1395968__LGAM_R[2LL] + (_31413_y * (_1e1395968__LGAM_R[3LL] + (_31413_y * (_1e1395968__LGAM_R[4LL] + (_31413_y * (_1e1395968__LGAM_R[5LL] + (_31413_y * _1e1395968__LGAM_R[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>((0.5 * _31413_y) + jule::div(_31513_p,_31613_q));
			jule::F64 _31817_z = 1LL;
			{
				auto _match_expr{ _31313_i };
				if (!((7LL) == _match_expr)) { goto _case_end_4326124096; }
				_case_begin_4326124096:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 6LL);
					goto _case_begin_4326113280;
				}
				goto _match_end_4326123968;
				_case_end_4326124096:;
				if (!((6LL) == _match_expr)) { goto _case_end_4326113280; }
				_case_begin_4326113280:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 5LL);
					goto _case_begin_4326124528;
				}
				goto _match_end_4326123968;
				_case_end_4326113280:;
				if (!((5LL) == _match_expr)) { goto _case_end_4326124528; }
				_case_begin_4326124528:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 4LL);
					goto _case_begin_4326124624;
				}
				goto _match_end_4326123968;
				_case_end_4326124528:;
				if (!((4LL) == _match_expr)) { goto _case_end_4326124624; }
				_case_begin_4326124624:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 3LL);
					goto _case_begin_4326124720;
				}
				goto _match_end_4326123968;
				_case_end_4326124624:;
				if (!((3LL) == _match_expr)) { goto _case_end_4326124720; }
				_case_begin_4326124720:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 2LL);
					_20529_lgamma+=static_cast<jule::F64>(_1e119b120_log(_31817_z));
				}
				goto _match_end_4326123968;
				_case_end_4326124720:;
				_match_end_4326123968:;
			}
		}
		goto _match_end_4326047216;
		_case_end_4326051632:;
		if (!((_20519_x < 288230376151711744LLU))) { goto _case_end_4326051728; }
		_case_begin_4326051728:;
		{
			jule::F64 _33713_t = _1e119b120_log(_20519_x);
			jule::F64 _33813_z = jule::div(1LL,_20519_x);
			jule::F64 _33913_y = _33813_z * _33813_z;
			jule::F64 _34013_w = _1e1395968__LGAM_W[0LL] + (_33813_z * (_1e1395968__LGAM_W[1LL] + (_33913_y * (_1e1395968__LGAM_W[2LL] + (_33913_y * (_1e1395968__LGAM_W[3LL] + (_33913_y * (_1e1395968__LGAM_W[4LL] + (_33913_y * (_1e1395968__LGAM_W[5LL] + (_33913_y * _1e1395968__LGAM_W[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>(((_20519_x - 0.5) * (_33713_t - 1LL)) + _34013_w);
		}
		goto _match_end_4326047216;
		_case_end_4326051728:;
		_case_begin_4326050992:;
		{
			_20529_lgamma=static_cast<jule::F64>(_20519_x * (_1e119b120_log(_20519_x) - 1LL));
		}
		goto _match_end_4326047216;
		_case_end_4326050992:;
		_match_end_4326047216:;
	}
	if (_22813_neg) {
		_20529_lgamma=static_cast<jule::F64>(_24113_nadj - _20529_lgamma);
	}
	return std::make_tuple(_20529_lgamma,_20542_sign);
}



jule::F64 _1e1395968_sin_pi(jule::F64 _35215_x) {
	
	
	if (_35215_x < 0.25) {
		return static_cast<jule::F64>((-(_1e10c8a64_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)))));
	}
	jule::F64 _36013_z = _1e1154ae0_floor(_35215_x);
	jule::Int _36113_n = 0LL;
	if (_36013_z != _35215_x) {
		_35215_x=static_cast<jule::F64>(_1e1119cc5_mod(_35215_x,2LL));
		_36113_n=static_cast<jule::Int>(_35215_x * 4LL);
	} else {
		if (_35215_x >= 9007199254740992LLU) {
			_35215_x=0LL;
			_36113_n=0LL;
		} else {
			if (_35215_x < 4503599627370496LLU) {
				_36013_z=static_cast<jule::F64>(_35215_x + 4503599627370496LLU);
			}
			_36113_n=static_cast<jule::Int>(1LL & _1e10c0d9c_f64_bits(_36013_z));
			_35215_x=static_cast<jule::F64>(_36113_n);
			_36113_n<<=2LL;
		}
	}
	{
		auto _match_expr{ _36113_n };
		if (!((0LL) == _match_expr)) { goto _case_end_4326147520; }
		_case_begin_4326147520:;
		{
			_35215_x=static_cast<jule::F64>(_1e10c8a64_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)));
		}
		goto _match_end_4326151504;
		_case_end_4326147520:;
		if (!((1LL) == _match_expr || (2LL) == _match_expr)) { goto _case_end_4326152656; }
		_case_begin_4326152656:;
		{
			_35215_x=static_cast<jule::F64>(_1e10c8a64_cos(static_cast<jule::F64>(3.141592653589793 * (0.5 - _35215_x))));
		}
		goto _match_end_4326151504;
		_case_end_4326152656:;
		if (!((3LL) == _match_expr || (4LL) == _match_expr)) { goto _case_end_4326152752; }
		_case_begin_4326152752:;
		{
			_35215_x=static_cast<jule::F64>(_1e10c8a64_sin(static_cast<jule::F64>(3.141592653589793 * (1LL - _35215_x))));
		}
		goto _match_end_4326151504;
		_case_end_4326152752:;
		if (!((5LL) == _match_expr || (6LL) == _match_expr)) { goto _case_end_4326148848; }
		_case_begin_4326148848:;
		{
			_35215_x=static_cast<jule::F64>((-(_1e10c8a64_cos(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 1.5))))));
		}
		goto _match_end_4326151504;
		_case_end_4326148848:;
		_case_begin_4326145392:;
		{
			_35215_x=static_cast<jule::F64>(_1e10c8a64_sin(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 2LL))));
		}
		goto _match_end_4326151504;
		_case_end_4326145392:;
		_match_end_4326151504:;
	}
	return static_cast<jule::F64>((-(_35215_x)));
}



jule::F64 _1e13e51e3_acosh(jule::F64 _7314_x) {
	
	{
		if (!((_7314_x < 1LL) || (_1e119a00e_is_nan(_7314_x)))) { goto _case_end_4326159168; }
		_case_begin_4326159168:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4326159008;
		_case_end_4326159168:;
		if (!((_7314_x == 1LL))) { goto _case_end_4326159264; }
		_case_begin_4326159264:;
		{
			return 0LL;
		}
		goto _match_end_4326159008;
		_case_end_4326159264:;
		if (!((_7314_x >= 268435456LLU))) { goto _case_end_4326159360; }
		_case_begin_4326159360:;
		{
			return static_cast<jule::F64>(_1e119b120_log(_7314_x) + 0.6931471805599453);
		}
		goto _match_end_4326159008;
		_case_end_4326159360:;
		if (!((_7314_x > 2LL))) { goto _case_end_4326159472; }
		_case_begin_4326159472:;
		{
			return static_cast<jule::F64>(_1e119b120_log(static_cast<jule::F64>((2LL * _7314_x) - jule::div(1LL,_7314_x + _1e151c271_sqrt(static_cast<jule::F64>((_7314_x * _7314_x) - 1LL))))));
		}
		goto _match_end_4326159008;
		_case_end_4326159472:;
		_match_end_4326159008:;
	}
	jule::F64 _869_t = _7314_x - 1LL;
	return static_cast<jule::F64>(_1e148444c_log1p(static_cast<jule::F64>(_869_t + _1e151c271_sqrt(static_cast<jule::F64>((2LL * _869_t) + (_869_t * _869_t))))));
}



jule::F64 _1e1402497_tanh(jule::F64 _10613_x) {
	
	jule::F64 _10813_z = _1e11e5279_abs(_10613_x);
	{
		if (!((_10813_z > 44.014845965556525))) { goto _case_end_4326171440; }
		_case_begin_4326171440:;
		{
			if (_10613_x < 0LL) {
				return -1LL;
			}
			return 1LL;
		}
		goto _match_end_4326169120;
		_case_end_4326171440:;
		if (!((_10813_z >= 0.625))) { goto _case_end_4326177904; }
		_case_begin_4326177904:;
		{
			jule::F64 _11613_s = _1e142d4e5_exp(static_cast<jule::F64>(2LL * _10813_z));
			_10813_z=static_cast<jule::F64>(1LL - jule::div(2LL,_11613_s + 1LL));
			if (_10613_x < 0LL) {
				_10813_z=static_cast<jule::F64>((-(_10813_z)));
			}
		}
		goto _match_end_4326169120;
		_case_end_4326177904:;
		_case_begin_4326169360:;
		{
			if (_10613_x == 0LL) {
				return _10613_x;
			}
			jule::F64 _12513_s = _10613_x * _10613_x;
			_10813_z=static_cast<jule::F64>(_10613_x + jule::div((_10613_x * _12513_s) * ((((_1e1402497_TANH_P[0LL] * _12513_s) + _1e1402497_TANH_P[1LL]) * _12513_s) + _1e1402497_TANH_P[2LL]),((((_12513_s + _1e1402497_TANH_Q[0LL]) * _12513_s) + _1e1402497_TANH_Q[1LL]) * _12513_s) + _1e1402497_TANH_Q[2LL]));
		}
		goto _match_end_4326169120;
		_case_end_4326169360:;
		_match_end_4326169120:;
	}
	return _10813_z;
}



jule::F64 _1e140e790_cbrt(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	
	if (((_5617_x == 0LL) || _1e119a00e_is_nan(_5617_x)) || _1e119a00e_is_inf(_5617_x,0LL)) {
		return _5617_x;
	}
	jule::Bool _7113_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_7113_sign=true;
	}
	jule::F64 _7813_t = _1e10c0d9c_f64_from_bits(static_cast<jule::U64>(jule::div(_1e10c0d9c_f64_bits(_5617_x),3LL) + 3071306043645493248LLU));
	if (_5617_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_7813_t=static_cast<jule::F64>(18014398509481984LL);
		_7813_t*=_5617_x;
		_7813_t=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>(jule::div(_1e10c0d9c_f64_bits(_7813_t),3LL) + 2990241250352824320LLU)));
	}
	jule::F64 _8713_r = jule::div(_7813_t * _7813_t,_5617_x);
	jule::F64 _8813_s = 0.5428571428571428 + (_8713_r * _7813_t);
	_7813_t*=static_cast<jule::F64>(0.35714285714285715 + jule::div(1.6071428571428572,(_8813_s + 1.4142857142857144) + jule::div(-0.7053061224489796,_8813_s)));
	_7813_t=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>((_1e10c0d9c_f64_bits(_7813_t) & 18446744072635809792LLU) + 1073741824LLU)));
	_8813_s=static_cast<jule::F64>(_7813_t * _7813_t);
	_8713_r=static_cast<jule::F64>(jule::div(_5617_x,_8813_s));
	jule::F64 _979_w = _7813_t + _7813_t;
	_8713_r=static_cast<jule::F64>(jule::div(_8713_r - _7813_t,_979_w + _8713_r));
	_7813_t=static_cast<jule::F64>(_7813_t + (_7813_t * _8713_r));
	if (_7113_sign) {
		_7813_t=static_cast<jule::F64>((-(_7813_t)));
	}
	return _7813_t;
}



jule::F64 _1e1412287_pow(jule::F64 _6412_x,jule::F64 _6420_y) {
	{
		if (!((_6420_y == 0LL) || (_6412_x == 1LL))) { goto _case_end_4326206144; }
		_case_begin_4326206144:;
		{
			return 1LL;
		}
		goto _match_end_4326205840;
		_case_end_4326206144:;
		if (!((_6420_y == 1LL))) { goto _case_end_4326206256; }
		_case_begin_4326206256:;
		{
			return _6412_x;
		}
		goto _match_end_4326205840;
		_case_end_4326206256:;
		if (!((_1e119a00e_is_nan(_6412_x)) || (_1e119a00e_is_nan(_6420_y)))) { goto _case_end_4326206368; }
		_case_begin_4326206368:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4326205840;
		_case_end_4326206368:;
		if (!((_6412_x == 0LL))) { goto _case_end_4326206480; }
		_case_begin_4326206480:;
		{
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4326209312; }
				_case_begin_4326209312:;
				{
					if (_1e1412287_is_odd_int(_6420_y)) {
						return static_cast<jule::F64>(_1e1135d02_copysign(static_cast<jule::F64>(_1e119a00e_inf(1LL)),_6412_x));
					}
					return static_cast<jule::F64>(_1e119a00e_inf(1LL));
				}
				goto _match_end_4326209904;
				_case_end_4326209312:;
				if (!((_6420_y > 0LL))) { goto _case_end_4326209408; }
				_case_begin_4326209408:;
				{
					if (_1e1412287_is_odd_int(_6420_y)) {
						return _6412_x;
					}
					return 0LL;
				}
				goto _match_end_4326209904;
				_case_end_4326209408:;
				_match_end_4326209904:;
			}
		}
		goto _match_end_4326205840;
		_case_end_4326206480:;
		if (!((_1e119a00e_is_inf(_6420_y,0LL)))) { goto _case_end_4326206592; }
		_case_begin_4326206592:;
		{
			{
				if (!((_6412_x == -1LL))) { goto _case_end_4326217344; }
				_case_begin_4326217344:;
				{
					return 1LL;
				}
				goto _match_end_4326215232;
				_case_end_4326217344:;
				if (!(((_1e11e5279_abs(_6412_x) < 1LL) == _1e119a00e_is_inf(_6420_y,1LL)))) { goto _case_end_4326216544; }
				_case_begin_4326216544:;
				{
					return 0LL;
				}
				goto _match_end_4326215232;
				_case_end_4326216544:;
				_case_begin_4326212016:;
				{
					return static_cast<jule::F64>(_1e119a00e_inf(1LL));
				}
				goto _match_end_4326215232;
				_case_end_4326212016:;
				_match_end_4326215232:;
			}
		}
		goto _match_end_4326205840;
		_case_end_4326206592:;
		if (!((_1e119a00e_is_inf(_6412_x,0LL)))) { goto _case_end_4326206704; }
		_case_begin_4326206704:;
		{
			if (_1e119a00e_is_inf(_6412_x,-1LL)) {
				return static_cast<jule::F64>(_1e1412287_pow(static_cast<jule::F64>(jule::div(1LL,_6412_x)),static_cast<jule::F64>((-(_6420_y)))));
			}
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4326221184; }
				_case_begin_4326221184:;
				{
					return 0LL;
				}
				goto _match_end_4326221040;
				_case_end_4326221184:;
				if (!((_6420_y > 0LL))) { goto _case_end_4326219280; }
				_case_begin_4326219280:;
				{
					return static_cast<jule::F64>(_1e119a00e_inf(1LL));
				}
				goto _match_end_4326221040;
				_case_end_4326219280:;
				_match_end_4326221040:;
			}
		}
		goto _match_end_4326205840;
		_case_end_4326206704:;
		if (!((_6420_y == 0.5))) { goto _case_end_4326206816; }
		_case_begin_4326206816:;
		{
			return static_cast<jule::F64>(_1e151c271_sqrt(_6412_x));
		}
		goto _match_end_4326205840;
		_case_end_4326206816:;
		if (!((_6420_y == -0.5))) { goto _case_end_4326206928; }
		_case_begin_4326206928:;
		{
			return static_cast<jule::F64>(jule::div(1LL,_1e151c271_sqrt(_6412_x)));
		}
		goto _match_end_4326205840;
		_case_end_4326206928:;
		_match_end_4326205840:;
	}
	jule::F64 _10814_yi;
	jule::F64 _10822_yf;
	std::tie(_10814_yi,_10822_yf) = _1e125431b_modf(static_cast<jule::F64>(_1e11e5279_abs(_6420_y)));
	if ((_10822_yf != 0LL) && (_6412_x < 0LL)) {
		return static_cast<jule::F64>(_1e119a00e_nan());
	}
	if (_10814_yi >= 9223372036854775808LLU) {
		{
			if (!((_6412_x == -1LL))) { goto _case_end_4326229600; }
			_case_begin_4326229600:;
			{
				return 1LL;
			}
			goto _match_end_4326225648;
			_case_end_4326229600:;
			if (!(((_1e11e5279_abs(_6412_x) < 1LL) == (_6420_y > 0LL)))) { goto _case_end_4326228800; }
			_case_begin_4326228800:;
			{
				return 0LL;
			}
			goto _match_end_4326225648;
			_case_end_4326228800:;
			_case_begin_4326227488:;
			{
				return static_cast<jule::F64>(_1e119a00e_inf(1LL));
			}
			goto _match_end_4326225648;
			_case_end_4326227488:;
			_match_end_4326225648:;
		}
	}
	jule::F64 _12613_a1 = 1LL;
	jule::Int _12713_ae = 0LL;
	if (_10822_yf != 0LL) {
		if (_10822_yf > 0.5) {
			(_10822_yf)--;
			(_10814_yi)++;
		}
		_12613_a1=static_cast<jule::F64>(_1e142d4e5_exp(static_cast<jule::F64>(_10822_yf * _1e119b120_log(_6412_x))));
	}
	jule::F64 _14214_x1;
	jule::Int _14222_xe;
	std::tie(_14214_x1,_14222_xe) = _1e111d614_frexp(_6412_x);
	jule::I64 _14313_i = static_cast<jule::I64>(_10814_yi);
	for (; _14313_i != 0LL; _14313_i>>=1LL) {
		{
			if ((_14222_xe < -4096LL) || (4096LLU < _14222_xe)) {
				_12713_ae+=_14222_xe;
				goto _iter_end_4326235792;
			}
			if ((_14313_i & 1LL) == 1LL) {
				_12613_a1*=_14214_x1;
				_12713_ae+=_14222_xe;
			}
			_14214_x1*=_14214_x1;
			_14222_xe<<=1LL;
			if (_14214_x1 < 0.5) {
				_14214_x1+=_14214_x1;
				(_14222_xe)--;
			}
		}
	_iter_next_4326235792:;
	}
	_iter_end_4326235792:;
	if (_6420_y < 0LL) {
		_12613_a1=static_cast<jule::F64>(jule::div(1LL,_12613_a1));
		_12713_ae=static_cast<jule::Int>((-(_12713_ae)));
	}
	return static_cast<jule::F64>(_1e135e745_ldexp(_12613_a1,_12713_ae));
}



jule::Bool _1e1412287_is_odd_int(jule::F64 _17615_x) {
	jule::F64 _17710_xi;
	jule::F64 _17714_xf;
	std::tie(_17710_xi,_17714_xf) = _1e125431b_modf(_17615_x);
	return (_17714_xf == 0LL) && ((static_cast<jule::I64>(_17710_xi) & 1LL) == 1LL);
}



jule::F64 _1e142d4e5_exp(jule::F64 _12212_x) {
	
	
	
	
	
	
	{
		if (!((_1e119a00e_is_nan(_12212_x)) || (_1e119a00e_is_inf(_12212_x,1LL)))) { goto _case_end_4326251104; }
		_case_begin_4326251104:;
		{
			return _12212_x;
		}
		goto _match_end_4326250672;
		_case_end_4326251104:;
		if (!((_1e119a00e_is_inf(_12212_x,-1LL)))) { goto _case_end_4326251200; }
		_case_begin_4326251200:;
		{
			return 0LL;
		}
		goto _match_end_4326250672;
		_case_end_4326251200:;
		if (!((_12212_x > 709.782712893384))) { goto _case_end_4326251296; }
		_case_begin_4326251296:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(1LL));
		}
		goto _match_end_4326250672;
		_case_end_4326251296:;
		if (!((_12212_x < -745.1332191019411))) { goto _case_end_4326251392; }
		_case_begin_4326251392:;
		{
			return 0LL;
		}
		goto _match_end_4326250672;
		_case_end_4326251392:;
		if (!(((-0.000000003725290298461914 < _12212_x) && (_12212_x < 0.000000003725290298461914)))) { goto _case_end_4326251488; }
		_case_begin_4326251488:;
		{
			return static_cast<jule::F64>(1LL + _12212_x);
		}
		goto _match_end_4326250672;
		_case_end_4326251488:;
		_match_end_4326250672:;
	}
	jule::Int _14613_k = 0LL;
	{
		if (!((_12212_x < 0LL))) { goto _case_end_4326256496; }
		_case_begin_4326256496:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) - 0.5);
		}
		goto _match_end_4326256336;
		_case_end_4326256496:;
		if (!((_12212_x > 0LL))) { goto _case_end_4326256608; }
		_case_begin_4326256608:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) + 0.5);
		}
		goto _match_end_4326256336;
		_case_end_4326256608:;
		_match_end_4326256336:;
	}
	jule::F64 _1519_hi = _12212_x - (static_cast<jule::F64>(_14613_k) * 0.6931471803691238);
	jule::F64 _1529_lo = static_cast<jule::F64>(_14613_k) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_1e142d4e5_expmulti(_1519_hi,_1529_lo,_14613_k));
}



jule::F64 _1e142d4e5_exp2(jule::F64 _16013_x) {
	
	
	
	
	{
		if (!((_1e119a00e_is_nan(_16013_x)) || (_1e119a00e_is_inf(_16013_x,1LL)))) { goto _case_end_4326267168; }
		_case_begin_4326267168:;
		{
			return _16013_x;
		}
		goto _match_end_4326266976;
		_case_end_4326267168:;
		if (!((_1e119a00e_is_inf(_16013_x,-1LL)))) { goto _case_end_4326267280; }
		_case_begin_4326267280:;
		{
			return 0LL;
		}
		goto _match_end_4326266976;
		_case_end_4326267280:;
		if (!((_16013_x > 1023.9999999999999))) { goto _case_end_4326267392; }
		_case_begin_4326267392:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(1LL));
		}
		goto _match_end_4326266976;
		_case_end_4326267392:;
		if (!((_16013_x < -1074LL))) { goto _case_end_4326267504; }
		_case_begin_4326267504:;
		{
			return 0LL;
		}
		goto _match_end_4326266976;
		_case_end_4326267504:;
		_match_end_4326266976:;
	}
	jule::Int _18113_k = 0LL;
	{
		if (!((_16013_x > 0LL))) { goto _case_end_4326272288; }
		_case_begin_4326272288:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x + 0.5);
		}
		goto _match_end_4326271824;
		_case_end_4326272288:;
		if (!((_16013_x < 0LL))) { goto _case_end_4326272384; }
		_case_begin_4326272384:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x - 0.5);
		}
		goto _match_end_4326271824;
		_case_end_4326272384:;
		_match_end_4326271824:;
	}
	jule::F64 _1869_t = _16013_x - static_cast<jule::F64>(_18113_k);
	jule::F64 _1879_hi = _1869_t * 0.6931471803691238;
	jule::F64 _1889_lo = (-(_1869_t)) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_1e142d4e5_expmulti(_1879_hi,_1889_lo,_18113_k));
}



jule::F64 _1e142d4e5_expmulti(jule::F64 _19513_hi,jule::F64 _19522_lo,jule::Int _19531_k) {
	
	
	
	
	
	jule::F64 _2029_r = _19513_hi - _19522_lo;
	jule::F64 _2039_t = _2029_r * _2029_r;
	jule::F64 _2049_c = _2029_r - (_2039_t * (0.16666666666666666 + (_2039_t * (-0.0027777777777015593 + (_2039_t * (0.00006613756321437934 + (_2039_t * (-0.0000016533902205465252 + (_2039_t * 0.000000041381367970572385)))))))));
	jule::F64 _2059_y = 1LL - ((_19522_lo - jule::div(_2029_r * _2049_c,2LL - _2049_c)) - _19513_hi);
	return static_cast<jule::F64>(_1e135e745_ldexp(_2059_y,_19531_k));
}



jule::F64 _1e148444c_log1p(jule::F64 _12614_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_12614_x < -1LL) || (_1e119a00e_is_nan(_12614_x)))) { goto _case_end_4326296992; }
		_case_begin_4326296992:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4326296064;
		_case_end_4326296992:;
		if (!((_12614_x == -1LL))) { goto _case_end_4326297088; }
		_case_begin_4326297088:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(-1LL));
		}
		goto _match_end_4326296064;
		_case_end_4326297088:;
		if (!((_1e119a00e_is_inf(_12614_x,1LL)))) { goto _case_end_4326303664; }
		_case_begin_4326303664:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(1LL));
		}
		goto _match_end_4326296064;
		_case_end_4326303664:;
		_match_end_4326296064:;
	}
	jule::F64 _1529_absx = _1e11e5279_abs(_12614_x);
	jule::F64 _15413_f = 0LL;
	jule::U64 _15513_iu = 0LLU;
	jule::Int _15613_k = 1LL;
	if (_1529_absx < 0.41421356237309503) {
		if (_1529_absx < 0.000000001862645149230957) {
			if (_1529_absx < 0.00000000000000005551115123125783) {
				return _12614_x;
			}
			return static_cast<jule::F64>(_12614_x - ((_12614_x * _12614_x) * 0.5));
		}
		if (_12614_x > -0.2928932188134525) {
			_15613_k=0LL;
			_15413_f=_12614_x;
			_15513_iu=1LL;
		}
	}
	jule::F64 _17113_c = 0LL;
	if (_15613_k != 0LL) {
		jule::F64 _17317_u = 0LL;
		if (_1529_absx < 9007199254740992LLU) {
			_17317_u=static_cast<jule::F64>(1LL + _12614_x);
			_15513_iu=static_cast<jule::U64>(_1e10c0d9c_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			if (_15613_k > 0LL) {
				_17113_c=static_cast<jule::F64>(1LL - (_17317_u - _12614_x));
			} else {
				_17113_c=static_cast<jule::F64>(_12614_x - (_17317_u - 1LL));
			}
			_17113_c = jule::div(_17113_c,_17317_u);
		} else {
			_17317_u=_12614_x;
			_15513_iu=static_cast<jule::U64>(_1e10c0d9c_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			_17113_c=0LL;
		}
		_15513_iu&=4503599627370495LL;
		if (_15513_iu < 1865452045155277LL) {
			_17317_u=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4607182418800017408LL)));
		} else {
			(_15613_k)++;
			_17317_u=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4602678819172646912LL)));
			_15513_iu=static_cast<jule::U64>((4503599627370496LL - _15513_iu) >> 2LL);
		}
		_15413_f=static_cast<jule::F64>(_17317_u - 1LL);
	}
	jule::F64 _2029_hfsq = (0.5 * _15413_f) * _15413_f;
	jule::F64 _20313_s = 0LL;
	jule::F64 _20413_R = 0LL;
	jule::F64 _20513_z = 0LL;
	if (_15513_iu == 0LL) {
		if (_15413_f == 0LL) {
			if (_15613_k == 0LL) {
				return 0LL;
			}
			_17113_c+=static_cast<jule::F64>(static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877);
			return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) + _17113_c);
		}
		_20413_R=static_cast<jule::F64>(_2029_hfsq * (1LL - (0.6666666666666666 * _15413_f)));
		if (_15613_k == 0LL) {
			return static_cast<jule::F64>(_15413_f - _20413_R);
		}
		return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_20413_R - ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c)) - _15413_f));
	}
	_20313_s=static_cast<jule::F64>(jule::div(_15413_f,2LL + _15413_f));
	_20513_z=static_cast<jule::F64>(_20313_s * _20313_s);
	_20413_R=static_cast<jule::F64>(_20513_z * (0.6666666666666735 + (_20513_z * (0.3999999999940942 + (_20513_z * (0.2857142874366239 + (_20513_z * (0.22222198432149784 + (_20513_z * (0.1818357216161805 + (_20513_z * (0.15313837699209373 + (_20513_z * 0.14798198605116586)))))))))))));
	if (_15613_k == 0LL) {
		return static_cast<jule::F64>(_15413_f - (_2029_hfsq - (_20313_s * (_2029_hfsq + _20413_R))));
	}
	return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_2029_hfsq - ((_20313_s * (_2029_hfsq + _20413_R)) + ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c))) - _15413_f));
}



std::tuple<jule::F64,jule::F64> _1e142d418_stirling(jule::F64 _13113_x) {
	if (_13113_x > 200LL) {
		return std::make_tuple(static_cast<jule::F64>(_1e119a00e_inf(1LL)),1LL);
	}
	
	
	jule::F64 _13713_w = jule::div(1LL,_13113_x);
	_13713_w=static_cast<jule::F64>(1LL + (_13713_w * ((((((((_1e142d418__GAM_S[0LL] * _13713_w) + _1e142d418__GAM_S[1LL]) * _13713_w) + _1e142d418__GAM_S[2LL]) * _13713_w) + _1e142d418__GAM_S[3LL]) * _13713_w) + _1e142d418__GAM_S[4LL])));
	jule::F64 _13913_y1 = _1e142d4e5_exp(_13113_x);
	jule::F64 _14013_y2 = 1LL;
	if (_13113_x > 143.01608) {
		jule::F64 _14213_v = _1e1412287_pow(_13113_x,static_cast<jule::F64>((0.5 * _13113_x) - 0.25));
		std::tie(_13913_y1,_14013_y2) = std::make_tuple(_14213_v,static_cast<jule::F64>(jule::div(_14213_v,_13913_y1)));
	} else {
		_13913_y1=static_cast<jule::F64>(jule::div(_1e1412287_pow(_13113_x,static_cast<jule::F64>(_13113_x - 0.5)),_13913_y1));
	}
	return std::make_tuple(_13913_y1,static_cast<jule::F64>((2.5066282746310007 * _13713_w) * _14013_y2));
}



jule::F64 _1e142d418_gamma(jule::F64 _15918_x) {
	
	{
		if (!((_1e142d418_is_neg_int(_15918_x)) || (_1e119a00e_is_inf(_15918_x,-1LL)) || (_1e119a00e_is_nan(_15918_x)))) { goto _case_end_4326362144; }
		_case_begin_4326362144:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4326361968;
		_case_end_4326362144:;
		if (!((_1e119a00e_is_inf(_15918_x,1LL)))) { goto _case_end_4326362256; }
		_case_begin_4326362256:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(1LL));
		}
		goto _match_end_4326361968;
		_case_end_4326362256:;
		if (!((_15918_x == 0LL))) { goto _case_end_4326362368; }
		_case_begin_4326362368:;
		{
			if (_1e137aec0_signbit(_15918_x)) {
				return static_cast<jule::F64>(_1e119a00e_inf(-1LL));
			}
			return static_cast<jule::F64>(_1e119a00e_inf(1LL));
		}
		goto _match_end_4326361968;
		_case_end_4326362368:;
		_match_end_4326361968:;
	}
	jule::F64 _17313_q = _1e11e5279_abs(_15918_x);
	jule::F64 _17413_p = _1e1154ae0_floor(_17313_q);
	if (_17313_q > 33LL) {
		if (_15918_x >= 0LL) {
			jule::F64 _17718_y1;
			jule::F64 _17722_y2;
			std::tie(_17718_y1,_17722_y2) = _1e142d418_stirling(_15918_x);
			return static_cast<jule::F64>(_17718_y1 * _17722_y2);
		}
		jule::Int _18317_signgam = 1LL;
		jule::I64 _18413_ip = static_cast<jule::I64>(_17413_p);
		if ((_18413_ip & 1LL) == 0LL) {
			_18317_signgam=-1LL;
		}
		jule::F64 _18817_z = _17313_q - _17413_p;
		if (_18817_z > 0.5) {
			_17413_p=static_cast<jule::F64>(_17413_p + 1LL);
			_18817_z=static_cast<jule::F64>(_17313_q - _17413_p);
		}
		_18817_z=static_cast<jule::F64>(_17313_q * _1e10c8a64_sin(static_cast<jule::F64>(3.141592653589793 * _18817_z)));
		if (_18817_z == 0LL) {
			return static_cast<jule::F64>(_1e119a00e_inf(_18317_signgam));
		}
		jule::F64 _19714_sq1;
		jule::F64 _19719_sq2;
		std::tie(_19714_sq1,_19719_sq2) = _1e142d418_stirling(_17313_q);
		jule::F64 _19813_absz = _1e11e5279_abs(_18817_z);
		jule::F64 _19913_d = (_19813_absz * _19714_sq1) * _19719_sq2;
		if (_1e119a00e_is_inf(_19913_d,0LL)) {
			_18817_z=static_cast<jule::F64>(jule::div(jule::div(jule::div(3.141592653589793,_19813_absz),_19714_sq1),_19719_sq2));
		} else {
			_18817_z=static_cast<jule::F64>(jule::div(3.141592653589793,_19913_d));
		}
		return static_cast<jule::F64>(static_cast<jule::F64>(_18317_signgam) * _18817_z);
	}
	jule::F64 _20913_z = 1LL;
	while (_15918_x >= 3LL) {
		{
			_15918_x=static_cast<jule::F64>(_15918_x - 1LL);
			_20913_z=static_cast<jule::F64>(_20913_z * _15918_x);
		}
	_iter_next_4326369360:;
	}
	_iter_end_4326369360:;
	while (_15918_x < 0LL) {
		{
			if (_15918_x > -0.000000001) {
				goto _julec_label_small;
			}
			_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
			_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
		}
	_iter_next_4326368752:;
	}
	_iter_end_4326368752:;
	while (_15918_x < 2LL) {
		{
			if (_15918_x < 0.000000001) {
				goto _julec_label_small;
			}
			_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
			_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
		}
	_iter_next_4326389104:;
	}
	_iter_end_4326389104:;
	if (_15918_x == 2LL) {
		return _20913_z;
	}
	_15918_x=static_cast<jule::F64>(_15918_x - 2LL);
	_17413_p=static_cast<jule::F64>((((((((((((_15918_x * _1e142d418__GAM_P[0LL]) + _1e142d418__GAM_P[1LL]) * _15918_x) + _1e142d418__GAM_P[2LL]) * _15918_x) + _1e142d418__GAM_P[3LL]) * _15918_x) + _1e142d418__GAM_P[4LL]) * _15918_x) + _1e142d418__GAM_P[5LL]) * _15918_x) + _1e142d418__GAM_P[6LL]);
	_17313_q=static_cast<jule::F64>((((((((((((((_15918_x * _1e142d418__GAM_Q[0LL]) + _1e142d418__GAM_Q[1LL]) * _15918_x) + _1e142d418__GAM_Q[2LL]) * _15918_x) + _1e142d418__GAM_Q[3LL]) * _15918_x) + _1e142d418__GAM_Q[4LL]) * _15918_x) + _1e142d418__GAM_Q[5LL]) * _15918_x) + _1e142d418__GAM_Q[6LL]) * _15918_x) + _1e142d418__GAM_Q[7LL]);
	return static_cast<jule::F64>(jule::div(_20913_z * _17413_p,_17313_q));
	_julec_label_small:;
	if (_15918_x == 0LL) {
		return static_cast<jule::F64>(_1e119a00e_inf(1LL));
	}
	return static_cast<jule::F64>(jule::div(_20913_z,(1LL + (0.5772156649015329 * _15918_x)) * _15918_x));
}



jule::Bool _1e142d418_is_neg_int(jule::F64 _24515_x) {
	if (_24515_x < 0LL) {
		jule::F64 _24717_xf;
		std::tie(std::ignore,_24717_xf) = _1e125431b_modf(_24515_x);
		return _24717_xf == 0LL;
	}
	return false;
}



jule::F64 _1e1404433_erfinv(jule::F64 _10519_x) {
	if ((_1e119a00e_is_nan(_10519_x) || (_10519_x <= -1LL)) || (_10519_x >= 1LL)) {
		if ((_10519_x == -1LL) || (_10519_x == 1LL)) {
			return static_cast<jule::F64>(_1e119a00e_inf(static_cast<jule::Int>(_10519_x)));
		}
		return static_cast<jule::F64>(_1e119a00e_nan());
	}
	jule::Bool _11413_sign = false;
	if (_10519_x < 0LL) {
		_10519_x=static_cast<jule::F64>((-(_10519_x)));
		_11413_sign=true;
	}
	jule::F64 _12013_ans = 0LL;
	if (_10519_x <= 0.85) {
		jule::F64 _12213_r = 0.180625 - ((0.25 * _10519_x) * _10519_x);
		jule::F64 _12313_z1 = (((((((((((((887.0940696254552 * _12213_r) + 11819.493347062295) * _12213_r) + 23782.041382114385) * _12213_r) + 16235.862515167575) * _12213_r) + 4854.886889384388) * _12213_r) + 697.062665343896) * _12213_r) + 47.07268811238398) * _12213_r) + 1.1975323115670913;
		jule::F64 _12413_z2 = (((((((((((((5226.495278852854 * _12213_r) + 28729.085735721943) * _12213_r) + 39307.89580009271) * _12213_r) + 21213.794301586597) * _12213_r) + 5394.196021424751) * _12213_r) + 687.1870074920579) * _12213_r) + 42.31333070160091) * _12213_r) + 1LL;
		_12013_ans=static_cast<jule::F64>(jule::div(_10519_x * _12313_z1,_12413_z2));
	} else {
		jule::F64 _12717_z1 = 0LL;
		jule::F64 _12817_z2 = 0LL;
		jule::F64 _12917_r = _1e151c271_sqrt(static_cast<jule::F64>(0.6931471805599453 - _1e119b120_log(static_cast<jule::F64>(1LL - _10519_x))));
		if (_12917_r <= 5LL) {
			_12917_r-=1.6;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.0007745450142783414 * _12917_r) + 0.022723844989269184) * _12917_r) + 0.2417807251774506) * _12917_r) + 1.2704582524523684) * _12917_r) + 3.6478483247632045) * _12917_r) + 5.769497221460691) * _12917_r) + 4.630337846156546) * _12917_r) + 1.4234371107496835);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000014859850019840355 * _12917_r) + 0.0007744145906515771) * _12917_r) + 0.021494160384252878) * _12917_r) + 0.2094506521051275) * _12917_r) + 0.9754783200178743) * _12917_r) + 2.3707661626024534) * _12917_r) + 2.9036514445419948) * _12917_r) + 1.4142135623730951);
		} else {
			_12917_r-=5LL;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.00000020103343992922881 * _12917_r) + 0.000027115555687434876) * _12917_r) + 0.0012426609473880784) * _12917_r) + 0.026532189526576124) * _12917_r) + 0.29656057182850487) * _12917_r) + 1.7848265399172913) * _12917_r) + 5.463784911164114) * _12917_r) + 6.657904643501103);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000000000028910246058729655 * _12917_r) + 0.0000002010321207683943) * _12917_r) + 0.000026110884050805935) * _12917_r) + 0.0011128009970788597) * _12917_r) + 0.02103693768272069) * _12917_r) + 0.19364809469506591) * _12917_r) + 0.8482908416595164) * _12917_r) + 1.4142135623730951);
		}
		_12013_ans=static_cast<jule::F64>(jule::div(_12717_z1,_12817_z2));
	}
	if (_11413_sign) {
		return static_cast<jule::F64>((-(_12013_ans)));
	}
	return _12013_ans;
}



jule::F64 _1e1404433_erfcinv(jule::F64 _15516_x) {
	return static_cast<jule::F64>(_1e1404433_erfinv(static_cast<jule::F64>(1LL - _15516_x)));
}



jule::F64 _1e145e26d_erf(jule::F64 _21716_x) {
	
	
	{
		if (!((_1e119a00e_is_nan(_21716_x)))) { goto _case_end_4326468016; }
		_case_begin_4326468016:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4326467632;
		_case_end_4326468016:;
		if (!((_1e119a00e_is_inf(_21716_x,1LL)))) { goto _case_end_4326468112; }
		_case_begin_4326468112:;
		{
			return 1LL;
		}
		goto _match_end_4326467632;
		_case_end_4326468112:;
		if (!((_1e119a00e_is_inf(_21716_x,-1LL)))) { goto _case_end_4326468208; }
		_case_begin_4326468208:;
		{
			return -1LL;
		}
		goto _match_end_4326467632;
		_case_end_4326468208:;
		_match_end_4326467632:;
	}
	jule::Bool _22913_sign = false;
	if (_21716_x < 0LL) {
		_21716_x=static_cast<jule::F64>((-(_21716_x)));
		_22913_sign=true;
	}
	if (_21716_x < 0.84375) {
		jule::F64 _23517_temp = 0LL;
		if (_21716_x < 0.000000003725290298461914) {
			if (_21716_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002848094538889218) {
				_23517_temp=static_cast<jule::F64>(0.125 * ((8LL * _21716_x) + (1.0270333367641007 * _21716_x)));
			} else {
				_23517_temp=static_cast<jule::F64>(_21716_x + (0.1283791670955126 * _21716_x));
			}
		} else {
			jule::F64 _24317_z = _21716_x * _21716_x;
			jule::F64 _24417_r = 0.12837916709551256 + (_24317_z * (-0.3250421072470015 + (_24317_z * (-0.02848174957559851 + (_24317_z * (-0.005770270296489442 + (_24317_z * -0.000023763016656650163)))))));
			jule::F64 _24517_s = 1LL + (_24317_z * (0.39791722395915535 + (_24317_z * (0.0650222499887673 + (_24317_z * (0.005081306281875766 + (_24317_z * (0.00013249473800432164 + (_24317_z * -0.000003960228278775368)))))))));
			jule::F64 _24617_y = jule::div(_24417_r,_24517_s);
			_23517_temp=static_cast<jule::F64>(_21716_x + (_21716_x * _24617_y));
		}
		if (_22913_sign) {
			return static_cast<jule::F64>((-(_23517_temp)));
		}
		return _23517_temp;
	}
	if (_21716_x < 1.25) {
		jule::F64 _25513_s = _21716_x - 1LL;
		jule::F64 _25613_P = -0.0023621185607526594 + (_25513_s * (0.41485611868374833 + (_25513_s * (-0.3722078760357013 + (_25513_s * (0.31834661990116175 + (_25513_s * (-0.11089469428239668 + (_25513_s * (0.035478304325618236 + (_25513_s * -0.002166375594868791)))))))))));
		jule::F64 _25713_Q = 1LL + (_25513_s * (0.10642088040084423 + (_25513_s * (0.540397917702171 + (_25513_s * (0.07182865441419627 + (_25513_s * (0.12617121980876164 + (_25513_s * (0.01363708391202905 + (_25513_s * 0.011984499846799107)))))))))));
		if (_22913_sign) {
			return static_cast<jule::F64>(-0.8450629115104675 - jule::div(_25613_P,_25713_Q));
		}
		return static_cast<jule::F64>(0.8450629115104675 + jule::div(_25613_P,_25713_Q));
	}
	if (_21716_x >= 6LL) {
		if (_22913_sign) {
			return -1LL;
		}
		return 1LL;
	}
	jule::F64 _2699_s = jule::div(1LL,_21716_x * _21716_x);
	jule::F64 _27013_R = 0LL;
	jule::F64 _27113_S = 0LL;
	if (_21716_x < 2.857142857142857) {
		_27013_R=static_cast<jule::F64>(-0.009864944034847148 + (_2699_s * (-0.6938585727071818 + (_2699_s * (-10.558626225323291 + (_2699_s * (-62.375332450326006 + (_2699_s * (-162.39666946257347 + (_2699_s * (-184.60509290671104 + (_2699_s * (-81.2874355063066 + (_2699_s * -9.814329344169145))))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (19.651271667439257 + (_2699_s * (137.65775414351904 + (_2699_s * (434.56587747522923 + (_2699_s * (645.3872717332679 + (_2699_s * (429.00814002756783 + (_2699_s * (108.63500554177944 + (_2699_s * (6.570249770319282 + (_2699_s * -0.0604244152148581))))))))))))))));
	} else {
		_27013_R=static_cast<jule::F64>(-0.0098649429247001 + (_2699_s * (-0.799283237680523 + (_2699_s * (-17.757954917754752 + (_2699_s * (-160.63638485582192 + (_2699_s * (-637.5664433683896 + (_2699_s * (-1025.0951316110772 + (_2699_s * -483.5191916086514))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (30.33806074348246 + (_2699_s * (325.7925129965739 + (_2699_s * (1536.729586084437 + (_2699_s * (3199.8582195085955 + (_2699_s * (2553.0504064331644 + (_2699_s * (474.52854120695537 + (_2699_s * -22.44095244658582))))))))))))));
	}
	jule::F64 _2799_z = _1e10c0d9c_f64_from_bits(static_cast<jule::U64>(_1e10c0d9c_f64_bits(_21716_x) & 18446744069414584320LLU));
	jule::F64 _2809_r = _1e142d4e5_exp(static_cast<jule::F64>(((-(_2799_z)) * _2799_z) - 0.5625)) * _1e142d4e5_exp(static_cast<jule::F64>(((_2799_z - _21716_x) * (_2799_z + _21716_x)) + jule::div(_27013_R,_27113_S)));
	if (_22913_sign) {
		return static_cast<jule::F64>(jule::div(_2809_r,_21716_x) - 1LL);
	}
	return static_cast<jule::F64>(1LL - jule::div(_2809_r,_21716_x));
}



jule::F64 _1e145e26d_erfc(jule::F64 _29317_x) {
	
	{
		if (!((_1e119a00e_is_nan(_29317_x)))) { goto _case_end_4326518320; }
		_case_begin_4326518320:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4326518144;
		_case_end_4326518320:;
		if (!((_1e119a00e_is_inf(_29317_x,1LL)))) { goto _case_end_4326518432; }
		_case_begin_4326518432:;
		{
			return 0LL;
		}
		goto _match_end_4326518144;
		_case_end_4326518432:;
		if (!((_1e119a00e_is_inf(_29317_x,-1LL)))) { goto _case_end_4326518544; }
		_case_begin_4326518544:;
		{
			return 2LL;
		}
		goto _match_end_4326518144;
		_case_end_4326518544:;
		_match_end_4326518144:;
	}
	jule::Bool _30413_sign = false;
	if (_29317_x < 0LL) {
		_29317_x=static_cast<jule::F64>((-(_29317_x)));
		_30413_sign=true;
	}
	if (_29317_x < 0.84375) {
		jule::F64 _31017_temp = 0LL;
		if (_29317_x < 0.000000000000000013877787807814457) {
			_31017_temp=_29317_x;
		} else {
			jule::F64 _31417_z = _29317_x * _29317_x;
			jule::F64 _31517_r = 0.12837916709551256 + (_31417_z * (-0.3250421072470015 + (_31417_z * (-0.02848174957559851 + (_31417_z * (-0.005770270296489442 + (_31417_z * -0.000023763016656650163)))))));
			jule::F64 _31617_s = 1LL + (_31417_z * (0.39791722395915535 + (_31417_z * (0.0650222499887673 + (_31417_z * (0.005081306281875766 + (_31417_z * (0.00013249473800432164 + (_31417_z * -0.000003960228278775368)))))))));
			jule::F64 _31717_y = jule::div(_31517_r,_31617_s);
			if (_29317_x < 0.25) {
				_31017_temp=static_cast<jule::F64>(_29317_x + (_29317_x * _31717_y));
			} else {
				_31017_temp=static_cast<jule::F64>(0.5 + ((_29317_x * _31717_y) + (_29317_x - 0.5)));
			}
		}
		if (_30413_sign) {
			return static_cast<jule::F64>(1LL + _31017_temp);
		}
		return static_cast<jule::F64>(1LL - _31017_temp);
	}
	if (_29317_x < 1.25) {
		jule::F64 _33013_s = _29317_x - 1LL;
		jule::F64 _33113_P = -0.0023621185607526594 + (_33013_s * (0.41485611868374833 + (_33013_s * (-0.3722078760357013 + (_33013_s * (0.31834661990116175 + (_33013_s * (-0.11089469428239668 + (_33013_s * (0.035478304325618236 + (_33013_s * -0.002166375594868791)))))))))));
		jule::F64 _33213_Q = 1LL + (_33013_s * (0.10642088040084423 + (_33013_s * (0.540397917702171 + (_33013_s * (0.07182865441419627 + (_33013_s * (0.12617121980876164 + (_33013_s * (0.01363708391202905 + (_33013_s * 0.011984499846799107)))))))))));
		if (_30413_sign) {
			return static_cast<jule::F64>(1.8450629115104675 + jule::div(_33113_P,_33213_Q));
		}
		return static_cast<jule::F64>(0.15493708848953247 - jule::div(_33113_P,_33213_Q));
	}
	if (_29317_x < 28LL) {
		jule::F64 _34013_s = jule::div(1LL,_29317_x * _29317_x);
		jule::F64 _34117_R = 0LL;
		jule::F64 _34217_S = 0LL;
		if (_29317_x < 2.857142857142857) {
			_34117_R=static_cast<jule::F64>(-0.009864944034847148 + (_34013_s * (-0.6938585727071818 + (_34013_s * (-10.558626225323291 + (_34013_s * (-62.375332450326006 + (_34013_s * (-162.39666946257347 + (_34013_s * (-184.60509290671104 + (_34013_s * (-81.2874355063066 + (_34013_s * -9.814329344169145))))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (19.651271667439257 + (_34013_s * (137.65775414351904 + (_34013_s * (434.56587747522923 + (_34013_s * (645.3872717332679 + (_34013_s * (429.00814002756783 + (_34013_s * (108.63500554177944 + (_34013_s * (6.570249770319282 + (_34013_s * -0.0604244152148581))))))))))))))));
		} else {
			if (_30413_sign && (_29317_x > 6LL)) {
				return 2LL;
			}
			_34117_R=static_cast<jule::F64>(-0.0098649429247001 + (_34013_s * (-0.799283237680523 + (_34013_s * (-17.757954917754752 + (_34013_s * (-160.63638485582192 + (_34013_s * (-637.5664433683896 + (_34013_s * (-1025.0951316110772 + (_34013_s * -483.5191916086514))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (30.33806074348246 + (_34013_s * (325.7925129965739 + (_34013_s * (1536.729586084437 + (_34013_s * (3199.8582195085955 + (_34013_s * (2553.0504064331644 + (_34013_s * (474.52854120695537 + (_34013_s * -22.44095244658582))))))))))))));
		}
		jule::F64 _35313_z = _1e10c0d9c_f64_from_bits(static_cast<jule::U64>(_1e10c0d9c_f64_bits(_29317_x) & 18446744069414584320LLU));
		jule::F64 _35413_r = _1e142d4e5_exp(static_cast<jule::F64>(((-(_35313_z)) * _35313_z) - 0.5625)) * _1e142d4e5_exp(static_cast<jule::F64>(((_35313_z - _29317_x) * (_35313_z + _29317_x)) + jule::div(_34117_R,_34217_S)));
		if (_30413_sign) {
			return static_cast<jule::F64>(2LL - jule::div(_35413_r,_29317_x));
		}
		return static_cast<jule::F64>(jule::div(_35413_r,_29317_x));
	}
	if (_30413_sign) {
		return 2LL;
	}
	return 0LL;
}



jule::F64 _1e151a9ab_pow10(jule::Int _6114_n) {
	if ((0LL <= _6114_n) && (_6114_n <= 308LL)) {
		return static_cast<jule::F64>(_1e151a9ab_POW10_POSTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>(_6114_n),32LL))] * _1e151a9ab_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>(_6114_n),32LL))]);
	}
	if ((-323LL <= _6114_n) && (_6114_n <= 0LL)) {
		return static_cast<jule::F64>(jule::div(_1e151a9ab_POW10_NEGTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>((-(_6114_n))),32LL))],_1e151a9ab_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>((-(_6114_n))),32LL))]));
	}
	if (_6114_n > 0LL) {
		return static_cast<jule::F64>(_1e119a00e_inf(1LL));
	}
	return 0LL;
}



jule::F64 _1e151c271_sqrt(jule::F64 _12313_x) {
	{
		if (!((_12313_x == 0LL) || (_1e119a00e_is_nan(_12313_x)) || (_1e119a00e_is_inf(_12313_x,1LL)))) { goto _case_end_4326573536; }
		_case_begin_4326573536:;
		{
			return _12313_x;
		}
		goto _match_end_4326572512;
		_case_end_4326573536:;
		if (!((_12313_x < 0LL))) { goto _case_end_4326573632; }
		_case_begin_4326573632:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4326572512;
		_case_end_4326573632:;
		_match_end_4326572512:;
	}
	jule::U64 _13113_ix = _1e10c0d9c_f64_bits(_12313_x);
	jule::Int _13313_exp = static_cast<jule::Int>((_13113_ix >> 52LL) & 2047LL);
	if (_13313_exp == 0LL) {
		while ((_13113_ix & 4503599627370496LLU) == 0LL) {
			{
				_13113_ix<<=1LL;
				(_13313_exp)--;
			}
		_iter_next_4325502176:;
		}
		_iter_end_4325502176:;
		(_13313_exp)++;
	}
	_13313_exp-=1023LL;
	_13113_ix=static_cast<jule::U64>(_13113_ix & 9227875636482146303LLU);
	_13113_ix|=4503599627370496LLU;
	if ((_13313_exp & 1LL) == 1LL) {
		_13113_ix<<=1LL;
	}
	_13313_exp>>=1LL;
	_13113_ix<<=1LL;
	jule::U64 _15013_q = 0LLU;
	jule::U64 _15113_s = 0LLU;
	jule::U64 _15213_r = static_cast<jule::U64>(9007199254740992LLU);
	while (_15213_r != 0LL) {
		{
			jule::U64 _15413_t = _15113_s + _15213_r;
			if (_15413_t <= _13113_ix) {
				_15113_s=static_cast<jule::U64>(_15413_t + _15213_r);
				_13113_ix-=_15413_t;
				_15013_q+=_15213_r;
			}
			_13113_ix<<=1LL;
			_15213_r>>=1LL;
		}
	_iter_next_4326584336:;
	}
	_iter_end_4326584336:;
	if (_13113_ix != 0LL) {
		_15013_q+=static_cast<jule::U64>(_15013_q & 1LL);
	}
	_13113_ix=static_cast<jule::U64>((_15013_q >> 1LL) + (static_cast<jule::U64>((_13313_exp - 1LL) + 1023LL) << 52LL));
	return static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(_13113_ix));
}



jule::F64 _1e157b115_logb(jule::F64 _4413_x) {
	{
		if (!((_4413_x == 0LL))) { goto _case_end_4326591856; }
		_case_begin_4326591856:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(-1LL));
		}
		goto _match_end_4326590976;
		_case_end_4326591856:;
		if (!((_1e119a00e_is_inf(_4413_x,0LL)))) { goto _case_end_4326591952; }
		_case_begin_4326591952:;
		{
			return static_cast<jule::F64>(_1e119a00e_inf(1LL));
		}
		goto _match_end_4326590976;
		_case_end_4326591952:;
		if (!((_1e119a00e_is_nan(_4413_x)))) { goto _case_end_4326592048; }
		_case_begin_4326592048:;
		{
			return _4413_x;
		}
		goto _match_end_4326590976;
		_case_end_4326592048:;
		_match_end_4326590976:;
	}
	return static_cast<jule::F64>(_1e157b115__ilogb(_4413_x));
}



jule::Int _1e157b115_ilogb(jule::F64 _6314_x) {
	{
		if (!((_6314_x == 0LL))) { goto _case_end_4326596256; }
		_case_begin_4326596256:;
		{
			return -2147483648LL;
		}
		goto _match_end_4326594576;
		_case_end_4326596256:;
		if (!((_1e119a00e_is_nan(_6314_x)))) { goto _case_end_4326596352; }
		_case_begin_4326596352:;
		{
			return 2147483647LL;
		}
		goto _match_end_4326594576;
		_case_end_4326596352:;
		if (!((_1e119a00e_is_inf(_6314_x,0LL)))) { goto _case_end_4326596448; }
		_case_begin_4326596448:;
		{
			return 2147483647LL;
		}
		goto _match_end_4326594576;
		_case_end_4326596448:;
		_match_end_4326594576:;
	}
	return static_cast<jule::Int>(_1e157b115__ilogb(_6314_x));
}



jule::Int _1e157b115__ilogb(jule::F64 _7715_x) {
	jule::Int _7813_exp = 0LL;
	std::tie(_7715_x,_7813_exp) = _1e119a00e_normalize(_7715_x);
	return static_cast<jule::Int>((static_cast<jule::Int>((_1e10c0d9c_f64_bits(_7715_x) >> 52LL) & 2047LL) - 1023LL) + _7813_exp);
}



jule::F64 _1e1573371_jn(jule::Int _8415_n,jule::F64 _8427_x) {
	
	
	{
		if (!((_1e119a00e_is_nan(_8427_x)))) { goto _case_end_4326606080; }
		_case_begin_4326606080:;
		{
			return _8427_x;
		}
		goto _match_end_4326605840;
		_case_end_4326606080:;
		if (!((_1e119a00e_is_inf(_8427_x,0LL)))) { goto _case_end_4326606176; }
		_case_begin_4326606176:;
		{
			return 0LL;
		}
		goto _match_end_4326605840;
		_case_end_4326606176:;
		_match_end_4326605840:;
	}
	if (_8415_n == 0LL) {
		return static_cast<jule::F64>(_1e1300582_j0(_8427_x));
	}
	if (_8427_x == 0LL) {
		return 0LL;
	}
	if (_8415_n < 0LL) {
		std::tie(_8415_n,_8427_x) = std::make_tuple(static_cast<jule::Int>((-(_8415_n))),static_cast<jule::F64>((-(_8427_x))));
	}
	if (_8415_n == 1LL) {
		return static_cast<jule::F64>(_1e124dd71_j1(_8427_x));
	}
	jule::Bool _10913_sign = false;
	if (_8427_x < 0LL) {
		_8427_x=static_cast<jule::F64>((-(_8427_x)));
		if ((_8415_n & 1LL) == 1LL) {
			_10913_sign=true;
		}
	}
	jule::F64 _11613_b = 0LL;
	if (static_cast<jule::F64>(_8415_n) <= _8427_x) {
		if (_8427_x >= 5967269506265907200LL) {
			jule::F64 _13321_temp = 0LL;
			jule::F64 _13418_s;
			jule::F64 _13421_c;
			std::tie(_13418_s,_13421_c) = _1e11500d5_sincos(_8427_x);
			{
				auto _match_expr{ _8415_n & 3LL };
				if (!((0LL) == _match_expr)) { goto _case_end_4326620400; }
				_case_begin_4326620400:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c + _13418_s);
				}
				goto _match_end_4326619984;
				_case_end_4326620400:;
				if (!((1LL) == _match_expr)) { goto _case_end_4326620496; }
				_case_begin_4326620496:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) + _13418_s);
				}
				goto _match_end_4326619984;
				_case_end_4326620496:;
				if (!((2LL) == _match_expr)) { goto _case_end_4326620592; }
				_case_begin_4326620592:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) - _13418_s);
				}
				goto _match_end_4326619984;
				_case_end_4326620592:;
				if (!((3LL) == _match_expr)) { goto _case_end_4326620688; }
				_case_begin_4326620688:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c - _13418_s);
				}
				goto _match_end_4326619984;
				_case_end_4326620688:;
				_match_end_4326619984:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13321_temp,_1e151c271_sqrt(_8427_x)));
		} else {
			_11613_b=static_cast<jule::F64>(_1e124dd71_j1(_8427_x));
			jule::Int _14422_i = 1LL;
			jule::F64 _14429_a = _1e1300582_j0(_8427_x);
			std::tie(_14422_i,_14429_a) = std::make_tuple(1LL,_1e1300582_j0(_8427_x));
			for (; _14422_i < _8415_n; (_14422_i)++) {
				{
					std::tie(_14429_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>((_11613_b * jule::div(static_cast<jule::F64>(_14422_i + _14422_i),_8427_x)) - _14429_a));
				}
			_iter_next_4326625440:;
			}
			_iter_end_4326625440:;
		}
	} else {
		if (_8427_x < 0.000000001862645149230957) {
			if (_8415_n > 33LL) {
				_11613_b=0LL;
			} else {
				jule::F64 _15721_temp = _8427_x * 0.5;
				_11613_b=_15721_temp;
				jule::F64 _15925_a = 1LL;
				jule::Int _16025_i = 2LL;
				for (; _16025_i <= _8415_n; (_16025_i)++) {
					{
						_15925_a*=static_cast<jule::F64>(_16025_i);
						_11613_b*=_15721_temp;
					}
				_iter_next_4326630880:;
				}
				_iter_end_4326630880:;
				_11613_b = jule::div(_11613_b,_15925_a);
			}
		} else {
			jule::F64 _19717_w = jule::div(static_cast<jule::F64>(_8415_n + _8415_n),_8427_x);
			jule::F64 _19817_h = jule::div(2LL,_8427_x);
			jule::F64 _19921_q0 = _19717_w;
			jule::F64 _20021_z = _19717_w + _19817_h;
			jule::F64 _20121_q1 = (_19717_w * _20021_z) - 1LL;
			jule::Int _20221_k = 1LL;
			while (_20121_q1 < 1000000000LL) {
				{
					(_20221_k)++;
					_20021_z+=_19817_h;
					std::tie(_19921_q0,_20121_q1) = std::make_tuple(_20121_q1,static_cast<jule::F64>((_20021_z * _20121_q1) - _19921_q0));
				}
			_iter_next_4326639360:;
			}
			_iter_end_4326639360:;
			jule::Int _20817_m = _8415_n + _8415_n;
			jule::F64 _20921_t = 0LL;
			jule::Int _21021_i = 2LL * (_8415_n + _20221_k);
			for (; _21021_i >= _20817_m; _21021_i-=2LL) {
				{
					_20921_t=static_cast<jule::F64>(jule::div(1LL,jule::div(static_cast<jule::F64>(_21021_i),_8427_x) - _20921_t));
				}
			_iter_next_4326645680:;
			}
			_iter_end_4326645680:;
			jule::F64 _21421_a = _20921_t;
			_11613_b=1LL;
			jule::F64 _22421_tmp = static_cast<jule::F64>(_8415_n);
			jule::F64 _22517_v = jule::div(2LL,_8427_x);
			_22421_tmp=static_cast<jule::F64>(_22421_tmp * _1e119b120_log(static_cast<jule::F64>(_1e11e5279_abs(static_cast<jule::F64>(_22517_v * _22421_tmp)))));
			if (_22421_tmp < 709.782712893384) {
				_21021_i=static_cast<jule::Int>(_8415_n - 1LL);
				for (; _21021_i > 0LL; (_21021_i)--) {
					{
						jule::F64 _23025_di = static_cast<jule::F64>(_21021_i + _21021_i);
						std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23025_di,_8427_x) - _21421_a));
					}
				_iter_next_4326653040:;
				}
				_iter_end_4326653040:;
			} else {
				_21021_i=static_cast<jule::Int>(_8415_n - 1LL);
				for (; _21021_i > 0LL; (_21021_i)--) {
					{
						jule::F64 _23625_di = static_cast<jule::F64>(_21021_i + _21021_i);
						std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23625_di,_8427_x) - _21421_a));
						if (_11613_b > 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
							_21421_a = jule::div(_21421_a,_11613_b);
							_20921_t = jule::div(_20921_t,_11613_b);
							_11613_b=1LL;
						}
					}
				_iter_next_4326655872:;
				}
				_iter_end_4326655872:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(_20921_t * _1e1300582_j0(_8427_x),_11613_b));
		}
	}
	if (_10913_sign) {
		return static_cast<jule::F64>((-(_11613_b)));
	}
	return _11613_b;
}



jule::F64 _1e1573371_yn(jule::Int _26315_n,jule::F64 _26323_x) {
	
	{
		if (!((_26323_x < 0LL) || (_1e119a00e_is_nan(_26323_x)))) { goto _case_end_4326662752; }
		_case_begin_4326662752:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4326662592;
		_case_end_4326662752:;
		if (!((_1e119a00e_is_inf(_26323_x,1LL)))) { goto _case_end_4326662864; }
		_case_begin_4326662864:;
		{
			return 0LL;
		}
		goto _match_end_4326662592;
		_case_end_4326662864:;
		_match_end_4326662592:;
	}
	if (_26315_n == 0LL) {
		return static_cast<jule::F64>(_1e1300582_y0(_26323_x));
	}
	if (_26323_x == 0LL) {
		if ((_26315_n < 0LL) && ((_26315_n & 1LL) == 1LL)) {
			return static_cast<jule::F64>(_1e119a00e_inf(1LL));
		}
		return static_cast<jule::F64>(_1e119a00e_inf(-1LL));
	}
	jule::Bool _28213_sign = false;
	if (_26315_n < 0LL) {
		_26315_n=static_cast<jule::Int>((-(_26315_n)));
		if ((_26315_n & 1LL) == 1LL) {
			_28213_sign=true;
		}
	}
	if (_26315_n == 1LL) {
		if (_28213_sign) {
			return static_cast<jule::F64>((-(_1e124dd71_y1(_26323_x))));
		}
		return static_cast<jule::F64>(_1e124dd71_y1(_26323_x));
	}
	jule::F64 _29513_b = 0LL;
	if (_26323_x >= 5967269506265907200LL) {
		jule::F64 _31017_temp = 0LL;
		jule::F64 _31114_s;
		jule::F64 _31117_c;
		std::tie(_31114_s,_31117_c) = _1e11500d5_sincos(_26323_x);
		{
			auto _match_expr{ _26315_n & 3LL };
			if (!((0LL) == _match_expr)) { goto _case_end_4326677728; }
			_case_begin_4326677728:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s - _31117_c);
			}
			goto _match_end_4326677312;
			_case_end_4326677728:;
			if (!((1LL) == _match_expr)) { goto _case_end_4326677824; }
			_case_begin_4326677824:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) - _31117_c);
			}
			goto _match_end_4326677312;
			_case_end_4326677824:;
			if (!((2LL) == _match_expr)) { goto _case_end_4326677920; }
			_case_begin_4326677920:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) + _31117_c);
			}
			goto _match_end_4326677312;
			_case_end_4326677920:;
			if (!((3LL) == _match_expr)) { goto _case_end_4326678016; }
			_case_begin_4326678016:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s + _31117_c);
			}
			goto _match_end_4326677312;
			_case_end_4326678016:;
			_match_end_4326677312:;
		}
		_29513_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _31017_temp,_1e151c271_sqrt(_26323_x)));
	} else {
		jule::F64 _32017_a = _1e1300582_y0(_26323_x);
		_29513_b=static_cast<jule::F64>(_1e124dd71_y1(_26323_x));
		jule::Int _32317_i = 1LL;
		for (; (_32317_i < _26315_n) && (!(_1e119a00e_is_inf(_29513_b,-1LL))); (_32317_i)++) {
			{
				std::tie(_32017_a,_29513_b) = std::make_tuple(_29513_b,static_cast<jule::F64>((jule::div(static_cast<jule::F64>(_32317_i + _32317_i),_26323_x) * _29513_b) - _32017_a));
			}
		_iter_next_4326683312:;
		}
		_iter_end_4326683312:;
	}
	if (_28213_sign) {
		return static_cast<jule::F64>((-(_29513_b)));
	}
	return _29513_b;
}



jule::F64 _1e151bb99_remainder(jule::F64 _6822_x,jule::F64 _6834_y) {
	
	
	{
		if (!((_1e119a00e_is_nan(_6822_x)) || (_1e119a00e_is_nan(_6834_y)) || (_1e119a00e_is_inf(_6822_x,0LL)) || (_6834_y == 0LL))) { goto _case_end_4326690288; }
		_case_begin_4326690288:;
		{
			return static_cast<jule::F64>(_1e119a00e_nan());
		}
		goto _match_end_4326689664;
		_case_end_4326690288:;
		if (!((_1e119a00e_is_inf(_6834_y,0LL)))) { goto _case_end_4326690384; }
		_case_begin_4326690384:;
		{
			return _6822_x;
		}
		goto _match_end_4326689664;
		_case_end_4326690384:;
		_match_end_4326689664:;
	}
	jule::Bool _7913_sign = false;
	if (_6822_x < 0LL) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
		_7913_sign=true;
	}
	if (_6834_y < 0LL) {
		_6834_y=static_cast<jule::F64>((-(_6834_y)));
	}
	if (_6822_x == _6834_y) {
		if (_7913_sign) {
			jule::F64 _8917_zero = 0LL;
			return static_cast<jule::F64>((-(_8917_zero)));
		}
		return 0LL;
	}
	if (_6834_y <= 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
		_6822_x=static_cast<jule::F64>(_1e1119cc5_mod(_6822_x,static_cast<jule::F64>(_6834_y + _6834_y)));
	}
	if (_6834_y < 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403) {
		if ((_6822_x + _6822_x) > _6834_y) {
			_6822_x-=_6834_y;
			if ((_6822_x + _6822_x) >= _6834_y) {
				_6822_x-=_6834_y;
			}
		}
	} else {
		jule::F64 _10513_y_half = 0.5 * _6834_y;
		if (_6822_x > _10513_y_half) {
			_6822_x-=_6834_y;
			if (_6822_x >= _10513_y_half) {
				_6822_x-=_6834_y;
			}
		}
	}
	if (_7913_sign) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
	}
	return _6822_x;
}



jule::F64 _1e1592538_xatan(jule::F64 _8610_x) {
	
	
	
	
	
	
	
	
	
	
	jule::F64 _9813_z = _8610_x * _8610_x;
	_9813_z=static_cast<jule::F64>(jule::div(_9813_z * ((((((((-0.8750608600031904 * _9813_z) + -16.157537187333652) * _9813_z) + -75.00855792314705) * _9813_z) + -122.88666844901361) * _9813_z) + -64.85021904942025),((((((((_9813_z + 24.858464901423062) * _9813_z) + 165.02700983169885) * _9813_z) + 432.88106049129027) * _9813_z) + 485.3903996359137) * _9813_z) + 194.5506571482614));
	_9813_z=static_cast<jule::F64>((_8610_x * _9813_z) + _8610_x);
	return _9813_z;
}



jule::F64 _1e1592538_satan(jule::F64 _10610_x) {
	
	
	if (_10610_x <= 0.66) {
		return static_cast<jule::F64>(_1e1592538_xatan(_10610_x));
	}
	if (_10610_x > 2.414213562373095) {
		return static_cast<jule::F64>((1.5707963267948966 - _1e1592538_xatan(static_cast<jule::F64>(jule::div(1LL,_10610_x)))) + 0.00000000000000006123233995736766);
	}
	return static_cast<jule::F64>((0.7853981633974483 + _1e1592538_xatan(static_cast<jule::F64>(jule::div(_10610_x - 1LL,_10610_x + 1LL)))) + 0.00000000000000003061616997868383);
}



jule::F64 _1e1592538_atan(jule::F64 _12413_x) {
	if (_12413_x == 0LL) {
		return _12413_x;
	}
	if (_12413_x > 0LL) {
		return static_cast<jule::F64>(_1e1592538_satan(_12413_x));
	}
	return static_cast<jule::F64>((-(_1e1592538_satan(static_cast<jule::F64>((-(_12413_x)))))));
}



jule::F64 _1e16041b0_asin(jule::F64 _5017_x) {
	if (_5017_x == 0LL) {
		return _5017_x;
	}
	jule::Bool _5413_sign = false;
	if (_5017_x < 0LL) {
		_5017_x=static_cast<jule::F64>((-(_5017_x)));
		_5413_sign=true;
	}
	if (_5017_x > 1LL) {
		return static_cast<jule::F64>(_1e119a00e_nan());
	}
	jule::F64 _6313_temp = _1e151c271_sqrt(static_cast<jule::F64>(1LL - (_5017_x * _5017_x)));
	if (_5017_x > 0.7) {
		_6313_temp=static_cast<jule::F64>(1.5707963267948966 - _1e1592538_satan(static_cast<jule::F64>(jule::div(_6313_temp,_5017_x))));
	} else {
		_6313_temp=static_cast<jule::F64>(_1e1592538_satan(static_cast<jule::F64>(jule::div(_5017_x,_6313_temp))));
	}
	if (_5413_sign) {
		_6313_temp=static_cast<jule::F64>((-(_6313_temp)));
	}
	return _6313_temp;
}



jule::F64 _1e16041b0_acos(jule::F64 _8013_x) {
	return static_cast<jule::F64>(1.5707963267948966 - _1e16041b0_asin(_8013_x));
}



jule::F64 _1e163c748_asinh(jule::F64 _7018_x) {
	
	
	
	if (_1e119a00e_is_nan(_7018_x) || _1e119a00e_is_inf(_7018_x,0LL)) {
		return _7018_x;
	}
	jule::Bool _7913_sign = false;
	if (_7018_x < 0LL) {
		_7018_x=static_cast<jule::F64>((-(_7018_x)));
		_7913_sign=true;
	}
	jule::F64 _8413_temp = 0LL;
	{
		if (!((_7018_x > 268435456LLU))) { goto _case_end_4326745840; }
		_case_begin_4326745840:;
		{
			_8413_temp=static_cast<jule::F64>(_1e119b120_log(_7018_x) + 0.6931471805599453);
		}
		goto _match_end_4326744704;
		_case_end_4326745840:;
		if (!((_7018_x > 2LL))) { goto _case_end_4326746768; }
		_case_begin_4326746768:;
		{
			_8413_temp=static_cast<jule::F64>(_1e119b120_log(static_cast<jule::F64>((2LL * _7018_x) + jule::div(1LL,_1e151c271_sqrt(static_cast<jule::F64>((_7018_x * _7018_x) + 1LL)) + _7018_x))));
		}
		goto _match_end_4326744704;
		_case_end_4326746768:;
		if (!((_7018_x < 0.000000003725290298461914))) { goto _case_end_4326748064; }
		_case_begin_4326748064:;
		{
			_8413_temp=_7018_x;
		}
		goto _match_end_4326744704;
		_case_end_4326748064:;
		_case_begin_4326745088:;
		{
			_8413_temp=static_cast<jule::F64>(_1e148444c_log1p(static_cast<jule::F64>(_7018_x + jule::div(_7018_x * _7018_x,1LL + _1e151c271_sqrt(static_cast<jule::F64>(1LL + (_7018_x * _7018_x)))))));
		}
		goto _match_end_4326744704;
		_case_end_4326745088:;
		_match_end_4326744704:;
	}
	if (_7913_sign) {
		_8413_temp=static_cast<jule::F64>((-(_8413_temp)));
	}
	return _8413_temp;
}



std::tuple<jule::Bool,jule::Int> _1ec935dba_conv_bool(jule::Str _4118_s) {
	{
		auto _match_expr{ _4118_s };
		if (!((jule::Str("1", 1)) == _match_expr || (jule::Str("t", 1)) == _match_expr || (jule::Str("T", 1)) == _match_expr || (jule::Str("true", 4)) == _match_expr || (jule::Str("TRUE", 4)) == _match_expr || (jule::Str("True", 4)) == _match_expr)) { goto _case_end_4327168704; }
		_case_begin_4327168704:;
		{
			return std::make_tuple(true,0LLU);
		}
		goto _match_end_4327168592;
		_case_end_4327168704:;
		if (!((jule::Str("0", 1)) == _match_expr || (jule::Str("f", 1)) == _match_expr || (jule::Str("F", 1)) == _match_expr || (jule::Str("false", 5)) == _match_expr || (jule::Str("FALSE", 5)) == _match_expr || (jule::Str("False", 5)) == _match_expr)) { goto _case_end_4327168928; }
		_case_begin_4327168928:;
		{
			return std::make_tuple(false,0LLU);
		}
		goto _match_end_4327168592;
		_case_end_4327168928:;
		_match_end_4327168592:;
	}
	return std::make_tuple(false,2LLU);
}



jule::Str _1ec935dba_fmt_bool(jule::Bool _5217_b) {
	if (_5217_b) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



jule::Str _1ec95e245_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_1ec95e245_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



jule::Slice<jule::U8> _1ec95e245_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_1ec95e245_FloatInfo* _8413_flt = nullptr;
	{
		auto _match_expr{ _8270_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4327184320; }
		_case_begin_4327184320:;
		{
			_8313_bits=static_cast<jule::U64>(_1e10c0d9c_f32_bits(static_cast<jule::F32>(_8234_val)));
			_8413_flt=(&(_1ec95e245_F32_INFO));
		}
		goto _match_end_4327182800;
		_case_end_4327184320:;
		if (!((64LL) == _match_expr)) { goto _case_end_4327183856; }
		_case_begin_4327183856:;
		{
			_8313_bits=static_cast<jule::U64>(_1e10c0d9c_f64_bits(_8234_val));
			_8413_flt=(&(_1ec95e245_F64_INFO));
		}
		goto _match_end_4327182800;
		_case_end_4327183856:;
		_case_begin_4327182256:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_4327182800;
		_case_end_4327182256:;
		_match_end_4327182800:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto _match_expr{ _9713_exp };
		if (!(((1LL << _8413_flt->_field_expbits) - 1LL) == _match_expr)) { goto _case_end_4327193040; }
		_case_begin_4327193040:;
		{
			jule::Str _10317_s = jule::Str();
			{
				if (!((_9813_mant != 0LL))) { goto _case_end_4327197184; }
				_case_begin_4327197184:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_4327196288;
				_case_end_4327197184:;
				if (!((_969_neg))) { goto _case_end_4327198160; }
				_case_begin_4327198160:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_4327196288;
				_case_end_4327198160:;
				_case_begin_4327196400:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_4327196288;
				_case_end_4327196400:;
				_match_end_4327196288:;
			}
			return jule::append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_4327191904;
		_case_end_4327193040:;
		if (!((0LL) == _match_expr)) { goto _case_end_4327194464; }
		_case_begin_4327194464:;
		{
			(_9713_exp)++;
		}
		goto _match_end_4327191904;
		_case_end_4327194464:;
		_case_begin_4327186800:;
		{
			_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
		}
		goto _match_end_4327191904;
		_case_end_4327186800:;
		_match_end_4327191904:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _1ec95e245_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _1ec95e245_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _1ec95e245_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_1ec95e245_DecimalSlice _13413_digs = _1ec95e245_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>({});
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_1d424203b_ryu_ftoa_shortest(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4327210768; }
			_case_begin_4327210768:;
			{
				_8259_prec=static_cast<jule::Int>(_1ec95e245_max(static_cast<jule::Int>(_13413_digs._field_nd - 1LL),0LL));
			}
			goto _match_end_4327210688;
			_case_end_4327210768:;
			if (!(('f') == _match_expr)) { goto _case_end_4327210864; }
			_case_begin_4327210864:;
			{
				_8259_prec=static_cast<jule::Int>(_1ec95e245_max(static_cast<jule::Int>(_13413_digs._field_nd - _13413_digs._field_dp),0LL));
			}
			goto _match_end_4327210688;
			_case_end_4327210864:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4327211248; }
			_case_begin_4327211248:;
			{
				_8259_prec=_13413_digs._field_nd;
			}
			goto _match_end_4327210688;
			_case_end_4327211248:;
			_match_end_4327210688:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15517_digits = _8259_prec;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4327217344; }
			_case_begin_4327217344:;
			{
				(_15517_digits)++;
			}
			goto _match_end_4327216048;
			_case_end_4327217344:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4327216896; }
			_case_begin_4327216896:;
			{
				if (_8259_prec == 0LL) {
					_8259_prec=1LL;
				}
				_15517_digits=_8259_prec;
			}
			goto _match_end_4327216048;
			_case_end_4327216896:;
			_case_begin_4327212112:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_4327216048;
			_case_end_4327212112:;
			_match_end_4327216048:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>({});
		if ((_8270_bit_size == 32LL) && (_15517_digits <= 9LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_1d424203b_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		} else if (_15517_digits <= 18LL) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_1d424203b_ryu_ftoa_fixed64(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _1ec95e245_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _1ec95e245_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



jule::Slice<jule::U8> _1ec95e245_big_ftoa(jule::Slice<jule::U8> _18617_dst,jule::Int _18634_prec,jule::U8 _18645_fmt,jule::Bool _18656_neg,jule::U64 _18713_mant,jule::Int _18724_exp,_1ec95e245_FloatInfo& _18735_flt) {
	_1e103632e_Decimal _18813_d = _1e103632e_Decimal();
	_18813_d._method_assign(_18713_mant);
	_18813_d._method_shift(static_cast<jule::Int>(_18724_exp - static_cast<jule::Int>(_18735_flt._field_mantbits)));
	_1ec95e245_DecimalSlice _19113_digs = _1ec95e245_DecimalSlice();
	jule::Bool _1929_shortest = _18634_prec < 0LL;
	if (_1929_shortest) {
		_1ec95e245_round_shortest(_18813_d,_18713_mant,_18724_exp,_18735_flt);
		_19113_digs=_1ec95e245_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4327240912; }
			_case_begin_4327240912:;
			{
				_18634_prec=static_cast<jule::Int>(_19113_digs._field_nd - 1LL);
			}
			goto _match_end_4327239648;
			_case_end_4327240912:;
			if (!(('f') == _match_expr)) { goto _case_end_4327241008; }
			_case_begin_4327241008:;
			{
				_18634_prec=static_cast<jule::Int>(_1ec95e245_max(static_cast<jule::Int>(_19113_digs._field_nd - _19113_digs._field_dp),0LL));
			}
			goto _match_end_4327239648;
			_case_end_4327241008:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4327241168; }
			_case_begin_4327241168:;
			{
				_18634_prec=_19113_digs._field_nd;
			}
			goto _match_end_4327239648;
			_case_end_4327241168:;
			_match_end_4327239648:;
		}
	} else {
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4327245376; }
			_case_begin_4327245376:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18634_prec + 1LL));
			}
			goto _match_end_4327245296;
			_case_end_4327245376:;
			if (!(('f') == _match_expr)) { goto _case_end_4327241680; }
			_case_begin_4327241680:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18813_d._field_dp + _18634_prec));
			}
			goto _match_end_4327245296;
			_case_end_4327241680:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4327241776; }
			_case_begin_4327241776:;
			{
				if (_18634_prec == 0LL) {
					_18634_prec=1LL;
				}
				_18813_d._method_round(_18634_prec);
			}
			goto _match_end_4327245296;
			_case_end_4327241776:;
			_match_end_4327245296:;
		}
		_19113_digs=_1ec95e245_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _1ec95e245_fmt_digits(_18617_dst,_1929_shortest,_18656_neg,_19113_digs,_18634_prec,_18645_fmt);
}



jule::Slice<jule::U8> _1ec95e245_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_1ec95e245_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto _match_expr{ _22448_fmt };
		if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4327255552; }
		_case_begin_4327255552:;
		{
			return _1ec95e245_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_4327255360;
		_case_end_4327255552:;
		if (!(('f') == _match_expr)) { goto _case_end_4327255664; }
		_case_begin_4327255664:;
		{
			return _1ec95e245_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_4327255360;
		_case_end_4327255664:;
		if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4327255760; }
		_case_begin_4327255760:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if ((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp)) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = _22413_digs._field_dp - 1LL;
			if ((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec)) {
				if (_22437_prec > _22413_digs._field_nd) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _1ec95e245_fmt_e(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_22437_prec - 1LL),static_cast<jule::U8>((_22448_fmt + 'e') - 'g'));
			}
			if (_22437_prec > _22413_digs._field_dp) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _1ec95e245_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_1ec95e245_max(static_cast<jule::Int>(_22437_prec - _22413_digs._field_dp),0LL)));
		}
		goto _match_end_4327255360;
		_case_end_4327255760:;
		_match_end_4327255360:;
	}
	return jule::append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



void _1ec95e245_round_shortest(_1e103632e_Decimal& _26124_d,jule::U64 _26136_mant,jule::Int _26147_exp,_1ec95e245_FloatInfo& _26158_flt) {
	if (_26136_mant == 0LL) {
		_26124_d._field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = _26158_flt._field_bias + 1LL;
	if ((_26147_exp > _2829_minexp) && ((332LL * (_26124_d._field_dp - _26124_d._field_nd)) >= (100LL * (_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits))))) {
		return;
	}
	_1e103632e_Decimal _29113_upper = _1e103632e_Decimal();
	_29113_upper._method_assign(static_cast<jule::U64>((_26136_mant * 2LL) + 1LL));
	_29113_upper._method_shift(static_cast<jule::Int>((_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::U64 _30113_mantlo = 0LLU;
	jule::Int _30213_explo = 0LL;
	if ((_26136_mant > (1LL << _26158_flt._field_mantbits)) || (_26147_exp == _2829_minexp)) {
		_30113_mantlo=static_cast<jule::U64>(_26136_mant - 1LL);
		_30213_explo=_26147_exp;
	} else {
		_30113_mantlo=static_cast<jule::U64>((_26136_mant * 2LL) - 1LL);
		_30213_explo=static_cast<jule::Int>(_26147_exp - 1LL);
	}
	_1e103632e_Decimal _31013_lower = _1e103632e_Decimal();
	_31013_lower._method_assign(static_cast<jule::U64>((_30113_mantlo * 2LL) + 1LL));
	_31013_lower._method_shift(static_cast<jule::Int>((_30213_explo - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::Bool _3179_inclusive = jule::mod(_26136_mant,2LL) == 0LL;
	jule::U8 _33013_upperdelta = 0LLU;
	jule::Int _33413_ui = 0LL;
	for (; ; (_33413_ui)++) {
		{
			jule::Int _33913_mi = (_33413_ui - _29113_upper._field_dp) + _26124_d._field_dp;
			if (_33913_mi >= _26124_d._field_nd) {
				goto _iter_end_4327289088;
			}
			jule::Int _34313_li = (_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp;
			jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
			if ((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd)) {
				_34417_l=_31013_lower._field_d[_34313_li];
			}
			jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
			if (_33913_mi >= 0LL) {
				_34817_m=_26124_d._field_d[_33913_mi];
			}
			jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
			if (_33413_ui < _29113_upper._field_nd) {
				_35217_u=_29113_upper._field_d[_33413_ui];
			}
			jule::Bool _36013_okdown = (_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd));
			{
				if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)))) { goto _case_end_4327304192; }
				_case_begin_4327304192:;
				{
					_33013_upperdelta=2LL;
				}
				goto _match_end_4327301584;
				_case_end_4327304192:;
				if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)))) { goto _case_end_4327304304; }
				_case_begin_4327304304:;
				{
					_33013_upperdelta=1LL;
				}
				goto _match_end_4327301584;
				_case_end_4327304304:;
				if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))))) { goto _case_end_4327304640; }
				_case_begin_4327304640:;
				{
					_33013_upperdelta=2LL;
				}
				goto _match_end_4327301584;
				_case_end_4327304640:;
				_match_end_4327301584:;
			}
			jule::Bool _38113_okup = (_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd));
			{
				if (!((_36013_okdown && _38113_okup))) { goto _case_end_4327309904; }
				_case_begin_4327309904:;
				{
					_26124_d._method_round(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4327295504;
				_case_end_4327309904:;
				if (!((_36013_okdown))) { goto _case_end_4327309728; }
				_case_begin_4327309728:;
				{
					_26124_d._method_round_down(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4327295504;
				_case_end_4327309728:;
				if (!((_38113_okup))) { goto _case_end_4327310416; }
				_case_begin_4327310416:;
				{
					_26124_d._method_round_up(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4327295504;
				_case_end_4327310416:;
				_match_end_4327295504:;
			}
		}
	_iter_next_4327289088:;
	}
	_iter_end_4327289088:;
}



jule::Slice<jule::U8> _1ec95e245_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_1ec95e245_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'-'}));
	}
	jule::U8 _40713_ch = '0';
	if (_40038_d._field_nd != 0LL) {
		_40713_ch=_40038_d._field_d[0LL];
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	if (_40055_prec > 0LL) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = _1ec95e245_min(_40038_d._field_nd,static_cast<jule::Int>(_40055_prec + 1LL));
		if (_41617_i < _41713_m) {
			_40014_dst=jule::append(_40014_dst,_40038_d._field_d.slice(_41617_i,_41713_m));
			_41617_i=_41713_m;
		}
		for (; _41617_i <= _40055_prec; (_41617_i)++) {
			{
				_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0'}));
			}
		_iter_next_4327329168:;
		}
		_iter_end_4327329168:;
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40066_fmt}));
	jule::Int _42913_exp = _40038_d._field_dp - 1LL;
	if (_40038_d._field_nd == 0LL) {
		_42913_exp=0LL;
	}
	if (_42913_exp < 0LL) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-(_42913_exp)));
	} else {
		_40713_ch='+';
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	{
		if (!((_42913_exp < 10LL))) { goto _case_end_4327326848; }
		_case_begin_4327326848:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0',static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp) + '0')}));
		}
		goto _match_end_4327328032;
		_case_end_4327326848:;
		if (!((_42913_exp < 100LL))) { goto _case_end_4327334368; }
		_case_begin_4327334368:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4327328032;
		_case_end_4327334368:;
		_case_begin_4327333984:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,100LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_42913_exp,10LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4327328032;
		_case_end_4327333984:;
		_match_end_4327328032:;
	}
	return _40014_dst;
}



jule::Slice<jule::U8> _1ec95e245_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_1ec95e245_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'-'}));
	}
	if (_45538_d._field_dp > 0LL) {
		jule::Int _46317_m = _1ec95e245_min(_45538_d._field_nd,_45538_d._field_dp);
		_45514_dst=jule::append(_45514_dst,_45538_d._field_d.slice(0LL,_46317_m));
		for (; _46317_m < _45538_d._field_dp; (_46317_m)++) {
			{
				_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
			}
		_iter_next_4327347760:;
		}
		_iter_end_4327347760:;
	} else {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
	}
	if (_45555_prec > 0LL) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _47417_i = 0LL;
		for (; _47417_i < _45555_prec; (_47417_i)++) {
			{
				jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
				jule::Int _47717_j = _45538_d._field_dp + _47417_i;
				if ((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd)) {
					_47621_ch=_45538_d._field_d[_47717_j];
				}
				_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({_47621_ch}));
			}
		_iter_next_4327347024:;
		}
		_iter_end_4327347024:;
	}
	return _45514_dst;
}



jule::Slice<jule::U8> _1ec95e245_fmt_b(jule::Slice<jule::U8> _48814_dst,jule::Bool _48827_neg,jule::U64 _48838_mant,jule::Int _48853_exp,_1ec95e245_FloatInfo& _48864_flt) {
	if (_48827_neg) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'-'}));
	}
	std::tie(_48814_dst,std::ignore) = _1e103784c_fmt_bits(_48814_dst,_48838_mant,10LL,false,true);
	_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'p'}));
	_48853_exp-=static_cast<jule::Int>(_48864_flt._field_mantbits);
	if (_48853_exp >= 0LL) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'+'}));
	}
	std::tie(_48814_dst,std::ignore) = _1e103784c_fmt_bits(_48814_dst,static_cast<jule::U64>(_48853_exp),10LL,_48853_exp < 0LL,true);
	return _48814_dst;
}



jule::Slice<jule::U8> _1ec95e245_fmt_x(jule::Slice<jule::U8> _51014_dst,jule::Int _51027_prec,jule::U8 _51038_fmt,jule::Bool _51049_neg,jule::U64 _51113_mant,jule::Int _51128_exp,_1ec95e245_FloatInfo& _51139_flt) {
	if (_51113_mant == 0LL) {
		_51128_exp=0LL;
	}
	_51113_mant<<=static_cast<jule::Uint>(60LL - _51139_flt._field_mantbits);
	while ((_51113_mant != 0LL) && ((_51113_mant & 1152921504606846976LLU) == 0LL)) {
		{
			_51113_mant<<=1LL;
			(_51128_exp)--;
		}
	_iter_next_4327367728:;
	}
	_iter_end_4327367728:;
	if ((_51027_prec >= 0LL) && (_51027_prec < 15LL)) {
		jule::Uint _52513_shift = static_cast<jule::Uint>(_51027_prec * 4LL);
		jule::U64 _52613_extra = (_51113_mant << _52513_shift) & 1152921504606846975LLU;
		_51113_mant>>=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_52613_extra | (_51113_mant & 1LL)) > 576460752303423488LLU) {
			(_51113_mant)++;
		}
		_51113_mant<<=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_51113_mant & 2305843009213693952LLU) != 0LL) {
			_51113_mant>>=1LL;
			(_51128_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if (_51038_fmt == 'X') {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51049_neg) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'-'}));
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'0',_51038_fmt,static_cast<jule::U8>('0' + static_cast<jule::U8>((_51113_mant >> 60LL) & 1LL))}));
	_51113_mant<<=4LL;
	if ((_51027_prec < 0LL) && (_51113_mant != 0LL)) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		while (_51113_mant != 0LL) {
			{
				_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
				_51113_mant<<=4LL;
			}
		_iter_next_4327382256:;
		}
		_iter_end_4327382256:;
	} else if (_51027_prec > 0LL) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _56017_i = 0LL;
		for (; _56017_i < _51027_prec; (_56017_i)++) {
			{
				_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
				_51113_mant<<=4LL;
			}
		_iter_next_4327381024:;
		}
		_iter_end_4327381024:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if (_51038_fmt == _1ec95de8c_lower(_51038_fmt)) {
		_56813_ch='p';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	if (_51128_exp < 0LL) {
		_56813_ch='-';
		_51128_exp=static_cast<jule::Int>((-(_51128_exp)));
	} else {
		_56813_ch='+';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	{
		if (!((_51128_exp < 100LL))) { goto _case_end_4327397744; }
		_case_begin_4327397744:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4327386608;
		_case_end_4327397744:;
		if (!((_51128_exp < 1000LL))) { goto _case_end_4327376688; }
		_case_begin_4327376688:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,100LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4327386608;
		_case_end_4327376688:;
		_case_begin_4327392544:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,1000LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_51128_exp,100LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4327386608;
		_case_end_4327392544:;
		_match_end_4327386608:;
	}
	return _51014_dst;
}



jule::Int _1ec95e245_min(jule::Int _5938_a,jule::Int _59316_b) {
	if (_5938_a < _59316_b) {
		return _5938_a;
	}
	return _59316_b;
}



jule::Int _1ec95e245_max(jule::Int _6008_a,jule::Int _60016_b) {
	if (_6008_a > _60016_b) {
		return _6008_a;
	}
	return _60016_b;
}



jule::U8 _1ec95de8c_lower(jule::U8 _4910_c) {
	return static_cast<jule::U8>(_4910_c | 32LL);
}



std::tuple<jule::U64,jule::Int> _1ec95de8c_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str()) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)))) { goto _case_end_4327411104; }
		goto _match_end_4327408592;
		_case_end_4327411104:;
		if (!((_5435_base == 0LL))) { goto _case_end_4327410304; }
		_case_begin_4327410304:;
		{
			_5435_base=10LL;
			if (_5423_s[0LL] == '0') {
				{
					if (!(((_5423_s.len() >= 3LL) && (_1ec95de8c_lower(_5423_s[1LL]) == 'b')))) { goto _case_end_4327414832; }
					_case_begin_4327414832:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4327413600;
					_case_end_4327414832:;
					if (!(((_5423_s.len() >= 3LL) && (_1ec95de8c_lower(_5423_s[1LL]) == 'o')))) { goto _case_end_4327414528; }
					_case_begin_4327414528:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4327413600;
					_case_end_4327414528:;
					if (!(((_5423_s.len() >= 3LL) && (_1ec95de8c_lower(_5423_s[1LL]) == 'x')))) { goto _case_end_4327415504; }
					_case_begin_4327415504:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4327413600;
					_case_end_4327415504:;
					_case_begin_4327413744:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(1LL);
					}
					goto _match_end_4327413600;
					_case_end_4327413744:;
					_match_end_4327413600:;
				}
			}
		}
		goto _match_end_4327408592;
		_case_end_4327410304:;
		_case_begin_4327407712:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_4327408592;
		_case_end_4327407712:;
		_match_end_4327408592:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LLU;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto _match_expr{ _5435_base };
		if (!((10LL) == _match_expr)) { goto _case_end_4327425536; }
		_case_begin_4327425536:;
		{
			_9313_cutoff=1844674407370955264LL;
		}
		goto _match_end_4327421744;
		_case_end_4327425536:;
		if (!((16LL) == _match_expr)) { goto _case_end_4327426576; }
		_case_begin_4327426576:;
		{
			_9313_cutoff=1152921504606846976LL;
		}
		goto _match_end_4327421744;
		_case_end_4327426576:;
		_case_begin_4327423200:;
		{
			_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
		}
		goto _match_end_4327421744;
		_case_end_4327423200:;
		_match_end_4327421744:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto _match_expr{ _5450_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4327427824; }
		_case_begin_4327427824:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_4327424976;
		_case_end_4327427824:;
		if (!((64LL) == _match_expr)) { goto _case_end_4327409808; }
		_case_begin_4327409808:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_4327424976;
		_case_end_4327409808:;
		_match_end_4327424976:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto expr = _5423_s;
		auto it = expr.begin();
		_iter_begin_4327430560:;
		if (it != expr.end()) {
			jule::U8 _1ec95de8c_c = *it;
			{
				jule::U8 _11417_d = 0LLU;
				{
					if (!((('0' <= _1ec95de8c_c) && (_1ec95de8c_c <= '9')))) { goto _case_end_4327434896; }
					_case_begin_4327434896:;
					{
						_11417_d=static_cast<jule::U8>(_1ec95de8c_c - '0');
					}
					goto _match_end_4327433008;
					_case_end_4327434896:;
					if (!((('a' <= _1ec95de8c_lower(_1ec95de8c_c)) && (_1ec95de8c_lower(_1ec95de8c_c) <= 'z')))) { goto _case_end_4327434096; }
					_case_begin_4327434096:;
					{
						_11417_d=static_cast<jule::U8>((_1ec95de8c_lower(_1ec95de8c_c) - 'a') + 10LL);
					}
					goto _match_end_4327433008;
					_case_end_4327434096:;
					_case_begin_4327433120:;
					{
						return std::make_tuple(0LL,2LLU);
					}
					goto _match_end_4327433008;
					_case_end_4327433120:;
					_match_end_4327433008:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LL,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_4327430560:;
			++it;
			goto _iter_begin_4327430560;
		}
		_iter_end_4327430560:;
	}
	return std::make_tuple(_11213_n,0LLU);
}



std::tuple<jule::I64,jule::Int> _1ec95de8c_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::I64 _16562_i = jule::I64();
	jule::Int _16570_err = 0LLU;
	if (_16522_s == jule::Str()) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[0LL] == '+') {
		_16522_s=_16522_s.slice(1LL);
	} else if (_16522_s[0LL] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(1LL);
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _1ec95de8c_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		_16570_err = _16570_err;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LLU;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



std::tuple<jule::F64,jule::Bool> _1ec97c2b8_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(9223372036854775808LLU));
		}
		_4158_f = _4158_f;
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _1e165619b_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1e165619b_mul64(_4123_man,_1ec97c2b8_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL][1LL]);
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1e165619b_mul64(_4123_man,_1ec97c2b8_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



std::tuple<jule::F32,jule::Bool> _1ec97c2b8_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1e10c0d9c_f32_from_bits(2147483648LLU));
		}
		_11058_f = _11058_f;
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _1e165619b_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1e165619b_mul64(_11023_man,_1ec97c2b8_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL][1LL]);
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1e165619b_mul64(_11023_man,_1ec97c2b8_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_1e10c0d9c_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



jule::Int _1d419b9e0_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+=32LL;
			}
			if (_5217_c != _4542_prefix[_5013_i]) {
				return _5013_i;
			}
		}
	_iter_next_4327550096:;
	}
	_iter_end_4327550096:;
	return _4613_n;
}



std::tuple<jule::F64,jule::Int,jule::Bool> _1d419b9e0_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::Int _6834_n = jule::Int();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s == jule::Str()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto _match_expr{ _6816_s[0LL] };
		if (!(('+') == _match_expr || ('-') == _match_expr)) { goto _case_end_4327562864; }
		_case_begin_4327562864:;
		{
			if (_6816_s[0LL] == '-') {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(1LL);
			goto _case_begin_4327562960;
		}
		goto _match_end_4327562784;
		_case_end_4327562864:;
		if (!(('i') == _match_expr || ('I') == _match_expr)) { goto _case_end_4327562960; }
		_case_begin_4327562960:;
		{
			jule::Int _8317_case_n = _1d419b9e0_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
			if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
				_8317_case_n=3LL;
			}
			if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
				_6826_f = static_cast<jule::F64>(_1e119a00e_inf(_7213_sign));
				_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4327562784;
		_case_end_4327562960:;
		if (!(('n') == _match_expr || ('N') == _match_expr)) { goto _case_end_4327563056; }
		_case_begin_4327563056:;
		{
			if (_1d419b9e0_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
				_6826_f = static_cast<jule::F64>(_1e119a00e_nan());
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4327562784;
		_case_end_4327563056:;
		_match_end_4327562784:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1d419b9e0_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::Int _10340_exp = jule::Int();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (!((_10315_s[_10449_i] == '+'))) { goto _case_end_4327579152; }
		_case_begin_4327579152:;
		{
			(_10449_i)++;
		}
		goto _match_end_4327578320;
		_case_end_4327579152:;
		if (!((_10315_s[_10449_i] == '-'))) { goto _case_end_4327579248; }
		_case_begin_4327579248:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_4327578320;
		_case_end_4327579248:;
		_match_end_4327578320:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[_10449_i] == '0')) && (_1ec95de8c_lower(_10315_s[_10449_i + 1LL]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	for (; _10449_i < _10315_s.len(); (_10449_i)++) {
		{
			jule::U8 _13413_c = _10315_s[_10449_i];
			{
				if (!((_13413_c == '.'))) { goto _case_end_4327595168; }
				_case_begin_4327595168:;
				{
					if (_12813_sawdot) {
						goto _julec_label_loop_end;
					}
					_12813_sawdot=true;
					_13213_dp=_13013_nd;
					goto _iter_next_4327591712;
				}
				goto _match_end_4327595088;
				_case_end_4327595168:;
				if (!((('0' <= _13413_c) && (_13413_c <= '9')))) { goto _case_end_4327595264; }
				_case_begin_4327595264:;
				{
					_12913_sawdigits=true;
					if ((_13413_c == '0') && (_13013_nd == 0LL)) {
						(_13213_dp)--;
						goto _iter_next_4327591712;
					}
					(_13013_nd)++;
					if (_13113_nd_mant < _11913_max_mant_digits) {
						_10325_mantissa*=_11813_base;
						_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
						(_13113_nd_mant)++;
					} else if (_13413_c != '0') {
						_10425_trunc=true;
					}
					goto _iter_next_4327591712;
				}
				goto _match_end_4327595088;
				_case_end_4327595264:;
				if (!((((_11813_base == 16LL) && ('a' <= _1ec95de8c_lower(_13413_c))) && (_1ec95de8c_lower(_13413_c) <= 'f')))) { goto _case_end_4327595360; }
				_case_begin_4327595360:;
				{
					_12913_sawdigits=true;
					(_13013_nd)++;
					if (_13113_nd_mant < _11913_max_mant_digits) {
						_10325_mantissa*=16LL;
						_10325_mantissa+=static_cast<jule::U64>((_1ec95de8c_lower(_13413_c) - 'a') + 10LL);
						(_13113_nd_mant)++;
					} else {
						_10425_trunc=true;
					}
					goto _iter_next_4327591712;
				}
				goto _match_end_4327595088;
				_case_end_4327595360:;
				_match_end_4327595088:;
			}
			goto _iter_end_4327591712;
		}
	_iter_next_4327591712:;
	}
	_iter_end_4327591712:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_1ec95de8c_lower(_10315_s[_10449_i]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[_10449_i] == '+') {
			(_10449_i)++;
		} else if (_10315_s[_10449_i] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[_10449_i] < '0')) || (_10315_s[_10449_i] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		for (; (_10449_i < _10315_s.len()) && (('0' <= _10315_s[_10449_i]) && (_10315_s[_10449_i] <= '9')); (_10449_i)++) {
			{
				if (_20517_e < 10000LL) {
					_20517_e=static_cast<jule::Int>(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[_10449_i])) - '0');
				}
			}
		_iter_next_4327617264:;
		}
		_iter_end_4327617264:;
		_13213_dp+=static_cast<jule::Int>(_20517_e * _19517_esign);
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



std::tuple<jule::F64,jule::Bool> _1d419b9e0_atof64_exact(jule::U64 _43317_mantissa,jule::Int _43336_exp,jule::Bool _43346_neg) {
	jule::F64 _43359_f = jule::F64();
	jule::Bool _43367_ok = jule::Bool();
	if ((_43317_mantissa >> _1ec95e245_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_43359_f,_43367_ok);
	}
	_43359_f=static_cast<jule::F64>(_43317_mantissa);
	if (_43346_neg) {
		_43359_f=static_cast<jule::F64>((-(_43359_f)));
	}
	{
		if (!((_43336_exp == 0LL))) { goto _case_end_4327630352; }
		_case_begin_4327630352:;
		{
			_43359_f = _43359_f;
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4327631280;
		_case_end_4327630352:;
		if (!(((_43336_exp > 0LL) && (_43336_exp <= 37LL)))) { goto _case_end_4327630464; }
		_case_begin_4327630464:;
		{
			if (_43336_exp > 22LL) {
				_43359_f*=_1d419b9e0_F64_POW10[_43336_exp - 22LL];
				_43336_exp=22LL;
			}
			if ((_43359_f > 1000000000000000LL) || (_43359_f < -1000000000000000LL)) {
				return std::make_tuple(_43359_f,_43367_ok);
			}
			_43359_f = static_cast<jule::F64>(_43359_f * _1d419b9e0_F64_POW10[_43336_exp]);
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4327631280;
		_case_end_4327630464:;
		if (!(((_43336_exp < 0LL) && (_43336_exp >= -22LL)))) { goto _case_end_4327630576; }
		_case_begin_4327630576:;
		{
			_43359_f = static_cast<jule::F64>(jule::div(_43359_f,_1d419b9e0_F64_POW10[(-(_43336_exp))]));
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4327631280;
		_case_end_4327630576:;
		_match_end_4327631280:;
	}
	return std::make_tuple(_43359_f,_43367_ok);
}



std::tuple<jule::F64,jule::Bool> _1d419b9e0_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::F64 _47258_f = jule::F64();
	jule::Bool _47266_ok = jule::Bool();
	if ((_47216_mantissa >> _1ec95e245_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (!((_47235_exp == 0LL))) { goto _case_end_4327645344; }
		_case_begin_4327645344:;
		{
			_47258_f = _47258_f;
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4327645872;
		_case_end_4327645344:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)))) { goto _case_end_4327644672; }
		_case_begin_4327644672:;
		{
			if (_47235_exp > 22LL) {
				_47258_f*=_1d419b9e0_F64_POW10[_47235_exp - 22LL];
				_47235_exp=22LL;
			}
			if ((_47258_f > 1000000000000000LL) || (_47258_f < -1000000000000000LL)) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = static_cast<jule::F64>(_47258_f * _1d419b9e0_F64_POW10[_47235_exp]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4327645872;
		_case_end_4327644672:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)))) { goto _case_end_4327644784; }
		_case_begin_4327644784:;
		{
			_47258_f = static_cast<jule::F64>(jule::div(_47258_f,_1d419b9e0_F64_POW10[(-(_47235_exp))]));
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4327645872;
		_case_end_4327644784:;
		_match_end_4327645872:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



std::tuple<jule::F32,jule::Bool> _1d419b9e0_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::F32 _50662_f = jule::F32();
	jule::Bool _50670_ok = jule::Bool();
	if ((_50616_mantissa >> _1ec95e245_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (!((_50635_exp == 0LL))) { goto _case_end_4327658608; }
		_case_begin_4327658608:;
		{
			_50662_f = _50662_f;
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4327659536;
		_case_end_4327658608:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)))) { goto _case_end_4327658720; }
		_case_begin_4327658720:;
		{
			if (_50635_exp > 10LL) {
				_50662_f*=_1d419b9e0_F32_POW10[_50635_exp - 10LL];
				_50635_exp=10LL;
			}
			if ((_50662_f > 10000000LL) || (_50662_f < -10000000LL)) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = static_cast<jule::F32>(_50662_f * _1d419b9e0_F32_POW10[_50635_exp]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4327659536;
		_case_end_4327658720:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)))) { goto _case_end_4327658832; }
		_case_begin_4327658832:;
		{
			_50662_f = static_cast<jule::F32>(jule::div(_50662_f,_1d419b9e0_F32_POW10[(-(_50635_exp))]));
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4327659536;
		_case_end_4327658832:;
		_match_end_4327659536:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



std::tuple<jule::F64,jule::Int> _1d419b9e0_atof_hex(jule::Str _54213_s,_1ec95e245_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	while ((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL)) {
		{
			_54242_mantissa<<=1LL;
			(_54261_exp)--;
		}
	_iter_next_4327673280:;
	}
	_iter_end_4327673280:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	while ((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_4327675504:;
	}
	_iter_end_4327675504:;
	while ((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL))) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_4327677280:;
	}
	_iter_end_4327677280:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=static_cast<jule::U64>(_54242_mantissa & 1LL);
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=static_cast<jule::Int>(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _1ec95e245_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_1e10c0d9c_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(_59613_bits)),_58913_err);
}



std::tuple<jule::F32,jule::Int,jule::Int> _1d419b9e0_atof32(jule::Str _60711_s) {
	jule::F32 _60721_f = jule::F32();
	jule::Int _60729_n = jule::Int();
	jule::Int _60737_err = 0LLU;
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _1d419b9e0_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60729_n = _60919__n;
			_60737_err = 0LLU;
			return std::make_tuple(_60721_f,_60729_n,_60737_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _1d419b9e0_read_float(_60711_s);
	_60729_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60729_n = _60729_n;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0LL;
		std::tie(_62217_ff,_60737_err) = _1d419b9e0_atof_hex(_60711_s.slice(0LL,_60729_n),_1ec95e245_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		_60729_n = _60729_n;
		_60737_err = _60737_err;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _1d419b9e0_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _1ec97c2b8_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
			jule::F32 _64421_f_up = 0LL;
			std::tie(_64421_f_up,_61550_ok) = _1ec97c2b8_eisel_lemire32(static_cast<jule::U64>(_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
	}
	_1e103632e_Decimal _65313_d = _1e103632e_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,_60729_n))))) {
		_60721_f = 0LL;
		_60729_n = _60729_n;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_1ec95e245_F32_INFO);
	_60721_f=static_cast<jule::F32>(_1e10c0d9c_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60737_err=1LLU;
	}
	_60721_f = _60721_f;
	_60729_n = _60729_n;
	_60737_err = _60737_err;
	return std::make_tuple(_60721_f,_60729_n,_60737_err);
}



std::tuple<jule::F64,jule::Int,jule::Int> _1d419b9e0_atof64(jule::Str _66511_s) {
	jule::F64 _66521_f = jule::F64();
	jule::Int _66529_n = jule::Int();
	jule::Int _66537_err = 0LLU;
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _1d419b9e0_special(_66511_s);
		if (_66723_ok) {
			_66521_f = _66714_val;
			_66529_n = _66719__n;
			_66537_err = 0LLU;
			return std::make_tuple(_66521_f,_66529_n,_66537_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _1d419b9e0_read_float(_66511_s);
	_66529_n=_67342__n;
	if ((!(_67350_ok))) {
		_66521_f = 0LL;
		_66529_n = _66529_n;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (_67337_hex) {
		std::tie(_66521_f,_66537_err) = _1d419b9e0_atof_hex(_66511_s.slice(0LL,_66529_n),_1ec95e245_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		_66521_f = _66521_f;
		_66529_n = _66529_n;
		_66537_err = _66537_err;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66521_f,_67350_ok) = _1d419b9e0_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
		std::tie(_66521_f,_67350_ok) = _1ec97c2b8_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
			jule::F64 _70121_f_up = 0LL;
			std::tie(_70121_f_up,_67350_ok) = _1ec97c2b8_eisel_lemire64(static_cast<jule::U64>(_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if (_67350_ok && (_66521_f == _70121_f_up)) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
	}
	_1e103632e_Decimal _71013_d = _1e103632e_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,_66529_n))))) {
		_66521_f = 0LL;
		_66529_n = _66529_n;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_1ec95e245_F64_INFO);
	_66521_f=static_cast<jule::F64>(_1e10c0d9c_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66537_err=1LLU;
	}
	_66521_f = _66521_f;
	_66529_n = _66529_n;
	_66537_err = _66537_err;
	return std::make_tuple(_66521_f,_66529_n,_66537_err);
}



std::tuple<jule::F64,jule::Int,jule::Int> _1d419b9e0_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _1d419b9e0_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _1d419b9e0_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



std::tuple<jule::F64,jule::Int> _1d419b9e0_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _1d419b9e0_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



void _1d424203b_ryu_ftoa_fixed32(_1ec95e245_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _1e165619b_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_1d424203b_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1d424203b_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _1d424203b_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_1d424203b_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



void _1d424203b_ryu_ftoa_fixed64(_1ec95e245_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _1e165619b_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(55LL - _1349_b));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_1d424203b_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _1d424203b_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _1d424203b_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_1d424203b_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



void _1d424203b_format_decimal(_1ec95e245_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _1d424203b_U64_POW10[_20490_prec];
	jule::Int _20613_trimmed = 0LL;
	while (_20445_m >= _2059_max) {
		{
			jule::U64 _20814_a = jule::div(_20445_m,10LL);
			jule::U64 _20817_b = jule::mod(_20445_m,10LL);
			std::tie(_20814_a,_20817_b) = std::make_tuple(jule::div(_20445_m,10LL),jule::mod(_20445_m,10LL));
			_20445_m=_20814_a;
			(_20613_trimmed)++;
			if (_20817_b > 5LL) {
				_20474_round_up=true;
			} else if (_20817_b < 5LL) {
				_20474_round_up=false;
			} else {
				_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
			}
			if (_20817_b != 0LL) {
				_20457_trunc=true;
			}
		}
	_iter_next_4327834864:;
	}
	_iter_end_4327834864:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m = jule::div(_20445_m,10LL);
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	while (_23513_v >= 100LL) {
		{
			jule::U64 _23717_v1 = 0LLU;
			jule::U64 _23817_v2 = 0LLU;
			if ((_23513_v >> 32LL) == 0LL) {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(jule::mod(static_cast<jule::U32>(_23513_v),100LL)));
			} else {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(_23513_v,100LL)),static_cast<jule::U64>(jule::mod(_23513_v,100LL)));
			}
			_23313_n-=2LL;
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
			_23513_v=_23717_v1;
		}
	_iter_next_4327835296:;
	}
	_iter_end_4327835296:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	while (_20424_d._field_d[_20424_d._field_nd - 1LL] == '0') {
		{
			(_20424_d._field_nd)--;
			(_20613_trimmed)++;
		}
	_iter_next_4327860672:;
	}
	_iter_end_4327860672:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



void _1d424203b_ryu_ftoa_shortest(_1ec95e245_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_1ec95e245_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_1e165619b_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_1d424203b_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _1d424203b_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_1d424203b_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _1d424203b_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _1ec95e245_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _1d424203b_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _1d424203b_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _1d424203b_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _1d424203b_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _1d424203b_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _1d424203b_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_1d424203b_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_1d424203b_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_1d424203b_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_1d424203b_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



jule::Int _1d424203b_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>((_38322_x * 78913LL) >> 18LL);
}



jule::Int _1d424203b_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>((_39322_x * 108853LL) >> 15LL);
}



std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1d424203b_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_1ec95e245_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::Int _40274_e2 = jule::Int();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



void _1d424203b_ryu_digits(_1ec95e245_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _1d424203b_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _1d424203b_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _1d424203b_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_1d424203b_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_1d424203b_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		while (_43517_v > 0LL) {
			{
				jule::U32 _43718_v1 = jule::div(_43517_v,10LL);
				jule::U32 _43722_v2 = jule::mod(_43517_v,10LL);
				std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::div(_43517_v,10LL),jule::mod(_43517_v,10LL));
				_43517_v=_43718_v1;
				(_43417_n)--;
				_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
			}
		_iter_next_4327948480:;
		}
		_iter_end_4327948480:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_1d424203b_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[_41520_d._field_nd - 1LL] == '0')) {
		{
			(_41520_d._field_nd)--;
		}
	_iter_next_4327944784:;
	}
	_iter_end_4327944784:;
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0')) {
		{
			(_41520_d._field_nd)--;
			(_41520_d._field_dp)--;
			_41520_d._field_d=_41520_d._field_d.slice(1LL);
		}
	_iter_next_4327957968:;
	}
	_iter_end_4327957968:;
}



void _1d424203b_ryu_digits32(_1ec95e245_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	while (_46121_upper > 0LL) {
		{
			jule::U32 _47613_l = jule::div(_46043_lower + 9LL,10LL);
			jule::U32 _47718_c = jule::div(_46059_central,10LL);
			jule::U32 _47725_cdigit = jule::mod(_46059_central,10LL);
			std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::div(_46059_central,10LL),jule::mod(_46059_central,10LL));
			jule::U32 _47813_u = jule::div(_46121_upper,10LL);
			if (_47613_l > _47813_u) {
				goto _iter_end_4327965920;
			}
			if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
				(_47718_c)++;
				_47725_cdigit=0LL;
				_46151_cup=false;
			}
			(_46613_trimmed)++;
			_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
			_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
			std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
		}
	_iter_next_4327965920:;
	}
	_iter_end_4327965920:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	while (_51813_n > _46022_d._field_nd) {
		{
			jule::U32 _52014_v1 = jule::div(_51713_v,100LL);
			jule::U32 _52018_v2 = jule::mod(_51713_v,100LL);
			std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::div(_51713_v,100LL),jule::mod(_51713_v,100LL));
			_46022_d._field_d[_51813_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
			_46022_d._field_d[_51813_n - 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
			_51813_n-=2LL;
			_51713_v=_52014_v1;
		}
	_iter_next_4327979888:;
	}
	_iter_end_4327979888:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[_51813_n]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



std::tuple<jule::U32,jule::Int,jule::Bool> _1d424203b_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::Int _54262_resE = jule::Int();
	jule::Bool _54273_exact = jule::Bool();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LL);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _1ec97c2b8_DETAILED_POWS_OF_TEN[_54241_q - -348LL][1LL];
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _1e165619b_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_1d424203b_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



std::tuple<jule::U64,jule::Int,jule::Bool> _1d424203b_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::Int _57063_resE = jule::Int();
	jule::Bool _57074_exact = jule::Bool();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LL);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _1ec97c2b8_DETAILED_POWS_OF_TEN[_57042_q - -348LL];
	if (_57042_q < 0LL) {
		_57913_pow[0LL]+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_1d424203b_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _1e165619b_mul64(_57021_m,_57913_pow[0LL]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _1e165619b_mul64(_57021_m,_57913_pow[1LL]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _1e165619b_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



jule::Bool _1d424203b_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	for (; _59813_i < _59434_k; (_59813_i)++) {
		{
			if (jule::mod(_59426_m,5LL) != 0LL) {
				return false;
			}
			_59426_m = jule::div(_59426_m,5LL);
		}
	_iter_next_4328026064:;
	}
	_iter_end_4328026064:;
	return true;
}



std::tuple<jule::U32,jule::U32> _1d424203b_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::div(_61014_x,1000000000LL)),static_cast<jule::U32>(jule::mod(_61014_x,1000000000LL)));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _1e165619b_mul64(static_cast<jule::U64>(_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1000000000LL)));
}



jule::Int _1e103632e_digit_zero(jule::Slice<jule::U8> _26519_dst) {
	{
		auto expr = _26519_dst;
		auto it = expr.begin();
		_iter_begin_4328036736:;
		if (it != expr.end()) {
			jule::Int _1e103632e_i = it - expr.begin();
			{
				_26519_dst[_1e103632e_i]='0';
			}
			_iter_next_4328036736:;
			++it;
			_1e103632e_i++;
			goto _iter_begin_4328036736;
		}
		_iter_end_4328036736:;
	}
	return static_cast<jule::I64>(_26519_dst.len());
}



void _1e103632e_trim(_1e103632e_Decimal& _27514_a) {
	while ((_27514_a._field_nd > 0LL) && (_27514_a._field_d[_27514_a._field_nd - 1LL] == '0')) {
		{
			(_27514_a._field_nd)--;
		}
	_iter_next_4328037536:;
	}
	_iter_end_4328037536:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



void _1e103632e_right_shift(_1e103632e_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	for (; (_29013_n >> _28533_k) == 0LL; (_28613_r)++) {
		{
			if (_28613_r >= _28521_a._field_nd) {
				if (_29013_n == 0LL) {
					_28521_a._field_nd=0LL;
					return;
				}
				while ((_29013_n >> _28533_k) == 0LL) {
					{
						_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
						(_28613_r)++;
					}
				_iter_next_4328049760:;
				}
				_iter_end_4328049760:;
				goto _iter_end_4328044640;
			}
			jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _30413_c) - '0');
		}
	_iter_next_4328044640:;
	}
	_iter_end_4328044640:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	for (; _28613_r < _28521_a._field_nd; (_28613_r)++) {
		{
			jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			jule::Uint _31413_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			_28521_a._field_d[_28713_w]=static_cast<jule::U8>(_31413_dig + '0');
			(_28713_w)++;
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _31313_c) - '0');
		}
	_iter_next_4328054112:;
	}
	_iter_end_4328054112:;
	while (_29013_n > 0LL) {
		{
			jule::Uint _32313_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			if (_28713_w < 800LL) {
				_28521_a._field_d[_28713_w]=static_cast<jule::U8>(_32313_dig + '0');
				(_28713_w)++;
			} else if (_32313_dig > 0LL) {
				_28521_a._field_trunc=true;
			}
			_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
		}
	_iter_next_4328059840:;
	}
	_iter_end_4328059840:;
	_28521_a._field_nd=_28713_w;
	_1e103632e_trim(_28521_a);
}



jule::Bool _1e103632e_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	for (; _34013_i < _33935_s.len(); (_34013_i)++) {
		{
			if (_34013_i >= _33924_b.len()) {
				return true;
			}
			if (_33924_b[_34013_i] != _33935_s[_34013_i]) {
				return _33924_b[_34013_i] < _33935_s[_34013_i];
			}
		}
	_iter_next_4328067728:;
	}
	_iter_end_4328067728:;
	return false;
}



void _1e103632e_left_shift(_1e103632e_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _1e103632e_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_1e103632e_prefix_is_less_than(_35320_a._field_d.slice(0LL,_35320_a._field_nd),_1e103632e_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	for (; _35913_r >= 0LL; (_35913_r)--) {
		{
			_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[_35913_r]) - '0') << _35332_k);
			jule::Uint _36713_quo = jule::div(_36313_n,10LL);
			jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(_36813_rem + '0');
			} else if (_36813_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_36713_quo;
		}
	_iter_next_4328080704:;
	}
	_iter_end_4328080704:;
	while (_36313_n > 0LL) {
		{
			jule::Uint _38013_quo = jule::div(_36313_n,10LL);
			jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(_38113_rem + '0');
			} else if (_38113_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_38013_quo;
		}
	_iter_next_4328086400:;
	}
	_iter_end_4328086400:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_1e103632e_trim(_35320_a);
}



jule::Bool _1e103632e_should_round_up(_1e103632e_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[_40033_nd] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (jule::mod(_40021_a._field_d[_40033_nd - 1LL] - '0',2LL) != 0LL);
	}
	return _40021_a._field_d[_40033_nd] >= '5';
}



jule::Str _1e103784c_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _1e103784c_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _1e103784c_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



jule::Str _1e103784c_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _1e103784c_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _1e103784c_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



jule::Str _1e103784c_itoa(jule::Int _8213_i) {
	return _1e103784c_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



jule::Str _1e103784c_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,_8510_i + 1LL);
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(_8510_i * 2LL,(_8510_i * 2LL) + 2LL);
}



jule::Bool _1e103784c_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



std::tuple<jule::Slice<jule::U8>,jule::Str> _1e103784c_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	jule::Str _9992_s = jule::Str();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>({});
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			while (_9934_u >= 1000000000LL) {
				{
					jule::U64 _12521_q = jule::div(_9934_u,1000000000LL);
					jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1000000000LL));
					jule::Int _12725_j = 4LL;
					for (; _12725_j > 0LL; (_12725_j)--) {
						{
							jule::Uint _12925_is = jule::mod(_12625_us,100LL) * 2LL;
							_12625_us = jule::div(_12625_us,100LL);
							_10613_i-=2LL;
							_10513_a[_10613_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
							_10513_a[_10613_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
						}
					_iter_next_4328128624:;
					}
					_iter_end_4328128624:;
					(_10613_i)--;
					_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
					_9934_u=_12521_q;
				}
			_iter_next_4328127040:;
			}
			_iter_end_4328127040:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		while (_14717_us >= 100LL) {
			{
				jule::Uint _14917_is = jule::mod(_14717_us,100LL) * 2LL;
				_14717_us = jule::div(_14717_us,100LL);
				_10613_i-=2LL;
				_10513_a[_10613_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
				_10513_a[_10613_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
			}
		_iter_next_4328139984:;
		}
		_iter_end_4328139984:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_1e103784c_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_1e165619b_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		while (_9934_u >= _17313_b) {
			{
				(_10613_i)--;
				_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
				_9934_u>>=_17213_shift;
			}
		_iter_next_4328152800:;
		}
		_iter_end_4328152800:;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		while (_9934_u >= _18513_b) {
			{
				(_10613_i)--;
				jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
				_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
				_9934_u=_19117_q;
			}
		_iter_next_4328160432:;
		}
		_iter_end_4328160432:;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[_10613_i]='-';
	}
	if (_9964_append_) {
		_9981_d=jule::append(_9917_dst,_10513_a.slice(_10613_i));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(_10613_i));
	return std::make_tuple(_9981_d,_9992_s);
}



void _1ec945d31_push_opt_level(jule::Int _2823_level) {
	{
		auto _match_expr{ _2823_level };
		if (!((0LLU) == _match_expr)) { goto _case_end_4328301936; }
		_case_begin_4328301936:;
		{
			_1ec945d31_OPT_COPY=false;
			_1ec945d31_OPT_DEADCODE=false;
			_1ec945d31_OPT_APPEND=false;
			_1ec945d31_OPT_MATH=false;
			_1ec945d31_OPT_ACCESS=false;
			_1ec945d31_OPT_INLINE=false;
		}
		goto _match_end_4328300736;
		_case_end_4328301936:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4328302032; }
		_case_begin_4328302032:;
		{
			_1ec945d31_OPT_COPY=true;
			_1ec945d31_OPT_DEADCODE=true;
			_1ec945d31_OPT_APPEND=true;
			_1ec945d31_OPT_MATH=true;
			_1ec945d31_OPT_ACCESS=true;
			_1ec945d31_OPT_INLINE=true;
		}
		goto _match_end_4328300736;
		_case_end_4328302032:;
		_case_begin_4328300544:;
		{
			return;
		}
		goto _match_end_4328300736;
		_case_end_4328300544:;
		_match_end_4328300736:;
	}
}



jule::Bool _1e176da99_full_rune(jule::Slice<jule::U8> _13718_p) {
	if (_13718_p.len() == 0LL) {
		return false;
	}
	jule::U8 _1419_x = _1e176da99_FIRST[static_cast<jule::Int>(_13718_p[0LL])];
	if (_13718_p.len() >= static_cast<jule::Int>(_1419_x & 7LL)) {
		return true;
	}
	_1e176da99_accept_range _1469_accept = _1e176da99_ACCEPT_RANGES[static_cast<jule::Int>(_1419_x >> 4LL)];
	if ((_13718_p.len() > 1LL) && ((_13718_p[1LL] < _1469_accept._field_lo) || (_1469_accept._field_hi < _13718_p[1LL]))) {
		return true;
	} else if ((_13718_p.len() > 2LL) && ((_13718_p[2LL] < 128LL) || (191LL < _13718_p[2LL]))) {
		return true;
	}
	return false;
}



jule::Bool _1e176da99_full_rune_str(jule::Str _15622_s) {
	if (_15622_s.len() == 0LL) {
		return false;
	}
	jule::U8 _1609_x = _1e176da99_FIRST[static_cast<jule::Int>(_15622_s[0LL])];
	if (_15622_s.len() >= static_cast<jule::Int>(_1609_x & 7LL)) {
		return true;
	}
	_1e176da99_accept_range _1659_accept = _1e176da99_ACCEPT_RANGES[static_cast<jule::Int>(_1609_x >> 4LL)];
	if ((_15622_s.len() > 1LL) && ((_15622_s[1LL] < _1659_accept._field_lo) || (_1659_accept._field_hi < _15622_s[1LL]))) {
		return true;
	} else if ((_15622_s.len() > 2LL) && ((_15622_s[2LL] < 128LL) || (191LL < _15622_s[2LL]))) {
		return true;
	}
	return false;
}



std::tuple<jule::I32,jule::Int> _1e176da99_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::Int _18242_size = jule::Int();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _1e176da99_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = static_cast<jule::U8>((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_1e176da99_accept_range _1969_accept = _1e176da99_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



std::tuple<jule::I32,jule::Int> _1e176da99_decode_rune_str(jule::Str _22924_s) {
	jule::I32 _22934_r = jule::I32();
	jule::Int _22943_size = jule::Int();
	if (_22924_s.len() < 1LL) {
		_22934_r = 65533LL;
		_22943_size = 0LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2339_s0 = _22924_s[0LL];
	jule::U8 _2349_x = _1e176da99_FIRST[static_cast<jule::Int>(_2339_s0)];
	if (_2349_x >= 240LL) {
		jule::I32 _23913_mask = static_cast<jule::U8>((_2349_x << 31LL) >> 31LL);
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_22924_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask));
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::Int _2429_sz = static_cast<jule::Int>(_2349_x & 7LL);
	_1e176da99_accept_range _2439_accept = _1e176da99_ACCEPT_RANGES[static_cast<jule::Int>(_2349_x >> 4LL)];
	if (_22924_s.len() < _2429_sz) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2479_s1 = _22924_s[1LL];
	if ((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 2LL) {
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_2339_s0 & 31LL) << 6LL) | static_cast<jule::I32>(_2479_s1 & 63LL));
		_22943_size = 2LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2549_s2 = _22924_s[2LL];
	if ((_2549_s2 < 128LL) || (191LL < _2549_s2)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 3LL) {
		_22934_r = static_cast<jule::I32>(((static_cast<jule::I32>(_2339_s0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2549_s2 & 63LL));
		_22943_size = 3LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2619_s3 = _22924_s[3LL];
	if ((_2619_s3 < 128LL) || (191LL < _2619_s3)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	_22934_r = static_cast<jule::I32>((((static_cast<jule::I32>(_2339_s0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2549_s2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2619_s3 & 63LL));
	_22943_size = 4LL;
	return std::make_tuple(_22934_r,_22943_size);
}



std::tuple<jule::I32,jule::Int> _1e176da99_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::Int _27647_size = jule::Int();
	if (_27625_p.len() == 0LL) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _2809_end = _27625_p.len();
	jule::I64 _28113_start = _2809_end - 1LL;
	_27638_r=static_cast<jule::I32>(_27625_p[_28113_start]);
	if (_27638_r < 128LL) {
		_27638_r = _27638_r;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _28913_lim = _2809_end - 4LL;
	if (_28913_lim < 0LL) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	for (; _28113_start >= _28913_lim; (_28113_start)--) {
		{
			if (_1e176da99_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_4328461392;
			}
		}
	_iter_next_4328461392:;
	}
	_iter_end_4328461392:;
	if (_28113_start < 0LL) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _1e176da99_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	_27638_r = _27638_r;
	_27647_size = _27647_size;
	return std::make_tuple(_27638_r,_27647_size);
}



std::tuple<jule::I32,jule::Int> _1e176da99_decode_last_rune_str(jule::Str _31729_s) {
	jule::I32 _31739_r = jule::I32();
	jule::Int _31748_size = jule::Int();
	if (_31729_s.len() == 0LL) {
		_31739_r = 65533LL;
		_31748_size = 0LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _3219_end = _31729_s.len();
	jule::I64 _32213_start = _3219_end - 1LL;
	_31739_r=static_cast<jule::I32>(_31729_s[_32213_start]);
	if (_31739_r < 128LL) {
		_31739_r = _31739_r;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _33013_lim = _3219_end - 4LL;
	if (_33013_lim < 0LL) {
		_33013_lim=0LL;
	}
	(_32213_start)--;
	for (; _32213_start >= _33013_lim; (_32213_start)--) {
		{
			if (_1e176da99_rune_start(_31729_s[_32213_start])) {
				goto _iter_end_4328475408;
			}
		}
	_iter_next_4328475408:;
	}
	_iter_end_4328475408:;
	if (_32213_start < 0LL) {
		_32213_start=0LL;
	}
	std::tie(_31739_r,_31748_size) = _1e176da99_decode_rune_str(_31729_s.slice(_32213_start,_3219_end));
	if ((_32213_start + _31748_size) != _3219_end) {
		_31739_r = 65533LL;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	_31739_r = _31739_r;
	_31748_size = _31748_size;
	return std::make_tuple(_31739_r,_31748_size);
}



jule::Int _1e176da99_rune_len(jule::I32 _35217_r) {
	{
		if (!((_35217_r < 0LL))) { goto _case_end_4328482432; }
		_case_begin_4328482432:;
		{
			return -1LL;
		}
		goto _match_end_4328479168;
		_case_end_4328482432:;
		if (!((_35217_r <= 127LLU))) { goto _case_end_4328482528; }
		_case_begin_4328482528:;
		{
			return 1LL;
		}
		goto _match_end_4328479168;
		_case_end_4328482528:;
		if (!((_35217_r <= 2047LLU))) { goto _case_end_4328482784; }
		_case_begin_4328482784:;
		{
			return 2LL;
		}
		goto _match_end_4328479168;
		_case_end_4328482784:;
		if (!(((55296LL <= _35217_r) && (_35217_r <= 57343LL)))) { goto _case_end_4328482880; }
		_case_begin_4328482880:;
		{
			return -1LL;
		}
		goto _match_end_4328479168;
		_case_end_4328482880:;
		if (!((_35217_r <= 65535LLU))) { goto _case_end_4328482064; }
		_case_begin_4328482064:;
		{
			return 3LL;
		}
		goto _match_end_4328479168;
		_case_end_4328482064:;
		if (!((_35217_r <= 1114111LL))) { goto _case_end_4328482160; }
		_case_begin_4328482160:;
		{
			return 4LL;
		}
		goto _match_end_4328479168;
		_case_end_4328482160:;
		_case_begin_4328481168:;
		{
			return -1LL;
		}
		goto _match_end_4328479168;
		_case_end_4328481168:;
		_match_end_4328479168:;
	}
}



jule::Int _1e176da99_encode_rune(jule::Slice<jule::U8> _36724_p,jule::I32 _36739_r) {
	jule::U32 _3699_i = static_cast<jule::U32>(_36739_r);
	{
		if (!((_3699_i <= 127LLU))) { goto _case_end_4328489616; }
		_case_begin_4328489616:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(_36739_r);
			return 1LL;
		}
		goto _match_end_4328488720;
		_case_end_4328489616:;
		if (!((_3699_i <= 2047LLU))) { goto _case_end_4328489120; }
		_case_begin_4328489120:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(192LL | static_cast<jule::U8>(_36739_r >> 6LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 2LL;
		}
		goto _match_end_4328488720;
		_case_end_4328489120:;
		if (!((_3699_i > 1114111LL) || ((55296LL <= _3699_i) && (_3699_i <= 57343LL)))) { goto _case_end_4328489216; }
		_case_begin_4328489216:;
		{
			_36739_r=65533LL;
			goto _case_begin_4328489312;
		}
		goto _match_end_4328488720;
		_case_end_4328489216:;
		if (!((_3699_i <= 65535LLU))) { goto _case_end_4328489312; }
		_case_begin_4328489312:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(224LL | static_cast<jule::U8>(_36739_r >> 12LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 3LL;
		}
		goto _match_end_4328488720;
		_case_end_4328489312:;
		_case_begin_4328488832:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(240LL | static_cast<jule::U8>(_36739_r >> 18LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 12LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[3LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 4LL;
		}
		goto _match_end_4328488720;
		_case_end_4328488832:;
		_match_end_4328488720:;
	}
}



jule::Slice<jule::U8> _1e176da99_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (_39835_r <= 127LLU) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(_39835_r)}));
	}
	return _1e176da99_append_rune_non_ascii(_39824_p,_39835_r);
}



jule::Slice<jule::U8> _1e176da99_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		if (!((_4079_i <= 2047LLU))) { goto _case_end_4328514000; }
		_case_begin_4328514000:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LL | static_cast<jule::U8>(_40545_r >> 6LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4328512352;
		_case_end_4328514000:;
		if (!((_4079_i > 1114111LL) || ((55296LL <= _4079_i) && (_4079_i <= 57343LL)))) { goto _case_end_4328519200; }
		_case_begin_4328519200:;
		{
			_40545_r=65533LL;
			goto _case_begin_4328519296;
		}
		goto _match_end_4328512352;
		_case_end_4328519200:;
		if (!((_4079_i <= 65535LLU))) { goto _case_end_4328519296; }
		_case_begin_4328519296:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LL | static_cast<jule::U8>(_40545_r >> 12LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4328512352;
		_case_end_4328519296:;
		_case_begin_4328512464:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LL | static_cast<jule::U8>(_40545_r >> 18LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 12LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4328512352;
		_case_end_4328512464:;
		_match_end_4328512352:;
	}
}



jule::Int _1e176da99_rune_count(jule::Slice<jule::U8> _42319_p) {
	jule::Int _42332_n = jule::Int();
	jule::Int _42413_i = 0LL;
	while (_42413_i < _42319_p.len()) {
		{
			(_42332_n)++;
			jule::U8 _42717_c = _42319_p[_42413_i];
			if (_42717_c < 128LL) {
				(_42413_i)++;
				goto _iter_next_4328521568;
			}
			jule::U8 _43313_x = _1e176da99_FIRST[static_cast<jule::Int>(_42717_c)];
			if (_43313_x == 241LL) {
				(_42413_i)++;
				goto _iter_next_4328521568;
			}
			jule::Int _43817_size = static_cast<jule::Int>(_43313_x & 7LL);
			if ((_42413_i + _43817_size) > _42319_p.len()) {
				(_42413_i)++;
				goto _iter_next_4328521568;
			}
			_1e176da99_accept_range _44313_accept = _1e176da99_ACCEPT_RANGES[static_cast<jule::Int>(_43313_x >> 4LL)];
			_42717_c=_42319_p[_42413_i + 1LL];
			if ((_42717_c < _44313_accept._field_lo) || (_44313_accept._field_hi < _42717_c)) {
				_43817_size=1LL;
			} else if (_43817_size == 2LL) {
			} else {
				_42717_c=_42319_p[_42413_i + 2LL];
				if ((_42717_c < 128LL) || (191LL < _42717_c)) {
					_43817_size=1LL;
				} else if (_43817_size == 3LL) {
				} else {
					_42717_c=_42319_p[_42413_i + 3LL];
					if ((_42717_c < 128LL) || (191LL < _42717_c)) {
						_43817_size=1LL;
					}
				}
			}
			_42413_i+=_43817_size;
		}
	_iter_next_4328521568:;
	}
	_iter_end_4328521568:;
	_42332_n = _42332_n;
	return _42332_n;
}



jule::Int _1e176da99_rune_count_str(jule::Str _46623_s) {
	jule::Int _46633_n = jule::Int();
	jule::Int _46713_i = 0LL;
	for (; _46713_i < _46623_s.len(); (_46633_n)++) {
		{
			jule::U8 _46917_c = _46623_s[_46713_i];
			if (_46917_c < 128LL) {
				(_46713_i)++;
				goto _iter_next_4328554896;
			}
			jule::U8 _47513_x = _1e176da99_FIRST[static_cast<jule::Int>(_46917_c)];
			if (_47513_x == 241LL) {
				(_46713_i)++;
				goto _iter_next_4328554896;
			}
			jule::Int _48017_size = static_cast<jule::Int>(_47513_x & 7LL);
			if ((_46713_i + _48017_size) > _46623_s.len()) {
				(_46713_i)++;
				goto _iter_next_4328554896;
			}
			_1e176da99_accept_range _48513_accept = _1e176da99_ACCEPT_RANGES[static_cast<jule::Int>(_47513_x >> 4LL)];
			_46917_c=_46623_s[_46713_i + 1LL];
			if ((_46917_c < _48513_accept._field_lo) || (_48513_accept._field_hi < _46917_c)) {
				_48017_size=1LL;
			} else if (_48017_size == 2LL) {
			} else {
				_46917_c=_46623_s[_46713_i + 2LL];
				if ((_46917_c < 128LL) || (191LL < _46917_c)) {
					_48017_size=1LL;
				} else if (_48017_size == 3LL) {
				} else {
					_46917_c=_46623_s[_46713_i + 3LL];
					if ((_46917_c < 128LL) || (191LL < _46917_c)) {
						_48017_size=1LL;
					}
				}
			}
			_46713_i+=_48017_size;
		}
	_iter_next_4328554896:;
	}
	_iter_end_4328554896:;
	_46633_n = _46633_n;
	return _46633_n;
}



jule::Bool _1e176da99_rune_start(jule::U8 _51019_b) {
	return (_51019_b & 192LL) != 128LL;
}



jule::Bool _1e176da99_valid(jule::Slice<jule::U8> _51314_p) {
	jule::Slice<jule::U8> _51613_cp = (*((&(_51314_p))));
	while (_51613_cp.len() >= 8LL) {
		{
			jule::U32 _52213_first32 = ((static_cast<jule::U32>(_51613_cp[0LL]) | (static_cast<jule::U32>(_51613_cp[1LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[2LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[3LL]) << 24LL);
			jule::U32 _52313_second32 = ((static_cast<jule::U32>(_51613_cp[4LL]) | (static_cast<jule::U32>(_51613_cp[5LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[6LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[7LL]) << 24LL);
			if (((_52213_first32 | _52313_second32) & 2155905152LL) != 0LL) {
				goto _iter_end_4328579584;
			}
			_51613_cp=_51613_cp.slice(8LL);
		}
	_iter_next_4328579584:;
	}
	_iter_end_4328579584:;
	jule::Int _53013_i = 0LL;
	while (_53013_i < _51613_cp.len()) {
		{
			jule::U8 _53213_pi = _51613_cp[_53013_i];
			if (_53213_pi < 128LL) {
				(_53013_i)++;
				goto _iter_next_4328581088;
			}
			jule::U8 _53713_x = _1e176da99_FIRST[static_cast<jule::Int>(_53213_pi)];
			if (_53713_x == 241LL) {
				return false;
			}
			jule::Int _54113_size = static_cast<jule::Int>(_53713_x & 7LL);
			if ((_53013_i + _54113_size) > _51613_cp.len()) {
				return false;
			}
			_1e176da99_accept_range _54513_accept = _1e176da99_ACCEPT_RANGES[static_cast<jule::Int>(_53713_x >> 4LL)];
			jule::U8 _54617_c = _51613_cp[_53013_i + 1LL];
			if ((_54617_c < _54513_accept._field_lo) || (_54513_accept._field_hi < _54617_c)) {
				return false;
			} else if (_54113_size == 2LL) {
			} else {
				_54617_c=_51613_cp[_53013_i + 2LL];
				if ((_54617_c < 128LL) || (191LL < _54617_c)) {
					return false;
				} else if (_54113_size == 3LL) {
				} else {
					_54617_c=_51613_cp[_53013_i + 3LL];
					if ((_54617_c < 128LL) || (191LL < _54617_c)) {
						return false;
					}
				}
			}
			_53013_i+=_54113_size;
		}
	_iter_next_4328581088:;
	}
	_iter_end_4328581088:;
	return true;
}



jule::Bool _1e176da99_valid_str(jule::Str _56822_s) {
	while (_56822_s.len() >= 8LL) {
		{
			jule::U32 _57313_first32 = ((static_cast<jule::U32>(_56822_s[0LL]) | (static_cast<jule::U32>(_56822_s[1LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[2LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[3LL]) << 24LL);
			jule::U32 _57413_second32 = ((static_cast<jule::U32>(_56822_s[4LL]) | (static_cast<jule::U32>(_56822_s[5LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[6LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[7LL]) << 24LL);
			if (((_57313_first32 | _57413_second32) & 2155905152LL) != 0LL) {
				goto _iter_end_4328611232;
			}
			_56822_s=_56822_s.slice(8LL);
		}
	_iter_next_4328611232:;
	}
	_iter_end_4328611232:;
	jule::Int _58113_i = 0LL;
	while (_58113_i < _56822_s.len()) {
		{
			jule::U8 _58313_si = _56822_s[_58113_i];
			if (_58313_si < 128LL) {
				(_58113_i)++;
				goto _iter_next_4328624688;
			}
			jule::U8 _58813_x = _1e176da99_FIRST[static_cast<jule::Int>(_58313_si)];
			if (_58813_x == 241LL) {
				return false;
			}
			jule::Int _59213_size = static_cast<jule::Int>(_58813_x & 7LL);
			if ((_58113_i + _59213_size) > _56822_s.len()) {
				return false;
			}
			_1e176da99_accept_range _59613_accept = _1e176da99_ACCEPT_RANGES[static_cast<jule::Int>(_58813_x >> 4LL)];
			jule::U8 _59717_c = _56822_s[_58113_i + 1LL];
			if ((_59717_c < _59613_accept._field_lo) || (_59613_accept._field_hi < _59717_c)) {
				return false;
			} else if (_59213_size == 2LL) {
			} else {
				_59717_c=_56822_s[_58113_i + 2LL];
				if ((_59717_c < 128LL) || (191LL < _59717_c)) {
					return false;
				} else if (_59213_size == 3LL) {
				} else {
					_59717_c=_56822_s[_58113_i + 3LL];
					if ((_59717_c < 128LL) || (191LL < _59717_c)) {
						return false;
					}
				}
			}
			_58113_i+=_59213_size;
		}
	_iter_next_4328624688:;
	}
	_iter_end_4328624688:;
	return true;
}



jule::Bool _1e176da99_valid_rune(jule::I32 _62019_r) {
	{
		if (!(((0LL <= _62019_r) && (_62019_r < 55296LL)))) { goto _case_end_4328644624; }
		_case_begin_4328644624:;
		{
			return true;
		}
		goto _match_end_4328642832;
		_case_end_4328644624:;
		if (!(((57343LL < _62019_r) && (_62019_r <= 1114111LL)))) { goto _case_end_4328644720; }
		_case_begin_4328644720:;
		{
			return true;
		}
		goto _match_end_4328642832;
		_case_end_4328644720:;
		_case_begin_4328643008:;
		{
			return false;
		}
		goto _match_end_4328642832;
		_case_end_4328643008:;
		_match_end_4328642832:;
	}
}



jule::Int _1e14c6bed_get_last_fs_error(void) {
	jule::Int _739_err = _1d403842b_get_last_errno();
	{
		auto _match_expr{ _739_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4328676672; }
		_case_begin_4328676672:;
		{
			return 1LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328676672:;
		if (!((5LL) == _match_expr)) { goto _case_end_4328676768; }
		_case_begin_4328676768:;
		{
			return 2LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328676768:;
		if (!((114LL) == _match_expr)) { goto _case_end_4328676304; }
		_case_begin_4328676304:;
		{
			return 3LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328676304:;
		if (!((38LL) == _match_expr)) { goto _case_end_4328676400; }
		_case_begin_4328676400:;
		{
			return 4LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328676400:;
		if (!((2LL) == _match_expr)) { goto _case_end_4328676496; }
		_case_begin_4328676496:;
		{
			return 5LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328676496:;
		if (!((20LL) == _match_expr)) { goto _case_end_4328676880; }
		_case_begin_4328676880:;
		{
			return 6LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328676880:;
		if (!((132LL) == _match_expr)) { goto _case_end_4328676976; }
		_case_begin_4328676976:;
		{
			return 7LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328676976:;
		if (!((9LL) == _match_expr)) { goto _case_end_4328677072; }
		_case_begin_4328677072:;
		{
			return 8LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328677072:;
		if (!((24LL) == _match_expr)) { goto _case_end_4328675696; }
		_case_begin_4328675696:;
		{
			return 9LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328675696:;
		if (!((23LL) == _match_expr)) { goto _case_end_4328675792; }
		_case_begin_4328675792:;
		{
			return 10LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328675792:;
		if (!((12LL) == _match_expr)) { goto _case_end_4328675888; }
		_case_begin_4328675888:;
		{
			return 11LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328675888:;
		if (!((17LL) == _match_expr)) { goto _case_end_4328675984; }
		_case_begin_4328675984:;
		{
			return 12LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328675984:;
		if (!((4LL) == _match_expr)) { goto _case_end_4328677760; }
		_case_begin_4328677760:;
		{
			return 13LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328677760:;
		if (!((22LL) == _match_expr)) { goto _case_end_4328677856; }
		_case_begin_4328677856:;
		{
			return 14LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328677856:;
		if (!((21LL) == _match_expr)) { goto _case_end_4328677968; }
		_case_begin_4328677968:;
		{
			return 15LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328677968:;
		if (!((124LL) == _match_expr)) { goto _case_end_4328678080; }
		_case_begin_4328678080:;
		{
			return 16LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328678080:;
		if (!((28LL) == _match_expr)) { goto _case_end_4328678192; }
		_case_begin_4328678192:;
		{
			return 17LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328678192:;
		if (!((6LL) == _match_expr)) { goto _case_end_4328678304; }
		_case_begin_4328678304:;
		{
			return 18LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328678304:;
		if (!((30LL) == _match_expr)) { goto _case_end_4328678416; }
		_case_begin_4328678416:;
		{
			return 19LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328678416:;
		if (!((11LL) == _match_expr)) { goto _case_end_4328678528; }
		_case_begin_4328678528:;
		{
			return 20LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328678528:;
		if (!((139LL) == _match_expr || (16LL) == _match_expr)) { goto _case_end_4328678640; }
		_case_begin_4328678640:;
		{
			return 21LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328678640:;
		if (!((27LL) == _match_expr)) { goto _case_end_4328678752; }
		_case_begin_4328678752:;
		{
			return 22LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328678752:;
		if (!((32LL) == _match_expr)) { goto _case_end_4328678864; }
		_case_begin_4328678864:;
		{
			return 23LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328678864:;
		if (!((34LL) == _match_expr)) { goto _case_end_4328678976; }
		_case_begin_4328678976:;
		{
			return 24LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328678976:;
		if (!((29LL) == _match_expr)) { goto _case_end_4328679088; }
		_case_begin_4328679088:;
		{
			return 25LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328679088:;
		if (!((119LL) == _match_expr)) { goto _case_end_4328679200; }
		_case_begin_4328679200:;
		{
			return 26LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328679200:;
		if (!((104LL) == _match_expr)) { goto _case_end_4328679312; }
		_case_begin_4328679312:;
		{
			return 27LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328679312:;
		if (!((41LL) == _match_expr)) { goto _case_end_4328679424; }
		_case_begin_4328679424:;
		{
			return 28LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328679424:;
		_case_begin_4328674480:;
		{
			return 0LLU;
		}
		goto _match_end_4328675232;
		_case_end_4328674480:;
		_match_end_4328675232:;
	}
}



jule::Bool _1e1736c60_is_console_handle(jule::Uintptr _12322_handle) {
	return ((_12322_handle == _1d40585a0_STDIN) || (_12322_handle == _1d40585a0_STDOUT)) || (_12322_handle == _1d40585a0_STDERR);
}



jule::Bool _1e189a1c0_is_graphic(jule::I32 _5619_r) {
	if (static_cast<jule::U32>(_5619_r) <= 255LL) {
		return (_1e197052b__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_5619_r))] & 144LL) != 0LL;
	}
	return _1e189a1c0_is_in(_5619_r,_1e189a1c0_GRAPHIC_RANGES);
}



jule::Bool _1e189a1c0_is_in(jule::I32 _6614_r,jule::Slice<jule::Ref<_1e1976730_RangeTable>> _6623_ranges) {
	{
		auto expr = _6623_ranges;
		auto it = expr.begin();
		_iter_begin_4332173504:;
		if (it != expr.end()) {
			jule::Ref<_1e1976730_RangeTable> _1e189a1c0_inside = *it;
			{
				if (_1e1976730_is(_1e189a1c0_inside,_6614_r)) {
					return true;
				}
			}
			_iter_next_4332173504:;
			++it;
			goto _iter_begin_4332173504;
		}
		_iter_end_4332173504:;
	}
	return false;
}



jule::Bool _1e189a1c0_is_letter(jule::I32 _7618_r) {
	if (static_cast<jule::U32>(_7618_r) <= 255LL) {
		return (_1e197052b__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_7618_r))] & 96LL) != 0LL;
	}
	return _1e1976730_is_excluding_latin(_1e197052b_LETTER,_7618_r);
}



jule::Bool _1e189a1c0_is_number(jule::I32 _8418_r) {
	if (static_cast<jule::U32>(_8418_r) <= 255LL) {
		return (_1e197052b__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_8418_r))] & 4LL) != 0LL;
	}
	return _1e1976730_is_excluding_latin(_1e197052b_NUMBER,_8418_r);
}



jule::Bool _1e189a1c0_is_punct(jule::I32 _9217_r) {
	if (static_cast<jule::U32>(_9217_r) <= 255LL) {
		return (_1e197052b__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_9217_r))] & 2LL) != 0LL;
	}
	return _1e1976730_is(_1e197052b_PUNCT,_9217_r);
}



jule::Bool _1e189a1c0_is_space(jule::I32 _10717_r) {
	if (static_cast<jule::U32>(_10717_r) <= 255LL) {
		{
			auto _match_expr{ _10717_r };
			if (!(('\t') == _match_expr || ('\n') == _match_expr || ('\v') == _match_expr || ('\f') == _match_expr || ('\r') == _match_expr || (' ') == _match_expr || (133LL) == _match_expr || (160LL) == _match_expr)) { goto _case_end_4332183072; }
			_case_begin_4332183072:;
			{
				return true;
			}
			goto _match_end_4332186288;
			_case_end_4332183072:;
			_match_end_4332186288:;
		}
		return false;
	}
	return _1e1976730_is_excluding_latin(_1e197052b_WHITE_SPACE,_10717_r);
}



jule::Bool _1e195d030_is_digit(jule::I32 _3917_r) {
	if (_3917_r <= 255LL) {
		return ('0' <= _3917_r) && (_3917_r <= '9');
	}
	return _1e1976730_is_excluding_latin(_1e197052b_DIGIT,_3917_r);
}



std::tuple<jule::I32,jule::Bool> _1e1976730___to(jule::Int _1259_case,jule::I32 _12520_r,jule::Slice<_1e1976730_CaseRange> _12529_case_range) {
	jule::I32 _12556_mapped_rune = jule::I32();
	jule::Bool _12575_found_mapping = jule::Bool();
	if ((_1259_case < 0LL) || (3LL <= _1259_case)) {
		_12556_mapped_rune = 65533LL;
		_12575_found_mapping = false;
		return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
	}
	jule::Int _13113_lo = 0LL;
	jule::I64 _13213_hi = _12529_case_range.len();
	while (_13113_lo < _13213_hi) {
		{
			jule::Int _13413_m = _13113_lo + jule::div(_13213_hi - _13113_lo,2LL);
			_1e1976730_CaseRange _13513_cr = _12529_case_range[_13413_m];
			if ((static_cast<jule::I32>(_13513_cr._field_lo) <= _12520_r) && (_12520_r <= static_cast<jule::I32>(_13513_cr._field_hi))) {
				jule::I32 _13717_delta = _13513_cr._field_delta[_1259_case];
				if (_13717_delta > 1114111LL) {
					_12556_mapped_rune = static_cast<jule::I32>(static_cast<jule::I32>(_13513_cr._field_lo) + (((_12520_r - static_cast<jule::I32>(_13513_cr._field_lo)) & -2LL) | static_cast<jule::I32>(_1259_case & 1LL)));
					_12575_found_mapping = true;
					return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
				}
				_12556_mapped_rune = static_cast<jule::I32>(_12520_r + _13717_delta);
				_12575_found_mapping = true;
				return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
			}
			if (_12520_r < static_cast<jule::I32>(_13513_cr._field_lo)) {
				_13213_hi=_13413_m;
			} else {
				_13113_lo=static_cast<jule::Int>(_13413_m + 1LL);
			}
		}
	_iter_next_4332190336:;
	}
	_iter_end_4332190336:;
	_12556_mapped_rune = _12520_r;
	_12575_found_mapping = false;
	return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
}



jule::I32 _1e1976730_to(jule::Int _16311_case,jule::I32 _16326_r) {
	std::tie(_16326_r,std::ignore) = _1e1976730___to(_16311_case,_16326_r,_1e197052b_CASE_RANGES);
	return _16326_r;
}



jule::I32 _1e1976730_to_upper(jule::I32 _16921_r) {
	if (_16921_r <= 127LL) {
		if (('a' <= _16921_r) && (_16921_r <= 'z')) {
			_16921_r-=32LL;
		}
		return _16921_r;
	}
	return static_cast<jule::I32>(_1e1976730_to(0LL,_16921_r));
}



jule::I32 _1e1976730_to_lower(jule::I32 _18021_r) {
	if (_18021_r <= 127LL) {
		if (('A' <= _18021_r) && (_18021_r <= 'Z')) {
			_18021_r+=32LL;
		}
		return _18021_r;
	}
	return static_cast<jule::I32>(_1e1976730_to(1LL,_18021_r));
}



jule::Bool _1e1976730_is16(jule::Slice<_1e1976730_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LL)) {
		{
			auto expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_4332219952:;
			if (it != expr.end()) {
				jule::Int _1e1976730_i = it - expr.begin();
				{
					_1e1976730_Range16* _19417_range = (&(_1919_ranges[_1e1976730_i]));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LL) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4332219952:;
				++it;
				_1e1976730_i++;
				goto _iter_begin_4332219952;
			}
			_iter_end_4332219952:;
		}
		return false;
	}
	jule::Int _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::Int _21113_m = _20813_lo + jule::div(_20913_hi - _20813_lo,2LL);
			_1e1976730_Range16* _21213_range = (&(_1919_ranges[_21113_m]));
			{
				if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
					return (_21213_range->_field_stride == 1LL) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LL);
				}
				if (_19128_r < _21213_range->_field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::Int>(_21113_m + 1LL);
				}
			}
		}
	_iter_next_4332189552:;
	}
	_iter_end_4332189552:;
	return false;
}



jule::Bool _1e1976730_is32(jule::Slice<_1e1976730_Range32> _2289_ranges,jule::U32 _22828_r) {
	if (_2289_ranges.len() <= 18LL) {
		{
			auto expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_4332237424:;
			if (it != expr.end()) {
				jule::Int _1e1976730_i = it - expr.begin();
				{
					_1e1976730_Range32* _23117_range = (&(_2289_ranges[_1e1976730_i]));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LL) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4332237424:;
				++it;
				_1e1976730_i++;
				goto _iter_begin_4332237424;
			}
			_iter_end_4332237424:;
		}
		return false;
	}
	jule::Int _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::Int _24813_m = _24513_lo + jule::div(_24613_hi - _24513_lo,2LL);
			_1e1976730_Range32* _24913_range = (&(_2289_ranges[_24813_m]));
			{
				if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
					return (_24913_range->_field_stride == 1LL) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LL);
				}
				if (_22828_r < _24913_range->_field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::Int>(_24813_m + 1LL);
				}
			}
		}
	_iter_next_4332218848:;
	}
	_iter_end_4332218848:;
	return false;
}



jule::Bool _1e1976730_is(jule::Ref<_1e1976730_RangeTable> _26511_range_tab,jule::I32 _26535_r) {
	jule::Slice<_1e1976730_Range16> &_26610_r16 = _26511_range_tab->_field_r16;
	if ((_26610_r16.len() > 0LL) && (static_cast<jule::U32>(_26535_r) <= static_cast<jule::U32>(_26610_r16[_26610_r16.len() - 1LL]._field_hi))) {
		return _1e1976730_is16(_26610_r16,static_cast<jule::U16>(_26535_r));
	}
	jule::Slice<_1e1976730_Range32> &_27110_r32 = _26511_range_tab->_field_r32;
	if ((_27110_r32.len() > 0LL) && (_26535_r >= static_cast<jule::I32>(_27110_r32[0LL]._field_lo))) {
		return _1e1976730_is32(_27110_r32,static_cast<jule::U32>(_26535_r));
	}
	return false;
}



jule::Bool _1e1976730_is_excluding_latin(jule::Ref<_1e1976730_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_1e1976730_Range16> &_28014_r16 = _27823_range_tab->_field_r16;
		jule::Int _28213_off = _27823_range_tab->_field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[_28014_r16.len() - 1LL]._field_hi))) {
			return _1e1976730_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(_27847_r));
		}
	}
	jule::Slice<_1e1976730_Range32> &_28710_r32 = _27823_range_tab->_field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo))) {
		return _1e1976730_is32(_28710_r32,static_cast<jule::U32>(_27847_r));
	}
	return false;
}



jule::Bool _1e1976730_is_upper(jule::I32 _29517_r) {
	if (static_cast<jule::U32>(_29517_r) <= 255LL) {
		return (_1e197052b__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_29517_r))] & 96LL) == 32LL;
	}
	return _1e1976730_is_excluding_latin(_1e197052b_UPPER,_29517_r);
}



jule::Bool _1e1976730_is_lower(jule::I32 _30417_r) {
	if (static_cast<jule::U32>(_30417_r) <= 255LL) {
		return (_1e197052b__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_30417_r))] & 96LL) == 64LL;
	}
	return _1e1976730_is_excluding_latin(_1e197052b_LOWER,_30417_r);
}



jule::Bool _1e15a2bb9_is_unary_op(jule::Str _31120_kind) {
	{
		auto expr = _1e15a2bb9_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_4332447968:;
		if (it != expr.end()) {
			jule::Str _1e15a2bb9_op = *it;
			{
				if (_31120_kind == _1e15a2bb9_op) {
					return true;
				}
			}
			_iter_next_4332447968:;
			++it;
			goto _iter_begin_4332447968;
		}
		_iter_end_4332447968:;
	}
	return false;
}



jule::Bool _1e15a2bb9_is_bin_op(jule::Str _32218_kind) {
	{
		auto expr = _1e15a2bb9_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_4332451376:;
		if (it != expr.end()) {
			jule::Str _1e15a2bb9_op = *it;
			{
				if (_32218_kind == _1e15a2bb9_op) {
					return true;
				}
			}
			_iter_next_4332451376:;
			++it;
			goto _iter_begin_4332451376;
		}
		_iter_end_4332451376:;
	}
	return false;
}



jule::Bool _1e15a2bb9_is_weak_op(jule::Str _33319_kind) {
	{
		auto expr = _1e15a2bb9_WEAK_OPS;
		auto it = expr.begin();
		_iter_begin_4332449280:;
		if (it != expr.end()) {
			jule::Str _1e15a2bb9_op = *it;
			{
				if (_33319_kind == _1e15a2bb9_op) {
					return true;
				}
			}
			_iter_next_4332449280:;
			++it;
			goto _iter_begin_4332449280;
		}
		_iter_end_4332449280:;
	}
	return false;
}



jule::Bool _1e15a2bb9_is_str(jule::Str _34415_k) {
	return (_34415_k != jule::Str()) && ((_34415_k[0LL] == '\"') || _1e15a2bb9_is_raw_str(_34415_k));
}



jule::Bool _1e15a2bb9_is_raw_str(jule::Str _34619_k) {
	return (_34619_k != jule::Str()) && (_34619_k[0LL] == '`');
}



jule::Bool _1e15a2bb9_is_rune(jule::Str _34916_k) {
	return (_34916_k != jule::Str()) && (_34916_k[0LL] == '\'');
}



jule::Bool _1e15a2bb9_is_nil(jule::Str _35115_k) {
	return _35115_k == jule::Str("nil", 3);
}



jule::Bool _1e15a2bb9_is_bool(jule::Str _35316_k) {
	return (_35316_k == jule::Str("true", 4)) || (_35316_k == jule::Str("false", 5));
}



jule::Bool _1e15a2bb9_contains_any(jule::Str _35517_s,jule::Str _35525_bytes) {
	{
		auto expr = _35525_bytes;
		auto it = expr.begin();
		_iter_begin_4332456384:;
		if (it != expr.end()) {
			jule::U8 _1e15a2bb9_b = *it;
			{
				jule::Int _35713_i = _35517_s.find(static_cast<jule::Str>(_1e15a2bb9_b));
				if (_35713_i >= 0LL) {
					return true;
				}
			}
			_iter_next_4332456384:;
			++it;
			goto _iter_begin_4332456384;
		}
		_iter_end_4332456384:;
	}
	return false;
}



jule::Bool _1e15a2bb9_is_float(jule::Str _36717_k) {
	if (_36717_k.has_prefix(jule::Str("0x", 2))) {
		return _1e15a2bb9_contains_any(_36717_k,jule::Str(".pP", 3));
	}
	return _1e15a2bb9_contains_any(_36717_k,jule::Str(".eE", 3));
}



jule::Bool _1e15a2bb9_is_num(jule::Str _37615_k) {
	if (_37615_k == jule::Str()) {
		return false;
	}
	jule::U8 _3819_b = _37615_k[0LL];
	return (_3819_b == '.') || (('0' <= _3819_b) && (_3819_b <= '9'));
}



jule::Bool _1e15a2bb9_is_lit(jule::Str _38615_k) {
	return (((_1e15a2bb9_is_num(_38615_k) || _1e15a2bb9_is_str(_38615_k)) || _1e15a2bb9_is_rune(_38615_k)) || _1e15a2bb9_is_nil(_38615_k)) || _1e15a2bb9_is_bool(_38615_k);
}



jule::Bool _1e15a2bb9_is_ignore_ident(jule::Str _39124_ident) {
	return _39124_ident == jule::Str("_", 1);
}



jule::Bool _1e15a2bb9_is_anon_ident(jule::Str _39322_ident) {
	return _39322_ident == jule::Str("<anonymous>", 11);
}



jule::Bool _1e15a2bb9_is_punct(jule::I32 _39617_r) {
	{
		auto expr = _1e15a2bb9_PUNCTS;
		auto it = expr.begin();
		_iter_begin_4332480336:;
		if (it != expr.end()) {
			jule::I32 _1e15a2bb9_cr = *it;
			{
				if (_39617_r == _1e15a2bb9_cr) {
					return true;
				}
			}
			_iter_next_4332480336:;
			++it;
			goto _iter_begin_4332480336;
		}
		_iter_end_4332480336:;
	}
	return false;
}



jule::Bool _1e15a2bb9_is_space(jule::I32 _40717_r) {
	{
		auto expr = _1e15a2bb9_SPACES;
		auto it = expr.begin();
		_iter_begin_4332482048:;
		if (it != expr.end()) {
			jule::I32 _1e15a2bb9_cr = *it;
			{
				if (_40717_r == _1e15a2bb9_cr) {
					return true;
				}
			}
			_iter_next_4332482048:;
			++it;
			goto _iter_begin_4332482048;
		}
		_iter_end_4332482048:;
	}
	return false;
}



jule::Bool _1e15a2bb9_is_letter(jule::I32 _41818_r) {
	return _1e189a1c0_is_letter(_41818_r);
}



jule::Bool _1e15a2bb9_is_ident_rune(jule::Str _42422_s) {
	if (_42422_s == jule::Str()) {
		return false;
	}
	if (_42422_s[0LL] != '_') {
		jule::I32 _43014_r;
		std::tie(_43014_r,std::ignore) = _1e176da99_decode_rune_str(_42422_s);
		if ((!(_1e15a2bb9_is_letter(_43014_r)))) {
			return false;
		}
	}
	return true;
}



jule::Bool _1e15a2bb9_is_decimal(jule::U8 _44019_b) {
	return ('0' <= _44019_b) && (_44019_b <= '9');
}



jule::Bool _1e15a2bb9_is_binary(jule::U8 _44218_b) {
	return (_44218_b == '0') || (_44218_b == '1');
}



jule::Bool _1e15a2bb9_is_octal(jule::U8 _44417_b) {
	return ('0' <= _44417_b) && (_44417_b <= '7');
}



jule::Bool _1e15a2bb9_is_hex(jule::U8 _44715_b) {
	{
		if (!((('0' <= _44715_b) && (_44715_b <= '9')))) { goto _case_end_4332494800; }
		_case_begin_4332494800:;
		{
			return true;
		}
		goto _match_end_4332494416;
		_case_end_4332494800:;
		if (!((('a' <= _44715_b) && (_44715_b <= 'f')))) { goto _case_end_4332494896; }
		_case_begin_4332494896:;
		{
			return true;
		}
		goto _match_end_4332494416;
		_case_end_4332494896:;
		if (!((('A' <= _44715_b) && (_44715_b <= 'F')))) { goto _case_end_4332494992; }
		_case_begin_4332494992:;
		{
			return true;
		}
		goto _match_end_4332494416;
		_case_end_4332494992:;
		_case_begin_4332492432:;
		{
			return false;
		}
		goto _match_end_4332494416;
		_case_end_4332492432:;
		_match_end_4332494416:;
	}
}



jule::Bool _1e15a2bb9_is_assign(jule::Uint _45918_id) {
	return ((((((_45918_id == 2LLU) || (_45918_id == 31LLU)) || (_45918_id == 34LLU)) || (_45918_id == 20LLU)) || (_45918_id == 28LLU)) || (_45918_id == 3LLU)) || (_45918_id == 7LLU);
}



jule::Bool _1e15a2bb9_is_postfix_op(jule::Str _47222_kind) {
	{
		auto expr = _1e15a2bb9_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_4332501456:;
		if (it != expr.end()) {
			jule::Str _1e15a2bb9_op = *it;
			{
				if (_47222_kind == _1e15a2bb9_op) {
					return true;
				}
			}
			_iter_next_4332501456:;
			++it;
			goto _iter_begin_4332501456;
		}
		_iter_end_4332501456:;
	}
	return false;
}



jule::Bool _1e15a2bb9_is_assign_op(jule::Str _48321_kind) {
	if (_1e15a2bb9_is_postfix_op(_48321_kind)) {
		return true;
	}
	{
		auto expr = _1e15a2bb9_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_4332504816:;
		if (it != expr.end()) {
			jule::Str _1e15a2bb9_op = *it;
			{
				if (_48321_kind == _1e15a2bb9_op) {
					return true;
				}
			}
			_iter_next_4332504816:;
			++it;
			goto _iter_begin_4332504816;
		}
		_iter_end_4332504816:;
	}
	return false;
}



jule::Ref<_1e17bebd8_File> _1e17bebd8_new_file_set(jule::Str _6421_path) {
	return jule::new_struct<_1e17bebd8_File>(new( std::nothrow ) _1e17bebd8_File(jule::Slice<jule::U8>(),_6421_path,jule::Slice<_1e15a2bb9_Token>()));
}



_1ec8e8025_Log _1e17c9de1_make_err(jule::Int _10313_row,jule::Int _10323_col,jule::Ref<_1e17bebd8_File>& _10334_f,jule::Str _10344_fmt,jule::Slice<jule::Any> _10357_args) {
	return _1ec8e8025_Log(1LLU,_10313_row,_10323_col,_10334_f->_method_path(),_1ec8e8025_logf(_10344_fmt,_10357_args),jule::Str(),jule::Str());
}



jule::Bool _1e17c9de1_bytes_has_prefix(jule::Slice<jule::U8>& _11322_bytes,jule::Str _11337_prefix) {
	if (_11322_bytes.len() < _11337_prefix.len()) {
		return false;
	}
	{
		auto expr = _11337_prefix;
		auto it = expr.begin();
		_iter_begin_4332514576:;
		if (it != expr.end()) {
			jule::Int _1e17c9de1_i = it - expr.begin();
			{
				if (_11322_bytes[_1e17c9de1_i] != _11337_prefix[_1e17c9de1_i]) {
					return false;
				}
			}
			_iter_next_4332514576:;
			++it;
			_1e17c9de1_i++;
			goto _iter_begin_4332514576;
		}
		_iter_end_4332514576:;
	}
	return true;
}



jule::Str _1e17c9de1_float_fmt_e(jule::Slice<jule::U8>& _12517_txt,jule::Int _12534_i) {
	jule::Str _12544_lit = jule::Str();
	(_12534_i)++;
	if (_12534_i >= _12517_txt.len()) {
		return _12544_lit;
	}
	jule::U8 _13113_b = _12517_txt[_12534_i];
	if ((_13113_b == '+') || (_13113_b == '-')) {
		(_12534_i)++;
		if (_12534_i >= _12517_txt.len()) {
			return _12544_lit;
		}
	}
	jule::Int _1399_first = _12534_i;
	for (; _12534_i < _12517_txt.len(); (_12534_i)++) {
		{
			_13113_b=_12517_txt[_12534_i];
			if ((!(_1e15a2bb9_is_decimal(_13113_b)))) {
				goto _iter_end_4332522608;
			}
		}
	_iter_next_4332522608:;
	}
	_iter_end_4332522608:;
	if (_12534_i == _1399_first) {
		_12544_lit = jule::Str();
		return _12544_lit;
	}
	_12544_lit = static_cast<jule::Str>(_12517_txt.slice(0LL,_12534_i));
	return _12544_lit;
}



jule::Str _1e17c9de1_float_fmt_p(jule::Slice<jule::U8>& _15317_txt,jule::Int _15330_i) {
	return _1e17c9de1_float_fmt_e(_15317_txt,_15330_i);
}



jule::Str _1e17c9de1_float_fmt_dotnp(jule::Slice<jule::U8>& _15521_txt,jule::Int _15538_i) {
	if (_15521_txt[_15538_i] != '.') {
		return jule::Str();
	}
	(_15538_i)++;
	_julec_label_loop:;
	for (; _15538_i < _15521_txt.len(); (_15538_i)++) {
		{
			jule::U8 _16313_b = _15521_txt[_15538_i];
			{
				if (!((_1e15a2bb9_is_decimal(_16313_b)))) { goto _case_end_4332534576; }
				_case_begin_4332534576:;
				{
					goto _iter_next_4332532160;
				}
				goto _match_end_4332534128;
				_case_end_4332534576:;
				if (!((_1e17c9de1_is_float_fmt_p(_16313_b,_15538_i)))) { goto _case_end_4332534672; }
				_case_begin_4332534672:;
				{
					return _1e17c9de1_float_fmt_p(_15521_txt,_15538_i);
				}
				goto _match_end_4332534128;
				_case_end_4332534672:;
				_case_begin_4332534240:;
				{
					goto _iter_end_4332532160;
				}
				goto _match_end_4332534128;
				_case_end_4332534240:;
				_match_end_4332534128:;
			}
		}
	_iter_next_4332532160:;
	}
	_iter_end_4332532160:;
	return jule::Str();
}



jule::Str _1e17c9de1_float_fmt_dotfp(jule::Slice<jule::U8>& _17321_txt,jule::Int _17338_i) {
	_17338_i+=2LL;
	return _1e17c9de1_float_fmt_e(_17321_txt,_17338_i);
}



jule::Str _1e17c9de1_float_fmt_dotp(jule::Slice<jule::U8>& _18020_txt,jule::Int _18037_i) {
	(_18037_i)++;
	return _1e17c9de1_float_fmt_e(_18020_txt,_18037_i);
}



jule::Str _1e17c9de1_float_num(jule::Slice<jule::U8>& _18715_txt,jule::Int _18732_i) {
	jule::Str _18742_lit = jule::Str();
	(_18732_i)++;
	for (; _18732_i < _18715_txt.len(); (_18732_i)++) {
		{
			jule::U8 _19013_b = _18715_txt[_18732_i];
			if ((_18732_i > 1LL) && ((_19013_b == 'e') || (_19013_b == 'E'))) {
				_18742_lit = _1e17c9de1_float_fmt_e(_18715_txt,_18732_i);
				return _18742_lit;
			}
			if ((!(_1e15a2bb9_is_decimal(_19013_b)))) {
				goto _iter_end_4332539152;
			}
		}
	_iter_next_4332539152:;
	}
	_iter_end_4332539152:;
	if (_18732_i == 1LL) {
		return _18742_lit;
	}
	_18742_lit = static_cast<jule::Str>(_18715_txt.slice(0LL,_18732_i));
	return _18742_lit;
}



jule::Str _1e17c9de1_common_num(jule::Slice<jule::U8>& _20516_txt) {
	jule::Str _20531_lit = jule::Str();
	jule::Int _20613_i = 0LL;
	_julec_label_loop:;
	for (; _20613_i < _20516_txt.len(); (_20613_i)++) {
		{
			jule::U8 _20913_b = _20516_txt[_20613_i];
			{
				if (!((_20913_b == '.'))) { goto _case_end_4332553520; }
				_case_begin_4332553520:;
				{
					_20531_lit = _1e17c9de1_float_num(_20516_txt,_20613_i);
					return _20531_lit;
				}
				goto _match_end_4332553344;
				_case_end_4332553520:;
				if (!((_1e17c9de1_is_float_fmt_e(_20913_b,_20613_i)))) { goto _case_end_4332553632; }
				_case_begin_4332553632:;
				{
					_20531_lit = _1e17c9de1_float_fmt_e(_20516_txt,_20613_i);
					return _20531_lit;
				}
				goto _match_end_4332553344;
				_case_end_4332553632:;
				if (!(((!(_1e15a2bb9_is_decimal(_20913_b)))))) { goto _case_end_4332553744; }
				_case_begin_4332553744:;
				{
					goto _iter_end_4332548352;
				}
				goto _match_end_4332553344;
				_case_end_4332553744:;
				_match_end_4332553344:;
			}
		}
	_iter_next_4332548352:;
	}
	_iter_end_4332548352:;
	if (_20613_i == 0LL) {
		return _20531_lit;
	}
	_20531_lit = static_cast<jule::Str>(_20516_txt.slice(0LL,_20613_i));
	return _20531_lit;
}



jule::Str _1e17c9de1_binary_num(jule::Slice<jule::U8>& _22316_txt) {
	jule::Str _22331_lit = jule::Str();
	if ((!(_1e17c9de1_bytes_has_prefix(_22316_txt,jule::Str("0b", 2))))) {
		_22331_lit = jule::Str();
		return _22331_lit;
	}
	if (_22316_txt.len() < 2LL) {
		return _22331_lit;
	}
	
	jule::Int _23213_i = 2LL;
	for (; _23213_i < _22316_txt.len(); (_23213_i)++) {
		{
			if ((!(_1e15a2bb9_is_binary(_22316_txt[_23213_i])))) {
				goto _iter_end_4332559872;
			}
		}
	_iter_next_4332559872:;
	}
	_iter_end_4332559872:;
	if (_23213_i == 2LL) {
		return _22331_lit;
	}
	_22331_lit = static_cast<jule::Str>(_22316_txt.slice(0LL,_23213_i));
	return _22331_lit;
}



jule::Bool _1e17c9de1_is_float_fmt_e(jule::U8 _24519_b,jule::Int _24528_i) {
	return (_24528_i > 0LL) && ((_24519_b == 'e') || (_24519_b == 'E'));
}



jule::Bool _1e17c9de1_is_float_fmt_p(jule::U8 _24619_b,jule::Int _24628_i) {
	return (_24628_i > 0LL) && ((_24619_b == 'p') || (_24619_b == 'P'));
}



jule::Bool _1e17c9de1_is_float_fmt_dotnp(jule::Slice<jule::U8>& _24824_txt,jule::Int _24841_i) {
	if (_24824_txt[_24841_i] != '.') {
		return false;
	}
	(_24841_i)++;
	_julec_label_loop:;
	for (; _24841_i < _24824_txt.len(); (_24841_i)++) {
		{
			jule::U8 _25613_b = _24824_txt[_24841_i];
			{
				if (!((_1e15a2bb9_is_decimal(_25613_b)))) { goto _case_end_4332575776; }
				_case_begin_4332575776:;
				{
					goto _iter_next_4332573232;
				}
				goto _match_end_4332575328;
				_case_end_4332575776:;
				if (!((_1e17c9de1_is_float_fmt_p(_25613_b,_24841_i)))) { goto _case_end_4332575872; }
				_case_begin_4332575872:;
				{
					return true;
				}
				goto _match_end_4332575328;
				_case_end_4332575872:;
				_case_begin_4332575440:;
				{
					goto _iter_end_4332573232;
				}
				goto _match_end_4332575328;
				_case_end_4332575440:;
				_match_end_4332575328:;
			}
		}
	_iter_next_4332573232:;
	}
	_iter_end_4332573232:;
	return false;
}



jule::Bool _1e17c9de1_is_float_fmt_dotp(jule::Slice<jule::U8>& _26723_txt,jule::Int _26736_i) {
	{
		if (!((_26723_txt.len() < 3LL))) { goto _case_end_4332581856; }
		_case_begin_4332581856:;
		{
			goto _case_begin_4332581952;
		}
		goto _match_end_4332580064;
		_case_end_4332581856:;
		if (!((_26723_txt[_26736_i] != '.'))) { goto _case_end_4332581952; }
		_case_begin_4332581952:;
		{
			goto _case_begin_4332582064;
		}
		goto _match_end_4332580064;
		_case_end_4332581952:;
		if (!(((_26723_txt[_26736_i + 1LL] != 'p') && (_26723_txt[_26736_i + 1LL] != 'P')))) { goto _case_end_4332582064; }
		_case_begin_4332582064:;
		{
			return false;
		}
		goto _match_end_4332580064;
		_case_end_4332582064:;
		_case_begin_4332580224:;
		{
			return true;
		}
		goto _match_end_4332580064;
		_case_end_4332580224:;
		_match_end_4332580064:;
	}
}



jule::Bool _1e17c9de1_is_float_fmt_dotfp(jule::Slice<jule::U8>& _27624_txt,jule::Int _27637_i) {
	{
		if (!((_27624_txt.len() < 4LL))) { goto _case_end_4332587856; }
		_case_begin_4332587856:;
		{
			goto _case_begin_4332587952;
		}
		goto _match_end_4332586080;
		_case_end_4332587856:;
		if (!((_27624_txt[_27637_i] != '.'))) { goto _case_end_4332587952; }
		_case_begin_4332587952:;
		{
			goto _case_begin_4332588064;
		}
		goto _match_end_4332586080;
		_case_end_4332587952:;
		if (!(((_27624_txt[_27637_i + 1LL] != 'f') && (_27624_txt[_27637_i + 1LL] != 'F')))) { goto _case_end_4332588064; }
		_case_begin_4332588064:;
		{
			goto _case_begin_4332586512;
		}
		goto _match_end_4332586080;
		_case_end_4332588064:;
		if (!(((_27624_txt[_27637_i + 2LL] != 'p') && (_27624_txt[_27637_i + 1LL] != 'P')))) { goto _case_end_4332586512; }
		_case_begin_4332586512:;
		{
			return false;
		}
		goto _match_end_4332586080;
		_case_end_4332586512:;
		_case_begin_4332586208:;
		{
			return true;
		}
		goto _match_end_4332586080;
		_case_end_4332586208:;
		_match_end_4332586080:;
	}
}



jule::Str _1e17c9de1_octal_num(jule::Slice<jule::U8>& _28615_txt) {
	jule::Str _28630_lit = jule::Str();
	if (_28615_txt[0LL] != '0') {
		_28630_lit = jule::Str();
		return _28630_lit;
	}
	if (_28615_txt.len() < 2LL) {
		return _28630_lit;
	}
	jule::Int _29413_octal_start = 1LL;
	if (_28615_txt[1LL] == 'o') {
		if (_28615_txt.len() < 3LL) {
			return _28630_lit;
		}
		(_29413_octal_start)++;
	}
	jule::Int _30313_i = _29413_octal_start;
	for (; _30313_i < _28615_txt.len(); (_30313_i)++) {
		{
			jule::U8 _30513_b = _28615_txt[_30313_i];
			if (_1e17c9de1_is_float_fmt_e(_30513_b,_30313_i)) {
				_28630_lit = _1e17c9de1_float_fmt_e(_28615_txt,_30313_i);
				return _28630_lit;
			}
			if ((!(_1e15a2bb9_is_octal(_30513_b)))) {
				goto _iter_end_4332597136;
			}
		}
	_iter_next_4332597136:;
	}
	_iter_end_4332597136:;
	if (_30313_i == _29413_octal_start) {
		return _28630_lit;
	}
	_28630_lit = static_cast<jule::Str>(_28615_txt.slice(0LL,_30313_i));
	return _28630_lit;
}



jule::Str _1e17c9de1_hex_num(jule::Slice<jule::U8>& _32013_txt) {
	jule::Str _32028_lit = jule::Str();
	if (_32013_txt.len() < 3LL) {
		return _32028_lit;
	}
	if ((_32013_txt[0LL] != '0') || ((_32013_txt[1LL] != 'x') && (_32013_txt[1LL] != 'X'))) {
		return _32028_lit;
	}
	
	jule::Int _32913_i = 2LL;
	_julec_label_loop:;
	for (; _32913_i < _32013_txt.len(); (_32913_i)++) {
		{
			jule::U8 _33213_b = _32013_txt[_32913_i];
			{
				if (!((_1e17c9de1_is_float_fmt_dotp(_32013_txt,_32913_i)))) { goto _case_end_4332614080; }
				_case_begin_4332614080:;
				{
					_32028_lit = _1e17c9de1_float_fmt_dotp(_32013_txt,_32913_i);
					return _32028_lit;
				}
				goto _match_end_4332613872;
				_case_end_4332614080:;
				if (!((_1e17c9de1_is_float_fmt_dotfp(_32013_txt,_32913_i)))) { goto _case_end_4332614192; }
				_case_begin_4332614192:;
				{
					_32028_lit = _1e17c9de1_float_fmt_dotfp(_32013_txt,_32913_i);
					return _32028_lit;
				}
				goto _match_end_4332613872;
				_case_end_4332614192:;
				if (!((_1e17c9de1_is_float_fmt_p(_33213_b,_32913_i)))) { goto _case_end_4332614304; }
				_case_begin_4332614304:;
				{
					_32028_lit = _1e17c9de1_float_fmt_p(_32013_txt,_32913_i);
					return _32028_lit;
				}
				goto _match_end_4332613872;
				_case_end_4332614304:;
				if (!((_1e17c9de1_is_float_fmt_dotnp(_32013_txt,_32913_i)))) { goto _case_end_4332614416; }
				_case_begin_4332614416:;
				{
					_32028_lit = _1e17c9de1_float_fmt_dotnp(_32013_txt,_32913_i);
					return _32028_lit;
				}
				goto _match_end_4332613872;
				_case_end_4332614416:;
				if (!(((!(_1e15a2bb9_is_hex(_33213_b)))))) { goto _case_end_4332614528; }
				_case_begin_4332614528:;
				{
					goto _iter_end_4332611408;
				}
				goto _match_end_4332613872;
				_case_end_4332614528:;
				_match_end_4332613872:;
			}
		}
	_iter_next_4332611408:;
	}
	_iter_end_4332611408:;
	if (_32913_i == 2LL) {
		return _32028_lit;
	}
	_32028_lit = static_cast<jule::Str>(_32013_txt.slice(0LL,_32913_i));
	return _32028_lit;
}



jule::Str _1e17c9de1_hex_escape(jule::Slice<jule::U8>& _35716_txt,jule::Int _35729_n) {
	jule::Str _35739_seq = jule::Str();
	if (_35716_txt.len() < _35729_n) {
		return _35739_seq;
	}
	
	jule::Int _36313_i = 2LL;
	for (; _36313_i < _35729_n; (_36313_i)++) {
		{
			if ((!(_1e15a2bb9_is_hex(_35716_txt[_36313_i])))) {
				return _35739_seq;
			}
		}
	_iter_next_4332611936:;
	}
	_iter_end_4332611936:;
	_35739_seq=static_cast<jule::Str>(_35716_txt.slice(0LL,_35729_n));
	return _35739_seq;
}



jule::Str _1e17c9de1_big_unicode_point_escape(jule::Slice<jule::U8>& _37530_txt) {
	return _1e17c9de1_hex_escape(_37530_txt,10LL);
}



jule::Str _1e17c9de1_little_unicode_point_escape(jule::Slice<jule::U8>& _37733_txt) {
	return _1e17c9de1_hex_escape(_37733_txt,6LL);
}



jule::Str _1e17c9de1_hex_byte_escape(jule::Slice<jule::U8>& _37921_txt) {
	return _1e17c9de1_hex_escape(_37921_txt,4LL);
}



jule::Str _1e17c9de1_byte_escape(jule::Slice<jule::U8>& _38217_txt) {
	jule::Str _38232_seq = jule::Str();
	if (_38217_txt.len() < 4LL) {
		return _38232_seq;
	}
	if (((!(_1e15a2bb9_is_octal(_38217_txt[1LL]))) || (!(_1e15a2bb9_is_octal(_38217_txt[2LL])))) || (!(_1e15a2bb9_is_octal(_38217_txt[3LL])))) {
		return _38232_seq;
	}
	_38232_seq = static_cast<jule::Str>(_38217_txt.slice(0LL,4LL));
	return _38232_seq;
}



jule::Slice<_1ec8e8025_Log> _1e17c9de1_lex(jule::Ref<_1e17bebd8_File> _77816_f) {
	if ((!(jule::real(_77816_f)))) {
		return nullptr;
	}
	_1e17c9de1_Lex _78313_lex = _1e17c9de1_Lex(jule::Slice<_1e15a2bb9_Token>(),_77816_f,0LL,jule::Int(),-1LL,jule::Slice<_1ec8e8025_Log>());
	_78313_lex._method_new_line();
	_78313_lex._method_lex();
	if (_78313_lex._field_errors.len() > 0LL) {
		return _78313_lex._field_errors;
	}
	_77816_f->_field__tokens=_78313_lex._field_tokens;
	return nullptr;
}



jule::Ref<_1e1630153_FileInfo> _1e1630153_parse_file(jule::Ref<_1e17bebd8_File> _2223_f) {
	if ((!(jule::real(_2223_f)))) {
		return jule::new_ref<_1e1630153_FileInfo>();
	}
	jule::Ref<_1e1630153_FileInfo> _2713_finf = jule::new_struct<_1e1630153_FileInfo>(new( std::nothrow ) _1e1630153_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _1e1630153_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors.len() > 0LL) {
		jule::drop(_2713_finf->_field_ast);
	}
	return _2713_finf;
}



jule::Ref<_1e1630153_PackageInfo> _1e1630153_parse_package(jule::Slice<jule::Ref<_1e17bebd8_File>> _3926_filesets) {
	if (_3926_filesets == nullptr) {
		return jule::new_ref<_1e1630153_PackageInfo>();
	}
	jule::Ref<_1e1630153_PackageInfo> _4413_pinf = jule::new_struct<_1e1630153_PackageInfo>(new( std::nothrow ) _1e1630153_PackageInfo());
	_4413_pinf->_field_files=jule::Slice<jule::Ref<_1e1630153_FileInfo>>::alloc(0LL,static_cast<jule::I64>(_3926_filesets.len()));
	{
		auto expr = _3926_filesets;
		auto it = expr.begin();
		_iter_begin_4334313424:;
		if (it != expr.end()) {
			jule::Ref<_1e17bebd8_File> _1e1630153_f = *it;
			{
				if ((!(jule::real(_1e1630153_f)))) {
					goto _iter_next_4334313424;
				}
				jule::Ref<_1e1630153_FileInfo> _5117_finfo = _1e1630153_parse_file(_1e1630153_f);
				_4413_pinf->_field_files=jule::append(_4413_pinf->_field_files,jule::Slice<jule::Ref<_1e1630153_FileInfo>>({_5117_finfo}));
			}
			_iter_next_4334313424:;
			++it;
			goto _iter_begin_4334313424;
		}
		_iter_end_4334313424:;
	}
	return _4413_pinf;
}



std::tuple<jule::Ref<_1e15a53c5_Ast>,jule::Slice<_1ec8e8025_Log>> _1e1630153_parse_fileset(jule::Ref<_1e17bebd8_File> _5822_f) {
	jule::Ref<_1e25dc95b_Parser> _5913_p = jule::new_struct_ref<_1e25dc95b_Parser>(new( std::nothrow ) _1e25dc95b_Parser());
	_5913_p->_method_parse(_5822_f);
	return std::make_tuple(_5913_p->_field_ast,_5913_p->_field_errors);
}



jule::Ref<_1e16025cb_ScopeTree> _1e184a280_new_scope(void) {
	return jule::new_struct<_1e16025cb_ScopeTree>(new( std::nothrow ) _1e16025cb_ScopeTree());
}



std::tuple<jule::Bool,jule::Bool> _1e184a280_is_st(_1e15a2bb9_Token _4410_current,_1e15a2bb9_Token _4426_prev) {
	jule::Bool _4441_ok = jule::Bool();
	jule::Bool _4451_terminated = jule::Bool();
	_4441_ok=(_4410_current._field_id == 5LLU) || (_4426_prev._field_row < _4410_current._field_row);
	_4451_terminated=_4410_current._field_id == 5LLU;
	return std::make_tuple(_4441_ok,_4451_terminated);
}



jule::Bool _1e184a280_prev_is_incomplete_expr(jule::Slice<_1e15a2bb9_Token>& _5029_tokens,jule::Int& _5047_i) {
	if ((_5047_i > 1LL) && (_5029_tokens[_5047_i - 2LL]._field_id == 23LLU)) {
		return false;
	}
	{
		_1e15a2bb9_Token* _5713_prev = (&(_5029_tokens[_5047_i - 1LL]));
		return (_5713_prev->_field_id == 20LLU) || (((_5713_prev->_field_id == 7LLU) && _1e15a2bb9_is_bin_op(_5713_prev->_field_kind)) && (_5713_prev->_field_row < _5029_tokens[_5047_i]._field_row));
	}
}



std::tuple<jule::Int,jule::Bool> _1e184a280_next_st_pos(jule::Slice<_1e15a2bb9_Token>& _6617_tokens,jule::Int _6634_start) {
	jule::Int _6713_brace_n = 0LL;
	jule::Int _6813_i = _6634_start;
	for (; _6813_i < _6617_tokens.len(); (_6813_i)++) {
		{
			jule::Bool _7017_ok = false;
			jule::Bool _7117_terminated = false;
			_1e15a2bb9_Token _7213_tok = _6617_tokens[_6813_i];
			{
				auto _match_expr{ _7213_tok._field_id };
				if (!((3LLU) == _match_expr)) { goto _case_end_4334339504; }
				_case_begin_4334339504:;
				{
					{
						auto _match_expr{ _7213_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4334348928; }
						_case_begin_4334348928:;
						{
							if ((_6713_brace_n == 0LL) && (_6813_i > _6634_start)) {
								if ((!(_1e184a280_prev_is_incomplete_expr(_6617_tokens,_6813_i)))) {
									std::tie(_7017_ok,_7117_terminated) = _1e184a280_is_st(_7213_tok,_6617_tokens[_6813_i - 1LL]);
									if (_7017_ok) {
										goto _julec_label_return;
									}
								}
							}
							(_6713_brace_n)++;
						}
						goto _match_end_4334342848;
						_case_end_4334348928:;
						_case_begin_4334341568:;
						{
							(_6713_brace_n)--;
							if ((_6713_brace_n == 0LL) && ((_6813_i + 1LL) < _6617_tokens.len())) {
								std::tie(_7017_ok,_7117_terminated) = _1e184a280_is_st(_6617_tokens[_6813_i + 1LL],_7213_tok);
								if (_7017_ok) {
									(_6813_i)++;
									goto _julec_label_return;
								}
							}
						}
						goto _match_end_4334342848;
						_case_end_4334341568:;
						_match_end_4334342848:;
					}
					goto _iter_next_4334336496;
				}
				goto _match_end_4334341440;
				_case_end_4334339504:;
				_match_end_4334341440:;
			}
			if (_6713_brace_n != 0LL) {
				goto _iter_next_4334336496;
			}
			if (_6813_i > _6634_start) {
				if (_1e184a280_prev_is_incomplete_expr(_6617_tokens,_6813_i)) {
					goto _iter_next_4334336496;
				}
				std::tie(_7017_ok,_7117_terminated) = _1e184a280_is_st(_7213_tok,_6617_tokens[_6813_i - 1LL]);
			} else {
				std::tie(_7017_ok,_7117_terminated) = _1e184a280_is_st(_7213_tok,_7213_tok);
			}
			if ((!(_7017_ok))) {
				goto _iter_next_4334336496;
			}
			_julec_label_return:;
			if (_7117_terminated) {
				(_6813_i)++;
			}
			return std::make_tuple(_6813_i,_7117_terminated);
		}
	_iter_next_4334336496:;
	}
	_iter_end_4334336496:;
	return std::make_tuple(_6813_i,false);
}



std::tuple<jule::Slice<_1e15a2bb9_Token>,jule::Bool> _1e184a280_skip_st(jule::Int& _12917_i,jule::Slice<_1e15a2bb9_Token> _12929_tokens) {
	jule::Int _1309_start = _12917_i;
	jule::Bool _13113_terminated = false;
	std::tie(_12917_i,_13113_terminated) = _1e184a280_next_st_pos(_12929_tokens,_1309_start);
	jule::Slice<_1e15a2bb9_Token> _13313_st_tokens = _12929_tokens.slice(_1309_start,_12917_i);
	if (_13113_terminated) {
		if (_13313_st_tokens.len() == 1LL) {
			std::tie(_13313_st_tokens,_13113_terminated) = _1e184a280_skip_st(_12917_i,_12929_tokens);
			return std::make_tuple(_13313_st_tokens,_13113_terminated);
		}
		_13313_st_tokens=_13313_st_tokens.slice(0LL,_13313_st_tokens.len() - 1LL);
	}
	return std::make_tuple(_13313_st_tokens,_13113_terminated);
}



jule::Slice<jule::Ref<_1e184a280_Stmt>> _1e184a280_split_stms(jule::Slice<_1e15a2bb9_Token>& _15120_tokens) {
	jule::Slice<jule::Ref<_1e184a280_Stmt>> _15213_stms = nullptr;
	jule::Int _15313_pos = 0LL;
	while (_15313_pos < _15120_tokens.len()) {
		{
			jule::Slice<_1e15a2bb9_Token> _15518_tokens;
			jule::Bool _15526_terminated;
			std::tie(_15518_tokens,_15526_terminated) = _1e184a280_skip_st(_15313_pos,_15120_tokens);
			_15213_stms=jule::append(_15213_stms,jule::Slice<jule::Ref<_1e184a280_Stmt>>({jule::new_struct<_1e184a280_Stmt>(new( std::nothrow ) _1e184a280_Stmt(_15518_tokens,_15526_terminated))}));
		}
	_iter_next_4334369792:;
	}
	_iter_end_4334369792:;
	return _15213_stms;
}



jule::Slice<_1e15a2bb9_Token> _1e1776d27_is_fn_call(jule::Slice<_1e15a2bb9_Token>& _4020_tokens) {
	{
		auto _match_expr{ _4020_tokens[0LL]._field_id };
		if (!((3LLU) == _match_expr || (2LLU) == _match_expr || (1LLU) == _match_expr)) { goto _case_end_4334380848; }
		goto _match_end_4334372752;
		_case_end_4334380848:;
		_case_begin_4334374880:;
		{
			_1e15a2bb9_Token _4813_tok = _4020_tokens[_4020_tokens.len() - 1LL];
			if ((_4813_tok._field_id != 3LLU) && (_4813_tok._field_kind != jule::Str(")", 1))) {
				return nullptr;
			}
		}
		goto _match_end_4334372752;
		_case_end_4334374880:;
		_match_end_4334372752:;
	}
	_1e15a2bb9_Token _5313_tok = _4020_tokens[_4020_tokens.len() - 1LL];
	if ((_5313_tok._field_id != 3LLU) || (_5313_tok._field_kind != jule::Str(")", 1))) {
		return nullptr;
	}
	jule::Int _5713_brace_n = 0LL;
	jule::I64 _6013_i = _4020_tokens.len() - 1LL;
	for (; _6013_i >= 1LL; (_6013_i)--) {
		{
			_5313_tok=_4020_tokens[_6013_i];
			if (_5313_tok._field_id == 3LLU) {
				{
					auto _match_expr{ _5313_tok._field_kind };
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4334385920; }
					_case_begin_4334385920:;
					{
						(_5713_brace_n)++;
					}
					goto _match_end_4334388560;
					_case_end_4334385920:;
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4334388768; }
					_case_begin_4334388768:;
					{
						(_5713_brace_n)--;
					}
					goto _match_end_4334388560;
					_case_end_4334388768:;
					_match_end_4334388560:;
				}
				if (_5713_brace_n == 0LL) {
					return _4020_tokens.slice(0LL,_6013_i);
				}
			}
		}
	_iter_next_4334384544:;
	}
	_iter_end_4334384544:;
	return nullptr;
}



jule::Ref<_1e1776d27_CallData> _1e1776d27_get_call_data(jule::Slice<_1e15a2bb9_Token>& _8223_tokens) {
	jule::Ref<_1e1776d27_CallData> _8313_data = jule::new_struct<_1e1776d27_CallData>(new( std::nothrow ) _1e1776d27_CallData());
	std::tie(_8313_data->_field_expr_tokens,_8313_data->_field_args_tokens) = _1e25dc95b_range_last(_8223_tokens);
	if (_8313_data->_field_expr_tokens.len() == 0LL) {
		return _8313_data;
	}
	_1e15a2bb9_Token _909_token = _8313_data->_field_expr_tokens[_8313_data->_field_expr_tokens.len() - 1LL];
	if ((_909_token._field_id == 3LLU) && (_909_token._field_kind == jule::Str("]", 1))) {
		std::tie(_8313_data->_field_expr_tokens,_8313_data->_field_generics_tokens) = _1e25dc95b_range_last(_8313_data->_field_expr_tokens);
	}
	return _8313_data;
}



jule::Slice<_1e15a2bb9_Token> _1e1776d27_get_block_expr(jule::Slice<_1e15a2bb9_Token>& _9824_tokens) {
	jule::Int _9913_brace_n = 0LL;
	{
		auto expr = _9824_tokens;
		auto it = expr.begin();
		_iter_begin_4334399888:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			_1e15a2bb9_Token _1e1776d27_tok = *it;
			{
				if (_1e1776d27_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1e1776d27_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4334404624; }
						_case_begin_4334404624:;
						{
							if (_9913_brace_n > 0LL) {
								(_9913_brace_n)++;
								goto _match_end_4334403264;
							}
							return _9824_tokens.slice(0LL,_1e1776d27_i);
						}
						goto _match_end_4334403264;
						_case_end_4334404624:;
						if (!((jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4334404032; }
						_case_begin_4334404032:;
						{
							(_9913_brace_n)++;
						}
						goto _match_end_4334403264;
						_case_end_4334404032:;
						_case_begin_4334402576:;
						{
							(_9913_brace_n)--;
						}
						goto _match_end_4334403264;
						_case_end_4334402576:;
						_match_end_4334403264:;
					}
				}
			}
			_iter_next_4334399888:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4334399888;
		}
		_iter_end_4334399888:;
	}
	return nullptr;
}



std::tuple<jule::Slice<_1e15a2bb9_Token>,jule::Slice<_1e15a2bb9_Token>> _1e1776d27_split_colon(jule::Slice<_1e15a2bb9_Token>& _12421_tokens) {
	jule::Int _12513_range_n = 0LL;
	{
		auto expr = _12421_tokens;
		auto it = expr.begin();
		_iter_begin_4334401904:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			_1e15a2bb9_Token _1e1776d27_token = *it;
			{
				{
					auto _match_expr{ _1e1776d27_token._field_id };
					if (!((3LLU) == _match_expr)) { goto _case_end_4334409296; }
					_case_begin_4334409296:;
					{
						{
							auto _match_expr{ _1e1776d27_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4334412256; }
							_case_begin_4334412256:;
							{
								(_12513_range_n)++;
								goto _iter_next_4334401904;
							}
							goto _match_end_4334410832;
							_case_end_4334412256:;
							_case_begin_4334409552:;
							{
								(_12513_range_n)--;
							}
							goto _match_end_4334410832;
							_case_end_4334409552:;
							_match_end_4334410832:;
						}
					}
					goto _match_end_4334409216;
					_case_end_4334409296:;
					if (!((11LLU) == _match_expr)) { goto _case_end_4334409392; }
					_case_begin_4334409392:;
					{
						if (_12513_range_n < 1LL) {
							jule::Slice<_1e15a2bb9_Token> _14225_l = _12421_tokens.slice(0LL,_1e1776d27_i);
							jule::Slice<_1e15a2bb9_Token> _14325_r = _12421_tokens.slice(_1e1776d27_i + 1LL);
							return std::make_tuple(_14225_l,_14325_r);
						}
					}
					goto _match_end_4334409216;
					_case_end_4334409392:;
					_match_end_4334409216:;
				}
			}
			_iter_next_4334401904:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4334401904;
		}
		_iter_end_4334401904:;
	}
	return std::make_tuple(nullptr,nullptr);
}



jule::Slice<_1e15a2bb9_Token> _1e1776d27_eliminate_comments(jule::Slice<_1e15a2bb9_Token>& _18228_tokens) {
	jule::Slice<_1e15a2bb9_Token> _18313_cutted = nullptr;
	{
		auto expr = _18228_tokens;
		auto it = expr.begin();
		_iter_begin_4334418368:;
		if (it != expr.end()) {
			_1e15a2bb9_Token _1e1776d27_token = *it;
			{
				if (_1e1776d27_token._field_id != 18LLU) {
					_18313_cutted=jule::append(_18313_cutted,jule::Slice<_1e15a2bb9_Token>({_1e1776d27_token}));
				}
			}
			_iter_next_4334418368:;
			++it;
			goto _iter_begin_4334418368;
		}
		_iter_end_4334418368:;
	}
	return _18313_cutted;
}



jule::Int _1e1776d27_find_lowest_prec_op(jule::Slice<_1e15a2bb9_Token>& _19425_tokens) {
	_1e1776d27_Precedencer _19513_prec = _1e1776d27_Precedencer();
	jule::Int _19613_brace_n = 0LL;
	jule::Bool _19713_skip_to_next_brace_open = false;
	{
		auto expr = _19425_tokens;
		auto it = expr.begin();
		_iter_begin_4334425712:;
		if (it != expr.end()) {
			jule::Int _1e1776d27_i = it - expr.begin();
			_1e15a2bb9_Token _1e1776d27_token = *it;
			{
				{
					if (!((_1e1776d27_token._field_id == 3LLU))) { goto _case_end_4334428176; }
					_case_begin_4334428176:;
					{
						{
							auto _match_expr{ _1e1776d27_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4334431456; }
							_case_begin_4334431456:;
							{
								_19713_skip_to_next_brace_open=false;
								goto _case_begin_4334432016;
							}
							goto _match_end_4334430624;
							_case_end_4334431456:;
							if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4334432016; }
							_case_begin_4334432016:;
							{
								(_19613_brace_n)++;
							}
							goto _match_end_4334430624;
							_case_end_4334432016:;
							_case_begin_4334429648:;
							{
								(_19613_brace_n)--;
							}
							goto _match_end_4334430624;
							_case_end_4334429648:;
							_match_end_4334430624:;
						}
						goto _iter_next_4334425712;
					}
					goto _match_end_4334427888;
					_case_end_4334428176:;
					if (!((_19713_skip_to_next_brace_open))) { goto _case_end_4334428288; }
					_case_begin_4334428288:;
					{
						goto _iter_next_4334425712;
					}
					goto _match_end_4334427888;
					_case_end_4334428288:;
					if (!((_1e1776d27_token._field_id == 16LLU))) { goto _case_end_4334428400; }
					_case_begin_4334428400:;
					{
						_19713_skip_to_next_brace_open=true;
						goto _iter_next_4334425712;
					}
					goto _match_end_4334427888;
					_case_end_4334428400:;
					if (!((_1e1776d27_i == 0LL))) { goto _case_end_4334428512; }
					_case_begin_4334428512:;
					{
						goto _iter_next_4334425712;
					}
					goto _match_end_4334427888;
					_case_end_4334428512:;
					if (!((_1e1776d27_token._field_id != 7LLU))) { goto _case_end_4334428624; }
					_case_begin_4334428624:;
					{
						goto _iter_next_4334425712;
					}
					goto _match_end_4334427888;
					_case_end_4334428624:;
					if (!((_19613_brace_n > 0LL))) { goto _case_end_4334428736; }
					_case_begin_4334428736:;
					{
						goto _iter_next_4334425712;
					}
					goto _match_end_4334427888;
					_case_end_4334428736:;
					_match_end_4334427888:;
				}
				_1e15a2bb9_Token _23213_left = _19425_tokens[_1e1776d27_i - 1LL];
				if ((_23213_left._field_id == 7LLU) || (_23213_left._field_id == 11LLU)) {
					goto _iter_next_4334425712;
				}
				if (((_1e1776d27_i > 1LL) && (_23213_left._field_id == 3LLU)) && (_23213_left._field_kind == jule::Str("]", 1))) {
					_1e15a2bb9_Token _24017_lleft = _19425_tokens[_1e1776d27_i - 2LL];
					if ((_24017_lleft._field_id == 3LLU) && (_24017_lleft._field_kind == jule::Str("[", 1))) {
						if ((_1e1776d27_token._field_kind == jule::Str("&", 1)) || (_1e1776d27_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_4334425712;
						}
					}
				}
				jule::Int _24913_p = _1e1776d27_token._method_prec();
				if (_24913_p != -1LL) {
					_19513_prec._method_set(_24913_p,jule::Any(_1e1776d27_i));
				}
			}
			_iter_next_4334425712:;
			++it;
			_1e1776d27_i++;
			goto _iter_begin_4334425712;
		}
		_iter_end_4334425712:;
	}
	jule::Any _2559_data = _19513_prec._method_get_lower();
	if (_2559_data == nullptr) {
		return -1LL;
	}
	return _2559_data.operator jule::Int();
}



jule::Ref<_1e16025cb_IdentExpr> _1e1776d27_build_ident_expr(_1e15a2bb9_Token& _26226_token) {
	return jule::new_struct<_1e16025cb_IdentExpr>(new( std::nothrow ) _1e16025cb_IdentExpr(_26226_token,_26226_token._field_kind,false));
}



std::tuple<jule::Slice<_1e15a2bb9_Token>,jule::Int> _1e1776d27_get_range_expr_tokens(jule::Slice<_1e15a2bb9_Token>& _27031_tokens) {
	jule::Int _27113_range_n = 0LL;
	jule::I64 _27213_i = _27031_tokens.len() - 1LL;
	for (; _27213_i >= 0LL; (_27213_i)--) {
		{
			_1e15a2bb9_Token _27413_tok = _27031_tokens[_27213_i];
			if (_27413_tok._field_id == 3LLU) {
				{
					auto _match_expr{ _27413_tok._field_kind };
					if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4334459008; }
					_case_begin_4334459008:;
					{
						(_27113_range_n)++;
					}
					goto _match_end_4334457648;
					_case_end_4334459008:;
					_case_begin_4334456960:;
					{
						(_27113_range_n)--;
					}
					goto _match_end_4334457648;
					_case_end_4334456960:;
					_match_end_4334457648:;
				}
			}
			if (_27113_range_n == 0LL) {
				return std::make_tuple(_27031_tokens.slice(0LL,_27213_i),_27113_range_n);
			}
		}
	_iter_next_4334451184:;
	}
	_iter_end_4334451184:;
	return std::make_tuple(nullptr,_27113_range_n);
}



jule::Bool _1e24d74b0_check_assign_tokens(jule::Slice<_1e15a2bb9_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_1e15a2bb9_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_4334464096:;
		if (it != expr.end()) {
			_1e15a2bb9_Token _1e24d74b0_t = *it;
			{
				if (_1e24d74b0_t._field_id == 3LLU) {
					{
						auto _match_expr{ _1e24d74b0_t._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4334468224; }
						_case_begin_4334468224:;
						{
							(_2113_brace_n)++;
						}
						goto _match_end_4334466864;
						_case_end_4334468224:;
						_case_begin_4334466176:;
						{
							(_2113_brace_n)--;
						}
						goto _match_end_4334466864;
						_case_end_4334466176:;
						_match_end_4334466864:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_4334464096;
				} else if ((_1e24d74b0_t._field_id == 7LLU) && _1e15a2bb9_is_assign_op(_1e24d74b0_t._field_kind)) {
					return true;
				}
			}
			_iter_next_4334464096:;
			++it;
			goto _iter_begin_4334464096;
		}
		_iter_end_4334464096:;
	}
	return false;
}



_1ec8e8025_Log _1e25dc95b_make_err(jule::Int _5113_row,jule::Int _5123_col,jule::Ref<_1e17bebd8_File>& _5134_f,jule::Str _5144_fmt,jule::Slice<jule::Any> _5157_args) {
	return _1ec8e8025_Log(1LLU,_5113_row,_5123_col,_5134_f->_method_path(),_1ec8e8025_logf(_5144_fmt,_5157_args),jule::Str(),jule::Str());
}



jule::Slice<_1e15a2bb9_Token> _1e25dc95b_range(jule::Int& _7015_i,jule::Str _7023_open,jule::Str _7040_close,jule::Slice<_1e15a2bb9_Token>& _7063_tokens) {
	if (_7015_i >= _7063_tokens.len()) {
		return nullptr;
	}
	_1e15a2bb9_Token _759_tok = _7063_tokens[_7015_i];
	if ((_759_tok._field_id != 3LLU) || (_759_tok._field_kind != _7023_open)) {
		return nullptr;
	}
	(_7015_i)++;
	jule::Int _8113_range_n = 1LL;
	jule::Int _829_start = _7015_i;
	for (; (_8113_range_n != 0LL) && (_7015_i < _7063_tokens.len()); (_7015_i)++) {
		{
			_1e15a2bb9_Token _8413_token = _7063_tokens[_7015_i];
			if (_8413_token._field_id == 3LLU) {
				{
					auto _match_expr{ _8413_token._field_kind };
					if (!((_7023_open) == _match_expr)) { goto _case_end_4334486848; }
					_case_begin_4334486848:;
					{
						(_8113_range_n)++;
					}
					goto _match_end_4334486768;
					_case_end_4334486848:;
					if (!((_7040_close) == _match_expr)) { goto _case_end_4334486944; }
					_case_begin_4334486944:;
					{
						(_8113_range_n)--;
					}
					goto _match_end_4334486768;
					_case_end_4334486944:;
					_match_end_4334486768:;
				}
			}
		}
	_iter_next_4334482128:;
	}
	_iter_end_4334482128:;
	return _7063_tokens.slice(_829_start,_7015_i - 1LL);
}



std::tuple<jule::Slice<_1e15a2bb9_Token>,jule::Slice<_1e15a2bb9_Token>> _1e25dc95b_range_last(jule::Slice<_1e15a2bb9_Token>& _10320_tokens) {
	jule::Slice<_1e15a2bb9_Token> _10339_cutted = jule::Slice<_1e15a2bb9_Token>();
	jule::Slice<_1e15a2bb9_Token> _10356_cut = jule::Slice<_1e15a2bb9_Token>();
	if (_10320_tokens.len() == 0LL) {
		_10339_cutted = _10320_tokens;
		_10356_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10356_cut);
	} else if (_10320_tokens[_10320_tokens.len() - 1LL]._field_id != 3LLU) {
		_10339_cutted = _10320_tokens;
		_10356_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10356_cut);
	}
	jule::Int _11013_brace_n = 0LL;
	jule::I64 _11113_i = _10320_tokens.len() - 1LL;
	for (; _11113_i >= 0LL; (_11113_i)--) {
		{
			_1e15a2bb9_Token _11313_token = _10320_tokens[_11113_i];
			if (_11313_token._field_id == 3LLU) {
				{
					auto _match_expr{ _11313_token._field_kind };
					if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4334500336; }
					_case_begin_4334500336:;
					{
						(_11013_brace_n)++;
						goto _iter_next_4334478064;
					}
					goto _match_end_4334498976;
					_case_end_4334500336:;
					_case_begin_4334498288:;
					{
						(_11013_brace_n)--;
					}
					goto _match_end_4334498976;
					_case_end_4334498288:;
					_match_end_4334498976:;
				}
			}
			if (_11013_brace_n == 0LL) {
				_10339_cutted = _10320_tokens.slice(0LL,_11113_i);
				_10356_cut = _10320_tokens.slice(_11113_i);
				return std::make_tuple(_10339_cutted,_10356_cut);
			}
		}
	_iter_next_4334478064:;
	}
	_iter_end_4334478064:;
	_10339_cutted = _10320_tokens;
	_10356_cut = nullptr;
	return std::make_tuple(_10339_cutted,_10356_cut);
}



std::tuple<jule::Slice<jule::Slice<_1e15a2bb9_Token>>,jule::Slice<_1ec8e8025_Log>> _1e25dc95b_parts(jule::Slice<_1e15a2bb9_Token>& _14115_tokens,jule::Uint _14132_id,jule::Bool _14145_expr_must) {
	if (_14115_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_1e15a2bb9_Token>> _14613_parts = nullptr;
	jule::Slice<_1ec8e8025_Log> _14713_errors = nullptr;
	jule::Int _14913_range_n = 0LL;
	jule::Int _15013_last = 0LL;
	{
		auto expr = _14115_tokens;
		auto it = expr.begin();
		_iter_begin_4334510432:;
		if (it != expr.end()) {
			jule::Int _1e25dc95b_i = it - expr.begin();
			_1e15a2bb9_Token _1e25dc95b_token = *it;
			{
				if (_1e25dc95b_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1e25dc95b_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4334515472; }
						_case_begin_4334515472:;
						{
							(_14913_range_n)++;
							goto _iter_next_4334510432;
						}
						goto _match_end_4334514112;
						_case_end_4334515472:;
						_case_begin_4334513424:;
						{
							(_14913_range_n)--;
						}
						goto _match_end_4334514112;
						_case_end_4334513424:;
						_match_end_4334514112:;
					}
				}
				if (_14913_range_n > 0LL) {
					goto _iter_next_4334510432;
				}
				if (_1e25dc95b_token._field_id == _14132_id) {
					if (_14145_expr_must && ((_1e25dc95b_i - _15013_last) <= 0LL)) {
						_1ec8e8025_Log _17021_err = _1e25dc95b_make_err(_1e25dc95b_token._field_row,_1e25dc95b_token._field_column,_1e25dc95b_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
						_14713_errors=jule::append(_14713_errors,jule::Slice<_1ec8e8025_Log>({_17021_err}));
					}
					_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1e15a2bb9_Token>>({_14115_tokens.slice(_15013_last,_1e25dc95b_i)}));
					_15013_last=static_cast<jule::Int>(_1e25dc95b_i + 1LL);
				}
			}
			_iter_next_4334510432:;
			++it;
			_1e25dc95b_i++;
			goto _iter_begin_4334510432;
		}
		_iter_end_4334510432:;
	}
	if (_15013_last < _14115_tokens.len()) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1e15a2bb9_Token>>({_14115_tokens.slice(_15013_last)}));
	} else if ((!(_14145_expr_must))) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1e15a2bb9_Token>>({jule::Slice<_1e15a2bb9_Token>({})}));
	}
	return std::make_tuple(_14613_parts,_14713_errors);
}



jule::Str _1e25dc95b_get_close_kind_of_brace(jule::Str _18728_left) {
	{
		auto _match_expr{ _18728_left };
		if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4334526864; }
		_case_begin_4334526864:;
		{
			return jule::Str("(", 1);
		}
		goto _match_end_4334522800;
		_case_end_4334526864:;
		if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4334526432; }
		_case_begin_4334526432:;
		{
			return jule::Str("{", 1);
		}
		goto _match_end_4334522800;
		_case_end_4334526432:;
		if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4334526528; }
		_case_begin_4334526528:;
		{
			return jule::Str("[", 1);
		}
		goto _match_end_4334522800;
		_case_end_4334526528:;
		_case_begin_4334522608:;
		{
			return jule::Str();
		}
		goto _match_end_4334522800;
		_case_end_4334522608:;
		_match_end_4334522800:;
	}
}



_1ec8e8025_Log _1e25dc95b_compiler_err(_1e15a2bb9_Token& _19618_token,jule::Str& _19633_fmt,jule::Slice<jule::Any> _19646_args) {
	return _1ec8e8025_Log(1LLU,_19618_token._field_row,_19618_token._field_column,_19618_token._field_file->_method_path(),_1ec8e8025_logf(_19633_fmt,_19646_args),_19618_token._field_file->_method_get_row(_19618_token._field_row),jule::Str());
}



void _1e25dc95b_push_suggestion(_1ec8e8025_Log* _20731_log,jule::Str _20742_fmt,jule::Slice<jule::Any> _20755_args) {
	_20731_log->_field_suggestion=_1ec8e8025_logf(_20742_fmt,_20755_args);
}



jule::Ref<_1e16025cb_Comment> _1e25dc95b_build_comment(_1e15a2bb9_Token& _21123_token) {
	_21123_token._field_kind=_21123_token._field_kind.slice(2LL).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_1e16025cb_Comment>(new( std::nothrow ) _1e16025cb_Comment(_21123_token,_21123_token._field_kind));
}



jule::Str _1e25dc95b_tokstoa(jule::Slice<_1e15a2bb9_Token>& _22013_tokens) {
	jule::Str _22113_s = jule::Str();
	{
		auto expr = _22013_tokens;
		auto it = expr.begin();
		_iter_begin_4334539888:;
		if (it != expr.end()) {
			_1e15a2bb9_Token _1e25dc95b_token = *it;
			{
				_22113_s+=_1e25dc95b_token._field_kind;
			}
			_iter_next_4334539888:;
			++it;
			goto _iter_begin_4334539888;
		}
		_iter_end_4334539888:;
	}
	return _22113_s;
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_build_void_type(void) {
	return jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl());
}



jule::Ref<_1e16025cb_TypeDecl> _1e2613531_build_prim_type(_1e15a2bb9_Token _2024_token) {
	return jule::new_struct<_1e16025cb_TypeDecl>(new( std::nothrow ) _1e16025cb_TypeDecl(_2024_token,jule::Any(jule::new_struct<_1e16025cb_IdentTypeDecl>(new( std::nothrow ) _1e16025cb_IdentTypeDecl(_2024_token,_2024_token._field_kind,false,nullptr)))));
}



std::tuple<jule::Slice<_1e15a2bb9_Token>,jule::Int> _1e2613531_split_map_range(jule::Slice<_1e15a2bb9_Token>& _3525_tokens,jule::Int& _3547_i) {
	jule::Slice<_1e15a2bb9_Token> _3557_range_tokens = jule::Slice<_1e15a2bb9_Token>();
	jule::Int _3580_colon = jule::Int();
	_3580_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3547_i;
	for (; _3547_i < _3525_tokens.len(); (_3547_i)++) {
		{
			_1e15a2bb9_Token _4013_token = _3525_tokens[_3547_i];
			if (_4013_token._field_id == 3LLU) {
				{
					auto _match_expr{ _4013_token._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4334552896; }
					_case_begin_4334552896:;
					{
						(_3713_range_n)++;
						goto _iter_next_4334546784;
					}
					goto _match_end_4334551536;
					_case_end_4334552896:;
					_case_begin_4334550848:;
					{
						(_3713_range_n)--;
					}
					goto _match_end_4334551536;
					_case_end_4334550848:;
					_match_end_4334551536:;
				}
			}
			if (_3713_range_n == 0LL) {
				if ((_389_start + 1LL) > _3547_i) {
					return std::make_tuple(_3557_range_tokens,_3580_colon);
				}
				_3557_range_tokens=_3525_tokens.slice(_389_start + 1LL,_3547_i);
				goto _iter_end_4334546784;
			} else if (_3713_range_n != 1LL) {
				goto _iter_next_4334546784;
			}
			if ((_3580_colon == -1LL) && (_4013_token._field_id == 11LLU)) {
				_3580_colon=static_cast<jule::Int>((_3547_i - _389_start) - 1LL);
			}
		}
	_iter_next_4334546784:;
	}
	_iter_end_4334546784:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



void _1a37ddd88_lshift_unsig(_1a37ddd88_Const& _55822_c,_1a37ddd88_Const& _55833_x) {
	jule::U64 _5599_l = _55822_c._method_as_u64();
	jule::U64 _5609_r = _55833_x._method_as_u64();
	_55822_c._method_set_u64(static_cast<jule::U64>(_5599_l << _5609_r));
}



void _1a37ddd88_rshift_unsig(_1a37ddd88_Const& _56422_c,_1a37ddd88_Const& _56433_x) {
	jule::U64 _5659_l = _56422_c._method_as_u64();
	jule::U64 _5669_r = _56433_x._method_as_u64();
	_56422_c._method_set_u64(static_cast<jule::U64>(_5659_l >> _5669_r));
}



jule::Bool _1a4422ea5_check_bit(jule::Str _914_v,jule::Int _922_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)> _932_checker) {
	{
		if (!((_914_v == jule::Str()))) { goto _case_end_4345624416; }
		_case_begin_4345624416:;
		{
			return false;
		}
		goto _match_end_4345622608;
		_case_end_4345624416:;
		if (!((_914_v.len() == 1LL))) { goto _case_end_4345624800; }
		_case_begin_4345624800:;
		{
			return true;
		}
		goto _match_end_4345622608;
		_case_end_4345624800:;
		if (!((_914_v.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4345625088; }
		_case_begin_4345625088:;
		{
			return _932_checker(_914_v.slice(2LL),16LL,_922_bit);
		}
		goto _match_end_4345622608;
		_case_end_4345625088:;
		if (!((_914_v.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4345625184; }
		_case_begin_4345625184:;
		{
			return _932_checker(_914_v.slice(2LL),2LL,_922_bit);
		}
		goto _match_end_4345622608;
		_case_end_4345625184:;
		if (!((_914_v.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4345625280; }
		_case_begin_4345625280:;
		{
			return _932_checker(_914_v.slice(2LL),8LL,_922_bit);
		}
		goto _match_end_4345622608;
		_case_end_4345625280:;
		if (!((_914_v[0LL] == '0'))) { goto _case_end_4345623728; }
		_case_begin_4345623728:;
		{
			return _932_checker(_914_v.slice(1LL),8LL,_922_bit);
		}
		goto _match_end_4345622608;
		_case_end_4345623728:;
		_case_begin_4345622752:;
		{
			return _932_checker(_914_v,10LL,_922_bit);
		}
		goto _match_end_4345622608;
		_case_end_4345622752:;
		_match_end_4345622608:;
	}
}



jule::Str _1a4422ea5_real_kind_of(jule::Str _2421_kind) {
	{
		auto _match_expr{ _2421_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4345631600; }
		_case_begin_4345631600:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4345620240;
		_case_end_4345631600:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("uintptr", 7)) == _match_expr)) { goto _case_end_4345631696; }
		_case_begin_4345631696:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4345620240;
		_case_end_4345631696:;
		_case_begin_4345620144:;
		{
			return _2421_kind;
		}
		goto _match_end_4345620240;
		_case_end_4345620144:;
		_match_end_4345620240:;
	}
}



jule::Int _1a4422ea5_bitsize_of(jule::Str _4019_k) {
	{
		auto _match_expr{ _4019_k };
		if (!((jule::Str("i8", 2)) == _match_expr || (jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4345638304; }
		_case_begin_4345638304:;
		{
			return 8LL;
		}
		goto _match_end_4345636880;
		_case_end_4345638304:;
		if (!((jule::Str("i16", 3)) == _match_expr || (jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4345638400; }
		_case_begin_4345638400:;
		{
			return 16LL;
		}
		goto _match_end_4345636880;
		_case_end_4345638400:;
		if (!((jule::Str("i32", 3)) == _match_expr || (jule::Str("u32", 3)) == _match_expr || (jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4345638656; }
		_case_begin_4345638656:;
		{
			return 32LL;
		}
		goto _match_end_4345636880;
		_case_end_4345638656:;
		if (!((jule::Str("i64", 3)) == _match_expr || (jule::Str("u64", 3)) == _match_expr || (jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4345638752; }
		_case_begin_4345638752:;
		{
			return 64LL;
		}
		goto _match_end_4345636880;
		_case_end_4345638752:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("int", 3)) == _match_expr)) { goto _case_end_4345637936; }
		_case_begin_4345637936:;
		{
			return 32LL;
		}
		goto _match_end_4345636880;
		_case_end_4345637936:;
		_case_begin_4345637360:;
		{
			return -1LL;
		}
		goto _match_end_4345636880;
		_case_end_4345637360:;
		_match_end_4345636880:;
	}
}



jule::Str _1a4422ea5_int_from_bits(jule::U64 _7222_bits) {
	{
		auto _match_expr{ _7222_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4345642912; }
		_case_begin_4345642912:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_4345641792;
		_case_end_4345642912:;
		if (!((16LL) == _match_expr)) { goto _case_end_4345643008; }
		_case_begin_4345643008:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_4345641792;
		_case_end_4345643008:;
		if (!((32LL) == _match_expr)) { goto _case_end_4345643104; }
		_case_begin_4345643104:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4345641792;
		_case_end_4345643104:;
		if (!((64LL) == _match_expr)) { goto _case_end_4345643536; }
		_case_begin_4345643536:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4345641792;
		_case_end_4345643536:;
		_case_begin_4345640192:;
		{
			return jule::Str();
		}
		goto _match_end_4345641792;
		_case_end_4345640192:;
		_match_end_4345641792:;
	}
}



jule::Str _1a4422ea5_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto _match_expr{ _8523_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4345646592; }
		_case_begin_4345646592:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_4345645680;
		_case_end_4345646592:;
		if (!((16LL) == _match_expr)) { goto _case_end_4345646688; }
		_case_begin_4345646688:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_4345645680;
		_case_end_4345646688:;
		if (!((32LL) == _match_expr)) { goto _case_end_4345646784; }
		_case_begin_4345646784:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4345645680;
		_case_end_4345646784:;
		if (!((64LL) == _match_expr)) { goto _case_end_4345647216; }
		_case_begin_4345647216:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4345645680;
		_case_end_4345647216:;
		_case_begin_4345644896:;
		{
			return jule::Str();
		}
		goto _match_end_4345645680;
		_case_end_4345644896:;
		_match_end_4345645680:;
	}
}



jule::Str _1a4422ea5_float_from_bits(jule::U64 _9924_bits) {
	{
		auto _match_expr{ _9924_bits };
		if (!((32LL) == _match_expr)) { goto _case_end_4345650688; }
		_case_begin_4345650688:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_4345649360;
		_case_end_4345650688:;
		if (!((64LL) == _match_expr)) { goto _case_end_4345650272; }
		_case_begin_4345650272:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_4345649360;
		_case_end_4345650272:;
		_case_begin_4345648576:;
		{
			return jule::Str();
		}
		goto _match_end_4345649360;
		_case_end_4345648576:;
		_match_end_4345649360:;
	}
}



jule::Bool _1a4422ea5_check_bit_int(jule::Str _10822_v,jule::Int _10830_bit) {
	return _1a4422ea5_check_bit(_10822_v,_10830_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _10930_v,jule::Int _10938_base,jule::Int _10949_bit) mutable -> jule::Bool {
		jule::Int _11017_err;
		std::tie(std::ignore,_11017_err) = _1ec95de8c_parse_int(_10930_v,_10938_base,_10949_bit);
		return _11017_err == 0LLU;
	}));
}



jule::Bool _1a4422ea5_check_bit_uint(jule::Str _11623_v,jule::Int _11631_bit) {
	return _1a4422ea5_check_bit(_11623_v,_11631_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _11730_v,jule::Int _11738_base,jule::Int _11749_bit) mutable -> jule::Bool {
		jule::Int _11817_err;
		std::tie(std::ignore,_11817_err) = _1ec95de8c_parse_uint(_11730_v,_11738_base,_11749_bit);
		return _11817_err == 0LLU;
	}));
}



jule::Bool _1a4422ea5_check_bit_float(jule::Str _12424_val,jule::Int _12434_bit) {
	jule::Int _12513_err;
	std::tie(std::ignore,_12513_err) = _1d419b9e0_parse_float(_12424_val,_12434_bit);
	return _12513_err == 0LLU;
}



jule::U64 _1a4422ea5_bitsize_of_float(jule::F64 _13425_x) {
	{
		if (!(((-340282346638528860000000000000000000000.0 <= _13425_x) && (_13425_x <= 340282346638528860000000000000000000000.0)))) { goto _case_end_4345670816; }
		_case_begin_4345670816:;
		{
			return 32LL;
		}
		goto _match_end_4345668736;
		_case_end_4345670816:;
		_case_begin_4345668912:;
		{
			return 64LL;
		}
		goto _match_end_4345668736;
		_case_end_4345668912:;
		_match_end_4345668736:;
	}
}



jule::U64 _1a4422ea5_bitsize_of_int(jule::I64 _14823_x) {
	{
		if (!(((-128LL <= _14823_x) && (_14823_x <= 127LL)))) { goto _case_end_4345673232; }
		_case_begin_4345673232:;
		{
			return 8LL;
		}
		goto _match_end_4345671760;
		_case_end_4345673232:;
		if (!(((-32768LL <= _14823_x) && (_14823_x <= 32767LL)))) { goto _case_end_4345673568; }
		_case_begin_4345673568:;
		{
			return 16LL;
		}
		goto _match_end_4345671760;
		_case_end_4345673568:;
		if (!(((-2147483648LL <= _14823_x) && (_14823_x <= 2147483647LL)))) { goto _case_end_4345673664; }
		_case_begin_4345673664:;
		{
			return 32LL;
		}
		goto _match_end_4345671760;
		_case_end_4345673664:;
		_case_begin_4345671888:;
		{
			return 64LL;
		}
		goto _match_end_4345671760;
		_case_end_4345671888:;
		_match_end_4345671760:;
	}
}



jule::U64 _1a4422ea5_bitsize_of_uint(jule::U64 _16424_x) {
	{
		if (!((_16424_x <= 255LL))) { goto _case_end_4345678016; }
		_case_begin_4345678016:;
		{
			return 8LL;
		}
		goto _match_end_4345676960;
		_case_end_4345678016:;
		if (!((_16424_x <= 65535LL))) { goto _case_end_4345678352; }
		_case_begin_4345678352:;
		{
			return 16LL;
		}
		goto _match_end_4345676960;
		_case_end_4345678352:;
		if (!((_16424_x <= 4294967295LL))) { goto _case_end_4345678448; }
		_case_begin_4345678448:;
		{
			return 32LL;
		}
		goto _match_end_4345676960;
		_case_end_4345678448:;
		_case_begin_4345674992:;
		{
			return 64LL;
		}
		goto _match_end_4345676960;
		_case_end_4345674992:;
		_match_end_4345676960:;
	}
}



jule::F64 _1a4449817_min(jule::Str _4316_k) {
	_4316_k=_1a4422ea5_real_kind_of(_4316_k);
	{
		auto _match_expr{ _4316_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4345682416; }
		_case_begin_4345682416:;
		{
			return -128LL;
		}
		goto _match_end_4345679808;
		_case_end_4345682416:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4345682512; }
		_case_begin_4345682512:;
		{
			return -32768LL;
		}
		goto _match_end_4345679808;
		_case_end_4345682512:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4345681248; }
		_case_begin_4345681248:;
		{
			return -2147483648LL;
		}
		goto _match_end_4345679808;
		_case_end_4345681248:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4345681344; }
		_case_begin_4345681344:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_4345679808;
		_case_end_4345681344:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4345681456; }
		_case_begin_4345681456:;
		{
			return -340282346638528860000000000000000000000.0;
		}
		goto _match_end_4345679808;
		_case_end_4345681456:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4345681712; }
		_case_begin_4345681712:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_4345679808;
		_case_end_4345681712:;
		_case_begin_4345679024:;
		{
			return 0LL;
		}
		goto _match_end_4345679808;
		_case_end_4345679024:;
		_match_end_4345679808:;
	}
}



jule::F64 _1a4449817_max(jule::Str _5816_k) {
	_5816_k=_1a4422ea5_real_kind_of(_5816_k);
	{
		auto _match_expr{ _5816_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4345687616; }
		_case_begin_4345687616:;
		{
			return 127LL;
		}
		goto _match_end_4345686224;
		_case_end_4345687616:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4345686672; }
		_case_begin_4345686672:;
		{
			return 32767LL;
		}
		goto _match_end_4345686224;
		_case_end_4345686672:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4345686768; }
		_case_begin_4345686768:;
		{
			return 2147483647LL;
		}
		goto _match_end_4345686224;
		_case_end_4345686768:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4345686864; }
		_case_begin_4345686864:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_4345686224;
		_case_end_4345686864:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4345686960; }
		_case_begin_4345686960:;
		{
			return 255LL;
		}
		goto _match_end_4345686224;
		_case_end_4345686960:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4345687056; }
		_case_begin_4345687056:;
		{
			return 65535LL;
		}
		goto _match_end_4345686224;
		_case_end_4345687056:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4345687168; }
		_case_begin_4345687168:;
		{
			return 4294967295LL;
		}
		goto _match_end_4345686224;
		_case_end_4345687168:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4345687280; }
		_case_begin_4345687280:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_4345686224;
		_case_end_4345687280:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4345687392; }
		_case_begin_4345687392:;
		{
			return 340282346638528860000000000000000000000.0;
		}
		goto _match_end_4345686224;
		_case_end_4345687392:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4345687952; }
		_case_begin_4345687952:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_4345686224;
		_case_end_4345687952:;
		_case_begin_4345683200:;
		{
			return 0LL;
		}
		goto _match_end_4345686224;
		_case_end_4345683200:;
		_match_end_4345686224:;
	}
}



jule::Bool _1a4415c12_is_i8_compatible(jule::Str _629_k) {
	_629_k=_1a4422ea5_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



jule::Bool _1a4415c12_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_1a4422ea5_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



jule::Bool _1a4415c12_is_i32_compatible(jule::Str _2030_k) {
	_2030_k=_1a4422ea5_real_kind_of(_2030_k);
	return ((((_2030_k == jule::Str("i8", 2)) || (_2030_k == jule::Str("i16", 3))) || (_2030_k == jule::Str("i32", 3))) || (_2030_k == jule::Str("u8", 2))) || (_2030_k == jule::Str("u16", 3));
}



jule::Bool _1a4415c12_is_i64_compatible(jule::Str _3030_k) {
	_3030_k=_1a4422ea5_real_kind_of(_3030_k);
	return ((((((_3030_k == jule::Str("i8", 2)) || (_3030_k == jule::Str("i16", 3))) || (_3030_k == jule::Str("i32", 3))) || (_3030_k == jule::Str("i64", 3))) || (_3030_k == jule::Str("u8", 2))) || (_3030_k == jule::Str("u16", 3))) || (_3030_k == jule::Str("u32", 3));
}



jule::Bool _1a4415c12_is_u8_compatible(jule::Str _4229_k) {
	_4229_k=_1a4422ea5_real_kind_of(_4229_k);
	return _4229_k == jule::Str("u8", 2);
}



jule::Bool _1a4415c12_is_u16_compatible(jule::Str _4830_k) {
	_4830_k=_1a4422ea5_real_kind_of(_4830_k);
	return (_4830_k == jule::Str("u8", 2)) || (_4830_k == jule::Str("u16", 3));
}



jule::Bool _1a4415c12_is_u32_compatible(jule::Str _5430_k) {
	_5430_k=_1a4422ea5_real_kind_of(_5430_k);
	return ((_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3))) || (_5430_k == jule::Str("u32", 3));
}



jule::Bool _1a4415c12_is_u64_compatible(jule::Str _6230_k) {
	_6230_k=_1a4422ea5_real_kind_of(_6230_k);
	return (((_6230_k == jule::Str("u8", 2)) || (_6230_k == jule::Str("u16", 3))) || (_6230_k == jule::Str("u32", 3))) || (_6230_k == jule::Str("u64", 3));
}



jule::Bool _1a4415c12_is_f32_compatible(jule::Str _7130_k) {
	_7130_k=_1a4422ea5_real_kind_of(_7130_k);
	return _7130_k == jule::Str("f32", 3);
}



jule::Bool _1a4415c12_is_f64_compatible(jule::Str _7730_k) {
	_7730_k=_1a4422ea5_real_kind_of(_7730_k);
	return (_7730_k == jule::Str("f64", 3)) || (_7730_k == jule::Str("f32", 3));
}



jule::Bool _1a4415c12_types_are_compatible(jule::Str _8633_k1,jule::Str _8642_k2) {
	_8633_k1=_1a4422ea5_real_kind_of(_8633_k1);
	{
		auto _match_expr{ _8633_k1 };
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4345713600; }
		_case_begin_4345713600:;
		{
			return true;
		}
		goto _match_end_4345711680;
		_case_end_4345713600:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4345714448; }
		_case_begin_4345714448:;
		{
			return _1a4415c12_is_i8_compatible(_8642_k2);
		}
		goto _match_end_4345711680;
		_case_end_4345714448:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4345714544; }
		_case_begin_4345714544:;
		{
			return _1a4415c12_is_i16_compatible(_8642_k2);
		}
		goto _match_end_4345711680;
		_case_end_4345714544:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4345714640; }
		_case_begin_4345714640:;
		{
			return _1a4415c12_is_i32_compatible(_8642_k2);
		}
		goto _match_end_4345711680;
		_case_end_4345714640:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4345714736; }
		_case_begin_4345714736:;
		{
			return _1a4415c12_is_i64_compatible(_8642_k2);
		}
		goto _match_end_4345711680;
		_case_end_4345714736:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4345713856; }
		_case_begin_4345713856:;
		{
			return _1a4415c12_is_u8_compatible(_8642_k2);
		}
		goto _match_end_4345711680;
		_case_end_4345713856:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4345713952; }
		_case_begin_4345713952:;
		{
			return _1a4415c12_is_u16_compatible(_8642_k2);
		}
		goto _match_end_4345711680;
		_case_end_4345713952:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4345714048; }
		_case_begin_4345714048:;
		{
			return _1a4415c12_is_u32_compatible(_8642_k2);
		}
		goto _match_end_4345711680;
		_case_end_4345714048:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4345714160; }
		_case_begin_4345714160:;
		{
			return _1a4415c12_is_u64_compatible(_8642_k2);
		}
		goto _match_end_4345711680;
		_case_end_4345714160:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4345714272; }
		_case_begin_4345714272:;
		{
			return _1a4415c12_is_f32_compatible(_8642_k2);
		}
		goto _match_end_4345711680;
		_case_end_4345714272:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4345714832; }
		_case_begin_4345714832:;
		{
			return _1a4415c12_is_f64_compatible(_8642_k2);
		}
		goto _match_end_4345711680;
		_case_end_4345714832:;
		if (!((jule::Str("bool", 4)) == _match_expr)) { goto _case_end_4345714944; }
		_case_begin_4345714944:;
		{
			return _8642_k2 == jule::Str("bool", 4);
		}
		goto _match_end_4345711680;
		_case_end_4345714944:;
		if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4345715056; }
		_case_begin_4345715056:;
		{
			return _8642_k2 == jule::Str("str", 3);
		}
		goto _match_end_4345711680;
		_case_end_4345715056:;
		_case_begin_4345711808:;
		{
			return false;
		}
		goto _match_end_4345711680;
		_case_end_4345711808:;
		_match_end_4345711680:;
	}
}



jule::Bool _1a4415c12_is_i16_greater(jule::Str _10727_k) {
	_10727_k=_1a4422ea5_real_kind_of(_10727_k);
	return _10727_k == jule::Str("u8", 2);
}



jule::Bool _1a4415c12_is_i32_greater(jule::Str _11327_k) {
	_11327_k=_1a4422ea5_real_kind_of(_11327_k);
	return (_11327_k == jule::Str("i8", 2)) || (_11327_k == jule::Str("i16", 3));
}



jule::Bool _1a4415c12_is_i64_greater(jule::Str _11927_k) {
	_11927_k=_1a4422ea5_real_kind_of(_11927_k);
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



jule::Bool _1a4415c12_is_u8_greater(jule::Str _12726_k) {
	_12726_k=_1a4422ea5_real_kind_of(_12726_k);
	return _12726_k == jule::Str("i8", 2);
}



jule::Bool _1a4415c12_is_u16_greater(jule::Str _13327_k) {
	_13327_k=_1a4422ea5_real_kind_of(_13327_k);
	return ((_13327_k == jule::Str("u8", 2)) || (_13327_k == jule::Str("i8", 2))) || (_13327_k == jule::Str("i16", 3));
}



jule::Bool _1a4415c12_is_u32_greater(jule::Str _14127_k) {
	_14127_k=_1a4422ea5_real_kind_of(_14127_k);
	return ((((_14127_k == jule::Str("u8", 2)) || (_14127_k == jule::Str("u16", 3))) || (_14127_k == jule::Str("i8", 2))) || (_14127_k == jule::Str("i16", 3))) || (_14127_k == jule::Str("i32", 3));
}



jule::Bool _1a4415c12_is_u64_greater(jule::Str _15127_k) {
	_15127_k=_1a4422ea5_real_kind_of(_15127_k);
	return ((((((_15127_k == jule::Str("u8", 2)) || (_15127_k == jule::Str("u16", 3))) || (_15127_k == jule::Str("u32", 3))) || (_15127_k == jule::Str("i8", 2))) || (_15127_k == jule::Str("i16", 3))) || (_15127_k == jule::Str("i32", 3))) || (_15127_k == jule::Str("i64", 3));
}



jule::Bool _1a4415c12_is_f32_greater(jule::Str _16323_k) {
	return _16323_k != jule::Str("f64", 3);
}



jule::Bool _1a4415c12_is_f64_greater(jule::Str _16523_k) {
	return true;
}



jule::Bool _1a4415c12_is_greater(jule::Str _16823_k1,jule::Str _16832_k2) {
	_16823_k1=_1a4422ea5_real_kind_of(_16823_k1);
	{
		auto _match_expr{ _16823_k1 };
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4345740640; }
		_case_begin_4345740640:;
		{
			return _1a4415c12_is_i16_greater(_16832_k2);
		}
		goto _match_end_4345739920;
		_case_end_4345740640:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4345740736; }
		_case_begin_4345740736:;
		{
			return _1a4415c12_is_i32_greater(_16832_k2);
		}
		goto _match_end_4345739920;
		_case_end_4345740736:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4345741600; }
		_case_begin_4345741600:;
		{
			return _1a4415c12_is_i64_greater(_16832_k2);
		}
		goto _match_end_4345739920;
		_case_end_4345741600:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4345741696; }
		_case_begin_4345741696:;
		{
			return _1a4415c12_is_u16_greater(_16832_k2);
		}
		goto _match_end_4345739920;
		_case_end_4345741696:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4345741792; }
		_case_begin_4345741792:;
		{
			return _1a4415c12_is_u8_greater(_16832_k2);
		}
		goto _match_end_4345739920;
		_case_end_4345741792:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4345741008; }
		_case_begin_4345741008:;
		{
			return _1a4415c12_is_u32_greater(_16832_k2);
		}
		goto _match_end_4345739920;
		_case_end_4345741008:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4345741104; }
		_case_begin_4345741104:;
		{
			return _1a4415c12_is_u64_greater(_16832_k2);
		}
		goto _match_end_4345739920;
		_case_end_4345741104:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4345741200; }
		_case_begin_4345741200:;
		{
			return _1a4415c12_is_f32_greater(_16832_k2);
		}
		goto _match_end_4345739920;
		_case_end_4345741200:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4345741296; }
		_case_begin_4345741296:;
		{
			return _1a4415c12_is_f64_greater(_16832_k2);
		}
		goto _match_end_4345739920;
		_case_end_4345741296:;
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4345741392; }
		_case_begin_4345741392:;
		{
			return true;
		}
		goto _match_end_4345739920;
		_case_end_4345741392:;
		_case_begin_4345735392:;
		{
			return false;
		}
		goto _match_end_4345739920;
		_case_end_4345735392:;
		_match_end_4345739920:;
	}
}



jule::Bool _1a44da204_is_sig_int(jule::Str _2723_k) {
	_2723_k=_1a4422ea5_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



jule::Bool _1a44da204_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_1a4422ea5_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



jule::Bool _1a44da204_is_int(jule::Str _4915_k) {
	return _1a44da204_is_sig_int(_4915_k) || _1a44da204_is_unsig_int(_4915_k);
}



jule::Bool _1a44da204_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



jule::Bool _1a44da204_is_num(jule::Str _5915_k) {
	return _1a44da204_is_int(_5915_k) || _1a44da204_is_float(_5915_k);
}



jule::Bool _1a44da204_is_sig_num(jule::Str _6419_k) {
	return _1a44da204_is_sig_int(_6419_k) || _1a44da204_is_float(_6419_k);
}



jule::Bool _1a4552e1a_is_ascii(jule::I32 _1017_r) {
	
	return _1017_r <= 127LLU;
}



jule::I32 _1a4552e1a_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if (_1816_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::Int _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_1a4552e1a_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1e176da99_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



jule::Str _1a4552e1a_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



jule::Str _1a4552e1a_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if (_4215_bytes.len() == 0LL) {
		return jule::Str();
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_4215_bytes.len()));
	jule::Int _4813_i = 0LL;
	while (_4813_i < _4215_bytes.len()) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_1a4552e1a_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::Int _5421_size;
				std::tie(_5418_r,_5421_size) = _1e176da99_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1e176da99_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_4345777728:;
	}
	_iter_end_4345777728:;
	return static_cast<jule::Str>(_4713_s);
}



std::tuple<jule::U8,jule::Bool> _1a4552e1a_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto _match_expr{ _6224_bytes[1LL] };
		if (!(('\\') == _match_expr)) { goto _case_end_4345789936; }
		_case_begin_4345789936:;
		{
			_6241_seq='\\';
		}
		goto _match_end_4345791056;
		_case_end_4345789936:;
		if (!(('\'') == _match_expr)) { goto _case_end_4345791808; }
		_case_begin_4345791808:;
		{
			_6241_seq='\'';
		}
		goto _match_end_4345791056;
		_case_end_4345791808:;
		if (!(('\"') == _match_expr)) { goto _case_end_4345791904; }
		_case_begin_4345791904:;
		{
			_6241_seq='\"';
		}
		goto _match_end_4345791056;
		_case_end_4345791904:;
		if (!(('a') == _match_expr)) { goto _case_end_4345792000; }
		_case_begin_4345792000:;
		{
			_6241_seq='\a';
		}
		goto _match_end_4345791056;
		_case_end_4345792000:;
		if (!(('b') == _match_expr)) { goto _case_end_4345792112; }
		_case_begin_4345792112:;
		{
			_6241_seq='\b';
		}
		goto _match_end_4345791056;
		_case_end_4345792112:;
		if (!(('f') == _match_expr)) { goto _case_end_4345792224; }
		_case_begin_4345792224:;
		{
			_6241_seq='\f';
		}
		goto _match_end_4345791056;
		_case_end_4345792224:;
		if (!(('n') == _match_expr)) { goto _case_end_4345792336; }
		_case_begin_4345792336:;
		{
			_6241_seq='\n';
		}
		goto _match_end_4345791056;
		_case_end_4345792336:;
		if (!(('r') == _match_expr)) { goto _case_end_4345792448; }
		_case_begin_4345792448:;
		{
			_6241_seq='\r';
		}
		goto _match_end_4345791056;
		_case_end_4345792448:;
		if (!(('t') == _match_expr)) { goto _case_end_4345792560; }
		_case_begin_4345792560:;
		{
			_6241_seq='\t';
		}
		goto _match_end_4345791056;
		_case_end_4345792560:;
		if (!(('v') == _match_expr)) { goto _case_end_4345792672; }
		_case_begin_4345792672:;
		{
			_6241_seq='\v';
		}
		goto _match_end_4345791056;
		_case_end_4345792672:;
		_match_end_4345791056:;
	}
	_6252_ok=_6241_seq != 0LL;
	return std::make_tuple(_6241_seq,_6252_ok);
}



jule::I32 _1a4552e1a_rune_from_esq_seq(jule::Slice<jule::U8> _8422_bytes,jule::Int& _8442_i) {
	jule::U8 _8510_b;
	jule::Bool _8513_ok;
	std::tie(_8510_b,_8513_ok) = _1a4552e1a_try_btoa_common_esq(_8422_bytes.slice(_8442_i));
	(_8442_i)++;
	if (_8513_ok) {
		(_8442_i)++;
		return static_cast<jule::I32>(_8510_b);
	}
	{
		auto _match_expr{ _8422_bytes[_8442_i] };
		if (!(('u') == _match_expr)) { goto _case_end_4345806528; }
		_case_begin_4345806528:;
		{
			
			jule::U64 _9514_rc;
			std::tie(_9514_rc,std::ignore) = _1ec95de8c_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 5LL)),16LL,64LL);
			_8442_i+=5LL;
			jule::I32 _9713_r = static_cast<jule::I32>(_9514_rc);
			return _9713_r;
		}
		goto _match_end_4345801120;
		_case_end_4345806528:;
		if (!(('U') == _match_expr)) { goto _case_end_4345807024; }
		_case_begin_4345807024:;
		{
			
			jule::U64 _10214_rc;
			std::tie(_10214_rc,std::ignore) = _1ec95de8c_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 9LL)),16LL,64LL);
			_8442_i+=9LL;
			jule::I32 _10413_r = static_cast<jule::I32>(_10214_rc);
			return _10413_r;
		}
		goto _match_end_4345801120;
		_case_end_4345807024:;
		if (!(('x') == _match_expr)) { goto _case_end_4345807120; }
		_case_begin_4345807120:;
		{
			
			jule::Slice<jule::U8> _10913_seq = _8422_bytes.slice(_8442_i + 1LL,_8442_i + 3LL);
			_8442_i+=3LL;
			jule::U64 _11114_b;
			std::tie(_11114_b,std::ignore) = _1ec95de8c_parse_uint(static_cast<jule::Str>(_10913_seq),16LL,64LL);
			return static_cast<jule::I32>(_11114_b);
		}
		goto _match_end_4345801120;
		_case_end_4345807120:;
		_case_begin_4345800880:;
		{
			
			jule::Slice<jule::U8> _11613_seq = _8422_bytes.slice(_8442_i,_8442_i + 3LL);
			_8442_i+=3LL;
			jule::U64 _11814_b;
			std::tie(_11814_b,std::ignore) = _1ec95de8c_parse_uint(static_cast<jule::Str>(_11613_seq.slice(1LL)),8LL,64LL);
			return static_cast<jule::I32>(_11814_b);
		}
		goto _match_end_4345801120;
		_case_end_4345800880:;
		_match_end_4345801120:;
	}
}



jule::Slice<jule::U8> _1a4552e1a_str_esq_seq(jule::Slice<jule::U8> _12316_bytes,jule::Int& _12336_i) {
	jule::I32 _1249_r = _1a4552e1a_rune_from_esq_seq(_12316_bytes,_12336_i);
	if (_1249_r <= 255LL) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(_1249_r)});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1249_r));
}



jule::Bool _1e1737e81_kind_uses_generics(jule::Ref<_1a2db8ce3_TypeKind> _38823_k,jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>& _38838_generics) {
	jule::Str _3899_pk = _38823_k->_method_to_str();
	{
		auto expr = _38838_generics;
		auto it = expr.begin();
		_iter_begin_4346642592:;
		if (it != expr.end()) {
			jule::Ref<_1e16025cb_GenericDecl> _1e1737e81_g = *it;
			{
				if (_3899_pk.find(_1e1737e81_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_4346642592:;
			++it;
			goto _iter_begin_4346642592;
		}
		_iter_end_4346642592:;
	}
	return false;
}



jule::Bool _1e1737e81_parameter_uses_generics(jule::Ref<_1e1737e81_Param>& _39829_p,jule::Slice<jule::Ref<_1e16025cb_GenericDecl>>& _39841_generics) {
	if (_39829_p->_method_is_self()) {
		return false;
	}
	return _1e1737e81_kind_uses_generics(_39829_p->_field_kind->_field_kind,_39841_generics);
}



jule::Str _1e28b6a59_str_repeat(jule::Str _8715_sub,jule::Int _8729_n) {
	if (_8729_n == 0LL) {
		return jule::Str();
	}
	jule::Str _9213_s = jule::Str();
	for (; _8729_n > 0LL; (_8729_n)--) {
		{
			_9213_s+=_8715_sub;
		}
	_iter_next_4346652032:;
	}
	_iter_end_4346652032:;
	return _9213_s;
}



jule::Str _1e28b6a59_build_doc(jule::Ref<_1e16025cb_CommentGroup> _9918_cg) {
	if ((!(jule::real(_9918_cg)))) {
		return jule::Str();
	}
	jule::Str _10413_doc = jule::Str();
	{
		auto expr = _9918_cg->_field_comments;
		auto it = expr.begin();
		_iter_begin_4346654352:;
		if (it != expr.end()) {
			jule::Ref<_1e16025cb_Comment> _1e28b6a59_c = *it;
			{
				_10413_doc+=_1e28b6a59_c->_field_text;
				_10413_doc+=jule::Str(" ", 1);
			}
			_iter_next_4346654352:;
			++it;
			goto _iter_begin_4346654352;
		}
		_iter_end_4346654352:;
	}
	return _10413_doc;
}



jule::Ref<_1a2db8ce3_TypeSymbol> _1e28b6a59_build_type(jule::Ref<_1e16025cb_TypeDecl> _11219_t) {
	if ((!(jule::real(_11219_t)))) {
		return jule::new_ref<_1a2db8ce3_TypeSymbol>();
	}
	return jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(_11219_t,jule::Ref<_1a2db8ce3_TypeKind>()));
}



jule::Ref<_1a2c74a6c_Value> _1e28b6a59_build_expr(jule::Ref<_1e16025cb_Expr> _12119_expr) {
	if ((!(jule::real(_12119_expr)))) {
		return jule::new_ref<_1a2c74a6c_Value>();
	}
	return jule::new_struct<_1a2c74a6c_Value>(new( std::nothrow ) _1a2c74a6c_Value(_12119_expr,jule::Ref<_1a2c74a6c_Data>()));
}



jule::Ref<_1a2db8ce3_TypeAlias> _1e28b6a59_build_type_alias(jule::Ref<_1e16025cb_TypeAliasDecl> _13125_decl) {
	return jule::new_struct<_1a2db8ce3_TypeAlias>(new( std::nothrow ) _1a2db8ce3_TypeAlias(_13125_decl->_field_scope,_13125_decl->_field_public,_13125_decl->_field_cpp_linked,jule::Bool(),jule::Bool(),_13125_decl->_field_token,_13125_decl->_field_ident,_1e28b6a59_build_type(_13125_decl->_field_kind),_1e28b6a59_build_doc(_13125_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



jule::Ref<_1e177440c_Field> _1e28b6a59_build_field(jule::Ref<_1e16025cb_FieldDecl> _14320_decl) {
	return jule::new_struct_ref<_1e177440c_Field>(new( std::nothrow ) _1e177440c_Field(jule::Ref<_1e177440c_Struct>(),_14320_decl->_field_token,_14320_decl->_field_public,_14320_decl->_field_mutable,_14320_decl->_field_ident,_1e28b6a59_build_type(_14320_decl->_field_kind)));
}



jule::Slice<jule::Ref<_1e177440c_Field>> _1e28b6a59_build_fields(jule::Slice<jule::Ref<_1e16025cb_FieldDecl>>& _15322_decls) {
	jule::Slice<jule::Ref<_1e177440c_Field>> _15413_fields = jule::Slice<jule::Ref<_1e177440c_Field>>::alloc(static_cast<jule::I64>(_15322_decls.len()));
	{
		auto expr = _15322_decls;
		auto it = expr.begin();
		_iter_begin_4346668608:;
		if (it != expr.end()) {
			jule::Int _1e28b6a59_i = it - expr.begin();
			jule::Ref<_1e16025cb_FieldDecl> _1e28b6a59_decl = *it;
			{
				_15413_fields[_1e28b6a59_i]=_1e28b6a59_build_field(_1e28b6a59_decl);
			}
			_iter_next_4346668608:;
			++it;
			_1e28b6a59_i++;
			goto _iter_begin_4346668608;
		}
		_iter_end_4346668608:;
	}
	return _15413_fields;
}



jule::Ref<_1e177440c_Struct> _1e28b6a59_build_struct(jule::Ref<_1e16025cb_StructDecl> _16121_decl) {
	return jule::new_struct_ref<_1e177440c_Struct>(new( std::nothrow ) _1e177440c_Struct(jule::Ref<_1e2a7c2a2_Sema>(),jule::Slice<jule::Ref<_1e177440c_Struct>>(),jule::Slice<jule::Ref<_1e177440c_Struct>>(),_16121_decl->_field_token,_16121_decl->_field_ident,_1e28b6a59_build_fields(_16121_decl->_field_fields),jule::Slice<jule::Ref<_1e1737e81_Fn>>(),jule::Slice<jule::Ref<_1ba80e105_Var>>(),_16121_decl->_field_public,_16121_decl->_field_cpp_linked,_16121_decl->_field_directives,_1e28b6a59_build_doc(_16121_decl->_field_doc_comments),_16121_decl->_field_generics,jule::Slice<jule::Ref<_1e2a1e563_Trait>>(),jule::Slice<jule::Ref<_1e177440c_StructIns>>()));
}



jule::Ref<_1e1737e81_Param> _1e28b6a59_build_param(jule::Ref<_1e16025cb_ParamDecl> _17420_decl) {
	return jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_17420_decl->_field_token,_17420_decl->_field_mutable,_17420_decl->_field_variadic,_17420_decl->_field_reference,_1e28b6a59_build_type(_17420_decl->_field_kind),_17420_decl->_field_ident));
}



jule::Slice<jule::Ref<_1e1737e81_Param>> _1e28b6a59_build_params(jule::Slice<jule::Ref<_1e16025cb_ParamDecl>>& _18522_decls) {
	jule::Slice<jule::Ref<_1e1737e81_Param>> _18613_params = jule::Slice<jule::Ref<_1e1737e81_Param>>::alloc(static_cast<jule::I64>(_18522_decls.len()));
	{
		auto expr = _18522_decls;
		auto it = expr.begin();
		_iter_begin_4346680176:;
		if (it != expr.end()) {
			jule::Int _1e28b6a59_i = it - expr.begin();
			jule::Ref<_1e16025cb_ParamDecl> _1e28b6a59_decl = *it;
			{
				_18613_params[_1e28b6a59_i]=_1e28b6a59_build_param(_1e28b6a59_decl);
			}
			_iter_next_4346680176:;
			++it;
			_1e28b6a59_i++;
			goto _iter_begin_4346680176;
		}
		_iter_end_4346680176:;
	}
	return _18613_params;
}



jule::Ref<_1e1737e81_RetType> _1e28b6a59_build_ret_type(jule::Ref<_1e16025cb_RetTypeDecl> _19323_decl) {
	if ((_19323_decl->_field_idents == nullptr) && (!(jule::real(_19323_decl->_field_kind)))) {
		return jule::new_ref<_1e1737e81_RetType>();
	}
	return jule::new_struct<_1e1737e81_RetType>(new( std::nothrow ) _1e1737e81_RetType(_1e28b6a59_build_type(_19323_decl->_field_kind),_19323_decl->_field_idents));
}



jule::Ref<_1e1737e81_Fn> _1e28b6a59_build_fn(jule::Ref<_1e16025cb_FnDecl> _20317_decl) {
	return jule::new_struct_ref<_1e1737e81_Fn>(new( std::nothrow ) _1e1737e81_Fn(jule::Ref<_1e2a7c2a2_Sema>(),_20317_decl->_field_token,_20317_decl->_field_global,_20317_decl->_field_unsafety,_20317_decl->_field_public,_20317_decl->_field_cpp_linked,_20317_decl->_field_statically,_20317_decl->_field_ident,_20317_decl->_field_directives,_1e28b6a59_build_doc(_20317_decl->_field_doc_comments),_20317_decl->_field_scope,_20317_decl->_field_generics,_1e28b6a59_build_ret_type(_20317_decl->_field_result),_1e28b6a59_build_params(_20317_decl->_field_params),jule::Ref<_1e177440c_Struct>(),jule::Slice<jule::Ref<_1e1737e81_FnIns>>()));
}



jule::Slice<jule::Ref<_1e1737e81_Fn>> _1e28b6a59_build_methods(jule::Slice<jule::Ref<_1e16025cb_FnDecl>>& _22123_decls) {
	jule::Slice<jule::Ref<_1e1737e81_Fn>> _22213_methods = jule::Slice<jule::Ref<_1e1737e81_Fn>>::alloc(static_cast<jule::I64>(_22123_decls.len()));
	{
		auto expr = _22123_decls;
		auto it = expr.begin();
		_iter_begin_4346693504:;
		if (it != expr.end()) {
			jule::Int _1e28b6a59_i = it - expr.begin();
			jule::Ref<_1e16025cb_FnDecl> _1e28b6a59_decl = *it;
			{
				_22213_methods[_1e28b6a59_i]=_1e28b6a59_build_fn(_1e28b6a59_decl);
			}
			_iter_next_4346693504:;
			++it;
			_1e28b6a59_i++;
			goto _iter_begin_4346693504;
		}
		_iter_end_4346693504:;
	}
	return _22213_methods;
}



jule::Ref<_1e2a1e563_Trait> _1e28b6a59_build_trait(jule::Ref<_1e16025cb_TraitDecl> _22920_decl) {
	return jule::new_struct<_1e2a1e563_Trait>(new( std::nothrow ) _1e2a1e563_Trait(_22920_decl->_field_token,_22920_decl->_field_ident,_22920_decl->_field_public,jule::Bool(),_1e28b6a59_build_doc(_22920_decl->_field_doc_comments),_1e28b6a59_build_methods(_22920_decl->_field_methods),jule::Slice<jule::Ref<_1e177440c_Struct>>()));
}



jule::Ref<_1e2a21d4b_EnumItem> _1e28b6a59_build_enum_item(jule::Ref<_1e16025cb_EnumItemDecl> _23924_decl) {
	return jule::new_struct<_1e2a21d4b_EnumItem>(new( std::nothrow ) _1e2a21d4b_EnumItem(_23924_decl->_field_token,_23924_decl->_field_ident,_1e28b6a59_build_expr(_23924_decl->_field_expr)));
}



jule::Slice<jule::Ref<_1e2a21d4b_EnumItem>> _1e28b6a59_build_enum_items(jule::Slice<jule::Ref<_1e16025cb_EnumItemDecl>>& _24726_decls) {
	jule::Slice<jule::Ref<_1e2a21d4b_EnumItem>> _24813_items = jule::Slice<jule::Ref<_1e2a21d4b_EnumItem>>::alloc(static_cast<jule::I64>(_24726_decls.len()));
	{
		auto expr = _24726_decls;
		auto it = expr.begin();
		_iter_begin_4346703488:;
		if (it != expr.end()) {
			jule::Int _1e28b6a59_i = it - expr.begin();
			jule::Ref<_1e16025cb_EnumItemDecl> _1e28b6a59_decl = *it;
			{
				_24813_items[_1e28b6a59_i]=_1e28b6a59_build_enum_item(_1e28b6a59_decl);
			}
			_iter_next_4346703488:;
			++it;
			_1e28b6a59_i++;
			goto _iter_begin_4346703488;
		}
		_iter_end_4346703488:;
	}
	return _24813_items;
}



jule::Ref<_1e2a21d4b_Enum> _1e28b6a59_build_enum(jule::Ref<_1e16025cb_EnumDecl> _25519_decl) {
	return jule::new_struct<_1e2a21d4b_Enum>(new( std::nothrow ) _1e2a21d4b_Enum(_25519_decl->_field_token,_25519_decl->_field_public,_25519_decl->_field_ident,_1e28b6a59_build_type(_25519_decl->_field_kind),_1e28b6a59_build_enum_items(_25519_decl->_field_items),_1e28b6a59_build_doc(_25519_decl->_field_doc_comments)));
}



jule::Ref<_1ba80e105_Var> _1e28b6a59_build_var(jule::Ref<_1e16025cb_VarDecl> _26618_decl) {
	return jule::new_struct<_1ba80e105_Var>(new( std::nothrow ) _1ba80e105_Var(jule::Ref<_1e2a2e210_Scope>(),_26618_decl->_field_token,_26618_decl->_field_ident,_26618_decl->_field_cpp_linked,_26618_decl->_field_constant,_26618_decl->_field_mutable,_26618_decl->_field_public,jule::Bool(),_26618_decl->_field_statically,_26618_decl->_field_reference,_1e28b6a59_build_doc(_26618_decl->_field_doc_comments),_1e28b6a59_build_type(_26618_decl->_field_kind),_1e28b6a59_build_expr(_26618_decl->_field_expr),_1e28b6a59_ReferenceStack::_static_method_new(),_26618_decl->_field_directives,jule::Ref<_1ba80e105_IterRelation>(),jule::Slice<jule::Ref<_1ba80e105_Var>>()));
}



jule::Slice<jule::Ref<_1ba80e105_Var>> _1e28b6a59_build_vars(jule::Slice<jule::Ref<_1e16025cb_VarDecl>> _28419_decls) {
	jule::Slice<jule::Ref<_1ba80e105_Var>> _28513_vars = jule::Slice<jule::Ref<_1ba80e105_Var>>::alloc(0LL,static_cast<jule::I64>(_28419_decls.len()));
	{
		auto expr = _28419_decls;
		auto it = expr.begin();
		_iter_begin_4346717888:;
		if (it != expr.end()) {
			jule::Ref<_1e16025cb_VarDecl> _1e28b6a59_decl = *it;
			{
				_28513_vars=jule::append(_28513_vars,jule::Slice<jule::Ref<_1ba80e105_Var>>({_1e28b6a59_build_var(_1e28b6a59_decl)}));
			}
			_iter_next_4346717888:;
			++it;
			goto _iter_begin_4346717888;
		}
		_iter_end_4346717888:;
	}
	return _28513_vars;
}



jule::Ref<_1e2a276ae_Impl> _1e28b6a59_build_impl(jule::Ref<_1e16025cb_Impl> _29219_decl) {
	return jule::new_struct<_1e2a276ae_Impl>(new( std::nothrow ) _1e2a276ae_Impl(_29219_decl->_field_base,_29219_decl->_field_dest,_1e28b6a59_build_methods(_29219_decl->_field_methods),_1e28b6a59_build_vars(_29219_decl->_field_statics)));
}



jule::Ref<_1e2a2e210_ScopeChecker> _1e2a2e210_new_scope_checker_base(jule::Ref<_1e2a7c2a2_Sema> _3931_s,jule::Ref<_1e1737e81_FnIns> _3945_owner) {
	return jule::new_struct_ref<_1e2a2e210_ScopeChecker>(new( std::nothrow ) _1e2a2e210_ScopeChecker(_3931_s,_3945_owner,jule::Ref<_1e2a2e210_ScopeChecker>(),jule::Int(),jule::new_struct<_1a2d05801_SymbolTable>(new( std::nothrow ) _1a2d05801_SymbolTable()),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e16025cb_ScopeTree>(),jule::Uintptr(),jule::Uintptr(),jule::Ref<jule::Slice<jule::Ref<_1e2a2e210_ScopeLabel>>>(),jule::Ref<jule::Slice<jule::Ref<_1e2a2e210_ScopeGoto>>>(),jule::Int()));
}



jule::Ref<_1e2a2e210_ScopeChecker> _1e2a2e210_new_scope_checker(jule::Ref<_1e2a7c2a2_Sema> _4726_s,jule::Ref<_1e1737e81_FnIns> _4740_owner) {
	jule::Ref<_1e2a2e210_ScopeChecker> _4813_base = _1e2a2e210_new_scope_checker_base(_4726_s,_4740_owner);
	_4813_base->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_1e2a2e210_ScopeLabel>>>(nullptr);
	_4813_base->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_1e2a2e210_ScopeGoto>>>(nullptr);
	return _4813_base;
}



jule::Ref<_1e2a2e210_ScopeLabel> _1e2a2e210_find_label_parent(jule::Str _5722_ident,jule::Ref<_1e2a2e210_ScopeChecker> _5738_scope) {
	jule::Ref<_1e2a2e210_ScopeLabel> _5813_label = _5738_scope->_method_find_label_scope(_5722_ident);
	while ((!(jule::real(_5813_label)))) {
		{
			if ((!(jule::real(_5738_scope->_field_parent))) || jule::real(_5738_scope->_field_owner)) {
				return jule::new_ref<_1e2a2e210_ScopeLabel>();
			}
			_5738_scope=_5738_scope->_field_parent;
			_5813_label=_5738_scope->_method_find_label_scope(_5722_ident);
		}
	_iter_next_4346729248:;
	}
	_iter_end_4346729248:;
	return _5813_label;
}



jule::Bool _1e2a2e210_stmt_is_goto_scope(jule::Any& _7124_stmt,jule::Ref<_1e2a2e210_Scope>& _7136_sc) {
	{
		auto _match_expr{ _7124_stmt };
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Scope>>())) { goto _case_end_4346736944; }
		_case_begin_4346736944:;
		{
			return (_7124_stmt.operator jule::Ref<_1e2a2e210_Scope>()).alloc == (_7136_sc).alloc;
		}
		goto _match_end_4346736320;
		_case_end_4346736944:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_InfIter>>())) { goto _case_end_4346737040; }
		_case_begin_4346737040:;
		{
			return (_7124_stmt.operator jule::Ref<_1e2a2e210_InfIter>()->_field_scope).alloc == (_7136_sc).alloc;
		}
		goto _match_end_4346736320;
		_case_end_4346737040:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_RangeIter>>())) { goto _case_end_4346737952; }
		_case_begin_4346737952:;
		{
			return (_7124_stmt.operator jule::Ref<_1e2a2e210_RangeIter>()->_field_scope).alloc == (_7136_sc).alloc;
		}
		goto _match_end_4346736320;
		_case_end_4346737952:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_WhileIter>>())) { goto _case_end_4346738048; }
		_case_begin_4346738048:;
		{
			return (_7124_stmt.operator jule::Ref<_1e2a2e210_WhileIter>()->_field_scope).alloc == (_7136_sc).alloc;
		}
		goto _match_end_4346736320;
		_case_end_4346738048:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Match>>())) { goto _case_end_4346738144; }
		_case_begin_4346738144:;
		{
			jule::Ref<_1e2a2e210_Match> _8613_m = _7124_stmt.operator jule::Ref<_1e2a2e210_Match>();
			{
				auto expr = _8613_m->_field_cases;
				auto it = expr.begin();
				_iter_begin_4346747536:;
				if (it != expr.end()) {
					jule::Ref<_1e2a2e210_Case> _1e2a2e210_c = *it;
					{
						if ((_1e2a2e210_c->_field_scope).alloc == (_7136_sc).alloc) {
							return true;
						}
					}
					_iter_next_4346747536:;
					++it;
					goto _iter_begin_4346747536;
				}
				_iter_end_4346747536:;
			}
			return jule::real(_8613_m->_field_default) && ((_8613_m->_field_default->_field_scope).alloc == (_7136_sc).alloc);
		}
		goto _match_end_4346736320;
		_case_end_4346738144:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Conditional>>())) { goto _case_end_4346738240; }
		_case_begin_4346738240:;
		{
			jule::Ref<_1e2a2e210_Conditional> _9513_c = _7124_stmt.operator jule::Ref<_1e2a2e210_Conditional>();
			{
				auto expr = _9513_c->_field_elifs;
				auto it = expr.begin();
				_iter_begin_4346752240:;
				if (it != expr.end()) {
					jule::Ref<_1e2a2e210_If> _1e2a2e210_elif = *it;
					{
						if ((_1e2a2e210_elif->_field_scope).alloc == (_7136_sc).alloc) {
							return true;
						}
					}
					_iter_next_4346752240:;
					++it;
					goto _iter_begin_4346752240;
				}
				_iter_end_4346752240:;
			}
			return jule::real(_9513_c->_field_default) && ((_9513_c->_field_default->_field_scope).alloc == (_7136_sc).alloc);
		}
		goto _match_end_4346736320;
		_case_end_4346738240:;
		_case_begin_4346735792:;
		{
			return false;
		}
		goto _match_end_4346736320;
		_case_end_4346735792:;
		_match_end_4346736320:;
	}
}



jule::Int _1e2a2e210_count_match_type(jule::Ref<_1e2a2e210_Match> _10821_m,jule::Ref<_1a2db8ce3_TypeKind> _10832_t) {
	jule::Int _10913_n = 0LL;
	jule::Str _1109_kind = _10832_t->_method_to_str();
	_julec_label_loop:;
	{
		auto expr = _10821_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4346758064:;
		if (it != expr.end()) {
			jule::Ref<_1e2a2e210_Case> _1e2a2e210_c = *it;
			{
				if ((!(jule::real(_1e2a2e210_c)))) {
					goto _iter_next_4346758064;
				}
				{
					auto expr = _1e2a2e210_c->_field_exprs;
					auto it = expr.begin();
					_iter_begin_4346760400:;
					if (it != expr.end()) {
						jule::Any _1e2a2e210_expr = *it;
						{
							if (_1e2a2e210_expr == nullptr) {
								goto _iter_end_4346758064;
							}
							if (_1109_kind == _1e2a2e210_expr.operator jule::Ref<_1a2db8ce3_TypeKind>()->_method_to_str()) {
								(_10913_n)++;
							}
						}
						_iter_next_4346760400:;
						++it;
						goto _iter_begin_4346760400;
					}
					_iter_end_4346760400:;
				}
			}
			_iter_next_4346758064:;
			++it;
			goto _iter_begin_4346758064;
		}
		_iter_end_4346758064:;
	}
	return _10913_n;
}



jule::Slice<jule::Ref<_1a2c74a6c_Data>> _1e2a2e210_get_datas_from_tuple_data(jule::Ref<_1a2c74a6c_Data> _13234_d) {
	if (jule::real(_13234_d->_field_kind->_method_tup())) {
		{
			auto _match_expr{ _13234_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_TupleExprModel>>())) { goto _case_end_4346774592; }
			_case_begin_4346774592:;
			{
				return _13234_d->_field_model.operator jule::Ref<_1e2a30c17_TupleExprModel>()->_field_datas;
			}
			goto _match_end_4346765840;
			_case_end_4346774592:;
			_case_begin_4346765296:;
			{
				jule::Ref<_1a2db8ce3_Tuple> _13921_t = _13234_d->_field_kind->_method_tup();
				jule::Slice<jule::Ref<_1a2c74a6c_Data>> _14021_r = jule::Slice<jule::Ref<_1a2c74a6c_Data>>::alloc(static_cast<jule::I64>(_13921_t->_field_types.len()));
				{
					auto expr = _13921_t->_field_types;
					auto it = expr.begin();
					_iter_begin_4346770000:;
					if (it != expr.end()) {
						jule::Int _1e2a2e210_i = it - expr.begin();
						jule::Ref<_1a2db8ce3_TypeKind> _1e2a2e210_kind = *it;
						{
							_14021_r[_1e2a2e210_i]=jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(_1e2a2e210_kind,jule::Ref<_1a2db8ce3_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
						}
						_iter_next_4346770000:;
						++it;
						_1e2a2e210_i++;
						goto _iter_begin_4346770000;
					}
					_iter_end_4346770000:;
				}
				return _14021_r;
			}
			goto _match_end_4346765840;
			_case_end_4346765296:;
			_match_end_4346765840:;
		}
	} else {
		return jule::Slice<jule::Ref<_1a2c74a6c_Data>>({_13234_d});
	}
}



jule::Slice<jule::Any> _1e2a2e210_get_expr_models(jule::Any _15424_m) {
	{
		auto _match_expr{ _15424_m };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_TupleExpr>>())) { goto _case_end_4346777888; }
		_case_begin_4346777888:;
		{
			jule::Ref<_1e16025cb_TupleExpr> _15717_tup = _15424_m.operator jule::Ref<_1e16025cb_TupleExpr>();
			jule::Slice<jule::Any> _15817_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_15717_tup->_field_expr.len()));
			{
				auto expr = _15717_tup->_field_expr;
				auto it = expr.begin();
				_iter_begin_4346780400:;
				if (it != expr.end()) {
					jule::Ref<_1e16025cb_Expr> _1e2a2e210_expr = *it;
					{
						_15817_models=jule::append(_15817_models,jule::Slice<jule::Any>({_1e2a2e210_expr->_field_kind}));
					}
					_iter_next_4346780400:;
					++it;
					goto _iter_begin_4346780400;
				}
				_iter_end_4346780400:;
			}
			return _15817_models;
		}
		goto _match_end_4346764768;
		_case_end_4346777888:;
		_case_begin_4346764592:;
		{
			return jule::Slice<jule::Any>({_15424_m});
		}
		goto _match_end_4346764768;
		_case_end_4346764592:;
		_match_end_4346764768:;
	}
}



jule::Bool _1e2a2e210_check_mut(jule::Ref<_1e2a7c2a2_Sema> _16918_s,jule::Ref<_1a2c74a6c_Data> _16928_left,jule::Ref<_1a2c74a6c_Data> _16945_right,_1e15a2bb9_Token _16959_error_token) {
	jule::Bool _16981_ok = jule::Bool();
	{
		if (!(((!(_16928_left->_field_mutable))))) { goto _case_end_4346787424; }
		_case_begin_4346787424:;
		{
			_16918_s->_method_push_err(_16959_error_token,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>({}));
			_16981_ok = false;
			return _16981_ok;
		}
		goto _match_end_4346785824;
		_case_end_4346787424:;
		if (!(((jule::real(_16945_right) && (!(_16945_right->_field_mutable))) && _16945_right->_field_kind->_method_mutable()))) { goto _case_end_4346786976; }
		_case_begin_4346786976:;
		{
			_16918_s->_method_push_err(_16959_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
			_16981_ok = false;
			return _16981_ok;
		}
		goto _match_end_4346785824;
		_case_end_4346786976:;
		_case_begin_4346786000:;
		{
			_16981_ok = true;
			return _16981_ok;
		}
		goto _match_end_4346785824;
		_case_end_4346786000:;
		_match_end_4346785824:;
	}
}



jule::Bool _1e2a2e210_check_assign(jule::Ref<_1e2a7c2a2_Sema> _18421_s,jule::Ref<_1a2c74a6c_Data> _18435_left,jule::Ref<_1a2c74a6c_Data> _18452_right,_1e15a2bb9_Token _18466_error_token) {
	jule::Bool _18488_ok = jule::Bool();
	jule::Ref<_1e1737e81_FnIns> _1859_f = _18435_left->_field_kind->_method_fnc();
	if ((jule::real(_1859_f) && jule::real(_1859_f->_field_decl)) && _1859_f->_field_decl->_field_global) {
		_18421_s->_method_push_err(_18466_error_token,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>({}));
		_18488_ok = false;
		return _18488_ok;
	}
	{
		if (!((_18435_left->_method_is_const()))) { goto _case_end_4346802192; }
		_case_begin_4346802192:;
		{
			_18421_s->_method_push_err(_18466_error_token,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>({}));
			_18421_s->_method_push_suggestion(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>({}));
			_18488_ok = false;
			return _18488_ok;
		}
		goto _match_end_4346800016;
		_case_end_4346802192:;
		if (!(((!(_18435_left->_field_lvalue))))) { goto _case_end_4346801728; }
		_case_begin_4346801728:;
		{
			_18421_s->_method_push_err(_18466_error_token,jule::Str("assignment required lvalue", 26),jule::Slice<jule::Any>({}));
			_18488_ok = false;
			return _18488_ok;
		}
		goto _match_end_4346800016;
		_case_end_4346801728:;
		if (!(((!(_1e2a2e210_check_mut(_18421_s,_18435_left,_18452_right,_18466_error_token)))))) { goto _case_end_4346801824; }
		_case_begin_4346801824:;
		{
			_18488_ok = false;
			return _18488_ok;
		}
		goto _match_end_4346800016;
		_case_end_4346801824:;
		_case_begin_4346800816:;
		{
			_18488_ok = true;
			return _18488_ok;
		}
		goto _match_end_4346800016;
		_case_end_4346800816:;
		_match_end_4346800016:;
	}
}



jule::Bool _1e2a2e210_is_valid_ast_st_for_next_st(jule::Any _20936_n) {
	{
		auto _match_expr{ _20936_n };
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_AssignSt>>())) { goto _case_end_4346809104; }
		_case_begin_4346809104:;
		{
			return (!(_20936_n.operator jule::Ref<_1e16025cb_AssignSt>()->_field_declarative));
		}
		goto _match_end_4346808544;
		_case_end_4346809104:;
		if (!(_match_expr.type_is<jule::Ref<_1e16025cb_FnCallExpr>>() || _match_expr.type_is<jule::Ref<_1e16025cb_Expr>>())) { goto _case_end_4346809200; }
		_case_begin_4346809200:;
		{
			return true;
		}
		goto _match_end_4346808544;
		_case_end_4346809200:;
		_case_begin_4346809584:;
		{
			return false;
		}
		goto _match_end_4346808544;
		_case_end_4346809584:;
		_match_end_4346808544:;
	}
}



jule::Bool _1e2a2e210_is_valid_st_for_next_st(jule::Any _22328_st) {
	{
		auto _match_expr{ _22328_st };
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_FnCallExprModel>>() || _match_expr.type_is<jule::Ref<_1e2a2e210_Postfix>>() || _match_expr.type_is<jule::Ref<_1e2a2e210_Assign>>() || _match_expr.type_is<jule::Ref<_1e2a2e210_MultiAssign>>())) { goto _case_end_4346814640; }
		_case_begin_4346814640:;
		{
			return true;
		}
		goto _match_end_4346813296;
		_case_end_4346814640:;
		if (!(_match_expr.type_is<jule::Ref<_1a2c74a6c_Data>>())) { goto _case_end_4346814736; }
		_case_begin_4346814736:;
		{
			{
				auto _match_expr{ _22328_st.operator jule::Ref<_1a2c74a6c_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_FnCallExprModel>>())) { goto _case_end_4346820480; }
				_case_begin_4346820480:;
				{
					return true;
				}
				goto _match_end_4346820176;
				_case_end_4346820480:;
				_case_begin_4346813568:;
				{
					return false;
				}
				goto _match_end_4346820176;
				_case_end_4346813568:;
				_match_end_4346820176:;
			}
		}
		goto _match_end_4346813296;
		_case_end_4346814736:;
		_case_begin_4346813200:;
		{
			return false;
		}
		goto _match_end_4346813296;
		_case_end_4346813200:;
		_match_end_4346813296:;
	}
}



jule::Bool _1e2a2e210_st_is_def(jule::Any _24214_st) {
	{
		auto _match_expr{ _24214_st };
		if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4346823312; }
		_case_begin_4346823312:;
		{
			return true;
		}
		goto _match_end_4346821296;
		_case_end_4346823312:;
		_case_begin_4346821664:;
		{
			return false;
		}
		goto _match_end_4346821296;
		_case_end_4346821664:;
		_match_end_4346821296:;
	}
}



jule::Ref<_1ba80e105_Var> _1e2a7b966_find_var_in_package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>& _2729_files,jule::Str _2752_ident,jule::Bool _2764_cpp_linked) {
	{
		auto expr = _2729_files;
		auto it = expr.begin();
		_iter_begin_4346824960:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7b966_f = *it;
			{
				jule::Ref<_1ba80e105_Var> _2917_v = _1e2a7b966_f->_method_find_var(_2752_ident,_2764_cpp_linked);
				if (jule::real(_2917_v)) {
					return _2917_v;
				}
			}
			_iter_next_4346824960:;
			++it;
			goto _iter_begin_4346824960;
		}
		_iter_end_4346824960:;
	}
	return jule::new_ref<_1ba80e105_Var>();
}



jule::Ref<_1a2db8ce3_TypeAlias> _1e2a7b966_find_type_alias_in_package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>& _3936_files,jule::Str _3959_ident,jule::Bool _3971_cpp_linked) {
	{
		auto expr = _3936_files;
		auto it = expr.begin();
		_iter_begin_4346825968:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7b966_f = *it;
			{
				jule::Ref<_1a2db8ce3_TypeAlias> _4117_ta = _1e2a7b966_f->_method_find_type_alias(_3959_ident,_3971_cpp_linked);
				if (jule::real(_4117_ta)) {
					return _4117_ta;
				}
			}
			_iter_next_4346825968:;
			++it;
			goto _iter_begin_4346825968;
		}
		_iter_end_4346825968:;
	}
	return jule::new_ref<_1a2db8ce3_TypeAlias>();
}



jule::Ref<_1e177440c_Struct> _1e2a7b966_find_struct_in_package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>& _5132_files,jule::Str _5155_ident,jule::Bool _5167_cpp_linked) {
	{
		auto expr = _5132_files;
		auto it = expr.begin();
		_iter_begin_4346836864:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7b966_f = *it;
			{
				jule::Ref<_1e177440c_Struct> _5317_s = _1e2a7b966_f->_method_find_struct(_5155_ident,_5167_cpp_linked);
				if (jule::real(_5317_s)) {
					return _5317_s;
				}
			}
			_iter_next_4346836864:;
			++it;
			goto _iter_begin_4346836864;
		}
		_iter_end_4346836864:;
	}
	return jule::new_ref<_1e177440c_Struct>();
}



jule::Ref<_1e1737e81_Fn> _1e2a7b966_find_fn_in_package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>& _6328_files,jule::Str _6351_ident,jule::Bool _6363_cpp_linked) {
	{
		auto expr = _6328_files;
		auto it = expr.begin();
		_iter_begin_4346837872:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7b966_file = *it;
			{
				jule::Ref<_1e1737e81_Fn> _6517_f = _1e2a7b966_file->_method_find_fn(_6351_ident,_6363_cpp_linked);
				if (jule::real(_6517_f)) {
					return _6517_f;
				}
			}
			_iter_next_4346837872:;
			++it;
			goto _iter_begin_4346837872;
		}
		_iter_end_4346837872:;
	}
	return jule::new_ref<_1e1737e81_Fn>();
}



jule::Ref<_1e2a1e563_Trait> _1e2a7b966_find_trait_in_package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>& _7531_files,jule::Str _7554_ident) {
	{
		auto expr = _7531_files;
		auto it = expr.begin();
		_iter_begin_4346848160:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7b966_f = *it;
			{
				jule::Ref<_1e2a1e563_Trait> _7717_t = _1e2a7b966_f->_method_find_trait(_7554_ident);
				if (jule::real(_7717_t)) {
					return _7717_t;
				}
			}
			_iter_next_4346848160:;
			++it;
			goto _iter_begin_4346848160;
		}
		_iter_end_4346848160:;
	}
	return jule::new_ref<_1e2a1e563_Trait>();
}



jule::Ref<_1e2a21d4b_Enum> _1e2a7b966_find_enum_in_package(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>& _8730_files,jule::Str _8753_ident) {
	{
		auto expr = _8730_files;
		auto it = expr.begin();
		_iter_begin_4346852432:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7b966_f = *it;
			{
				jule::Ref<_1e2a21d4b_Enum> _8917_e = _1e2a7b966_f->_method_find_enum(_8753_ident);
				if (jule::real(_8917_e)) {
					return _8917_e;
				}
			}
			_iter_next_4346852432:;
			++it;
			goto _iter_begin_4346852432;
		}
		_iter_end_4346852432:;
	}
	return jule::new_ref<_1e2a21d4b_Enum>();
}



jule::Bool _1e2a7c2a2_is_valid_model_for_ref(jule::Any _1527_m) {
	{
		auto _match_expr{ _1527_m };
		if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4346854160; }
		_case_begin_4346854160:;
		{
			return true;
		}
		goto _match_end_4346858304;
		_case_end_4346854160:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_StructSubIdentExprModel>>())) { goto _case_end_4346854256; }
		_case_begin_4346854256:;
		{
			jule::Ref<_1e2a30c17_StructSubIdentExprModel> _2113_model = _1527_m.operator jule::Ref<_1e2a30c17_StructSubIdentExprModel>();
			return _1e2a7c2a2_is_valid_model_for_ref(_2113_model->_field_expr);
		}
		goto _match_end_4346858304;
		_case_end_4346854256:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_TraitSubIdentExprModel>>())) { goto _case_end_4346854352; }
		_case_begin_4346854352:;
		{
			jule::Ref<_1e2a30c17_TraitSubIdentExprModel> _2513_model = _1527_m.operator jule::Ref<_1e2a30c17_TraitSubIdentExprModel>();
			return _1e2a7c2a2_is_valid_model_for_ref(_2513_model->_field_expr);
		}
		goto _match_end_4346858304;
		_case_end_4346854352:;
		_case_begin_4346857056:;
		{
			return false;
		}
		goto _match_end_4346858304;
		_case_end_4346857056:;
		_match_end_4346858304:;
	}
}



_1ec8e8025_Log _1e2a7c2a2_compiler_err(_1e15a2bb9_Token& _3318_token,jule::Bool _3332_line,jule::Str _3344_fmt,jule::Slice<jule::Any> _3357_args) {
	_1ec8e8025_Log _3413_log = _1ec8e8025_Log(1LLU,_3318_token._field_row,_3318_token._field_column,_3318_token._field_file->_method_path(),_1ec8e8025_logf(_3344_fmt,_3357_args),jule::Str(),jule::Str());
	if (_3332_line) {
		_3413_log._field_line=_3318_token._field_file->_method_get_row(_3318_token._field_row);
	}
	return _3413_log;
}



jule::Bool _1e2a7c2a2_imp_is_lookupable(jule::Ref<_1e2a7b966_ImportInfo>& _4723_i,jule::Str _4739_ident) {
	if (_4723_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_4723_i->_field_import_all))) {
		if (_4723_i->_field_selected.len() > 0LL) {
			return _4723_i->_method_exist_ident(_4739_ident);
		}
	}
	return _4723_i->_field_import_all;
}



jule::Slice<jule::Ref<_1ba80e105_Var>> _1e2a7c2a2_build_ret_vars(jule::Ref<_1e1737e81_FnIns>& _6024_f) {
	if (_6024_f->_field_decl->_method_is_void() || (!(jule::real(_6024_f->_field_result)))) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1ba80e105_Var>> _6513_vars = nullptr;
	jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>> _6613_types = _1a2c73c9c_get_fn_result_types(_6024_f);
	{
		auto expr = _6024_f->_field_decl->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4346883920:;
		if (it != expr.end()) {
			jule::Int _1e2a7c2a2_i = it - expr.begin();
			_1e15a2bb9_Token _1e2a7c2a2_ident = *it;
			{
				if (_1e15a2bb9_is_ignore_ident(_1e2a7c2a2_ident._field_kind)) {
					goto _iter_next_4346883920;
				}
				jule::Ref<_1ba80e105_Var> _7217_v = jule::new_struct<_1ba80e105_Var>(new( std::nothrow ) _1ba80e105_Var(_6024_f->_field_scope,_1e2a7c2a2_ident,_1e2a7c2a2_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),_6613_types[_1e2a7c2a2_i])),jule::new_struct<_1a2c74a6c_Value>(new( std::nothrow ) _1a2c74a6c_Value(jule::Ref<_1e16025cb_Expr>(),jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data()))),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Slice<jule::Ref<_1e16025cb_Directive>>(),jule::Ref<_1ba80e105_IterRelation>(),jule::Slice<jule::Ref<_1ba80e105_Var>>()));
				_6513_vars=jule::append(_6513_vars,jule::Slice<jule::Ref<_1ba80e105_Var>>({_7217_v}));
			}
			_iter_next_4346883920:;
			++it;
			_1e2a7c2a2_i++;
			goto _iter_begin_4346883920;
		}
		_iter_end_4346883920:;
	}
	return _6513_vars;
}



jule::Slice<jule::Ref<_1ba80e105_Var>> _1e2a7c2a2_build_param_vars(jule::Ref<_1e1737e81_FnIns>& _8926_f) {
	if (_8926_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1ba80e105_Var>> _9413_vars = jule::Slice<jule::Ref<_1ba80e105_Var>>::alloc(static_cast<jule::I64>(_8926_f->_field_params.len()));
	{
		auto expr = _8926_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4346895488:;
		if (it != expr.end()) {
			jule::Int _1e2a7c2a2_i = it - expr.begin();
			jule::Ref<_1e1737e81_ParamIns> _1e2a7c2a2_p = *it;
			{
				jule::Ref<_1ba80e105_Var> _9617_v = jule::new_struct<_1ba80e105_Var>(new( std::nothrow ) _1ba80e105_Var(_8926_f->_field_scope,_1e2a7c2a2_p->_field_decl->_field_token,_1e2a7c2a2_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_1e2a7c2a2_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol()),jule::new_struct<_1a2c74a6c_Value>(new( std::nothrow ) _1a2c74a6c_Value(jule::Ref<_1e16025cb_Expr>(),jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data()))),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Slice<jule::Ref<_1e16025cb_Directive>>(),jule::Ref<_1ba80e105_IterRelation>(),jule::Slice<jule::Ref<_1ba80e105_Var>>()));
				{
					if (!((_1e2a7c2a2_p->_field_decl->_method_is_self()))) { goto _case_end_4346902480; }
					_case_begin_4346902480:;
					{
						_9617_v->_field_kind->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_8926_f->_field_owner));
						_9617_v->_field_reference=true;
						if (_1e2a7c2a2_p->_field_decl->_method_is_ref()) {
							_9617_v->_field_ident=_9617_v->_field_ident.slice(1LL);
							_9617_v->_field_kind->_field_kind->_field_kind=jule::new_struct<_1a2db8ce3_Ref>(new( std::nothrow ) _1a2db8ce3_Ref(_9617_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_4346901184;
					_case_end_4346902480:;
					if (!((_1e2a7c2a2_p->_field_decl->_field_variadic))) { goto _case_end_4346905008; }
					_case_begin_4346905008:;
					{
						_9617_v->_field_kind->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1a2db8ce3_Slc>(new( std::nothrow ) _1a2db8ce3_Slc(_1e2a7c2a2_p->_field_kind->_method_clone()))));
					}
					goto _match_end_4346901184;
					_case_end_4346905008:;
					_case_begin_4346901744:;
					{
						_9617_v->_field_kind->_field_kind=_1e2a7c2a2_p->_field_kind->_method_clone();
					}
					goto _match_end_4346901184;
					_case_end_4346901744:;
					_match_end_4346901184:;
				}
				_9413_vars[_1e2a7c2a2_i]=_9617_v;
			}
			_iter_next_4346895488:;
			++it;
			_1e2a7c2a2_i++;
			goto _iter_begin_4346895488;
		}
		_iter_end_4346895488:;
	}
	return _9413_vars;
}



jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>> _1e2a7c2a2_build_generic_type_aliases(jule::Ref<_1e1737e81_FnIns>& _13736_f) {
	jule::I64 _13813_size = _13736_f->_field_generics.len();
	if (jule::real(_13736_f->_field_decl->_field_owner)) {
		_13813_size+=static_cast<jule::I64>(_13736_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_13813_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>> _14713_aliases = jule::Slice<jule::Ref<_1a2db8ce3_TypeAlias>>::alloc(_13813_size);
	{
		auto expr = _13736_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4346918816:;
		if (it != expr.end()) {
			jule::Int _1e2a7c2a2_i = it - expr.begin();
			jule::Ref<_1a2db8ce3_TypeKind> _1e2a7c2a2_g = *it;
			{
				jule::Ref<_1e16025cb_GenericDecl> _15017_decl = _13736_f->_field_decl->_field_generics[_1e2a7c2a2_i];
				_14713_aliases[_1e2a7c2a2_i]=jule::new_struct<_1a2db8ce3_TypeAlias>(new( std::nothrow ) _1a2db8ce3_TypeAlias(_13736_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_15017_decl->_field_token,_15017_decl->_field_ident,jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),_1e2a7c2a2_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4346918816:;
			++it;
			_1e2a7c2a2_i++;
			goto _iter_begin_4346918816;
		}
		_iter_end_4346918816:;
	}
	if (jule::real(_13736_f->_field_decl->_field_owner)) {
		jule::Ref<_1e177440c_StructIns> _16217_owner = _13736_f->_field_owner;
		{
			auto expr = _16217_owner->_field_generics;
			auto it = expr.begin();
			_iter_begin_4346926768:;
			if (it != expr.end()) {
				jule::Int _1e2a7c2a2_i = it - expr.begin();
				jule::Ref<_1a2db8ce3_TypeKind> _1e2a7c2a2_g = *it;
				{
					jule::Ref<_1e16025cb_GenericDecl> _16421_decl = _16217_owner->_field_decl->_field_generics[_1e2a7c2a2_i];
					_14713_aliases[_13736_f->_field_generics.len() + _1e2a7c2a2_i]=jule::new_struct<_1a2db8ce3_TypeAlias>(new( std::nothrow ) _1a2db8ce3_TypeAlias(_13736_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_16421_decl->_field_token,_16421_decl->_field_ident,jule::new_struct<_1a2db8ce3_TypeSymbol>(new( std::nothrow ) _1a2db8ce3_TypeSymbol(jule::Ref<_1e16025cb_TypeDecl>(),_1e2a7c2a2_g)),jule::Str(),jule::Slice<jule::Any>()));
				}
				_iter_next_4346926768:;
				++it;
				_1e2a7c2a2_i++;
				goto _iter_begin_4346926768;
			}
			_iter_end_4346926768:;
		}
	}
	return _14713_aliases;
}



jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_find_file(jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>& _17919_files,jule::Ref<_1e17bebd8_File>& _17943_handler) {
	{
		auto expr = _17919_files;
		auto it = expr.begin();
		_iter_begin_4346933888:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e2a7c2a2_fl = *it;
			{
				if ((_1e2a7c2a2_fl->_field_file).alloc == (_17943_handler).alloc) {
					return _1e2a7c2a2_fl;
				}
			}
			_iter_next_4346933888:;
			++it;
			goto _iter_begin_4346933888;
		}
		_iter_end_4346933888:;
	}
	return jule::new_ref<_1a2d05801_SymbolTable>();
}



std::tuple<jule::Bool,jule::Bool> _1e2a7c2a2_conditional_has_ret(jule::Ref<_1e2a2e210_Conditional> _18828_c) {
	jule::Bool _18847_ok = jule::Bool();
	jule::Bool _18857_breaking = jule::Bool();
	jule::Bool _18913_breaked = false;
	{
		auto expr = _18828_c->_field_elifs;
		auto it = expr.begin();
		_iter_begin_4346938784:;
		if (it != expr.end()) {
			jule::Ref<_1e2a2e210_If> _1e2a7c2a2_elif = *it;
			{
				if ((!(jule::real(_1e2a7c2a2_elif)))) {
					_18847_ok = false;
					_18857_breaking = false;
					return std::make_tuple(_18847_ok,_18857_breaking);
				}
				std::tie(_18847_ok,std::ignore,_18857_breaking) = _1e2a7c2a2___has_ret(_1e2a7c2a2_elif->_field_scope);
				_18913_breaked=_18913_breaked || _18857_breaking;
				if ((!(_18847_ok))) {
					_18847_ok = false;
					_18857_breaking = _18913_breaked;
					return std::make_tuple(_18847_ok,_18857_breaking);
				}
			}
			_iter_next_4346938784:;
			++it;
			goto _iter_begin_4346938784;
		}
		_iter_end_4346938784:;
	}
	if ((!(jule::real(_18828_c->_field_default)))) {
		_18847_ok = false;
		_18857_breaking = _18913_breaked;
		return std::make_tuple(_18847_ok,_18857_breaking);
	}
	std::tie(_18847_ok,std::ignore,_18857_breaking) = _1e2a7c2a2___has_ret(_18828_c->_field_default->_field_scope);
	_18913_breaked=_18913_breaked || _18857_breaking;
	_18847_ok = _18847_ok;
	_18857_breaking = _18913_breaked;
	return std::make_tuple(_18847_ok,_18857_breaking);
}



jule::Bool _1e2a7c2a2_match_has_ret(jule::Ref<_1e2a2e210_Match> _21022_m) {
	if ((!(jule::real(_21022_m->_field_default)))) {
		return false;
	}
	jule::Bool _21513_ok = true;
	jule::Bool _21613_falled = false;
	jule::Bool _21713_breaked = false;
	{
		auto expr = _21022_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4346951008:;
		if (it != expr.end()) {
			jule::Ref<_1e2a2e210_Case> _1e2a7c2a2_c = *it;
			{
				if ((!(jule::real(_1e2a7c2a2_c)))) {
					return false;
				}
				std::tie(_21513_ok,_21613_falled,_21713_breaked) = _1e2a7c2a2___has_ret(_1e2a7c2a2_c->_field_scope);
				if (((!(_21513_ok)) && (!(_21613_falled))) || _21713_breaked) {
					return false;
				}
				{
					if (!(((!(_21513_ok))))) { goto _case_end_4346955328; }
					_case_begin_4346955328:;
					{
						if ((!(_21613_falled))) {
							return false;
						}
						goto _case_begin_4346955424;
					}
					goto _match_end_4346955200;
					_case_end_4346955328:;
					if (!((_21613_falled))) { goto _case_end_4346955424; }
					_case_begin_4346955424:;
					{
						if ((!(jule::real(_1e2a7c2a2_c->_field_next)))) {
							return false;
						}
						goto _iter_next_4346951008;
					}
					goto _match_end_4346955200;
					_case_end_4346955424:;
					_match_end_4346955200:;
				}
				_21613_falled=false;
			}
			_iter_next_4346951008:;
			++it;
			goto _iter_begin_4346951008;
		}
		_iter_end_4346951008:;
	}
	return _1e2a7c2a2_has_ret(_21022_m->_field_default->_field_scope);
}



std::tuple<jule::Bool,jule::Bool,jule::Bool> _1e2a7c2a2___has_ret(jule::Ref<_1e2a2e210_Scope> _24618_s) {
	jule::Bool _24631_ok = jule::Bool();
	jule::Bool _24641_falled = jule::Bool();
	jule::Bool _24655_breaked = jule::Bool();
	if ((!(jule::real(_24618_s)))) {
		_24631_ok = false;
		_24641_falled = false;
		_24655_breaked = false;
		return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
	}
	{
		auto expr = _24618_s->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4346962048:;
		if (it != expr.end()) {
			jule::Any _1e2a7c2a2_st = *it;
			{
				{
					auto _match_expr{ _1e2a7c2a2_st };
					if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_FallSt>>())) { goto _case_end_4346965104; }
					_case_begin_4346965104:;
					{
						_24641_falled=true;
					}
					goto _match_end_4346965520;
					_case_end_4346965104:;
					if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_BreakSt>>())) { goto _case_end_4346965600; }
					_case_begin_4346965600:;
					{
						_24631_ok = false;
						_24641_falled = false;
						_24655_breaked = true;
						return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
					}
					goto _match_end_4346965520;
					_case_end_4346965600:;
					if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_ContSt>>())) { goto _case_end_4346965888; }
					_case_begin_4346965888:;
					{
						_24631_ok = false;
						_24641_falled = false;
						_24655_breaked = true;
						return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
					}
					goto _match_end_4346965520;
					_case_end_4346965888:;
					if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_InfIter>>())) { goto _case_end_4346965984; }
					_case_begin_4346965984:;
					{
						_24631_ok=_1e2a7c2a2_has_ret(_1e2a7c2a2_st.operator jule::Ref<_1e2a2e210_InfIter>()->_field_scope);
						if (_24631_ok) {
							_24631_ok = true;
							_24641_falled = false;
							_24655_breaked = false;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
					}
					goto _match_end_4346965520;
					_case_end_4346965984:;
					if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_RetSt>>())) { goto _case_end_4346966080; }
					_case_begin_4346966080:;
					{
						_24631_ok = true;
						_24641_falled = _24641_falled;
						_24655_breaked = _24655_breaked;
						return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
					}
					goto _match_end_4346965520;
					_case_end_4346966080:;
					if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Scope>>())) { goto _case_end_4346966176; }
					_case_begin_4346966176:;
					{
						_24631_ok=_1e2a7c2a2_has_ret(_1e2a7c2a2_st.operator jule::Ref<_1e2a2e210_Scope>());
						if (_24631_ok) {
							_24631_ok = true;
							_24641_falled = false;
							_24655_breaked = false;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
					}
					goto _match_end_4346965520;
					_case_end_4346966176:;
					if (!(_match_expr.type_is<jule::Ref<_1a2c74a6c_Data>>())) { goto _case_end_4346966288; }
					_case_begin_4346966288:;
					{
						{
							auto _match_expr{ _1e2a7c2a2_st.operator jule::Ref<_1a2c74a6c_Data>()->_field_model };
							if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinPanicCallExprModel>>())) { goto _case_end_4346981120; }
							_case_begin_4346981120:;
							{
								_24631_ok = true;
								_24641_falled = _24641_falled;
								_24655_breaked = _24655_breaked;
								return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
							}
							goto _match_end_4346981504;
							_case_end_4346981120:;
							_match_end_4346981504:;
						}
					}
					goto _match_end_4346965520;
					_case_end_4346966288:;
					if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Recover>>())) { goto _case_end_4346966400; }
					_case_begin_4346966400:;
					{
						jule::Bool _28418_ok;
						jule::Bool _28422__falled;
						jule::Bool _28431__breaked;
						std::tie(_28418_ok,_28422__falled,_28431__breaked) = _1e2a7c2a2___has_ret(_1e2a7c2a2_st.operator jule::Ref<_1e2a2e210_Recover>()->_field_scope);
						if (_28418_ok) {
							_24631_ok = true;
							_24641_falled = _28422__falled;
							_24655_breaked = _28431__breaked;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
					}
					goto _match_end_4346965520;
					_case_end_4346966400:;
					if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Conditional>>())) { goto _case_end_4346966512; }
					_case_begin_4346966512:;
					{
						std::tie(_24631_ok,_24655_breaked) = _1e2a7c2a2_conditional_has_ret(_1e2a7c2a2_st.operator jule::Ref<_1e2a2e210_Conditional>());
						if (_24631_ok) {
							_24631_ok = true;
							_24641_falled = false;
							_24655_breaked = false;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
						if (_24655_breaked) {
							_24631_ok = false;
							_24641_falled = false;
							_24655_breaked = _24655_breaked;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
					}
					goto _match_end_4346965520;
					_case_end_4346966512:;
					if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Match>>())) { goto _case_end_4346966624; }
					_case_begin_4346966624:;
					{
						_24631_ok=_1e2a7c2a2_match_has_ret(_1e2a7c2a2_st.operator jule::Ref<_1e2a2e210_Match>());
						if (_24631_ok) {
							_24631_ok = true;
							_24641_falled = false;
							_24655_breaked = false;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
					}
					goto _match_end_4346965520;
					_case_end_4346966624:;
					_match_end_4346965520:;
				}
			}
			_iter_next_4346962048:;
			++it;
			goto _iter_begin_4346962048;
		}
		_iter_end_4346962048:;
	}
	_24631_ok = false;
	_24641_falled = _24641_falled;
	_24655_breaked = _24655_breaked;
	return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
}



jule::Bool _1e2a7c2a2_has_ret(jule::Ref<_1e2a2e210_Scope> _31016_s) {
	jule::Bool _31110_ok;
	std::tie(_31110_ok,std::ignore,std::ignore) = _1e2a7c2a2___has_ret(_31016_s);
	return _31110_ok;
}



void _1e2a7c2a2_push_suggestion(_1ec8e8025_Log* _31531_log,jule::Str _31542_fmt,jule::Slice<jule::Any> _31555_args) {
	_31531_log->_field_suggestion=_1ec8e8025_logf(_31542_fmt,_31555_args);
}



jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>> _1a2c73c9c_get_fn_result_types(jule::Ref<_1e1737e81_FnIns>& _2629_f) {
	{
		if (!((_2629_f->_field_decl->_method_is_void() || (!(jule::real(_2629_f->_field_result)))))) { goto _case_end_4347003696; }
		_case_begin_4347003696:;
		{
			return nullptr;
		}
		goto _match_end_4347002176;
		_case_end_4347003696:;
		if (!(((!(jule::real(_2629_f->_field_result->_method_tup())))))) { goto _case_end_4347004608; }
		_case_begin_4347004608:;
		{
			return jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>({_2629_f->_field_result});
		}
		goto _match_end_4347002176;
		_case_end_4347004608:;
		_case_begin_4347002368:;
		{
			return _2629_f->_field_result->_method_tup()->_field_types;
		}
		goto _match_end_4347002176;
		_case_end_4347002368:;
		_match_end_4347002176:;
	}
}



jule::Bool _1a2c73c9c_trait_has_reference_receiver(jule::Ref<_1e2a1e563_Trait>& _3934_t) {
	{
		auto expr = _3934_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4347006528:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1a2c73c9c_f = *it;
			{
				if (_1a2c73c9c_f->_field_statically) {
					goto _iter_next_4347006528;
				}
				jule::Ref<_1e1737e81_Param> _4613_p = _1a2c73c9c_f->_field_params[0LL];
				if (_4613_p->_method_is_ref() && _4613_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_4347006528:;
			++it;
			goto _iter_begin_4347006528;
		}
		_iter_end_4347006528:;
	}
	return false;
}



jule::Bool _1a2c73c9c_float_assignable(jule::Str _5421_kind,jule::Ref<_1a2c74a6c_Data>& _5433_d) {
	jule::Str _559_value = _1ec95e245_fmt_float(static_cast<jule::F64>(_5433_d->_field_constant->_method_as_f64()),'g',-1LL,64LL);
	return _1a4422ea5_check_bit_float(_559_value,static_cast<jule::Int>(_1a4422ea5_bitsize_of(_5421_kind)));
}



jule::Bool _1a2c73c9c_sig_assignable(jule::Str _5919_kind,jule::Ref<_1a2c74a6c_Data>& _5931_d) {
	jule::F64 _609_min = _1a4449817_min(_5919_kind);
	jule::F64 _619_max = _1a4449817_max(_5919_kind);
	{
		if (!((_5931_d->_field_constant->_method_is_f64()))) { goto _case_end_4347020704; }
		_case_begin_4347020704:;
		{
			jule::F64 _6513_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_f64());
			jule::F64 _6614_i;
			jule::F64 _6617_frac;
			std::tie(_6614_i,_6617_frac) = _1e125431b_modf(_6513_x);
			if (_6617_frac != 0LL) {
				return false;
			}
			return (_6614_i >= _609_min) && (_6614_i <= _619_max);
		}
		goto _match_end_4347020368;
		_case_end_4347020704:;
		if (!((_5931_d->_field_constant->_method_is_u64()))) { goto _case_end_4347020800; }
		_case_begin_4347020800:;
		{
			jule::F64 _7313_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_u64());
			if (_7313_x <= _619_max) {
				return true;
			}
		}
		goto _match_end_4347020368;
		_case_end_4347020800:;
		if (!((_5931_d->_field_constant->_method_is_i64()))) { goto _case_end_4347020896; }
		_case_begin_4347020896:;
		{
			jule::F64 _7913_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_i64());
			return (_609_min <= _7913_x) && (_7913_x <= _619_max);
		}
		goto _match_end_4347020368;
		_case_end_4347020896:;
		_match_end_4347020368:;
	}
	return false;
}



jule::Bool _1a2c73c9c_unsig_assignable(jule::Str _8621_kind,jule::Ref<_1a2c74a6c_Data>& _8633_d) {
	jule::F64 _879_max = _1a4449817_max(_8621_kind);
	if (_8633_d->_field_is_rune && (_8621_kind == jule::Str("u8", 2))) {
		return _1a4552e1a_is_ascii(static_cast<jule::I32>(_8633_d->_field_constant->_method_read_i64()));
	}
	{
		if (!((_8633_d->_field_constant->_method_is_f64()))) { goto _case_end_4347034352; }
		_case_begin_4347034352:;
		{
			jule::F64 _9413_x = _8633_d->_field_constant->_method_read_f64();
			if (_9413_x < 0LL) {
				return false;
			}
			jule::F64 _9914_i;
			jule::F64 _9917_frac;
			std::tie(_9914_i,_9917_frac) = _1e125431b_modf(_9413_x);
			if (_9917_frac != 0LL) {
				return false;
			}
			return _9914_i <= _879_max;
		}
		goto _match_end_4347034032;
		_case_end_4347034352:;
		if (!((_8633_d->_field_constant->_method_is_u64()))) { goto _case_end_4347034448; }
		_case_begin_4347034448:;
		{
			jule::F64 _10613_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_u64());
			if (_10613_x <= _879_max) {
				return true;
			}
		}
		goto _match_end_4347034032;
		_case_end_4347034448:;
		if (!((_8633_d->_field_constant->_method_is_i64()))) { goto _case_end_4347034544; }
		_case_begin_4347034544:;
		{
			jule::F64 _11213_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_i64());
			return (0LL <= _11213_x) && (_11213_x <= _879_max);
		}
		goto _match_end_4347034032;
		_case_end_4347034544:;
		_match_end_4347034032:;
	}
	return false;
}



jule::Bool _1a2c73c9c_int_assignable(jule::Str _11919_kind,jule::Ref<_1a2c74a6c_Data>& _11931_d) {
	{
		if (!((_1a44da204_is_sig_int(_11919_kind)))) { goto _case_end_4347049328; }
		_case_begin_4347049328:;
		{
			return _1a2c73c9c_sig_assignable(_11919_kind,_11931_d);
		}
		goto _match_end_4347037248;
		_case_end_4347049328:;
		if (!((_1a44da204_is_unsig_int(_11919_kind)))) { goto _case_end_4347049424; }
		_case_begin_4347049424:;
		{
			return _1a2c73c9c_unsig_assignable(_11919_kind,_11931_d);
		}
		goto _match_end_4347037248;
		_case_end_4347049424:;
		_case_begin_4347047216:;
		{
			return false;
		}
		goto _match_end_4347037248;
		_case_end_4347047216:;
		_match_end_4347037248:;
	}
}



jule::Any _1a2c74a6c_find_builtins_import(jule::Str _4625_ident,jule::Ref<_1e2a7b966_ImportInfo> _4637_imp) {
	return _1a36e0bad_find_package_builtin_def(_4637_imp->_field_link_path,_4625_ident);
}



void _1a2c74a6c_make_struct_lit_alloc(jule::Ref<_1a2c74a6c_Data>& _5031_d,jule::Ref<_1e2a30c17_StructLitExprModel>& _5046_lit) {
	_5031_d->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1a2db8ce3_Ref>(new( std::nothrow ) _1a2db8ce3_Ref(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_5046_lit->_field_strct))))));
	_5031_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_AllocStructLitExprModel>(new( std::nothrow ) _1e2a30c17_AllocStructLitExprModel(_5046_lit)));
}



jule::Any _1a2c74a6c_find_builtins_sema(jule::Str _6223_ident,jule::Ref<_1e2a7c2a2_Sema> _6239_s) {
	{
		auto expr = _6239_s->_field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4347059264:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1a2c74a6c_imp = *it;
			{
				if (_1a2c74a6c_imp->_field_import_all || _1a2c74a6c_imp->_method_exist_ident(_6223_ident)) {
					jule::Any _6521_def = _1a2c74a6c_find_builtins_import(_6223_ident,_1a2c74a6c_imp);
					if (_6521_def != nullptr) {
						return _6521_def;
					}
				}
			}
			_iter_next_4347059264:;
			++it;
			goto _iter_begin_4347059264;
		}
		_iter_end_4347059264:;
	}
	return jule::Any(nullptr);
}



jule::Bool _1a2c74a6c_is_ok_for_shifting(jule::Ref<_1a2c74a6c_Data> _7427_d) {
	jule::Ref<_1a2db8ce3_Prim> _759_prim = _7427_d->_field_kind->_method_prim();
	if ((!(jule::real(_759_prim))) || (!(_1a44da204_is_int(_759_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_7427_d->_method_is_const()))) {
		return true;
	}
	{
		if (!((_7427_d->_field_constant->_method_is_i64()))) { goto _case_end_4347070736; }
		_case_begin_4347070736:;
		{
			return _7427_d->_field_constant->_method_read_i64() >= 0LL;
		}
		goto _match_end_4347068608;
		_case_end_4347070736:;
		if (!((_7427_d->_field_constant->_method_is_u64()))) { goto _case_end_4347070832; }
		_case_begin_4347070832:;
		{
			return true;
		}
		goto _match_end_4347068608;
		_case_end_4347070832:;
		_case_begin_4347068720:;
		{
			return false;
		}
		goto _match_end_4347068608;
		_case_end_4347068720:;
		_match_end_4347068608:;
	}
}



jule::Bool _1a2c74a6c_is_instanced_struct(jule::Ref<_1e177440c_StructIns> _9124_s) {
	return _9124_s->_field_decl->_field_generics.len() == _9124_s->_field_generics.len();
}



jule::Bool _1a2c74a6c_is_ptr_arithmetic_compatible_int(jule::Ref<_1a2c74a6c_Data>& _9542_d) {
	if (_9542_d->_method_is_const()) {
		return _1a2c73c9c_int_assignable(jule::Str("int", 3),_9542_d);
	}
	_1a2c73c9c_TypeCompatibilityChecker _9913_tcc = _1a2c73c9c_TypeCompatibilityChecker(jule::Ref<_1e2a7c2a2_Sema>(),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("int", 3)))),_9542_d->_field_kind,_1e15a2bb9_Token(),jule::Bool(),true,jule::Bool());
	return _9913_tcc._method_check();
}



void _1a2c74a6c_normalize_bitsize(jule::Ref<_1a2c74a6c_Data> _10726_d) {
	if ((!(_10726_d->_method_is_const()))) {
		return;
	}
	jule::Str _11213_kind = jule::Str();
	{
		if (!((_10726_d->_field_constant->_method_is_i64()))) { goto _case_end_4347090544; }
		_case_begin_4347090544:;
		{
			jule::I64 _11513_x = _10726_d->_field_constant->_method_read_i64();
			_11213_kind=_1a4422ea5_int_from_bits(static_cast<jule::U64>(_1a4422ea5_bitsize_of_int(_11513_x)));
		}
		goto _match_end_4347089344;
		_case_end_4347090544:;
		if (!((_10726_d->_field_constant->_method_is_u64()))) { goto _case_end_4347090640; }
		_case_begin_4347090640:;
		{
			jule::U64 _11913_x = _10726_d->_field_constant->_method_read_u64();
			_11213_kind=_1a4422ea5_uint_from_bits(static_cast<jule::U64>(_1a4422ea5_bitsize_of_uint(_11913_x)));
		}
		goto _match_end_4347089344;
		_case_end_4347090640:;
		_case_begin_4347089584:;
		{
			return;
		}
		goto _match_end_4347089344;
		_case_end_4347089584:;
		_match_end_4347089344:;
	}
	if (jule::real(_10726_d->_field_kind->_method_enm())) {
		return;
	}
	_10726_d->_field_kind->_field_kind=_1a2db8ce3_build_prim_type(_11213_kind);
}



void _1a2c74a6c_normalize_type(jule::Ref<_1a2c74a6c_Data> _13423_d) {
	{
		if (!((_1a2c73c9c_int_assignable(jule::Str("int", 3),_13423_d)))) { goto _case_end_4347099424; }
		_case_begin_4347099424:;
		{
			_13423_d->_field_kind->_field_kind=_1a2db8ce3_build_prim_type(jule::Str("int", 3));
			_13423_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_13423_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4347099200;
		_case_end_4347099424:;
		if (!((_1a2c73c9c_int_assignable(jule::Str("uint", 4),_13423_d)))) { goto _case_end_4347099536; }
		_case_begin_4347099536:;
		{
			_13423_d->_field_kind->_field_kind=_1a2db8ce3_build_prim_type(jule::Str("uint", 4));
			_13423_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_13423_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4347099200;
		_case_end_4347099536:;
		_match_end_4347099200:;
	}
}



void _1a2c74a6c_apply_cast_kind_model(jule::Ref<_1a2c74a6c_Data> _14630_d) {
	_14630_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_CastingExprModel>(new( std::nothrow ) _1e2a30c17_CastingExprModel(_14630_d->_field_model,_14630_d->_field_cast_kind,_14630_d->_field_kind)));
}



void _1a2c74a6c_apply_cast_kind(jule::Ref<_1a2c74a6c_Data> _15424_d) {
	if ((!(jule::real(_15424_d->_field_cast_kind)))) {
		return;
	}
	_1a2c74a6c_apply_cast_kind_model(_15424_d);
	_15424_d->_field_kind=_15424_d->_field_cast_kind;
	jule::drop(_15424_d->_field_cast_kind);
}



jule::Ref<_1a2c74a6c_Data> _1a2c74a6c_build_void_data(void) {
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("void", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1a37ddd88_Const>()));
}



jule::Str _1a2c74a6c_kind_by_bitsize(jule::Any _17520_expr) {
	{
		auto _match_expr{ _17520_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4347115920; }
		_case_begin_4347115920:;
		{
			jule::F64 _17813_x = _17520_expr.operator jule::F64();
			return _1a4422ea5_float_from_bits(static_cast<jule::U64>(_1a4422ea5_bitsize_of_float(_17813_x)));
		}
		goto _match_end_4347113296;
		_case_end_4347115920:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4347115488; }
		_case_begin_4347115488:;
		{
			jule::I64 _18213_x = _17520_expr.operator jule::I64();
			return _1a4422ea5_int_from_bits(static_cast<jule::U64>(_1a4422ea5_bitsize_of_int(_18213_x)));
		}
		goto _match_end_4347113296;
		_case_end_4347115488:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4347115584; }
		_case_begin_4347115584:;
		{
			jule::U64 _18613_x = _17520_expr.operator jule::U64();
			return _1a4422ea5_uint_from_bits(static_cast<jule::U64>(_1a4422ea5_bitsize_of_uint(_18613_x)));
		}
		goto _match_end_4347113296;
		_case_end_4347115584:;
		_case_begin_4347110832:;
		{
			return jule::Str();
		}
		goto _match_end_4347113296;
		_case_end_4347110832:;
		_match_end_4347113296:;
	}
}



jule::Str _1a2c74a6c_check_data_for_integer_indexing(jule::Ref<_1a2c74a6c_Data> _19440_d) {
	jule::Str _19452_err_fmt = jule::Str();
	if ((!(jule::real(_19440_d)))) {
		_19452_err_fmt = jule::Str();
		return _19452_err_fmt;
	}
	jule::Ref<_1a2db8ce3_TypeKind> _19913_kind = _19440_d->_field_kind;
	if (jule::real(_19913_kind->_method_ref())) {
		_19913_kind=_19913_kind->_method_ref()->_field_elem;
	}
	{
		if (!(((!(jule::real(_19913_kind->_method_prim())))))) { goto _case_end_4347125008; }
		_case_begin_4347125008:;
		{
			_19452_err_fmt = jule::Str("invalid expression", 18);
			return _19452_err_fmt;
		}
		goto _match_end_4347124848;
		_case_end_4347125008:;
		if (!(((!(_1a44da204_is_int(_19913_kind->_method_prim()->_method_to_str())))))) { goto _case_end_4347125104; }
		_case_begin_4347125104:;
		{
			_19452_err_fmt = jule::Str("invalid expression", 18);
			return _19452_err_fmt;
		}
		goto _match_end_4347124848;
		_case_end_4347125104:;
		if (!((_19440_d->_method_is_const()))) { goto _case_end_4347125200; }
		_case_begin_4347125200:;
		{
			if (_19440_d->_field_constant->_method_as_f64() < 0LL) {
				_19452_err_fmt = jule::Str("overflow the limit of data-type", 31);
				return _19452_err_fmt;
			}
		}
		goto _match_end_4347124848;
		_case_end_4347125200:;
		if (!(((!(jule::real(_19440_d->_field_kind->_method_prim())))) || (_19440_d->_method_is_const()) || (_1a4422ea5_real_kind_of(_19440_d->_field_kind->_method_prim()->_method_to_str()) != _1a4422ea5_real_kind_of(jule::Str("int", 3))))) { goto _case_end_4347127536; }
		_case_begin_4347127536:;
		{
			_19440_d->_field_cast_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("int", 3))));
			_1a2c74a6c_apply_cast_kind(_19440_d);
		}
		goto _match_end_4347124848;
		_case_end_4347127536:;
		_match_end_4347124848:;
	}
	_19452_err_fmt = jule::Str();
	return _19452_err_fmt;
}



jule::Bool _1a2db8ce3_can_get_ptr(jule::Ref<_1a2c74a6c_Data>& _56121_d) {
	if ((!(_56121_d->_field_lvalue)) || _56121_d->_method_is_const()) {
		return false;
	}
	{
		if (!((jule::real(_56121_d->_field_kind->_method_fnc()) || jule::real(_56121_d->_field_kind->_method_enm())))) { goto _case_end_4347138272; }
		_case_begin_4347138272:;
		{
			return false;
		}
		goto _match_end_4347137888;
		_case_end_4347138272:;
		_case_begin_4347137472:;
		{
			return true;
		}
		goto _match_end_4347137888;
		_case_end_4347137472:;
		_match_end_4347137888:;
	}
}



jule::Bool _1a2db8ce3_is_valid_for_ref_type(jule::Ref<_1a2db8ce3_TypeKind>& _57631_t) {
	jule::Ref<_1e177440c_StructIns> _57713_s = _57631_t->_method_strct();
	if ((jule::real(_57713_s) && jule::real(_57713_s->_field_decl)) && _57713_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return (!(((jule::real(_57631_t->_method_enm()) || jule::real(_57631_t->_method_ptr())) || jule::real(_57631_t->_method_ref())) || jule::real(_57631_t->_method_arr())));
}



jule::Bool _1a2db8ce3_is_valid_for_ref(jule::Ref<_1a2db8ce3_TypeKind>& _58526_t) {
	return (!(jule::real(_58526_t->_method_fnc())));
}



jule::Str _1a2db8ce3_build_link_path_by_tokens(jule::Slice<_1e15a2bb9_Token>& _58931_tokens) {
	jule::Str _59013_s = _58931_tokens[0LL]._field_kind;
	{
		auto expr = _58931_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4347151792:;
		if (it != expr.end()) {
			_1e15a2bb9_Token _1a2db8ce3_token = *it;
			{
				_59013_s+=jule::Str("::", 2);
				_59013_s+=_1a2db8ce3_token._field_kind;
			}
			_iter_next_4347151792:;
			++it;
			goto _iter_begin_4347151792;
		}
		_iter_end_4347151792:;
	}
	return _59013_s;
}



jule::Ref<_1a2db8ce3_Prim> _1a2db8ce3_build_prim_type(jule::Str _59820_kind) {
	return jule::new_struct<_1a2db8ce3_Prim>(new( std::nothrow ) _1a2db8ce3_Prim(_59820_kind));
}



jule::Ref<_1e177440c_Struct> _1a2db8ce3_get_struct_from_kind(jule::Ref<_1a2db8ce3_TypeKind> _60429_k) {
	{
		if (!(((!(jule::real(_60429_k)))))) { goto _case_end_4347157568; }
		_case_begin_4347157568:;
		{
			return jule::new_ref<_1e177440c_Struct>();
		}
		goto _match_end_4347155184;
		_case_end_4347157568:;
		if (!((jule::real(_60429_k->_method_strct())))) { goto _case_end_4347156912; }
		_case_begin_4347156912:;
		{
			return _60429_k->_method_strct()->_field_decl;
		}
		goto _match_end_4347155184;
		_case_end_4347156912:;
		if (!((jule::real(_60429_k->_method_ref())))) { goto _case_end_4347156704; }
		_case_begin_4347156704:;
		{
			return _1a2db8ce3_get_struct_from_kind(_60429_k->_method_ref()->_field_elem);
		}
		goto _match_end_4347155184;
		_case_end_4347156704:;
		if (!((jule::real(_60429_k->_method_slc())))) { goto _case_end_4347156800; }
		_case_begin_4347156800:;
		{
			return _1a2db8ce3_get_struct_from_kind(_60429_k->_method_slc()->_field_elem);
		}
		goto _match_end_4347155184;
		_case_end_4347156800:;
		if (!((jule::real(_60429_k->_method_arr())))) { goto _case_end_4347157296; }
		_case_begin_4347157296:;
		{
			return _1a2db8ce3_get_struct_from_kind(_60429_k->_method_arr()->_field_elem);
		}
		goto _match_end_4347155184;
		_case_end_4347157296:;
		if (!((jule::real(_60429_k->_method_ptr())))) { goto _case_end_4347157392; }
		_case_begin_4347157392:;
		{
			return jule::new_ref<_1e177440c_Struct>();
		}
		goto _match_end_4347155184;
		_case_end_4347157392:;
		_case_begin_4347155440:;
		{
			return jule::new_ref<_1e177440c_Struct>();
		}
		goto _match_end_4347155184;
		_case_end_4347155440:;
		_match_end_4347155184:;
	}
}



jule::Bool _1a2db8ce3_is_prim(jule::Str _63312_kind) {
	return (((((((((((((((_63312_kind == jule::Str("i8", 2)) || (_63312_kind == jule::Str("i16", 3))) || (_63312_kind == jule::Str("i32", 3))) || (_63312_kind == jule::Str("i64", 3))) || (_63312_kind == jule::Str("u8", 2))) || (_63312_kind == jule::Str("u16", 3))) || (_63312_kind == jule::Str("u32", 3))) || (_63312_kind == jule::Str("u64", 3))) || (_63312_kind == jule::Str("f32", 3))) || (_63312_kind == jule::Str("f64", 3))) || (_63312_kind == jule::Str("int", 3))) || (_63312_kind == jule::Str("uint", 4))) || (_63312_kind == jule::Str("uintptr", 7))) || (_63312_kind == jule::Str("bool", 4))) || (_63312_kind == jule::Str("str", 3))) || (_63312_kind == jule::Str("any", 3));
}



std::tuple<jule::Ref<_1a2d05801_SymbolTable>,jule::Slice<_1ec8e8025_Log>> _1a36c926d_build_symbols(jule::Ref<_1e15a53c5_Ast>& _1523_ast,jule::Trait<_1e2a7b966_Importer>& _1539_importer,jule::Ref<_1e28b6a59_SymbolBuilder> _1563_owner) {
	jule::Ref<_1e28b6a59_SymbolBuilder> _1613_sb = jule::new_struct_ref<_1e28b6a59_SymbolBuilder>(new( std::nothrow ) _1e28b6a59_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_1ec8e8025_Log>(),_1523_ast,jule::Ref<_1a2d05801_SymbolTable>()));
	_1613_sb->_method_build();
	if (_1613_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1613_sb->_field_table,nullptr);
	}
	return std::make_tuple(jule::new_ref<_1a2d05801_SymbolTable>(),_1613_sb->_field_errors);
}



std::tuple<jule::Ref<_1e2a7b966_Package>,jule::Slice<_1ec8e8025_Log>> _1a36c926d___analyze_package(jule::Slice<jule::Ref<_1e15a53c5_Ast>>& _2927_files,jule::Trait<_1e2a7b966_Importer>& _2947_importer,jule::Int& _2968_flags) {
	jule::Slice<jule::Ref<_1a2d05801_SymbolTable>> _3113_tables = jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>::alloc(static_cast<jule::I64>(_2927_files.len()));
	{
		auto expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_4347179920:;
		if (it != expr.end()) {
			jule::Int _1a36c926d_i = it - expr.begin();
			jule::Ref<_1e15a53c5_Ast> _1a36c926d_f = *it;
			{
				jule::Ref<_1a2d05801_SymbolTable> _3318_table;
				jule::Slice<_1ec8e8025_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _1a36c926d_build_symbols(_1a36c926d_f,_2947_importer,jule::new_ref<_1e28b6a59_SymbolBuilder>());
				if (_3329_errors.len() > 0LL) {
					return std::make_tuple(jule::new_ref<_1e2a7b966_Package>(),_3329_errors);
				}
				_3113_tables[_1a36c926d_i]=_3318_table;
			}
			_iter_next_4347179920:;
			++it;
			_1a36c926d_i++;
			goto _iter_begin_4347179920;
		}
		_iter_end_4347179920:;
	}
	jule::Ref<_1e2a7c2a2_Sema> _4013_sema = jule::new_struct_ref<_1e2a7c2a2_Sema>(new( std::nothrow ) _1e2a7c2a2_Sema(jule::Slice<_1ec8e8025_Log>(),jule::Slice<jule::Ref<_1a2d05801_SymbolTable>>(),jule::Ref<_1a2d05801_SymbolTable>(),_2968_flags));
	_4013_sema->_method_check(_3113_tables);
	if (_4013_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1e2a7b966_Package>(),_4013_sema->_field_errors);
	}
	jule::Ref<_1e2a7b966_Package> _4813_pkg = jule::new_struct<_1e2a7b966_Package>(new( std::nothrow ) _1e2a7b966_Package(_4013_sema->_field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



std::tuple<jule::Ref<_1e2a7b966_Package>,jule::Slice<_1ec8e8025_Log>> _1a36c926d_analyze_package(jule::Slice<jule::Ref<_1e15a53c5_Ast>> _7228_files,jule::Trait<_1e2a7b966_Importer> _7247_importer,jule::Int _7267_flags) {
	if (_7228_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_1e2a7b966_Package>(),nullptr);
	}
	jule::Ref<_1e2a7b966_Package> _7714_package;
	jule::Slice<_1ec8e8025_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _1a36c926d___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



std::tuple<jule::Ref<_1a2d05801_SymbolTable>,jule::Slice<_1ec8e8025_Log>> _1a36c926d_analyze_file(jule::Ref<_1e15a53c5_Ast> _9825_f,jule::Trait<_1e2a7b966_Importer> _9838_importer,jule::Int _9858_flags) {
	jule::Slice<jule::Ref<_1e15a53c5_Ast>> _9913_files = jule::Slice<jule::Ref<_1e15a53c5_Ast>>({_9825_f});
	jule::Ref<_1e2a7b966_Package> _10014_pkg;
	jule::Slice<_1ec8e8025_Log> _10023_errors;
	std::tie(_10014_pkg,_10023_errors) = _1a36c926d_analyze_package(_9913_files,_9838_importer,_9858_flags);
	if (_10023_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1a2d05801_SymbolTable>(),_10023_errors);
	}
	jule::Ref<_1a2d05801_SymbolTable> _10713_table = _10014_pkg->_field_files[0LL];
	return std::make_tuple(_10713_table,nullptr);
}



void _1a36e0bad_init(void) {
	_1a36e0bad_BUILTIN_FN_OUT->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_out);
	_1a36e0bad_BUILTIN_FN_OUTLN->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_outln);
	_1a36e0bad_BUILTIN_FN_NEW->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_new);
	_1a36e0bad_BUILTIN_FN_REAL->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_real);
	_1a36e0bad_BUILTIN_FN_DROP->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_drop);
	_1a36e0bad_BUILTIN_FN_PANIC->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_panic);
	_1a36e0bad_BUILTIN_FN_MAKE->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_make);
	_1a36e0bad_BUILTIN_FN_APPEND->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_append);
	_1a36e0bad_BUILTIN_FN_COPY->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_copy);
	_1a36e0bad_BUILTIN_FN_RECOVER->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_recover);
	_1a36e0bad_BUILTIN_FN_CLONE->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_clone);
	_1a36e0bad_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_std_mem_size_of);
	_1a36e0bad_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_std_mem_align_of);
	_1a36e0bad_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_std_jule_integrated_to_str);
	jule::Ref<_1e1737e81_Fn> _11213_error_method = _1a36e0bad_BUILTIN_TRAIT_ERROR->_method_find_method(jule::Str("error", 5));
	jule::Ref<_1e1737e81_FnIns> _11313_error_method_ins = _11213_error_method->_method_instance();
	_11313_error_method_ins->_field_result=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("str", 3))));
	_11313_error_method_ins->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common);
	_11213_error_method->_method_append_instance(_11313_error_method_ins);
	jule::Ref<_1e1737e81_Fn> _11813_dispose_method = _1a36e0bad_BUILTIN_TRAIT_DISPOSE->_method_find_method(jule::Str("dispose", 7));
	jule::Ref<_1e1737e81_FnIns> _11913_dispose_method_ins = _11813_dispose_method->_method_instance();
	_11913_dispose_method_ins->_field_caller=jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common);
	_11813_dispose_method->_method_append_instance(_11913_dispose_method_ins);
}



jule::Ref<_1e1737e81_FnIns> _1a36e0bad_find_builtin_fn(jule::Str _12420_ident) {
	{
		auto _match_expr{ _12420_ident };
		if (!((jule::Str("out", 3)) == _match_expr)) { goto _case_end_4347230224; }
		_case_begin_4347230224:;
		{
			return _1a36e0bad_BUILTIN_FN_OUT;
		}
		goto _match_end_4347228560;
		_case_end_4347230224:;
		if (!((jule::Str("outln", 5)) == _match_expr)) { goto _case_end_4347230704; }
		_case_begin_4347230704:;
		{
			return _1a36e0bad_BUILTIN_FN_OUTLN;
		}
		goto _match_end_4347228560;
		_case_end_4347230704:;
		if (!((jule::Str("new", 3)) == _match_expr)) { goto _case_end_4347230048; }
		_case_begin_4347230048:;
		{
			return _1a36e0bad_BUILTIN_FN_NEW;
		}
		goto _match_end_4347228560;
		_case_end_4347230048:;
		if (!((jule::Str("real", 4)) == _match_expr)) { goto _case_end_4347229840; }
		_case_begin_4347229840:;
		{
			return _1a36e0bad_BUILTIN_FN_REAL;
		}
		goto _match_end_4347228560;
		_case_end_4347229840:;
		if (!((jule::Str("drop", 4)) == _match_expr)) { goto _case_end_4347229936; }
		_case_begin_4347229936:;
		{
			return _1a36e0bad_BUILTIN_FN_DROP;
		}
		goto _match_end_4347228560;
		_case_end_4347229936:;
		if (!((jule::Str("panic", 5)) == _match_expr)) { goto _case_end_4347230432; }
		_case_begin_4347230432:;
		{
			return _1a36e0bad_BUILTIN_FN_PANIC;
		}
		goto _match_end_4347228560;
		_case_end_4347230432:;
		if (!((jule::Str("make", 4)) == _match_expr)) { goto _case_end_4347230528; }
		_case_begin_4347230528:;
		{
			return _1a36e0bad_BUILTIN_FN_MAKE;
		}
		goto _match_end_4347228560;
		_case_end_4347230528:;
		if (!((jule::Str("append", 6)) == _match_expr)) { goto _case_end_4347229472; }
		_case_begin_4347229472:;
		{
			return _1a36e0bad_BUILTIN_FN_APPEND;
		}
		goto _match_end_4347228560;
		_case_end_4347229472:;
		if (!((jule::Str("copy", 4)) == _match_expr)) { goto _case_end_4347229568; }
		_case_begin_4347229568:;
		{
			return _1a36e0bad_BUILTIN_FN_COPY;
		}
		goto _match_end_4347228560;
		_case_end_4347229568:;
		if (!((jule::Str("recover", 7)) == _match_expr)) { goto _case_end_4347229664; }
		_case_begin_4347229664:;
		{
			return _1a36e0bad_BUILTIN_FN_RECOVER;
		}
		goto _match_end_4347228560;
		_case_end_4347229664:;
		if (!((jule::Str("clone", 5)) == _match_expr)) { goto _case_end_4347228864; }
		_case_begin_4347228864:;
		{
			return _1a36e0bad_BUILTIN_FN_CLONE;
		}
		goto _match_end_4347228560;
		_case_end_4347228864:;
		_case_begin_4347227936:;
		{
			return jule::new_ref<_1e1737e81_FnIns>();
		}
		goto _match_end_4347228560;
		_case_end_4347227936:;
		_match_end_4347228560:;
	}
}



jule::Ref<_1a2db8ce3_TypeAlias> _1a36e0bad_find_builtin_type_alias(jule::Str _14128_ident) {
	{
		auto _match_expr{ _14128_ident };
		if (!((jule::Str("byte", 4)) == _match_expr)) { goto _case_end_4347237552; }
		_case_begin_4347237552:;
		{
			return _1a36e0bad_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_4347231536;
		_case_end_4347237552:;
		if (!((jule::Str("rune", 4)) == _match_expr)) { goto _case_end_4347238032; }
		_case_begin_4347238032:;
		{
			return _1a36e0bad_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_4347231536;
		_case_end_4347238032:;
		_case_begin_4347235280:;
		{
			return jule::new_ref<_1a2db8ce3_TypeAlias>();
		}
		goto _match_end_4347231536;
		_case_end_4347235280:;
		_match_end_4347231536:;
	}
}



jule::Ref<_1e2a1e563_Trait> _1a36e0bad_find_builtin_trait(jule::Str _14923_ident) {
	{
		auto _match_expr{ _14923_ident };
		if (!((jule::Str("Error", 5)) == _match_expr)) { goto _case_end_4347240256; }
		_case_begin_4347240256:;
		{
			return _1a36e0bad_BUILTIN_TRAIT_ERROR;
		}
		goto _match_end_4347238512;
		_case_end_4347240256:;
		if (!((jule::Str("Dispose", 7)) == _match_expr)) { goto _case_end_4347240736; }
		_case_begin_4347240736:;
		{
			return _1a36e0bad_BUILTIN_TRAIT_DISPOSE;
		}
		goto _match_end_4347238512;
		_case_end_4347240736:;
		_case_begin_4347236592:;
		{
			return jule::new_ref<_1e2a1e563_Trait>();
		}
		goto _match_end_4347238512;
		_case_end_4347236592:;
		_match_end_4347238512:;
	}
}



jule::Any _1a36e0bad_find_builtin_def(jule::Str _15721_ident) {
	jule::Ref<_1e1737e81_FnIns> _15813_f = _1a36e0bad_find_builtin_fn(_15721_ident);
	if (jule::real(_15813_f)) {
		return jule::Any(_15813_f);
	}
	jule::Ref<_1a2db8ce3_TypeAlias> _16313_ta = _1a36e0bad_find_builtin_type_alias(_15721_ident);
	if (jule::real(_16313_ta)) {
		return jule::Any(_16313_ta);
	}
	jule::Ref<_1e2a1e563_Trait> _16813_t = _1a36e0bad_find_builtin_trait(_15721_ident);
	if (jule::real(_16813_t)) {
		return jule::Any(_16813_t);
	}
	return jule::Any(nullptr);
}



jule::Any _1a36e0bad_find_builtin_def_std_mem(jule::Str _17629_ident) {
	{
		auto _match_expr{ _17629_ident };
		if (!((jule::Str("size_of", 7)) == _match_expr)) { goto _case_end_4347249104; }
		_case_begin_4347249104:;
		{
			return jule::Any(_1a36e0bad_BUILTIN_FN_STD_MEM_SIZE_OF);
		}
		goto _match_end_4347246368;
		_case_end_4347249104:;
		if (!((jule::Str("align_of", 8)) == _match_expr)) { goto _case_end_4347248608; }
		_case_begin_4347248608:;
		{
			return jule::Any(_1a36e0bad_BUILTIN_FN_STD_MEM_ALIGN_OF);
		}
		goto _match_end_4347246368;
		_case_end_4347248608:;
		_case_begin_4347246272:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4347246368;
		_case_end_4347246272:;
		_match_end_4347246368:;
	}
}



jule::Any _1a36e0bad_find_builtin_def_std_jule_integrated(jule::Str _18441_ident) {
	{
		auto _match_expr{ _18441_ident };
		if (!((jule::Str("to_str", 6)) == _match_expr)) { goto _case_end_4347252096; }
		_case_begin_4347252096:;
		{
			return jule::Any(_1a36e0bad_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR);
		}
		goto _match_end_4347249568;
		_case_end_4347252096:;
		_case_begin_4347250128:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4347249568;
		_case_end_4347250128:;
		_match_end_4347249568:;
	}
}



jule::Any _1a36e0bad_find_package_builtin_def(jule::Str _19129_link_path,jule::Str _19145_ident) {
	{
		auto _match_expr{ _19129_link_path };
		if (!((jule::Str("std::mem", 8)) == _match_expr)) { goto _case_end_4347255008; }
		_case_begin_4347255008:;
		{
			return _1a36e0bad_find_builtin_def_std_mem(_19145_ident);
		}
		goto _match_end_4347252240;
		_case_end_4347255008:;
		if (!((jule::Str("std::jule::integrated", 21)) == _match_expr)) { goto _case_end_4347254512; }
		_case_begin_4347254512:;
		{
			return _1a36e0bad_find_builtin_def_std_jule_integrated(_19145_ident);
		}
		goto _match_end_4347252240;
		_case_end_4347254512:;
		_case_begin_4347247728:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4347252240;
		_case_end_4347247728:;
		_match_end_4347252240:;
	}
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_common_plain(jule::Ref<_1a2c74a6c_Eval>& _19937_e,jule::Ref<_1e16025cb_FnCallExpr>& _19952_fc,jule::Ref<_1a2c74a6c_Data>& _19974_d) {
	jule::Ref<_1e1737e81_FnIns> _20013_f = _19974_d->_field_kind->_method_fnc();
	_1a2c73c9c_FnCallArgChecker _20213_fcac = _1a2c73c9c_FnCallArgChecker(_19937_e,_19952_fc->_field_args,_19952_fc->_field_token,_20013_f,false,jule::Slice<jule::Any>());
	_20213_fcac._method_check();
	jule::Ref<_1e2a30c17_FnCallExprModel> _21113_model = jule::new_struct<_1e2a30c17_FnCallExprModel>(new( std::nothrow ) _1e2a30c17_FnCallExprModel(_20013_f,_19952_fc->_field_concurrent,_19974_d->_field_model,_20213_fcac._field_arg_models));
	if ((!(jule::real(_20013_f->_field_result)))) {
		_19974_d=_1a2c74a6c_build_void_data();
	} else {
		_19974_d=jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(_20013_f->_field_result,jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
	}
	_19974_d->_field_model=jule::Any(_21113_model);
	return _19974_d;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_common(jule::Ref<_1a2c74a6c_Eval>& _23031_e,jule::Ref<_1e16025cb_FnCallExpr>& _23046_fc,jule::Ref<_1a2c74a6c_Data>& _23068_d) {
	if (_23046_fc->_field_generics.len() > 0LL) {
		_23031_e->_method_push_err(_23046_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	return _1a36e0bad_builtin_caller_common_plain(_23031_e,_23046_fc,_23068_d);
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_common_mut(jule::Ref<_1a2c74a6c_Eval>& _23835_e,jule::Ref<_1e16025cb_FnCallExpr>& _23850_fc,jule::Ref<_1a2c74a6c_Data>& _23872_d) {
	if ((!(_23872_d->_field_mutable))) {
		_23835_e->_method_push_err(_23850_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	return _1a36e0bad_builtin_caller_common(_23835_e,_23850_fc,_23872_d);
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_out(jule::Ref<_1a2c74a6c_Eval>& _24528_e,jule::Ref<_1e16025cb_FnCallExpr>& _24543_fc,jule::Ref<_1a2c74a6c_Data>& ) {
	if (_24543_fc->_field_generics.len() > 0LL) {
		_24528_e->_method_push_err(_24543_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_24543_fc->_field_args.len() < 1LL) {
		_24528_e->_method_push_err(_24543_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_24543_fc->_field_args.len() > 1LL) {
		_24528_e->_method_push_err(_24543_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _25713_expr = _24528_e->_method_eval_expr(_24543_fc->_field_args[0LL]);
	if ((!(jule::real(_25713_expr)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if ((_25713_expr->_method_is_void() || jule::real(_25713_expr->_field_kind->_method_fnc())) || jule::real(_25713_expr->_field_kind->_method_tup())) {
		_24528_e->_method_push_err(_24543_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1a2c74a6c_Data> _26713_d = _1a2c74a6c_build_void_data();
	_26713_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_BuiltinOutCallExprModel>(new( std::nothrow ) _1e2a30c17_BuiltinOutCallExprModel(_25713_expr->_field_model)));
	return _26713_d;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_outln(jule::Ref<_1a2c74a6c_Eval>& _27230_e,jule::Ref<_1e16025cb_FnCallExpr>& _27245_fc,jule::Ref<_1a2c74a6c_Data>& _27267_d) {
	_27267_d=_1a36e0bad_builtin_caller_out(_27230_e,_27245_fc,_27267_d);
	if ((!(jule::real(_27267_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_27267_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_BuiltinOutlnCallExprModel>(new( std::nothrow ) _1e2a30c17_BuiltinOutlnCallExprModel(_27267_d->_field_model.operator jule::Ref<_1e2a30c17_BuiltinOutCallExprModel>()->_field_expr)));
	return _27267_d;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_new(jule::Ref<_1a2c74a6c_Eval>& _28428_e,jule::Ref<_1e16025cb_FnCallExpr>& _28443_fc,jule::Ref<_1a2c74a6c_Data>& _28465_d) {
	if (_28443_fc->_field_generics.len() > 0LL) {
		_28428_e->_method_push_err(_28443_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_28443_fc->_field_args.len() < 1LL) {
		_28428_e->_method_push_err(_28443_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_28443_fc->_field_args.len() > 2LL) {
		_28428_e->_method_push_err(_28443_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _29613_t = _28428_e->_method_eval_expr_kind(_28443_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_29613_t)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if ((!(_29613_t->_field_decl))) {
		_28428_e->_method_push_err(_28443_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if ((!(_1a2db8ce3_is_valid_for_ref_type(_29613_t->_field_kind)))) {
		jule::Ref<_1e177440c_StructIns> _30717_s = _29613_t->_field_kind->_method_strct();
		if ((jule::real(_30717_s) && jule::real(_30717_s->_field_decl)) && _30717_s->_field_decl->_field_cpp_linked) {
			_28428_e->_method_push_err(_28443_fc->_field_args[0LL]->_field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
		} else {
			_28428_e->_method_push_err(_28443_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_28465_d->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1a2db8ce3_Ref>(new( std::nothrow ) _1a2db8ce3_Ref(_29613_t->_field_kind->_method_clone()))));
	if (_28443_fc->_field_args.len() == 2LL) {
		jule::Ref<_1a2db8ce3_TypeKind> _31917_old = _28428_e->_field_prefix;
		_28428_e->_field_prefix=_29613_t->_field_kind;
		jule::Ref<_1a2c74a6c_Data> _32217_init = _28428_e->_method_eval_expr(_28443_fc->_field_args[1LL]);
		_28428_e->_field_prefix=_31917_old;
		if (jule::real(_32217_init)) {
			_1e15a2bb9_Token _32721_token = _28443_fc->_field_args[1LL]->_field_token;
			
			_28428_e->_field_s->_method_check_validity_for_init_expr((!(_28428_e->_field_immutable)),false,_29613_t->_field_kind,_32217_init,_32721_token);
			_28428_e->_field_s->_method_check_assign_type(false,_29613_t->_field_kind,_32217_init,_32721_token,false);
			if (jule::real(_32217_init->_field_kind->_method_ref())) {
				_32217_init->_field_model=jule::Any(jule::new_struct<_1e2a30c17_ExplicitDerefExprModel>(new( std::nothrow ) _1e2a30c17_ExplicitDerefExprModel(_32217_init->_field_model)));
			}
			_28465_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_BuiltinNewCallExprModel>(new( std::nothrow ) _1e2a30c17_BuiltinNewCallExprModel(_29613_t->_field_kind,_32217_init->_field_model)));
		}
	} else {
		_28465_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_BuiltinNewCallExprModel>(new( std::nothrow ) _1e2a30c17_BuiltinNewCallExprModel(_29613_t->_field_kind,jule::Any())));
	}
	return _28465_d;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_real(jule::Ref<_1a2c74a6c_Eval>& _35129_e,jule::Ref<_1e16025cb_FnCallExpr>& _35144_fc,jule::Ref<_1a2c74a6c_Data>& _35166_d) {
	if (_35144_fc->_field_generics.len() > 0LL) {
		_35129_e->_method_push_err(_35144_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_35144_fc->_field_args.len() < 1LL) {
		_35129_e->_method_push_err(_35144_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_35144_fc->_field_args.len() > 1LL) {
		_35129_e->_method_push_err(_35144_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _36313_ref = _35129_e->_method_eval_expr(_35144_fc->_field_args[0LL]);
	if ((!(jule::real(_36313_ref)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if ((!(jule::real(_36313_ref->_field_kind->_method_ref())))) {
		_35129_e->_method_push_err(_35144_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_35129_e->_method_push_suggestion(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_35166_d->_field_kind=_1a36e0bad_BUILTIN_FN_REAL->_field_result;
	_35166_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_BuiltinRealCallExprModel>(new( std::nothrow ) _1e2a30c17_BuiltinRealCallExprModel(_36313_ref->_field_model)));
	return _35166_d;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_drop(jule::Ref<_1a2c74a6c_Eval>& _37929_e,jule::Ref<_1e16025cb_FnCallExpr>& _37944_fc,jule::Ref<_1a2c74a6c_Data>& ) {
	if (_37944_fc->_field_generics.len() > 0LL) {
		_37929_e->_method_push_err(_37944_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_37944_fc->_field_args.len() < 1LL) {
		_37929_e->_method_push_err(_37944_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_37944_fc->_field_args.len() > 1LL) {
		_37929_e->_method_push_err(_37944_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _39113_ref = _37929_e->_method_eval_expr(_37944_fc->_field_args[0LL]);
	if ((!(jule::real(_39113_ref)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if ((!(jule::real(_39113_ref->_field_kind->_method_ref())))) {
		_37929_e->_method_push_err(_37944_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_37929_e->_method_push_suggestion(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_1e2a2e210_check_mut(_37929_e->_field_s,_39113_ref,jule::new_ref<_1a2c74a6c_Data>(),_37944_fc->_field_args[0LL]->_field_token);
	jule::Ref<_1a2c74a6c_Data> _40413_d = _1a2c74a6c_build_void_data();
	_40413_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_BuiltinDropCallExprModel>(new( std::nothrow ) _1e2a30c17_BuiltinDropCallExprModel(_39113_ref->_field_model)));
	return _40413_d;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_panic(jule::Ref<_1a2c74a6c_Eval>& _40930_e,jule::Ref<_1e16025cb_FnCallExpr>& _40945_fc,jule::Ref<_1a2c74a6c_Data>& ) {
	if (_40945_fc->_field_generics.len() > 0LL) {
		_40930_e->_method_push_err(_40945_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_40945_fc->_field_args.len() < 1LL) {
		_40930_e->_method_push_err(_40945_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("error", 5))}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_40945_fc->_field_args.len() > 1LL) {
		_40930_e->_method_push_err(_40945_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _42113_expr = _40930_e->_method_eval_expr(_40945_fc->_field_args[0LL]);
	if ((!(jule::real(_42113_expr)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (jule::real(_42113_expr->_field_kind->_method_strct())) {
		jule::Ref<_1e177440c_StructIns> _42713_s = _42113_expr->_field_kind->_method_strct();
		if (_42713_s->_field_decl->_method_is_implements(_1a36e0bad_BUILTIN_TRAIT_ERROR)) {
			_42113_expr->_field_cast_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a36e0bad_BUILTIN_TRAIT_ERROR));
			_1a2c74a6c_apply_cast_kind(_42113_expr);
		}
	}
	jule::Ref<_1a2c74a6c_Data> _43613_d = _1a2c74a6c_build_void_data();
	_43613_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_BuiltinPanicCallExprModel>(new( std::nothrow ) _1e2a30c17_BuiltinPanicCallExprModel(_42113_expr->_field_model)));
	return _43613_d;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_make(jule::Ref<_1a2c74a6c_Eval>& _44129_e,jule::Ref<_1e16025cb_FnCallExpr>& _44144_fc,jule::Ref<_1a2c74a6c_Data>& _44166_d) {
	if (_44144_fc->_field_generics.len() > 0LL) {
		_44129_e->_method_push_err(_44144_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_44144_fc->_field_args.len() < 2LL) {
		if (_44144_fc->_field_args.len() == 1LL) {
			_44129_e->_method_push_err(_44144_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		_44129_e->_method_push_err(_44144_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_44144_fc->_field_args.len() > 3LL) {
		_44129_e->_method_push_err(_44144_fc->_field_args[3LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _45713_t = _44129_e->_method_eval_expr_kind(_44144_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_45713_t)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if ((!(_45713_t->_field_decl)) || (!(jule::real(_45713_t->_field_kind->_method_slc())))) {
		_44129_e->_method_push_err(_44144_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	_44166_d->_field_kind=_45713_t->_field_kind;
	jule::Ref<_1a2c74a6c_Data> _46913_len = _44129_e->_field_s->_method_evalp(_44129_e->_field_lookup,_45713_t->_field_kind)->_method_eval_expr(_44144_fc->_field_args[1LL]);
	if ((!(jule::real(_46913_len)))) {
		return _44166_d;
	}
	_44129_e->_method_check_integer_indexing_by_data(_46913_len,_44144_fc->_field_args[1LL]->_field_token);
	if (_44144_fc->_field_args.len() == 3LL) {
		jule::Ref<_1a2c74a6c_Data> _47717_cap = _44129_e->_field_s->_method_evalp(_44129_e->_field_lookup,_45713_t->_field_kind)->_method_eval_expr(_44144_fc->_field_args[2LL]);
		if ((!(jule::real(_47717_cap)))) {
			return _44166_d;
		}
		_44129_e->_method_check_integer_indexing_by_data(_47717_cap,_44144_fc->_field_args[2LL]->_field_token);
		_44166_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_BuiltinMakeCallExprModel>(new( std::nothrow ) _1e2a30c17_BuiltinMakeCallExprModel(_45713_t->_field_kind,_46913_len->_field_model,_47717_cap->_field_model)));
	} else {
		_44166_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_BuiltinMakeCallExprModel>(new( std::nothrow ) _1e2a30c17_BuiltinMakeCallExprModel(_45713_t->_field_kind,_46913_len->_field_model,jule::Any())));
	}
	return _44166_d;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_append(jule::Ref<_1a2c74a6c_Eval>& _49831_e,jule::Ref<_1e16025cb_FnCallExpr>& _49846_fc,jule::Ref<_1a2c74a6c_Data>& _49868_d) {
	if (_49846_fc->_field_generics.len() > 0LL) {
		_49831_e->_method_push_err(_49846_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_49846_fc->_field_args.len() < 2LL) {
		if (_49846_fc->_field_args.len() == 1LL) {
			_49831_e->_method_push_err(_49846_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		_49831_e->_method_push_err(_49846_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1a2c74a6c_Data> _51113_t = _49831_e->_method_eval_expr(_49846_fc->_field_args[0LL]);
	if ((!(jule::real(_51113_t)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Bool _51613_ref = false;
	if (jule::real(_51113_t->_field_kind->_method_ref())) {
		_51113_t->_field_kind=_51113_t->_field_kind->_method_ref()->_field_elem;
		_51613_ref=true;
	}
	if ((!(jule::real(_51113_t->_field_kind->_method_slc())))) {
		_49831_e->_method_push_err(_49846_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1e1737e81_FnIns> _52713_f = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str())),_51113_t->_field_kind->_method_clone())),jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),true,true,jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str())),_51113_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_51113_t->_field_kind->_method_clone(),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_49868_d->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_52713_f));
	_49868_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_CommonIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonIdentExprModel(jule::Str("append", 6))));
	_49868_d=_1a36e0bad_builtin_caller_common_plain(_49831_e,_49846_fc,_49868_d);
	if (jule::real(_49868_d)) {
		jule::Ref<_1e2a30c17_FnCallExprModel> _55117_model = _49868_d->_field_model.operator jule::Ref<_1e2a30c17_FnCallExprModel>();
		if (_51613_ref) {
			_55117_model->_field_args[0LL]=jule::Any(jule::new_struct<_1e2a30c17_ExplicitDerefExprModel>(new( std::nothrow ) _1e2a30c17_ExplicitDerefExprModel(_51113_t->_field_model)));
		}
		_49868_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_BuiltinAppendCallExprModel>(new( std::nothrow ) _1e2a30c17_BuiltinAppendCallExprModel(_55117_model->_field_args[0LL],_55117_model->_field_args[1LL])));
	}
	return _49868_d;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_copy(jule::Ref<_1a2c74a6c_Eval>& _56529_e,jule::Ref<_1e16025cb_FnCallExpr>& _56544_fc,jule::Ref<_1a2c74a6c_Data>& _56566_d) {
	if (_56544_fc->_field_generics.len() > 0LL) {
		_56529_e->_method_push_err(_56544_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_56544_fc->_field_args.len() < 2LL) {
		if (_56544_fc->_field_args.len() == 1LL) {
			_56529_e->_method_push_err(_56544_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_1a2c74a6c_Data>();
		}
		_56529_e->_method_push_err(_56544_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_56544_fc->_field_args.len() > 2LL) {
		_56529_e->_method_push_err(_56544_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _58113_t = _56529_e->_method_eval_expr(_56544_fc->_field_args[0LL]);
	if ((!(jule::real(_58113_t)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Bool _58613_ref = false;
	if (jule::real(_58113_t->_field_kind->_method_ref())) {
		_58113_t->_field_kind=_58113_t->_field_kind->_method_ref()->_field_elem;
		_58613_ref=false;
	}
	if ((!(jule::real(_58113_t->_field_kind->_method_slc())))) {
		_56529_e->_method_push_err(_56544_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if ((!(_58113_t->_field_mutable))) {
		_56529_e->_method_push_err(_56544_fc->_field_args[0LL]->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1e1737e81_FnIns> _60113_f = jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::Ref<_1e1737e81_Fn>(),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param()),_58113_t->_field_kind->_method_clone())),jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str())),_58113_t->_field_kind->_method_clone()))}),_1a36e0bad_BUILTIN_FN_COPY->_field_result,jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(_1a36e0bad_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_56566_d->_field_kind=jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_60113_f));
	_56566_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_CommonIdentExprModel>(new( std::nothrow ) _1e2a30c17_CommonIdentExprModel(jule::Str("copy", 4))));
	_56566_d=_1a36e0bad_builtin_caller_common_plain(_56529_e,_56544_fc,_56566_d);
	if (jule::real(_56566_d) && _58613_ref) {
		_56566_d->_field_model.operator jule::Ref<_1e2a30c17_FnCallExprModel>()->_field_args[0LL]=jule::Any(jule::new_struct<_1e2a30c17_ExplicitDerefExprModel>(new( std::nothrow ) _1e2a30c17_ExplicitDerefExprModel(_58113_t->_field_model)));
	}
	return _56566_d;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_recover(jule::Ref<_1a2c74a6c_Eval>& _63032_e,jule::Ref<_1e16025cb_FnCallExpr>& _63047_fc,jule::Ref<_1a2c74a6c_Data>& ) {
	if (_63047_fc->_field_generics.len() > 0LL) {
		_63032_e->_method_push_err(_63047_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2db8ce3_TypeKind> _6349_HANDLER_KIND = jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct<_1e1737e81_FnIns>(new( std::nothrow ) _1e1737e81_FnIns(jule::Ref<_1e177440c_StructIns>(),jule::new_struct_ref<_1e1737e81_Fn>(new( std::nothrow ) _1e1737e81_Fn()),jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>(),jule::Slice<jule::Ref<_1e1737e81_ParamIns>>({jule::new_struct<_1e1737e81_ParamIns>(new( std::nothrow ) _1e1737e81_ParamIns(jule::new_struct_ref<_1e1737e81_Param>(new( std::nothrow ) _1e1737e81_Param(_1e15a2bb9_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1a2db8ce3_TypeSymbol>(),jule::Str("err", 3))),jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a36e0bad_BUILTIN_TRAIT_ERROR))))}),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Ref<_1e28b6a59_ReferenceStack>(),jule::Fn<jule::Ref<_1a2c74a6c_Data>(jule::Ref<_1a2c74a6c_Eval>&,jule::Ref<_1e16025cb_FnCallExpr>&,jule::Ref<_1a2c74a6c_Data>&)>(),jule::Bool(),jule::Bool()))));
	if (_63047_fc->_field_args.len() < 1LL) {
		_63032_e->_method_push_err(_63047_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("handler", 7))}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_63047_fc->_field_args.len() > 1LL) {
		_63032_e->_method_push_err(_63047_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _65813_t = _63032_e->_method_eval_expr(_63047_fc->_field_args[0LL]);
	if ((!(jule::real(_65813_t)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Ref<_1e1737e81_FnIns> _6639_f = _65813_t->_field_kind->_method_fnc();
	if ((!(jule::real(_6639_f)))) {
		_63032_e->_method_push_err(_63047_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if ((!(_6639_f->_method_equals(_6349_HANDLER_KIND)))) {
		_63032_e->_method_push_err(_63047_fc->_field_args[0LL]->_field_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_65813_t->_field_kind->_method_to_str()),jule::Any(_6349_HANDLER_KIND->_method_to_str())}));
	}
	jule::Ref<_1a2c74a6c_Data> _67313_d = _1a2c74a6c_build_void_data();
	_67313_d->_field_kind=_65813_t->_field_kind->_method_clone();
	_67313_d->_field_model=jule::Any(jule::new_struct<_1e2a2e210_Recover>(new( std::nothrow ) _1e2a2e210_Recover(jule::Ref<_1e1737e81_FnIns>(),_65813_t->_field_model,jule::Ref<_1e2a2e210_Scope>(),jule::Ref<_1e1737e81_FnIns>())));
	return _67313_d;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_clone(jule::Ref<_1a2c74a6c_Eval>& _68130_e,jule::Ref<_1e16025cb_FnCallExpr>& _68145_fc,jule::Ref<_1a2c74a6c_Data>& ) {
	if (_68145_fc->_field_generics.len() > 0LL) {
		_68130_e->_method_push_err(_68145_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_68145_fc->_field_args.len() < 1LL) {
		_68130_e->_method_push_err(_68145_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_68145_fc->_field_args.len() > 1LL) {
		_68130_e->_method_push_err(_68145_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _69413_d = _68130_e->_method_eval_expr_kind(_68145_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_69413_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	jule::Fn<void(jule::Ref<_1a2db8ce3_TypeKind>)> _6999_check_kind = jule::Fn<void(jule::Ref<_1a2db8ce3_TypeKind>)>([=](jule::Ref<_1a2db8ce3_TypeKind> _69929_k) mutable -> void {
		{
			if (!((jule::real(_69929_k->_method_slc())))) { goto _case_end_4347574544; }
			_case_begin_4347574544:;
			{
				if ((!(_69929_k->_method_slc()->_field_elem->_method_supports_cloning()))) {
					_68130_e->_method_push_err(_68145_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_69929_k->_method_to_str())}));
				}
			}
			goto _match_end_4347573584;
			_case_end_4347574544:;
			if (!((jule::real(_69929_k->_method_map())))) { goto _case_end_4347574048; }
			_case_begin_4347574048:;
			{
				jule::Ref<_1a2db8ce3_Map> _70717_m = _69929_k->_method_map();
				if ((!(_70717_m->_field_key->_method_supports_cloning())) || (!(_70717_m->_field_val->_method_supports_cloning()))) {
					_68130_e->_method_push_err(_68145_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_69929_k->_method_to_str())}));
				}
			}
			goto _match_end_4347573584;
			_case_end_4347574048:;
			if (!((jule::real(_69929_k->_method_arr())))) { goto _case_end_4347574144; }
			_case_begin_4347574144:;
			{
				if ((!(_69929_k->_method_arr()->_field_elem->_method_supports_cloning()))) {
					_68130_e->_method_push_err(_68145_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_69929_k->_method_to_str())}));
				}
			}
			goto _match_end_4347573584;
			_case_end_4347574144:;
			if (!((jule::real(_69929_k->_method_ref())))) { goto _case_end_4347574240; }
			_case_begin_4347574240:;
			{
				if ((!(_69929_k->_method_ref()->_field_elem->_method_supports_cloning()))) {
					_68130_e->_method_push_err(_68145_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_69929_k->_method_to_str())}));
				}
			}
			goto _match_end_4347573584;
			_case_end_4347574240:;
			if (!((jule::real(_69929_k->_method_strct())))) { goto _case_end_4347574336; }
			_case_begin_4347574336:;
			{
				jule::Ref<_1e177440c_StructIns> _72317_s = _69413_d->_field_kind->_method_strct();
				if ((!(_72317_s->_field_mutable))) {
					_68130_e->_method_push_err(_68145_fc->_field_args[0LL]->_field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_69413_d->_field_kind->_method_to_str())}));
				}
				if (((!(jule::real(_72317_s->_field_decl))) || _72317_s->_field_decl->_field_cpp_linked) || (!(_72317_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					_68130_e->_method_push_err(_68145_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_69413_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_4347573584;
			_case_end_4347574336:;
			_case_begin_4347573760:;
			{
				_68130_e->_method_push_err(_68145_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_69413_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
			}
			goto _match_end_4347573584;
			_case_end_4347573760:;
			_match_end_4347573584:;
		}
	});
	{
		if (!(((!(_69413_d->_field_lvalue))))) { goto _case_end_4347598000; }
		_case_begin_4347598000:;
		{
			_68130_e->_method_push_err(_68145_fc->_field_args[0LL]->_field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4347608768;
		_case_end_4347598000:;
		if (!(((!(_69413_d->_field_kind->_method_supports_cloning()))))) { goto _case_end_4347598096; }
		_case_begin_4347598096:;
		{
			_6999_check_kind(_69413_d->_field_kind);
		}
		goto _match_end_4347608768;
		_case_end_4347598096:;
		_match_end_4347608768:;
	}
	_69413_d->_field_mutable=true;
	_69413_d->_field_model=jule::Any(jule::new_struct<_1e2a30c17_BuiltinCloneCallExprModel>(new( std::nothrow ) _1e2a30c17_BuiltinCloneCallExprModel(_69413_d->_field_model)));
	return _69413_d;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_std_mem_size_of(jule::Ref<_1a2c74a6c_Eval>& _74940_e,jule::Ref<_1e16025cb_FnCallExpr>& _74955_fc,jule::Ref<_1a2c74a6c_Data>& ) {
	if (_74955_fc->_field_generics.len() > 0LL) {
		_74940_e->_method_push_err(_74955_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _75313_result = jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
	if (_74955_fc->_field_args.len() < 1LL) {
		_74940_e->_method_push_err(_74955_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _75313_result;
	}
	if (_74955_fc->_field_args.len() > 1LL) {
		_74940_e->_method_push_err(_74955_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _76513_d = _74940_e->_method_eval_expr_kind(_74955_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_76513_d)))) {
		return _75313_result;
	}
	_75313_result->_field_model=jule::Any(jule::new_struct<_1e2a30c17_SizeofExprModel>(new( std::nothrow ) _1e2a30c17_SizeofExprModel(_76513_d->_field_model)));
	return _75313_result;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_std_mem_align_of(jule::Ref<_1a2c74a6c_Eval>& _77441_e,jule::Ref<_1e16025cb_FnCallExpr>& _77456_fc,jule::Ref<_1a2c74a6c_Data>& ) {
	if (_77456_fc->_field_generics.len() > 0LL) {
		_77441_e->_method_push_err(_77456_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _77813_result = jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
	if (_77456_fc->_field_args.len() < 1LL) {
		_77441_e->_method_push_err(_77456_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _77813_result;
	}
	if (_77456_fc->_field_args.len() > 1LL) {
		_77441_e->_method_push_err(_77456_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _79013_d = _77441_e->_method_eval_expr_kind(_77456_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_79013_d)))) {
		return _77813_result;
	}
	_77813_result->_field_model=jule::Any(jule::new_struct<_1e2a30c17_AlignofExprModel>(new( std::nothrow ) _1e2a30c17_AlignofExprModel(_79013_d->_field_model)));
	return _77813_result;
}



jule::Ref<_1a2c74a6c_Data> _1a36e0bad_builtin_caller_std_jule_integrated_to_str(jule::Ref<_1a2c74a6c_Eval>& _79951_e,jule::Ref<_1e16025cb_FnCallExpr>& _79966_fc,jule::Ref<_1a2c74a6c_Data>& ) {
	if (_79966_fc->_field_generics.len() > 0LL) {
		_79951_e->_method_push_err(_79966_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_79966_fc->_field_args.len() < 1LL) {
		_79951_e->_method_push_err(_79966_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	if (_79966_fc->_field_args.len() > 1LL) {
		_79951_e->_method_push_err(_79966_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1a2c74a6c_Data> _81213_d = _79951_e->_method_eval_expr_kind(_79966_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_81213_d)))) {
		return jule::new_ref<_1a2c74a6c_Data>();
	}
	return jule::new_struct<_1a2c74a6c_Data>(new( std::nothrow ) _1a2c74a6c_Data(jule::new_struct_ref<_1a2db8ce3_TypeKind>(new( std::nothrow ) _1a2db8ce3_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a2db8ce3_build_prim_type(jule::Str("str", 3)))),jule::Ref<_1a2db8ce3_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1e2a30c17_IntegratedToStrExprModel>(new( std::nothrow ) _1e2a30c17_IntegratedToStrExprModel(_81213_d->_field_model))),jule::Bool(),jule::Ref<_1a37ddd88_Const>()));
}



std::tuple<jule::Bool,jule::Bool> _1e1184c1e_check_os(jule::Str _1013_arg) {
	jule::Bool _1025_ok = jule::Bool();
	jule::Bool _1035_exist = jule::Bool();
	_1025_ok=false;
	_1035_exist=true;
	{
		auto _match_expr{ _1013_arg };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4353706752; }
		_case_begin_4353706752:;
		{
			_1025_ok=_1ec970a4d_is_windows(_1ec94303c_OS);
		}
		goto _match_end_4353706112;
		_case_end_4353706752:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4353707264; }
		_case_begin_4353707264:;
		{
			_1025_ok=_1ec970a4d_is_darwin(_1ec94303c_OS);
		}
		goto _match_end_4353706112;
		_case_end_4353707264:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4353707728; }
		_case_begin_4353707728:;
		{
			_1025_ok=_1ec970a4d_is_linux(_1ec94303c_OS);
		}
		goto _match_end_4353706112;
		_case_end_4353707728:;
		if (!((jule::Str("unix", 4)) == _match_expr)) { goto _case_end_4353707056; }
		_case_begin_4353707056:;
		{
			_1025_ok=_1ec970a4d_is_unix(_1ec94303c_OS);
		}
		goto _match_end_4353706112;
		_case_end_4353707056:;
		_case_begin_4353705920:;
		{
			_1025_ok=true;
			_1035_exist=false;
		}
		goto _match_end_4353706112;
		_case_end_4353705920:;
		_match_end_4353706112:;
	}
	return std::make_tuple(_1025_ok,_1035_exist);
}



std::tuple<jule::Bool,jule::Bool> _1e1184c1e_check_arch(jule::Str _2715_arg) {
	jule::Bool _2727_ok = jule::Bool();
	jule::Bool _2737_exist = jule::Bool();
	_2727_ok=false;
	_2737_exist=true;
	{
		auto _match_expr{ _2715_arg };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4353713760; }
		_case_begin_4353713760:;
		{
			_2727_ok=_1ec970a4d_is_i386(_1ec94303c_ARCH);
		}
		goto _match_end_4353712608;
		_case_end_4353713760:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4353714224; }
		_case_begin_4353714224:;
		{
			_2727_ok=_1ec970a4d_is_amd64(_1ec94303c_ARCH);
		}
		goto _match_end_4353712608;
		_case_end_4353714224:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4353713552; }
		_case_begin_4353713552:;
		{
			_2727_ok=_1ec970a4d_is_arm64(_1ec94303c_ARCH);
		}
		goto _match_end_4353712608;
		_case_end_4353713552:;
		if (!((jule::Str("64bit", 5)) == _match_expr)) { goto _case_end_4353712800; }
		_case_begin_4353712800:;
		{
			_2727_ok=_1ec970a4d_is_64bit(_1ec94303c_ARCH);
		}
		goto _match_end_4353712608;
		_case_end_4353712800:;
		if (!((jule::Str("32bit", 5)) == _match_expr)) { goto _case_end_4353712896; }
		_case_begin_4353712896:;
		{
			_2727_ok=_1ec970a4d_is_32bit(_1ec94303c_ARCH);
		}
		goto _match_end_4353712608;
		_case_end_4353712896:;
		_case_begin_4353712416:;
		{
			_2727_ok=true;
			_2737_exist=false;
		}
		goto _match_end_4353712608;
		_case_end_4353712416:;
		_match_end_4353712608:;
	}
	return std::make_tuple(_2727_ok,_2737_exist);
}



jule::Bool _1e1184c1e_is_pass_file_annotation(jule::Str _4632_p) {
	_4632_p=_1ec9a2585_base(_4632_p);
	jule::I64 _489_n = _4632_p.len();
	_4632_p=_4632_p.slice(0LL,_489_n - _1ec9a2585_ext(_4632_p).len());
	jule::Str _5413_a1 = jule::Str();
	jule::Str _5713_a2 = jule::Str();
	jule::Int _6013_i = _4632_p.rfind(jule::Str("_", 1));
	if (_6013_i == -1LL) {
		jule::Bool _6318_ok;
		jule::Bool _6326_exist;
		std::tie(_6318_ok,_6326_exist) = _1e1184c1e_check_os(_4632_p);
		if (_6326_exist) {
			return _6318_ok;
		}
		std::tie(_6318_ok,_6326_exist) = _1e1184c1e_check_arch(_4632_p);
		return (!(_6326_exist)) || _6318_ok;
	}
	if ((_6013_i + 1LL) >= _489_n) {
		return true;
	}
	_5413_a1=_4632_p.slice(_6013_i + 1LL);
	_4632_p=_4632_p.slice(0LL,_6013_i);
	_6013_i=static_cast<jule::Int>(_4632_p.rfind(jule::Str("_", 1)));
	if (_6013_i != -1LL) {
		_5713_a2=_4632_p.slice(_6013_i + 1LL);
	}
	if (_5713_a2 == jule::Str()) {
		jule::Bool _8418_ok;
		jule::Bool _8426_exist;
		std::tie(_8418_ok,_8426_exist) = _1e1184c1e_check_os(_5413_a1);
		if (_8426_exist) {
			return _8418_ok;
		}
		std::tie(_8418_ok,_8426_exist) = _1e1184c1e_check_arch(_5413_a1);
		return (!(_8426_exist)) || _8418_ok;
	}
	jule::Bool _9214_ok;
	jule::Bool _9222_exist;
	std::tie(_9214_ok,_9222_exist) = _1e1184c1e_check_arch(_5413_a1);
	if (_9222_exist) {
		if ((!(_9214_ok))) {
			return false;
		}
		jule::Bool _9714_ok;
		jule::Bool _9718_exist;
		std::tie(_9714_ok,_9718_exist) = _1e1184c1e_check_os(_5713_a2);
		return (!(_9718_exist)) || _9714_ok;
	}
	std::tie(_9214_ok,_9222_exist) = _1e1184c1e_check_os(_5413_a1);
	return (!(_9222_exist)) || _9214_ok;
}



jule::Bool _1e1213066_eval_directive_ident(jule::Str _625_ident) {
	if (_625_ident == jule::Str()) {
		return false;
	}
	{
		auto expr = _1e12e1320_FLAGS;
		auto it = expr.begin();
		_iter_begin_4353741776:;
		if (it != expr.end()) {
			jule::Str _1e1213066_flag = *it;
			{
				if (_1e1213066_flag == _625_ident) {
					return true;
				}
			}
			_iter_next_4353741776:;
			++it;
			goto _iter_begin_4353741776;
		}
		_iter_end_4353741776:;
	}
	return false;
}



jule::Bool _1e1213066_eval_directive_part(jule::Str _2228_part) {
	jule::Bool _239_logical_not = _2228_part[0LL] == '!';
	if (_239_logical_not) {
		_2228_part=_2228_part.slice(1LL);
	}
	jule::Bool _2813_result = _1e1213066_eval_directive_ident(_2228_part);
	if (_239_logical_not) {
		_2813_result=(!(_2813_result));
	}
	return _2813_result;
}



jule::Slice<jule::Str> _1e1213066_split_operans(jule::Str _3718_op,jule::Str _3727_expr) {
	jule::Slice<jule::Str> _3813_parts = jule::Slice<jule::Str>::alloc(0LL,10LL);
	jule::Int _4013_range_n = 0LL;
	jule::Int _4113_i = 0LL;
	jule::Int _4213_last = 0LL;
	for (; _4113_i < (_3727_expr.len() - 1LL); (_4113_i)++) {
		{
			jule::U8 _4413_b = _3727_expr[_4113_i];
			if (_4413_b == '(') {
				(_4013_range_n)++;
				goto _iter_next_4353749600;
			} else if (_4413_b == ')') {
				(_4013_range_n)--;
			}
			if (_4013_range_n > 0LL) {
				goto _iter_next_4353749600;
			}
			{
				auto _match_expr{ _3718_op };
				if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4353754656; }
				_case_begin_4353754656:;
				{
					if ((_4413_b == '|') && (_3727_expr[_4113_i + 1LL] == '|')) {
						_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(_4213_last,_4113_i)}));
						_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
					}
				}
				goto _match_end_4353756160;
				_case_end_4353754656:;
				if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4353756432; }
				_case_begin_4353756432:;
				{
					if ((_4413_b == '&') && (_3727_expr[_4113_i + 1LL] == '&')) {
						_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(_4213_last,_4113_i)}));
						_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
					}
				}
				goto _match_end_4353756160;
				_case_end_4353756432:;
				_match_end_4353756160:;
			}
		}
	_iter_next_4353749600:;
	}
	_iter_end_4353749600:;
	if (_4213_last < _3727_expr.len()) {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(_4213_last)}));
	} else {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({jule::Str()}));
	}
	return _3813_parts;
}



jule::Bool _1e1213066_eval_directive_expr(jule::Str _8724_expr) {
	if (_8724_expr == jule::Str()) {
		return false;
	}
	jule::Bool _9213_result = false;
	jule::Slice<jule::Str> _949_logical_or_parts = _1e1213066_split_operans(jule::Str("||", 2),_8724_expr);
	{
		auto expr = _949_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_4353769520:;
		if (it != expr.end()) {
			jule::Str _1e1213066_part = *it;
			{
				if (_1e1213066_part == jule::Str()) {
					return false;
				}
				jule::Bool _10017_and = true;
				jule::Slice<jule::Str> _10113_logical_and_parts = _1e1213066_split_operans(jule::Str("&&", 2),_1e1213066_part);
				{
					auto expr = _10113_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_4353773696:;
					if (it != expr.end()) {
						jule::Str _1e1213066_and_part = *it;
						{
							if (_1e1213066_and_part.find(jule::Str("(", 1)) != -1LL) {
								if (_1e1213066_and_part[_1e1213066_and_part.len() - 1LL] != ')') {
									return false;
								}
								jule::Str _10721__expr = _1e1213066_and_part.slice(1LL,_1e1213066_and_part.len() - 1LL);
								_10017_and=_10017_and && _1e1213066_eval_directive_expr(_10721__expr);
							} else {
								_10017_and=_10017_and && _1e1213066_eval_directive_part(_1e1213066_and_part);
							}
						}
						_iter_next_4353773696:;
						++it;
						goto _iter_begin_4353773696;
					}
					_iter_end_4353773696:;
				}
				_9213_result=_9213_result || _10017_and;
			}
			_iter_next_4353769520:;
			++it;
			goto _iter_begin_4353769520;
		}
		_iter_end_4353769520:;
	}
	return _9213_result;
}



void _1e12e1320_set_os_flags(void) {
	{
		auto _match_expr{ _1ec94303c_OS };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4353782208; }
		_case_begin_4353782208:;
		{
			_1e12e1320_FLAGS=jule::append(_1e12e1320_FLAGS,jule::Slice<jule::Str>({jule::Str("windows", 7)}));
		}
		goto _match_end_4353768784;
		_case_end_4353782208:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4353780496; }
		_case_begin_4353780496:;
		{
			_1e12e1320_FLAGS=jule::append(_1e12e1320_FLAGS,jule::Slice<jule::Str>({jule::Str("linux", 5)}));
		}
		goto _match_end_4353768784;
		_case_end_4353780496:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4353780592; }
		_case_begin_4353780592:;
		{
			_1e12e1320_FLAGS=jule::append(_1e12e1320_FLAGS,jule::Slice<jule::Str>({jule::Str("darwin", 6)}));
		}
		goto _match_end_4353768784;
		_case_end_4353780592:;
		_match_end_4353768784:;
	}
	if (_1ec970a4d_is_unix(_1ec94303c_OS)) {
		_1e12e1320_FLAGS=jule::append(_1e12e1320_FLAGS,jule::Slice<jule::Str>({jule::Str("unix", 4)}));
	}
}



void _1e12e1320_set_arch_flags(void) {
	{
		auto _match_expr{ _1ec94303c_ARCH };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4353784736; }
		_case_begin_4353784736:;
		{
			_1e12e1320_FLAGS=jule::append(_1e12e1320_FLAGS,jule::Slice<jule::Str>({jule::Str("i386", 4)}));
		}
		goto _match_end_4353784320;
		_case_end_4353784736:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4353782544; }
		_case_begin_4353782544:;
		{
			_1e12e1320_FLAGS=jule::append(_1e12e1320_FLAGS,jule::Slice<jule::Str>({jule::Str("amd64", 5)}));
		}
		goto _match_end_4353784320;
		_case_end_4353782544:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4353786112; }
		_case_begin_4353786112:;
		{
			_1e12e1320_FLAGS=jule::append(_1e12e1320_FLAGS,jule::Slice<jule::Str>({jule::Str("arm64", 5)}));
		}
		goto _match_end_4353784320;
		_case_end_4353786112:;
		_match_end_4353784320:;
	}
	if (_1ec970a4d_is_64bit(_1ec94303c_ARCH)) {
		_1e12e1320_FLAGS=jule::append(_1e12e1320_FLAGS,jule::Slice<jule::Str>({jule::Str("64bit", 5)}));
	}
	if (_1ec970a4d_is_32bit(_1ec94303c_ARCH)) {
		_1e12e1320_FLAGS=jule::append(_1e12e1320_FLAGS,jule::Slice<jule::Str>({jule::Str("32bit", 5)}));
	}
}



void _1e12e1320_init_flags(void) {
	_1e12e1320_set_os_flags();
	_1e12e1320_set_arch_flags();
}



void _1e12e1430_exit_err(jule::Str _2213_msg) {
	
	jule::outln(_2213_msg);
	_1ec9bbc86_exit(1LL);
}



jule::Slice<jule::U8> _1e12e1430_read_buff(jule::Str _3014_path) {
	jule::Slice<jule::U8> _3114_buffer;
	jule::Int _3122_err;
	std::tie(_3114_buffer,_3122_err) = _1e159479e_File::_static_method_read(_3014_path);
	if (_3122_err != 0LLU) {
		_1e12e1430_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3114_buffer;
}



_1ec8e8025_Log _1e12e1430_flat_compiler_err(jule::Str _4022_text) {
	return _1ec8e8025_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_4022_text,jule::Str(),jule::Str());
}



std::tuple<jule::Slice<jule::Ref<_1e15268c9_DirEntry>>,jule::Str> _1e12e1430_read_package_dirents(jule::Str _4825_path) {
	jule::Str _4851_err_msg = jule::Str();
	jule::Slice<jule::Ref<_1e15268c9_DirEntry>> _4914_dirents;
	jule::Int _4923_err;
	std::tie(_4914_dirents,_4923_err) = _1e15268c9_Directory::_static_method_read(_4825_path);
	if (_4923_err != 0LLU) {
		_4851_err_msg = jule::Str("connot read package directory: ", 31) + _4825_path;
		return std::make_tuple(nullptr,_4851_err_msg);
	}
	jule::Slice<jule::Ref<_1e15268c9_DirEntry>> _5413_passed_dirents = nullptr;
	{
		auto expr = _4914_dirents;
		auto it = expr.begin();
		_iter_begin_4353804160:;
		if (it != expr.end()) {
			jule::Ref<_1e15268c9_DirEntry> _1e12e1430_dirent = *it;
			{
				jule::Str _5613_name = _1e12e1430_dirent->_field_name;
				if (_1e12e1430_dirent->_field_stat->_method_is_dir() || (!(_5613_name.has_suffix(jule::Str(".jule", 5))))) {
					goto _iter_next_4353804160;
				}
				_5413_passed_dirents=jule::append(_5413_passed_dirents,jule::Slice<jule::Ref<_1e15268c9_DirEntry>>({_1e12e1430_dirent}));
			}
			_iter_next_4353804160:;
			++it;
			goto _iter_begin_4353804160;
		}
		_iter_end_4353804160:;
	}
	_4851_err_msg = jule::Str();
	return std::make_tuple(_5413_passed_dirents,_4851_err_msg);
}



jule::Str _1e12e1430_concat_all_parts(jule::Slice<jule::Str> _7021_parts) {
	jule::Str _7113_s = jule::Str();
	{
		auto expr = _7021_parts;
		auto it = expr.begin();
		_iter_begin_4353813296:;
		if (it != expr.end()) {
			jule::Str _1e12e1430_part = *it;
			{
				_7113_s+=_1e12e1430_part;
			}
			_iter_next_4353813296:;
			++it;
			goto _iter_begin_4353813296;
		}
		_iter_end_4353813296:;
	}
	return _7113_s;
}



jule::Bool _1e12e1430_is_pass_build_directives(jule::Ref<_1e15a53c5_Ast>& _7934_file) {
	{
		auto expr = _7934_file->_field_top_directives;
		auto it = expr.begin();
		_iter_begin_4353814656:;
		if (it != expr.end()) {
			jule::Ref<_1e16025cb_Directive> _1e12e1430_td = *it;
			{
				if (_1e12e1430_td->_field_tag != jule::Str("build", 5)) {
					goto _iter_next_4353814656;
				}
				jule::Str _8513_expr = _1e12e1430_concat_all_parts(_1e12e1430_td->_field_args);
				jule::Bool _8613_result = _1e1213066_eval_directive_expr(_8513_expr);
				if ((!(_8613_result))) {
					return false;
				}
			}
			_iter_next_4353814656:;
			++it;
			goto _iter_begin_4353814656;
		}
		_iter_end_4353814656:;
	}
	return true;
}



void _1e10d0a8d_push_passes(jule::Ref<_1e2a7b966_Package>& _11321_p,jule::Slice<jule::Str>& _11345_passes) {
	{
		auto expr = _11321_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4353875264:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1e10d0a8d_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = _1e10d0a8d_f->_field_passes;
					auto it = expr.begin();
					_iter_begin_4353877424:;
					if (it != expr.end()) {
						_1e28b6a59_Pass _1e10d0a8d_pass = *it;
						{
							if (_1e10d0a8d_pass._field_text == jule::Str()) {
								goto _iter_next_4353877424;
							}
							{
								auto expr = _11345_passes;
								auto it = expr.begin();
								_iter_begin_4353879632:;
								if (it != expr.end()) {
									jule::Str _1e10d0a8d_cpass = *it;
									{
										if (_1e10d0a8d_cpass == _1e10d0a8d_pass._field_text) {
											goto _iter_next_4353877424;
										}
									}
									_iter_next_4353879632:;
									++it;
									goto _iter_begin_4353879632;
								}
								_iter_end_4353879632:;
							}
							_11345_passes=jule::append(_11345_passes,jule::Slice<jule::Str>({_1e10d0a8d_pass._field_text}));
						}
						_iter_next_4353877424:;
						++it;
						goto _iter_begin_4353877424;
					}
					_iter_end_4353877424:;
				}
			}
			_iter_next_4353875264:;
			++it;
			goto _iter_begin_4353875264;
		}
		_iter_end_4353875264:;
	}
}



jule::Slice<jule::Str> _1e10d0a8d_get_all_unique_passes(jule::Ref<_1e2a7b966_Package>& _13031_pkg,jule::Slice<jule::Ref<_1e2a7b966_ImportInfo>> _13056_uses) {
	jule::Slice<jule::Str> _13113_passes = nullptr;
	_1e10d0a8d_push_passes(_13031_pkg,_13113_passes);
	{
		auto expr = _13056_uses;
		auto it = expr.begin();
		_iter_begin_4353885168:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1e10d0a8d_u = *it;
			{
				if ((!(_1e10d0a8d_u->_field_cpp_linked))) {
					_1e10d0a8d_push_passes(_1e10d0a8d_u->_field_package,_13113_passes);
				}
			}
			_iter_next_4353885168:;
			++it;
			goto _iter_begin_4353885168;
		}
		_iter_end_4353885168:;
	}
	return _13113_passes;
}



jule::Bool _1ec943e0b_is_exist_0(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1e1737e81_FnIns> _3028_t) {
	{
		auto expr = _3016_arr;
		auto it = expr.begin();
		_iter_begin_4354029328:;
		if (it != expr.end()) {
			jule::Any _1ec943e0b_ref = *it;
			{
				{
					auto _match_expr{ _1ec943e0b_ref };
					if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4354030752; }
					_case_begin_4354030752:;
					{
						if ((_1ec943e0b_ref.operator jule::Ref<_1e1737e81_FnIns>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4354031088;
					_case_end_4354030752:;
					_match_end_4354031088:;
				}
			}
			_iter_next_4354029328:;
			++it;
			goto _iter_begin_4354029328;
		}
		_iter_end_4354029328:;
	}
	return false;
}

jule::Bool _1ec943e0b_is_exist_1(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1ba80e105_Var> _3028_t) {
	{
		auto expr = _3016_arr;
		auto it = expr.begin();
		_iter_begin_4354036384:;
		if (it != expr.end()) {
			jule::Any _1ec943e0b_ref = *it;
			{
				{
					auto _match_expr{ _1ec943e0b_ref };
					if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4354037808; }
					_case_begin_4354037808:;
					{
						if ((_1ec943e0b_ref.operator jule::Ref<_1ba80e105_Var>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4354038144;
					_case_end_4354037808:;
					_match_end_4354038144:;
				}
			}
			_iter_next_4354036384:;
			++it;
			goto _iter_begin_4354036384;
		}
		_iter_end_4354036384:;
	}
	return false;
}

jule::Bool _1ec943e0b_is_exist_2(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1e177440c_StructIns> _3028_t) {
	{
		auto expr = _3016_arr;
		auto it = expr.begin();
		_iter_begin_4354043504:;
		if (it != expr.end()) {
			jule::Any _1ec943e0b_ref = *it;
			{
				{
					auto _match_expr{ _1ec943e0b_ref };
					if (!(_match_expr.type_is<jule::Ref<_1e177440c_StructIns>>())) { goto _case_end_4354044928; }
					_case_begin_4354044928:;
					{
						if ((_1ec943e0b_ref.operator jule::Ref<_1e177440c_StructIns>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4354045264;
					_case_end_4354044928:;
					_match_end_4354045264:;
				}
			}
			_iter_next_4354043504:;
			++it;
			goto _iter_begin_4354043504;
		}
		_iter_end_4354043504:;
	}
	return false;
}

jule::Bool _1ec943e0b_is_exist_3(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1e2a1e563_Trait> _3028_t) {
	{
		auto expr = _3016_arr;
		auto it = expr.begin();
		_iter_begin_4354050560:;
		if (it != expr.end()) {
			jule::Any _1ec943e0b_ref = *it;
			{
				{
					auto _match_expr{ _1ec943e0b_ref };
					if (!(_match_expr.type_is<jule::Ref<_1e2a1e563_Trait>>())) { goto _case_end_4354051984; }
					_case_begin_4354051984:;
					{
						if ((_1ec943e0b_ref.operator jule::Ref<_1e2a1e563_Trait>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4354052320;
					_case_end_4354051984:;
					_match_end_4354052320:;
				}
			}
			_iter_next_4354050560:;
			++it;
			goto _iter_begin_4354050560;
		}
		_iter_end_4354050560:;
	}
	return false;
}



jule::Bool _1ec943e0b_is_exist_ref(jule::Slice<jule::Any> _4321_refs,jule::Any _4334_ref) {
	{
		auto _match_expr{ _4334_ref };
		if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4354022448; }
		_case_begin_4354022448:;
		{
			return _1ec943e0b_is_exist_0(_4321_refs,_4334_ref.operator jule::Ref<_1e1737e81_FnIns>());
		}
		goto _match_end_4354021888;
		_case_end_4354022448:;
		if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4354022544; }
		_case_begin_4354022544:;
		{
			return _1ec943e0b_is_exist_1(_4321_refs,_4334_ref.operator jule::Ref<_1ba80e105_Var>());
		}
		goto _match_end_4354021888;
		_case_end_4354022544:;
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_StructIns>>())) { goto _case_end_4354022640; }
		_case_begin_4354022640:;
		{
			return _1ec943e0b_is_exist_2(_4321_refs,_4334_ref.operator jule::Ref<_1e177440c_StructIns>());
		}
		goto _match_end_4354021888;
		_case_end_4354022640:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a1e563_Trait>>())) { goto _case_end_4354023488; }
		_case_begin_4354023488:;
		{
			return _1ec943e0b_is_exist_3(_4321_refs,_4334_ref.operator jule::Ref<_1e2a1e563_Trait>());
		}
		goto _match_end_4354021888;
		_case_end_4354023488:;
		_case_begin_4354021648:;
		{
			return false;
		}
		goto _match_end_4354021888;
		_case_end_4354021648:;
		_match_end_4354021888:;
	}
}



jule::Bool _1ec943e0b_is_dead(jule::Any _5416_ref) {
	jule::Bool _5428_dead = jule::Bool();
	if (_1ec943e0b_is_exist_ref(_1ec943e0b_deads,_5416_ref)) {
		_5428_dead = true;
		return _5428_dead;
	}
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4354057152; }
		_case_begin_4354057152:;
		{
			if (_5416_ref.operator jule::Ref<_1e1737e81_FnIns>()->_field_decl->_method_is_init()) {
				goto _match_end_4354025984;
			}
			goto _case_begin_4354052960;
		}
		goto _match_end_4354025984;
		_case_end_4354057152:;
		_case_begin_4354052960:;
		{
			if (_1ec943e0b_is_exist_ref(jule::Slice<jule::Any>({_1ec943e0b_current,_1ec943e0b_main_current}),_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
			if (_1ec943e0b_is_exist_ref(_1ec943e0b_checking,_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
		}
		goto _match_end_4354025984;
		_case_end_4354052960:;
		_match_end_4354025984:;
	}
	jule::Any _7513_old = _1ec943e0b_current;
	_1ec943e0b_current=_5416_ref;
	jule::I64 _779_len = _1ec943e0b_checking.len();
	_1ec943e0b_checking=jule::append(_1ec943e0b_checking,jule::Slice<jule::Any>({_5416_ref}));
	__JULE_DEFER({
		_1ec943e0b_current=_7513_old;
		_1ec943e0b_drop_ref(_1ec943e0b_checking,_779_len);
	});
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4354063328; }
		_case_begin_4354063328:;
		{
			_5428_dead = _1ec943e0b_is_fn_dead(_5416_ref.operator jule::Ref<_1e1737e81_FnIns>());
			return _5428_dead;
		}
		goto _match_end_4354058816;
		_case_end_4354063328:;
		if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4354063424; }
		_case_begin_4354063424:;
		{
			_5428_dead = _1ec943e0b_is_var_dead(_5416_ref.operator jule::Ref<_1ba80e105_Var>());
			return _5428_dead;
		}
		goto _match_end_4354058816;
		_case_end_4354063424:;
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_StructIns>>())) { goto _case_end_4354063520; }
		_case_begin_4354063520:;
		{
			_5428_dead = _1ec943e0b_is_struct_dead(_5416_ref.operator jule::Ref<_1e177440c_StructIns>());
			return _5428_dead;
		}
		goto _match_end_4354058816;
		_case_end_4354063520:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a1e563_Trait>>())) { goto _case_end_4354063616; }
		_case_begin_4354063616:;
		{
			_5428_dead = _1ec943e0b_is_trait_dead(_5416_ref.operator jule::Ref<_1e2a1e563_Trait>());
			return _5428_dead;
		}
		goto _match_end_4354058816;
		_case_end_4354063616:;
		_case_begin_4354061776:;
		{
			_5428_dead = false;
			return _5428_dead;
		}
		goto _match_end_4354058816;
		_case_end_4354061776:;
		_match_end_4354058816:;
	}
}



void _1ec943e0b_drop_ref(jule::Slice<jule::Any>& _10618_refs,jule::Int _10631_pos) {
	_10618_refs=_10618_refs.slice(0LL,_10631_pos);
}



jule::Bool _1ec943e0b_is_all_references_are_dead_0(jule::Ref<_1e28b6a59_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	for (; _11513_i < _11438_references->_method_len(); (_11513_i)++) {
		{
			jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
			{
				auto _match_expr{ _1ec943e0b_current };
				if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4354081808; }
				_case_begin_4354081808:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4354083088; }
						_case_begin_4354083088:;
						{
							if ((_1ec943e0b_current.operator jule::Ref<_1e1737e81_FnIns>()).alloc == (_11717_ref.operator jule::Ref<_1e1737e81_FnIns>()).alloc) {
								goto _iter_next_4354080720;
							}
						}
						goto _match_end_4354084512;
						_case_end_4354083088:;
						_match_end_4354084512:;
					}
				}
				goto _match_end_4354082960;
				_case_end_4354081808:;
				_match_end_4354082960:;
			}
			{
				auto _match_expr{ _1ec943e0b_main_current };
				if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4354088016; }
				_case_begin_4354088016:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4354087824; }
						_case_begin_4354087824:;
						{
							if ((_1ec943e0b_main_current.operator jule::Ref<_1e1737e81_FnIns>()).alloc == (_11717_ref.operator jule::Ref<_1e1737e81_FnIns>()).alloc) {
								goto _iter_next_4354080720;
							}
						}
						goto _match_end_4354085584;
						_case_end_4354087824:;
						_match_end_4354085584:;
					}
				}
				goto _match_end_4354087632;
				_case_end_4354088016:;
				_match_end_4354087632:;
			}
			if ((!(_1ec943e0b_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_4354080720:;
	}
	_iter_end_4354080720:;
	return true;
}

jule::Bool _1ec943e0b_is_all_references_are_dead_1(jule::Ref<_1e28b6a59_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	for (; _11513_i < _11438_references->_method_len(); (_11513_i)++) {
		{
			jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
			{
				auto _match_expr{ _1ec943e0b_current };
				if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4354098592; }
				_case_begin_4354098592:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4354099840; }
						_case_begin_4354099840:;
						{
							if ((_1ec943e0b_current.operator jule::Ref<_1ba80e105_Var>()).alloc == (_11717_ref.operator jule::Ref<_1ba80e105_Var>()).alloc) {
								goto _iter_next_4354097504;
							}
						}
						goto _match_end_4354101264;
						_case_end_4354099840:;
						_match_end_4354101264:;
					}
				}
				goto _match_end_4354099744;
				_case_end_4354098592:;
				_match_end_4354099744:;
			}
			{
				auto _match_expr{ _1ec943e0b_main_current };
				if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4354104768; }
				_case_begin_4354104768:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4354104384; }
						_case_begin_4354104384:;
						{
							if ((_1ec943e0b_main_current.operator jule::Ref<_1ba80e105_Var>()).alloc == (_11717_ref.operator jule::Ref<_1ba80e105_Var>()).alloc) {
								goto _iter_next_4354097504;
							}
						}
						goto _match_end_4354102336;
						_case_end_4354104384:;
						_match_end_4354102336:;
					}
				}
				goto _match_end_4354104304;
				_case_end_4354104768:;
				_match_end_4354104304:;
			}
			if ((!(_1ec943e0b_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_4354097504:;
	}
	_iter_end_4354097504:;
	return true;
}

jule::Bool _1ec943e0b_is_all_references_are_dead_2(jule::Ref<_1e28b6a59_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	for (; _11513_i < _11438_references->_method_len(); (_11513_i)++) {
		{
			jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
			{
				auto _match_expr{ _1ec943e0b_current };
				if (!(_match_expr.type_is<jule::Ref<_1e177440c_StructIns>>())) { goto _case_end_4354129712; }
				_case_begin_4354129712:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ref<_1e177440c_StructIns>>())) { goto _case_end_4354131088; }
						_case_begin_4354131088:;
						{
							if ((_1ec943e0b_current.operator jule::Ref<_1e177440c_StructIns>()).alloc == (_11717_ref.operator jule::Ref<_1e177440c_StructIns>()).alloc) {
								goto _iter_next_4354128624;
							}
						}
						goto _match_end_4354132384;
						_case_end_4354131088:;
						_match_end_4354132384:;
					}
				}
				goto _match_end_4354130960;
				_case_end_4354129712:;
				_match_end_4354130960:;
			}
			{
				auto _match_expr{ _1ec943e0b_main_current };
				if (!(_match_expr.type_is<jule::Ref<_1e177440c_StructIns>>())) { goto _case_end_4354135888; }
				_case_begin_4354135888:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ref<_1e177440c_StructIns>>())) { goto _case_end_4354135696; }
						_case_begin_4354135696:;
						{
							if ((_1ec943e0b_main_current.operator jule::Ref<_1e177440c_StructIns>()).alloc == (_11717_ref.operator jule::Ref<_1e177440c_StructIns>()).alloc) {
								goto _iter_next_4354128624;
							}
						}
						goto _match_end_4354133472;
						_case_end_4354135696:;
						_match_end_4354133472:;
					}
				}
				goto _match_end_4354135504;
				_case_end_4354135888:;
				_match_end_4354135504:;
			}
			if ((!(_1ec943e0b_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_4354128624:;
	}
	_iter_end_4354128624:;
	return true;
}



jule::Bool _1ec943e0b_is_fn_dead(jule::Ref<_1e1737e81_FnIns> _14319_f) {
	if (_14319_f->_field_decl->_field_cpp_linked) {
		return false;
	}
	if (_14319_f->_field_decl->_method_is_entry_point() || _14319_f->_field_decl->_method_is_init()) {
		return (!(_14319_f->_field_decl->_field_statically));
	}
	if (jule::real(_14319_f->_field_owner)) {
		if (_1ec943e0b_is_exist_ref(_1ec943e0b_checking,jule::Any(_14319_f->_field_owner))) {
			return true;
		}
		return _1ec943e0b_is_dead(jule::Any(_14319_f->_field_owner));
	}
	return _1ec943e0b_is_all_references_are_dead_0(_14319_f->_field_references);
}



jule::Bool _1ec943e0b_is_var_dead(jule::Ref<_1ba80e105_Var> _16920_v) {
	if (_16920_v->_field_constant) {
		return true;
	}
	if (_16920_v->_field_cpp_linked) {
		return false;
	}
	return _1ec943e0b_is_all_references_are_dead_1(_16920_v->_field_references);
}



jule::Bool _1ec943e0b_kind_is_dead(jule::Ref<_1a2db8ce3_TypeKind> _18121_k) {
	{
		if (!((jule::real(_18121_k->_method_ref())))) { goto _case_end_4354105312; }
		_case_begin_4354105312:;
		{
			return _1ec943e0b_kind_is_dead(_18121_k->_method_ref()->_field_elem);
		}
		goto _match_end_4354092464;
		_case_end_4354105312:;
		if (!((jule::real(_18121_k->_method_ptr())))) { goto _case_end_4354093488; }
		_case_begin_4354093488:;
		{
			return _1ec943e0b_kind_is_dead(_18121_k->_method_ptr()->_field_elem);
		}
		goto _match_end_4354092464;
		_case_end_4354093488:;
		if (!((jule::real(_18121_k->_method_slc())))) { goto _case_end_4354093584; }
		_case_begin_4354093584:;
		{
			return _1ec943e0b_kind_is_dead(_18121_k->_method_slc()->_field_elem);
		}
		goto _match_end_4354092464;
		_case_end_4354093584:;
		if (!((jule::real(_18121_k->_method_arr())))) { goto _case_end_4354108816; }
		_case_begin_4354108816:;
		{
			return _1ec943e0b_kind_is_dead(_18121_k->_method_arr()->_field_elem);
		}
		goto _match_end_4354092464;
		_case_end_4354108816:;
		if (!((jule::real(_18121_k->_method_trt())))) { goto _case_end_4354108912; }
		_case_begin_4354108912:;
		{
			jule::Ref<_1e2a1e563_Trait> _19617_t = _18121_k->_method_trt();
			if (_1ec943e0b_is_dead(jule::Any(_19617_t))) {
				return true;
			}
		}
		goto _match_end_4354092464;
		_case_end_4354108912:;
		if (!((jule::real(_18121_k->_method_strct())))) { goto _case_end_4354109008; }
		_case_begin_4354109008:;
		{
			jule::Ref<_1e177440c_StructIns> _20217_s = _18121_k->_method_strct();
			if (_1ec943e0b_is_dead(jule::Any(_20217_s))) {
				return true;
			}
		}
		goto _match_end_4354092464;
		_case_end_4354109008:;
		_match_end_4354092464:;
	}
	return false;
}



jule::Bool _1ec943e0b_is_any_generic_is_dead(jule::Slice<jule::Ref<_1a2db8ce3_TypeKind>>& _21032_generics) {
	{
		auto expr = _21032_generics;
		auto it = expr.begin();
		_iter_begin_4354116608:;
		if (it != expr.end()) {
			jule::Ref<_1a2db8ce3_TypeKind> _1ec943e0b_g = *it;
			{
				if (_1ec943e0b_kind_is_dead(_1ec943e0b_g)) {
					return true;
				}
			}
			_iter_next_4354116608:;
			++it;
			goto _iter_begin_4354116608;
		}
		_iter_end_4354116608:;
	}
	return false;
}



jule::Bool _1ec943e0b_is_struct_dead(jule::Ref<_1e177440c_StructIns> _21923_s) {
	return false;
	if (_21923_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return _1ec943e0b_is_all_references_are_dead_2(_21923_s->_field_references);
}



jule::Bool _1ec943e0b_is_trait_dead(jule::Ref<_1e2a1e563_Trait> _23622_t) {
	return false;
	{
		auto expr = _23622_t->_field_implemented;
		auto it = expr.begin();
		_iter_begin_4354137488:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1ec943e0b_imp = *it;
			{
				jule::Int _24117_i = 0LL;
				for (; _24117_i < _1ec943e0b_imp->_field_instances.len(); (_24117_i)++) {
					{
						jule::Ref<_1e177440c_StructIns> _24321_ins = _1ec943e0b_imp->_field_instances[_24117_i];
						if ((!(_1ec943e0b_is_struct_dead(_24321_ins)))) {
							return false;
						}
					}
				_iter_next_4354141696:;
				}
				_iter_end_4354141696:;
			}
			_iter_next_4354137488:;
			++it;
			goto _iter_begin_4354137488;
		}
		_iter_end_4354137488:;
	}
	return true;
}



void _1ec943e0b_eliminate_dead_functions(jule::Slice<jule::Ref<_1e1737e81_Fn>>& _25434_funcs) {
	jule::Int _25513_i = 0LL;
	while (_25513_i < _25434_funcs.len()) {
		{
			jule::Ref<_1e1737e81_Fn> _25717_f = _25434_funcs[_25513_i];
			jule::Int _25817_j = 0LL;
			while (_25817_j < _25717_f->_field_instances.len()) {
				{
					jule::Ref<_1e1737e81_FnIns> _26021_ins = _25717_f->_field_instances[_25817_j];
					_1ec943e0b_main_current=jule::Any(_26021_ins);
					if (_1ec943e0b_is_fn_dead(_26021_ins)) {
						_1ec943e0b_deads=jule::append(_1ec943e0b_deads,jule::Slice<jule::Any>({jule::Any(_26021_ins)}));
						_25717_f->_field_instances=jule::append(_25717_f->_field_instances.slice(0LL,_25817_j),_25717_f->_field_instances.slice(_25817_j + 1LL));
						goto _iter_next_4354148416;
					}
					_1e1037b7c_eliminate_dead_code_of_scope(_26021_ins->_field_scope);
					(_25817_j)++;
				}
			_iter_next_4354148416:;
			}
			_iter_end_4354148416:;
			if (_25717_f->_field_instances.len() == 0LL) {
				_25434_funcs=jule::append(_25434_funcs.slice(0LL,_25513_i),_25434_funcs.slice(_25513_i + 1LL));
				goto _iter_next_4354140624;
			}
			(_25513_i)++;
		}
	_iter_next_4354140624:;
	}
	_iter_end_4354140624:;
}



void _1ec943e0b_eliminate_dead_globals(jule::Ref<_1e2a7b966_Package>& _28032_pkg) {
	{
		auto expr = _28032_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4354159840:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1ec943e0b_f = *it;
			{
				jule::Int _28217_i = 0LL;
				while (_28217_i < _1ec943e0b_f->_field_vars.len()) {
					{
						jule::Ref<_1ba80e105_Var> _28421_v = _1ec943e0b_f->_field_vars[_28217_i];
						_1ec943e0b_main_current=jule::Any(_28421_v);
						if (_1ec943e0b_is_var_dead(_28421_v)) {
							_1ec943e0b_deads=jule::append(_1ec943e0b_deads,jule::Slice<jule::Any>({jule::Any(_28421_v)}));
							_1ec943e0b_f->_field_vars=jule::append(_1ec943e0b_f->_field_vars.slice(0LL,_28217_i),_1ec943e0b_f->_field_vars.slice(_28217_i + 1LL));
						} else {
							(_28217_i)++;
						}
					}
				_iter_next_4354161776:;
				}
				_iter_end_4354161776:;
			}
			_iter_next_4354159840:;
			++it;
			goto _iter_begin_4354159840;
		}
		_iter_end_4354159840:;
	}
}



void _1ec943e0b_eliminate_dead_functions_package(jule::Ref<_1e2a7b966_Package>& _29642_pkg) {
	{
		auto expr = _29642_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4354167280:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1ec943e0b_f = *it;
			{
				_1ec943e0b_eliminate_dead_functions(_1ec943e0b_f->_field_funcs);
			}
			_iter_next_4354167280:;
			++it;
			goto _iter_begin_4354167280;
		}
		_iter_end_4354167280:;
	}
}



void _1ec943e0b_eliminate_dead_structs(jule::Ref<_1e2a7b966_Package>& _30232_pkg) {
	{
		auto expr = _30232_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4354162224:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1ec943e0b_f = *it;
			{
				jule::Int _30417_i = 0LL;
				while (_30417_i < _1ec943e0b_f->_field_structs.len()) {
					{
						jule::Ref<_1e177440c_Struct> _30621_s = _1ec943e0b_f->_field_structs[_30417_i];
						jule::Int _30721_j = 0LL;
						while (_30721_j < _30621_s->_field_instances.len()) {
							{
								jule::Ref<_1e177440c_StructIns> _30925_ins = _30621_s->_field_instances[_30721_j];
								_1ec943e0b_main_current=jule::Any(_30925_ins);
								if (_1ec943e0b_is_struct_dead(_30925_ins)) {
									_1ec943e0b_deads=jule::append(_1ec943e0b_deads,jule::Slice<jule::Any>({jule::Any(_30925_ins)}));
									_30621_s->_field_instances=jule::append(_30621_s->_field_instances.slice(0LL,_30721_j),_30621_s->_field_instances.slice(_30721_j + 1LL));
									goto _iter_next_4354175120;
								}
								(_30721_j)++;
							}
						_iter_next_4354175120:;
						}
						_iter_end_4354175120:;
						if (_30621_s->_field_instances.len() == 0LL) {
							_1ec943e0b_f->_field_structs=jule::append(_1ec943e0b_f->_field_structs.slice(0LL,_30417_i),_1ec943e0b_f->_field_structs.slice(_30417_i + 1LL));
							goto _iter_next_4354172384;
						}
						(_30417_i)++;
					}
				_iter_next_4354172384:;
				}
				_iter_end_4354172384:;
			}
			_iter_next_4354162224:;
			++it;
			goto _iter_begin_4354162224;
		}
		_iter_end_4354162224:;
	}
}



void _1ec943e0b_eliminate_dead_traits(jule::Ref<_1e2a7b966_Package>& _32831_pkg) {
	{
		auto expr = _32831_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4354184864:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1ec943e0b_f = *it;
			{
				jule::Int _33017_i = 0LL;
				while (_33017_i < _1ec943e0b_f->_field_traits.len()) {
					{
						jule::Ref<_1e2a1e563_Trait> _33221_t = _1ec943e0b_f->_field_traits[_33017_i];
						_1ec943e0b_main_current=jule::Any(_33221_t);
						if (_1ec943e0b_is_trait_dead(_33221_t)) {
							_1ec943e0b_deads=jule::append(_1ec943e0b_deads,jule::Slice<jule::Any>({jule::Any(_33221_t)}));
							_1ec943e0b_f->_field_traits=jule::append(_1ec943e0b_f->_field_traits.slice(0LL,_33017_i),_1ec943e0b_f->_field_traits.slice(_33017_i + 1LL));
						} else {
							(_33017_i)++;
						}
					}
				_iter_next_4354188640:;
				}
				_iter_end_4354188640:;
			}
			_iter_next_4354184864:;
			++it;
			goto _iter_begin_4354184864;
		}
		_iter_end_4354184864:;
	}
}



void _1ec943e0b_catch_alive_init(jule::Ref<_1e2a7b966_Package>& _34426_pkg) {
	
	
	jule::Ref<_1e1737e81_Fn> _34713_f = _34426_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_34713_f)))) {
		return;
	}
	jule::I64 _3529_n = _1ec943e0b_deads.len();
	__JULE_DEFER({
		_1ec943e0b_deads=_1ec943e0b_deads.slice(0LL,_3529_n);
		_1ec943e0b_checking=nullptr;
		_1ec943e0b_current=jule::Any(nullptr);
	});
	jule::Ref<_1e1737e81_FnIns> _36013_ins = _34713_f->_field_instances[0LL];
	jule::Int _36113_i = 0LL;
	for (; _36113_i < _36013_ins->_field_refers->_method_len(); (_36113_i)++) {
		{
			if ((!(_1ec943e0b_is_dead(_36013_ins->_field_refers->_method_at(_36113_i))))) {
				_34713_f->_field_statically=true;
				return;
			}
		}
	_iter_next_4354197520:;
	}
	_iter_end_4354197520:;
}



void _1ec943e0b_eliminate_package(jule::Ref<_1e2a7b966_Package>& _37027_pkg) {
	_1ec943e0b_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_1ec943e0b_catch_alive_init(_37027_pkg);
	_1ec943e0b_eliminate_dead_globals(_37027_pkg);
	_1ec943e0b_eliminate_dead_functions_package(_37027_pkg);
}



void _1ec943e0b_eliminate(jule::Ref<_1e10d0a8d_IR>& _38123_ir) {
	jule::I64 _38213_i = _38123_ir->_field_used.len() - 1LL;
	for (; _38213_i >= 0LL; (_38213_i)--) {
		{
			jule::Ref<_1e2a7b966_ImportInfo> _38417_u = _38123_ir->_field_used[_38213_i];
			if ((!(_38417_u->_field_cpp_linked))) {
				_1ec943e0b_eliminate_package(_38417_u->_field_package);
			}
		}
	_iter_next_4354210272:;
	}
	_iter_end_4354210272:;
	_1ec943e0b_eliminate_package(_38123_ir->_field_main);
	_1ec943e0b_deads=nullptr;
	_1ec943e0b_checking=nullptr;
	_1ec943e0b_current=jule::Any(nullptr);
}



void _1e1037b7c_eliminate_dead_code_of_scope(jule::Ref<_1e2a2e210_Scope> _7337_s) {
	jule::Ref<_1e1037b7c_ScopeDeadCode> _7413_sdc = jule::new_struct_ref<_1e1037b7c_ScopeDeadCode>(new( std::nothrow ) _1e1037b7c_ScopeDeadCode(jule::Ref<_1e1037b7c_ScopeDeadCode>(),_7337_s,(&(_7337_s->_field_stmts)),jule::Int()));
	{
		_7413_sdc->_method_optimize_stmts();
	}
}



jule::U64 _1a48b1542_unix(void) {
	return static_cast<jule::U64>(time(nullptr));
}



jule::U64 _1a48b1542_unix_year_to_seconds(jule::Uint _25725_y,jule::Bool& _25743_leap) {
	if ((_25725_y - 2LL) <= 136LL) {
		jule::Uint _25917_leaps = (_25725_y - 68LL) >> 2LL;
		_25743_leap=((_25725_y - 68LL) & 3LL) == 0LL;
		if (_25743_leap) {
			(_25917_leaps)--;
		}
		return static_cast<jule::Uint>((31536000LL * (_25725_y - 70LL)) + (86400LL * _25917_leaps));
	}
	jule::Uint _26713_leaps = 0LLU;
	jule::Uint _26813_centuries = 0LLU;
	jule::Uint _26913_cycles = jule::div(_25725_y - 100LL,400LL);
	jule::Uint _27013_rem = jule::mod(_25725_y - 100LL,400LL);
	if (_27013_rem < 0LL) {
		(_26913_cycles)--;
		_27013_rem+=400LL;
	}
	if (_27013_rem == 0LL) {
		_25743_leap=true;
		_26813_centuries=0LL;
		_26713_leaps=0LL;
	} else {
		if (_27013_rem >= 200LL) {
			if (_27013_rem >= 300LL) {
				_26813_centuries=3LL;
				_27013_rem-=300LL;
			} else {
				_26813_centuries=2LL;
				_27013_rem-=200LL;
			}
		} else {
			if (_27013_rem >= 100LL) {
				_26813_centuries=1LL;
				_27013_rem-=100LL;
			} else {
				_26813_centuries=0LL;
			}
		}
		if (_27013_rem == 0LL) {
			_25743_leap=false;
			_26713_leaps=0LL;
		} else {
			_26713_leaps=static_cast<jule::Uint>(jule::div(_27013_rem,4LL));
			_27013_rem = jule::mod(_27013_rem,4LL);
			_25743_leap=_27013_rem == 0LL;
		}
	}
	_26713_leaps+=static_cast<jule::Uint>((97LL * _26913_cycles) + (24LL * _26813_centuries));
	if (_25743_leap) {
		(_26713_leaps)++;
	}
	return static_cast<jule::Uint>(((((_25725_y - 100LL) * 31536000LL) + (_26713_leaps * 86400LL)) + 946684800LL) + 86400LL);
}



jule::U64 _1a48b1542_unix_month_to_seconds(jule::Uint _31426_m,jule::Bool _31439_leap) {
	jule::U64 _31613_t = 0LLU;
	{
		auto _match_expr{ _31426_m };
		if (!((1LL) == _match_expr)) { goto _case_end_4354288528; }
		_case_begin_4354288528:;
		{
			_31613_t=2678400LL;
		}
		goto _match_end_4354291008;
		_case_end_4354288528:;
		if (!((2LL) == _match_expr)) { goto _case_end_4354291088; }
		_case_begin_4354291088:;
		{
			_31613_t=5097600LL;
		}
		goto _match_end_4354291008;
		_case_end_4354291088:;
		if (!((3LL) == _match_expr)) { goto _case_end_4354291520; }
		_case_begin_4354291520:;
		{
			_31613_t=7776000LL;
		}
		goto _match_end_4354291008;
		_case_end_4354291520:;
		if (!((4LL) == _match_expr)) { goto _case_end_4354291616; }
		_case_begin_4354291616:;
		{
			_31613_t=10368000LL;
		}
		goto _match_end_4354291008;
		_case_end_4354291616:;
		if (!((5LL) == _match_expr)) { goto _case_end_4354291712; }
		_case_begin_4354291712:;
		{
			_31613_t=13046400LL;
		}
		goto _match_end_4354291008;
		_case_end_4354291712:;
		if (!((6LL) == _match_expr)) { goto _case_end_4354291808; }
		_case_begin_4354291808:;
		{
			_31613_t=15638400LL;
		}
		goto _match_end_4354291008;
		_case_end_4354291808:;
		if (!((7LL) == _match_expr)) { goto _case_end_4354291920; }
		_case_begin_4354291920:;
		{
			_31613_t=18316800LL;
		}
		goto _match_end_4354291008;
		_case_end_4354291920:;
		if (!((8LL) == _match_expr)) { goto _case_end_4354292032; }
		_case_begin_4354292032:;
		{
			_31613_t=20995200LL;
		}
		goto _match_end_4354291008;
		_case_end_4354292032:;
		if (!((9LL) == _match_expr)) { goto _case_end_4354292144; }
		_case_begin_4354292144:;
		{
			_31613_t=23587200LL;
		}
		goto _match_end_4354291008;
		_case_end_4354292144:;
		if (!((10LL) == _match_expr)) { goto _case_end_4354292256; }
		_case_begin_4354292256:;
		{
			_31613_t=26265600LL;
		}
		goto _match_end_4354291008;
		_case_end_4354292256:;
		if (!((11LL) == _match_expr)) { goto _case_end_4354292368; }
		_case_begin_4354292368:;
		{
			_31613_t=28857600LL;
		}
		goto _match_end_4354291008;
		_case_end_4354292368:;
		_match_end_4354291008:;
	}
	if (_31439_leap && (_31426_m >= 2LL)) {
		_31613_t+=86400LL;
	}
	return _31613_t;
}



jule::Bool _1ba858528_iter_expr_is_copy_optimizable(jule::Ref<_1a2c74a6c_Data>& _3935_expr,jule::Ref<_1ba80e105_Var>& _3949_v) {
	return (((!(_3935_expr->_field_lvalue)) || (!(_3935_expr->_field_mutable))) && (!(_3949_v->_field_mutable))) || _3949_v->_field_kind->_field_kind->_method_mutable();
}



jule::Str _1ba858528_gen_range_index_iter(jule::Ref<_1e2a2e210_RangeIter>& _4330_it) {
	jule::Str _449_begin = _1a474688e_iter_begin_label_ident(((jule::Uintptr)((_4330_it).alloc)));
	jule::Str _459_next = _1a474688e_iter_next_label_ident(((jule::Uintptr)((_4330_it).alloc)));
	jule::Str _4713_obj = jule::Str("{\n", 2);
	_1a4770896_add_indent();
	_4713_obj+=_1a4770896_indent();
	_4713_obj+=jule::Str("auto ", 5);
	if ((_1ec945d31_OPT_COPY && _4330_it->_field_expr->_field_lvalue) && (!(_4330_it->_field_expr->_field_mutable))) {
		_4713_obj+=jule::Str("&", 1);
	}
	_4713_obj+=jule::Str("expr = ", 7);
	_4713_obj+=_1a2c9bae9_gen_expr_model(_4330_it->_field_expr->_field_model);
	_4713_obj+=jule::Str(";\n", 2);
	_4713_obj+=_1a4770896_indent();
	_4713_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_4713_obj+=_1a4770896_indent();
	_4713_obj+=_449_begin;
	_4713_obj+=jule::Str(":;\n", 3);
	_4713_obj+=_1a4770896_indent();
	_4713_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1a4770896_add_indent();
	_4713_obj+=_1a4770896_indent();
	if (jule::real(_4330_it->_field_key_a)) {
		_4713_obj+=_1a4770896_gen_var_init_expr(_4330_it->_field_key_a,jule::Str("it - expr.begin()", 17));
		_4713_obj+=jule::Str("\n", 1);
		_4713_obj+=_1a4770896_indent();
	}
	if (jule::real(_4330_it->_field_key_b)) {
		if (_1ec945d31_OPT_COPY) {
			_4330_it->_field_key_b->_field_reference=_1ba858528_iter_expr_is_copy_optimizable(_4330_it->_field_expr,_4330_it->_field_key_b);
		}
		_4713_obj+=_1a4770896_gen_var_init_expr(_4330_it->_field_key_b,jule::Str("*it", 3));
		_4713_obj+=jule::Str("\n", 1);
		_4713_obj+=_1a4770896_indent();
	}
	_4713_obj+=_1ba858528_gen_scope(_4330_it->_field_scope);
	_4713_obj+=jule::Str("\n", 1);
	_4713_obj+=_1a4770896_indent();
	_4713_obj+=_459_next;
	_4713_obj+=jule::Str(":;\n", 3);
	_4713_obj+=_1a4770896_indent();
	_4713_obj+=jule::Str("++it;\n", 6);
	_4713_obj+=_1a4770896_indent();
	if (jule::real(_4330_it->_field_key_a)) {
		_4713_obj+=_1a474688e_var_out_ident(_4330_it->_field_key_a);
		_4713_obj+=jule::Str("++;\n", 4);
		_4713_obj+=_1a4770896_indent();
	}
	_4713_obj+=jule::Str("goto ", 5);
	_4713_obj+=_449_begin;
	_4713_obj+=jule::Str(";\n", 2);
	_1a4770896_done_indent();
	_4713_obj+=_1a4770896_indent();
	_4713_obj+=jule::Str("}\n", 2);
	_4713_obj+=_1a4770896_indent();
	_4713_obj+=_1a474688e_iter_end_label_ident(((jule::Uintptr)((_4330_it).alloc)));
	_4713_obj+=jule::Str(":;\n", 3);
	_1a4770896_done_indent();
	_4713_obj+=_1a4770896_indent();
	_4713_obj+=jule::Str("}", 1);
	return _4713_obj;
}



jule::Str _1ba858528_gen_range_hashmap_iter(jule::Ref<_1e2a2e210_RangeIter>& _11332_it) {
	jule::Str _1149_begin = _1a474688e_iter_begin_label_ident(((jule::Uintptr)((_11332_it).alloc)));
	jule::Str _1159_next = _1a474688e_iter_next_label_ident(((jule::Uintptr)((_11332_it).alloc)));
	jule::Str _11713_obj = jule::Str("{\n", 2);
	_1a4770896_add_indent();
	_11713_obj+=_1a4770896_indent();
	_11713_obj+=jule::Str("auto ", 5);
	if ((_1ec945d31_OPT_COPY && _11332_it->_field_expr->_field_lvalue) && (!(_11332_it->_field_expr->_field_mutable))) {
		_11713_obj+=jule::Str("&", 1);
	}
	_11713_obj+=jule::Str("expr = ", 7);
	_11713_obj+=_1a2c9bae9_gen_expr_model(_11332_it->_field_expr->_field_model);
	_11713_obj+=jule::Str(";\n", 2);
	_11713_obj+=_1a4770896_indent();
	_11713_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_11713_obj+=_1a4770896_indent();
	_11713_obj+=_1149_begin;
	_11713_obj+=jule::Str(":;\n", 3);
	_11713_obj+=_1a4770896_indent();
	_11713_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1a4770896_add_indent();
	_11713_obj+=_1a4770896_indent();
	if (jule::real(_11332_it->_field_key_a)) {
		if (_1ec945d31_OPT_COPY) {
			_11332_it->_field_key_a->_field_reference=_1ba858528_iter_expr_is_copy_optimizable(_11332_it->_field_expr,_11332_it->_field_key_a);
		}
		_11713_obj+=_1a4770896_gen_var_init_expr(_11332_it->_field_key_a,jule::Str("it->first", 9));
		_11713_obj+=jule::Str("\n", 1);
		_11713_obj+=_1a4770896_indent();
	}
	if (jule::real(_11332_it->_field_key_b)) {
		if (_1ec945d31_OPT_COPY) {
			_11332_it->_field_key_b->_field_reference=_1ba858528_iter_expr_is_copy_optimizable(_11332_it->_field_expr,_11332_it->_field_key_b);
		}
		_11713_obj+=_1a4770896_gen_var_init_expr(_11332_it->_field_key_b,jule::Str("it->second", 10));
		_11713_obj+=jule::Str("\n", 1);
		_11713_obj+=_1a4770896_indent();
	}
	_11713_obj+=_1ba858528_gen_scope(_11332_it->_field_scope);
	_11713_obj+=jule::Str("\n", 1);
	_11713_obj+=_1a4770896_indent();
	_11713_obj+=_1159_next;
	_11713_obj+=jule::Str(":;\n", 3);
	_11713_obj+=_1a4770896_indent();
	_11713_obj+=jule::Str("++it;\n", 6);
	_11713_obj+=_1a4770896_indent();
	_11713_obj+=jule::Str("goto ", 5);
	_11713_obj+=_1149_begin;
	_11713_obj+=jule::Str(";\n", 2);
	_1a4770896_done_indent();
	_11713_obj+=_1a4770896_indent();
	_11713_obj+=jule::Str("}\n", 2);
	_11713_obj+=_1a4770896_indent();
	_11713_obj+=_1a474688e_iter_end_label_ident(((jule::Uintptr)((_11332_it).alloc)));
	_11713_obj+=jule::Str(":;\n", 3);
	_1a4770896_done_indent();
	_11713_obj+=_1a4770896_indent();
	_11713_obj+=jule::Str("}", 1);
	return _11713_obj;
}



jule::Str _1ba858528_gen_if(jule::Ref<_1e2a2e210_If> _18115_i) {
	jule::Str _18213_obj = jule::Str("if (", 4);
	_18213_obj+=_1a2c9bae9_gen_expr(_18115_i->_field_expr);
	_18213_obj+=jule::Str(") ", 2);
	_18213_obj+=_1ba858528_gen_scope(_18115_i->_field_scope);
	return _18213_obj;
}



jule::Str _1ba858528_gen_conditional(jule::Ref<_1e2a2e210_Conditional> _18924_c) {
	jule::Str _19013_obj = _1ba858528_gen_if(_18924_c->_field_elifs[0LL]);
	{
		auto expr = _18924_c->_field_elifs.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4354694384:;
		if (it != expr.end()) {
			jule::Ref<_1e2a2e210_If> _1ba858528_elif = *it;
			{
				_19013_obj+=jule::Str(" else ", 6);
				_19013_obj+=_1ba858528_gen_if(_1ba858528_elif);
			}
			_iter_next_4354694384:;
			++it;
			goto _iter_begin_4354694384;
		}
		_iter_end_4354694384:;
	}
	if (jule::real(_18924_c->_field_default)) {
		_19013_obj+=jule::Str(" else ", 6);
		_19013_obj+=_1ba858528_gen_scope(_18924_c->_field_default->_field_scope);
	}
	return _19013_obj;
}



jule::Str _1ba858528_gen_inf_iter(jule::Ref<_1e2a2e210_InfIter> _20521_it) {
	jule::Str _20613_obj = jule::Str("for (;;) {\n", 11);
	_1a4770896_add_indent();
	_20613_obj+=_1a4770896_indent();
	_20613_obj+=_1ba858528_gen_scope(_20521_it->_field_scope);
	_1a4770896_done_indent();
	jule::Str _2139_indent = _1a4770896_indent();
	_20613_obj+=jule::Str("\n", 1);
	_20613_obj+=_2139_indent;
	_20613_obj+=_1a474688e_iter_next_label_ident(((jule::Uintptr)((_20521_it).alloc)));
	_20613_obj+=jule::Str(":;\n", 3);
	_20613_obj+=_2139_indent;
	_20613_obj+=jule::Str("}\n", 2);
	_20613_obj+=_2139_indent;
	_20613_obj+=_1a474688e_iter_end_label_ident(((jule::Uintptr)((_20521_it).alloc)));
	_20613_obj+=jule::Str(":;", 2);
	return _20613_obj;
}



jule::Str _1ba858528_gen_while_iter(jule::Ref<_1e2a2e210_WhileIter> _22823_it) {
	jule::Str _22913_obj = jule::Str();
	if ((_22823_it->_field_expr != nullptr) && (_22823_it->_field_next == nullptr)) {
		_22913_obj+=jule::Str("while (", 7);
		_22913_obj+=_1a2c9bae9_gen_expr(_22823_it->_field_expr);
		_22913_obj+=jule::Str(") {\n", 4);
	} else {
		_22913_obj+=jule::Str("for (; ", 7);
		if (_22823_it->_field_expr != nullptr) {
			_22913_obj+=_1a2c9bae9_gen_expr(_22823_it->_field_expr);
		}
		_22913_obj+=jule::Str("; ", 2);
		if (_22823_it->_field_next != nullptr) {
			jule::Str _24117_st = _1ba858528_gen_st(_22823_it->_field_next);
			_22913_obj+=_24117_st.slice(0LL,_24117_st.len() - 1LL);
		}
		_22913_obj+=jule::Str(") {\n", 4);
	}
	_1a4770896_add_indent();
	_22913_obj+=_1a4770896_indent();
	_22913_obj+=_1ba858528_gen_scope(_22823_it->_field_scope);
	_22913_obj+=jule::Str("\n", 1);
	_1a4770896_done_indent();
	_22913_obj+=_1a4770896_indent();
	_22913_obj+=_1a474688e_iter_next_label_ident(((jule::Uintptr)((_22823_it).alloc)));
	_22913_obj+=jule::Str(":;\n", 3);
	_22913_obj+=_1a4770896_indent();
	_22913_obj+=jule::Str("}\n", 2);
	_22913_obj+=_1a4770896_indent();
	_22913_obj+=_1a474688e_iter_end_label_ident(((jule::Uintptr)((_22823_it).alloc)));
	_22913_obj+=jule::Str(":;", 2);
	return _22913_obj;
}



jule::Str _1ba858528_gen_range_iter(jule::Ref<_1e2a2e210_RangeIter> _26423_it) {
	{
		if (!((jule::real(_26423_it->_field_expr->_field_kind->_method_slc())))) { goto _case_end_4354720912; }
		_case_begin_4354720912:;
		{
			return _1ba858528_gen_range_index_iter(_26423_it);
		}
		goto _match_end_4354718496;
		_case_end_4354720912:;
		if (!((jule::real(_26423_it->_field_expr->_field_kind->_method_arr())))) { goto _case_end_4354720544; }
		_case_begin_4354720544:;
		{
			return _1ba858528_gen_range_index_iter(_26423_it);
		}
		goto _match_end_4354718496;
		_case_end_4354720544:;
		if (!((jule::real(_26423_it->_field_expr->_field_kind->_method_map())))) { goto _case_end_4354720640; }
		_case_begin_4354720640:;
		{
			return _1ba858528_gen_range_hashmap_iter(_26423_it);
		}
		goto _match_end_4354718496;
		_case_end_4354720640:;
		_case_begin_4354715568:;
		{
			return _1ba858528_gen_range_index_iter(_26423_it);
		}
		goto _match_end_4354718496;
		_case_end_4354715568:;
		_match_end_4354718496:;
	}
}



jule::Str _1ba858528_gen_cont(jule::Ref<_1e2a2e210_ContSt> _27313_c) {
	jule::Str _27413_obj = jule::Str("goto ", 5);
	_27413_obj+=_1a474688e_iter_next_label_ident(_27313_c->_field_it);
	_27413_obj+=jule::Str(";", 1);
	return _27413_obj;
}



jule::Str _1ba858528_gen_label(jule::Ref<_1e2a2e210_Label> _28014_l) {
	return _1a474688e_label_ident(_28014_l->_field_ident) + jule::Str(":;", 2);
}



jule::Str _1ba858528_gen_goto(jule::Ref<_1e2a2e210_GotoSt> _28413_gt) {
	jule::Str _28513_obj = jule::Str("goto ", 5);
	_28513_obj+=_1a474688e_label_ident(_28413_gt->_field_ident);
	_28513_obj+=jule::Str(";", 1);
	return _28513_obj;
}



jule::Str _1ba858528_gen_postfix(jule::Ref<_1e2a2e210_Postfix> _29120_p) {
	jule::Str _29213_obj = jule::Str("(", 1);
	_29213_obj+=_1a2c9bae9_gen_expr(_29120_p->_field_expr);
	_29213_obj+=jule::Str(")", 1);
	_29213_obj+=_29120_p->_field_op;
	_29213_obj+=jule::Str(";", 1);
	return _29213_obj;
}



jule::Str _1ba858528_gen_div_by_zero_assign(jule::Ref<_1e2a2e210_Assign> _30031_a) {
	jule::Str _30113_obj = _1a2c9bae9_gen_expr(_30031_a->_field_l);
	_30113_obj+=jule::Str(" = ", 3);
	_30113_obj+=_1a2c9bae9_gen_div_by_zero_binop_expr_model(_30031_a->_field_op.slice(0LL,1LL),_30031_a->_field_l,_30031_a->_field_r);
	_30113_obj+=jule::Str(";", 1);
	return _30113_obj;
}



jule::Str _1ba858528_gen_assign(jule::Ref<_1e2a2e210_Assign> _30819_a) {
	{
		auto _match_expr{ _30819_a->_field_op };
		if (!((jule::Str("/=", 2)) == _match_expr || (jule::Str("%=", 2)) == _match_expr)) { goto _case_end_4354753152; }
		_case_begin_4354753152:;
		{
			return _1ba858528_gen_div_by_zero_assign(_30819_a);
		}
		goto _match_end_4354755328;
		_case_end_4354753152:;
		_match_end_4354755328:;
	}
	jule::Str _31513_obj = _1a2c9bae9_gen_expr(_30819_a->_field_l);
	_31513_obj+=_30819_a->_field_op;
	if (_1ec945d31_OPT_APPEND) {
		{
			auto _match_expr{ _30819_a->_field_r };
			if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinAppendCallExprModel>>())) { goto _case_end_4354760144; }
			_case_begin_4354760144:;
			{
				jule::Ref<_1e2a30c17_BuiltinAppendCallExprModel> _32021_model = _30819_a->_field_r.operator jule::Ref<_1e2a30c17_BuiltinAppendCallExprModel>();
				jule::Str _32118_expr;
				jule::Bool _32124_optimized;
				std::tie(_32118_expr,_32124_optimized) = _1a2c9bae9_gen_builtin_append_call_expr_model_assign(_30819_a->_field_l,_32021_model);
				if (_32124_optimized) {
					return _32118_expr;
				}
				_31513_obj+=_32118_expr;
			}
			goto _match_end_4354759104;
			_case_end_4354760144:;
			_case_begin_4354756224:;
			{
				_31513_obj+=_1a2c9bae9_gen_expr(_30819_a->_field_r);
			}
			goto _match_end_4354759104;
			_case_end_4354756224:;
			_match_end_4354759104:;
		}
	} else {
		_31513_obj+=_1a2c9bae9_gen_expr(_30819_a->_field_r);
	}
	_31513_obj+=jule::Str(";", 1);
	return _31513_obj;
}



jule::Str _1ba858528_gen_multi_assign(jule::Ref<_1e2a2e210_MultiAssign> _33725_a) {
	jule::Str _33813_obj = jule::Str("std::tie(", 9);
	{
		auto expr = _33725_a->_field_l;
		auto it = expr.begin();
		_iter_begin_4354766672:;
		if (it != expr.end()) {
			jule::Any _1ba858528_l = *it;
			{
				if (_1ba858528_l == nullptr) {
					_33813_obj+=jule::Str("std::ignore", 11);
					_33813_obj+=jule::Str(",", 1);
				} else {
					_33813_obj+=_1a2c9bae9_gen_expr(_1ba858528_l);
					_33813_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_4354766672:;
			++it;
			goto _iter_begin_4354766672;
		}
		_iter_end_4354766672:;
	}
	_33813_obj=_33813_obj.slice(0LL,_33813_obj.len() - 1LL);
	_33813_obj+=jule::Str(") = ", 4);
	_33813_obj+=_1a2c9bae9_gen_expr(_33725_a->_field_r);
	_33813_obj+=jule::Str(";", 1);
	return _33813_obj;
}



jule::Str _1ba858528_gen_case(jule::Ref<_1e2a2e210_Match> _35717_m,jule::Ref<_1e2a2e210_Case> _35732_c) {
	
	jule::Str _3609_end = _1a474688e_case_end_label_ident(((jule::Uintptr)((_35732_c).alloc)));
	jule::Str _36113_obj = jule::Str();
	if ((_35732_c->_field_exprs.len() > 0LL) && (!(_35717_m->_method_is_generic_type_match()))) {
		_36113_obj+=jule::Str("if (!(", 6);
		{
			auto expr = _35732_c->_field_exprs;
			auto it = expr.begin();
			_iter_begin_4354776672:;
			if (it != expr.end()) {
				jule::Int _1ba858528_i = it - expr.begin();
				jule::Any _1ba858528_expr = *it;
				{
					{
						if (!(((!(_35717_m->_field_type_match))))) { goto _case_end_4354780368; }
						_case_begin_4354780368:;
						{
							_36113_obj+=jule::Str("(", 1);
							_36113_obj+=_1a2c9bae9_gen_expr(_1ba858528_expr);
							_36113_obj+=jule::Str(")", 1);
							if (_35717_m->_field_expr->_method_is_const()) {
								if ((!(_35717_m->_field_expr->_field_constant->_method_is_bool())) || (!(_35717_m->_field_expr->_field_constant->_method_read_bool()))) {
									_36113_obj+=jule::Str(" == ", 4);
									_36113_obj+=_1a2c9bae9_gen_expr_model(_35717_m->_field_expr->_field_model);
								}
							} else {
								_36113_obj+=jule::Str(" == ", 4);
								_36113_obj+=jule::Str("_match_expr", 11);
							}
						}
						goto _match_end_4354779056;
						_case_end_4354780368:;
						_case_begin_4354779232:;
						{
							_36113_obj+=jule::Str("_match_expr", 11);
							_36113_obj+=jule::Str(".type_is<", 9);
							_36113_obj+=_1a2c9bae9_gen_expr(_1ba858528_expr);
							_36113_obj+=jule::Str(">()", 3);
						}
						goto _match_end_4354779056;
						_case_end_4354779232:;
						_match_end_4354779056:;
					}
					if ((_1ba858528_i + 1LL) < _35732_c->_field_exprs.len()) {
						_36113_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_4354776672:;
				++it;
				_1ba858528_i++;
				goto _iter_begin_4354776672;
			}
			_iter_end_4354776672:;
		}
		_36113_obj+=jule::Str(")) { goto ", 10);
		_36113_obj+=_3609_end;
		_36113_obj+=jule::Str("; }\n", 4);
	}
	if (_35732_c->_field_scope->_field_stmts.len() > 0LL) {
		_36113_obj+=_1a4770896_indent();
		_36113_obj+=_1a474688e_case_begin_label_ident(((jule::Uintptr)((_35732_c).alloc)));
		_36113_obj+=jule::Str(":;\n", 3);
		_36113_obj+=_1a4770896_indent();
		_36113_obj+=_1ba858528_gen_scope(_35732_c->_field_scope);
		_36113_obj+=jule::Str("\n", 1);
	}
	_36113_obj+=_1a4770896_indent();
	_36113_obj+=jule::Str("goto ", 5);
	_36113_obj+=_1a474688e_match_end_label_ident(((jule::Uintptr)((_35717_m).alloc))) + jule::Str(";", 1);
	_36113_obj+=jule::Str("\n", 1);
	_36113_obj+=_1a4770896_indent();
	_36113_obj+=_3609_end;
	_36113_obj+=jule::Str(":;", 2);
	return _36113_obj;
}



jule::Str _1ba858528_gen_match(jule::Ref<_1e2a2e210_Match> _41718_m) {
	if ((_41718_m->_field_cases.len() == 0LL) && (!(jule::real(_41718_m->_field_default)))) {
		return jule::Str();
	}
	jule::Bool _4229_generic_type_match = _41718_m->_method_is_generic_type_match();
	if (_4229_generic_type_match && ((!(jule::real(_41718_m->_field_default))) || (_41718_m->_field_default->_field_scope->_field_stmts.len() == 0LL))) {
		return jule::Str();
	}
	jule::Str _42713_obj = jule::Str("{\n", 2);
	_1a4770896_add_indent();
	_42713_obj+=_1a4770896_indent();
	if ((!(_4229_generic_type_match)) && (!(_41718_m->_field_expr->_method_is_const()))) {
		if (_41718_m->_field_expr->_field_lvalue && _1ec945d31_OPT_COPY) {
			_42713_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_42713_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_42713_obj+=_1a2c9bae9_gen_expr(_41718_m->_field_expr->_field_model);
		_42713_obj+=jule::Str(" };\n", 4);
		_42713_obj+=_1a4770896_indent();
	}
	if (_41718_m->_field_cases.len() > 0LL) {
		_42713_obj+=_1ba858528_gen_case(_41718_m,_41718_m->_field_cases[0LL]);
		{
			auto expr = _41718_m->_field_cases.slice(1LL);
			auto it = expr.begin();
			_iter_begin_4354808416:;
			if (it != expr.end()) {
				jule::Ref<_1e2a2e210_Case> _1ba858528_c = *it;
				{
					_42713_obj+=jule::Str("\n", 1);
					_42713_obj+=_1a4770896_indent();
					_42713_obj+=_1ba858528_gen_case(_41718_m,_1ba858528_c);
				}
				_iter_next_4354808416:;
				++it;
				goto _iter_begin_4354808416;
			}
			_iter_end_4354808416:;
		}
	}
	if (jule::real(_41718_m->_field_default)) {
		_42713_obj+=jule::Str("\n", 1);
		_42713_obj+=_1ba858528_gen_case(_41718_m,_41718_m->_field_default);
	}
	_42713_obj+=jule::Str("\n", 1);
	_42713_obj+=_1a4770896_indent();
	_42713_obj+=_1a474688e_match_end_label_ident(((jule::Uintptr)((_41718_m).alloc)));
	_42713_obj+=jule::Str(":;", 2);
	_42713_obj+=jule::Str("\n", 1);
	_1a4770896_done_indent();
	_42713_obj+=_1a4770896_indent();
	_42713_obj+=jule::Str("}", 1);
	return _42713_obj;
}



jule::Str _1ba858528_gen_fall_st(jule::Ref<_1e2a2e210_FallSt> _47316_f) {
	jule::Str _47413_obj = jule::Str("goto ", 5);
	_47413_obj+=_1a474688e_case_begin_label_ident(_47316_f->_field_dest_case);
	_47413_obj+=jule::Str(";", 1);
	return _47413_obj;
}



jule::Str _1ba858528_gen_break_st(jule::Ref<_1e2a2e210_BreakSt> _48017_b) {
	jule::Str _48113_obj = jule::Str("goto ", 5);
	if (_48017_b->_field_it != 0LL) {
		_48113_obj+=_1a474688e_iter_end_label_ident(_48017_b->_field_it);
	} else {
		_48113_obj+=_1a474688e_match_end_label_ident(_48017_b->_field_mtch);
	}
	_48113_obj+=jule::Str(";", 1);
	return _48113_obj;
}



jule::Str _1ba858528_gen_ret_vars(jule::Ref<_1e2a2e210_RetSt> _49221_r) {
	jule::Str _49313_obj = jule::Str();
	{
		auto expr = _49221_r->_field_vars;
		auto it = expr.begin();
		_iter_begin_4354822432:;
		if (it != expr.end()) {
			jule::Ref<_1ba80e105_Var> _1ba858528_v = *it;
			{
				if (_1e15a2bb9_is_ignore_ident(_1ba858528_v->_field_ident)) {
					_49313_obj+=_1a2c9bae9_get_init_expr(_1ba858528_v->_field_kind->_field_kind);
				} else {
					_49313_obj+=_1a474688e_var_out_ident(_1ba858528_v);
				}
				_49313_obj+=jule::Str(",", 1);
			}
			_iter_next_4354822432:;
			++it;
			goto _iter_begin_4354822432;
		}
		_iter_end_4354822432:;
	}
	_49313_obj=_49313_obj.slice(0LL,_49313_obj.len() - 1LL);
	if (_49221_r->_field_vars.len() > 1LL) {
		_49313_obj=(jule::Str("return std::make_tuple(", 23) + _49313_obj) + jule::Str(")", 1);
	} else {
		_49313_obj=jule::Str("return ", 7) + _49313_obj;
	}
	_49313_obj+=jule::Str(";", 1);
	return _49313_obj;
}



jule::Str _1ba858528_gen_ret_expr_tuple(jule::Ref<_1e2a2e210_RetSt> _51627_r) {
	{
		auto _match_expr{ _51627_r->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_FnCallExprModel>>())) { goto _case_end_4354823952; }
		_case_begin_4354823952:;
		{
			jule::Str _51917_obj = jule::Str("return ", 7);
			_51917_obj+=_1a2c9bae9_gen_expr_model(_51627_r->_field_expr);
			_51917_obj+=jule::Str(";", 1);
			return _51917_obj;
		}
		goto _match_end_4354829520;
		_case_end_4354823952:;
		_match_end_4354829520:;
	}
	jule::Slice<jule::Ref<_1a2c74a6c_Data>> _52513_datas = _51627_r->_field_expr.operator jule::Ref<_1e2a30c17_TupleExprModel>()->_field_datas;
	jule::Str _52613_obj = jule::Str();
	{
		auto expr = _51627_r->_field_vars;
		auto it = expr.begin();
		_iter_begin_4354834816:;
		if (it != expr.end()) {
			jule::Int _1ba858528_i = it - expr.begin();
			jule::Ref<_1ba80e105_Var> _1ba858528_v = *it;
			{
				if ((!(_1e15a2bb9_is_ignore_ident(_1ba858528_v->_field_ident)))) {
					jule::Str _53017_ident = _1a474688e_var_out_ident(_1ba858528_v);
					_52613_obj+=_53017_ident;
					_52613_obj+=jule::Str(" = ", 3);
					_52613_obj+=_1a2c9bae9_gen_expr(_52513_datas[_1ba858528_i]->_field_model);
					_52613_obj+=jule::Str(";\n", 2);
					_52613_obj+=_1a4770896_indent();
				}
			}
			_iter_next_4354834816:;
			++it;
			_1ba858528_i++;
			goto _iter_begin_4354834816;
		}
		_iter_end_4354834816:;
	}
	_52613_obj+=jule::Str("return std::make_tuple(", 23);
	{
		auto expr = _52513_datas;
		auto it = expr.begin();
		_iter_begin_4354834368:;
		if (it != expr.end()) {
			jule::Int _1ba858528_i = it - expr.begin();
			jule::Ref<_1a2c74a6c_Data> _1ba858528_d = *it;
			{
				jule::Ref<_1ba80e105_Var> _54117_v = _51627_r->_field_vars[_1ba858528_i];
				if (_1e15a2bb9_is_ignore_ident(_54117_v->_field_ident)) {
					_52613_obj+=_1a2c9bae9_gen_expr(_1ba858528_d->_field_model);
				} else {
					_52613_obj+=_1a474688e_var_out_ident(_54117_v);
				}
				_52613_obj+=jule::Str(",", 1);
			}
			_iter_next_4354834368:;
			++it;
			_1ba858528_i++;
			goto _iter_begin_4354834368;
		}
		_iter_end_4354834368:;
	}
	_52613_obj=_52613_obj.slice(0LL,_52613_obj.len() - 1LL);
	_52613_obj+=jule::Str(");", 2);
	return _52613_obj;
}



jule::Str _1ba858528_gen_ret_expr(jule::Ref<_1e2a2e210_RetSt> _55621_r) {
	if (_55621_r->_field_vars.len() == 0LL) {
		jule::Str _55817_obj = jule::Str("return ", 7);
		_55817_obj+=_1a2c9bae9_gen_expr(_55621_r->_field_expr);
		_55817_obj+=jule::Str(";", 1);
		return _55817_obj;
	}
	if (_55621_r->_field_vars.len() > 1LL) {
		return _1ba858528_gen_ret_expr_tuple(_55621_r);
	}
	if ((!(_1e15a2bb9_is_ignore_ident(_55621_r->_field_vars[0LL]->_field_ident)))) {
		jule::Str _56913_ident = _1a474688e_var_out_ident(_55621_r->_field_vars[0LL]);
		jule::Str _57017_obj = _56913_ident;
		_57017_obj+=jule::Str(" = ", 3);
		_57017_obj+=_1a2c9bae9_gen_expr(_55621_r->_field_expr);
		_57017_obj+=jule::Str(";\n", 2);
		_57017_obj+=_1a4770896_indent();
		_57017_obj+=jule::Str("return ", 7);
		_57017_obj+=_56913_ident;
		_57017_obj+=jule::Str(";", 1);
		return _57017_obj;
	}
	jule::Str _58113_obj = jule::Str("return ", 7);
	_58113_obj+=_1a2c9bae9_gen_expr(_55621_r->_field_expr);
	_58113_obj+=jule::Str(";", 1);
	return _58113_obj;
}



jule::Str _1ba858528_gen_ret_st(jule::Ref<_1e2a2e210_RetSt> _58719_r) {
	if ((_58719_r->_field_expr == nullptr) && (_58719_r->_field_vars.len() == 0LL)) {
		return jule::Str("return;", 7);
	}
	if (_58719_r->_field_expr == nullptr) {
		return _1ba858528_gen_ret_vars(_58719_r);
	}
	return _1ba858528_gen_ret_expr(_58719_r);
}



jule::Str _1ba858528_gen_ret_st_with_defaults(jule::Ref<_1a2db8ce3_TypeKind> _59933_result) {
	jule::Str _60013_obj = jule::Str("return ", 7);
	if (jule::real(_59933_result->_method_tup())) {
		_60013_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto expr = _59933_result->_method_tup()->_field_types;
			auto it = expr.begin();
			_iter_begin_4354865392:;
			if (it != expr.end()) {
				jule::Ref<_1a2db8ce3_TypeKind> _1ba858528_t = *it;
				{
					_60013_obj+=_1a2c9bae9_get_init_expr(_1ba858528_t);
					_60013_obj+=jule::Str(",", 1);
				}
				_iter_next_4354865392:;
				++it;
				goto _iter_begin_4354865392;
			}
			_iter_end_4354865392:;
		}
		_60013_obj=_60013_obj.slice(0LL,_60013_obj.len() - 1LL);
		_60013_obj+=jule::Str(")", 1);
	} else {
		_60013_obj+=_1a2c9bae9_get_init_expr(_59933_result);
	}
	_60013_obj+=jule::Str(";", 1);
	return _60013_obj;
}



jule::Str _1ba858528_gen_recover(jule::Ref<_1e2a2e210_Recover> _61620_r) {
	jule::Str _61713_obj = jule::Str("try ", 4);
	_61713_obj+=_1ba858528_gen_scope(_61620_r->_field_scope);
	_61713_obj+=jule::Str(" catch(jule::Exception e) ", 26);
	if (_61620_r->_field_handler->_method_is_anon()) {
		_1a4770896_add_indent();
		_61713_obj+=jule::Str("{\n", 2);
		_61713_obj+=_1a4770896_indent();
		_61713_obj+=_1a2c9bae9_gen_expr(_61620_r->_field_handler_expr);
		_61713_obj+=jule::Str("(jule::exception_to_error(e));", 30);
		if ((!(_61620_r->_field_scope_owner->_field_decl->_method_is_void()))) {
			_61713_obj+=jule::Str("\n", 1);
			_61713_obj+=_1a4770896_indent();
			_1a4770896_done_indent();
			_61713_obj+=_1ba858528_gen_ret_st_with_defaults(_61620_r->_field_scope_owner->_field_result);
		} else {
			_1a4770896_done_indent();
		}
		_61713_obj+=jule::Str("\n", 1);
		_61713_obj+=_1a4770896_indent();
		_61713_obj+=jule::Str("}", 1);
	} else {
		_61713_obj+=jule::Str("{\n", 2);
		_1a4770896_add_indent();
		_61713_obj+=_1a4770896_indent();
		_61713_obj+=_1a2c9bae9_gen_expr(_61620_r->_field_handler_expr);
		_61713_obj+=jule::Str("(jule::exception_to_error(e));\n", 31);
		_61713_obj+=_1a4770896_indent();
		if (_61620_r->_field_scope_owner->_field_decl->_method_is_void()) {
			_1a4770896_done_indent();
			_61713_obj+=jule::Str(" }", 2);
		} else {
			_61713_obj+=_1ba858528_gen_ret_st_with_defaults(_61620_r->_field_scope_owner->_field_result);
			_61713_obj+=jule::Str("\n", 1);
			_1a4770896_done_indent();
			_61713_obj+=_1a4770896_indent();
			_61713_obj+=jule::Str("}", 1);
		}
	}
	return _61713_obj;
}



jule::Str _1ba858528_gen_data_expr(jule::Ref<_1a2c74a6c_Data> _66522_d) {
	return _1a2c9bae9_gen_expr(_66522_d->_field_model) + jule::Str(";", 1);
}



jule::Str _1ba858528_gen_scope_var(jule::Ref<_1ba80e105_Var> _66922_v) {
	if (_66922_v->_field_constant) {
		return jule::Str();
	}
	return _1a4770896_gen_var(_66922_v);
}



jule::Str _1ba858528_gen_st(jule::Any _67715_st) {
	{
		auto _match_expr{ _67715_st };
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Scope>>())) { goto _case_end_4354889168; }
		_case_begin_4354889168:;
		{
			return _1ba858528_gen_scope(_67715_st.operator jule::Ref<_1e2a2e210_Scope>());
		}
		goto _match_end_4354886432;
		_case_end_4354889168:;
		if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4354889264; }
		_case_begin_4354889264:;
		{
			return _1ba858528_gen_scope_var(_67715_st.operator jule::Ref<_1ba80e105_Var>());
		}
		goto _match_end_4354886432;
		_case_end_4354889264:;
		if (!(_match_expr.type_is<jule::Ref<_1a2c74a6c_Data>>())) { goto _case_end_4354889424; }
		_case_begin_4354889424:;
		{
			return _1ba858528_gen_data_expr(_67715_st.operator jule::Ref<_1a2c74a6c_Data>());
		}
		goto _match_end_4354886432;
		_case_end_4354889424:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Conditional>>())) { goto _case_end_4354889520; }
		_case_begin_4354889520:;
		{
			return _1ba858528_gen_conditional(_67715_st.operator jule::Ref<_1e2a2e210_Conditional>());
		}
		goto _match_end_4354886432;
		_case_end_4354889520:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_InfIter>>())) { goto _case_end_4354889616; }
		_case_begin_4354889616:;
		{
			return _1ba858528_gen_inf_iter(_67715_st.operator jule::Ref<_1e2a2e210_InfIter>());
		}
		goto _match_end_4354886432;
		_case_end_4354889616:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_WhileIter>>())) { goto _case_end_4354888336; }
		_case_begin_4354888336:;
		{
			return _1ba858528_gen_while_iter(_67715_st.operator jule::Ref<_1e2a2e210_WhileIter>());
		}
		goto _match_end_4354886432;
		_case_end_4354888336:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_RangeIter>>())) { goto _case_end_4354888432; }
		_case_begin_4354888432:;
		{
			return _1ba858528_gen_range_iter(_67715_st.operator jule::Ref<_1e2a2e210_RangeIter>());
		}
		goto _match_end_4354886432;
		_case_end_4354888432:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_ContSt>>())) { goto _case_end_4354888528; }
		_case_begin_4354888528:;
		{
			return _1ba858528_gen_cont(_67715_st.operator jule::Ref<_1e2a2e210_ContSt>());
		}
		goto _match_end_4354886432;
		_case_end_4354888528:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Label>>())) { goto _case_end_4354888624; }
		_case_begin_4354888624:;
		{
			return _1ba858528_gen_label(_67715_st.operator jule::Ref<_1e2a2e210_Label>());
		}
		goto _match_end_4354886432;
		_case_end_4354888624:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_GotoSt>>())) { goto _case_end_4354889792; }
		_case_begin_4354889792:;
		{
			return _1ba858528_gen_goto(_67715_st.operator jule::Ref<_1e2a2e210_GotoSt>());
		}
		goto _match_end_4354886432;
		_case_end_4354889792:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Postfix>>())) { goto _case_end_4354889888; }
		_case_begin_4354889888:;
		{
			return _1ba858528_gen_postfix(_67715_st.operator jule::Ref<_1e2a2e210_Postfix>());
		}
		goto _match_end_4354886432;
		_case_end_4354889888:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Assign>>())) { goto _case_end_4354889984; }
		_case_begin_4354889984:;
		{
			return _1ba858528_gen_assign(_67715_st.operator jule::Ref<_1e2a2e210_Assign>());
		}
		goto _match_end_4354886432;
		_case_end_4354889984:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_MultiAssign>>())) { goto _case_end_4354890096; }
		_case_begin_4354890096:;
		{
			return _1ba858528_gen_multi_assign(_67715_st.operator jule::Ref<_1e2a2e210_MultiAssign>());
		}
		goto _match_end_4354886432;
		_case_end_4354890096:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Match>>())) { goto _case_end_4354890208; }
		_case_begin_4354890208:;
		{
			return _1ba858528_gen_match(_67715_st.operator jule::Ref<_1e2a2e210_Match>());
		}
		goto _match_end_4354886432;
		_case_end_4354890208:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_FallSt>>())) { goto _case_end_4354890320; }
		_case_begin_4354890320:;
		{
			return _1ba858528_gen_fall_st(_67715_st.operator jule::Ref<_1e2a2e210_FallSt>());
		}
		goto _match_end_4354886432;
		_case_end_4354890320:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_BreakSt>>())) { goto _case_end_4354890432; }
		_case_begin_4354890432:;
		{
			return _1ba858528_gen_break_st(_67715_st.operator jule::Ref<_1e2a2e210_BreakSt>());
		}
		goto _match_end_4354886432;
		_case_end_4354890432:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_RetSt>>())) { goto _case_end_4354890544; }
		_case_begin_4354890544:;
		{
			return _1ba858528_gen_ret_st(_67715_st.operator jule::Ref<_1e2a2e210_RetSt>());
		}
		goto _match_end_4354886432;
		_case_end_4354890544:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a2e210_Recover>>())) { goto _case_end_4354890656; }
		_case_begin_4354890656:;
		{
			return _1ba858528_gen_recover(_67715_st.operator jule::Ref<_1e2a2e210_Recover>());
		}
		goto _match_end_4354886432;
		_case_end_4354890656:;
		_case_begin_4354794576:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_4354886432;
		_case_end_4354794576:;
		_match_end_4354886432:;
	}
}



jule::Str _1ba858528_gen_scope(jule::Ref<_1e2a2e210_Scope> _70218_s) {
	jule::Str _70313_obj = jule::Str("{\n", 2);
	_1a4770896_add_indent();
	{
		auto expr = _70218_s->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4354916160:;
		if (it != expr.end()) {
			jule::Any _1ba858528_st = *it;
			{
				_70313_obj+=_1a4770896_indent();
				_70313_obj+=_1ba858528_gen_st(_1ba858528_st);
				_70313_obj+=jule::Str("\n", 1);
			}
			_iter_next_4354916160:;
			++it;
			goto _iter_begin_4354916160;
		}
		_iter_end_4354916160:;
	}
	_1a4770896_done_indent();
	_70313_obj+=_1a4770896_indent();
	_70313_obj+=jule::Str("}", 1);
	if (_70218_s->_field_deferred) {
		_70313_obj=(jule::Str("__JULE_DEFER(", 13) + _70313_obj) + jule::Str(");", 2);
	}
	return _70313_obj;
}



jule::Str _1ba858528_gen_fn_scope(jule::Ref<_1e1737e81_FnIns> _72421_f) {
	if (jule::real(_72421_f->_field_owner)) {
		return _1ba858528_gen_method_scope(_72421_f);
	}
	return _1ba858528_gen_scope(_72421_f->_field_scope);
}



jule::Str _1ba858528_gen_method_scope(jule::Ref<_1e1737e81_FnIns> _73325_f) {
	return _1ba858528_gen_scope(_73325_f->_field_scope);
}



jule::Str _1a2c9bae9_concat_all_parts(jule::Slice<jule::Str> _8021_parts) {
	jule::Str _8113_s = jule::Str();
	{
		auto expr = _8021_parts;
		auto it = expr.begin();
		_iter_begin_4354925120:;
		if (it != expr.end()) {
			jule::Str _1a2c9bae9_part = *it;
			{
				_8113_s+=_1a2c9bae9_part;
			}
			_iter_next_4354925120:;
			++it;
			goto _iter_begin_4354925120;
		}
		_iter_end_4354925120:;
	}
	return _8113_s;
}



jule::Str _1a2c9bae9_get_accessor(jule::Ref<_1a2db8ce3_TypeKind>& _8822_t) {
	if (jule::real(_8822_t->_method_ref()) || jule::real(_8822_t->_method_ptr())) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



jule::Str _1a2c9bae9_decompose_common_esq(jule::U8 _9525_b) {
	{
		auto _match_expr{ _9525_b };
		if (!(('\\') == _match_expr)) { goto _case_end_4354930752; }
		_case_begin_4354930752:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_4354929216;
		_case_end_4354930752:;
		if (!(('\'') == _match_expr)) { goto _case_end_4354930560; }
		_case_begin_4354930560:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_4354929216;
		_case_end_4354930560:;
		if (!(('\"') == _match_expr)) { goto _case_end_4354931008; }
		_case_begin_4354931008:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_4354929216;
		_case_end_4354931008:;
		if (!(('\a') == _match_expr)) { goto _case_end_4354931104; }
		_case_begin_4354931104:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_4354929216;
		_case_end_4354931104:;
		if (!(('\b') == _match_expr)) { goto _case_end_4354931200; }
		_case_begin_4354931200:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_4354929216;
		_case_end_4354931200:;
		if (!(('\f') == _match_expr)) { goto _case_end_4354929760; }
		_case_begin_4354929760:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_4354929216;
		_case_end_4354929760:;
		if (!(('\n') == _match_expr)) { goto _case_end_4354929856; }
		_case_begin_4354929856:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_4354929216;
		_case_end_4354929856:;
		if (!(('\r') == _match_expr)) { goto _case_end_4354929952; }
		_case_begin_4354929952:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_4354929216;
		_case_end_4354929952:;
		if (!(('\t') == _match_expr)) { goto _case_end_4354930048; }
		_case_begin_4354930048:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_4354929216;
		_case_end_4354930048:;
		if (!(('\v') == _match_expr)) { goto _case_end_4354931376; }
		_case_begin_4354931376:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_4354929216;
		_case_end_4354931376:;
		_case_begin_4354928000:;
		{
			return jule::Str();
		}
		goto _match_end_4354929216;
		_case_end_4354928000:;
		_match_end_4354929216:;
	}
}



jule::Str _1a2c9bae9_sbtoa(jule::U8 _11110_b) {
	if (_11110_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_11110_b <= 127LL) {
		jule::Str _11713_seq = _1a2c9bae9_decompose_common_esq(_11110_b);
		if (_11713_seq != jule::Str()) {
			return _11713_seq;
		}
		if ((32LL <= _11110_b) && (_11110_b <= 126LL)) {
			return static_cast<jule::Str>(_11110_b);
		}
	}
	jule::Str _1279_seq = _1e103784c_fmt_uint(static_cast<jule::U64>(_11110_b),8LL);
	if (_1279_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1279_seq;
	}
	return jule::Str("\\", 1) + _1279_seq;
}



jule::Str _1a2c9bae9_get_str_model(jule::Ref<_1a37ddd88_Const>& _13419_c) {
	jule::Str _1359_content = _13419_c->_method_read_str();
	jule::Slice<jule::U8> _1369_bytes = static_cast<jule::Slice<jule::U8>>(_1359_content);
	jule::Str _1379_len = _1e103784c_fmt_int(static_cast<jule::I64>(_1369_bytes.len()),10LL);
	jule::Str _13913_lit = jule::Str();
	{
		auto expr = _1369_bytes;
		auto it = expr.begin();
		_iter_begin_4354948272:;
		if (it != expr.end()) {
			jule::U8 _1a2c9bae9_b = *it;
			{
				_13913_lit+=_1a2c9bae9_sbtoa(_1a2c9bae9_b);
			}
			_iter_next_4354948272:;
			++it;
			goto _iter_begin_4354948272;
		}
		_iter_end_4354948272:;
	}
	if (_13913_lit.len() == 0LL) {
		return _1a474688e_as_jt(jule::Str("str", 3)) + jule::Str("()", 2);
	}
	return ((((_1a474688e_as_jt(jule::Str("str", 3)) + jule::Str("(\"", 2)) + _13913_lit) + jule::Str("\", ", 3)) + _1379_len) + jule::Str(")", 1);
}



jule::Str _1a2c9bae9_get_bool_model(jule::Ref<_1a37ddd88_Const>& _15120_c) {
	if (_15120_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



jule::Str _1a2c9bae9_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



jule::Str _1a2c9bae9_gen_float_special_cases(jule::F64& _16029_x) {
	{
		if (!((_1e119a00e_is_nan(_16029_x)))) { goto _case_end_4354956736; }
		_case_begin_4354956736:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_4354955152;
		_case_end_4354956736:;
		if (!((_1e119a00e_is_inf(_16029_x,1LL)))) { goto _case_end_4354956304; }
		_case_begin_4354956304:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_4354955152;
		_case_end_4354956304:;
		if (!((_1e119a00e_is_inf(_16029_x,-1LL)))) { goto _case_end_4354956400; }
		_case_begin_4354956400:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_4354955152;
		_case_end_4354956400:;
		_case_begin_4354955328:;
		{
			return jule::Str();
		}
		goto _match_end_4354955152;
		_case_end_4354955328:;
		_match_end_4354955152:;
	}
}



jule::Str _1a2c9bae9_ftoa(jule::F64 _1699_f,jule::Int _16917_bitsize) {
	if (_16917_bitsize != 32LL) {
		if (_1699_f == static_cast<jule::F64>(static_cast<jule::I64>(_1699_f))) {
			return _1a2c9bae9_i64toa(static_cast<jule::I64>(_1699_f));
		}
		if (_1699_f == static_cast<jule::F64>(static_cast<jule::U64>(_1699_f))) {
			return _1a2c9bae9_u64toa(static_cast<jule::U64>(_1699_f));
		}
	}
	jule::Str _17913_m = _1ec95e245_fmt_float(_1699_f,'f',-1LL,_16917_bitsize);
	if (_17913_m.find(jule::Str(".", 1)) == -1LL) {
		_17913_m+=jule::Str(".0", 2);
	}
	return _17913_m;
}



jule::Str _1a2c9bae9_get_f32_model(jule::Ref<_1a37ddd88_Const>& _18619_c) {
	jule::F64 _1879_x = _18619_c->_method_as_f64();
	jule::Str _1909_f = _1a2c9bae9_gen_float_special_cases(_1879_x);
	if (_1909_f != jule::Str()) {
		return _1909_f;
	}
	{
		if (!((_1879_x == 340282346638528860000000000000000000000.0))) { goto _case_end_4354970688; }
		_case_begin_4354970688:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_4354971248;
		_case_end_4354970688:;
		if (!((_1879_x == -340282346638528860000000000000000000000.0))) { goto _case_end_4354970272; }
		_case_begin_4354970272:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_4354971248;
		_case_end_4354970272:;
		_match_end_4354971248:;
	}
	return _1a2c9bae9_ftoa(_1879_x,32LL) + jule::Str("f", 1);
}



jule::Str _1a2c9bae9_get_f64_model(jule::Ref<_1a37ddd88_Const>& _20319_c) {
	jule::F64 _2049_x = _20319_c->_method_as_f64();
	jule::Str _2079_f = _1a2c9bae9_gen_float_special_cases(_2049_x);
	if (_2079_f != jule::Str()) {
		return _2079_f;
	}
	{
		if (!((_2049_x == jule::MAX_F64))) { goto _case_end_4354976048; }
		_case_begin_4354976048:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_4354976352;
		_case_end_4354976048:;
		if (!((_2049_x == jule::MIN_F64))) { goto _case_end_4354976144; }
		_case_begin_4354976144:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_4354976352;
		_case_end_4354976144:;
		_match_end_4354976352:;
	}
	return _1a2c9bae9_ftoa(_2049_x,64LL);
}



jule::Str _1a2c9bae9_get_float_model(jule::Ref<_1a2c74a6c_Data>& _22025_d) {
	{
		if (!((_22025_d->_field_kind->_method_prim()->_method_is_f32()))) { goto _case_end_4354981536; }
		_case_begin_4354981536:;
		{
			return _1a2c9bae9_get_f32_model(_22025_d->_field_constant);
		}
		goto _match_end_4354979056;
		_case_end_4354981536:;
		_case_begin_4354979232:;
		{
			return _1a2c9bae9_get_f64_model(_22025_d->_field_constant);
		}
		goto _match_end_4354979056;
		_case_end_4354979232:;
		_match_end_4354979056:;
	}
}



jule::Str _1a2c9bae9_i64toa(jule::I64 _22711_x) {
	{
		if (!((_22711_x == jule::MAX_I64))) { goto _case_end_4354982096; }
		_case_begin_4354982096:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_4354980448;
		_case_end_4354982096:;
		if (!((_22711_x == jule::MIN_I64))) { goto _case_end_4354982192; }
		_case_begin_4354982192:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_4354980448;
		_case_end_4354982192:;
		_match_end_4354980448:;
	}
	jule::Str _2339_fmt = _1e103784c_fmt_int(_22711_x,10LL);
	if (_1ec970a4d_is_64bit(jule::Str("i386", 4))) {
		return _2339_fmt + jule::Str("LL", 2);
	}
	return _2339_fmt + jule::Str("L", 1);
}



jule::Str _1a2c9bae9_get_i64_model(jule::Ref<_1a37ddd88_Const>& _24019_c) {
	return _1a2c9bae9_i64toa(static_cast<jule::I64>(_24019_c->_method_read_i64()));
}



jule::Str _1a2c9bae9_u64toa(jule::U64 _24411_x) {
	{
		if (!((_24411_x == jule::MAX_U64))) { goto _case_end_4354989360; }
		_case_begin_4354989360:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_4354988288;
		_case_end_4354989360:;
		_match_end_4354988288:;
	}
	jule::Str _2509_fmt = _1e103784c_fmt_uint(_24411_x,10LL);
	if (_1ec970a4d_is_64bit(jule::Str("i386", 4))) {
		return _2509_fmt + jule::Str("LLU", 3);
	}
	return _2509_fmt + jule::Str("LU", 2);
}



jule::Str _1a2c9bae9_get_u64_model(jule::Ref<_1a37ddd88_Const> _25718_c) {
	return _1a2c9bae9_u64toa(static_cast<jule::U64>(_25718_c->_method_read_u64()));
}



jule::Str _1a2c9bae9_gen_const_expr(jule::Ref<_1a2c74a6c_Data> _26123_d) {
	{
		if (!((_26123_d->_field_constant->_method_is_str()))) { goto _case_end_4354997056; }
		_case_begin_4354997056:;
		{
			return _1a2c9bae9_get_str_model(_26123_d->_field_constant);
		}
		goto _match_end_4354992656;
		_case_end_4354997056:;
		if (!((_26123_d->_field_constant->_method_is_bool()))) { goto _case_end_4354997152; }
		_case_begin_4354997152:;
		{
			return _1a2c9bae9_get_bool_model(_26123_d->_field_constant);
		}
		goto _match_end_4354992656;
		_case_end_4354997152:;
		if (!((_26123_d->_field_constant->_method_is_f64()))) { goto _case_end_4354997248; }
		_case_begin_4354997248:;
		{
			return _1a2c9bae9_get_float_model(_26123_d);
		}
		goto _match_end_4354992656;
		_case_end_4354997248:;
		if (!((_26123_d->_field_constant->_method_is_i64()))) { goto _case_end_4354997680; }
		_case_begin_4354997680:;
		{
			return _1a2c9bae9_get_i64_model(_26123_d->_field_constant);
		}
		goto _match_end_4354992656;
		_case_end_4354997680:;
		if (!((_26123_d->_field_constant->_method_is_u64()))) { goto _case_end_4354997776; }
		_case_begin_4354997776:;
		{
			return _1a2c9bae9_get_u64_model(_26123_d->_field_constant);
		}
		goto _match_end_4354992656;
		_case_end_4354997776:;
		if (!((_26123_d->_field_constant->_method_is_nil()))) { goto _case_end_4354997872; }
		_case_begin_4354997872:;
		{
			return _1a2c9bae9_get_nil_model();
		}
		goto _match_end_4354992656;
		_case_end_4354997872:;
		_case_begin_4354995792:;
		{
			return jule::Str();
		}
		goto _match_end_4354992656;
		_case_end_4354995792:;
		_match_end_4354992656:;
	}
}



jule::Str _1a2c9bae9_gen_const_expr_model(jule::Ref<_1a37ddd88_Const> _27325_m) {
	{
		if (!((_27325_m->_method_is_str()))) { goto _case_end_4355007920; }
		_case_begin_4355007920:;
		{
			return _1a2c9bae9_get_str_model(_27325_m);
		}
		goto _match_end_4355006352;
		_case_end_4355007920:;
		if (!((_27325_m->_method_is_bool()))) { goto _case_end_4355008016; }
		_case_begin_4355008016:;
		{
			return _1a2c9bae9_get_bool_model(_27325_m);
		}
		goto _match_end_4355006352;
		_case_end_4355008016:;
		if (!((_27325_m->_method_is_f64()))) { goto _case_end_4355008112; }
		_case_begin_4355008112:;
		{
			return _1a2c9bae9_get_f64_model(_27325_m);
		}
		goto _match_end_4355006352;
		_case_end_4355008112:;
		if (!((_27325_m->_method_is_i64()))) { goto _case_end_4355008544; }
		_case_begin_4355008544:;
		{
			return _1a2c9bae9_get_i64_model(_27325_m);
		}
		goto _match_end_4355006352;
		_case_end_4355008544:;
		if (!((_27325_m->_method_is_u64()))) { goto _case_end_4355008640; }
		_case_begin_4355008640:;
		{
			return _1a2c9bae9_get_u64_model(_27325_m);
		}
		goto _match_end_4355006352;
		_case_end_4355008640:;
		if (!((_27325_m->_method_is_nil()))) { goto _case_end_4355008736; }
		_case_begin_4355008736:;
		{
			return _1a2c9bae9_get_nil_model();
		}
		goto _match_end_4355006352;
		_case_end_4355008736:;
		_case_begin_4355006496:;
		{
			return jule::Str();
		}
		goto _match_end_4355006352;
		_case_end_4355006496:;
		_match_end_4355006352:;
	}
}



jule::Str _1a2c9bae9_gen_div_by_zero_binop_expr_model(jule::Str _28537_op,jule::Any _28550_l,jule::Any _28568_r) {
	jule::Str _28613_op_func = jule::Str();
	{
		auto _match_expr{ _28537_op };
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4355015824; }
		_case_begin_4355015824:;
		{
			_28613_op_func=jule::Str("div", 3);
		}
		goto _match_end_4355016656;
		_case_end_4355015824:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4355016736; }
		_case_begin_4355016736:;
		{
			_28613_op_func=jule::Str("mod", 3);
		}
		goto _match_end_4355016656;
		_case_end_4355016736:;
		_match_end_4355016656:;
	}
	if (_1ec945d31_OPT_MATH) {
		{
			auto _match_expr{ _28568_r };
			if (!(_match_expr.type_is<jule::Ref<_1a37ddd88_Const>>())) { goto _case_end_4355019072; }
			_case_begin_4355019072:;
			{
				_28613_op_func=jule::Str("unsafe_", 7) + _28613_op_func;
			}
			goto _match_end_4355018608;
			_case_end_4355019072:;
			_match_end_4355018608:;
		}
	}
	jule::Str _29913_obj = jule::Str("jule::", 6);
	_29913_obj+=_28613_op_func;
	_29913_obj+=jule::Str("(", 1);
	_29913_obj+=_1a2c9bae9_gen_expr(_28550_l);
	_29913_obj+=jule::Str(",", 1);
	_29913_obj+=_1a2c9bae9_gen_expr(_28568_r);
	_29913_obj+=jule::Str(")", 1);
	return _29913_obj;
}



jule::Str _1a2c9bae9_gen_binop_expr_model(jule::Ref<_1e2a30c17_BinopExprModel> _30929_m) {
	{
		auto _match_expr{ _30929_m->_field_op };
		if (!((jule::Str("/", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr)) { goto _case_end_4355022144; }
		_case_begin_4355022144:;
		{
			return _1a2c9bae9_gen_div_by_zero_binop_expr_model(_30929_m->_field_op,_30929_m->_field_left,_30929_m->_field_right);
		}
		goto _match_end_4355023072;
		_case_end_4355022144:;
		_match_end_4355023072:;
	}
	jule::Str _31613_obj = jule::Str("(", 1);
	_31613_obj+=_1a2c9bae9_gen_expr_model(_30929_m->_field_left);
	_31613_obj+=jule::Str(" ", 1);
	_31613_obj+=_30929_m->_field_op;
	_31613_obj+=jule::Str(" ", 1);
	_31613_obj+=_1a2c9bae9_gen_expr_model(_30929_m->_field_right);
	_31613_obj+=jule::Str(")", 1);
	return _31613_obj;
}



jule::Str _1a2c9bae9_gen_var_expr_model(jule::Ref<_1ba80e105_Var> _32627_m) {
	if (_32627_m->_field_cpp_linked) {
		jule::Ref<_1e16025cb_Directive> _32813_d = _1a4772b73_find_directive(_32627_m->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_32813_d)) {
			jule::Str _33021_obj = _1a2c9bae9_concat_all_parts(_32813_d->_field_args);
			_33021_obj+=jule::Str("::", 2);
			_33021_obj+=_1a474688e_var_out_ident(_32627_m);
			return _33021_obj;
		}
	}
	return _1a474688e_var_out_ident(_32627_m);
}



jule::Str _1a2c9bae9_gen_struct_expr_model(jule::Ref<_1e177440c_Struct> _33926_m) {
	return _1a4772b73_gen_struct_kind(_33926_m);
}



jule::Str _1a2c9bae9_gen_struct_ins_expr_model(jule::Ref<_1e177440c_StructIns> _34334_m) {
	return _1a4772b73_gen_struct_kind_ins(_34334_m);
}



jule::Str _1a2c9bae9_gen_unary_expr_model(jule::Ref<_1e2a30c17_UnaryExprModel> _34729_m) {
	{
		auto _match_expr{ _34729_m->_field_op };
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4355038144; }
		_case_begin_4355038144:;
		{
			jule::Str _35017_obj = jule::Str("(~(", 3);
			_35017_obj+=_1a2c9bae9_gen_expr(_34729_m->_field_expr);
			_35017_obj+=jule::Str("))", 2);
			return _35017_obj;
		}
		goto _match_end_4355036000;
		_case_end_4355038144:;
		_case_begin_4355035072:;
		{
			jule::Str _35617_obj = jule::Str("(", 1);
			_35617_obj+=_34729_m->_field_op;
			_35617_obj+=jule::Str("(", 1);
			_35617_obj+=_1a2c9bae9_gen_expr(_34729_m->_field_expr);
			_35617_obj+=jule::Str("))", 2);
			return _35617_obj;
		}
		goto _match_end_4355036000;
		_case_end_4355035072:;
		_match_end_4355036000:;
	}
}



jule::Str _1a2c9bae9_gen_get_ref_ptr_expr_model(jule::Ref<_1e2a30c17_GetRefPtrExprModel> _36535_m) {
	jule::Str _36613_obj = jule::Str("(", 1);
	_36613_obj+=_1a2c9bae9_gen_expr(_36535_m->_field_expr);
	_36613_obj+=jule::Str(").alloc", 7);
	return _36613_obj;
}



jule::Str _1a2c9bae9_gen_cpp_struct_lit_expr_model(jule::Ref<_1e2a30c17_StructLitExprModel> _37238_m) {
	jule::Str _37313_obj = jule::Str("(", 1) + _1a4772b73_gen_struct_kind_ins(_37238_m->_field_strct);
	_37313_obj+=jule::Str("){", 2);
	if (_37238_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto expr = _37238_m->_field_strct->_field_fields;
			auto it = expr.begin();
			_iter_begin_4355047584:;
			if (it != expr.end()) {
				jule::Ref<_1e177440c_FieldIns> _1a2c9bae9_f = *it;
				{
					if (_37238_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto expr = _37238_m->_field_args;
							auto it = expr.begin();
							_iter_begin_4355050272:;
							if (it != expr.end()) {
								jule::Ref<_1e2a30c17_StructArgExprModel> _1a2c9bae9_arg = *it;
								{
									if (_1a2c9bae9_arg->_field_field == _1a2c9bae9_f) {
										_37313_obj+=jule::Str(".", 1);
										_37313_obj+=_1a474688e_field_out_ident(_1a2c9bae9_f->_field_decl);
										_37313_obj+=jule::Str("=", 1);
										_37313_obj+=_1a2c9bae9_gen_expr(_1a2c9bae9_arg->_field_expr);
										_37313_obj+=jule::Str(",", 1);
										goto _iter_next_4355047584;
									}
								}
								_iter_next_4355050272:;
								++it;
								goto _iter_begin_4355050272;
							}
							_iter_end_4355050272:;
						}
						goto _iter_next_4355047584;
					}
					_37313_obj+=_1a474688e_field_out_ident(_1a2c9bae9_f->_field_decl);
					_37313_obj+=jule::Str(": ", 2);
					{
						auto expr = _37238_m->_field_args;
						auto it = expr.begin();
						_iter_begin_4355049024:;
						if (it != expr.end()) {
							jule::Ref<_1e2a30c17_StructArgExprModel> _1a2c9bae9_arg = *it;
							{
								if (_1a2c9bae9_arg->_field_field == _1a2c9bae9_f) {
									_37313_obj+=_1a2c9bae9_gen_expr(_1a2c9bae9_arg->_field_expr);
									_37313_obj+=jule::Str(",", 1);
									goto _iter_next_4355047584;
								}
							}
							_iter_next_4355049024:;
							++it;
							goto _iter_begin_4355049024;
						}
						_iter_end_4355049024:;
					}
					_37313_obj+=_1a2c9bae9_get_init_expr(_1a2c9bae9_f->_field_kind);
					_37313_obj+=jule::Str(",", 1);
				}
				_iter_next_4355047584:;
				++it;
				goto _iter_begin_4355047584;
			}
			_iter_end_4355047584:;
		}
		_37313_obj=_37313_obj.slice(0LL,_37313_obj.len() - 1LL);
	}
	_37313_obj+=jule::Str("}", 1);
	return _37313_obj;
}



jule::Str _1a2c9bae9_gen_struct_lit_expr_model(jule::Ref<_1e2a30c17_StructLitExprModel> _41034_m) {
	if (_41034_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _1a2c9bae9_gen_cpp_struct_lit_expr_model(_41034_m);
	}
	jule::Str _41513_obj = _1a474688e_struct_ins_out_ident(_41034_m->_field_strct);
	_41513_obj+=jule::Str("(", 1);
	if (_41034_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto expr = _41034_m->_field_strct->_field_fields;
			auto it = expr.begin();
			_iter_begin_4355065344:;
			if (it != expr.end()) {
				jule::Ref<_1e177440c_FieldIns> _1a2c9bae9_f = *it;
				{
					{
						auto expr = _41034_m->_field_args;
						auto it = expr.begin();
						_iter_begin_4355067120:;
						if (it != expr.end()) {
							jule::Ref<_1e2a30c17_StructArgExprModel> _1a2c9bae9_arg = *it;
							{
								if (_1a2c9bae9_arg->_field_field == _1a2c9bae9_f) {
									_41513_obj+=_1a2c9bae9_gen_expr(_1a2c9bae9_arg->_field_expr);
									_41513_obj+=jule::Str(",", 1);
									goto _iter_next_4355065344;
								}
							}
							_iter_next_4355067120:;
							++it;
							goto _iter_begin_4355067120;
						}
						_iter_end_4355067120:;
					}
					_41513_obj+=_1a2c9bae9_get_init_expr(_1a2c9bae9_f->_field_kind);
					_41513_obj+=jule::Str(",", 1);
				}
				_iter_next_4355065344:;
				++it;
				goto _iter_begin_4355065344;
			}
			_iter_end_4355065344:;
		}
		_41513_obj=_41513_obj.slice(0LL,_41513_obj.len() - 1LL);
	}
	_41513_obj+=jule::Str(")", 1);
	return _41513_obj;
}



jule::Str _1a2c9bae9_gen_alloc_struct_lit_expr_model(jule::Ref<_1e2a30c17_AllocStructLitExprModel> _43640_m) {
	jule::Str _43713_obj = jule::Str("jule::new_struct", 16);
	if (_43640_m->_field_lit->_field_strct->_field_decl->_method_has_ref_accessible()) {
		_43713_obj+=jule::Str("_ref", 4);
	}
	_43713_obj+=jule::Str("<", 1);
	_43713_obj+=_1a474688e_struct_ins_out_ident(_43640_m->_field_lit->_field_strct);
	_43713_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_43713_obj+=_1a2c9bae9_gen_struct_lit_expr_model(_43640_m->_field_lit);
	_43713_obj+=jule::Str(")", 1);
	return _43713_obj;
}



jule::Str _1a2c9bae9_gen_casting_expr_model(jule::Ref<_1e2a30c17_CastingExprModel> _44931_m) {
	jule::Str _45013_obj = jule::Str();
	{
		if (!((jule::real(_44931_m->_field_kind->_method_prim()) && _44931_m->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4355079808; }
		_case_begin_4355079808:;
		{
			_45013_obj+=_1a4772b73_gen_type_kind(_44931_m->_field_kind);
			_45013_obj+=jule::Str("(", 1);
			_45013_obj+=_1a2c9bae9_gen_expr_model(_44931_m->_field_expr);
			_45013_obj+=jule::Str(")", 1);
		}
		goto _match_end_4355078912;
		_case_end_4355079808:;
		if (!((jule::real(_44931_m->_field_expr_kind->_method_ptr())) || (jule::real(_44931_m->_field_kind->_method_ptr())))) { goto _case_end_4355082048; }
		_case_begin_4355082048:;
		{
			_45013_obj+=jule::Str("((", 2);
			_45013_obj+=_1a4772b73_gen_type_kind(_44931_m->_field_kind);
			_45013_obj+=jule::Str(")(", 2);
			_45013_obj+=_1a2c9bae9_gen_expr(_44931_m->_field_expr);
			_45013_obj+=jule::Str("))", 2);
		}
		goto _match_end_4355078912;
		_case_end_4355082048:;
		if (!((jule::real(_44931_m->_field_expr_kind->_method_trt())) || (jule::real(_44931_m->_field_expr_kind->_method_prim()) && _44931_m->_field_expr_kind->_method_prim()->_method_is_any()))) { goto _case_end_4355082144; }
		_case_begin_4355082144:;
		{
			_45013_obj+=_1a2c9bae9_gen_expr_model(_44931_m->_field_expr);
			_45013_obj+=_1a2c9bae9_get_accessor(_44931_m->_field_expr_kind);
			_45013_obj+=jule::Str("operator ", 9);
			_45013_obj+=_1a4772b73_gen_type_kind(_44931_m->_field_kind);
			_45013_obj+=jule::Str("()", 2);
		}
		goto _match_end_4355078912;
		_case_end_4355082144:;
		_case_begin_4355079024:;
		{
			_45013_obj+=jule::Str("static_cast<", 12);
			_45013_obj+=_1a4772b73_gen_type_kind(_44931_m->_field_kind);
			_45013_obj+=jule::Str(">(", 2);
			_45013_obj+=_1a2c9bae9_gen_expr(_44931_m->_field_expr);
			_45013_obj+=jule::Str(")", 1);
		}
		goto _match_end_4355078912;
		_case_end_4355079024:;
		_match_end_4355078912:;
	}
	return _45013_obj;
}



jule::Str _1a2c9bae9_gen_arg_expr_models(jule::Slice<jule::Any> _48428_models) {
	if (_48428_models.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _48913_obj = jule::Str();
	{
		auto expr = _48428_models;
		auto it = expr.begin();
		_iter_begin_4355094800:;
		if (it != expr.end()) {
			jule::Any _1a2c9bae9_m = *it;
			{
				_48913_obj+=_1a2c9bae9_gen_expr(_1a2c9bae9_m);
				_48913_obj+=jule::Str(",", 1);
			}
			_iter_next_4355094800:;
			++it;
			goto _iter_begin_4355094800;
		}
		_iter_end_4355094800:;
	}
	_48913_obj=_48913_obj.slice(0LL,_48913_obj.len() - 1LL);
	return _48913_obj;
}



jule::Str _1a2c9bae9_gen_expr_model_for_call(jule::Any _49832_expr) {
	{
		auto _match_expr{ _49832_expr };
		if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4355098256; }
		_case_begin_4355098256:;
		{
			return _1a2c9bae9_gen_fn_ins_expr_model(_49832_expr.operator jule::Ref<_1e1737e81_FnIns>());
		}
		goto _match_end_4355095904;
		_case_end_4355098256:;
		_case_begin_4355097344:;
		{
			return _1a2c9bae9_gen_expr_model(_49832_expr);
		}
		goto _match_end_4355095904;
		_case_end_4355097344:;
		_match_end_4355095904:;
	}
}



jule::Str _1a2c9bae9_gen_fn_call_expr_model(jule::Ref<_1e2a30c17_FnCallExprModel> _50531_m) {
	jule::Str _50613_obj = _1a2c9bae9_gen_expr_model_for_call(_50531_m->_field_expr);
	if ((!(_50531_m->_field_func->_method_is_builtin()))) {
		if (_50531_m->_field_func->_field_decl->_field_cpp_linked && (_50531_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_1a4772b73_has_directive(_50531_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_50613_obj+=jule::Str("<", 1);
				{
					auto expr = _50531_m->_field_func->_field_generics;
					auto it = expr.begin();
					_iter_begin_4355104976:;
					if (it != expr.end()) {
						jule::Ref<_1a2db8ce3_TypeKind> _1a2c9bae9_g = *it;
						{
							_50613_obj+=_1a4772b73_gen_type_kind(_1a2c9bae9_g);
							_50613_obj+=jule::Str(",", 1);
						}
						_iter_next_4355104976:;
						++it;
						goto _iter_begin_4355104976;
					}
					_iter_end_4355104976:;
				}
				_50613_obj=_50613_obj.slice(0LL,_50613_obj.len() - 1LL);
				_50613_obj+=jule::Str(">", 1);
			}
		}
	}
	_50613_obj+=jule::Str("(", 1);
	_50613_obj+=_1a2c9bae9_gen_arg_expr_models(_50531_m->_field_args);
	_50613_obj+=jule::Str(")", 1);
	if (_50531_m->_field_is_co) {
		_50613_obj=jule::Str("__JULE_CO(", 10) + _50613_obj;
		_50613_obj+=jule::Str(")", 1);
	}
	return _50613_obj;
}



jule::Str _1a2c9bae9_gen_slice_expr_model(jule::Ref<_1e2a30c17_SliceExprModel> _53229_m) {
	jule::Str _53313_obj = _1a4772b73_as_slice_kind(_53229_m->_field_elem_kind);
	_53313_obj+=jule::Str("({", 2);
	_53313_obj+=_1a2c9bae9_gen_arg_expr_models(_53229_m->_field_elems);
	_53313_obj+=jule::Str("})", 2);
	return _53313_obj;
}



jule::Str _1a2c9bae9_gen_indexing_expr_model(jule::Ref<_1e2a30c17_IndexigExprModel> _54032_m) {
	jule::Str _54113_obj = _1a2c9bae9_gen_expr_model(_54032_m->_field_expr->_field_model);
	if (_1ec945d31_OPT_ACCESS) {
		jule::Bool _54513_array = jule::real(_54032_m->_field_expr->_field_kind->_method_arr());
		if (_54513_array && _54032_m->_field_index->_method_is_const()) {
			_54113_obj+=jule::Str(".__at(", 6);
			_54113_obj+=_1a2c9bae9_gen_expr(_54032_m->_field_index->_field_model);
			_54113_obj+=jule::Str(")", 1);
			return _54113_obj;
		}
		{
			auto _match_expr{ _54032_m->_field_index->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4355120176; }
			_case_begin_4355120176:;
			{
				jule::Ref<_1ba80e105_Var> _55717_i = _54032_m->_field_index->_field_model.operator jule::Ref<_1ba80e105_Var>();
				if (_55717_i->_field_mutable || (!(jule::real(_55717_i->_field_iter_relation)))) {
					goto _match_end_4355121376;
				}
				{
					auto _match_expr{ _54032_m->_field_expr->_field_model };
					if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4355125696; }
					_case_begin_4355125696:;
					{
						jule::Ref<_1ba80e105_Var> _56321_r = _54032_m->_field_expr->_field_model.operator jule::Ref<_1ba80e105_Var>();
						if ((!(_54513_array)) && _56321_r->_field_mutable) {
							goto _match_end_4355125920;
						}
						if ((_55717_i->_field_iter_relation->_field_range).alloc == (_56321_r).alloc) {
							_54113_obj+=jule::Str(".__at(", 6);
							_54113_obj+=_1a2c9bae9_gen_expr(_54032_m->_field_index->_field_model);
							_54113_obj+=jule::Str(")", 1);
							return _54113_obj;
						}
					}
					goto _match_end_4355125920;
					_case_end_4355125696:;
					_match_end_4355125920:;
				}
			}
			goto _match_end_4355121376;
			_case_end_4355120176:;
			_match_end_4355121376:;
		}
	}
	_54113_obj+=jule::Str("[", 1);
	_54113_obj+=_1a2c9bae9_gen_expr(_54032_m->_field_index->_field_model);
	_54113_obj+=jule::Str("]", 1);
	return _54113_obj;
}



jule::Str _1a2c9bae9_gen_anon_fn_expr_model(jule::Ref<_1e2a30c17_AnonFnExprModel> _58931_m) {
	jule::Str _59013_obj = _1a4772b73_gen_fn_kind(_58931_m->_field_func);
	_59013_obj+=jule::Str("([=]", 4);
	_59013_obj+=_1a4770896_gen_params_ins(_58931_m->_field_func->_field_params);
	_59013_obj+=jule::Str(" mutable -> ", 12);
	_59013_obj+=_1a4770896_gen_fn_ins_result(_58931_m->_field_func);
	_59013_obj+=jule::Str(" ", 1);
	_59013_obj+=_1ba858528_gen_fn_scope(_58931_m->_field_func);
	_59013_obj+=jule::Str(")", 1);
	return _59013_obj;
}



jule::Str _1a2c9bae9_gen_map_expr_model(jule::Ref<_1e2a30c17_MapExprModel> _60127_m) {
	jule::Str _60213_obj = _1a474688e_as_jt(jule::Str("map", 3));
	_60213_obj+=jule::Str("<", 1);
	_60213_obj+=_1a4772b73_gen_type_kind(_60127_m->_field_key_kind);
	_60213_obj+=jule::Str(",", 1);
	_60213_obj+=_1a4772b73_gen_type_kind(_60127_m->_field_val_kind);
	_60213_obj+=jule::Str(">({", 3);
	if (_60127_m->_field_entries.len() > 0LL) {
		{
			auto expr = _60127_m->_field_entries;
			auto it = expr.begin();
			_iter_begin_4355140944:;
			if (it != expr.end()) {
				jule::Ref<_1e2a30c17_KeyValPairExprModel> _1a2c9bae9_pair = *it;
				{
					jule::Str _61021_pair_obj = jule::Str("{", 1);
					_61021_pair_obj+=_1a2c9bae9_gen_expr(_1a2c9bae9_pair->_field_key);
					_61021_pair_obj+=jule::Str(",", 1);
					_61021_pair_obj+=_1a2c9bae9_gen_expr(_1a2c9bae9_pair->_field_val);
					_61021_pair_obj+=jule::Str("}", 1);
					_60213_obj+=_61021_pair_obj;
					_60213_obj+=jule::Str(",", 1);
				}
				_iter_next_4355140944:;
				++it;
				goto _iter_begin_4355140944;
			}
			_iter_end_4355140944:;
		}
		_60213_obj=_60213_obj.slice(0LL,_60213_obj.len() - 1LL);
	}
	_60213_obj+=jule::Str("})", 2);
	return _60213_obj;
}



jule::Str _1a2c9bae9_gen_slicing_expr_model(jule::Ref<_1e2a30c17_SlicingExprModel> _62431_m) {
	jule::Str _62513_obj = _1a2c9bae9_gen_expr_model(_62431_m->_field_expr);
	_62513_obj+=jule::Str(".slice(", 7);
	_62513_obj+=_1a2c9bae9_gen_expr(_62431_m->_field_left);
	if (_62431_m->_field_right != nullptr) {
		_62513_obj+=jule::Str(",", 1);
		_62513_obj+=_1a2c9bae9_gen_expr(_62431_m->_field_right);
	}
	_62513_obj+=jule::Str(")", 1);
	return _62513_obj;
}



jule::Str _1a2c9bae9_gen_trait_sub_ident_expr_model(jule::Ref<_1e2a30c17_TraitSubIdentExprModel> _63639_m) {
	jule::Str _63713_obj = _1a2c9bae9_gen_expr_model(_63639_m->_field_expr);
	_63713_obj+=jule::Str(".get()._method_", 15);
	_63713_obj+=_63639_m->_field_ident;
	return _63713_obj;
}



jule::Str _1a2c9bae9_gen_struct_sub_ident_expr_model(jule::Ref<_1e2a30c17_StructSubIdentExprModel> _64340_m) {
	jule::Str _64413_obj = _1a2c9bae9_gen_expr_model(_64340_m->_field_expr);
	_64413_obj+=_1a2c9bae9_get_accessor(_64340_m->_field_expr_kind);
	if (jule::real(_64340_m->_field_field)) {
		_64413_obj+=_1a474688e_field_out_ident(_64340_m->_field_field->_field_decl);
	} else {
		_64413_obj+=_1a474688e_fn_ins_out_ident(_64340_m->_field_method);
	}
	return _64413_obj;
}



jule::Str _1a2c9bae9_gen_common_ident_expr_model(jule::Ref<_1e2a30c17_CommonIdentExprModel> _65432_m) {
	return _65432_m->_field_ident;
}



jule::Str _1a2c9bae9_gen_common_sub_ident_expr_model(jule::Ref<_1e2a30c17_CommonSubIdentExprModel> _65840_m) {
	jule::Str _65913_obj = _1a2c9bae9_gen_expr_model(_65840_m->_field_expr);
	_65913_obj+=_1a2c9bae9_get_accessor(_65840_m->_field_expr_kind);
	_65913_obj+=_65840_m->_field_ident;
	return _65913_obj;
}



jule::Str _1a2c9bae9_gen_array_expr_model(jule::Ref<_1e2a30c17_ArrayExprModel> _66529_m) {
	jule::Str _66613_obj = _1a4772b73_gen_array_kind(_66529_m->_field_kind);
	_66613_obj+=jule::Str("({", 2);
	_66613_obj+=_1a2c9bae9_gen_arg_expr_models(_66529_m->_field_elems);
	_66613_obj+=jule::Str("})", 2);
	return _66613_obj;
}



jule::Str _1a2c9bae9_gen_fn_ins_expr_model_common(jule::Ref<_1e1737e81_FnIns> _67537_m) {
	jule::Str _67613_obj = _1a4772b73_gen_fn_kind(_67537_m);
	_67613_obj+=jule::Str("(", 1);
	_67613_obj+=_1a2c9bae9_gen_fn_ins_expr_model(_67537_m);
	_67613_obj+=jule::Str(")", 1);
	return _67613_obj;
}



jule::Str _1a2c9bae9_gen_fn_ins_expr_model(jule::Ref<_1e1737e81_FnIns> _68430_m) {
	if (jule::real(_68430_m->_field_decl) && _68430_m->_field_decl->_field_cpp_linked) {
		jule::Ref<_1e16025cb_Directive> _68613_d = _1a4772b73_find_directive(_68430_m->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_68613_d)) {
			jule::Str _68821_obj = _1a2c9bae9_concat_all_parts(_68613_d->_field_args);
			_68821_obj+=jule::Str("::", 2);
			_68821_obj+=_1a474688e_fn_ins_out_ident(_68430_m);
			return _68821_obj;
		}
	}
	return _1a474688e_fn_ins_out_ident(_68430_m);
}



jule::Str _1a2c9bae9_gen_tuple_expr_model(jule::Ref<_1e2a30c17_TupleExprModel> _69729_m) {
	jule::Str _69813_obj = jule::Str("std::make_tuple(", 16);
	{
		auto expr = _69729_m->_field_datas;
		auto it = expr.begin();
		_iter_begin_4355173232:;
		if (it != expr.end()) {
			jule::Ref<_1a2c74a6c_Data> _1a2c9bae9_d = *it;
			{
				_69813_obj+=_1a2c9bae9_gen_expr(_1a2c9bae9_d->_field_model);
				_69813_obj+=jule::Str(",", 1);
			}
			_iter_next_4355173232:;
			++it;
			goto _iter_begin_4355173232;
		}
		_iter_end_4355173232:;
	}
	_69813_obj=_69813_obj.slice(0LL,_69813_obj.len() - 1LL);
	_69813_obj+=jule::Str(")", 1);
	return _69813_obj;
}



jule::Str _1a2c9bae9_gen_builtin_new_call_expr_model(jule::Ref<_1e2a30c17_BuiltinNewCallExprModel> _70840_m) {
	jule::Str _70913_obj = jule::Str("jule::new_ref<", 14);
	_70913_obj+=_1a4772b73_gen_type_kind(_70840_m->_field_kind);
	_70913_obj+=jule::Str(">(", 2);
	if (_70840_m->_field_init != nullptr) {
		_70913_obj+=_1a2c9bae9_gen_expr(_70840_m->_field_init);
	}
	_70913_obj+=jule::Str(")", 1);
	return _70913_obj;
}



jule::Str _1a2c9bae9_gen_builtin_out_call_expr_model(jule::Ref<_1e2a30c17_BuiltinOutCallExprModel> _71940_m) {
	jule::Str _72013_obj = jule::Str("jule::out(", 10);
	_72013_obj+=_1a2c9bae9_gen_expr(_71940_m->_field_expr);
	_72013_obj+=jule::Str(")", 1);
	return _72013_obj;
}



jule::Str _1a2c9bae9_gen_builtin_outln_call_expr_model(jule::Ref<_1e2a30c17_BuiltinOutlnCallExprModel> _72642_m) {
	jule::Str _72713_obj = jule::Str("jule::outln(", 12);
	_72713_obj+=_1a2c9bae9_gen_expr(_72642_m->_field_expr);
	_72713_obj+=jule::Str(")", 1);
	return _72713_obj;
}



jule::Str _1a2c9bae9_gen_builtin_real_call_expr_model(jule::Ref<_1e2a30c17_BuiltinRealCallExprModel> _73341_m) {
	jule::Str _73413_obj = jule::Str("jule::real(", 11);
	_73413_obj+=_1a2c9bae9_gen_expr(_73341_m->_field_expr);
	_73413_obj+=jule::Str(")", 1);
	return _73413_obj;
}



jule::Str _1a2c9bae9_gen_builtin_drop_call_expr_model(jule::Ref<_1e2a30c17_BuiltinDropCallExprModel> _74041_m) {
	jule::Str _74113_obj = jule::Str("jule::drop(", 11);
	_74113_obj+=_1a2c9bae9_gen_expr(_74041_m->_field_expr);
	_74113_obj+=jule::Str(")", 1);
	return _74113_obj;
}



jule::Str _1a2c9bae9_gen_builtin_panic_call_expr_model(jule::Ref<_1e2a30c17_BuiltinPanicCallExprModel> _74742_m) {
	jule::Str _74813_obj = jule::Str("jule::panic(", 12);
	_74813_obj+=_1a2c9bae9_gen_expr(_74742_m->_field_expr);
	_74813_obj+=jule::Str(")", 1);
	return _74813_obj;
}



jule::Str _1a2c9bae9_gen_builtin_make_call_expr_model(jule::Ref<_1e2a30c17_BuiltinMakeCallExprModel> _75441_m) {
	jule::Str _75513_obj = jule::Str();
	if (_75441_m->_field_len != nullptr) {
		_75513_obj+=_1a2c9bae9_gen_expr(_75441_m->_field_len);
	} else {
		_75513_obj+=jule::Str("0", 1);
	}
	if (_75441_m->_field_cap != nullptr) {
		_75513_obj+=jule::Str(",", 1) + _1a2c9bae9_gen_expr(_75441_m->_field_cap);
	}
	if (jule::real(_75441_m->_field_kind->_method_slc()->_field_elem->_method_enm())) {
		_75513_obj+=jule::Str(",", 1);
		_75513_obj+=_1a2c9bae9_get_init_expr(_75441_m->_field_kind->_method_slc()->_field_elem);
		if (_75441_m->_field_cap != nullptr) {
			_75513_obj=(_1a4772b73_gen_type_kind(_75441_m->_field_kind) + jule::Str("::alloc(", 8)) + _75513_obj;
		} else {
			_75513_obj=(_1a4772b73_gen_type_kind(_75441_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _75513_obj;
		}
	} else {
		_75513_obj=(_1a4772b73_gen_type_kind(_75441_m->_field_kind) + jule::Str("::alloc(", 8)) + _75513_obj;
	}
	_75513_obj+=jule::Str(")", 1);
	return _75513_obj;
}



jule::Str _1a2c9bae9_gen_builtin_append_call_expr_model_assign_opt(jule::Bool _7825_same_dest,jule::Str& _7836_dest_expr,jule::Ref<_1a2db8ce3_TypeKind>& _78410_dest_kind,jule::Ref<_1e2a30c17_SliceExprModel>& _78510_s,jule::Ref<_1e2a30c17_BuiltinAppendCallExprModel>& _78610_m) {
	jule::Str _78713_obj = jule::Str();
	if ((!(_7825_same_dest))) {
		_78713_obj+=_7836_dest_expr;
		_78713_obj+=jule::Str(" = jule::alloc_for_append(", 26);
		_78713_obj+=_1a2c9bae9_gen_expr_model(_78610_m->_field_dest);
		_78713_obj+=jule::Str(",", 1);
		_78713_obj+=_1e103784c_itoa(static_cast<jule::I64>(_78510_s->_field_elems.len()));
		_78713_obj+=jule::Str(");", 2);
	}
	{
		auto expr = _78510_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4355210080:;
		if (it != expr.end()) {
			jule::Any _1a2c9bae9_e = *it;
			{
				_78713_obj+=_7836_dest_expr;
				_78713_obj+=_1a2c9bae9_get_accessor(_78410_dest_kind);
				_78713_obj+=jule::Str("push(", 5);
				_78713_obj+=_1a2c9bae9_gen_expr_model(_1a2c9bae9_e);
				_78713_obj+=jule::Str(");", 2);
			}
			_iter_next_4355210080:;
			++it;
			goto _iter_begin_4355210080;
		}
		_iter_end_4355210080:;
	}
	return _78713_obj;
}



std::tuple<jule::Str,jule::Bool> _1a2c9bae9_gen_builtin_append_call_expr_model_assign(jule::Any _80650_dest,jule::Ref<_1e2a30c17_BuiltinAppendCallExprModel> _80671_m) {
	jule::Bool _806110_optimized = jule::Bool();
	{
		auto _match_expr{ _80671_m->_field_elements };
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_SliceExprModel>>())) { goto _case_end_4355213664; }
		_case_begin_4355213664:;
		{
			{
				auto _match_expr{ _80650_dest };
				if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4355214208; }
				_case_begin_4355214208:;
				{
					jule::Ref<_1e2a30c17_SliceExprModel> _81121_s = _80671_m->_field_elements.operator jule::Ref<_1e2a30c17_SliceExprModel>();
					jule::Str _81217_dest_expr = _1a2c9bae9_gen_expr_model(_80650_dest);
					jule::Ref<_1ba80e105_Var> _81321_dest_var = _80650_dest.operator jule::Ref<_1ba80e105_Var>();
					jule::Bool _81417_same_dest = _1a4772b73_any_equals_0(_81321_dest_var,_80671_m->_field_dest);
					_806110_optimized = true;
					return std::make_tuple(_1a2c9bae9_gen_builtin_append_call_expr_model_assign_opt(_81417_same_dest,_81217_dest_expr,_81321_dest_var->_field_kind->_field_kind,_81121_s,_80671_m),_806110_optimized);
				}
				goto _match_end_4355215568;
				_case_end_4355214208:;
				if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_StructSubIdentExprModel>>())) { goto _case_end_4355215648; }
				_case_begin_4355215648:;
				{
					jule::Ref<_1e2a30c17_SliceExprModel> _81921_s = _80671_m->_field_elements.operator jule::Ref<_1e2a30c17_SliceExprModel>();
					jule::Str _82017_dest_expr = _1a2c9bae9_gen_expr_model(_80650_dest);
					jule::Ref<_1e177440c_FieldIns> _82121_dest_field = _80650_dest.operator jule::Ref<_1e2a30c17_StructSubIdentExprModel>()->_field_field;
					jule::Bool _82217_same_dest = _1a4772b73_any_equals_1(_82121_dest_field,_80671_m->_field_dest);
					_806110_optimized = true;
					return std::make_tuple(_1a2c9bae9_gen_builtin_append_call_expr_model_assign_opt(_82217_same_dest,_82017_dest_expr,_82121_dest_field->_field_kind,_81921_s,_80671_m),_806110_optimized);
				}
				goto _match_end_4355215568;
				_case_end_4355215648:;
				_match_end_4355215568:;
			}
		}
		goto _match_end_4355214000;
		_case_end_4355213664:;
		_match_end_4355214000:;
	}
	_806110_optimized = false;
	return std::make_tuple(_1a2c9bae9_gen_builtin_append_call_expr_model(_80671_m),_806110_optimized);
}



jule::Str _1a2c9bae9_gen_builtin_append_call_expr_model(jule::Ref<_1e2a30c17_BuiltinAppendCallExprModel> _83143_m) {
	jule::Str _83213_obj = jule::Str("jule::append(", 13);
	_83213_obj+=_1a2c9bae9_gen_expr_model(_83143_m->_field_dest);
	_83213_obj+=jule::Str(",", 1);
	_83213_obj+=_1a2c9bae9_gen_expr_model(_83143_m->_field_elements);
	_83213_obj+=jule::Str(")", 1);
	return _83213_obj;
}



jule::Str _1a2c9bae9_gen_builtin_clone_call_expr_model(jule::Ref<_1e2a30c17_BuiltinCloneCallExprModel> _84042_m) {
	jule::Str _84113_obj = jule::Str("jule::clone(", 12);
	_84113_obj+=_1a2c9bae9_gen_expr_model(_84042_m->_field_expr);
	_84113_obj+=jule::Str(")", 1);
	return _84113_obj;
}



jule::Str _1a2c9bae9_gen_sizeof_expr_model(jule::Ref<_1e2a30c17_SizeofExprModel> _84730_m) {
	jule::Str _84813_obj = jule::Str("sizeof(", 7);
	_84813_obj+=_1a2c9bae9_gen_expr(_84730_m->_field_expr);
	_84813_obj+=jule::Str(")", 1);
	return _84813_obj;
}



jule::Str _1a2c9bae9_gen_alignof_expr_model(jule::Ref<_1e2a30c17_AlignofExprModel> _85431_m) {
	jule::Str _85513_obj = jule::Str("alignof(", 8);
	_85513_obj+=_1a2c9bae9_gen_expr(_85431_m->_field_expr);
	_85513_obj+=jule::Str(")", 1);
	return _85513_obj;
}



jule::Str _1a2c9bae9_gen_rune_expr_model(jule::Ref<_1e2a30c17_RuneExprModel> _86124_m) {
	if (_86124_m->_field_code <= 127LL) {
		jule::Str _86317_b = _1a2c9bae9_sbtoa(static_cast<jule::U8>(_86124_m->_field_code));
		if (_86317_b == jule::Str("'", 1)) {
			_86317_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _86317_b) + jule::Str("'", 1);
	}
	return _1a2c9bae9_i64toa(static_cast<jule::I64>(_86124_m->_field_code));
}



jule::Str _1a2c9bae9_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_1e2a30c17_BuiltinErrorTraitSubIdentExprModel> _87253_m) {
	jule::Str _87313_obj = _1a2c9bae9_gen_expr_model(_87253_m->_field_expr);
	_87313_obj+=jule::Str(".get().", 7);
	_87313_obj+=jule::Str("_method_", 8);
	_87313_obj+=_87253_m->_field_ident;
	return _87313_obj;
}



jule::Str _1a2c9bae9_gen_explicit_deref_expr_model(jule::Ref<_1e2a30c17_ExplicitDerefExprModel> _88038_m) {
	jule::Str _88113_obj = _1a2c9bae9_gen_expr_model(_88038_m->_field_expr);
	_88113_obj+=jule::Str(".get()", 6);
	return _88113_obj;
}



jule::Str _1a2c9bae9_gen_struct_static_ident_expr_model(jule::Ref<_1e2a30c17_StructStaticIdentExprModel> _88643_m) {
	jule::Str _88713_obj = _1a474688e_struct_ins_out_ident(_88643_m->_field_structure);
	_88713_obj+=jule::Str("::", 2);
	_88713_obj+=_1a474688e_fn_ins_out_ident(_88643_m->_field_method);
	return _88713_obj;
}



jule::Str _1a2c9bae9_gen_integrated_to_str_expr_model(jule::Ref<_1e2a30c17_IntegratedToStrExprModel> _89341_m) {
	jule::Str _89413_obj = jule::Str("jule::to_str(", 13);
	_89413_obj+=_1a2c9bae9_gen_expr_model(_89341_m->_field_expr);
	_89413_obj+=jule::Str(")", 1);
	return _89413_obj;
}



jule::Str _1a2c9bae9_gen_ternary_expr_model(jule::Ref<_1e2a30c17_TernaryExprModel> _90031_m) {
	jule::Str _90113_obj = jule::Str("((", 2);
	_90113_obj+=_1a2c9bae9_gen_expr_model(_90031_m->_field_condition);
	_90113_obj+=jule::Str(") ? (", 5);
	_90113_obj+=_1a2c9bae9_gen_expr_model(_90031_m->_field_true_expr);
	_90113_obj+=jule::Str(") : (", 5);
	_90113_obj+=_1a2c9bae9_gen_expr_model(_90031_m->_field_false_expr);
	_90113_obj+=jule::Str("))", 2);
	return _90113_obj;
}



jule::Str _1a2c9bae9_gen_expr_model(jule::Any _91123_m) {
	{
		auto _match_expr{ _91123_m };
		if (!(_match_expr.type_is<jule::Ref<_1a2db8ce3_TypeKind>>())) { goto _case_end_4355271344; }
		_case_begin_4355271344:;
		{
			return _1a4772b73_gen_type_kind(_91123_m.operator jule::Ref<_1a2db8ce3_TypeKind>());
		}
		goto _match_end_4355270176;
		_case_end_4355271344:;
		if (!(_match_expr.type_is<jule::Ref<_1a37ddd88_Const>>())) { goto _case_end_4355271440; }
		_case_begin_4355271440:;
		{
			return _1a2c9bae9_gen_const_expr_model(_91123_m.operator jule::Ref<_1a37ddd88_Const>());
		}
		goto _match_end_4355270176;
		_case_end_4355271440:;
		if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4355271536; }
		_case_begin_4355271536:;
		{
			return _1a2c9bae9_gen_var_expr_model(_91123_m.operator jule::Ref<_1ba80e105_Var>());
		}
		goto _match_end_4355270176;
		_case_end_4355271536:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a1e563_Trait>>())) { goto _case_end_4355271792; }
		_case_begin_4355271792:;
		{
			return _1a474688e_trait_out_ident(_91123_m.operator jule::Ref<_1e2a1e563_Trait>());
		}
		goto _match_end_4355270176;
		_case_end_4355271792:;
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_Struct>>())) { goto _case_end_4355271888; }
		_case_begin_4355271888:;
		{
			return _1a2c9bae9_gen_struct_expr_model(_91123_m.operator jule::Ref<_1e177440c_Struct>());
		}
		goto _match_end_4355270176;
		_case_end_4355271888:;
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_StructIns>>())) { goto _case_end_4355271984; }
		_case_begin_4355271984:;
		{
			return _1a2c9bae9_gen_struct_ins_expr_model(_91123_m.operator jule::Ref<_1e177440c_StructIns>());
		}
		goto _match_end_4355270176;
		_case_end_4355271984:;
		if (!(_match_expr.type_is<jule::Ref<_1e1737e81_FnIns>>())) { goto _case_end_4355270976; }
		_case_begin_4355270976:;
		{
			return _1a2c9bae9_gen_fn_ins_expr_model_common(_91123_m.operator jule::Ref<_1e1737e81_FnIns>());
		}
		goto _match_end_4355270176;
		_case_end_4355270976:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BinopExprModel>>())) { goto _case_end_4355271072; }
		_case_begin_4355271072:;
		{
			return _1a2c9bae9_gen_binop_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_BinopExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355271072:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_UnaryExprModel>>())) { goto _case_end_4355271168; }
		_case_begin_4355271168:;
		{
			return _1a2c9bae9_gen_unary_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_UnaryExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355271168:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_GetRefPtrExprModel>>())) { goto _case_end_4355270448; }
		_case_begin_4355270448:;
		{
			return _1a2c9bae9_gen_get_ref_ptr_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_GetRefPtrExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355270448:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_StructLitExprModel>>())) { goto _case_end_4355270544; }
		_case_begin_4355270544:;
		{
			return _1a2c9bae9_gen_struct_lit_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_StructLitExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355270544:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_AllocStructLitExprModel>>())) { goto _case_end_4355270640; }
		_case_begin_4355270640:;
		{
			return _1a2c9bae9_gen_alloc_struct_lit_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_AllocStructLitExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355270640:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_CastingExprModel>>())) { goto _case_end_4355270736; }
		_case_begin_4355270736:;
		{
			return _1a2c9bae9_gen_casting_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_CastingExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355270736:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_FnCallExprModel>>())) { goto _case_end_4355272816; }
		_case_begin_4355272816:;
		{
			return _1a2c9bae9_gen_fn_call_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_FnCallExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355272816:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_SliceExprModel>>())) { goto _case_end_4355272928; }
		_case_begin_4355272928:;
		{
			return _1a2c9bae9_gen_slice_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_SliceExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355272928:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_ArrayExprModel>>())) { goto _case_end_4355273040; }
		_case_begin_4355273040:;
		{
			return _1a2c9bae9_gen_array_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_ArrayExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355273040:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_IndexigExprModel>>())) { goto _case_end_4355273152; }
		_case_begin_4355273152:;
		{
			return _1a2c9bae9_gen_indexing_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_IndexigExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355273152:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_AnonFnExprModel>>())) { goto _case_end_4355273264; }
		_case_begin_4355273264:;
		{
			return _1a2c9bae9_gen_anon_fn_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_AnonFnExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355273264:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_MapExprModel>>())) { goto _case_end_4355273376; }
		_case_begin_4355273376:;
		{
			return _1a2c9bae9_gen_map_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_MapExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355273376:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_SlicingExprModel>>())) { goto _case_end_4355273488; }
		_case_begin_4355273488:;
		{
			return _1a2c9bae9_gen_slicing_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_SlicingExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355273488:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_TraitSubIdentExprModel>>())) { goto _case_end_4355273600; }
		_case_begin_4355273600:;
		{
			return _1a2c9bae9_gen_trait_sub_ident_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_TraitSubIdentExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355273600:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_StructSubIdentExprModel>>())) { goto _case_end_4355273712; }
		_case_begin_4355273712:;
		{
			return _1a2c9bae9_gen_struct_sub_ident_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_StructSubIdentExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355273712:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_CommonIdentExprModel>>())) { goto _case_end_4355273824; }
		_case_begin_4355273824:;
		{
			return _1a2c9bae9_gen_common_ident_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_CommonIdentExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355273824:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_CommonSubIdentExprModel>>())) { goto _case_end_4355273936; }
		_case_begin_4355273936:;
		{
			return _1a2c9bae9_gen_common_sub_ident_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_CommonSubIdentExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355273936:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_TupleExprModel>>())) { goto _case_end_4355274048; }
		_case_begin_4355274048:;
		{
			return _1a2c9bae9_gen_tuple_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_TupleExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355274048:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinOutCallExprModel>>())) { goto _case_end_4355274160; }
		_case_begin_4355274160:;
		{
			return _1a2c9bae9_gen_builtin_out_call_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_BuiltinOutCallExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355274160:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinOutlnCallExprModel>>())) { goto _case_end_4355274272; }
		_case_begin_4355274272:;
		{
			return _1a2c9bae9_gen_builtin_outln_call_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355274272:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinNewCallExprModel>>())) { goto _case_end_4355274384; }
		_case_begin_4355274384:;
		{
			return _1a2c9bae9_gen_builtin_new_call_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_BuiltinNewCallExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355274384:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinRealCallExprModel>>())) { goto _case_end_4355274496; }
		_case_begin_4355274496:;
		{
			return _1a2c9bae9_gen_builtin_real_call_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_BuiltinRealCallExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355274496:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinDropCallExprModel>>())) { goto _case_end_4355274608; }
		_case_begin_4355274608:;
		{
			return _1a2c9bae9_gen_builtin_drop_call_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_BuiltinDropCallExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355274608:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinPanicCallExprModel>>())) { goto _case_end_4355274720; }
		_case_begin_4355274720:;
		{
			return _1a2c9bae9_gen_builtin_panic_call_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_BuiltinPanicCallExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355274720:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinMakeCallExprModel>>())) { goto _case_end_4355274832; }
		_case_begin_4355274832:;
		{
			return _1a2c9bae9_gen_builtin_make_call_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_BuiltinMakeCallExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355274832:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinAppendCallExprModel>>())) { goto _case_end_4355274944; }
		_case_begin_4355274944:;
		{
			return _1a2c9bae9_gen_builtin_append_call_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_BuiltinAppendCallExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355274944:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinCloneCallExprModel>>())) { goto _case_end_4355275056; }
		_case_begin_4355275056:;
		{
			return _1a2c9bae9_gen_builtin_clone_call_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_BuiltinCloneCallExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355275056:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_SizeofExprModel>>())) { goto _case_end_4355275168; }
		_case_begin_4355275168:;
		{
			return _1a2c9bae9_gen_sizeof_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_SizeofExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355275168:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_AlignofExprModel>>())) { goto _case_end_4355275280; }
		_case_begin_4355275280:;
		{
			return _1a2c9bae9_gen_alignof_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_AlignofExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355275280:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_RuneExprModel>>())) { goto _case_end_4355275392; }
		_case_begin_4355275392:;
		{
			return _1a2c9bae9_gen_rune_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_RuneExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355275392:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BuiltinErrorTraitSubIdentExprModel>>())) { goto _case_end_4355275504; }
		_case_begin_4355275504:;
		{
			return _1a2c9bae9_gen_builtin_error_trait_sub_ident_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_BuiltinErrorTraitSubIdentExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355275504:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_ExplicitDerefExprModel>>())) { goto _case_end_4355275616; }
		_case_begin_4355275616:;
		{
			return _1a2c9bae9_gen_explicit_deref_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_ExplicitDerefExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355275616:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_StructStaticIdentExprModel>>())) { goto _case_end_4355275728; }
		_case_begin_4355275728:;
		{
			return _1a2c9bae9_gen_struct_static_ident_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_StructStaticIdentExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355275728:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_IntegratedToStrExprModel>>())) { goto _case_end_4355275840; }
		_case_begin_4355275840:;
		{
			return _1a2c9bae9_gen_integrated_to_str_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_IntegratedToStrExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355275840:;
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_TernaryExprModel>>())) { goto _case_end_4355275952; }
		_case_begin_4355275952:;
		{
			return _1a2c9bae9_gen_ternary_expr_model(_91123_m.operator jule::Ref<_1e2a30c17_TernaryExprModel>());
		}
		goto _match_end_4355270176;
		_case_end_4355275952:;
		_case_begin_4355270000:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_4355270176;
		_case_end_4355270000:;
		_match_end_4355270176:;
	}
}



jule::Str _1a2c9bae9_gen_expr(jule::Any _104417_e) {
	jule::Str _104513_obj = _1a2c9bae9_gen_expr_model(_104417_e);
	if (_104513_obj[0LL] != '(') {
		return _104513_obj;
	}
	{
		auto _match_expr{ _104417_e };
		if (!(_match_expr.type_is<jule::Ref<_1e2a30c17_BinopExprModel>>())) { goto _case_end_4355332272; }
		_case_begin_4355332272:;
		{
			_104513_obj=_104513_obj.slice(1LL,_104513_obj.len() - 1LL);
		}
		goto _match_end_4355332624;
		_case_end_4355332272:;
		_match_end_4355332624:;
	}
	return _104513_obj;
}



jule::Str _1a2c9bae9_gen_val(jule::Ref<_1a2c74a6c_Value> _105716_v) {
	if (_105716_v->_field_data->_method_is_const()) {
		return _1a2c9bae9_gen_const_expr(_105716_v->_field_data);
	}
	return _1a2c9bae9_gen_expr(_105716_v->_field_data->_field_model);
}



jule::Str _1a2c9bae9_get_init_expr(jule::Ref<_1a2db8ce3_TypeKind> _106422_t) {
	if (jule::real(_106422_t->_method_ptr())) {
		return jule::Str("nullptr", 7);
	}
	jule::Ref<_1e2a21d4b_Enum> _106913_enm = _106422_t->_method_enm();
	if (jule::real(_106913_enm)) {
		return _1a2c9bae9_gen_val(_106913_enm->_field_items[0LL]->_field_value);
	}
	return _1a4772b73_gen_type_kind(_106422_t) + jule::Str("()", 2);
}



jule::Str _1a2c75881_get_derive_fn_decl_clone(jule::Ref<_1e177440c_Struct>& _730_s) {
	jule::Str _813_obj = _1a4772b73_gen_struct_kind(_730_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



jule::Str _1a2c75881_get_derive_fn_def_clone(jule::Ref<_1e177440c_Struct>& _1329_s) {
	jule::Str _1413_obj = _1a4772b73_gen_struct_kind(_1329_s);
	_1413_obj+=jule::Str(" ", 1) + _1413_obj;
	_1413_obj+=jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



jule::Str _1a474688e_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



jule::Str _1a474688e_as_jt(jule::Str _2814_id) {
	if ((97LL <= _2814_id[0LL]) && (_2814_id[0LL] <= 122LL)) {
		_2814_id[0LL]-=32LL;
	}
	return jule::Str("jule::", 6) + _2814_id;
}



jule::Str _1a474688e_get_addr_as_ident(jule::Uintptr _3622_addr) {
	return jule::Str("_", 1) + _1e103784c_fmt_uint(static_cast<jule::U64>(_3622_addr),15LL);
}



jule::Str _1a474688e_as_out_ident(jule::Str _4517_ident,jule::Uintptr _4529_addr) {
	if (_4529_addr != 0LL) {
		jule::Str _4717_obj = _1a474688e_get_addr_as_ident(_4529_addr);
		_4717_obj+=jule::Str("_", 1);
		_4717_obj+=_4517_ident;
		return _4717_obj;
	}
	return _1a474688e_as_ident(_4517_ident);
}



jule::Str _1a474688e_as_local_ident(jule::Int _6119_row,jule::Int _6129_col,jule::Str _6139_ident) {
	jule::Str _6213_obj = _1e103784c_itoa(_6119_row);
	_6213_obj+=_1e103784c_itoa(_6129_col);
	_6213_obj+=jule::Str("_", 1);
	_6213_obj+=_6139_ident;
	return _1a474688e_as_ident(_6213_obj);
}



jule::Str _1a474688e_fn_out_ident(jule::Ref<_1e1737e81_Fn>& _7018_f) {
	{
		if (!((_7018_f->_field_cpp_linked))) { goto _case_end_4355362080; }
		_case_begin_4355362080:;
		{
			return _7018_f->_field_ident;
		}
		goto _match_end_4355360576;
		_case_end_4355362080:;
		if (!((_7018_f->_field_ident == jule::Str("main", 4)))) { goto _case_end_4355363856; }
		_case_begin_4355363856:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_4355360576;
		_case_end_4355363856:;
		if (!((_7018_f->_method_is_method()))) { goto _case_end_4355363952; }
		_case_begin_4355363952:;
		{
			if (_7018_f->_field_statically) {
				return jule::Str("_static_method_", 15) + _7018_f->_field_ident;
			}
			return jule::Str("_method_", 8) + _7018_f->_field_ident;
		}
		goto _match_end_4355360576;
		_case_end_4355363952:;
		_case_begin_4355360736:;
		{
			return _1a474688e_as_out_ident(_7018_f->_field_ident,static_cast<jule::Uintptr>(_7018_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4355360576;
		_case_end_4355360736:;
		_match_end_4355360576:;
	}
}



jule::Str _1a474688e_fn_ins_out_ident(jule::Ref<_1e1737e81_FnIns>& _9026_f) {
	if (_9026_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _9026_f->_field_decl->_field_ident;
	}
	if (_9026_f->_field_decl->_field_cpp_linked || (_9026_f->_field_generics.len() == 0LL)) {
		return _1a474688e_fn_out_ident(_9026_f->_field_decl);
	}
	{
		auto expr = _9026_f->_field_decl->_field_instances;
		auto it = expr.begin();
		_iter_begin_4355370960:;
		if (it != expr.end()) {
			jule::Int _1a474688e_i = it - expr.begin();
			jule::Ref<_1e1737e81_FnIns> _1a474688e_ins = *it;
			{
				if (_1a474688e_ins->_method_same(_9026_f)) {
					jule::Str _10121_obj = _1a474688e_fn_out_ident(_9026_f->_field_decl);
					_10121_obj+=jule::Str("_", 1);
					_10121_obj+=_1e103784c_itoa(_1a474688e_i);
					return _10121_obj;
				}
			}
			_iter_next_4355370960:;
			++it;
			_1a474688e_i++;
			goto _iter_begin_4355370960;
		}
		_iter_end_4355370960:;
	}
	return jule::Str("__?__", 5);
}



jule::Str _1a474688e_trait_out_ident(jule::Ref<_1e2a1e563_Trait> _11220_t) {
	if (_11220_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _11220_t->_field_ident;
	}
	return _1a474688e_as_out_ident(_11220_t->_field_ident,static_cast<jule::Uintptr>(_11220_t->_field_token._field_file->_method_addr()));
}



jule::Str _1a474688e_param_out_ident(jule::Ref<_1e1737e81_Param>& _12021_p) {
	if (_1e15a2bb9_is_anon_ident(_12021_p->_field_ident) || _1e15a2bb9_is_ignore_ident(_12021_p->_field_ident)) {
		return jule::Str();
	}
	return _1a474688e_as_local_ident(_12021_p->_field_token._field_row,_12021_p->_field_token._field_column,_12021_p->_field_ident);
}



jule::Str _1a474688e_struct_out_ident(jule::Ref<_1e177440c_Struct>& _12822_s) {
	if (_12822_s->_field_cpp_linked) {
		if (_1a4772b73_has_directive(_12822_s->_field_directives,jule::Str("typedef", 7))) {
			return _12822_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12822_s->_field_ident;
	}
	return _1a474688e_as_out_ident(_12822_s->_field_ident,static_cast<jule::Uintptr>(_12822_s->_field_token._field_file->_method_addr()));
}



jule::Str _1a474688e_struct_ins_out_ident(jule::Ref<_1e177440c_StructIns>& _13930_s) {
	if (_13930_s->_field_decl->_field_cpp_linked || (_13930_s->_field_generics.len() == 0LL)) {
		return _1a474688e_struct_out_ident(_13930_s->_field_decl);
	}
	{
		auto expr = _13930_s->_field_decl->_field_instances;
		auto it = expr.begin();
		_iter_begin_4355389488:;
		if (it != expr.end()) {
			jule::Int _1a474688e_i = it - expr.begin();
			jule::Ref<_1e177440c_StructIns> _1a474688e_ins = *it;
			{
				if (_1a474688e_ins->_method_same(_13930_s)) {
					jule::Str _14621_obj = _1a474688e_struct_out_ident(_13930_s->_field_decl);
					_14621_obj+=jule::Str("_", 1);
					_14621_obj+=_1e103784c_itoa(_1a474688e_i);
					return _14621_obj;
				}
			}
			_iter_next_4355389488:;
			++it;
			_1a474688e_i++;
			goto _iter_begin_4355389488;
		}
		_iter_end_4355389488:;
	}
	return jule::Str("__?__", 5);
}



jule::Str _1a474688e_field_out_ident(jule::Ref<_1e177440c_Field>& _15721_f) {
	if (_15721_f->_field_owner->_field_cpp_linked) {
		return _15721_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _15721_f->_field_ident;
}



jule::Str _1a474688e_var_out_ident(jule::Ref<_1ba80e105_Var> _16522_v) {
	{
		if (!((_16522_v->_field_cpp_linked))) { goto _case_end_4355398240; }
		_case_begin_4355398240:;
		{
			return _16522_v->_field_ident;
		}
		goto _match_end_4355395664;
		_case_end_4355398240:;
		if (!((_16522_v->_field_ident == jule::Str("self", 4)))) { goto _case_end_4355399824; }
		_case_begin_4355399824:;
		{
			if (jule::real(_16522_v->_field_kind->_field_kind->_method_ref())) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_4355395664;
		_case_end_4355399824:;
		if (!((jule::real(_16522_v->_field_scope)))) { goto _case_end_4355399920; }
		_case_begin_4355399920:;
		{
			return _1a474688e_as_local_ident(_16522_v->_field_token._field_row,_16522_v->_field_token._field_column,_16522_v->_field_ident);
		}
		goto _match_end_4355395664;
		_case_end_4355399920:;
		_case_begin_4355396896:;
		{
			return _1a474688e_as_out_ident(_16522_v->_field_ident,static_cast<jule::Uintptr>(_16522_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4355395664;
		_case_end_4355396896:;
		_match_end_4355395664:;
	}
}



jule::Str _1a474688e_iter_begin_label_ident(jule::Uintptr _18527_it) {
	return jule::Str("_iter_begin_", 12) + _1e103784c_itoa(static_cast<jule::Int>(_18527_it));
}



jule::Str _1a474688e_iter_end_label_ident(jule::Uintptr _19025_it) {
	return jule::Str("_iter_end_", 10) + _1e103784c_itoa(static_cast<jule::Int>(_19025_it));
}



jule::Str _1a474688e_iter_next_label_ident(jule::Uintptr _19526_it) {
	return jule::Str("_iter_next_", 11) + _1e103784c_itoa(static_cast<jule::Int>(_19526_it));
}



jule::Str _1a474688e_label_ident(jule::Str _20016_ident) {
	return jule::Str("_julec_label_", 13) + _20016_ident;
}



jule::Str _1a474688e_match_end_label_ident(jule::Uintptr _20526_m) {
	return jule::Str("_match_end_", 11) + _1e103784c_itoa(static_cast<jule::Int>(_20526_m));
}



jule::Str _1a474688e_case_begin_label_ident(jule::Uintptr _21027_c) {
	return jule::Str("_case_begin_", 12) + _1e103784c_itoa(static_cast<jule::Int>(_21027_c));
}



jule::Str _1a474688e_case_end_label_ident(jule::Uintptr _21525_c) {
	return jule::Str("_case_end_", 10) + _1e103784c_itoa(static_cast<jule::Int>(_21525_c));
}



jule::Bool _1a4772b73_any_equals_0(jule::Ref<_1ba80e105_Var>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_1ba80e105_Var>>())) { goto _case_end_4355226784; }
		_case_begin_4355226784:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_1ba80e105_Var>()).alloc;
		}
		goto _match_end_4355225088;
		_case_end_4355226784:;
		_case_begin_4355224896:;
		{
			return false;
		}
		goto _match_end_4355225088;
		_case_end_4355224896:;
		_match_end_4355225088:;
	}
}

jule::Bool _1a4772b73_any_equals_1(jule::Ref<_1e177440c_FieldIns>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_1e177440c_FieldIns>>())) { goto _case_end_4355238320; }
		_case_begin_4355238320:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_1e177440c_FieldIns>()).alloc;
		}
		goto _match_end_4355236624;
		_case_end_4355238320:;
		_case_begin_4355236432:;
		{
			return false;
		}
		goto _match_end_4355236624;
		_case_end_4355236432:;
		_match_end_4355236624:;
	}
}



jule::Ref<_1e16025cb_Directive> _1a4772b73_find_directive(jule::Slice<jule::Ref<_1e16025cb_Directive>>& _3424_directives,jule::Str _3455_tag) {
	{
		auto expr = _3424_directives;
		auto it = expr.begin();
		_iter_begin_4355414800:;
		if (it != expr.end()) {
			jule::Ref<_1e16025cb_Directive> _1a4772b73_dr = *it;
			{
				if (_1a4772b73_dr->_field_tag == _3455_tag) {
					return _1a4772b73_dr;
				}
			}
			_iter_next_4355414800:;
			++it;
			goto _iter_begin_4355414800;
		}
		_iter_end_4355414800:;
	}
	return jule::new_ref<_1e16025cb_Directive>();
}



jule::Bool _1a4772b73_has_directive(jule::Slice<jule::Ref<_1e16025cb_Directive>>& _4419_directives,jule::Str _4450_tag) {
	return jule::real(_1a4772b73_find_directive((*((&(_4419_directives)))),_4450_tag));
}



jule::Str _1a4772b73_gen_prim_kind(jule::Ref<_1a2db8ce3_Prim> _4918_p) {
	return _1a474688e_as_jt(_4918_p->_method_to_str());
}



jule::Str _1a4772b73_gen_tuple_kind(jule::Ref<_1a2db8ce3_Tuple> _5423_t) {
	jule::Str _5513_obj = jule::Str("std::tuple<", 11);
	{
		auto expr = _5423_t->_field_types;
		auto it = expr.begin();
		_iter_begin_4355421760:;
		if (it != expr.end()) {
			jule::Ref<_1a2db8ce3_TypeKind> _1a4772b73_tk = *it;
			{
				_5513_obj+=_1a4772b73_gen_type_kind(_1a4772b73_tk);
				_5513_obj+=jule::Str(",", 1);
			}
			_iter_next_4355421760:;
			++it;
			goto _iter_begin_4355421760;
		}
		_iter_end_4355421760:;
	}
	_5513_obj=_5513_obj.slice(0LL,_5513_obj.len() - 1LL);
	_5513_obj+=jule::Str(">", 1);
	return _5513_obj;
}



jule::Str _1a4772b73_as_ref_kind(jule::Str _6616_elem) {
	jule::Str _6713_obj = _1a474688e_as_jt(jule::Str("ref", 3));
	_6713_obj+=jule::Str("<", 1);
	_6713_obj+=_6616_elem;
	_6713_obj+=jule::Str(">", 1);
	return _6713_obj;
}



jule::Str _1a4772b73_gen_ref_kind(jule::Ref<_1a2db8ce3_Ref> _7521_r) {
	return _1a4772b73_as_ref_kind(_1a4772b73_gen_type_kind(_7521_r->_field_elem));
}



jule::Str _1a4772b73_gen_ptr_kind(jule::Ref<_1a2db8ce3_Ptr> _8021_p) {
	
	if (_8021_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _8613_elem = _1a4772b73_gen_type_kind(_8021_p->_field_elem);
	_8613_elem+=jule::Str("*", 1);
	return _8613_elem;
}



jule::Str _1a4772b73_gen_enum_kind(jule::Ref<_1e2a21d4b_Enum> _9222_e) {
	return _1a4772b73_gen_type_kind(_9222_e->_field_kind->_field_kind);
}



jule::Str _1a4772b73_as_slice_kind(jule::Ref<_1a2db8ce3_TypeKind> _9622_elem) {
	jule::Str _9713_obj = _1a474688e_as_jt(jule::Str("slice", 5));
	_9713_obj+=jule::Str("<", 1);
	_9713_obj+=_1a4772b73_gen_type_kind(_9622_elem);
	_9713_obj+=jule::Str(">", 1);
	return _9713_obj;
}



jule::Str _1a4772b73_gen_slice_kind(jule::Ref<_1a2db8ce3_Slc> _10523_s) {
	return _1a4772b73_as_slice_kind(_10523_s->_field_elem);
}



jule::Str _1a4772b73_gen_map_kind(jule::Ref<_1a2db8ce3_Map> _11021_m) {
	jule::Str _11113_obj = _1a474688e_as_jt(jule::Str("map", 3));
	_11113_obj+=jule::Str("<", 1);
	_11113_obj+=_1a4772b73_gen_type_kind(_11021_m->_field_key);
	_11113_obj+=jule::Str(",", 1);
	_11113_obj+=_1a4772b73_gen_type_kind(_11021_m->_field_val);
	_11113_obj+=jule::Str(">", 1);
	return _11113_obj;
}



jule::Str _1a4772b73_gen_trait_kind_from_ident(jule::Str _12030_ident) {
	jule::Str _12113_obj = _1a474688e_as_jt(jule::Str("trait", 5));
	_12113_obj+=jule::Str("<", 1);
	_12113_obj+=_12030_ident;
	_12113_obj+=jule::Str(">", 1);
	return _12113_obj;
}



jule::Str _1a4772b73_gen_trait_kind(jule::Ref<_1e2a1e563_Trait> _12919_t) {
	jule::Str _1309_ident = _1a474688e_trait_out_ident(_12919_t);
	return _1a4772b73_gen_trait_kind_from_ident(_1309_ident);
}



jule::Str _1a4772b73_gen_struct_kind(jule::Ref<_1e177440c_Struct> _13520_s) {
	jule::Str _13613_rep = jule::Str();
	if (_13520_s->_field_cpp_linked && (!(_1a4772b73_has_directive(_13520_s->_field_directives,jule::Str("typedef", 7))))) {
		_13613_rep+=jule::Str("struct ", 7);
	}
	_13613_rep+=_1a474688e_struct_out_ident(_13520_s);
	return _13613_rep;
}



jule::Str _1a4772b73_gen_struct_kind_ins(jule::Ref<_1e177440c_StructIns> _14628_s) {
	if (_14628_s->_field_decl->_field_cpp_linked) {
		jule::Str _14817_ident = _1a474688e_struct_ins_out_ident(_14628_s);
		if (_14628_s->_field_generics.len() > 0LL) {
			_14817_ident+=jule::Str("<", 1);
			{
				auto expr = _14628_s->_field_generics;
				auto it = expr.begin();
				_iter_begin_4355451776:;
				if (it != expr.end()) {
					jule::Ref<_1a2db8ce3_TypeKind> _1a4772b73_g = *it;
					{
						_14817_ident+=_1a4772b73_gen_type_kind(_1a4772b73_g);
						_14817_ident+=jule::Str(",", 1);
					}
					_iter_next_4355451776:;
					++it;
					goto _iter_begin_4355451776;
				}
				_iter_end_4355451776:;
			}
			_14817_ident=_14817_ident.slice(0LL,_14817_ident.len() - 1LL);
			_14817_ident+=jule::Str(">", 1);
		}
		jule::Ref<_1e16025cb_Directive> _15813_d = _1a4772b73_find_directive(_14628_s->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_15813_d)) {
			_14817_ident=(_1a2c9bae9_concat_all_parts(_15813_d->_field_args) + jule::Str("::", 2)) + _14817_ident;
		}
		return _14817_ident;
	}
	return _1a474688e_struct_ins_out_ident(_14628_s);
}



jule::Str _1a4772b73_gen_array_kind(jule::Ref<_1a2db8ce3_Arr> _16823_a) {
	jule::Str _16913_obj = _1a474688e_as_jt(jule::Str("array", 5));
	_16913_obj+=jule::Str("<", 1);
	_16913_obj+=_1a4772b73_gen_type_kind(_16823_a->_field_elem);
	_16913_obj+=jule::Str(",", 1);
	_16913_obj+=_1e103784c_itoa(_16823_a->_field_n);
	_16913_obj+=jule::Str(">", 1);
	return _16913_obj;
}



jule::Str _1a4772b73_gen_fn_anon_decl(jule::Ref<_1e1737e81_FnIns> _17825_f) {
	jule::Str _17913_decl = _1a4770896_gen_fn_ins_result(_17825_f);
	_17913_decl+=jule::Str("(", 1);
	if (_17825_f->_field_params.len() > 0LL) {
		{
			auto expr = _17825_f->_field_params;
			auto it = expr.begin();
			_iter_begin_4355463824:;
			if (it != expr.end()) {
				jule::Ref<_1e1737e81_ParamIns> _1a4772b73_param = *it;
				{
					if (_1a4772b73_param->_field_decl->_method_is_self()) {
						goto _iter_next_4355463824;
					}
					_17913_decl+=_1a4770896_gen_param_ins_prototype(_1a4772b73_param);
					_17913_decl+=jule::Str(",", 1);
				}
				_iter_next_4355463824:;
				++it;
				goto _iter_begin_4355463824;
			}
			_iter_end_4355463824:;
		}
		_17913_decl=_17913_decl.slice(0LL,_17913_decl.len() - 1LL);
	} else {
		_17913_decl+=jule::Str("void", 4);
	}
	_17913_decl+=jule::Str(")", 1);
	return _17913_decl;
}



jule::Str _1a4772b73_gen_fn_kind(jule::Ref<_1e1737e81_FnIns> _20120_f) {
	jule::Str _20213_obj = _1a474688e_as_jt(jule::Str("fn", 2));
	_20213_obj+=jule::Str("<", 1);
	_20213_obj+=_1a4772b73_gen_fn_anon_decl(_20120_f);
	_20213_obj+=jule::Str(">", 1);
	return _20213_obj;
}



jule::Str _1a4772b73_gen_type_kind(jule::Ref<_1a2db8ce3_TypeKind> _21022_k) {
	{
		if (!((_21022_k->_method_cpp_linked()))) { goto _case_end_4355475088; }
		_case_begin_4355475088:;
		{
			return _21022_k->_field_cpp_ident;
		}
		goto _match_end_4355473152;
		_case_end_4355475088:;
		if (!((jule::real(_21022_k->_method_prim())))) { goto _case_end_4355475184; }
		_case_begin_4355475184:;
		{
			return _1a4772b73_gen_prim_kind(_21022_k->_method_prim());
		}
		goto _match_end_4355473152;
		_case_end_4355475184:;
		if (!((jule::real(_21022_k->_method_tup())))) { goto _case_end_4355475280; }
		_case_begin_4355475280:;
		{
			return _1a4772b73_gen_tuple_kind(_21022_k->_method_tup());
		}
		goto _match_end_4355473152;
		_case_end_4355475280:;
		if (!((jule::real(_21022_k->_method_ref())))) { goto _case_end_4355474304; }
		_case_begin_4355474304:;
		{
			return _1a4772b73_gen_ref_kind(_21022_k->_method_ref());
		}
		goto _match_end_4355473152;
		_case_end_4355474304:;
		if (!((jule::real(_21022_k->_method_ptr())))) { goto _case_end_4355474400; }
		_case_begin_4355474400:;
		{
			return _1a4772b73_gen_ptr_kind(_21022_k->_method_ptr());
		}
		goto _match_end_4355473152;
		_case_end_4355474400:;
		if (!((jule::real(_21022_k->_method_enm())))) { goto _case_end_4355474496; }
		_case_begin_4355474496:;
		{
			return _1a4772b73_gen_enum_kind(_21022_k->_method_enm());
		}
		goto _match_end_4355473152;
		_case_end_4355474496:;
		if (!((jule::real(_21022_k->_method_slc())))) { goto _case_end_4355473696; }
		_case_begin_4355473696:;
		{
			return _1a4772b73_gen_slice_kind(_21022_k->_method_slc());
		}
		goto _match_end_4355473152;
		_case_end_4355473696:;
		if (!((jule::real(_21022_k->_method_map())))) { goto _case_end_4355473792; }
		_case_begin_4355473792:;
		{
			return _1a4772b73_gen_map_kind(_21022_k->_method_map());
		}
		goto _match_end_4355473152;
		_case_end_4355473792:;
		if (!((jule::real(_21022_k->_method_trt())))) { goto _case_end_4355473888; }
		_case_begin_4355473888:;
		{
			return _1a4772b73_gen_trait_kind(_21022_k->_method_trt());
		}
		goto _match_end_4355473152;
		_case_end_4355473888:;
		if (!((jule::real(_21022_k->_method_strct())))) { goto _case_end_4355473984; }
		_case_begin_4355473984:;
		{
			return _1a4772b73_gen_struct_kind_ins(_21022_k->_method_strct());
		}
		goto _match_end_4355473152;
		_case_end_4355473984:;
		if (!((jule::real(_21022_k->_method_arr())))) { goto _case_end_4355475376; }
		_case_begin_4355475376:;
		{
			return _1a4772b73_gen_array_kind(_21022_k->_method_arr());
		}
		goto _match_end_4355473152;
		_case_end_4355475376:;
		if (!((jule::real(_21022_k->_method_fnc())))) { goto _case_end_4355475472; }
		_case_begin_4355475472:;
		{
			return _1a4772b73_gen_fn_kind(_21022_k->_method_fnc());
		}
		goto _match_end_4355473152;
		_case_end_4355475472:;
		_case_begin_4355473408:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_4355473152;
		_case_end_4355473408:;
		_match_end_4355473152:;
	}
}



void _1a4770896_add_indent(void) {
	_1a4770896_INDENT=jule::append(_1a4770896_INDENT,jule::Slice<jule::U8>({9LLU}));
}



void _1a4770896_done_indent(void) {
	_1a4770896_INDENT=_1a4770896_INDENT.slice(0LL,_1a4770896_INDENT.len() - 1LL);
}



jule::Str _1a4770896_indent(void) {
	return static_cast<jule::Str>(_1a4770896_INDENT);
}



jule::Bool _1a4770896_is_cpp_header_file(jule::Str _6723_path) {
	jule::Int _689_offset = _6723_path.rfind(jule::Str(".", 1));
	if (_689_offset == -1LL) {
		return false;
	}
	return _1ec8e3273_is_valid_header_ext(_6723_path.slice(_689_offset));
}



jule::Str _1a4770896_gen_links(jule::Ref<_1e10d0a8d_IR>& _7619_ir) {
	jule::Str _7713_obj = jule::Str();
	{
		auto expr = _7619_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4355499424:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1a4770896_pkg = *it;
			{
				{
					if (!(((!(_1a4770896_pkg->_field_cpp_linked))))) { goto _case_end_4355501104; }
					_case_begin_4355501104:;
					{
						goto _iter_next_4355499424;
					}
					goto _match_end_4355500880;
					_case_end_4355501104:;
					if (!((_1ec8e3273_is_std_header_path(_1a4770896_pkg->_field_path)))) { goto _case_end_4355501216; }
					_case_begin_4355501216:;
					{
						_7713_obj+=jule::Str("#include ", 9);
						_7713_obj+=_1a4770896_pkg->_field_path;
						_7713_obj+=jule::Str("\n", 1);
					}
					goto _match_end_4355500880;
					_case_end_4355501216:;
					_match_end_4355500880:;
				}
			}
			_iter_next_4355499424:;
			++it;
			goto _iter_begin_4355499424;
		}
		_iter_end_4355499424:;
	}
	{
		auto expr = _7619_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4355503888:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1a4770896_pkg = *it;
			{
				{
					if (!(((!(_1a4770896_pkg->_field_cpp_linked))))) { goto _case_end_4355505696; }
					_case_begin_4355505696:;
					{
						goto _iter_next_4355503888;
					}
					goto _match_end_4355505472;
					_case_end_4355505696:;
					if (!((_1a4770896_is_cpp_header_file(_1a4770896_pkg->_field_path)))) { goto _case_end_4355505808; }
					_case_begin_4355505808:;
					{
						_7713_obj+=jule::Str("#include \"", 10);
						_7713_obj+=_1a4770896_pkg->_field_path;
						_7713_obj+=jule::Str("\"\n", 2);
					}
					goto _match_end_4355505472;
					_case_end_4355505808:;
					_match_end_4355505472:;
				}
			}
			_iter_next_4355503888:;
			++it;
			goto _iter_begin_4355503888;
		}
		_iter_end_4355503888:;
	}
	return _7713_obj;
}



jule::Str _1a4770896_gen_fn_result(jule::Ref<_1e1737e81_Fn>& _10523_f) {
	if (_10523_f->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1a4772b73_gen_type_kind(_10523_f->_field_result->_field_kind->_field_kind);
}



jule::Str _1a4770896_gen_fn_ins_result(jule::Ref<_1e1737e81_FnIns>& _11327_f) {
	if (_11327_f->_field_decl->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1a4772b73_gen_type_kind(_11327_f->_field_result);
}



jule::Str _1a4770896_gen_param_prototype(jule::Ref<_1e1737e81_Param>& _12129_p) {
	jule::Str _12213_obj = jule::Str();
	if (_12129_p->_field_variadic) {
		_12213_obj+=_1a474688e_as_jt(jule::Str("slice", 5));
		_12213_obj+=jule::Str("<", 1);
		_12213_obj+=_1a4772b73_gen_type_kind(_12129_p->_field_kind->_field_kind);
		_12213_obj+=jule::Str(">", 1);
	} else {
		_12213_obj+=_1a4772b73_gen_type_kind(_12129_p->_field_kind->_field_kind);
	}
	return _12213_obj;
}



jule::Str _1a4770896_gen_param_ins(jule::Ref<_1e1737e81_ParamIns>& _13523_p) {
	jule::Str _13613_obj = _1a4770896_gen_param_ins_prototype(_13523_p);
	_13613_obj+=jule::Str(" ", 1);
	_13613_obj+=_1a474688e_param_out_ident(_13523_p->_field_decl);
	return _13613_obj;
}



jule::Str _1a4770896_gen_param_ins_prototype(jule::Ref<_1e1737e81_ParamIns>& _14333_p) {
	jule::Str _14413_obj = jule::Str();
	if (_14333_p->_field_decl->_field_variadic) {
		_14413_obj+=_1a474688e_as_jt(jule::Str("slice", 5));
		_14413_obj+=jule::Str("<", 1);
		_14413_obj+=_1a4772b73_gen_type_kind(_14333_p->_field_kind);
		_14413_obj+=jule::Str(">", 1);
	} else {
		_14413_obj+=_1a4772b73_gen_type_kind(_14333_p->_field_kind);
	}
	if (_14333_p->_field_decl->_field_reference) {
		_14413_obj+=jule::Str("&", 1);
	}
	return _14413_obj;
}



jule::Str _1a4770896_gen_param(jule::Ref<_1e1737e81_Param>& _16219_p) {
	jule::Str _16313_obj = _1a4770896_gen_param_prototype(_16219_p);
	if (((_16219_p->_field_ident != jule::Str()) && (!(_1e15a2bb9_is_ignore_ident(_16219_p->_field_ident)))) && (!(_1e15a2bb9_is_anon_ident(_16219_p->_field_ident)))) {
		_16313_obj+=jule::Str(" ", 1);
		_16313_obj+=_1a474688e_param_out_ident(_16219_p);
	}
	return _16313_obj;
}



jule::Str _1a4770896_gen_params(jule::Slice<jule::Ref<_1e1737e81_Param>>& _17220_params) {
	{
		if (!((_17220_params.len() == 0LL))) { goto _case_end_4355532992; }
		_case_begin_4355532992:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4355532768;
		_case_end_4355532992:;
		if (!(((_17220_params.len() == 1LL) && _17220_params[0LL]->_method_is_self()))) { goto _case_end_4355533104; }
		_case_begin_4355533104:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4355532768;
		_case_end_4355533104:;
		_match_end_4355532768:;
	}
	jule::Str _18113_obj = jule::Str("(", 1);
	{
		auto expr = _17220_params;
		auto it = expr.begin();
		_iter_begin_4355536704:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Param> _1a4770896_p = *it;
			{
				if ((!(_1a4770896_p->_method_is_self()))) {
					_18113_obj+=_1a4770896_gen_param(_1a4770896_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4355536704:;
			++it;
			goto _iter_begin_4355536704;
		}
		_iter_end_4355536704:;
	}
	_18113_obj=_18113_obj.slice(0LL,_18113_obj.len() - 1LL);
	return _18113_obj + jule::Str(")", 1);
}



jule::Str _1a4770896_gen_params_ins(jule::Slice<jule::Ref<_1e1737e81_ParamIns>>& _19324_params) {
	{
		if (!((_19324_params.len() == 0LL))) { goto _case_end_4355541008; }
		_case_begin_4355541008:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4355540880;
		_case_end_4355541008:;
		if (!(((_19324_params.len() == 1LL) && _19324_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4355541104; }
		_case_begin_4355541104:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4355540880;
		_case_end_4355541104:;
		_match_end_4355540880:;
	}
	jule::Str _20213_obj = jule::Str("(", 1);
	{
		auto expr = _19324_params;
		auto it = expr.begin();
		_iter_begin_4355544880:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_ParamIns> _1a4770896_p = *it;
			{
				if ((!(_1a4770896_p->_field_decl->_method_is_self()))) {
					_20213_obj+=_1a4770896_gen_param_ins(_1a4770896_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4355544880:;
			++it;
			goto _iter_begin_4355544880;
		}
		_iter_end_4355544880:;
	}
	_20213_obj=_20213_obj.slice(0LL,_20213_obj.len() - 1LL);
	return _20213_obj + jule::Str(")", 1);
}



jule::Str _1a4770896_gen_params_prototypes(jule::Slice<jule::Ref<_1e1737e81_ParamIns>>& _21531_params) {
	{
		if (!((_21531_params.len() == 0LL))) { goto _case_end_4355549344; }
		_case_begin_4355549344:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4355548992;
		_case_end_4355549344:;
		if (!(((_21531_params.len() == 1LL) && _21531_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4355549456; }
		_case_begin_4355549456:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4355548992;
		_case_end_4355549456:;
		_match_end_4355548992:;
	}
	jule::Str _22413_obj = jule::Str("(", 1);
	{
		auto expr = _21531_params;
		auto it = expr.begin();
		_iter_begin_4355553936:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_ParamIns> _1a4770896_p = *it;
			{
				if ((!(_1a4770896_p->_field_decl->_method_is_self()))) {
					_22413_obj+=_1a4770896_gen_param_ins_prototype(_1a4770896_p);
					_22413_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_4355553936:;
			++it;
			goto _iter_begin_4355553936;
		}
		_iter_end_4355553936:;
	}
	_22413_obj=_22413_obj.slice(0LL,_22413_obj.len() - 1LL);
	return _22413_obj + jule::Str(")", 1);
}



jule::Str _1a4770896_gen_trait(jule::Ref<_1e2a1e563_Trait>& _23819_t) {
	
	jule::Str _2409_outid = _1a474688e_trait_out_ident(_23819_t);
	jule::Str _24213_obj = jule::Str("struct ", 7);
	_24213_obj+=_2409_outid;
	_24213_obj+=jule::Str(" {\n", 3);
	_24213_obj+=jule::Str("\t", 1);
	_24213_obj+=jule::Str("virtual ~", 9);
	_24213_obj+=_2409_outid;
	_24213_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto expr = _23819_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4355562512:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1a4770896_f = *it;
			{
				_24213_obj+=jule::Str("\t", 1);
				_24213_obj+=jule::Str("virtual ", 8);
				_24213_obj+=_1a4770896_gen_fn_result(_1a4770896_f);
				_24213_obj+=jule::Str(" _method_", 9);
				_24213_obj+=_1a4770896_f->_field_ident;
				_24213_obj+=_1a4770896_gen_params(_1a4770896_f->_field_params);
				_24213_obj+=jule::Str(" {", 2);
				if ((!(_1a4770896_f->_method_is_void()))) {
					_24213_obj+=jule::Str(" return {}; ", 12);
				}
				_24213_obj+=jule::Str("}\n", 2);
			}
			_iter_next_4355562512:;
			++it;
			goto _iter_begin_4355562512;
		}
		_iter_end_4355562512:;
	}
	_24213_obj+=jule::Str("};", 2);
	return _24213_obj;
}



jule::Str _1a4770896_gen_traits_tbl(jule::Ref<_1a2d05801_SymbolTable>& _26724_tbl) {
	jule::Str _26813_obj = jule::Str();
	{
		auto expr = _26724_tbl->_field_traits;
		auto it = expr.begin();
		_iter_begin_4355568736:;
		if (it != expr.end()) {
			jule::Ref<_1e2a1e563_Trait> _1a4770896_t = *it;
			{
				_26813_obj+=_1a4770896_gen_trait(_1a4770896_t);
				_26813_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4355568736:;
			++it;
			goto _iter_begin_4355568736;
		}
		_iter_end_4355568736:;
	}
	return _26813_obj;
}



jule::Str _1a4770896_gen_traits_pkg(jule::Ref<_1e2a7b966_Package>& _27724_pkg) {
	jule::Str _27813_obj = jule::Str();
	{
		auto expr = _27724_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4355572208:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1a4770896_tbl = *it;
			{
				_27813_obj+=_1a4770896_gen_traits_tbl(_1a4770896_tbl);
			}
			_iter_next_4355572208:;
			++it;
			goto _iter_begin_4355572208;
		}
		_iter_end_4355572208:;
	}
	return _27813_obj;
}



jule::Str _1a4770896_gen_traits(jule::Ref<_1e10d0a8d_IR>& _28620_ir) {
	jule::Str _28713_obj = jule::Str();
	{
		auto expr = _28620_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4355575488:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1a4770896_u = *it;
			{
				if ((!(_1a4770896_u->_field_cpp_linked))) {
					_28713_obj+=_1a4770896_gen_traits_pkg(_1a4770896_u->_field_package);
				}
			}
			_iter_next_4355575488:;
			++it;
			goto _iter_begin_4355575488;
		}
		_iter_end_4355575488:;
	}
	_28713_obj+=_1a4770896_gen_traits_pkg(_28620_ir->_field_main);
	return _28713_obj;
}



jule::Str _1a4770896_gen_trait_prototype(jule::Ref<_1e2a1e563_Trait>& _29825_t) {
	jule::Str _29913_obj = jule::Str("struct ", 7);
	_29913_obj+=_1a474688e_trait_out_ident(_29825_t);
	_29913_obj+=jule::Str(";", 1);
	return _29913_obj;
}



jule::Str _1a4770896_gen_trait_prototypes(jule::Ref<_1e2a7b966_Package>& _30630_p) {
	jule::Str _30713_obj = jule::Str();
	{
		auto expr = _30630_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4355582352:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1a4770896_f = *it;
			{
				{
					auto expr = _1a4770896_f->_field_traits;
					auto it = expr.begin();
					_iter_begin_4355584176:;
					if (it != expr.end()) {
						jule::Ref<_1e2a1e563_Trait> _1a4770896_t = *it;
						{
							if (_1a4770896_t->_field_token._field_id != 0LLU) {
								_30713_obj+=_1a4770896_gen_trait_prototype(_1a4770896_t);
								_30713_obj+=jule::Str("\n", 1);
							}
						}
						_iter_next_4355584176:;
						++it;
						goto _iter_begin_4355584176;
					}
					_iter_end_4355584176:;
				}
			}
			_iter_next_4355582352:;
			++it;
			goto _iter_begin_4355582352;
		}
		_iter_end_4355582352:;
	}
	return _30713_obj;
}



jule::Str _1a4770896_gen_struct_plain_prototype(jule::Ref<_1e177440c_Struct>& _32036_s) {
	jule::Str _32113_obj = jule::Str();
	{
		auto expr = _32036_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4355583376:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_StructIns> _1a4770896_ins = *it;
			{
				_32113_obj+=jule::Str("\nstruct ", 8);
				_32113_obj+=_1a474688e_struct_ins_out_ident(_1a4770896_ins);
				_32113_obj+=jule::Str(";", 1);
				_32113_obj+=jule::Str("\n", 1);
			}
			_iter_next_4355583376:;
			++it;
			goto _iter_begin_4355583376;
		}
		_iter_end_4355583376:;
	}
	return _32113_obj;
}



jule::Str _1a4770896_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_1e177440c_Struct>>& _33237_structs) {
	jule::Str _33313_obj = jule::Str();
	{
		auto expr = _33237_structs;
		auto it = expr.begin();
		_iter_begin_4355591392:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1a4770896_s = *it;
			{
				if ((!(_1a4770896_s->_field_cpp_linked)) && (_1a4770896_s->_field_token._field_id != 0LLU)) {
					_33313_obj+=_1a4770896_gen_struct_plain_prototype(_1a4770896_s);
					_33313_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4355591392:;
			++it;
			goto _iter_begin_4355591392;
		}
		_iter_end_4355591392:;
	}
	return _33313_obj;
}



jule::Str _1a4770896_gen_struct_traits(jule::Ref<_1e177440c_Struct>& _34423_s) {
	if (_34423_s->_field_implements.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _34913_obj = jule::Str(": ", 2);
	{
		auto expr = _34423_s->_field_implements;
		auto it = expr.begin();
		_iter_begin_4355597328:;
		if (it != expr.end()) {
			jule::Ref<_1e2a1e563_Trait> _1a4770896_i = *it;
			{
				_34913_obj+=jule::Str("public ", 7);
				_34913_obj+=_1a474688e_trait_out_ident(_1a4770896_i);
				_34913_obj+=jule::Str(",", 1);
			}
			_iter_next_4355597328:;
			++it;
			goto _iter_begin_4355597328;
		}
		_iter_end_4355597328:;
	}
	_34913_obj=_34913_obj.slice(0LL,_34913_obj.len() - 1LL);
	return _34913_obj;
}



jule::Str _1a4770896_gen_field_decl(jule::Ref<_1e177440c_FieldIns>& _36024_f) {
	jule::Str _36113_obj = _1a4772b73_gen_type_kind(_36024_f->_field_kind);
	_36113_obj+=jule::Str(" ", 1);
	_36113_obj+=_1a474688e_field_out_ident(_36024_f->_field_decl);
	_36113_obj+=jule::Str("{", 1);
	_36113_obj+=_1a2c9bae9_get_init_expr(_36024_f->_field_kind);
	_36113_obj+=jule::Str("}", 1);
	_36113_obj+=jule::Str(";", 1);
	return _36113_obj;
}



jule::Str _1a4770896_gen_struct_self_field_type_kind(jule::Ref<_1e177440c_StructIns>& _37141_s) {
	return _1a4772b73_as_ref_kind(_1a4772b73_gen_struct_kind_ins(_37141_s));
}



jule::Str _1a4770896_gen_struct_self_field(jule::Ref<_1e177440c_StructIns>& _37631_s) {
	jule::Str _37713_obj = _1a4770896_gen_struct_self_field_type_kind(_37631_s);
	_37713_obj+=jule::Str(" self{};", 8);
	return _37713_obj;
}



jule::Str _1a4770896_gen_struct_self_field_init_st(jule::Ref<_1e177440c_StructIns>& _38239_s) {
	jule::Str _38313_obj = jule::Str("this->self = ", 13);
	_38313_obj+=_1a4770896_gen_struct_self_field_type_kind(_38239_s);
	_38313_obj+=jule::Str("::make(this, nullptr);", 22);
	return _38313_obj;
}



jule::Str _1a4770896_gen_struct_constructor(jule::Ref<_1e177440c_StructIns>& _38932_s) {
	jule::Str _39013_obj = _1a474688e_struct_ins_out_ident(_38932_s);
	_39013_obj+=jule::Str("(", 1);
	if (_38932_s->_field_fields.len() > 0LL) {
		{
			auto expr = _38932_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4355611984:;
			if (it != expr.end()) {
				jule::Ref<_1e177440c_FieldIns> _1a4770896_f = *it;
				{
					_39013_obj+=_1a4772b73_gen_type_kind(_1a4770896_f->_field_kind);
					_39013_obj+=jule::Str(" __param_", 9);
					_39013_obj+=_1a4770896_f->_field_decl->_field_ident;
					_39013_obj+=jule::Str(", ", 2);
				}
				_iter_next_4355611984:;
				++it;
				goto _iter_begin_4355611984;
			}
			_iter_end_4355611984:;
		}
		_39013_obj=_39013_obj.slice(0LL,_39013_obj.len() - 2LL);
	} else {
		_39013_obj+=jule::Str("void", 4);
	}
	_39013_obj+=jule::Str(")", 1);
	if (_38932_s->_field_fields.len() > 0LL) {
		_39013_obj+=jule::Str(": ", 2);
		{
			auto expr = _38932_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4355616752:;
			if (it != expr.end()) {
				jule::Ref<_1e177440c_FieldIns> _1a4770896_f = *it;
				{
					_39013_obj+=_1a474688e_field_out_ident(_1a4770896_f->_field_decl);
					_39013_obj+=jule::Str("(", 1);
					_39013_obj+=jule::Str("__param_", 8);
					_39013_obj+=_1a4770896_f->_field_decl->_field_ident;
					_39013_obj+=jule::Str("), ", 3);
				}
				_iter_next_4355616752:;
				++it;
				goto _iter_begin_4355616752;
			}
			_iter_end_4355616752:;
		}
		_39013_obj=_39013_obj.slice(0LL,_39013_obj.len() - 2LL);
	}
	_39013_obj+=jule::Str(" {", 2);
	if (_38932_s->_field_decl->_method_has_ref_accessible()) {
		_39013_obj+=jule::Str("\n", 1);
		_1a4770896_add_indent();
		_39013_obj+=_1a4770896_indent();
		_39013_obj+=_1a4770896_gen_struct_self_field_init_st(_38932_s);
		_39013_obj+=jule::Str("\n", 1);
		_1a4770896_done_indent();
		_39013_obj+=jule::Str("\n", 1);
		_39013_obj+=_1a4770896_indent();
	}
	_39013_obj+=jule::Str("}", 1);
	return _39013_obj;
}



jule::Str _1a4770896_gen_struct_destructor(jule::Ref<_1e177440c_StructIns>& _43331_s) {
	jule::Bool _4349_disposed = _43331_s->_field_decl->_method_is_implements(_1a36e0bad_BUILTIN_TRAIT_DISPOSE);
	jule::Bool _4359_ref_access = _43331_s->_field_decl->_method_has_ref_accessible();
	if ((!(_4359_ref_access)) && (!(_4349_disposed))) {
		return jule::Str();
	}
	jule::Str _44113_obj = jule::Str("~", 1);
	_44113_obj+=_1a474688e_struct_ins_out_ident(_43331_s);
	_44113_obj+=jule::Str("(void) { ", 9);
	if (_4349_disposed) {
		jule::Ref<_1e1737e81_Fn> _44613_dispose_method = _43331_s->_method_find_method(jule::Str("dispose", 7),false);
		_44113_obj+=jule::Str("this->", 6);
		_44113_obj+=_1a474688e_fn_out_ident(_44613_dispose_method);
		_44113_obj+=jule::Str("(); ", 4);
	}
	if (_4359_ref_access) {
		_44113_obj+=jule::Str("this->self.ref = nullptr; ", 26);
	}
	_44113_obj+=jule::Str("}", 1);
	return _44113_obj;
}



jule::Str _1a4770896_gen_struct_operators(jule::Ref<_1e177440c_StructIns>& _46030_s) {
	jule::Str _4619_out_ident = _1a474688e_struct_ins_out_ident(_46030_s);
	jule::Str _46213_obj = jule::Str();
	_46213_obj+=_1a4770896_indent();
	if (_1ec945d31_OPT_INLINE) {
		_46213_obj+=jule::Str("inline ", 7);
	}
	_46213_obj+=jule::Str("bool operator==(const ", 22);
	_46213_obj+=_4619_out_ident;
	_46213_obj+=jule::Str(" &_Src) const {", 15);
	if (_46030_s->_field_fields.len() > 0LL) {
		_1a4770896_add_indent();
		_46213_obj+=jule::Str("\n", 1);
		_46213_obj+=_1a4770896_indent();
		_46213_obj+=jule::Str("return ", 7);
		_1a4770896_add_indent();
		jule::Int _47717_n = 0LL;
		{
			auto expr = _46030_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4355641168:;
			if (it != expr.end()) {
				jule::Ref<_1e177440c_FieldIns> _1a4770896_f = *it;
				{
					jule::Ref<_1e177440c_StructIns> _48017_strct = _1a4770896_f->_field_kind->_method_strct();
					if ((jule::real(_48017_strct) && jule::real(_48017_strct->_field_decl)) && _48017_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_4355641168;
					}
					(_47717_n)++;
					_46213_obj+=jule::Str("\n", 1);
					_46213_obj+=_1a4770896_indent();
					_46213_obj+=jule::Str("this->", 6);
					jule::Str _48917_f_ident = _1a474688e_field_out_ident(_1a4770896_f->_field_decl);
					_46213_obj+=_48917_f_ident;
					_46213_obj+=jule::Str(" == _Src.", 9);
					_46213_obj+=_48917_f_ident;
					_46213_obj+=jule::Str(" &&", 3);
				}
				_iter_next_4355641168:;
				++it;
				goto _iter_begin_4355641168;
			}
			_iter_end_4355641168:;
		}
		_1a4770896_done_indent();
		if (_47717_n > 0LL) {
			_46213_obj=_46213_obj.slice(0LL,_46213_obj.len() - 3LL);
		} else {
			_46213_obj+=jule::Str("true", 4);
		}
		_46213_obj+=jule::Str(";\n", 2);
		_1a4770896_done_indent();
		_46213_obj+=_1a4770896_indent();
		_46213_obj+=jule::Str("}", 1);
	} else {
		_46213_obj+=jule::Str(" return true; }", 15);
	}
	_46213_obj+=jule::Str("\n\n", 2);
	_46213_obj+=_1a4770896_indent();
	if (_1ec945d31_OPT_INLINE) {
		_46213_obj+=jule::Str("inline ", 7);
	}
	_46213_obj+=jule::Str("bool operator!=(const ", 22);
	_46213_obj+=_4619_out_ident;
	_46213_obj+=jule::Str(" &_Src) const { return !this->operator==(_Src); }", 49);
	return _46213_obj;
}



jule::Str _1a4770896_gen_struct_derive_defs_prototypes(jule::Ref<_1e177440c_StructIns>& _51939_s) {
	jule::Str _52013_obj = jule::Str();
	if (_51939_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_52013_obj+=_1a4770896_indent();
		_52013_obj+=_1a2c75881_get_derive_fn_decl_clone(_51939_s->_field_decl);
		_52013_obj+=jule::Str(";\n\n", 3);
	}
	return _52013_obj;
}



jule::Str _1a4770896_gen_struct_ins_prototype(jule::Ref<_1e177440c_StructIns>& _53134_s) {
	jule::Str _53213_obj = jule::Str("struct ", 7);
	jule::Str _5339_out_ident = _1a474688e_struct_ins_out_ident(_53134_s);
	_53213_obj+=_5339_out_ident;
	_53213_obj+=_1a4770896_gen_struct_traits(_53134_s->_field_decl);
	_53213_obj+=jule::Str(" {\n", 3);
	jule::Bool _5399_ref_access = _53134_s->_field_decl->_method_has_ref_accessible();
	_1a4770896_add_indent();
	if (_5399_ref_access) {
		_53213_obj+=_1a4770896_indent();
		_53213_obj+=_1a4770896_gen_struct_self_field(_53134_s);
		_53213_obj+=jule::Str("\n\n", 2);
	}
	if (_53134_s->_field_fields.len() > 0LL) {
		{
			auto expr = _53134_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4355666160:;
			if (it != expr.end()) {
				jule::Ref<_1e177440c_FieldIns> _1a4770896_f = *it;
				{
					_53213_obj+=_1a4770896_indent();
					_53213_obj+=_1a4770896_gen_field_decl(_1a4770896_f);
					_53213_obj+=jule::Str("\n", 1);
				}
				_iter_next_4355666160:;
				++it;
				goto _iter_begin_4355666160;
			}
			_iter_end_4355666160:;
		}
		_53213_obj+=jule::Str("\n\n", 2);
		_53213_obj+=_1a4770896_indent();
		_53213_obj+=_1a4770896_gen_struct_constructor(_53134_s);
		_53213_obj+=jule::Str("\n\n", 2);
	}
	_53213_obj+=_1a4770896_indent();
	_53213_obj+=_1a4770896_gen_struct_destructor(_53134_s);
	_53213_obj+=jule::Str("\n\n", 2);
	_53213_obj+=_1a4770896_indent();
	_53213_obj+=_5339_out_ident;
	if (_5399_ref_access) {
		_53213_obj+=jule::Str("(void) { ", 9);
		_53213_obj+=_1a4770896_gen_struct_self_field_init_st(_53134_s);
		_53213_obj+=jule::Str(" }\n\n", 4);
	} else {
		_53213_obj+=jule::Str("(void) = default;\n\n", 19);
	}
	{
		auto expr = _53134_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4355663760:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1a4770896_f = *it;
			{
				_53213_obj+=_1a4770896_gen_fn_prototype(_1a4770896_f,true);
				_53213_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4355663760:;
			++it;
			goto _iter_begin_4355663760;
		}
		_iter_end_4355663760:;
	}
	_53213_obj+=_1a4770896_gen_struct_derive_defs_prototypes(_53134_s);
	_53213_obj+=_1a4770896_gen_struct_operators(_53134_s);
	_53213_obj+=jule::Str("\n", 1);
	_1a4770896_done_indent();
	_53213_obj+=_1a4770896_indent() + jule::Str("};", 2);
	return _53213_obj;
}



jule::Str _1a4770896_gen_struct_prototype(jule::Ref<_1e177440c_Struct>& _59030_s) {
	jule::Str _59113_obj = jule::Str();
	{
		auto expr = _59030_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4355677584:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_StructIns> _1a4770896_ins = *it;
			{
				_59113_obj+=_1a4770896_gen_struct_ins_prototype(_1a4770896_ins);
				_59113_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4355677584:;
			++it;
			goto _iter_begin_4355677584;
		}
		_iter_end_4355677584:;
	}
	return _59113_obj;
}



jule::Str _1a4770896_gen_struct_prototypes(jule::Slice<jule::Ref<_1e177440c_Struct>>& _60031_structs) {
	jule::Str _60113_obj = jule::Str();
	{
		auto expr = _60031_structs;
		auto it = expr.begin();
		_iter_begin_4355680752:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1a4770896_s = *it;
			{
				if ((!(_1a4770896_s->_field_cpp_linked)) && (_1a4770896_s->_field_token._field_id != 0LLU)) {
					_60113_obj+=_1a4770896_gen_struct_prototype(_1a4770896_s);
					_60113_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4355680752:;
			++it;
			goto _iter_begin_4355680752;
		}
		_iter_end_4355680752:;
	}
	return _60113_obj;
}



jule::Str _1a4770896_gen_fn_decl_head(jule::Ref<_1e1737e81_FnIns>& _61126_f,jule::Bool _61137_method) {
	jule::Str _61213_obj = jule::Str();
	if (_61137_method && _61126_f->_field_decl->_field_statically) {
		_61213_obj+=jule::Str("static ", 7);
	}
	if (_1ec945d31_OPT_INLINE && (!(_61126_f->_field_decl->_method_is_entry_point()))) {
		_61213_obj+=jule::Str("inline ", 7);
	}
	_61213_obj+=_1a4770896_gen_fn_ins_result(_61126_f) + jule::Str(" ", 1);
	if ((!(_61137_method)) && jule::real(_61126_f->_field_decl->_field_owner)) {
		_61213_obj+=_1a474688e_struct_ins_out_ident(_61126_f->_field_owner);
		_61213_obj+=jule::Str("::", 2);
	}
	_61213_obj+=_1a474688e_fn_ins_out_ident(_61126_f);
	return _61213_obj;
}



jule::Str _1a4770896_gen_fn_prototype(jule::Ref<_1e1737e81_Fn>& _63326_f,jule::Bool _63334_method) {
	jule::Str _63413_obj = jule::Str();
	{
		auto expr = _63326_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4355693728:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_FnIns> _1a4770896_c = *it;
			{
				_63413_obj+=_1a4770896_indent();
				_63413_obj+=_1a4770896_gen_fn_decl_head(_1a4770896_c,_63334_method);
				_63413_obj+=_1a4770896_gen_params_prototypes(_1a4770896_c->_field_params);
				_63413_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4355693728:;
			++it;
			goto _iter_begin_4355693728;
		}
		_iter_end_4355693728:;
	}
	return _63413_obj;
}



jule::Str _1a4770896_gen_fn_prototypes(jule::Ref<_1e2a7b966_Package>& _64527_pkg) {
	jule::Str _64613_obj = jule::Str();
	{
		auto expr = _64527_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4355698400:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1a4770896_file = *it;
			{
				{
					auto expr = _1a4770896_file->_field_funcs;
					auto it = expr.begin();
					_iter_begin_4355700224:;
					if (it != expr.end()) {
						jule::Ref<_1e1737e81_Fn> _1a4770896_f = *it;
						{
							if ((!(_1a4770896_f->_field_cpp_linked)) && (_1a4770896_f->_field_token._field_id != 0LLU)) {
								_64613_obj+=_1a4770896_gen_fn_prototype(_1a4770896_f,false);
							}
						}
						_iter_next_4355700224:;
						++it;
						goto _iter_begin_4355700224;
					}
					_iter_end_4355700224:;
				}
			}
			_iter_next_4355698400:;
			++it;
			goto _iter_begin_4355698400;
		}
		_iter_end_4355698400:;
	}
	return _64613_obj;
}



jule::Str _1a4770896_gen_prototypes(jule::Ref<_1e10d0a8d_IR>& _65824_ir) {
	jule::Str _65913_obj = jule::Str();
	{
		auto expr = _65824_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4355704160:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1a4770896_u = *it;
			{
				if ((!(_1a4770896_u->_field_cpp_linked))) {
					_65913_obj+=_1a4770896_gen_trait_prototypes(_1a4770896_u->_field_package);
				}
			}
			_iter_next_4355704160:;
			++it;
			goto _iter_begin_4355704160;
		}
		_iter_end_4355704160:;
	}
	_65913_obj+=_1a4770896_gen_trait_prototypes(_65824_ir->_field_main);
	_65913_obj+=_1a4770896_gen_struct_plain_prototypes(_65824_ir->_field_ordered._field_structs);
	_65913_obj+=_1a4770896_gen_traits(_65824_ir);
	_65913_obj+=jule::Str("\n", 1);
	_65913_obj+=_1a4770896_gen_struct_prototypes(_65824_ir->_field_ordered._field_structs);
	{
		auto expr = _65824_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4355709424:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1a4770896_u = *it;
			{
				if ((!(_1a4770896_u->_field_cpp_linked))) {
					_65913_obj+=_1a4770896_gen_fn_prototypes(_1a4770896_u->_field_package);
				}
			}
			_iter_next_4355709424:;
			++it;
			goto _iter_begin_4355709424;
		}
		_iter_end_4355709424:;
	}
	_65913_obj+=_1a4770896_gen_fn_prototypes(_65824_ir->_field_main);
	return _65913_obj;
}



jule::Str _1a4770896_gen_var_init_expr(jule::Ref<_1ba80e105_Var>& _68727_v,jule::Str _68736_init) {
	jule::Str _68813_obj = jule::Str();
	if (_68727_v->_field_statically) {
		_68813_obj+=jule::Str("static ", 7);
	}
	_68813_obj+=_1a4772b73_gen_type_kind(_68727_v->_field_kind->_field_kind);
	_68813_obj+=jule::Str(" ", 1);
	if (_68727_v->_field_reference) {
		_68813_obj+=jule::Str("&", 1);
	}
	_68813_obj+=_1a474688e_var_out_ident(_68727_v);
	if (_68736_init != jule::Str()) {
		_68813_obj+=jule::Str(" = ", 3);
		_68813_obj+=_68736_init;
	}
	_68813_obj+=jule::Str(";", 1);
	return _68813_obj;
}



jule::Str _1a4770896_gen_var(jule::Ref<_1ba80e105_Var> _70816_v) {
	if (_1e15a2bb9_is_ignore_ident(_70816_v->_field_ident)) {
		return jule::Str();
	}
	if (jule::real(_70816_v->_field_value) && jule::real(_70816_v->_field_value->_field_expr)) {
		if (_70816_v->_field_value->_field_data->_field_model != nullptr) {
			return _1a4770896_gen_var_init_expr(_70816_v,_1a2c9bae9_gen_val(_70816_v->_field_value));
		}
		return _1a4770896_gen_var_init_expr(_70816_v,jule::Str());
	}
	return _1a4770896_gen_var_init_expr(_70816_v,_1a2c9bae9_get_init_expr(_70816_v->_field_kind->_field_kind));
}



jule::Str _1a4770896_gen_globals(jule::Slice<jule::Ref<_1ba80e105_Var>>& _72321_globals) {
	jule::Str _72413_obj = jule::Str();
	{
		auto expr = _72321_globals;
		auto it = expr.begin();
		_iter_begin_4355725936:;
		if (it != expr.end()) {
			jule::Ref<_1ba80e105_Var> _1a4770896_v = *it;
			{
				if (_1a4770896_v->_field_token._field_id != 0LLU) {
					_72413_obj+=_1a4770896_gen_var(_1a4770896_v);
					_72413_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4355725936:;
			++it;
			goto _iter_begin_4355725936;
		}
		_iter_end_4355725936:;
	}
	return _72413_obj;
}



jule::Str _1a4770896_gen_fn(jule::Ref<_1e1737e81_Fn>& _73716_f) {
	jule::Str _73813_obj = jule::Str();
	{
		auto expr = _73716_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4355730320:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_FnIns> _1a4770896_ins = *it;
			{
				_73813_obj+=_1a4770896_gen_fn_decl_head(_1a4770896_ins,false);
				_73813_obj+=_1a4770896_gen_params_ins(_1a4770896_ins->_field_params);
				_73813_obj+=jule::Str(" ", 1);
				_73813_obj+=_1ba858528_gen_fn_scope(_1a4770896_ins);
				_73813_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4355730320:;
			++it;
			goto _iter_begin_4355730320;
		}
		_iter_end_4355730320:;
	}
	return _73813_obj;
}



jule::Str _1a4770896_gen_pkg_fns(jule::Ref<_1e2a7b966_Package>& _75021_p) {
	jule::Str _75113_obj = jule::Str();
	{
		auto expr = _75021_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4355734880:;
		if (it != expr.end()) {
			jule::Ref<_1a2d05801_SymbolTable> _1a4770896_f = *it;
			{
				{
					auto expr = _1a4770896_f->_field_funcs;
					auto it = expr.begin();
					_iter_begin_4355736704:;
					if (it != expr.end()) {
						jule::Ref<_1e1737e81_Fn> _1a4770896_f = *it;
						{
							if ((!(_1a4770896_f->_field_cpp_linked)) && (_1a4770896_f->_field_token._field_id != 0LLU)) {
								_75113_obj+=_1a4770896_gen_fn(_1a4770896_f);
								_75113_obj+=jule::Str("\n\n", 2);
							}
						}
						_iter_next_4355736704:;
						++it;
						goto _iter_begin_4355736704;
					}
					_iter_end_4355736704:;
				}
			}
			_iter_next_4355734880:;
			++it;
			goto _iter_begin_4355734880;
		}
		_iter_end_4355734880:;
	}
	return _75113_obj;
}



jule::Str _1a4770896_gen_struct_method_defs(jule::Ref<_1e177440c_StructIns>& _76432_s) {
	jule::Str _76513_obj = jule::Str();
	{
		auto expr = _76432_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4355740864:;
		if (it != expr.end()) {
			jule::Ref<_1e1737e81_Fn> _1a4770896_f = *it;
			{
				_76513_obj+=_1a4770896_indent();
				_76513_obj+=_1a4770896_gen_fn(_1a4770896_f);
				_76513_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4355740864:;
			++it;
			goto _iter_begin_4355740864;
		}
		_iter_end_4355740864:;
	}
	return _76513_obj;
}



jule::Str _1a4770896_gen_struct_ostream(jule::Ref<_1e177440c_StructIns>& _77528_s) {
	jule::Str _77613_obj = jule::Str();
	_77613_obj+=_1a4770896_indent();
	_77613_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_77613_obj+=_1a474688e_struct_ins_out_ident(_77528_s);
	_77613_obj+=jule::Str(" &_Src) {\n", 10);
	_1a4770896_add_indent();
	_77613_obj+=_1a4770896_indent();
	_77613_obj+=jule::Str("_Stream << \"", 12);
	_77613_obj+=_77528_s->_field_decl->_field_ident;
	_77613_obj+=jule::Str("{\";\n", 4);
	{
		auto expr = _77528_s->_field_fields;
		auto it = expr.begin();
		_iter_begin_4355747392:;
		if (it != expr.end()) {
			jule::Int _1a4770896_i = it - expr.begin();
			jule::Ref<_1e177440c_FieldIns> _1a4770896_f = *it;
			{
				_77613_obj+=_1a4770896_indent();
				_77613_obj+=jule::Str("_Stream << \"", 12);
				_77613_obj+=_1a4770896_f->_field_decl->_field_ident;
				_77613_obj+=jule::Str(":", 1);
				jule::Ref<_1e177440c_StructIns> _79413_strct = _1a4770896_f->_field_kind->_method_strct();
				if ((jule::real(_79413_strct) && jule::real(_79413_strct->_field_decl)) && _79413_strct->_field_decl->_field_cpp_linked) {
					_77613_obj+=jule::Str(" cpp.", 5);
					_77613_obj+=_1a474688e_field_out_ident(_1a4770896_f->_field_decl);
					_77613_obj+=jule::Str("\"", 1);
				} else {
					_77613_obj+=jule::Str("\" << _Src.", 10);
					_77613_obj+=_1a474688e_field_out_ident(_1a4770896_f->_field_decl);
				}
				if ((_1a4770896_i + 1LL) < _77528_s->_field_fields.len()) {
					_77613_obj+=jule::Str(" << \", \"", 8);
				}
				_77613_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4355747392:;
			++it;
			_1a4770896_i++;
			goto _iter_begin_4355747392;
		}
		_iter_end_4355747392:;
	}
	_77613_obj+=_1a4770896_indent();
	_77613_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_77613_obj+=_1a4770896_indent();
	_77613_obj+=jule::Str("return _Stream;\n", 16);
	_1a4770896_done_indent();
	_77613_obj+=_1a4770896_indent();
	_77613_obj+=jule::Str("}", 1);
	return _77613_obj;
}



jule::Str _1a4770896_gen_struct_derive_defs(jule::Ref<_1e177440c_StructIns>& _81932_s) {
	jule::Str _82013_obj = jule::Str();
	if (_81932_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_82013_obj+=_1a4770896_indent();
		_82013_obj+=_1a2c75881_get_derive_fn_def_clone(_81932_s->_field_decl);
		_82013_obj+=jule::Str("{\n", 2);
		_1a4770896_add_indent();
		_82013_obj+=_1a4770896_indent();
		_82013_obj+=_1a4772b73_gen_struct_kind_ins(_81932_s);
		_82013_obj+=jule::Str(" clone;\n", 8);
		{
			auto expr = _81932_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4355761664:;
			if (it != expr.end()) {
				jule::Ref<_1e177440c_FieldIns> _1a4770896_f = *it;
				{
					jule::Str _83117_ident = _1a474688e_field_out_ident(_1a4770896_f->_field_decl);
					_82013_obj+=_1a4770896_indent();
					_82013_obj+=jule::Str("clone.", 6);
					_82013_obj+=_83117_ident;
					_82013_obj+=jule::Str(" = jule::clone(this->", 21);
					_82013_obj+=_83117_ident;
					_82013_obj+=jule::Str(");\n", 3);
				}
				_iter_next_4355761664:;
				++it;
				goto _iter_begin_4355761664;
			}
			_iter_end_4355761664:;
		}
		_82013_obj+=_1a4770896_indent();
		_82013_obj+=jule::Str("return clone;\n", 14);
		_1a4770896_done_indent();
		_82013_obj+=_1a4770896_indent();
		_82013_obj+=jule::Str("}", 1);
	}
	return _82013_obj;
}



jule::Str _1a4770896_gen_struct_ins(jule::Ref<_1e177440c_StructIns>& _85124_s) {
	jule::Str _85213_obj = _1a4770896_gen_struct_method_defs(_85124_s);
	_85213_obj+=jule::Str("\n\n", 2);
	_85213_obj+=_1a4770896_gen_struct_derive_defs(_85124_s);
	_85213_obj+=jule::Str("\n\n", 2);
	_85213_obj+=_1a4770896_gen_struct_ostream(_85124_s);
	return _85213_obj;
}



jule::Str _1a4770896_gen_struct(jule::Ref<_1e177440c_Struct>& _86120_s) {
	jule::Str _86213_obj = jule::Str();
	{
		auto expr = _86120_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4355772688:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_StructIns> _1a4770896_ins = *it;
			{
				_86213_obj+=_1a4770896_gen_struct_ins(_1a4770896_ins);
				_86213_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4355772688:;
			++it;
			goto _iter_begin_4355772688;
		}
		_iter_end_4355772688:;
	}
	return _86213_obj;
}



jule::Str _1a4770896_gen_structs(jule::Slice<jule::Ref<_1e177440c_Struct>>& _87121_structs) {
	jule::Str _87213_obj = jule::Str();
	{
		auto expr = _87121_structs;
		auto it = expr.begin();
		_iter_begin_4355775856:;
		if (it != expr.end()) {
			jule::Ref<_1e177440c_Struct> _1a4770896_s = *it;
			{
				if ((!(_1a4770896_s->_field_cpp_linked)) && (_1a4770896_s->_field_token._field_id != 0LLU)) {
					_87213_obj+=_1a4770896_gen_struct(_1a4770896_s);
					_87213_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_4355775856:;
			++it;
			goto _iter_begin_4355775856;
		}
		_iter_end_4355775856:;
	}
	return _87213_obj;
}



jule::Str _1a4770896_gen_fns(jule::Ref<_1e10d0a8d_IR>& _88317_ir) {
	jule::Str _88413_obj = jule::Str();
	{
		auto expr = _88317_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4355780720:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1a4770896_u = *it;
			{
				if ((!(_1a4770896_u->_field_cpp_linked))) {
					_88413_obj+=_1a4770896_gen_pkg_fns(_1a4770896_u->_field_package);
				}
			}
			_iter_next_4355780720:;
			++it;
			goto _iter_begin_4355780720;
		}
		_iter_end_4355780720:;
	}
	_88413_obj+=_1a4770896_gen_pkg_fns(_88317_ir->_field_main);
	return _88413_obj;
}



void _1a4770896_push_init(jule::Ref<_1e2a7b966_Package>& _89619_pkg,jule::Str& _89639_obj) {
	
	
	jule::Ref<_1e1737e81_Fn> _9009_f = _89619_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_9009_f)))) {
		return;
	}
	_89639_obj+=jule::Str("\n\t", 2);
	_89639_obj+=_1a474688e_fn_out_ident(_9009_f);
	_89639_obj+=jule::Str("();", 3);
}



jule::Str _1a4770896_gen_init_caller(jule::Ref<_1e10d0a8d_IR>& _91125_ir) {
	jule::Str _91213_obj = jule::Str("void ", 5);
	_91213_obj+=jule::Str("__jule_call_initializers", 24);
	_91213_obj+=jule::Str("(void) {", 8);
	{
		auto expr = _91125_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4355808384:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1a4770896_u = *it;
			{
				if ((!(_1a4770896_u->_field_cpp_linked))) {
					_1a4770896_push_init(_1a4770896_u->_field_package,_91213_obj);
				}
			}
			_iter_next_4355808384:;
			++it;
			goto _iter_begin_4355808384;
		}
		_iter_end_4355808384:;
	}
	_1a4770896_push_init(_91125_ir->_field_main,_91213_obj);
	_91213_obj+=jule::Str("\n}", 2);
	return _91213_obj;
}



void _1a4770896_append_standard(jule::Str& _92729_obj_code,jule::Str _92744_compiler,jule::Str _92759_compiler_cmd) {
	_1a48b1542_AbsTime _9289_time = _1a48b1542_Time::_static_method_now()._method_abs();
	jule::Str _93013_time_str = jule::Str();
	_93013_time_str+=_1e103784c_fmt_uint(_9289_time._field_day,10LL);
	_93013_time_str+=jule::Str("/", 1);
	_93013_time_str+=_1e103784c_fmt_uint(_9289_time._field_month,10LL);
	_93013_time_str+=jule::Str("/", 1);
	_93013_time_str+=_1e103784c_fmt_uint(_9289_time._field_year,10LL);
	_93013_time_str+=jule::Str(" ", 1);
	_93013_time_str+=_1e103784c_fmt_uint(_9289_time._field_hour,10LL);
	_93013_time_str+=jule::Str(".", 1);
	_93013_time_str+=_1e103784c_fmt_uint(_9289_time._field_minute,10LL);
	_93013_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _94213_s = jule::Str();
	_94213_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_94213_s+=jule::Str("// JuleC version: ", 18);
	_94213_s+=jule::Str("beta 0.0.5 @master", 18);
	_94213_s+=jule::Str("\n", 1);
	_94213_s+=jule::Str("// Date: ", 9);
	_94213_s+=_93013_time_str;
	_94213_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_94213_s+=_92744_compiler;
	_94213_s+=jule::Str(" ", 1);
	_94213_s+=_92759_compiler_cmd;
	_94213_s+=jule::Str("\n\n#include \"", 12);
	_94213_s+=_1ec9710c0_PATH_API;
	_94213_s+=jule::Str("\"\n\n", 3);
	_94213_s+=_92729_obj_code;
	_94213_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    std::set_terminate(&jule::terminate_handler);\n    jule::set_sig_handler(jule::signal_handler);\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    entry_point();\n\n    return EXIT_SUCCESS;\n}", 290);
	_92729_obj_code=_94213_s;
}



jule::Str _1a4770896_gen(jule::Ref<_1e10d0a8d_IR>& _97617_ir) {
	jule::Str _97713_obj = jule::Str();
	_97713_obj+=_1a4770896_gen_links(_97617_ir);
	_97713_obj+=jule::Str("\n", 1);
	_97713_obj+=_1a4770896_gen_prototypes(_97617_ir);
	_97713_obj+=jule::Str("\n\n", 2);
	_97713_obj+=_1a4770896_gen_globals(_97617_ir->_field_ordered._field_globals);
	_97713_obj+=jule::Str("\n", 1);
	_97713_obj+=_1a4770896_gen_structs(_97617_ir->_field_ordered._field_structs);
	_97713_obj+=_1a4770896_gen_fns(_97617_ir);
	_97713_obj+=jule::Str("\n", 1);
	_97713_obj+=_1a4770896_gen_init_caller(_97617_ir);
	_97713_obj+=jule::Str("\n", 1);
	return _97713_obj;
}



jule::Str _1ec8a717c_str_repeat(jule::Str _3015_sub,jule::Int _3029_n) {
	if (_3029_n == 0LL) {
		return jule::Str();
	}
	jule::Str _3513_s = jule::Str();
	for (; _3029_n > 0LL; (_3029_n)--) {
		{
			_3513_s+=_3015_sub;
		}
	_iter_next_4356069280:;
	}
	_iter_end_4356069280:;
	return _3513_s;
}



void _1ec8a717c_print_error_message(jule::Str _4224_msg) {
	jule::outln(_4224_msg);
}



void _1ec8a717c_help(jule::Slice<jule::Str>& _4510_args) {
	if (_4510_args.len() > 2LL) {
		_1ec8a717c_print_error_message(jule::Str("invalid command: ", 17) + _4510_args[2LL]);
		return;
	}
	jule::I64 _5113_max = _1ec8a717c_HELP_MAP[0LL][0LL].len();
	{
		auto expr = _1ec8a717c_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_4356076480:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> _1ec8a717c_k = *it;
			{
				jule::I64 _5313_n = _1ec8a717c_k[0LL].len();
				if (_5313_n > _5113_max) {
					_5113_max=_5313_n;
				}
			}
			_iter_next_4356076480:;
			++it;
			goto _iter_begin_4356076480;
		}
		_iter_end_4356076480:;
	}
	jule::Str _5913_s = jule::Str();
	
	{
		auto expr = _1ec8a717c_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_4356081392:;
		if (it != expr.end()) {
			jule::Int _1ec8a717c_i = it - expr.begin();
			jule::Array<jule::Str,2> _1ec8a717c_part = *it;
			{
				_5913_s+=_1ec8a717c_part[0LL];
				_5913_s+=_1ec8a717c_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_5113_max - _1ec8a717c_part[0LL].len()) + 5LL));
				_5913_s+=_1ec8a717c_part[1LL];
				if ((_1ec8a717c_i + 1LL) < 4LL) {
					_5913_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_4356081392:;
			++it;
			_1ec8a717c_i++;
			goto _iter_begin_4356081392;
		}
		_iter_end_4356081392:;
	}
	jule::outln(_5913_s);
}



void _1ec8a717c_version(jule::Slice<jule::Str>& _7313_args) {
	if (_7313_args.len() > 2LL) {
		_1ec8a717c_print_error_message(jule::Str("invalid command: ", 17) + _7313_args[2LL]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.5 @master", 18));
}



void _1ec8a717c_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto expr = _1ec970a4d_DISTOS;
		auto it = expr.begin();
		_iter_begin_4356091376:;
		if (it != expr.end()) {
			jule::Str _1ec8a717c_os = *it;
			{
				jule::out(_1ec8a717c_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4356091376:;
			++it;
			goto _iter_begin_4356091376;
		}
		_iter_end_4356091376:;
	}
	jule::outln(jule::Str());
}



void _1ec8a717c_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto expr = _1ec970a4d_DISTARCH;
		auto it = expr.begin();
		_iter_begin_4356094336:;
		if (it != expr.end()) {
			jule::Str _1ec8a717c_arch = *it;
			{
				jule::out(_1ec8a717c_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4356094336:;
			++it;
			goto _iter_begin_4356094336;
		}
		_iter_end_4356094336:;
	}
	jule::outln(jule::Str());
}



void _1ec8a717c_tool(jule::Slice<jule::Str>& _10310_args) {
	if (_10310_args.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_10310_args.len() > 3LL) {
		_1ec8a717c_print_error_message(jule::Str("invalid command: ", 17) + _10310_args[3LL]);
		return;
	}
	jule::Str _1149_cmd = _10310_args[2LL];
	{
		auto _match_expr{ _1149_cmd };
		if (!((jule::Str("distos", 6)) == _match_expr)) { goto _case_end_4356102480; }
		_case_begin_4356102480:;
		{
			_1ec8a717c_tool_distos();
		}
		goto _match_end_4356101648;
		_case_end_4356102480:;
		if (!((jule::Str("distarch", 8)) == _match_expr)) { goto _case_end_4356102640; }
		_case_begin_4356102640:;
		{
			_1ec8a717c_tool_distarch();
		}
		goto _match_end_4356101648;
		_case_end_4356102640:;
		_case_begin_4356097792:;
		{
			_1ec8a717c_print_error_message(jule::Str("Undefined command: ", 19) + _1149_cmd);
		}
		goto _match_end_4356101648;
		_case_end_4356097792:;
		_match_end_4356101648:;
	}
}



void _1ec8a717c_julenv(void) {
	jule::outln(jule::Str("julec version: beta 0.0.5 @master", 33));
	jule::outln(jule::Str("architecture: i386", 18));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln(jule::Str("default compiler: ", 18) + _1ec8e355e_COMPILER);
	jule::outln(jule::Str("default C++ standard: ", 22) + _1ec8e355e_CPP_STD);
}



jule::Bool _1ec8a717c_process_command(jule::Slice<jule::Str>& _13321_args) {
	{
		auto _match_expr{ _13321_args[1LL] };
		if (!((jule::Str("help", 4)) == _match_expr)) { goto _case_end_4356110368; }
		_case_begin_4356110368:;
		{
			_1ec8a717c_help(_13321_args);
		}
		goto _match_end_4356108688;
		_case_end_4356110368:;
		if (!((jule::Str("version", 7)) == _match_expr)) { goto _case_end_4356110464; }
		_case_begin_4356110464:;
		{
			_1ec8a717c_version(_13321_args);
		}
		goto _match_end_4356108688;
		_case_end_4356110464:;
		if (!((jule::Str("tool", 4)) == _match_expr)) { goto _case_end_4356110576; }
		_case_begin_4356110576:;
		{
			_1ec8a717c_tool(_13321_args);
		}
		goto _match_end_4356108688;
		_case_end_4356110576:;
		if (!((jule::Str("julenv", 6)) == _match_expr)) { goto _case_end_4356109024; }
		_case_begin_4356109024:;
		{
			_1ec8a717c_julenv();
		}
		goto _match_end_4356108688;
		_case_end_4356109024:;
		_case_begin_4356103680:;
		{
			return false;
		}
		goto _match_end_4356108688;
		_case_end_4356103680:;
		_match_end_4356108688:;
	}
	return true;
}



void _1ec8a717c_exit_err(jule::Str _14513_msg) {
	jule::outln(_14513_msg);
	_1ec9bbc86_exit(1LL);
}



void entry_point(void) {
	jule::Slice<jule::Str> _1519_args = _1d40b9c93_args();
	if (_1519_args.len() < 2LL) {
		return;
	}
	if (_1ec8a717c_process_command(_1519_args)) {
		return;
	}
	_1ec8e355e_compile_command(_1519_args);
}



void _1ec8c2285___init_common(void) {
	_1ec8e355e_COMPILER=jule::Str("clang", 5);
	_1ec8e355e_COMPILER_PATH=jule::Str("clang++", 7);
	_1ec8e355e_flagset->_method_add_var_0(_1ec8e355e_SHADOWING,jule::Str("shadowing", 9),0LL,jule::Str("Let shadowing", 13));
	_1ec8e355e_flagset->_method_add_var_0(_1ec8e355e_TRANSPILATION,jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1ec8e355e_flagset->_method_add_var_1(_1ec8e355e_COMPILER,jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1ec8e355e_flagset->_method_add_var_1(_1ec8e355e_OPT,jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1ec8e355e_flagset->_method_add_var_1(_1ec8e355e_TARGET,jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1ec8e355e_flagset->_method_add_var_1(_1ec8e355e_OUT,jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1ec8e355e_flagset->_method_add_var_0(_1ec945d31_OPT_COPY,jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1ec8e355e_flagset->_method_add_var_0(_1ec945d31_OPT_DEADCODE,jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1ec8e355e_flagset->_method_add_var_0(_1ec945d31_OPT_APPEND,jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1ec8e355e_flagset->_method_add_var_0(_1ec945d31_OPT_MATH,jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1ec8e355e_flagset->_method_add_var_0(_1ec945d31_OPT_ACCESS,jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1ec8e355e_flagset->_method_add_var_0(_1ec945d31_OPT_INLINE,jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
}



void _1ec8d7ae7___enable_vtp(void) {
	jule::Uintptr _199_h_out = _1d40585a0_get_std_handle(static_cast<jule::Uintptr>(18446744073709551605LLU));
	if (_199_h_out == jule::MAX_U64) {
		return;
	}
	jule::Int _2413_dw_mode = 0LL;
	if ((!(_1d40585a0_get_console_mode(_199_h_out,_2413_dw_mode)))) {
		return;
	}
	_2413_dw_mode|=4LL;
	_1d40585a0_set_console_mode(_199_h_out,_2413_dw_mode);
}



void _1ec8d7ae7_init(void) {
	_1ec8d7ae7___enable_vtp();
	_1ec8c2285___init_common();
}



jule::Int _1ec8e355e_system(jule::Str _5711_cmd) {
	return static_cast<jule::Int>(static_cast<jule::Int>(system(((char*)((&(_5711_cmd[0LL])))))));
}



void _1ec8e355e_write_output(jule::Str _6117_path,jule::Str _6128_content) {
	jule::Str _629_dir = _1ec9a2585_dir(_6117_path);
	jule::Int _6417_err;
	std::tie(std::ignore,_6417_err) = _1e15771dd_Status::_static_method_of(_629_dir);
	if (_6417_err != 0LLU) {
		_6417_err=_1e15268c9_Directory::_static_method_create(_629_dir);
		if (_6417_err != 0LLU) {
			_1ec8a717c_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	_6417_err=_1e159479e_File::_static_method_write(_6117_path,static_cast<jule::Slice<jule::U8>>(_6128_content),432LL);
	if (_6417_err != 0LLU) {
		_1ec8a717c_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
}



void _1ec8e355e_clear_objects(void) {
	if (_1e159479e_File::_static_method_remove(_1ec8e355e_get_compile_path()) != 0LLU) {
		jule::outln(jule::Str("a problem occurs when object cleaning", 37));
		return;
	}
	_1e15268c9_Directory::_static_method_remove(_1ec8e355e_OUT_DIR);
}



void _1ec8e355e_compile_ir(jule::Str _9215_compiler,jule::Str _9230_compiler_cmd) {
	jule::Int _939_status = _1ec8e355e_system((_9215_compiler + jule::Str(" ", 1)) + _9230_compiler_cmd);
	if (_939_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_939_status);
		_1ec8a717c_exit_err(jule::Str());
	}
	_1ec8e355e_clear_objects();
}



void _1ec8e355e_do_spell(jule::Str _10413_obj,jule::Str _10423_compiler,jule::Str _10438_compiler_cmd) {
	jule::Str _1059_path = _1ec8e355e_get_compile_path();
	_1ec8e355e_write_output(_1059_path,_10413_obj);
	if ((!(_1ec8e355e_TRANSPILATION))) {
		_1ec8e355e_compile_ir(_10423_compiler,_10438_compiler_cmd);
	}
}



jule::Bool _1ec8e355e_is_cpp_source_file(jule::Str _11223_path) {
	jule::Int _1139_offset = _11223_path.rfind(jule::Str(".", 1));
	if (_1139_offset == -1LL) {
		return false;
	}
	return _1ec8e3273_is_valid_cpp_ext(_11223_path.slice(_1139_offset));
}



std::tuple<jule::Str,jule::Str> _1ec8e355e_gen_compile_cmd(jule::Str _12120_source_path,jule::Ref<_1e10d0a8d_IR>& _12139_ir) {
	jule::Str _1229_compiler = _1ec8e355e_COMPILER_PATH;
	
	
	
	jule::Str _1279_SET_STD = jule::Str("--std=", 6) + _1ec8e355e_CPP_STD;
	jule::Str _12913_cmd = jule::Str("-O0 ", 4);
	{
		auto _match_expr{ _1ec8e355e_COMPILER };
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4356221664; }
		_case_begin_4356221664:;
		{
			_12913_cmd+=jule::Str("-w ", 3);
		}
		goto _match_end_4356224816;
		_case_end_4356221664:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4356225168; }
		_case_begin_4356225168:;
		{
			_12913_cmd+=jule::Str("-Wno-everything ", 16);
		}
		goto _match_end_4356224816;
		_case_end_4356225168:;
		_match_end_4356224816:;
	}
	_12913_cmd+=_1279_SET_STD + jule::Str(" ", 1);
	{
		auto expr = _12139_ir->_field_passes;
		auto it = expr.begin();
		_iter_begin_4356227680:;
		if (it != expr.end()) {
			jule::Str _1ec8e355e_pass = *it;
			{
				_12913_cmd+=_1ec8e355e_pass + jule::Str(" ", 1);
			}
			_iter_next_4356227680:;
			++it;
			goto _iter_begin_4356227680;
		}
		_iter_end_4356227680:;
	}
	{
		auto expr = _12139_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4356227872:;
		if (it != expr.end()) {
			jule::Ref<_1e2a7b966_ImportInfo> _1ec8e355e_u = *it;
			{
				if (_1ec8e355e_u->_field_cpp_linked && _1ec8e355e_is_cpp_source_file(_1ec8e355e_u->_field_path)) {
					_12913_cmd+=_1ec8e355e_u->_field_path + jule::Str(" ", 1);
				}
			}
			_iter_next_4356227872:;
			++it;
			goto _iter_begin_4356227872;
		}
		_iter_end_4356227872:;
	}
	if (_1ec8e355e_OUT != jule::Str()) {
		_12913_cmd+=(jule::Str("-o ", 3) + _1ec8e355e_OUT) + jule::Str(" ", 1);
	}
	_12913_cmd+=_12120_source_path;
	return std::make_tuple(_1229_compiler,_12913_cmd);
}



jule::Str _1ec8e355e_get_compile_path(void) {
	return _1ec9a2585_join(jule::Slice<jule::Str>({_1ec8e355e_OUT_DIR,_1ec8e355e_OUT_NAME}));
}



void _1ec8e355e_apply_target_independent_optimizations(jule::Ref<_1e10d0a8d_IR>& _17048_ir) {
	if (_1ec945d31_OPT_DEADCODE) {
		_1ec943e0b_eliminate(_17048_ir);
	}
}



void _1ec8e355e_check_compiler_flag(void) {
	{
		auto _match_expr{ _1ec8e355e_COMPILER };
		if (!((jule::Str()) == _match_expr)) { goto _case_end_4356236576; }
		_case_begin_4356236576:;
		{
			_1ec8a717c_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_4356234768;
		_case_end_4356236576:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4356236128; }
		_case_begin_4356236128:;
		{
			_1ec8e355e_COMPILER_PATH=jule::Str("clang++", 7);
		}
		goto _match_end_4356234768;
		_case_end_4356236128:;
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4356236224; }
		_case_begin_4356236224:;
		{
			_1ec8e355e_COMPILER_PATH=jule::Str("g++", 3);
		}
		goto _match_end_4356234768;
		_case_end_4356236224:;
		_case_begin_4356235568:;
		{
			_1ec8a717c_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _1ec8e355e_COMPILER);
		}
		goto _match_end_4356234768;
		_case_end_4356235568:;
		_match_end_4356234768:;
	}
}



void _1ec8e355e_check_target_arch(jule::Str _19222_arch) {
	{
		auto expr = _1ec970a4d_DISTARCH;
		auto it = expr.begin();
		_iter_begin_4356239840:;
		if (it != expr.end()) {
			jule::Str _1ec8e355e_distarch = *it;
			{
				if (_19222_arch == _1ec8e355e_distarch) {
					return;
				}
			}
			_iter_next_4356239840:;
			++it;
			goto _iter_begin_4356239840;
		}
		_iter_end_4356239840:;
	}
	_1ec8a717c_exit_err(jule::Str("--target: unsupported/undefined architecture: ", 46) + _19222_arch);
}



void _1ec8e355e_check_target_os(jule::Str _20220_os) {
	{
		auto expr = _1ec970a4d_DISTOS;
		auto it = expr.begin();
		_iter_begin_4356243040:;
		if (it != expr.end()) {
			jule::Str _1ec8e355e_distos = *it;
			{
				if (_20220_os == _1ec8e355e_distos) {
					return;
				}
			}
			_iter_next_4356243040:;
			++it;
			goto _iter_begin_4356243040;
		}
		_iter_end_4356243040:;
	}
	_1ec8a717c_exit_err(jule::Str("--target: unsupported/undefined operating system: ", 50) + _20220_os);
}



void _1ec8e355e_check_target_flag(void) {
	if (_1ec8e355e_TARGET == jule::Str()) {
		_1ec8a717c_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2179_parts = _1ec8e355e_TARGET->split(jule::Str("-", 1),-1LL);
	if (_2179_parts.len() != 2LL) {
		_1ec8a717c_exit_err(jule::Str("--target: undefined platform target format: ", 44) + _1ec8e355e_TARGET);
	}
	jule::Str _22210_os = _2179_parts[0LL];
	jule::Str _22214_arch = _2179_parts[1LL];
	std::tie(_22210_os,_22214_arch) = std::make_tuple(_2179_parts[0LL],_2179_parts[1LL]);
	if (_22210_os != jule::Str("native", 6)) {
		_1ec8e355e_check_target_os(_22210_os);
		_1ec94303c_OS=_22210_os;
	}
	if (_22214_arch != jule::Str("native", 6)) {
		_1ec8e355e_check_target_arch(_22214_arch);
		_1ec94303c_ARCH=_22214_arch;
	}
}



void _1ec8e355e_check_opt_flag(void) {
	if (_1ec8e355e_OPT == jule::Str()) {
		_1ec8a717c_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto _match_expr{ _1ec8e355e_OPT };
		if (!((jule::Str("L0", 2)) == _match_expr)) { goto _case_end_4356256720; }
		goto _match_end_4356256640;
		_case_end_4356256720:;
		if (!((jule::Str("L1", 2)) == _match_expr)) { goto _case_end_4356257952; }
		_case_begin_4356257952:;
		{
			_1ec945d31_push_opt_level(1LLU);
		}
		goto _match_end_4356256640;
		_case_end_4356257952:;
		_case_begin_4356255264:;
		{
			_1ec8a717c_exit_err(jule::Str("--opt: invalid optimization level: ", 35) + _1ec8e355e_OPT);
		}
		goto _match_end_4356256640;
		_case_end_4356255264:;
		_match_end_4356256640:;
	}
}



void _1ec8e355e_check_flags(void) {
	_1ec8e355e_check_compiler_flag();
	_1ec8e355e_check_target_flag();
	_1ec8e355e_check_opt_flag();
	if (_1ec8e355e_SHADOWING) {
		_1ec8e355e_SEMA_FLAGS|=1LL;
	}
}



void _1ec8e355e_compile_command(jule::Slice<jule::Str>& _25821_args) {
	jule::Slice<jule::Str> _25910_content;
	jule::Str _25919_error;
	std::tie(_25910_content,_25919_error) = _1ec8e355e_flagset->_method_parse(_25821_args.slice(1LL));
	if (_25919_error != jule::Str()) {
		_1ec8a717c_exit_err(_25919_error);
	}
	_1ec8e355e_check_flags();
	if (_25910_content.len() == 0LL) {
		_1ec8a717c_exit_err(_1ec8e8025_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>({})));
	} else if (_25910_content.len() > 1LL) {
		_1ec8a717c_exit_err(jule::Str("undefined content: ", 19) + _25910_content[1LL]);
	}
	jule::Str _2719_path = _25910_content[0LL];
	jule::Ref<_1e15771dd_Status> _27410_inf;
	jule::Int _27415_err;
	std::tie(_27410_inf,_27415_err) = _1e15771dd_Status::_static_method_of(_1ec9710c0_PATH_STDLIB);
	if ((_27415_err != 0LLU) || (!(_27410_inf->_method_is_dir()))) {
		_1ec8a717c_exit_err(_1ec8e8025_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>({})));
	}
	_1e12e1320_init_flags();
	jule::Ref<_1e10d0a8d_IR> _28214_ir;
	jule::Slice<_1ec8e8025_Log> _28218_logs;
	std::tie(_28214_ir,_28218_logs) = _1e10d0a8d_IR::_static_method_build(_2719_path,_1ec8e355e_SEMA_FLAGS);
	if ((!(jule::real(_28214_ir))) && (_28218_logs == nullptr)) {
		_1ec8a717c_exit_err(_1ec8e8025_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_2719_path)})));
	}
	if (_28218_logs != nullptr) {
		_1ec8a7cd7_Logger::_static_method_print_logs(_28218_logs);
		_1ec8a717c_exit_err(jule::Str());
	}
	
	jule::Ref<_1e1737e81_Fn> _29413_f = _28214_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if ((!(jule::real(_29413_f)))) {
		_1ec8a717c_exit_err(_1ec8e8025_logf(jule::Str("entry point (main) function is not defined", 42),jule::Slice<jule::Any>({})));
	}
	_29413_f->_field_statically=true;
	_29413_f=_28214_ir->_field_main->_method_find_fn(jule::Str("init", 4),false);
	if (jule::real(_29413_f)) {
		_29413_f->_field_statically=true;
	}
	_1ec8e355e_apply_target_independent_optimizations(_28214_ir);
	_28214_ir->_method_order();
	jule::Str _31010_compiler;
	jule::Str _31020_compiler_cmd;
	std::tie(_31010_compiler,_31020_compiler_cmd) = _1ec8e355e_gen_compile_cmd(_1ec8e355e_get_compile_path(),_28214_ir);
	jule::Str _31213_obj = _1a4770896_gen(_28214_ir);
	_1a4770896_append_standard(_31213_obj,_31010_compiler,_31020_compiler_cmd);
	_1ec8e355e_do_spell(_31213_obj,_31010_compiler,_31020_compiler_cmd);
}




void __jule_call_initializers(void) {
	_1ec9710c0_init();
	_1a36e0bad_init();
	_1ec8d7ae7_init();
}

int main(int argc, char *argv[], char *envp[]) {
    std::set_terminate(&jule::terminate_handler);
    jule::set_sig_handler(jule::signal_handler);
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}